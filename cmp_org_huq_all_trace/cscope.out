cscope 15 $HOME/CMP/cmp_org_huq_all_trace               0003796820
	@MTA.h

1 #i‚de‡
MTA_H


2 
	#MTA_H


	)

3 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

4 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

5 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

8 
	#JUSTFASTFWD
 0

	)

12 
SèπSkñë⁄Ród
 (
ty≥
);

13 
GëExecSètus
 (
md_addr_t
 
pc
, md_addr_à*
bPt
);

15 #ifdef 
DO_COMPLETE_FASTFWD


16 
	#CACHE_PROFILE


	)

17 
	#BRANCH_PROFILE


	)

18 
	#STORE_PROFILE


	)

19 
	#INDIRECTJUMP_PROFILE


	)

20 
	#FREQ_PROFILE


	)

22 
ö°ExecuãdFªq
 (
md_addr_t
 
pc
);

23 
FªquícyWrôe
 ();

25 
PushMissPªdLﬂd
 (
md_addr_t
 
pc
, 
œãncy
);

26 
CacheProfWrôe
 ();

28 
ö£π_br_dú
 (
md_addr_t
 
pc
, 
dú
, 
missPªd
);

29 
BønchProfWrôe
 ();

31 
pushSt‹e
 (
md_addr_t
 
pc
, md_addr_à
addr
, 
cou¡î_t
 
sim_cy˛e
, 
width
);

32 
vîifyLﬂd
 (
md_addr_t
 
pc
, md_addr_à
addr
, 
cou¡î_t
 
sim_cy˛e
, 
width
);

33 
St‹eProfWrôe
 ();

35 
pushJump
 (
md_addr_t
 
pc
, md_addr_à
√xt_pc
);

36 
¥ötJumpSèts
 ();

41 
	#REMOVE_ILP
 1

	)

42 
	#DO_DYNAMIC_ADAPTATION
 0

	)

48 
	#MTA


	)

50 
	squõs˚Såu˘
 {

51 
md_addr_t
 
	maddªss
;

52 
	mthªadid
;

	@RC.h

1 #i‚de‡
__RC_H_


2 
	#__RC_H_


	)

4 
	~"Êp.h
"

8 
	#EXTRA
 10

	)

9 
	#SP_W
 0

	)

10 
	#SP_E
 1

	)

11 
	#SP_N
 2

	)

12 
	#SP_S
 3

	)

13 
	#SP_B
 4

	)

14 
	#SINK_W
 5

	)

15 
	#SINK_E
 6

	)

16 
	#SINK_N
 7

	)

17 
	#SINK_S
 8

	)

18 
	#SINK_B
 9

	)

22 
	#NL
 3

	)

25 
	#IFACE
 1

	)

27 
	#HSP
 2

	)

30 
	#RHO_SI
 0.01

	)

31 
	#RHO_CU
 0.0025

	)

33 
	#RHO_INT
 0.14

	)

34 
	#K_SI
 (1.0/
RHO_SI
Ë

	)

35 
	#K_CU
 (1.0/
RHO_CU
Ë

	)

36 
	#K_INT
 (1.0/
RHO_INT
Ë

	)

37 
	#SPEC_HEAT_SI
 1.75e6

	)

38 
	#SPEC_HEAT_CU
 3.55e6

	)

39 
	#SPEC_HEAT_INT
 4e6

	)

42 
	#C_FACTOR
 0.5

	)

47 
t_chù
;

48 
thîmÆ_thªshﬁd
;

51 
c_c⁄vec
;

52 
r_c⁄vec
;

53 
s_sök
;

54 
t_sök
;

57 
s_•ªadî
;

58 
t_•ªadî
;

61 
t_öãrÁ˚
;

64 
ambõ¡
;

67 
¸óã_RC_m©ri˚s
(
Êp_t
 *
Êp
, 
omô_œãøl
);

68 
°ódy_°©e_ãmp
(*
powî
, *
ãmp
, 
n_unôs
);

69 
compuã_ãmp
(*
powî
, *
ãmp
, 
n_unôs
, 
time_ñ≠£d
);

71 *
hŸ•Ÿ_ve˘‹
(
n_unôs
);

72 
˛ónup_hŸ•Ÿ
(
n_unôs
);

73 
£t_ãmp
 (*
ãmp
, 
n_unôs
, 
vÆ
);

74 
dump_ãmp
 (
Êp_t
 *
Êp
, *
ãmp
, *
fûe
);

75 
ªad_ãmp
 (
Êp_t
 *
Êp
, *
ãmp
, *
fûe
, 
˛ù
);

81 
lupdcmp
(**
a
, 
n
, *
p
);

84 
gër
(
k
, 
Wb
, 
Lb
, 
Ws
, 
t
);

87 
lusﬁve
(**
a
, 
n
, *
p
, *
b
, *
x
);

90 
rk4
(**
c
, *
y
, *
pow
, 
n
, 
h
, *
yout
);

93 *
ve˘‹
(
n
);

94 
‰ì_ve˘‹
(*
v
);

95 
dump_ve˘‹
(*
v
, 
n
);

97 *
ive˘‹
(
n
);

98 
‰ì_ive˘‹
(*
v
);

99 
dump_ive˘‹
(*
v
, 
n
);

102 **
m©rix
(
ƒ
, 
nc
);

103 
‰ì_m©rix
(**
m
, 
ƒ
);

104 
dump_m©rix
(**
m
, 
ƒ
, 
nc
);

105 
c›y_m©rix
(**
d°
, **
§c
, 
ƒ
, 
nc
);

107 **
im©rix
(
ƒ
, 
nc
);

108 
‰ì_im©rix
(**
m
, 
ƒ
);

109 
dump_im©rix
(**
m
, 
ƒ
, 
nc
);

111 
m©mu…
(**
c
, **
a
, **
b
, 
n
);

112 
m©ve˘mu…
(*
vout
, **
m
, *
vö
, 
n
);

113 
m©öv
(**
INV
, **
M
, 
n
);

	@RCutil.c

1 
	~"RC.h
"

2 
	~"Êp.h
"

3 
	~"utû.h
"

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<as£π.h
>

8 
	~<m©h.h
>

9 
	~"hódîs.h
"

19 
	$gër
(
k
, 
Wb
, 
Lb
, 
Ws
, 
t
)

21 
thëa
, 
Bi
, 
As
, 
Ab
, 
ïsû⁄
, 
èu
, 
a
, 
b
, 
œmda
, 
phi
, 
psi
, 
R•rd
;

22 
thëa
 = (
Lb
/2)/(
k
*
Wb
*
t
);

23 
As
 = 
Ws
*
t
;

24 
Ab
 = 
Wb
*
t
;

25 
a
 = 
	`sqπ
(
As
/
M_PI
);

26 
b
 = 
	`sqπ
(
Ab
/
M_PI
);

27 
ïsû⁄
 = 
a
/
b
;

28 
œmda
 = 
M_PI
+1/(
	`sqπ
(M_PI)*
ïsû⁄
);

29 
Bi
 = 1/(
M_PI
*
k
*
b
*
thëa
);

30 
èu
 = 
Lb
/(2*
b
);

31 
phi
 = (
	`ènh
(
œmda
*
èu
)+œmda/
Bi
)/(1+(lamda/Bi)*tanh(lamda*tau));

32 
psi
 = (
ïsû⁄
*
èu
+
	`Ábs
(1-ïsû⁄)*
phi
)/
	`sqπ
(
M_PI
);

33 
R•rd
 = 
psi
/(
	`sqπ
(
M_PI
)*
k
*
a
);

34  
R•rd
;

35 
	}
}

37 
	$isw≠
 (*
a
, *
b
)

39 
t
 = *
a
;

40 *
a
 = *
b
;

41 *
b
 = 
t
;

42 
	}
}

44 
	$dsw≠
 (*
a
, *
b
)

46 
t
 = *
a
;

47 *
a
 = *
b
;

48 *
b
 = 
t
;

49 
	}
}

59 
	$lupdcmp
(**
a
, 
n
, *
p
)

61 
i
, 
j
, 
k
, 
pivŸ
=0;

62 
max
 = 0;

65 
i
=0; i < 
n
; i++)

66 
p
[
i
] = i;

68 
k
=0; k < 
n
-1; k++) {

69 
max
 = 0;

70 
i
 = 
k
; i < 
n
; i++) {

71 i‡(
	`Ábs
(
a
[
i
][
k
]Ë> 
max
) {

72 
max
 = 
	`Ábs
(
a
[
i
][
k
]);

73 
pivŸ
 = 
i
;

76 i‡(
	`eq
 (
max
, 0))

77 
	`Áèl
 ("singular matrix inÜupdcmp\n");

80 
	`isw≠
 (&
p
[
k
], &p[
pivŸ
]);

81 
i
=0; i < 
n
; i++)

82 
	`dsw≠
 (&
a
[
k
][
i
], &a[
pivŸ
][i]);

84 
i
=
k
+1; i < 
n
; i++) {

85 
a
[
i
][
k
] /=á[k][k];

86 
j
=
k
+1; j < 
n
; j++)

87 
a
[
i
][
j
] -a[i][
k
] *á[k][j];

90 
	}
}

97 
	#LOWER
(
a
, 
i
, 
j
Ë((ò> jË?á[i][j] : 0)

	)

98 
	#UPPER
(
a
, 
i
, 
j
Ë((ò<jË?á[i][j] : 0)

	)

107 
	$lusﬁve
(**
a
, 
n
, *
p
, *
b
, *
x
)

109 
i
, 
j
;

110 *
y
 = 
	`ve˘‹
 (
n
);

111 
sum
;

114 
i
=0; i < 
n
; i++) {

115 
j
=0, 
sum
=0; j < 
i
; j++)

116 
sum
 +
y
[
j
] * 
	`LOWER
(
a
, 
i
, j);

117 
y
[
i
] = 
b
[
p
[i]] - 
sum
;

121 
i
=
n
-1; i >= 0; i--) {

122 
j
=
i
+1, 
sum
=0; j < 
n
; j++)

123 
sum
 +
x
[
j
] * 
	`UPPER
(
a
, 
i
, j);

124 
x
[
i
] = (
y
[i] - 
sum
Ë/ 
	`UPPER
(
a
, i, i);

127 
	`‰ì_ve˘‹
(
y
);

128 
	}
}

135 
	$rk4
(**
c
, *
y
, *
pow
, 
n
, 
h
, *
yout
)

137 
i
,
j
;

138 *
yt
, *
k1
, *
k2
, *
k3
, *
k4
;

139 
yt
 = 
	`ve˘‹
(
n
);

140 
k1
 = 
	`ve˘‹
(
n
);

141 
k2
 = 
	`ve˘‹
(
n
);

142 
k3
 = 
	`ve˘‹
(
n
);

143 
k4
 = 
	`ve˘‹
(
n
);

145 
i
 = 0; i < 
n
; i++) {

146 
yt
[
i
] = 0.0;

147 
j
 = 0; j < 
n
; j++)

148 
yt
[
i
] +
c
[i][
j
]*
y
[j];

149 
k1
[
i
] = 
h
*(
pow
[i]-
yt
[i]);

151 
i
 = 0; i < 
n
; i++) {

152 
yt
[
i
] = 0.0;

153 
j
 = 0; j < 
n
; j++)

154 
yt
[
i
] +
c
[i][
j
]*(
y
[j]+0.5*
k1
[j]);

155 
k2
[
i
] = 
h
*(
pow
[i]-
yt
[i]);

157 
i
 = 0; i < 
n
; i++) {

158 
yt
[
i
] = 0.0;

159 
j
 = 0; j < 
n
; j++)

160 
yt
[
i
] +
c
[i][
j
]*(
y
[j]+0.5*
k2
[j]);

161 
k3
[
i
] = 
h
*(
pow
[i]-
yt
[i]);

163 
i
 =0; i < 
n
; i++) {

164 
yt
[
i
]=0.0;

165 
j
 = 0; j < 
n
; j++)

166 
yt
[
i
] +
c
[i][
j
]*(
y
[j]+
k3
[j]);

167 
k4
[
i
] = 
h
*(
pow
[i]-
yt
[i]);

170 
i
 =0; i < 
n
; i++)

171 
yout
[
i
] = 
y
[i] + (
k1
[i] + 2*
k2
[i] + 2*
k3
[i] + 
k4
[i])/6.0;

173 
	`‰ì_ve˘‹
(
yt
);

174 
	`‰ì_ve˘‹
(
k1
);

175 
	`‰ì_ve˘‹
(
k2
);

176 
	`‰ì_ve˘‹
(
k3
);

177 
	`‰ì_ve˘‹
(
k4
);

178 
	}
}

180 *
	$ve˘‹
(
n
)

182 *
v
;

184 
v
=(*)
	`ˇŒoc
(
n
, ());

185 i‡(!
v
Ë
	`Áèl
("allocation failure in vector()");

187  
v
;

188 
	}
}

190 
	$‰ì_ve˘‹
(*
v
)

192 
	`‰ì
(
v
);

193 
	}
}

195 
	$dump_ve˘‹
 (*
v
, 
n
)

197 
i
;

198 
i
=0; i < 
n
; i++)

199 
	`Ârötf
(
°dîr
, "%.5f\t", 
v
[
i
]);

200 
	`Ârötf
(
°dîr
, "\n");

201 
	}
}

203 *
	$ive˘‹
(
n
)

205 *
v
;

207 
v
 = (*)
	`ˇŒoc
(
n
, ());

208 i‡(!
v
Ë
	`Áèl
("allocation failure in ivector()");

210  
v
;

211 
	}
}

213 
	$‰ì_ive˘‹
(*
v
)

215 
	`‰ì
(
v
);

216 
	}
}

218 
	$dump_ive˘‹
 (*
v
, 
n
)

220 
i
;

221 
i
=0; i < 
n
; i++)

222 
	`Ârötf
(
°dîr
, "%d\t", 
v
[
i
]);

223 
	`Ârötf
(
°dîr
, "\n\n");

224 
	}
}

227 **
	$m©rix
(
ƒ
, 
nc
)

229 
i
;

230 **
m
;

232 
m
 = (**Ë
	`ˇŒoc
 (
ƒ
, (*));

233 
	`as£π
(
m
 !
NULL
);

235 
i
 = 0; i < 
ƒ
; i++) {

236 
m
[
i
] = (*)
	`ˇŒoc
(
nc
, ());

237 
	`as£π
(
m
[
i
] !
NULL
);

240  
m
;

241 
	}
}

243 
	$‰ì_m©rix
(**
m
, 
ƒ
)

245 
i
;

246 
i
 = 0; i < 
ƒ
; i++)

247 
	`‰ì
(
m
[
i
]);

248 
	`‰ì
(
m
);

249 
	}
}

251 
	$dump_m©rix
 (**
m
, 
ƒ
, 
nc
)

253 
i
;

254 
i
=0; i < 
ƒ
; i++)

255 
	`dump_ve˘‹
(
m
[
i
], 
nc
);

256 
	`Ârötf
(
°dîr
, "\n");

257 
	}
}

259 
	$c›y_m©rix
 (**
d°
, **
§c
, 
ƒ
, 
nc
)

261 
i
,
j
;

262 
i
=0; i < 
ƒ
; i++)

263 
j
=0; j < 
nc
; j++)

264 
d°
[
i
][
j
] = 
§c
[i][j];

265 
	}
}

267 **
	$im©rix
(
ƒ
, 
nc
)

269 
i
;

270 **
m
;

272 
m
 = (**Ë
	`ˇŒoc
 (
ƒ
, (*));

273 
	`as£π
(
m
 !
NULL
);

275 
i
 = 0; i < 
ƒ
; i++) {

276 
m
[
i
] = (*)
	`ˇŒoc
(
nc
, ());

277 
	`as£π
(
m
[
i
] !
NULL
);

280  
m
;

281 
	}
}

283 
	$‰ì_im©rix
(**
m
, 
ƒ
)

285 
i
;

286 
i
 = 0; i < 
ƒ
; i++)

287 
	`‰ì
(
m
[
i
]);

288 
	`‰ì
(
m
);

289 
	}
}

291 
	$dump_im©rix
 (**
m
, 
ƒ
, 
nc
)

293 
i
;

294 
i
=0; i < 
ƒ
; i++)

295 
	`dump_ive˘‹
(
m
[
i
], 
nc
);

296 
	`Ârötf
(
°dîr
, "\n");

297 
	}
}

300 
	$m©mu…
(**
c
, **
a
, **
b
, 
n
)

302 
i
, 
j
, 
k
;

304 
i
 = 0; i < 
n
; i++)

305 
j
 = 0; j < 
n
; j++) {

306 
c
[
i
][
j
] = 0;

307 
k
 = 0; k < 
n
; k++)

308 
c
[
i
][
j
] +
a
[i][
k
] * 
b
[k][j];

310 
	}
}

313 
	$m©ve˘mu…
(*
vout
, **
m
, *
vö
, 
n
)

315 
i
, 
j
;

316 
i
 = 0; i < 
n
; i++) {

317 
vout
[
i
] = 0;

318 
j
 = 0; j < 
n
; j++)

319 
vout
[
i
] +
m
[i][
j
] * 
vö
[j];

321 
	}
}

324 
	$m©öv
(**
INV
, **
M
, 
n
)

326 *
p
, 
i
, 
j
;

327 *
cﬁ
, *
x
;

329 
p
 = 
	`ive˘‹
(
n
);

330 
cﬁ
 = 
	`ve˘‹
(
n
);

331 
x
 = 
	`ve˘‹
(
n
);

333 
	`lupdcmp
(
M
, 
n
, 
p
);

335 
j
 = 0; j < 
n
; j++) {

336 
i
 = 0; i < 
n
; i++Ë
cﬁ
[i]=0.0;

337 
cﬁ
[
j
] = 1.0;

338 
	`lusﬁve
(
M
, 
n
, 
p
, 
cﬁ
, 
x
);

339 
i
 = 0; i < 
n
; i++Ë
INV
[i][
j
]=
x
[i];

342 
	`‰ì_ive˘‹
(
p
);

343 
	`‰ì_ve˘‹
(
cﬁ
);

344 
	`‰ì_ve˘‹
(
x
);

345 
	}
}

	@bitmap.h

89 #i‚de‡
BITMAP_H


90 
	#BITMAP_H


	)

98 
	#BITMAP_SIZE
(
BITS
Ë(((BITS)+31)/32)

	)

99 
	#BITMAP_TYPE
(
BITS
, 
NAME
Ë(NAME)[
	`BITMAP_SIZE
(BITS)]

	)

101 
	tBITMAP_ENT_TYPE
;

102 *
	tBITMAP_PTR_TYPE
;

106 
	#BITMAP_SET_MAP
(
BMAP
, 
SZ
Ë\

	)

107 { 
	gi
; i=0; i<(
	gSZ
); i++Ë(
	gBMAP
)[
i
] = 0xffffffff; }

110 
	#BITMAP_CLEAR_MAP
(
BMAP
, 
SZ
Ë\

	)

111 { 
	gi
; i=0; i<(
	gSZ
); i++Ë(
	gBMAP
)[
i
] = 0; }

114 
	#BITMAP_SET
(
BMAP
, 
SZ
, 
BIT
Ë\

	)

115 (((
	gBMAP
)[(
BIT
)/32] |= (1 << ((BIT) % 32))), (BMAP))

117 
	#BITMAP_SET
(
BMAP
, 
SZ
, 
BIT
Ë\

	)

118 (((
	gBMAP
)[(
BIT
)/32] |= (1 << ((BIT) % 32))))

122 
	#BITMAP_CLEAR
(
BMAP
, 
SZ
, 
BIT
Ë\

	)

123 (((
	gBMAP
)[(
BIT
)/32] &= ~(1 << ((BIT) % 32))), (BMAP))

126 
	#BITMAP_COPY
(
DESTMAP
, 
SRCMAP
, 
SZ
Ë\

	)

127 { 
	gi
; i=0; i<(
	gSZ
); i++Ë(
	gDESTMAP
)[
i
] = (
SRCMAP
)[i]; }

130 
	#__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, 
OP
Ë\

	)

131 { 
	gi
; i=0; i<(
	gSZ
); i++Ë(
	gB1
)[
i
] = (
B2
)[i] 
OP
 (
B3
)[i]; }

134 
	#BITMAP_IOR
(
B1
, 
B2
, 
B3
, 
SZ
Ë\

	)

135 
__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, |)

138 
	#BITMAP_XOR
(
B1
, 
B2
, 
B3
, 
SZ
Ë\

	)

139 
__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, ^)

142 
	#BITMAP_AND
(
B1
, 
B2
, 
B3
, 
SZ
Ë\

	)

143 
	$__BITMAP_OP
(
B1
, 
B2
, 
B3
, 
SZ
, &)

146 
	#BITMAP_NOT
(
B1
, 
B2
, 
SZ
Ë\

	)

147 { 
i
; i=0; i<(
SZ
); i++Ë(
B1
)[i] = ~((
B2
)[i]); 
	}
}

150 
	#BITMAP_EMPTY_P
(
BMAP
, 
SZ
Ë\

	)

151 ({ 
	gi
, 
	gªs
=0; i=0; i<(
	gSZ
); i++Ëª†|(
BMAP
)[
i
]; !res; })

154 
	#BITMAP_DISJOINT_P
(
B1
, 
B2
, 
SZ
Ë\

	)

155 ({ 
	gi
, 
	gªs
=0; i=0; i<(
	gSZ
); i++Ëª†|(
B1
)[
i
] & (
B2
)[i]; !res; })

158 
	#BITMAP_SET_P
(
BMAP
, 
SZ
, 
BIT
Ë\

	)

159 (((
	gBMAP
)[(
BIT
)/32] & (1 << ((
	gBIT
) % 32))) != 0)

162 
	#BITMAP_CLEAR_P
(
BMAP
, 
SZ
, 
BIT
Ë\

	)

163 (!
BMAP_SET_P
((
BMAP
), (
SZ
), (
BIT
)))

166 
	#BITMAP_COUNT_ONES
(
BMAP
, 
SZ
Ë\

	)

168 
	gi
, 
	gj
, 
	gn
 = 0; \

169 
	gi
 = 0; i < (
	gSZ
) ; i++) \

171 
	gw‹d
 = (
BMAP
)[
i
]; \

172 
	gj
=0; j < (()*8); j++) \

174 
	g√w_vÆ
, 
	gﬁd_vÆ
 = 
w‹d
; \

175 
	gw‹d
 >>= 1; \

176 
	g√w_vÆ
 = 
w‹d
 << 1; \

177 i‡(
	gﬁd_vÆ
 !
√w_vÆ
) \

178 
n
++; \

181 
	gn
; \

	@bpred.c

172 
	~<°dio.h
>

173 
	~<°dlib.h
>

174 
	~<m©h.h
>

175 
	~<as£π.h
>

177 
	~"ho°.h
"

178 
	~"misc.h
"

179 
	~"machöe.h
"

180 
	~"b¥ed.h
"

182 
	~"smt.h
"

184 #ifde‡
SMT_SS


185 
	~"c⁄ãxt.h
"

189 
comböed2
;

192 
hi°_imm
;

195 
bønch_èû2
;

198 *
¥ed_ty≥
;

201 *
¥ed_ty≥2
;

203 
b¥ed_btb_u£_ma°îid
;

209 
b¥ed_t
 *

210 
	$b¥ed_¸óã
 (
b¥ed_˛ass
 
˛ass
,

211 
bimod_size
,

212 
l1size
,

213 
l2size
,

214 
mëa_size
,

215 
shi·_width
,

216 
x‹
,

217 
btb_£ts
,

218 
btb_assoc
,

219 
ªt°ack_size
)

221 
b¥ed_t
 *
¥ed
;

223 i‡(!(
¥ed
 = 
	`ˇŒoc
 (1,  (
b¥ed_t
))))

224 
	`Áèl
 ("out of virtual memory");

226 
¥ed
->
˛ass
 = class;

228 
˛ass
)

230 
BPªdComb
:

232 
¥ed
->
dú¥ed
.
bimod
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bô
, 
bimod_size
, 0, 0, 0);

235 
¥ed
->
dú¥ed
.
twﬁev
 = 
	`b¥ed_dú_¸óã
 (
BPªd2Levñ
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

238 
¥ed
->
dú¥ed
.
mëa
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bô
, 
mëa_size
, 0, 0, 0);

242 
BPªd2Levñ
:

243 
¥ed
->
dú¥ed
.
twﬁev
 = 
	`b¥ed_dú_¸óã
 (
˛ass
, 
l1size
, 
l2size
, 
shi·_width
, 
x‹
);

247 #ifde‡
LOAD_PREDICTOR


248 
LDPªd2bô
:

249 
¥ed
->
dú¥ed
.
bimod
 = 
	`b¥ed_dú_¸óã
 (
˛ass
, 
bimod_size
, 0, 0, 0);

254 
BPªd2bô
:

255 
¥ed
->
dú¥ed
.
bimod
 = 
	`b¥ed_dú_¸óã
 (
˛ass
, 
bimod_size
, 0, 0, 0);

257 
BPªdTakí
:

258 
BPªdNŸTakí
:

263 
	`∑nic
 ("bogusÖredictor class");

267 
˛ass
)

269 
BPªdComb
:

270 
BPªd2Levñ
:

271 
BPªd2bô
:

273 
i
;

276 i‡(!
btb_£ts
 || (btb_sets & (btb_sets - 1)) != 0)

277 
	`Áèl
 ("number of BTB sets must beÇon-zeroándáÖower ofÅwo");

278 i‡(!
btb_assoc
 || (btb_assoc & (btb_assoc - 1)) != 0)

279 
	`Áèl
 ("BTBássociativity must beÇon-zeroándáÖower ofÅwo");

281 i‡(!(
¥ed
->
btb
.
btb_d©a
 = 
	`ˇŒoc
 (
btb_£ts
 * 
btb_assoc
,  (
b¥ed_btb_ít_t
))))

282 
	`Áèl
 ("cannotállocate BTB");

284 
¥ed
->
btb
.
£ts
 = 
btb_£ts
;

285 
¥ed
->
btb
.
assoc
 = 
btb_assoc
;

287 i‡(
¥ed
->
btb
.
assoc
 > 1)

288 
i
 = 0; i < (
¥ed
->
btb
.
assoc
 *Öªd->btb.
£ts
); i++)

290 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

291 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = &pred->btb.btb_data[i + 1];

293 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = 
NULL
;

295 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

296 
¥ed
->
btb
.
btb_d©a
[
i
 + 1].
¥ev
 = &pred->btb.btb_data[i];

299 #ifde‡
SMT_SS


300 
i
 = 0; i < 
MAXTHREADS
; i++)

303 i‡((
ªt°ack_size
 & (retstack_size - 1)) != 0)

304 
	`Áèl
 ("Return-address-stack size must be zero oráÖower ofÅwo");

306 
¥ed
->
ªt°ack
[
i
].
size
 = 
ªt°ack_size
;

307 i‡(
ªt°ack_size
)

308 i‡(!(
¥ed
->
ªt°ack
[
i
].
°ack
 = 
	`ˇŒoc
 (
ªt°ack_size
,  (
b¥ed_btb_ít_t
))))

309 
	`Áèl
 ("cannotállocateÑeturn-address-stack");

310 
¥ed
->
ªt°ack
[
i
].
tos
 = 
ªt°ack_size
 - 1;

314 i‡((
ªt°ack_size
 & (retstack_size - 1)) != 0)

315 
	`Áèl
 ("Return-address-stack size must be zero oráÖower ofÅwo");

317 
¥ed
->
ªt°ack
.
size
 = 
ªt°ack_size
;

318 i‡(
ªt°ack_size
)

319 i‡(!(
¥ed
->
ªt°ack
.
°ack
 = 
	`ˇŒoc
 (
ªt°ack_size
,  (
b¥ed_btb_ít_t
))))

320 
	`Áèl
 ("cannotállocateÑeturn-address-stack");

321 
¥ed
->
ªt°ack
.
tos
 = 
ªt°ack_size
 - 1;

327 
BPªdTakí
:

328 
BPªdNŸTakí
:

329 #ifde‡
LOAD_PREDICTOR


330 
LDPªd2bô
:

336 
	`∑nic
 ("bogusÖredictor class");

339  
¥ed
;

340 
	}
}

343 
b¥ed_t
 *

344 
	$b¥ed_2bcgskew_¸óã
 ( 
bimod_size
,

345  
size
,

346  
shi·_width_bimod
,

347  
shi·_width_g0
,

348  
shi·_width_g1
,

349  
shi·_width_mëa
,

350  
btb_£ts
,

351  
btb_assoc
,

352  
ªt°ack_size
)

354 
b¥ed_t
 *
¥ed
;

356 i‡(!(
¥ed
 = 
	`ˇŒoc
 (1,  (
b¥ed_t
))))

357 
	`Áèl
 ("out of virtual memory");

359 
¥ed
->
˛ass
 = 
BPªd2bcgskew
;

361 
¥ed
->
dú¥ed
.
bim1
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
bimod_size
, 0, 
shi·_width_bimod
, 0);

362 
¥ed
->
dú¥ed
.
g01
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
size
, 0, 
shi·_width_g0
, 0);

363 
¥ed
->
dú¥ed
.
g11
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
size
, 0, 
shi·_width_g1
, 0);

364 
¥ed
->
dú¥ed
.
mëa
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
size
, 0, 
shi·_width_mëa
, 0);

367 
i
;

370 i‡(!
btb_£ts
 || (btb_sets & (btb_sets - 1)) != 0)

371 
	`Áèl
 ("number of BTB sets must beÇon-zeroándáÖower ofÅwo");

372 i‡(!
btb_assoc
 || (btb_assoc & (btb_assoc - 1)) != 0)

373 
	`Áèl
 ("BTBássociativity must beÇon-zeroándáÖower ofÅwo");

375 i‡(!(
¥ed
->
btb
.
btb_d©a
 = 
	`ˇŒoc
 (
btb_£ts
 * 
btb_assoc
,  (
b¥ed_btb_ít_t
))))

376 
	`Áèl
 ("cannotállocate BTB");

378 
¥ed
->
btb
.
£ts
 = 
btb_£ts
;

379 
¥ed
->
btb
.
assoc
 = 
btb_assoc
;

381 i‡(
¥ed
->
btb
.
assoc
 > 1)

382 
i
 = 0; i < (
¥ed
->
btb
.
assoc
 *Öªd->btb.
£ts
); i++)

384 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

385 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = &pred->btb.btb_data[i + 1];

387 
¥ed
->
btb
.
btb_d©a
[
i
].
√xt
 = 
NULL
;

389 i‡(
i
 % 
¥ed
->
btb
.
assoc
 !=Öred->btb.assoc - 1)

390 
¥ed
->
btb
.
btb_d©a
[
i
 + 1].
¥ev
 = &pred->btb.btb_data[i];

393 #ifde‡
SMT_SS


394 
i
 = 0; i < 
MAXTHREADS
; i++)

397 i‡((
ªt°ack_size
 & (retstack_size - 1)) != 0)

398 
	`Áèl
 ("Return-address-stack size must be zero oráÖower ofÅwo");

400 
¥ed
->
ªt°ack
[
i
].
size
 = 
ªt°ack_size
;

401 i‡(
ªt°ack_size
)

402 i‡(!(
¥ed
->
ªt°ack
[
i
].
°ack
 = 
	`ˇŒoc
 (
ªt°ack_size
,  (
b¥ed_btb_ít_t
))))

403 
	`Áèl
 ("cannotállocateÑeturn-address-stack");

404 
¥ed
->
ªt°ack
[
i
].
tos
 = 
ªt°ack_size
 - 1;

408 i‡((
ªt°ack_size
 & (retstack_size - 1)) != 0)

409 
	`Áèl
 ("Return-address-stack size must be zero oráÖower ofÅwo");

411 
¥ed
->
ªt°ack
.
size
 = 
ªt°ack_size
;

412 i‡(
ªt°ack_size
)

413 i‡(!(
¥ed
->
ªt°ack
.
°ack
 = 
	`ˇŒoc
 (
ªt°ack_size
,  (
b¥ed_btb_ít_t
))))

414 
	`Áèl
 ("cannotállocateÑeturn-address-stack");

415 
¥ed
->
ªt°ack
.
tos
 = 
ªt°ack_size
 - 1;

420  
¥ed
;

421 
	}
}

426 
	$b¥ed_2bcgskew_¸óã2
 ( 
bimod_size
,

427  
size
,

428  
shi·_width_bimod
,

429  
shi·_width_g0
,

430  
shi·_width_g1
,

431  
shi·_width_mëa
,

432  
b¥ed_t
 *
¥ed
)

434 
¥ed
->
dú¥ed
.
bim2
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
bimod_size
, 0, 
shi·_width_bimod
, 0);

435 
¥ed
->
dú¥ed
.
g02
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
size
, 0, 
shi·_width_g0
, 0);

436 
¥ed
->
dú¥ed
.
g12
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
size
, 0, 
shi·_width_g1
, 0);

437 
¥ed
->
dú¥ed
.
mëa2
 = 
	`b¥ed_dú_¸óã
 (
BPªd2bcgskew
, 
size
, 0, 
shi·_width_mëa
, 0);

438 
	}
}

442 
b¥ed_dú_t
 *

443 
	$b¥ed_dú_¸óã
 (
b¥ed_˛ass
 
˛ass
,

444 
l1size
,

445 
l2size
,

446 
shi·_width
,

447 
x‹
)

449 
b¥ed_dú_t
 *
¥ed_dú
;

450 
˙t
;

451 
ÊùÊ›
, 
i
;

453 i‡(!(
¥ed_dú
 = 
	`ˇŒoc
 (1,  (
b¥ed_dú_t
))))

454 
	`Áèl
 ("out of virtual memory");

456 
¥ed_dú
->
˛ass
 = class;

458 
˙t
 = -1;

459 
˛ass
)

462 
BPªd2bcgskew
:

464 
log2_size
;

466 i‡(!
l1size
 || (l1size & (l1size - 1)) != 0)

467 
	`Áèl
 ("Àvñ-1 size, `%d', mu° bên⁄-zîÿ™dáÖowî o‡two", 
l1size
);

468 
¥ed_dú
->
c⁄fig
.
b™k
.
size
 = 
l1size
;

469 
log2_size
 = 
	`log
 (
l1size
) /Üog (2);

470 
¥ed_dú
->
c⁄fig
.
b™k
.
log_size
 = (Ë
log2_size
;

472 
¥ed_dú
->
c⁄fig
.
b™k
.
shi·_width
 = shift_width;

474 
¥ed_dú
->
c⁄fig
.
b™k
.
èbÀ
 = 
	`ˇŒoc
 (
l1size
,  ());

475 i‡(!
¥ed_dú
->
c⁄fig
.
b™k
.
èbÀ
)

476 
	`Áèl
 ("cannotállocate 2Bc-skewÅable");

479 
ÊùÊ›
 = 1;

480 
˙t
 = 0; c¡ < 
l1size
; cnt++)

482 
¥ed_dú
->
c⁄fig
.
b™k
.
èbÀ
[
˙t
] = 
ÊùÊ›
;

483 
ÊùÊ›
 = 3 - flipflop;

489 
BPªd2Levñ
:

491 i‡(!
l1size
 || (l1size & (l1size - 1)) != 0)

492 
	`Áèl
 ("Àvñ-1 size, `%d', mu° bên⁄-zîÿ™dáÖowî o‡two", 
l1size
);

493 
¥ed_dú
->
c⁄fig
.
two
.
l1size
 =Ü1size;

495 i‡(!
l2size
 || (l2size & (l2size - 1)) != 0)

496 
	`Áèl
 ("Àvñ-2 size, `%d', mu° bên⁄-zîÿ™dáÖowî o‡two", 
l2size
);

497 
¥ed_dú
->
c⁄fig
.
two
.
l2size
 =Ü2size;

499 i‡(!
shi·_width
 || shift_width > 30)

500 
	`Áèl
 ("shi·Ñegi°î width, `%d', mu° bên⁄-zîÿ™dÖosôive", 
shi·_width
);

501 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
 = shift_width;

503 
¥ed_dú
->
c⁄fig
.
two
.
x‹
 = xor;

504 #ifde‡
SMT_SS


505 
i
 = 0; i < 
MAXTHREADS
; i++)

507 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
i
] = 
	`ˇŒoc
 (
l1size
,  ());

508 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
i
])

509 
	`Áèl
 ("cannotállocate shiftÑegisterÅable");

512 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
 = 
	`ˇŒoc
 (
l1size
,  ());

513 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
)

514 
	`Áèl
 ("cannotállocate shiftÑegisterÅable");

517 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
 = 
	`ˇŒoc
 (
l2size
,  ());

518 i‡(!
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
)

519 
	`Áèl
 ("cannotállocate secondÜevelÅable");

522 
ÊùÊ›
 = 1;

523 
˙t
 = 0; c¡ < 
l2size
; cnt++)

525 
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
˙t
] = 
ÊùÊ›
;

526 
ÊùÊ›
 = 3 - flipflop;

532 #ifde‡
LOAD_PREDICTOR


533 
LDPªd2bô
:

534 i‡(!
l1size
 || (l1size & (l1size - 1)) != 0)

535 
	`Áèl
 ("2bôÅabÀ size, `%d', mu° bên⁄-zîÿ™dáÖowî o‡two", 
l1size
);

536 
¥ed_dú
->
c⁄fig
.
bimod
.
size
 = 
l1size
;

537 i‡(!(
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
 = 
	`ˇŒoc
 (
l1size
,  ())))

538 
	`Áèl
 ("cannotállocate 2bit storage");

540 
ÊùÊ›
 = 1;

541 
˙t
 = 0; c¡ < 
l1size
; cnt++)

543 
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
˙t
] = 
ÊùÊ›
;

544 
ÊùÊ›
 = 3 - flipflop;

550 
BPªd2bô
:

551 i‡(!
l1size
 || (l1size & (l1size - 1)) != 0)

552 
	`Áèl
 ("2bôÅabÀ size, `%d', mu° bên⁄-zîÿ™dáÖowî o‡two", 
l1size
);

553 
¥ed_dú
->
c⁄fig
.
bimod
.
size
 = 
l1size
;

554 i‡(!(
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
 = 
	`ˇŒoc
 (
l1size
,  ())))

555 
	`Áèl
 ("cannotállocate 2bit storage");

557 
ÊùÊ›
 = 1;

558 
˙t
 = 0; c¡ < 
l1size
; cnt++)

560 
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
˙t
] = 
ÊùÊ›
;

561 
ÊùÊ›
 = 3 - flipflop;

566 
BPªdTakí
:

567 
BPªdNŸTakí
:

572 
	`∑nic
 ("bogus branch directionÖredictor class");

575  
¥ed_dú
;

576 
	}
}

580 
	$b¥ed_dú_c⁄fig
 (
b¥ed_dú_t
 *
¥ed_dú
,

581 
«me
[],

582 
FILE
 * 
°ªam
)

584 
¥ed_dú
->
˛ass
)

586 
BPªd2Levñ
:

587 
	`Ârötf
 (
°ªam
,

588 "¥ed_dú: %s: 2-lvl: %dÜ1-sz, %d bôs/ít, %†x‹, %dÜ2-sz, dúe˘-m≠≥d\n", 
«me
, 
¥ed_dú
->
c⁄fig
.
two
.
l1size
,Öªd_dú->c⁄fig.two.
shi·_width
,Öªd_dú->c⁄fig.two.
x‹
 ? "" : "no",Öªd_dú->c⁄fig.two.
l2size
);

591 #ifde‡
LOAD_PREDICTOR


592 
LDPªd2bô
:

593 
	`Ârötf
 (
°ªam
, "lﬂd_¥ed_hô: %s: 2-bô: %dÉ¡rõs, dúe˘-m≠≥d\n", 
«me
, 
¥ed_dú
->
c⁄fig
.
bimod
.
size
);

597 
BPªd2bô
:

598 
	`Ârötf
 (
°ªam
, "¥ed_dú: %s: 2-bô: %dÉ¡rõs, dúe˘-m≠≥d\n", 
«me
, 
¥ed_dú
->
c⁄fig
.
bimod
.
size
);

601 
BPªdTakí
:

602 
	`Ârötf
 (
°ªam
, "¥ed_dú: %s:Öªdi˘Åakí\n", 
«me
);

605 
BPªdNŸTakí
:

606 
	`Ârötf
 (
°ªam
, "¥ed_dú: %s:Öªdi˘ÇŸÅakí\n", 
«me
);

610 
	`∑nic
 ("bogus branch directionÖredictor class");

612 
	}
}

616 
	$b¥ed_c⁄fig
 (
b¥ed_t
 *
¥ed
,

617 
FILE
 * 
°ªam
)

619 
¥ed
->
˛ass
)

621 
BPªdComb
:

622 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

623 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

624 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
mëa
, "mëa", 
°ªam
);

625 
	`Ârötf
 (
°ªam
, "btb: %d së†x %dássocütivôy", 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

626 #ifde‡
SMT_SS


628 
	`Ârötf
 (
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
[0].
size
);

630 
	`Ârötf
 (
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

634 
BPªd2Levñ
:

635 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
twﬁev
, "2Àv", 
°ªam
);

636 
	`Ârötf
 (
°ªam
, "btb: %d së†x %dássocütivôy", 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

637 #ifde‡
SMT_SS


639 
	`Ârötf
 (
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
[0].
size
);

641 
	`Ârötf
 (
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

646 #ifde‡
LOAD_PREDICTOR


647 
LDPªd2bô
:

648 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

652 
BPªd2bô
:

653 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "bimod", 
°ªam
);

654 
	`Ârötf
 (
°ªam
, "btb: %d së†x %dássocütivôy", 
¥ed
->
btb
.
£ts
,Öªd->btb.
assoc
);

655 #ifde‡
SMT_SS


657 
	`Ârötf
 (
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
[0].
size
);

659 
	`Ârötf
 (
°ªam
, "ªt_°ack: %dÉ¡rõs", 
¥ed
->
ªt°ack
.
size
);

663 
BPªdTakí
:

664 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "èkí", 
°ªam
);

666 
BPªdNŸTakí
:

667 
	`b¥ed_dú_c⁄fig
 (
¥ed
->
dú¥ed
.
bimod
, "nŸèkí", 
°ªam
);

671 
	`∑nic
 ("bogus branchÖredictor class");

673 
	}
}

677 
	$b¥ed_°©s
 (
b¥ed_t
 *
¥ed
,

678 
FILE
 * 
°ªam
)

680 
	`Ârötf
 (
°ªam
, "¥ed:áddr-¥edi˘i⁄Ñ©ê%f\n", (Ë
¥ed
->
addr_hôs
 / (Ë’ªd->addr_hô†+Öªd->
mis£s
));

681 
	`Ârötf
 (
°ªam
, "¥ed: dú-¥edi˘i⁄Ñ©ê%f\n", (Ë
¥ed
->
dú_hôs
 / (Ë’ªd->dú_hô†+Öªd->
mis£s
));

682 
	}
}

686 
	$b¥ed_ªg_°©s
 (
b¥ed_t
 *
¥ed
,

687 
°©_sdb_t
 *
sdb
, 
thªadid
)

689 
buf
[512], 
buf1
[512], *
«me
, 
«me1
[256];

692 
¥ed
->
˛ass
)

694 
BPªdComb
:

695 
«me
 = "bpred_comb";

697 
BPªd2Levñ
:

698 
«me
 = "bpred_2lev";

700 #ifde‡
LOAD_PREDICTOR


701 
LDPªd2bô
:

702 
«me
 = "ldpred_bimod";

705 
BPªd2bô
:

706 
«me
 = "bpred_bimod";

708 
BPªdTakí
:

709 
«me
 = "bpred_taken";

711 
BPªdNŸTakí
:

712 
«me
 = "bpred_nottaken";

715 
BPªd2bcgskew
:

716 
«me
 = "bpred_2bcgskew";

720 
	`∑nic
 ("bogus branchÖredictor class");

722 
	`°r˝y
(
«me1
, 
«me
);

723 
«me
 = 
«me1
;

725 
	`•rötf
(
buf
, "_%d", 
thªadid
);

726 
	`°rˇt
(
«me
, 
buf
);

728 
	`•rötf
 (
buf
, "%s.lookups", 
«me
);

729 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡b¥edÜookups", &
¥ed
->
lookups
, 0, 
NULL
);

730 
	`•rötf
 (
buf
, "%s.upd©es", 
«me
);

731 
	`•rötf
 (
buf1
, "%s.dú_hô†+ %s.mis£s", 
«me
,Çame);

732 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "tŸÆÇumbî o‡upd©es", 
buf1
, "%12.0f");

733 
	`•rötf
 (
buf
, "%s.addr_hôs", 
«me
);

734 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡addªss-¥edi˘ed hôs", &
¥ed
->
addr_hôs
, 0, 
NULL
);

735 
	`•rötf
 (
buf
, "%s.dú_hôs", 
«me
);

736 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡dúe˘i⁄-¥edi˘ed hô†" "(ö˛ude†addr-hôs)", &
¥ed
->
dú_hôs
, 0, 
NULL
);

737 i‡(
¥ed
->
˛ass
 =
BPªdComb
)

739 
	`•rötf
 (
buf
, "%s.u£d_bimod", 
«me
);

740 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡bimodÆÖªdi˘i⁄†u£d", &
¥ed
->
u£d_bimod
, 0, 
NULL
);

741 
	`•rötf
 (
buf
, "%s.u£d_2Àv", 
«me
);

742 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡2-ÀvñÖªdi˘i⁄†u£d", &
¥ed
->
u£d_2Àv
, 0, 
NULL
);

744 
	`•rötf
 (
buf
, "%s.mis£s", 
«me
);

745 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
¥ed
->
mis£s
, 0, 
NULL
);

746 
	`•rötf
 (
buf
, "%s.jr_hôs", 
«me
);

747 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡addªss-¥edi˘ed hô†f‹ JR's", &
¥ed
->
jr_hôs
, 0, 
NULL
);

748 
	`•rötf
 (
buf
, "%s.jr_£í", 
«me
);

749 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡JR'†£í", &
¥ed
->
jr_£í
, 0, 
NULL
);

750 
	`•rötf
 (
buf
, "%s.jr_n⁄_øs_hôs.PP", 
«me
);

751 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡addªss-¥edi˘ed hô†f‹Ç⁄-RAS JR's", &
¥ed
->
jr_n⁄_øs_hôs
, 0, 
NULL
);

752 
	`•rötf
 (
buf
, "%s.jr_n⁄_øs_£í.PP", 
«me
);

753 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡n⁄-RAS JR'†£í", &
¥ed
->
jr_n⁄_øs_£í
, 0, 
NULL
);

754 
	`•rötf
 (
buf
, "%s.b¥ed_addr_øã", 
«me
);

755 
	`•rötf
 (
buf1
, "%s.addr_hô†/ %s.upd©es", 
«me
,Çame);

756 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "bøncháddªss-¥edi˘i⁄Ñ©ê(i.e.,áddr-hôs/upd©es)", 
buf1
, "%9.4f");

757 
	`•rötf
 (
buf
, "%s.b¥ed_dú_øã", 
«me
);

758 
	`•rötf
 (
buf1
, "%s.dú_hô†/ %s.upd©es", 
«me
,Çame);

759 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "bønch dúe˘i⁄-¥edi˘i⁄Ñ©ê(i.e.,áŒ-hôs/upd©es)", 
buf1
, "%9.4f");

760 
	`•rötf
 (
buf
, "%s.b¥ed_jr_øã", 
«me
);

761 
	`•rötf
 (
buf1
, "%s.jr_hô†/ %s.jr_£í", 
«me
,Çame);

762 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "JRáddªss-¥edi˘i⁄Ñ©ê(i.e., JRáddr-hôs/JR†£í)", 
buf1
, "%9.4f");

763 
	`•rötf
 (
buf
, "%s.b¥ed_jr_n⁄_øs_øã.PP", 
«me
);

764 
	`•rötf
 (
buf1
, "%s.jr_n⁄_øs_hôs.PP / %s.jr_n⁄_øs_£í.PP", 
«me
,Çame);

765 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "n⁄-RAS JRáddr-¥edÑ©ê(õ,Ç⁄-RAS JR hôs/JR†£í)", 
buf1
, "%9.4f");

766 
	`•rötf
 (
buf
, "%s.ªt°ack_pushes", 
«me
);

767 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡addªs†pushed o¡ÿªt-add∏°ack", &
¥ed
->
ªt°ack_pushes
, 0, 
NULL
);

768 
	`•rötf
 (
buf
, "%s.ªt°ack_p›s", 
«me
);

769 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡addªs†p›≥d of‡o‡ªt-add∏°ack", &
¥ed
->
ªt°ack_p›s
, 0, 
NULL
);

770 
	`•rötf
 (
buf
, "%s.u£d_øs.PP", 
«me
);

771 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡RASÖªdi˘i⁄†u£d", &
¥ed
->
u£d_øs
, 0, 
NULL
);

772 
	`•rötf
 (
buf
, "%s.øs_hôs.PP", 
«me
);

773 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡RAS hôs", &
¥ed
->
øs_hôs
, 0, 
NULL
);

774 
	`•rötf
 (
buf
, "%s.øs_øã.PP", 
«me
);

775 
	`•rötf
 (
buf1
, "%s.øs_hôs.PP / %s.u£d_øs.PP", 
«me
,Çame);

776 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "RASÖªdi˘i⁄Ñ©ê(i.e., RAS hôs/u£d RAS)", 
buf1
, "%9.4f");

777 
	}
}

780 
	$b¥ed_a·î_¥imög
 (
b¥ed_t
 *
b¥ed
)

782 i‡(
b¥ed
 =
NULL
)

785 
b¥ed
->
lookups
 = 0;

786 
b¥ed
->
addr_hôs
 = 0;

787 
b¥ed
->
dú_hôs
 = 0;

788 
b¥ed
->
u£d_øs
 = 0;

789 
b¥ed
->
u£d_bimod
 = 0;

790 
b¥ed
->
u£d_2Àv
 = 0;

791 
b¥ed
->
jr_hôs
 = 0;

792 
b¥ed
->
jr_£í
 = 0;

793 
b¥ed
->
mis£s
 = 0;

794 
b¥ed
->
ªt°ack_p›s
 = 0;

795 
b¥ed
->
ªt°ack_pushes
 = 0;

796 
b¥ed
->
øs_hôs
 = 0;

797 
	}
}

799 
	#BIMOD_HASH
(
PRED
, 
ADDR
Ë\

	)

800 ((((
	gADDR
Ë>> 19Ë^ ((ADDRË>> 
	gMD_BR_SHIFT
)Ë& ((
	gPRED
)->
	gc⁄fig
.
	gbimod
.
	gsize
-1))

805 
b¥ed_dú_lookup
 (
b¥ed_dú_t
 *
¥ed_dú
,

806 #ifde‡
SMT_SS


807 
md_addr_t
 
baddr
,

808 
thªadid
)

810 
md_addr_t
 
	gbaddr
)

813 *
	gp
 = 
NULL
;

816 
	g¥ed_dú
->
	g˛ass
)

818 
	gBPªd2Levñ
:

820 
l1ödex
, 
	gl2ödex
;

823 
	gl1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed_dú
->
c⁄fig
.
two
.
l1size
 - 1);

824 #ifde‡
SMT_SS


825 
	gl2ödex
 = 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
thªadid
][
l1ödex
];

827 
	gl2ödex
 = 
¥ed_dú
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
];

829 i‡(
	g¥ed_dú
->
	gc⁄fig
.
	gtwo
.
	gx‹
)

836 
	gl2ödex
 = (((
l2ödex
 ^ (
baddr
 >> 
MD_BR_SHIFT
)Ë& ((1 << 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
) - 1)) | ((baddr >> MD_BR_SHIFT) <<Öred_dir->config.two.shift_width));

838 
	gl2ödex
 = 
l2ödex
 ^ (
baddr
 >> 
MD_BR_SHIFT
);

843 
	gl2ödex
 = 
l2ödex
 | ((
baddr
 >> 
MD_BR_SHIFT
Ë<< 
¥ed_dú
->
c⁄fig
.
two
.
shi·_width
);

845 
	gl2ödex
 = 
l2ödex
 & (
¥ed_dú
->
c⁄fig
.
two
.
l2size
 - 1);

848 
	gp
 = &
¥ed_dú
->
c⁄fig
.
two
.
l2èbÀ
[
l2ödex
];

851 #ifde‡
LOAD_PREDICTOR


852 
	gLDPªd2bô
:

853 
p
 = &
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
BIMOD_HASH
 (¥ed_dú, 
baddr
)];

856 
	gBPªd2bô
:

857 
p
 = &
¥ed_dú
->
c⁄fig
.
bimod
.
èbÀ
[
BIMOD_HASH
 (¥ed_dú, 
baddr
)];

859 
	gBPªdTakí
:

860 
BPªdNŸTakí
:

863 
∑nic
 ("bogus branch directionÖredictor class");

866  (*Ë
	gp
;

876 
	$H_func
 (
Y
, 
shi·
, 
Mask
)

878 
y1
, 
yn
, 
ªsu…
;

880 
y1
 = 
Y
 >> (
shi·
 - 1);

881 
yn
 = 
Y
 & 0x01;

883 
ªsu…
 = ((
Y
 * 2Ë+ (
yn
 ^ 
y1
)Ë& 
Mask
;

884  (
ªsu…
);

885 
	}
}

888 
	$Hb¨_func
 (
Y
, 
shi·
, 
Mask
)

890 
y1
, 
yn
, 
ªsu…
;

892 
y1
 = (
Y
 & 0x02) >> 1;

893 
yn
 = (
y1
 ^ 
Y
) & 1;

894 
ªsu…
 = (
Y
 >> 1Ë+ (
yn
 << (
shi·
 - 1));

896  (
ªsu…
);

897 
	}
}

903 
b¥ed_upd©e_hi°‹y
 (
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r


904 #ifde‡
SMT_SS


905 , 
thªadid


909 
	g¥ed_èkí
, 
	gshi·_ªg
;

910 
c⁄ãxt
 *
	gcuºít
 = 
thec⁄ãxts
[
thªadid
];

912 
	gdú_upd©e_±r
->
	gbønch_èû2
 = 
cuºít
->
bønch_èû2
;

914 
	g¥ed
->
	g˛ass
)

917 
	gBPªdComb
:

918 
BPªd2Levñ
:

919 
¥ed_èkí
 = *(
dú_upd©e_±r
->
pdú1
) > 1;

921 
	gdú_upd©e_±r
->
	ghi°‹y
 = 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[0];

922 
	gdú_upd©e_±r
->
	ghi°_shi·_out
 = 
dú_upd©e_±r
->
hi°‹y
 >> 31;

923 
	gshi·_ªg
 = (
dú_upd©e_±r
->
hi°‹y
 << 1Ë| (!!
¥ed_èkí
);

924 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[0] = 
shi·_ªg
 ;

927 
	gBPªd2bcgskew
:

928 
¥ed_èkí
 = 
dú_upd©e_±r
->pred_taken;

930 #ifde‡
SMT_SS


931 
	gdú_upd©e_±r
->
	ghi°‹y
 = 
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
];

933 
	gdú_upd©e_±r
->
	ghi°‹y
 = 
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
;

935 
	gdú_upd©e_±r
->
	ghi°_shi·_out
 = 
dú_upd©e_±r
->
hi°‹y
 >> 31;

936 
	gshi·_ªg
 = (
dú_upd©e_±r
->
hi°‹y
 << 1Ë| (!!
¥ed_èkí
);

938 #ifde‡
SMT_SS


939 
	g¥ed
->
	gdú¥ed
.
	gbim1
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
[
thªadid
] = 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·ªg
[thªadid] =Öªd->dú¥ed.
g11
->c⁄fig.b™k.shi·ªg[thªadid] =Öªd->dú¥ed.
mëa
->c⁄fig.b™k.shi·ªg[thªadid] = 
shi·_ªg
;

941 
	g¥ed
->
	gdú¥ed
.
	gbim1
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 = 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·ªg
 =Öªd->dú¥ed.
g11
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
mëa
->c⁄fig.b™k.shi·ªg = 
shi·_ªg
;

945 
	gBPªdARVI
:

949 
∑nic
 ("sth wrong here in bpred_update_history");

952 i‡(
	gcomböed2
 || (
	g¥ed
->
	g˛ass
 =
BPªdARVI
))

958 i‡(!
my°ricmp
 (
¥ed_ty≥2
, "comb") || !mystricmp (pred_type2, "2lev"))

960 
¥ed_èkí
 = *(
dú_upd©e_±r
->
pdú12
) > 1;

962 
	gdú_upd©e_±r
->
	ghi°‹y2
 = 
¥ed
->
dú¥ed
.
twﬁev2
->
c⁄fig
.
two
.
shi·ªgs
[0];

963 
	gdú_upd©e_±r
->
	ghi°_shi·_out2
 = 
dú_upd©e_±r
->
hi°‹y2
 >> 31;

964 
	gshi·_ªg
 = (
dú_upd©e_±r
->
hi°‹y2
 << 1Ë| (!!
¥ed_èkí
);

965 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev2
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[0] = 
shi·_ªg
 ;

969 i‡(!
my°ricmp
 (
¥ed_ty≥2
, "2bcgskew"))

971 
	g¥ed_èkí
 = 
dú_upd©e_±r
->
¥ed_èkí2
;

973 #ifde‡
SMT_SS


974 
	gdú_upd©e_±r
->
	ghi°‹y2
 = 
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
];

976 
	gdú_upd©e_±r
->
	ghi°‹y2
 = 
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
;

978 
	gdú_upd©e_±r
->
	ghi°_shi·_out2
 = 
dú_upd©e_±r
->
hi°‹y2
 >> 31;

979 
	gshi·_ªg
 = (
dú_upd©e_±r
->
hi°‹y2
 << 1Ë| (!!
¥ed_èkí
);

981 #ifde‡
SMT_SS


982 
	g¥ed
->
	gdú¥ed
.
	gbim2
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
[
thªadid
] = 
¥ed
->
dú¥ed
.
g02
->
c⁄fig
.
b™k
.
shi·ªg
[thªadid] =Öªd->dú¥ed.
g12
->c⁄fig.b™k.shi·ªg[thªadid] =Öªd->dú¥ed.
mëa2
->c⁄fig.b™k.shi·ªg[thªadid] = 
shi·_ªg
;

984 
	g¥ed
->
	gdú¥ed
.
	gbim2
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 = 
¥ed
->
dú¥ed
.
g02
->
c⁄fig
.
b™k
.
shi·ªg
 =Öªd->dú¥ed.
g12
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
mëa2
->c⁄fig.b™k.shi·ªg = 
shi·_ªg
;

988 
∑nic
 ("sth wrong here in 2 bpred_update_history");

994 #ifde‡
SMT_SS


996 
	$b¥ed_2bcgskew_lookup
 (
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r
, 
md_addr_t
 
baddr
, 
thªadid
)

999 
	$b¥ed_2bcgskew_lookup
 (
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r
, 
md_addr_t
 
baddr
)

1002 
öfo_vec
, 
öfo_vec1
, 
öfo_vec2
;

1003 
shi·
;

1004 
mask
;

1005 
ödex
;

1006 
eff_addr
 = 
baddr
 >> 
MD_BR_SHIFT
;

1011 
shi·
 = 
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
log_size
;

1012 
mask
 = 
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
size
 - 1;

1013 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·_width
) |

1014 #ifde‡
SMT_SS


1015 (
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] &

1017 (
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
 &

1019 ((1 << 
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·_width
) - 1));

1020 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1021 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1023 
ödex
 = ((
	`H_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`Hb¨_func
 (
öfo_vec2
, shift, mask) ^ info_vec2) + 0) & mask;

1024 
dú_upd©e_±r
->
pdú1
 = &(
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1025 
dú_upd©e_±r
->
dú
.
bim1
 = *(dú_upd©e_±r->
pdú1
) > 1;

1028 
shi·
 = 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
log_size
;

1029 
mask
 = 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
size
 - 1;

1030 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·_width
) |

1031 #ifde‡
SMT_SS


1032 (
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] &

1034 (
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·ªg
 &

1036 ((1 << 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·_width
) - 1));

1037 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1038 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1040 
ödex
 = ((
	`H_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`Hb¨_func
 (
öfo_vec2
, shift, mask) ^ info_vec1)

1041  ) & 
mask
;

1042 
dú_upd©e_±r
->
pdú2
 = &(
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1043 
dú_upd©e_±r
->
dú
.
g01
 = *(dú_upd©e_±r->
pdú2
) > 1;

1046 
shi·
 = 
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
log_size
;

1047 
mask
 = 
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
size
 - 1;

1048 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
shi·_width
) |

1049 #ifde‡
SMT_SS


1050 (
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] &

1052 (
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
shi·ªg
 &

1054 ((1 << 
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
shi·_width
) - 1));

1055 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1056 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1058 
ödex
 = ((
	`Hb¨_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`H_func
 (
öfo_vec2
, shift, mask) ^ info_vec2)

1059  ) & 
mask
;

1060 
dú_upd©e_±r
->
pdú3
 = &(
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1061 
dú_upd©e_±r
->
dú
.
g11
 = *(dú_upd©e_±r->
pdú3
) > 1;

1064 
shi·
 = 
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
log_size
;

1065 
mask
 = 
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
size
 - 1;

1066 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
shi·_width
) |

1067 #ifde‡
SMT_SS


1068 (
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] &

1070 (
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
shi·ªg
 &

1072 ((1 << 
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
shi·_width
) - 1));

1073 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1074 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1076 
ödex
 = ((
	`Hb¨_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`H_func
 (
öfo_vec2
, shift, mask) ^ info_vec1)

1077  ) & 
mask
;

1078 
dú_upd©e_±r
->
pmëa
 = &(
¥ed
->
dú¥ed
.
mëa
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1079 
dú_upd©e_±r
->
dú
.
mëa
 = *(dú_upd©e_±r->
pmëa
) > 1;

1081 i‡(!
dú_upd©e_±r
->
dú
.
mëa
)

1082 
dú_upd©e_±r
->
¥ed_èkí
 = dú_upd©e_±r->
dú
.
bim1
;

1083 i‡(
dú_upd©e_±r
->
dú
.
g01
 =dú_upd©e_±r->dú.
g11
)

1084 
dú_upd©e_±r
->
¥ed_èkí
 = dú_upd©e_±r->
dú
.
g01
;

1086 
dú_upd©e_±r
->
¥ed_èkí
 = dú_upd©e_±r->
dú
.
bim1
;

1087 
	}
}

1092 
	$b¥ed_2bcgskew_lookup2
 (
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r
, 
md_addr_t
 
baddr
)

1094 
öfo_vec
, 
öfo_vec1
, 
öfo_vec2
;

1095 
shi·
;

1096 
mask
;

1097 
ödex
;

1098 
eff_addr
 = 
baddr
 >> 
MD_BR_SHIFT
;

1101 
shi·
 = 
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
log_size
;

1102 
mask
 = 
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
size
 - 1;

1103 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·_width
Ë| (¥ed->dú¥ed.bim2->c⁄fig.b™k.
shi·ªg
 & ((1 <<Öred->dirpred.bim2->config.bank.shift_width) - 1));

1104 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1105 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1107 
ödex
 = ((
	`H_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`Hb¨_func
 (
öfo_vec2
, shift, mask) ^ info_vec2) + 0) & mask;

1108 
dú_upd©e_±r
->
pdú12
 = &(
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1109 
dú_upd©e_±r
->
dú
.
bim2
 = *(dú_upd©e_±r->
pdú12
) > 1;

1112 
shi·
 = 
¥ed
->
dú¥ed
.
g02
->
c⁄fig
.
b™k
.
log_size
;

1113 
mask
 = 
¥ed
->
dú¥ed
.
g02
->
c⁄fig
.
b™k
.
size
 - 1;

1114 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
g02
->
c⁄fig
.
b™k
.
shi·_width
Ë| (¥ed->dú¥ed.g02->c⁄fig.b™k.
shi·ªg
 & ((1 <<Öred->dirpred.g02->config.bank.shift_width) - 1));

1115 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1116 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1118 
ödex
 = ((
	`H_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`Hb¨_func
 (
öfo_vec2
, shift, mask) ^ info_vec1)

1119  ) & 
mask
;

1120 
dú_upd©e_±r
->
pdú22
 = &(
¥ed
->
dú¥ed
.
g02
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1121 
dú_upd©e_±r
->
dú
.
g02
 = *(dú_upd©e_±r->
pdú22
) > 1;

1124 
shi·
 = 
¥ed
->
dú¥ed
.
g12
->
c⁄fig
.
b™k
.
log_size
;

1125 
mask
 = 
¥ed
->
dú¥ed
.
g12
->
c⁄fig
.
b™k
.
size
 - 1;

1126 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
g12
->
c⁄fig
.
b™k
.
shi·_width
Ë| (¥ed->dú¥ed.g12->c⁄fig.b™k.
shi·ªg
 & ((1 <<Öred->dirpred.g12->config.bank.shift_width) - 1));

1127 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1128 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1130 
ödex
 = ((
	`Hb¨_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`H_func
 (
öfo_vec2
, shift, mask) ^ info_vec2)

1131  ) & 
mask
;

1132 
dú_upd©e_±r
->
pdú32
 = &(
¥ed
->
dú¥ed
.
g12
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1133 
dú_upd©e_±r
->
dú
.
g12
 = *(dú_upd©e_±r->
pdú32
) > 1;

1136 
shi·
 = 
¥ed
->
dú¥ed
.
mëa2
->
c⁄fig
.
b™k
.
log_size
;

1137 
mask
 = 
¥ed
->
dú¥ed
.
mëa2
->
c⁄fig
.
b™k
.
size
 - 1;

1138 
öfo_vec
 = (
eff_addr
 << 
¥ed
->
dú¥ed
.
mëa2
->
c⁄fig
.
b™k
.
shi·_width
Ë| (¥ed->dú¥ed.mëa2->c⁄fig.b™k.
shi·ªg
 & ((1 <<Öred->dirpred.meta2->config.bank.shift_width) - 1));

1139 
öfo_vec2
 = 
öfo_vec
 & 
mask
;

1140 
öfo_vec1
 = (
öfo_vec
 & (
mask
 << 
shi·
)) >> shift;

1142 
ödex
 = ((
	`Hb¨_func
 (
öfo_vec1
, 
shi·
, 
mask
Ë^ 
	`H_func
 (
öfo_vec2
, shift, mask) ^ info_vec1)

1143  ) & 
mask
;

1144 
dú_upd©e_±r
->
pmëa2
 = &(
¥ed
->
dú¥ed
.
mëa2
->
c⁄fig
.
b™k
.
èbÀ
[
ödex
]);

1145 
dú_upd©e_±r
->
dú
.
mëa2
 = *(dú_upd©e_±r->
pmëa2
) > 1;

1147 i‡(!
dú_upd©e_±r
->
dú
.
mëa2
)

1148 
dú_upd©e_±r
->
¥ed_èkí2
 = dú_upd©e_±r->
dú
.
bim2
;

1149 i‡(
dú_upd©e_±r
->
dú
.
g02
 =dú_upd©e_±r->dú.
g12
)

1150 
dú_upd©e_±r
->
¥ed_èkí2
 = dú_upd©e_±r->
dú
.
g02
;

1152 
dú_upd©e_±r
->
¥ed_èkí2
 = dú_upd©e_±r->
dú
.
bim2
;

1153 
	}
}

1163 
md_addr_t


1164 
b¥ed_lookup
 (
b¥ed_t
 *
¥ed
,

1165 
md_addr_t
 
baddr
,

1166 
md_addr_t
 
bèrgë
,

1167 
md_›code
 
›
,

1168 
is_ˇŒ
,

1169 
is_ªtu∫
,

1170 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

1171 #ifde‡
SMT_SS


1172 *
°ack_ªcovî_idx
,

1174 
thªadid
, 
btb_thªadid


1177 *
	g°ack_ªcovî_idx
)

1181 
b¥ed_btb_ít_t
 *
	gpbtb
 = 
NULL
;

1182 
	gödex
, 
	gi
;

1184 i‡(!
	gdú_upd©e_±r
)

1185 
∑nic
 ("no bpred updateÑecord");

1188 #ifde‡
LOAD_PREDICTOR


1189 i‡(!(
MD_OP_FLAGS
 (
›
Ë& 
	gF_CTRL
Ë&& (
	g¥ed
->
	g˛ass
 !
LDPªd2bô
))

1192 i‡(!(
MD_OP_FLAGS
 (
›
Ë& 
	gF_CTRL
))

1196 
	g¥ed
->
	glookups
++;

1198 
	gdú_upd©e_±r
->
	gdú
.
	gøs
 = 
FALSE
;

1199 
	gdú_upd©e_±r
->
	gpdú1
 = 
NULL
;

1200 
	gdú_upd©e_±r
->
	gpdú2
 = 
NULL
;

1201 
	gdú_upd©e_±r
->
	gpmëa
 = 
NULL
;

1203 
	g¥ed
->
	g˛ass
)

1206 
	gBPªd2bcgskew
:

1207 
dú_upd©e_±r
->
pdú3
 = 
NULL
;

1208 i‡((
MD_OP_FLAGS
 (
›
Ë& (
	gF_CTRL
 | 
	gF_UNCOND
)Ë!(
F_CTRL
 | 
F_UNCOND
))

1209 #ifde‡
SMT_SS


1210 
b¥ed_2bcgskew_lookup
 (
¥ed
, 
dú_upd©e_±r
, 
baddr
, 
thªadid
);

1212 
b¥ed_2bcgskew_lookup
 (
¥ed
, 
dú_upd©e_±r
, 
baddr
);

1215 
	gBPªdComb
:

1216 i‡((
MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
)) != (F_CTRL | F_UNCOND))

1218 *
bimod
, *
twﬁev
, *
mëa
;

1220 #ifde‡
SMT_SS


1221 
	gbimod
 = 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
, 
thªadid
);

1222 
	gtwﬁev
 = 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
, 
thªadid
);

1223 
	gmëa
 = 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
mëa
, 
baddr
, 
thªadid
);

1225 
	gbimod
 = 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
);

1226 
	gtwﬁev
 = 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
);

1227 
	gmëa
 = 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
mëa
, 
baddr
);

1229 
	gdú_upd©e_±r
->
	gpmëa
 = 
mëa
;

1230 
	gdú_upd©e_±r
->
	gdú
.
	gmëa
 = (*
mëa
 >= 2);

1231 
	gdú_upd©e_±r
->
	gdú
.
	gbimod
 = (*
bimod
 >= 2);

1232 
	gdú_upd©e_±r
->
	gdú
.
	gtwﬁev
 = (*
twﬁev
 >= 2);

1233 i‡(*
	gmëa
 >= 2)

1235 
dú_upd©e_±r
->
pdú1
 = 
twﬁev
;

1236 
	gdú_upd©e_±r
->
	gpdú2
 = 
bimod
;

1240 
	gdú_upd©e_±r
->
	gpdú1
 = 
bimod
;

1241 
	gdú_upd©e_±r
->
	gpdú2
 = 
twﬁev
;

1245 
	gBPªd2Levñ
:

1246 i‡((
MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
)) != (F_CTRL | F_UNCOND))

1248 
dú_upd©e_±r
->
pdú1
 =

1249 #ifde‡
SMT_SS


1250 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
, 
thªadid
);

1252 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
twﬁev
, 
baddr
);

1256 #ifde‡
LOAD_PREDICTOR


1257 
	gLDPªd2bô
:

1258 
dú_upd©e_±r
->
pdú1
 =

1259 #ifde‡
SMT_SS


1260 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
, 
thªadid
);

1262 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
);

1264  ((*(
	gdú_upd©e_±r
->
	gpdú1
) >= 3) ? 1

1268 
	gBPªd2bô
:

1269 i‡((
MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
)) != (F_CTRL | F_UNCOND))

1271 
dú_upd©e_±r
->
pdú1
 =

1272 #ifde‡
SMT_SS


1273 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
, 
thªadid
);

1275 
b¥ed_dú_lookup
 (
¥ed
->
dú¥ed
.
bimod
, 
baddr
);

1279 
	gBPªdTakí
:

1280  
bèrgë
;

1281 
	gBPªdNŸTakí
:

1282 i‡((
MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
)) != (F_CTRL | F_UNCOND))

1284  
baddr
 +  (
md_ö°_t
);

1288  
	gbèrgë
;

1291 
∑nic
 ("bogusÖredictor class");

1297 i‡((
MD_OP_FLAGS
 (
›
Ë& (
	gF_CTRL
 | 
	gF_UNCOND
)Ë!(
F_CTRL
 | 
F_UNCOND
))

1299 i‡(
my°ricmp
 (
¥ed_ty≥
, "2bcgskew"))

1300 
dú_upd©e_±r
->
¥ed_èkí
 = *(dú_upd©e_±r->
pdú1
) >= 2;

1302 
	g¥ed_èkí
 = 
dú_upd©e_±r
->
¥ed_èkí
;

1304 i‡(
	gcomböed2
)

1306 i‡(!
my°ricmp
 (
¥ed_ty≥2
, "2bcgskew"))

1307 
b¥ed_2bcgskew_lookup2
 (
¥ed
, 
dú_upd©e_±r
, 
baddr
);

1309 
b¥ed_lookup2
 (
¥ed
, 
baddr
, 
›
, 
dú_upd©e_±r
);

1311 i‡(
	gu£_£l
)

1313 i‡(
	gdú_upd©e_±r
->
	g¥ed_èkí
 =
dú_upd©e_±r
->
¥ed_èkí2
)

1314 
¥ed_èkí
 = 
dú_upd©e_±r
->pred_taken;

1317 
	gdú_upd©e_±r
->
	ghi°_èb_ödx
 = ((
baddr
 >> 
MD_BR_SHIFT
Ë^ 
hi°_ªg
Ë% 
hi°_èb_size
;

1318 i‡(
£l_lookup
 (
dú_upd©e_±r
->
hi°_èb_ödx
, dú_upd©e_±r->
¥ed_èkí
))

1319 
	g¥ed_èkí
 = 
dú_upd©e_±r
->
¥ed_èkí
;

1321 
	g¥ed_èkí
 = 
dú_upd©e_±r
->
¥ed_èkí2
;

1336 #ifde‡
SMT_SS


1337 i‡(
	g¥ed
->
	gªt°ack
[
thªadid
].
	gsize
)

1338 *
	g°ack_ªcovî_idx
 = 
¥ed
->
ªt°ack
[
thªadid
].
tos
;

1340 *
	g°ack_ªcovî_idx
 = 0;

1343 i‡(
	gis_ªtu∫
 && 
	g¥ed
->
	gªt°ack
[
thªadid
].
	gsize
)

1345 
md_addr_t
 
	gèrgë
 = 
¥ed
->
ªt°ack
[
thªadid
].
°ack
[¥ed->ªt°ack[thªadid].
tos
].
èrgë
;

1347 
	g¥ed
->
	gªt°ack
[
thªadid
].
	gtos
 = (
¥ed
->
ªt°ack
[thªadid].
tos
 +Öªd->ªt°ack[thªadid].
size
 - 1) %Öred->retstack[threadid].size;

1348 
	g¥ed
->
	gªt°ack_p›s
++;

1349 
	gdú_upd©e_±r
->
	gdú
.
	gøs
 = 
TRUE
;

1350  
	gèrgë
;

1353 #i‚de‡
RAS_BUG_COMPATIBLE


1355 i‡(
	gis_ˇŒ
 && 
	g¥ed
->
	gªt°ack
[
thªadid
].
	gsize
)

1357 
	g¥ed
->
	gªt°ack
[
thªadid
].
	gtos
 = (
¥ed
->
ªt°ack
[thªadid].
tos
 + 1Ë%Öªd->ªt°ack[thªadid].
size
;

1358 
	g¥ed
->
	gªt°ack
[
thªadid
].
	g°ack
[
¥ed
->
ªt°ack
[thªadid].
	gtos
].
	gèrgë
 = 
baddr
 +  (
md_ö°_t
);

1359 
	g¥ed
->
	gªt°ack_pushes
++;

1364 i‡(
	g¥ed
->
	gªt°ack
.
	gsize
)

1365 *
	g°ack_ªcovî_idx
 = 
¥ed
->
ªt°ack
.
tos
;

1367 *
	g°ack_ªcovî_idx
 = 0;

1370 i‡(
	gis_ªtu∫
 && 
	g¥ed
->
	gªt°ack
.
	gsize
)

1372 
md_addr_t
 
	gèrgë
 = 
¥ed
->
ªt°ack
.
°ack
[¥ed->ªt°ack.
tos
].
èrgë
;

1374 
	g¥ed
->
	gªt°ack
.
	gtos
 = (
¥ed
->
ªt°ack
.
tos
 +Öªd->ªt°ack.
size
 - 1) %Öred->retstack.size;

1375 
	g¥ed
->
	gªt°ack_p›s
++;

1376 
	gdú_upd©e_±r
->
	gdú
.
	gøs
 = 
TRUE
;

1377  
	gèrgë
;

1380 #i‚de‡
RAS_BUG_COMPATIBLE


1382 i‡(
	gis_ˇŒ
 && 
	g¥ed
->
	gªt°ack
.
	gsize
)

1384 
	g¥ed
->
	gªt°ack
.
	gtos
 = (
¥ed
->
ªt°ack
.
tos
 + 1Ë%Öªd->ªt°ack.
size
;

1385 
	g¥ed
->
	gªt°ack
.
	g°ack
[
¥ed
->
ªt°ack
.
tos
].
	gèrgë
 = 
baddr
 +  (
md_ö°_t
);

1386 
	g¥ed
->
	gªt°ack_pushes
++;

1392 
	gödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

1394 i‡(
	g¥ed
->
	gbtb
.
	gassoc
 > 1)

1396 
	gödex
 *
¥ed
->
btb
.
assoc
;

1399 
	gi
 = 
ödex
; i < (
	gödex
 + 
	g¥ed
->
	gbtb
.
	gassoc
); i++)

1400 #ifde‡
SMT_SS


1401 i‡((
	g¥ed
->
	gbtb
.
	gbtb_d©a
[
i
].
	gaddr_id
.
	gaddr
 =
baddr
Ë&& (
¥ed
->
btb
.
btb_d©a
[i].
addr_id
.
thªadid
 =
btb_thªadid
))

1403 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

1407 
pbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

1413 
	gpbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

1414 #ifde‡
SMT_SS


1415 i‡((
	gpbtb
->
	gaddr_id
.
	gaddr
 !
baddr
Ë|| (
pbtb
->
addr_id
.
thªadid
 !
btb_thªadid
))

1417 i‡(
pbtb
->
addr
 !
baddr
)

1419 
pbtb
 = 
NULL
;

1427 i‡((
MD_OP_FLAGS
 (
›
Ë& (
	gF_CTRL
 | 
	gF_UNCOND
)Ë=(
F_CTRL
 | 
F_UNCOND
))

1429  (
pbtb
 ?Öbtb->
èrgë
 : 1);

1433 i‡(
	gpbtb
 =
NULL
)

1436  ((*(
dú_upd©e_±r
->
pdú1
) >= 2) ? 1

1442  ((*(
	gdú_upd©e_±r
->
	gpdú1
Ë>2Ë? 
pbtb
->
èrgë


1451 #ifde‡
SMT_SS


1452 
	$b¥ed_ªcovî
 (
b¥ed_t
 *
¥ed
,

1453 
md_addr_t
 
baddr
,

1454 
°ack_ªcovî_idx
,

1456 
thªadid
)

1458 i‡(
¥ed
 =
NULL
)

1461 
¥ed
->
ªt°ack
[
thªadid
].
tos
 = 
°ack_ªcovî_idx
;

1462 
	}
}

1466 
	$b¥ed_ªcovî
 (
b¥ed_t
 *
¥ed
,

1467 
md_addr_t
 
baddr
,

1468 
°ack_ªcovî_idx
)

1471 i‡(
¥ed
 =
NULL
)

1474 
¥ed
->
ªt°ack
.
tos
 = 
°ack_ªcovî_idx
;

1475 
	}
}

1481 
b¥ed_2bcgskew_upd©e
 (
b¥ed_t
 *
¥ed
,

1482 
md_addr_t
 
baddr
,

1483 
èkí
,

1484 
¥ed_èkí
,

1485 
c‹ª˘
,

1486 
b¥ed_upd©e_t
 *
dú_upd©e_±r


1487 #ifde‡
SMT_SS


1488 , 
thªadid


1492 
	gshi·_ªg
;

1495 
	g¥ed_èkí
 = 
dú_upd©e_±r
->
¥ed_èkí
;

1496 
	gc‹ª˘
 = 
¥ed_èkí
 =
èkí
;

1499 i‡(
	gc‹ª˘
)

1501 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gbim1
 !
dú_upd©e_±r
->
dú
.
g01
 || dú_upd©e_±r->dú.
bim1
 !dú_upd©e_±r->dú.
g11
)

1504 i‡(
dú_upd©e_±r
->
dú
.
g01
 =dú_upd©e_±r->dú.
g11
)

1507 i‡(
dú_upd©e_±r
->
dú
.
mëa
 && *(dú_upd©e_±r->
pmëa
) != 3)

1510 
as£π
 (
èkí
 =
dú_upd©e_±r
->
dú
.
g01
);

1511 ++*
	gdú_upd©e_±r
->
	gpmëa
;

1513 i‡(!
	gdú_upd©e_±r
->
	gdú
.
	gmëa
 && *dú_upd©e_±r->
	gpmëa
)

1516 
as£π
 (
èkí
 =
dú_upd©e_±r
->
dú
.
bim1
);

1517 --*
	gdú_upd©e_±r
->
	gpmëa
;

1520 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gmëa
)

1524 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
bim1
)

1526 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú1
) != 3)

1527 ++ * 
dú_upd©e_±r
->
pdú1
;

1528 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú1
)

1529 -- * 
	gdú_upd©e_±r
->
	gpdú1
;

1531 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g01
)

1533 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú2
) != 3)

1534 ++ * 
dú_upd©e_±r
->
pdú2
;

1535 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú2
)

1536 -- * 
	gdú_upd©e_±r
->
	gpdú2
;

1538 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g11
)

1540 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú3
) != 3)

1541 ++ * 
dú_upd©e_±r
->
pdú3
;

1542 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú3
)

1543 -- * 
	gdú_upd©e_±r
->
	gpdú3
;

1549 
as£π
 (
dú_upd©e_±r
->
dú
.
bim1
 =
èkí
);

1551 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 3)

1552 ++ * 
dú_upd©e_±r
->
pdú1
;

1553 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú1
)

1554 -- * 
	gdú_upd©e_±r
->
	gpdú1
;

1558 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gmëa
)

1562 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
bim1
)

1564 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú1
) != 3)

1565 ++ * 
dú_upd©e_±r
->
pdú1
;

1566 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú1
)

1567 -- * 
	gdú_upd©e_±r
->
	gpdú1
;

1569 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g01
)

1571 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú2
) != 3)

1572 ++ * 
dú_upd©e_±r
->
pdú2
;

1573 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú2
)

1574 -- * 
	gdú_upd©e_±r
->
	gpdú2
;

1576 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g11
)

1578 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú3
) != 3)

1579 ++ * 
dú_upd©e_±r
->
pdú3
;

1580 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú3
)

1581 -- * 
	gdú_upd©e_±r
->
	gpdú3
;

1587 
as£π
 (
dú_upd©e_±r
->
dú
.
bim1
 =
èkí
);

1589 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 3)

1590 ++ * 
dú_upd©e_±r
->
pdú1
;

1591 i‡(!
	gèkí
 && *
	gdú_upd©e_±r
->
	gpdú1
)

1592 -- * 
	gdú_upd©e_±r
->
	gpdú1
;

1599 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gbim1
 !
dú_upd©e_±r
->
dú
.
g01
 && dú_upd©e_±r->dú.
bim1
 !dú_upd©e_±r->dú.
g11
)

1604 i‡((
èkí
 =
dú_upd©e_±r
->
dú
.
bim1
Ë&& *dú_upd©e_±r->
pmëa
)

1606 
as£π
 (
dú_upd©e_±r
->
dú
.
mëa
);

1607 --*
	gdú_upd©e_±r
->
	gpmëa
;

1609 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g01
 && (*(dú_upd©e_±r->
pmëa
) < 3))

1611 
as£π
 (!
dú_upd©e_±r
->
dú
.
mëa
);

1612 ++*
	gdú_upd©e_±r
->
	gpmëa
;

1616 
	gdú_upd©e_±r
->
	gdú
.
	gmëa
 = *(
dú_upd©e_±r
->
pmëa
) > 1;

1620 i‡(!
	gdú_upd©e_±r
->
	gdú
.
	gmëa
)

1621 
	g¥eded_èkí
 = 
dú_upd©e_±r
->
dú
.
bim1
;

1623 
	g¥eded_èkí
 = (
dú_upd©e_±r
->
dú
.
bim1
 =dú_upd©e_±r->dú.
g01
Ë? dú_upd©e_±r->dú.bim1 : dú_upd©e_±r->dú.
g11
;

1626 i‡(
	g¥eded_èkí
 =
èkí
)

1628 i‡(!
dú_upd©e_±r
->
dú
.
mëa
)

1630 
as£π
 (
èkí
 =
dú_upd©e_±r
->
dú
.
bim1
);

1631 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 3)

1632 ++ * 
dú_upd©e_±r
->
pdú1
;

1633 i‡(!
	gèkí
 && 
	gdú_upd©e_±r
->
	gpdú1
 != 0)

1634 -- * 
dú_upd©e_±r
->
pdú1
;

1638 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
bim1
)

1640 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú1
) != 3)

1641 ++ * 
dú_upd©e_±r
->
pdú1
;

1642 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 0)

1643 -- * 
dú_upd©e_±r
->
pdú1
;

1645 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g01
)

1647 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú2
) != 3)

1648 ++ * 
dú_upd©e_±r
->
pdú2
;

1649 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú2
) != 0)

1650 -- * 
dú_upd©e_±r
->
pdú2
;

1652 i‡(
	gèkí
 =
dú_upd©e_±r
->
dú
.
g11
)

1654 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú3
) != 3)

1655 ++ * 
dú_upd©e_±r
->
pdú3
;

1656 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú3
) != 0)

1657 -- * 
dú_upd©e_±r
->
pdú3
;

1672 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 3)

1673 ++ * 
dú_upd©e_±r
->
pdú1
;

1674 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 0)

1675 -- * 
dú_upd©e_±r
->
pdú1
;

1676 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú2
) != 3)

1677 ++ * 
dú_upd©e_±r
->
pdú2
;

1678 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú2
) != 0)

1679 -- * 
dú_upd©e_±r
->
pdú2
;

1680 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú3
) != 3)

1681 ++ * 
dú_upd©e_±r
->
pdú3
;

1682 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú3
) != 0)

1683 -- * 
dú_upd©e_±r
->
pdú3
;

1689 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 3)

1690 ++ * 
dú_upd©e_±r
->
pdú1
;

1691 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú1
) != 0)

1692 -- * 
dú_upd©e_±r
->
pdú1
;

1693 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú2
) != 3)

1694 ++ * 
dú_upd©e_±r
->
pdú2
;

1695 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú2
) != 0)

1696 -- * 
dú_upd©e_±r
->
pdú2
;

1697 i‡(
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú3
) != 3)

1698 ++ * 
dú_upd©e_±r
->
pdú3
;

1699 i‡(!
	gèkí
 && *(
	gdú_upd©e_±r
->
	gpdú3
) != 0)

1700 -- * 
dú_upd©e_±r
->
pdú3
;

1703 i‡(!
	ghi°_imm
)

1706 #ifde‡
SMT_SS


1707 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] << 1Ë| (!!
èkí
);

1709 
	g¥ed
->
	gdú¥ed
.
	gbim1
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
[
thªadid
] = 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·ªg
[thªadid] =Öªd->dú¥ed.
g11
->c⁄fig.b™k.shi·ªg[thªadid] =Öªd->dú¥ed.
mëa
->c⁄fig.b™k.shi·ªg[thªadid] = 
shi·_ªg
;

1711 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
 << 1Ë| (!!
èkí
);

1713 
	g¥ed
->
	gdú¥ed
.
	gbim1
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 = 
¥ed
->
dú¥ed
.
g01
->
c⁄fig
.
b™k
.
shi·ªg
 =Öªd->dú¥ed.
g11
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
mëa
->c⁄fig.b™k.shi·ªg = 
shi·_ªg
;

1722 
	$b¥ed_2bcgskew_upd©e2
 (
b¥ed_t
 *
¥ed
,

1723 
md_addr_t
 
baddr
,

1724 
èkí
,

1725 
¥ed_èkí
,

1726 
c‹ª˘
,

1727 
b¥ed_upd©e_t
 *
dú_upd©e_±r
)

1729 
shi·_ªg
;

1736 i‡(
c‹ª˘
)

1738 i‡(
dú_upd©e_±r
->
dú
.
bim2
 !dú_upd©e_±r->dú.
g02
 || dú_upd©e_±r->dú.bim2 !dú_upd©e_±r->dú.
g12
)

1741 i‡(
dú_upd©e_±r
->
dú
.
g02
 =dú_upd©e_±r->dú.
g12
)

1744 i‡(
dú_upd©e_±r
->
dú
.
mëa2
 && *(dú_upd©e_±r->
pmëa2
) != 3)

1747 
	`as£π
 (
èkí
 =
dú_upd©e_±r
->
dú
.
g02
);

1748 ++*
dú_upd©e_±r
->
pmëa2
;

1750 i‡(!
dú_upd©e_±r
->
dú
.
mëa2
 && *dú_upd©e_±r->
pmëa2
)

1753 
	`as£π
 (
èkí
 =
dú_upd©e_±r
->
dú
.
bim2
);

1754 --*
dú_upd©e_±r
->
pmëa2
;

1757 i‡(
dú_upd©e_±r
->
dú
.
mëa2
)

1761 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
bim2
)

1763 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 3)

1764 ++ * 
dú_upd©e_±r
->
pdú12
;

1765 i‡(!
èkí
 && *
dú_upd©e_±r
->
pdú12
)

1766 -- * 
dú_upd©e_±r
->
pdú12
;

1768 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
g02
)

1770 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú22
) != 3)

1771 ++ * 
dú_upd©e_±r
->
pdú22
;

1772 i‡(!
èkí
 && *
dú_upd©e_±r
->
pdú22
)

1773 -- * 
dú_upd©e_±r
->
pdú22
;

1775 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
g12
)

1777 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú32
) != 3)

1778 ++ * 
dú_upd©e_±r
->
pdú32
;

1779 i‡(!
èkí
 && *
dú_upd©e_±r
->
pdú32
)

1780 -- * 
dú_upd©e_±r
->
pdú32
;

1786 
	`as£π
 (
dú_upd©e_±r
->
dú
.
bim2
 =
èkí
);

1788 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 3)

1789 ++ * 
dú_upd©e_±r
->
pdú12
;

1790 i‡(!
èkí
 && *
dú_upd©e_±r
->
pdú12
)

1791 -- * 
dú_upd©e_±r
->
pdú12
;

1798 i‡(
dú_upd©e_±r
->
dú
.
bim2
 !dú_upd©e_±r->dú.
g02
 && dú_upd©e_±r->dú.bim2 !dú_upd©e_±r->dú.
g12
)

1803 i‡((
èkí
 =
dú_upd©e_±r
->
dú
.
bim2
Ë&& *dú_upd©e_±r->
pmëa2
)

1805 
	`as£π
 (
dú_upd©e_±r
->
dú
.
mëa2
);

1806 --*
dú_upd©e_±r
->
pmëa2
;

1808 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
g02
 && (*(dú_upd©e_±r->
pmëa2
) < 3))

1810 
	`as£π
 (!
dú_upd©e_±r
->
dú
.
mëa2
);

1811 ++*
dú_upd©e_±r
->
pmëa2
;

1815 
dú_upd©e_±r
->
dú
.
mëa2
 = *(dú_upd©e_±r->
pmëa2
) > 1;

1819 i‡(!
dú_upd©e_±r
->
dú
.
mëa2
)

1820 
¥eded_èkí
 = 
dú_upd©e_±r
->
dú
.
bim2
;

1822 
¥eded_èkí
 = (
dú_upd©e_±r
->
dú
.
bim2
 =dú_upd©e_±r->dú.
g02
Ë? dú_upd©e_±r->dú.bim2 : dú_upd©e_±r->dú.
g12
;

1825 i‡(
¥eded_èkí
 =
èkí
 && !
dú_upd©e_±r
->
dú
.
mëa2
)

1828 
	`as£π
 (
èkí
 =
dú_upd©e_±r
->
dú
.
bim2
);

1829 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 3)

1830 ++ * 
dú_upd©e_±r
->
pdú12
;

1831 i‡(!
èkí
 && 
dú_upd©e_±r
->
pdú12
 != 0)

1832 -- * 
dú_upd©e_±r
->
pdú12
;

1836 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
bim2
)

1838 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 3)

1839 ++ * 
dú_upd©e_±r
->
pdú12
;

1840 i‡(!
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 0)

1841 -- * 
dú_upd©e_±r
->
pdú12
;

1843 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
g02
)

1845 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú22
) != 3)

1846 ++ * 
dú_upd©e_±r
->
pdú22
;

1847 i‡(!
èkí
 && *(
dú_upd©e_±r
->
pdú22
) != 0)

1848 -- * 
dú_upd©e_±r
->
pdú22
;

1850 i‡(
èkí
 =
dú_upd©e_±r
->
dú
.
g12
)

1852 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú32
) != 3)

1853 ++ * 
dú_upd©e_±r
->
pdú32
;

1854 i‡(!
èkí
 && *(
dú_upd©e_±r
->
pdú32
) != 0)

1855 -- * 
dú_upd©e_±r
->
pdú32
;

1862 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 3)

1863 ++ * 
dú_upd©e_±r
->
pdú12
;

1864 i‡(!
èkí
 && *(
dú_upd©e_±r
->
pdú12
) != 0)

1865 -- * 
dú_upd©e_±r
->
pdú12
;

1866 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú22
) != 3)

1867 ++ * 
dú_upd©e_±r
->
pdú22
;

1868 i‡(!
èkí
 && *(
dú_upd©e_±r
->
pdú22
) != 0)

1869 -- * 
dú_upd©e_±r
->
pdú22
;

1870 i‡(
èkí
 && *(
dú_upd©e_±r
->
pdú32
) != 3)

1871 ++ * 
dú_upd©e_±r
->
pdú32
;

1872 i‡(!
èkí
 && *(
dú_upd©e_±r
->
pdú32
) != 0)

1873 -- * 
dú_upd©e_±r
->
pdú32
;

1876 i‡(!
hi°_imm
)

1879 
shi·_ªg
 = (
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
 << 1Ë| (!!
èkí
);

1881 
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
 =Öªd->dú¥ed.
g02
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
g12
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
mëa2
->c⁄fig.b™k.shi·ªg = 
shi·_ªg
;

1885 
	}
}

1889 
MAX_BR_NUM
;

1890 *
bønch_addªss2
;

1893 
b¥ed_upd©e_hi°‹y1
 (
b¥ed_t
 *
¥ed
, 
èkí
, 
md_addr_t
 
baddr
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r


1894 #ifde‡
SMT_SS


1895 , 
thªadid


1899 
	ghis_pos
 ;

1900 
	gbr_pos
 ;

1901 
	gã°
 ;

1902 
c⁄ãxt
 *
	gcuºít
 = 
thec⁄ãxts
[
thªadid
];

1904 
	ghis_pos
 = (
cuºít
->
bønch_èû2
 + (
MAX_BR_NUM
 + 1Ë- 
dú_upd©e_±r
->branch_tail2) % (MAX_BR_NUM + 1);

1905 
	gbr_pos
 = (
dú_upd©e_±r
->
bønch_èû2
 + (
MAX_BR_NUM
 + 1) - 1) % (MAX_BR_NUM + 1);

1906 
as£π
 (
baddr
 =
cuºít
->
bønch_addªss2
[
br_pos
]);

1908 i‡(
	ghis_pos
 > 31)

1911 
	gã°
 = 1 << 
his_pos
;

1912 
as£π
 (
ã°
);

1915 
	g¥ed
->
	g˛ass
)

1918 
	gBPªdComb
:

1919 
BPªd2Levñ
:

1921 i‡(
his_pos
 < 
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·_width
)

1922 
as£π
 (!!
èkí
 =!!(
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[0] & 
ã°
));

1927 i‡(
	ghis_pos
 < 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev
->
	gc⁄fig
.
	gtwo
.
	gshi·_width
)

1929 
as£π
 (!
èkí
 =!!(
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[0] & 
ã°
));

1930 i‡(
	gèkí
)

1931 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[0] |
ã°
;

1933 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[0] &~
ã°
;

1939 
	gBPªd2bcgskew
:

1941 #ifde‡
SMT_SS


1942 
as£π
 (!!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] & 
ã°
));

1944 
as£π
 (!!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
 & 
ã°
));

1949 
as£π
 (!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim1
->
c⁄fig
.
b™k
.
shi·ªg
 & 
ã°
));

1950 i‡(
	gèkí
)

1951 
	g¥ed
->
	gdú¥ed
.
	gbim1
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 |
ã°
;

1953 
	g¥ed
->
	gdú¥ed
.
	gbim1
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 &~
ã°
;

1954 
	g¥ed
->
	gdú¥ed
.
	gg01
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 = 
¥ed
->
dú¥ed
.
g11
->
c⁄fig
.
b™k
.
shi·ªg
 =Öªd->dú¥ed.
mëa
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
bim1
->config.bank.shiftreg;

1959 
	gBPªdARVI
:

1963 
∑nic
 ("sth wrong here in bpred_update_history1");

1969 i‡(!
my°ricmp
 (
¥ed_ty≥2
, "comb") || !mystricmp (pred_type2, "2lev"))

1971 i‡(
	gèkí
 =
dú_upd©e_±r
->
¥ed_èkí2
)

1974 i‡(
his_pos
 < 
¥ed
->
dú¥ed
.
twﬁev2
->
c⁄fig
.
two
.
shi·_width
)

1975 
as£π
 (!!
èkí
 =!!(
¥ed
->
dú¥ed
.
twﬁev2
->
c⁄fig
.
two
.
shi·ªgs
[0] & 
ã°
));

1977 i‡(
	ghis_pos
 < 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev2
->
	gc⁄fig
.
	gtwo
.
	gshi·_width
)

1980 
as£π
 (!
èkí
 =!!(
¥ed
->
dú¥ed
.
twﬁev2
->
c⁄fig
.
two
.
shi·ªgs
[0] & 
ã°
));

1981 i‡(
	gèkí
)

1982 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev2
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[0] |
ã°
;

1984 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev2
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[0] &~
ã°
;

1989 i‡(!
my°ricmp
 (
¥ed_ty≥2
, "2bcgskew"))

1991 i‡(
	gèkí
 =
dú_upd©e_±r
->
¥ed_èkí2
)

1993 #ifde‡
SMT_SS


1994 
as£π
 (!!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] & 
ã°
));

1996 
as£π
 (!!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
 & 
ã°
));

2000 #ifde‡
SMT_SS


2002 
as£π
 (!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
[
thªadid
] & 
ã°
));

2003 i‡(
	gèkí
)

2004 
	g¥ed
->
	gdú¥ed
.
	gbim2
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
[
thªadid
] |
ã°
;

2006 
	g¥ed
->
	gdú¥ed
.
	gbim2
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
[
thªadid
] &~
ã°
;

2007 
	g¥ed
->
	gdú¥ed
.
	gg02
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
[
thªadid
] = 
¥ed
->
dú¥ed
.
g12
->
c⁄fig
.
b™k
.
shi·ªg
[thªadid] =Öªd->dú¥ed.
mëa2
->c⁄fig.b™k.shi·ªg[thªadid] =Öªd->dú¥ed.
bim2
->config.bank.shiftreg[threadid];

2009 
as£π
 (!
èkí
 =!!(
¥ed
->
dú¥ed
.
bim2
->
c⁄fig
.
b™k
.
shi·ªg
 & 
ã°
));

2010 i‡(
	gèkí
)

2011 
	g¥ed
->
	gdú¥ed
.
	gbim2
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 |
ã°
;

2013 
	g¥ed
->
	gdú¥ed
.
	gbim2
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 &~
ã°
;

2014 
	g¥ed
->
	gdú¥ed
.
	gg02
->
	gc⁄fig
.
	gb™k
.
	gshi·ªg
 = 
¥ed
->
dú¥ed
.
g12
->
c⁄fig
.
b™k
.
shi·ªg
 =Öªd->dú¥ed.
mëa2
->c⁄fig.b™k.shi·ªg =Öªd->dú¥ed.
bim2
->config.bank.shiftreg;

2019 
∑nic
 ("sth wrong here in 2 bpred_update_history");

2030 
b¥ed_upd©e
 (
b¥ed_t
 *
¥ed
,

2031 
md_addr_t
 
baddr
,

2032 
md_addr_t
 
bèrgë
,

2033 
èkí
,

2034 
¥ed_èkí
,

2035 
c‹ª˘
,

2036 
md_›code
 
›
,

2037 #ifde‡
SMT_SS


2038 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

2039 
thªadid
, 
btb_thªadid


2042 
b¥ed_upd©e_t
 *
	gdú_upd©e_±r
)

2045 
b¥ed_btb_ít_t
 *
	gpbtb
 = 
NULL
;

2046 
b¥ed_btb_ít_t
 *
	gÃuhód
 = 
NULL
, *
	gÃuôem
 = NULL;

2047 
	gödex
, 
	gi
;

2051 #ifde‡
LOAD_PREDICTOR


2052 i‡(!(
MD_OP_FLAGS
 (
›
Ë& 
	gF_CTRL
Ë&& (
	g¥ed
->
	g˛ass
 !
LDPªd2bô
))

2055 i‡(!(
MD_OP_FLAGS
 (
›
Ë& 
	gF_CTRL
))

2061 i‡(
	gc‹ª˘
)

2062 
	g¥ed
->
	gaddr_hôs
++;

2064 i‡(!!
	g¥ed_èkí
 =!!
èkí
)

2065 
¥ed
->
dú_hôs
++;

2067 
	g¥ed
->
	gmis£s
++;

2069 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gøs
)

2071 
	g¥ed
->
	gu£d_øs
++;

2072 i‡(
	gc‹ª˘
)

2073 
	g¥ed
->
	gøs_hôs
++;

2075 i‡((
MD_OP_FLAGS
 (
›
Ë& (
	gF_CTRL
 | 
	gF_COND
)Ë=(
F_CTRL
 | 
F_COND
))

2078 
as£π
 ((
MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
)) != (F_CTRL | F_UNCOND));

2079 i‡(
	g¥ed
->
	g˛ass
 =
BPªd2bcgskew
)

2080 
b¥ed_2bcgskew_upd©e
 (
¥ed
, 
baddr
, 
èkí
, 
¥ed_èkí
,Åakí =¥ed_èkí, 
dú_upd©e_±r


2081 #ifde‡
SMT_SS


2082 , 
thªadid


2085 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gmëa
)

2086 
	g¥ed
->
	gu£d_2Àv
++;

2088 
	g¥ed
->
	gu£d_bimod
++;

2091 i‡(
	gcomböed2
)

2094 i‡(!
my°ricmp
 (
¥ed_ty≥2
, "2bcgskew"))

2095 
b¥ed_2bcgskew_upd©e2
 (
¥ed
, 
baddr
, 
èkí
, 
dú_upd©e_±r
->
¥ed_èkí2
,Åaken == dir_update_ptr->pred_taken2, dir_update_ptr);

2098 
b¥ed_upd©e2
 (
¥ed
, 
èkí
, 
dú_upd©e_±r
->
¥ed_èkí2
, 
baddr
, 
›
, dir_update_ptr);

2100 
∑nic
 ("bpred_2bcgskew_update2ánd bpred_update2ÇotÖresent.");

2114 i‡(
MD_IS_INDIR
 (
›
))

2116 
	g¥ed
->
	gjr_£í
++;

2117 i‡(
	gc‹ª˘
)

2118 
	g¥ed
->
	gjr_hôs
++;

2120 i‡(!
	gdú_upd©e_±r
->
	gdú
.
	gøs
)

2122 
	g¥ed
->
	gjr_n⁄_øs_£í
++;

2123 i‡(
	gc‹ª˘
)

2124 
	g¥ed
->
	gjr_n⁄_øs_hôs
++;

2134 i‡(
	g¥ed
->
	g˛ass
 =
BPªdNŸTakí
 || 
¥ed
->
˛ass
 =
BPªdTakí
)

2138 #ifde‡
LOAD_PREDICTOR


2139 i‡(
	g¥ed
->
	g˛ass
 =
LDPªd2bô
)

2141 i‡(
dú_upd©e_±r
->
pdú1
)

2143 i‡(
èkí
)

2145 i‡(*
dú_upd©e_±r
->
pdú1
 < 3)

2146 ++ * 
dú_upd©e_±r
->
pdú1
;

2150 i‡(*
	gdú_upd©e_±r
->
	gpdú1
 > 0)

2151 *
	gdú_upd©e_±r
->
	gpdú1
 = 0;

2163 #ifde‡
SMT_SS


2164 #ifde‡
RAS_BUG_COMPATIBLE


2166 i‡(
MD_IS_CALL
 (
›
Ë&& 
	g¥ed
->
	gªt°ack
[
thªadid
].
	gsize
)

2168 
	g¥ed
->
	gªt°ack
[
thªadid
].
	gtos
 = (
¥ed
->
ªt°ack
[thªadid].
tos
 + 1Ë%Öªd->ªt°ack[thªadid].
size
;

2169 
	g¥ed
->
	gªt°ack
[
thªadid
].
	g°ack
[
¥ed
->
ªt°ack
[thªadid].
	gtos
].
	gèrgë
 = 
baddr
 +  (
md_ö°_t
);

2170 
	g¥ed
->
	gªt°ack_pushes
++;

2174 #ifde‡
RAS_BUG_COMPATIBLE


2176 i‡(
MD_IS_CALL
 (
›
Ë&& 
	g¥ed
->
	gªt°ack
.
	gsize
)

2178 
	g¥ed
->
	gªt°ack
.
	gtos
 = (
¥ed
->
ªt°ack
.
tos
 + 1Ë%Öªd->ªt°ack.
size
;

2179 
	g¥ed
->
	gªt°ack
.
	g°ack
[
¥ed
->
ªt°ack
.
tos
].
	gèrgë
 = 
baddr
 +  (
md_ö°_t
);

2180 
	g¥ed
->
	gªt°ack_pushes
++;

2188 i‡(!
	ghi°_imm
 && (
MD_OP_FLAGS
 (
›
Ë& (
	gF_CTRL
 | 
	gF_UNCOND
)Ë!(
F_CTRL
 | 
F_UNCOND
Ë&& (
¥ed
->
˛ass
 =
BPªd2Levñ
 ||Öªd->˛as†=
BPªdComb
))

2190 
l1ödex
, 
shi·_ªg
;

2193 
	gl1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
l1size
 - 1);

2194 #ifde‡
SMT_SS


2195 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
thªadid
][
l1ödex
] << 1Ë| (!!
èkí
);

2196 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[
thªadid
][
l1ödex
] =

2198 
shi·_ªg
 ;

2200 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
twﬁev
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] << 1Ë| (!!
èkí
);

2201 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[
l1ödex
] =

2203 
shi·_ªg
 ;

2207 i‡(
	ghi°_imm
 && 
	gcomböed2
 && (
	gèkí
 =
¥ed_èkí
Ë&& (
MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
)) != (F_CTRL | F_UNCOND))

2208 
b¥ed_upd©e_hi°‹y1
 (
¥ed
, 
èkí
, 
baddr
, 
dú_upd©e_±r


2209 #ifde‡
SMT_SS


2210 , 
thªadid


2214 i‡(!
	ghi°_imm
 && (
MD_OP_FLAGS
 (
›
Ë& (
	gF_CTRL
 | 
	gF_UNCOND
)Ë!(
F_CTRL
 | 
F_UNCOND
Ë&& (
¥ed
->
˛ass
 =
BPªdComb2
))

2216 
l1ödex
, 
shi·_ªg
;

2219 
	gl1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
dú¥ed
.
twﬁev1
->
c⁄fig
.
two
.
l1size
 - 1);

2220 #ifde‡
SMT_SS


2221 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
twﬁev1
->
c⁄fig
.
two
.
shi·ªgs
[
thªadid
][
l1ödex
] << 1Ë| (!!
èkí
);

2222 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev1
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[
thªadid
][
l1ödex
] = 
shi·_ªg
 ;

2224 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
twﬁev1
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] << 1Ë| (!!
èkí
);

2225 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev1
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[
l1ödex
] = 
shi·_ªg
 ;

2228 
	gl1ödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
dú¥ed
.
twﬁev12
->
c⁄fig
.
two
.
l1size
 - 1);

2229 #ifde‡
SMT_SS


2230 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
twﬁev12
->
c⁄fig
.
two
.
shi·ªgs
[
thªadid
][
l1ödex
] << 1Ë| (!!
èkí
);

2231 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev12
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[
thªadid
][
l1ödex
] = 
shi·_ªg
 ;

2233 
	gshi·_ªg
 = (
¥ed
->
dú¥ed
.
twﬁev12
->
c⁄fig
.
two
.
shi·ªgs
[
l1ödex
] << 1Ë| (!!
èkí
);

2234 
	g¥ed
->
	gdú¥ed
.
	gtwﬁev12
->
	gc⁄fig
.
	gtwo
.
	gshi·ªgs
[
l1ödex
] = 
shi·_ªg
 ;

2241 i‡(
	gèkí
)

2243 
	gödex
 = (
baddr
 >> 
MD_BR_SHIFT
Ë& (
¥ed
->
btb
.
£ts
 - 1);

2245 i‡(
	g¥ed
->
	gbtb
.
	gassoc
 > 1)

2247 
	gödex
 *
¥ed
->
btb
.
assoc
;

2251 
	gi
 = 
ödex
; i < (
	gödex
 + 
	g¥ed
->
	gbtb
.
	gassoc
); i++)

2253 #ifde‡
SMT_SS


2254 i‡((
	g¥ed
->
	gbtb
.
	gbtb_d©a
[
i
].
	gaddr_id
.
	gaddr
 =
baddr
Ë&& (
¥ed
->
btb
.
btb_d©a
[i].
addr_id
.
thªadid
 =
btb_thªadid
))

2256 i‡(
¥ed
->
btb
.
btb_d©a
[
i
].
addr
 =
baddr
)

2260 
as£π
 (!
pbtb
);

2261 
	gpbtb
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

2264 
das£π
 (
¥ed
->
btb
.
btb_d©a
[
i
].
¥ev
 !¥ed->btb.btb_d©a[i].
√xt
);

2265 i‡(
	g¥ed
->
	gbtb
.
	gbtb_d©a
[
i
].
	g¥ev
 =
NULL
)

2268 
das£π
 (
Ãuhód
 =
NULL
);

2269 
	gÃuhód
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

2271 i‡(
	g¥ed
->
	gbtb
.
	gbtb_d©a
[
i
].
	g√xt
 =
NULL
)

2274 
das£π
 (
Ãuôem
 =
NULL
);

2275 
	gÃuôem
 = &
¥ed
->
btb
.
btb_d©a
[
i
];

2278 
das£π
 (
Ãuhód
 && 
Ãuôem
);

2280 i‡(!
	gpbtb
)

2282 
	gpbtb
 = 
Ãuôem
;

2288 i‡(
	gpbtb
 !
Ãuhód
)

2291 i‡(
pbtb
->
¥ev
)

2292 
pbtb
->
¥ev
->
√xt
 =Öbtb->next;

2293 i‡(
	gpbtb
->
	g√xt
)

2294 
	gpbtb
->
	g√xt
->
	g¥ev
 = 
pbtb
->
¥ev
;

2296 
	gpbtb
->
	g√xt
 = 
Ãuhód
;

2297 
	gpbtb
->
	g¥ev
 = 
NULL
;

2298 
	gÃuhód
->
	g¥ev
 = 
pbtb
;

2299 
das£π
 (
pbtb
->
¥ev
 ||Öbtb->
√xt
);

2300 
das£π
 (
pbtb
->
¥ev
 !pbtb->
√xt
);

2305 
	gpbtb
 = &
¥ed
->
btb
.
btb_d©a
[
ödex
];

2309 i‡(
	g¥ed
->
	g˛ass
 !
BPªd2bcgskew
 && 
¥ed
->
˛ass
 !
BPªdComb2
)

2318 i‡(
dú_upd©e_±r
->
pdú1
)

2320 i‡(
èkí
)

2322 i‡(*
dú_upd©e_±r
->
pdú1
 < 3)

2323 ++ * 
dú_upd©e_±r
->
pdú1
;

2327 i‡(*
	gdú_upd©e_±r
->
	gpdú1
 > 0)

2328 -- * 
	gdú_upd©e_±r
->
	gpdú1
;

2334 i‡(
	gdú_upd©e_±r
->
	gpdú2
)

2336 i‡(
	gèkí
)

2338 i‡(*
	gdú_upd©e_±r
->
	gpdú2
 < 3)

2339 ++ * 
	gdú_upd©e_±r
->
	gpdú2
;

2343 i‡(*
	gdú_upd©e_±r
->
	gpdú2
 > 0)

2344 -- * 
	gdú_upd©e_±r
->
	gpdú2
;

2349 i‡(
	gdú_upd©e_±r
->
	gpmëa
)

2351 i‡(
	gdú_upd©e_±r
->
	gdú
.
	gbimod
 !
dú_upd©e_±r
->
dú
.
twﬁev
)

2354 i‡(
dú_upd©e_±r
->
dú
.
twﬁev
 =(Ë
èkí
)

2357 i‡(*
dú_upd©e_±r
->
pmëa
 < 3)

2358 ++ * 
dú_upd©e_±r
->
pmëa
;

2363 i‡(*
	gdú_upd©e_±r
->
	gpmëa
 > 0)

2364 -- * 
	gdú_upd©e_±r
->
	gpmëa
;

2371 i‡(
	gpbtb
)

2374 
das£π
 (
èkí
);

2376 #ifde‡
SMT_SS


2377 i‡((
	gpbtb
->
	gaddr_id
.
	gaddr
 =
baddr
Ë&& (
pbtb
->
addr_id
.
thªadid
 =
btb_thªadid
))

2379 i‡(
pbtb
->
addr
 =
baddr
)

2382 i‡(!
c‹ª˘
)

2383 
pbtb
->
èrgë
 = 
bèrgë
;

2388 #ifde‡
SMT_SS


2389 
	gpbtb
->
	gaddr_id
.
	gaddr
 = 
baddr
;

2390 
	gpbtb
->
	gaddr_id
.
	gthªadid
 = 
btb_thªadid
;

2392 
	gpbtb
->
	gaddr
 = 
baddr
;

2394 
	gpbtb
->
	g›
 = 
›
;

2395 
	gpbtb
->
	gèrgë
 = 
bèrgë
;

	@bpred.h

153 #i‚de‡
BPRED_H


154 
	#BPRED_H


	)

156 
	#das£π
(
a
Ë
	`as£π
◊)

	)

158 
	~<°dio.h
>

160 
	~"ho°.h
"

161 
	~"misc.h
"

162 
	~"machöe.h
"

163 
	~"°©s.h
"

165 
	~"smt.h
"

210 
	eb¥ed_˛ass
 {

211 
	mBPªdComb
,

212 
	mBPªd2Levñ
,

213 
	mBPªd2bô
,

214 #ifde‡
LOAD_PREDICTOR


215 
	mLDPªd2bô
,

217 
	mBPªdTakí
,

218 
	mBPªdNŸTakí
,

221 
	mBPªdARVI
,

222 
	mBPªdComb2
,

223 
	mBPªd2bcgskew
,

225 
	mBPªd_NUM


228 #ifde‡
SMT_SS


229 
	saddr_id_t


231 
	mthªadid
;

232 
md_addr_t
 
	maddr
;

237 
	sb¥ed_btb_ít_t
 {

238 #ifde‡
SMT_SS


239 
addr_id_t
 
	maddr_id
;

241 
md_addr_t
 
	maddr
;

243 
md_›code
 
	m›
;

244 
md_addr_t
 
	mèrgë
;

245 
b¥ed_btb_ít_t
 *
	m¥ev
, *
	m√xt
;

249 
	sb¥ed_dú_t
 {

250 
b¥ed_˛ass
 
	m˛ass
;

253 
	msize
;

254 *
	mèbÀ
;

255 } 
	mbimod
;

257 
	ml1size
;

258 
	ml2size
;

259 
	mshi·_width
;

260 
	mx‹
;

261 #ifde‡
SMT_SS


262 *
	mshi·ªgs
[
MAXTHREADS
];

264 *
	mshi·ªgs
;

266 *
	ml2èbÀ
;

267 } 
	mtwo
;

270 
	msize
;

271 
	mlog_size
;

272 #ifde‡
SMT_SS


273 
	mshi·ªg
[
MAXTHREADS
];

275 
	mshi·ªg
;

277 *
	mèbÀ
;

278 
	mshi·_width
;

279 } 
	mb™k
;

280 } 
	mc⁄fig
;

284 
	sb¥ed_t
 {

285 
b¥ed_˛ass
 
	m˛ass
;

287 
b¥ed_dú_t
 *
	mbimod
;

288 
b¥ed_dú_t
 *
	mtwﬁev
;

289 
b¥ed_dú_t
 *
	mmëa
;

292 
b¥ed_dú_t
 *
	mbimod2
;

293 
b¥ed_dú_t
 *
	mtwﬁev2
;

294 
b¥ed_dú_t
 *
	mmëa2
;

295 
bvô_t
 *
	mb_öfo_t
;

298 
b¥ed_dú_t
 *
	mtwﬁev1
;

299 
b¥ed_dú_t
 *
	mtwﬁev12
;

302 
b¥ed_dú_t
 *
	mbim1
;

303 
b¥ed_dú_t
 *
	mg01
;

304 
b¥ed_dú_t
 *
	mg11
;

306 
b¥ed_dú_t
 *
	mbim2
;

307 
b¥ed_dú_t
 *
	mg02
;

308 
b¥ed_dú_t
 *
	mg12
;

310 } 
	mdú¥ed
;

313 
	m£ts
;

314 
	massoc
;

315 
b¥ed_btb_ít_t
 *
	mbtb_d©a
;

316 } 
	mbtb
;

319 
	msize
;

320 
	mtos
;

321 
b¥ed_btb_ít_t
 *
	m°ack
;

322 #ifde‡
SMT_SS


323 } 
	mªt°ack
[
MAXTHREADS
];

325 } 
	mªt°ack
;

329 
cou¡î_t
 
	maddr_hôs
;

330 
cou¡î_t
 
	mdú_hôs
;

331 
cou¡î_t
 
	mu£d_øs
;

332 
cou¡î_t
 
	mu£d_bimod
;

333 
cou¡î_t
 
	mu£d_2Àv
;

334 
cou¡î_t
 
	mjr_hôs
;

335 
cou¡î_t
 
	mjr_£í
;

336 
cou¡î_t
 
	mjr_n⁄_øs_hôs
;

337 
cou¡î_t
 
	mjr_n⁄_øs_£í
;

338 
cou¡î_t
 
	mmis£s
;

340 
cou¡î_t
 
	mlookups
;

341 
cou¡î_t
 
	mªt°ack_p›s
;

342 
cou¡î_t
 
	mªt°ack_pushes
;

343 
cou¡î_t
 
	møs_hôs
;

347 
	sb¥ed_upd©e_t
 {

348 *
	mpdú1
;

349 *
	mpdú2
;

350 *
	mpmëa
;

353 *
	mpdú12
;

354 *
	mpdú22
;

355 *
	mpmëa2
;

358 *
	mpdú3
;

359 *
	mpdú32
;

361 
	m¥ed_èkí
 : 1;

362 
	m¥ed_èkí2
 : 1;

363 
	mtwﬁev2_u£d
 : 1;

365 
	mhi°_shi·_out
 : 1;

366 
	mhi°_shi·_out2
 : 1;

367 
	mhi°_èb_ödx
;

369 
	mbuckë_ödex
;

372 
	mhi°‹y
;

373 
	mhi°‹y2
;

376 
	mbønch_èû2
;

378 
md_addr_t
 *
	m°ack
;

381 
	møs
 : 1;

382 
	mbimod
 : 1;

383 
	mtwﬁev
 : 1;

384 
	mtwﬁev2
 : 1;

385 
	mtwﬁev1
 : 1;

386 
	mtwﬁev12
 : 1;

387 
	mmëa
 : 1;

388 
	mmëa2
 : 1;

390 
	mbim1
 : 1;

391 
	mg01
 : 1;

392 
	mg11
 : 1;

393 
	mbim2
 : 1;

394 
	mg02
 : 1;

395 
	mg12
 : 1;

397 } 
	mdú
;

401 
b¥ed_t
 *

402 
b¥ed_¸óã
(
b¥ed_˛ass
 
˛ass
,

403 
bimod_size
,

404 
l1size
,

405 
l2size
,

406 
mëa_size
,

407 
shi·_width
,

408 
x‹
,

409 
btb_£ts
,

410 
btb_assoc
,

411 
ªt°ack_size
);

414 
b¥ed_t
 *

415 
b¥ed_2bcgskew_¸óã
– 
bimod_size
,

416  
size
,

417  
shi·_width_bimod
,

418  
shi·_width_g0
,

419  
shi·_width_g1
,

420  
shi·_width_mëa
,

421  
btb_£ts
,

422  
btb_assoc
,

423  
øs_size
);

425 
b¥ed_2bcgskew_¸óã2
– 
bimod_size
,

426  
size
,

427  
shi·_width_bimod
,

428  
shi·_width_g0
,

429  
shi·_width_g1
,

430  
shi·_width_mëa
,

431  
b¥ed_t
 *
¥ed
);

434 
b¥ed_upd©e_hi°‹y
(
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r


435 #ifde‡
SMT_SS


436 , 
thªadid


442 
b¥ed_upd©e_hi°‹y1
(
b¥ed_t
 *
¥ed
, 
èkí
, 
md_addr_t
 
baddr
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r


443 #ifde‡
SMT_SS


444 , 
thªadid


449 #ifde‡
SMT_SS


450 
b¥ed_2bcgskew_lookup
(
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r
, 
md_addr_t
 
baddr
, 
thªadid
);

452 
b¥ed_2bcgskew_lookup
(
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r
, 
md_addr_t
 
baddr
);

455 
b¥ed_2bcgskew_lookup2
(
b¥ed_t
 *
¥ed
, 
b¥ed_upd©e_t
 *
dú_upd©e_±r
, 
md_addr_t
 
baddr
);

460 
b¥ed_2bcgskew_upd©e
(
b¥ed_t
 *
¥ed
,

461 
md_addr_t
 
baddr
,

462 
èkí
,

463 
¥ed_èkí
,

464 
c‹ª˘
,

465 
b¥ed_upd©e_t
 *
dú_upd©e_±r


466 #ifde‡
SMT_SS


467 , 
thªadid


473 
b¥ed_2bcgskew_upd©e2
(
b¥ed_t
 *
¥ed
,

474 
md_addr_t
 
baddr
,

475 
èkí
,

476 
¥ed_èkí
,

477 
c‹ª˘
,

478 
b¥ed_upd©e_t
 *
dú_upd©e_±r
);

481 
b¥ed_dú_t
 *

482 
b¥ed_dú_¸óã
 (

483 
b¥ed_˛ass
 
˛ass
,

484 
l1size
,

485 
l2size
,

486 
shi·_width
,

487 
x‹
);

491 
b¥ed_c⁄fig
(
b¥ed_t
 *
¥ed
,

492 
FILE
 *
°ªam
);

496 
b¥ed_°©s
(
b¥ed_t
 *
¥ed
,

497 
FILE
 *
°ªam
);

501 
b¥ed_ªg_°©s
(
b¥ed_t
 *
¥ed
,

502 
°©_sdb_t
 *
sdb
, 
thªadid
);

505 
b¥ed_a·î_¥imög
(
b¥ed_t
 *
b¥ed
);

514 
md_addr_t


515 
b¥ed_lookup
(
b¥ed_t
 *
¥ed
,

516 
md_addr_t
 
baddr
,

517 
md_addr_t
 
bèrgë
,

518 
md_›code
 
›
,

519 
is_ˇŒ
,

520 
is_ªtu∫
,

521 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

522 #ifde‡
SMT_SS


523 *
°ack_ªcovî_idx
,

525 
thªadid
,

526 
btb_thªadid


529 *
	g°ack_ªcovî_idx
);

538 
b¥ed_ªcovî
(
b¥ed_t
 *
¥ed
,

539 
md_addr_t
 
baddr
,

540 #ifde‡
SMT_SS


541 
°ack_ªcovî_idx
,

543 
thªadid
);

545 
	g°ack_ªcovî_idx
);

558 
b¥ed_upd©e
(
b¥ed_t
 *
¥ed
,

559 
md_addr_t
 
baddr
,

560 
md_addr_t
 
bèrgë
,

561 
èkí
,

562 
¥ed_èkí
,

563 
c‹ª˘
,

564 
md_›code
 
›
,

565 #ifde‡
SMT_SS


566 
b¥ed_upd©e_t
 *
dú_upd©e_±r
,

567 
thªadid
,

568 
btb_thªadid


571 
b¥ed_upd©e_t
 *
	gdú_upd©e_±r
);

575 #ifde‡
foo0


579 
b¥ed_dump
(
b¥ed_t
 *
¥ed
,

580 
FILE
 *
°ªam
);

	@branchCorr.c

1 
	~"bønchC‹r.h
"

2 
	~"c⁄ãxt.h
"

4 #ifdef 
EDA


5 
mem_œt
[2];

6 
ˇche_dl2_œt
;

7 
ˇche_dl1_œt
;

8 
cou¡î_t
 
sim_cy˛e
;

10 
	$öôBønchC‹r
(
bønchC‹r
 *
pQ
)

12 
j
;

13 
pQ
->
boqSize
 = 
ªÆMaxSize
;

14 
pQ
->
c‹rHód
 = 0;

15 
pQ
->
c‹rCuºítHód
 = 0;

16 
pQ
->
c‹rTaû
 = 0;

17 
pQ
->
c‹rNum
 = 0;

18 
pQ
->
tŸÆNum
 = 0;

19 
pQ
->
ödBrNum
 = 0;

20 
pQ
->
œ°UpdtCy˛e
 = 0;

22 
j
 = 0; j < 
brC‹rSize
; j++)

24 
pQ
->
bI
[
j
].
id
 = j;

26 
	}
}

28 
	$ª£tQueue
(
bønchC‹r
 *
pQ
)

30 
pQ
->
c‹rHód
 = 0;

31 
pQ
->
c‹rCuºítHód
 = 0;

32 
pQ
->
c‹rTaû
 = 0;

33 
pQ
->
c‹rNum
 = 0;

34 
pQ
->
tŸÆNum
 = 0;

35 
pQ
->
ödBrNum
 = 0;

36 
	}
}

38 
	$pushBønchPªd
(
bønchC‹r
 *
pQ
, 
bønchIn°
 **
bønch
, 
md_›code
 
›
)

40 if(
pQ
->
tŸÆNum
 >pQ->
boqSize
)

42 
	`∑nic
("Branch Prediction Queue isáctually full. There would beÜoss of branchesÇow. NeedÅo increaseÅhe size of queue orÉxtraÅoleration in queue.\n");

47 *
bønch
 = &
pQ
->
bI
[pQ->
c‹rTaû
];

48 
pQ
->
c‹rNum
++;

49 
pQ
->
tŸÆNum
++;

50 if((
›
 =
JMP
Ë|| (› =
JSR
Ë|| (› =
RETN
Ë|| (› =
JSR_COROUTINE
))

51 
pQ
->
ödBrNum
++;

53 
pQ
->
c‹rTaû
 = (pQ->c‹rTaû+1)%
brC‹rSize
;

55 
	}
}

57 
	$p›BønchPªd
(
bønchC‹r
 *
pQ
, 
bønchIn°
 **
bønch
)

59 if(
pQ
->
c‹rNum
 == 0)

61 *
bønch
 = 
NULL
;

65 
pQ
->
c‹rNum
--;

66 *
bønch
 = &
pQ
->
bI
[pQ->
c‹rCuºítHód
];

67 
pQ
->
c‹rCuºítHód
 = (pQ->c‹rCuºítHód+1)%
brC‹rSize
;

69 
	}
}

71 
	$commôPªdi˘i⁄
(
bønchC‹r
 *
pQ
, 
ödex
)

73 if(
ödex
 !
pQ
->
c‹rHód
)

75 if(
pQ
->
bI
[
ödex
].
ö°Ty≥
 =
TYPE_INST_BARRIER
 ||ÖQ->bI[ödex].ö°Ty≥ =
TYPE_LOCK_ACQUIRE
)

78 
	`∑nic
("Prediction Indexing messed up");

82 
md_›code
 
›
 = 
pQ
->
bI
[
ödex
].op;

83 if((
›
 =
JMP
Ë|| (› =
JSR
Ë|| (› =
RETN
Ë|| (› =
JSR_COROUTINE
))

84 
pQ
->
ödBrNum
--;

85 
pQ
->
c‹rHód
 = (pQ->c‹rHód+1)%
brC‹rSize
;

86 
pQ
->
tŸÆNum
--;

88 
	}
}

90 
	$dynC⁄fBOQSize
(
bønchC‹r
 *
pQ
)

92 if(
pQ
->
bI¡rvCou¡
 < 
B_SIZE_UPDT_ITRV
)

93 
pQ
->
bI¡rvCou¡
++;

96 
queueSize
 = (1*
B_SIZE_UPDT_ITRV
*(
mem_œt
[0]+
ˇche_dl2_œt
+
ˇche_dl1_œt
))/(
sim_cy˛e
-
pQ
->
œ°UpdtCy˛e
);

97 
pQ
->
œ°UpdtCy˛e
 = 
sim_cy˛e
;

98 
pQ
->
bI¡rvCou¡
 = 0;

99 if(
queueSize
 > 
ªÆMaxSize
)

100 
pQ
->
boqSize
 = 
ªÆMaxSize
;

101 if(
queueSize
 > 10)

102 
pQ
->
boqSize
 = 
queueSize
;

104 
pQ
->
boqSize
 = 10;

106 
	}
}

108 
	$queueSize
(
bønchC‹r
 *
pQ
)

110 if(
pQ
->
ödBrNum
 >
IND_JMP_SIZE
)  -1;

111 if(
pQ
->
tŸÆNum
 >pQ->
boqSize
)  -1;

112  
pQ
->
tŸÆNum
;

113 
	}
}

115 
	$ªcovîPªdQueue
(
bønchC‹r
 *
pQ
, 
boqIndex
)

118 
boqIndex
 = (boqIndex+1)%
brC‹rSize
;

120 
pQ
->
c‹rCuºítHód
 !
boqIndex
)

122 
pQ
->
c‹rNum
++;

123 
pQ
->
c‹rCuºítHód
 = (pQ->c‹rCuºítHód + 
brC‹rSize
 - 1)%brCorrSize;

125 
	}
}

	@branchCorr.h

1 #i‚de‡
__BRANCHCORR_H__


2 
	#__BRANCHCORR_H__


	)

4 
	~"machöe.h
"

5 
	~"ho°.h
"

6 
	~"misc.h
"

8 
	#brC‹rSize
 1024

	)

9 
	#ªÆMaxSize
 512

	)

10 
	#IND_JMP_SIZE
 32

	)

11 
	#HIGHDRAGCOUNT
 100

	)

12 
	#B_SIZE_UPDT_ITRV
 512

	)

16 
	mid
;

17 
md_ö°_t
 
	mö°
;

18 
md_›code
 
	m›
;

19 
md_addr_t
 
	mPC
;

20 
md_addr_t
 
	mNPC
;

21 
cou¡î_t
 
	mtime
;

22 
cou¡î_t
 
	msim_num_ö¢
;

23 
	mö°Ty≥
;

24 } 
	tbønchIn°
;

28 
bønchIn°
 
	mbI
[
brC‹rSize
];

29 
	mboqSize
;

30 
	mc‹rNum
;

31 
	mtŸÆNum
;

32 
	mödBrNum
;

33 
	mc‹rHód
;

34 
	mc‹rCuºítHód
;

35 
	mc‹rTaû
;

37 
	mbI¡rvCou¡
;

38 
cou¡î_t
 
	mœ°UpdtCy˛e
;

39 } 
	tbønchC‹r
;

42 
öôBønchC‹r
(
bønchC‹r
 *
pQ
);

43 
ª£tQueue
(
bønchC‹r
 *
pQ
);

44 
pushBønchPªd
(
bønchC‹r
 *
pQ
, 
bønchIn°
 **
bønch
, 
md_›code
 
›
);

45 
p›BønchPªd
(
bønchC‹r
 *
pQ
, 
bønchIn°
 **
bønch
);

46 
commôPªdi˘i⁄
(
bønchC‹r
 *
pQ
, 
ödex
);

47 
queueSize
(
bønchC‹r
 *
pQ
);

48 
ªcovîPªdQueue
(
bønchC‹r
 *
pQ
, 
boqIndex
);

	@cache.c

60 
	~<°dio.h
>

61 
	~<°dlib.h
>

62 
	~<as£π.h
>

64 
	~"hódîs.h
"

68 
	#CACHE_BADDR
(
˝
, 
addr
Ë(◊ddrË& ~(˝)->
blk_mask
)

	)

69 
	#CACHE_MK_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

70 (((
	gèg
Ë<< (
	g˝
)->
	gèg_shi·
)|((
	g£t
Ë<< (˝)->
	g£t_shi·
))

72 
	#CACHE_MK1_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

73 ((((
	gèg
Ë<< (
	g˝
)->
	gèg_shi·
)/
	gBANKS
)|((
	g£t
Ë<< (˝)->
	g£t_shi·
))

75 
	#CACHE_MK2_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

76 (((
	gèg
Ë<< ((
	g˝
)->
	gèg_shi·
 - (
log_ba£2
(
ªs_memb™k
)-log_ba£2(
n_ˇche_limô_thrd
[
thªadid
])) ))| \

77 ((
	g£t
Ë<< ((
	g˝
)->
	g£t_shi·
 - (
log_ba£2
(
ªs_memb™k
)-
	$log_ba£2
(
n_ˇche_limô_thrd
[
thªadid
])) )))

81 
	#CACHE_BINDEX
(
˝
, 
blks
, 
i
Ë\

	)

82 ((
ˇche_blk_t
 *)(((*)(
blks
)) + \

83 (
i
)*((
ˇche_blk_t
) + \

84 ((
˝
)->
bÆloc
 \

85 ? (
˝
)->
bsize
*(
byã_t
) : 0))))

88 
	#__CACHE_ACCESS
(
ty≥
, 
d©a
, 
bofs
Ë\

	)

89 (*((
ty≥
 *)(((*)
d©a
Ë+ (
bofs
))))

92 
	#CACHE_DOUBLE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

93 
	#CACHE_FLOAT
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

94 
	#CACHE_WORD
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

95 
	#CACHE_HALF
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

96 
	#CACHE_BYTE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

101 
	#CACHE_HASH
(
˝
, 
key
Ë\

	)

102 (((
key
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
˝
)->
hsize
-1))

105 
	#CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
Ë\

	)

106 i‡(
cmd
 =
Ród
) \

108 
nbyãs
) { \

110 *((
byã_t
 *)
p
Ë
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
); ; \

112 *((
hÆf_t
 *)
p
Ë
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
); ; \

114 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); ; \

117 
w‹ds
 = 
nbyãs
 >> 2; \

118 
w‹ds
-- > 0) \

120 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); \

121 
p
 +4; 
bofs
 += 4; \

125 
	}
}\

128 
	gnbyãs
) { \

130 
CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
Ë*((
byã_t
 *)
p
); ; \

132 
CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

134 
CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

137 
w‹ds
 = 
nbyãs
 >> 2; \

138 
	gw‹ds
-- > 0) \

140 
CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); \

141 
	gp
 +4; 
	gbofs
 += 4; \

148 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

152 
	#BANKS
 16

	)

158 #ifde‡
CROSSBAR_INTERCONNECT


159 
	gbusSlŸCou¡
 = 
BUSSLOTS
 * 
NUMBEROFBUSES
;

160 
busU£d
;

161 
cou¡î_t
 
busOccu∑ncy
;

162 
bs_nd
 *
	gbusNodePoﬁ
;

163 
bs_nd
 *
	g¸ossb¨SndHd
[3][
MAXTHREADS
], *
	g¸ossb¨RcvHd
[3][MAXTHREADS];

164 
cou¡î_t
 
	g£ndCou¡
[3][
MAXTHREADS
], 
	grcvCou¡
[3][MAXTHREADS];

166 
cou¡î_t
 
dˇche2_ac˚ss
;

168 #ifde‡
BUS_INTERCONNECT


169 
	gbusSlŸCou¡
 = 
BUSSLOTS
 * 
NUMBEROFBUSES
;

170 
busU£d
;

171 
cou¡î_t
 
busOccu∑ncy
;

172 
bs_nd
 *
	gbusNodePoﬁ
, *
	gbusNodesInU£
[
NUMBEROFBUSES
];

176 
	gdl1«me
[20];

177 
ˇche_t
 *
déb
[
CLUSTERS
];

180 
	#L2_TRACE


	)

181 #ifde‡
L2_TRACE


182 * 
L2_åa˚
;

185 #ifde‡
GHB


188 
	sdñè_cou¡_t


190 
vÆid
;

191 
sqw‹d_t
 
dñè
;

192 
cou¡
;

194 
dñè_cou¡_t
 
dñè_cou¡
[
GHB_Size
];

196 
	sdñè_ödex_íåy


198 
vÆid
;

199 
numbî
;

200 
sqw‹d_t
 
dñè
;

201 
ghb_num
;

202 
cou¡î_t
 
times
;

205 
	sèg_ödex_íåy


207 
vÆid
;

208 
numbî
;

209 
md_addr_t
 
èg
;

210 
md_addr_t
 
¥ed_èg
;

213 
	sghb_íåy


215 
vÆid
;

216 
numbî
;

217 
md_addr_t
 
miss_addr
;

219 
sqw‹d_t
 
dñè
;

220 
ghb_num_dñè
;

222 
md_addr_t
 
èg
;

223 
ghb_num_èg
;

225 
cou¡ed
;

226 
cou¡î_t
 
whí
;

229 
dñè_ödex_íåy
 
dñè_ödex_èbÀ
[
MAXTHREADS
][
DELTA_INDEX_TABLE_Size
];

230 
èg_ödex_íåy
 
èg_ödex_èbÀ
[
MAXTHREADS
][
TAG_INDEX_TABLE_Size
];

231 
ghb_íåy
 
ghb
[
MAXTHREADS
][
GHB_Size
];

232 
GHB_hód
[
MAXTHREADS
];

234 
ˇche_dl1_œt
;

235 
ˇche_û1_œt
;

236 
ˇche_ml2_œt
;

237 
ˇche_dl2_œt
;

238 
mesh_size
;

241 
	gmb_∑ö_cou¡
 = 0;

243 
éb_c_c
;

244 
mu…i_blk_£t_shi·
;

245 
mu…i_blk_ad≠_í
;

246 
mu…i_blk_ad≠_öf‹m_í
;

247 
mb_∑ö_í
;

248 
shr_ªad_í
;

249 
tŸÆ_öf‹m_back_í
;

250 
ª∂_ad_í
;

251 
ªˇŒ_ad_í
;

252 
ve˘‹_num
;

253 
sh¨î_thªshﬁd
;

254 
nv_brﬂdˇ°
;

256 
L2_¥e„tch_En
;

257 
L1_¥e„tch_En
;

259 
STREAM_mö_En
;

261 
STREAM_L2_di°™˚
;

262 
STREAM_mö_di°™˚
;

264 
mem_bus_width
;

265 
mem_bus_•ìd
;

266 
mem_p‹t_num
;

267 
	gmax_∑ckë_size
 = 32;

268 
cou¡î_t
 
ˇcheMiss
[
MAXTHREADS
], 
hôInOthîCache
[MAXTHREADS];

269 
cou¡î_t
 
	gövﬁve_4_h›s
, 
	gövﬁve_2_h›s
, 
	gövﬁve_2_h›_wb
, 
	gövﬁve_2_h›_touch
, 
	gövﬁve_2_h›s_wm
, 
	gövﬁve_4_h›s_wm
, 
	gövﬁve_4_h›s_upgøde
, 
	gövﬁve_2_h›s_upgøde
;

270 
cou¡î_t
 
	gövﬁve_4_h›s_miss
, 
	gövﬁve_2_h›s_miss
;

271 
cou¡î_t
 
	gd©a_¥iv©e_ªad
, 
	gd©a_¥iv©e_wrôe
, 
	gd©a_sh¨ed_ªad
, 
	gd©a_sh¨ed_wrôe
;

272 
cou¡î_t
 
lﬂd_lök_sh¨ed
, 
lﬂd_lök_ex˛usive
;

273 
cou¡î_t
 
•™d
[5];

274 
cou¡î_t
 
downgøde_w
, 
downgøde_r
;

276 
cou¡î_t
 
	gtŸÆ_Æl_˛o£
, 
	gtŸÆ_Æl_Æmo°˛o£
, 
	gtŸÆ_nŸ_Æl_˛o£
, 
	gtŸÆ_p_c_evíts
, 
	gtŸÆ_c⁄sumîs
, 
	gtŸÆ_∑ckës_ö_√ighb‹
, 
	gtŸÆ_∑ckës_©_c‹√rs
;

277 
cou¡î_t
 
	gtŸÆ_d©a_©_c‹√r
, 
	gtŸÆ_d©a_˛o£
, 
	gtŸÆ_d©a_Ár
, 
	gtŸÆ_d©a_c⁄sumîs
;

278 
cou¡î_t
 
	gsh¨î_num
[
MAXTHREADS
];

279 
	gavîage_öside_≥r˚¡
;

280 
	gavîage_outside_≥r˚¡
;

281 
	gavîage_outside_abs_≥r˚¡
;

282 
	gavîage_c‹√r_≥r˚¡
;

283 
cou¡î_t
 
	gwrôe_óæy
;

284 
dl2A˘uÆlyAc˚s£d
, 
m¨kedLöeRïœ˚d
;

285 
cou¡î_t
 
tŸÆS∂ôWM
, 
tŸÆS∂ôNo
;

286 
cou¡î_t
 
tŸÆUpgødesUßbÀ
, 
tŸÆUpgødesBíeficül
;

288 
a˘uÆPro˚ss
;

290 
d©aFoundInPCB
 (
md_addr_t
, , );

291 
övÆid©eOthîPCB
 (
who
, 
id
, 
md_addr_t
 
addr
);

294 
	gdl2_¥e„tch_a˘ive
 = 0;

295 
	gdl2_¥e„tch_id
 = 0;

296 
	gdl1_¥e„tch_a˘ive
 = 0;

299 
quõs˚Såu˘
 
quõs˚AddrSåu˘
[
CLUSTERS
];

300 
•ec_bíchm¨ks
;

301 
ªs_poﬁ
 *
fu_poﬁ
;

302 
ˇche_t
 *
ˇche_dl1
[], *
ˇche_ml2
, *
ˇche_dl2
;

306 
md_addr_t
 
b¨rõr_addr
;

308 
m¨kRódA·îWrôe
;

310 
	gœãn
[
BANKS
];

313 
	grm1
 = 0;

314 
	gwm1
 = 0;

315 
	grh1
 = 0;

316 
	gwh1
 = 0;

317 
	grm2
 = 0;

318 
	gwm2
 = 0;

319 
	grh2
 = 0;

320 
	gwh2
 = 0;

322 #ifde‡ 
THRD_WAY_CACHE


323 
a˘ivec⁄ãxts
;

324 
ªs_memb™k
;

325 
n_ˇche_limô_thrd
[];

326 
n_ˇche_°¨t_thrd
[];

327 
COHERENT_CACHE
;

328 
MSI
;

331 
c⁄ãxt
 *
thec⁄ãxts
[
MAXTHREADS
];

334 
cou¡î_t
 
sim_num_ö¢
;

335 
execuãMaxIn¢
;

337 
cﬁÀ˘_°©s
, 
ÆlF‹ked
;

339 #ifde‡ 
THRD_WAY_CACHE


340 
ö£π_fûlq
 (, 
md_addr_t
, );

342 
ö£π_fûlq
 (, 
md_addr_t
);

345 
numc⁄ãxts
;

346 
nŸRoundRobö
;

348 
RS_li°
 *
rs_ˇche_li°
[
MAXTHREADS
][
MSHR_SIZE
];

350 
FILE
 *
Â_åa˚
;

351 
DIRECTORY_EVENT
 *
dú_evít_queue
;

352 
DIRECTORY_EVENT
 *
evít_li°
[
L2_MSHR_SIZE
];

353 
cou¡î_t
 
	g«ck_cou¡î
;

354 
cou¡î_t
 
	gn‹mÆ_«cks
;

355 
cou¡î_t
 
	gwrôe_«cks
;

356 
cou¡î_t
 
	g¥e„tch_«cks
;

357 
cou¡î_t
 
	gsync_«cks
;

358 
cou¡î_t
 
	gÊù_cou¡î
;

359 
cou¡î_t
 
	g°‹e_c⁄dôi⁄Æ_Áûed
;

360 
cou¡î_t
 
	gL1_Êù_cou¡î
;

361 
cou¡î_t
 
	ge_to_m
;

363 
cou¡î_t
 
L1_mshr_fuŒ
;

364 
cou¡î_t
 
œ°_L1_mshr_fuŒ
[
MAXTHREADS
];

365 
cou¡î_t
 
L2_mshr_fuŒ
;

366 
cou¡î_t
 
œ°_L2_mshr_fuŒ
;

367 
cou¡î_t
 
L2_mshr_fuŒ_¥e„tch
;

368 
cou¡î_t
 
L1_fifo_fuŒ
;

369 
cou¡î_t
 
œ°_L1_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

370 
cou¡î_t
 
Dú_fifo_fuŒ
;

371 
cou¡î_t
 
œ°_Dú_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

372 
cou¡î_t
 
I≈ut_queue_fuŒ
;

373 
cou¡î_t
 
œ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

374 
cou¡î_t
 
Ouçut_queue_fuŒ
;

376 
cou¡î_t
 
SèŒ_L1_mshr
;

377 
cou¡î_t
 
SèŒ_L2_mshr
;

378 
cou¡î_t
 
SèŒ_L1_fifo
;

379 
cou¡î_t
 
SèŒ_dú_fifo
;

380 
cou¡î_t
 
SèŒ_öput_queue
;

381 
cou¡î_t
 
SèŒ_ouçut_queue
;

382 
mshr_≥ndög_evít
[
MAXTHREADS
];

384 
cou¡î_t
 
WM_Miss
;

385 
cou¡î_t
 
WM_CÀ™
;

386 
cou¡î_t
 
WM_S
;

387 
cou¡î_t
 
WM_EM
;

388 
cou¡î_t
 
wrôe_sh¨ed_u£d_c⁄f
;

390 
cou¡î_t
 
SyncIn°CacheAc˚ss
;

391 
cou¡î_t
 
Te°CacheAc˚ss
;

392 
cou¡î_t
 
Te°SecCacheAc˚ss
;

393 
cou¡î_t
 
SëCacheAc˚ss
;

394 
cou¡î_t
 
SyncLﬂdRódMiss
;

395 
cou¡î_t
 
SyncLﬂdLRódMiss
;

396 
cou¡î_t
 
SyncLﬂdHô
;

397 
cou¡î_t
 
SyncLﬂdLHô
;

398 
cou¡î_t
 
SyncSt‹eCHô
;

399 
cou¡î_t
 
SyncSt‹eCWrôeMiss
;

400 
cou¡î_t
 
SyncSt‹eCWrôeUpgøde
;

401 
cou¡î_t
 
SyncSt‹eHô
;

402 
cou¡î_t
 
SyncSt‹eWrôeMiss
;

403 
cou¡î_t
 
B¨St‹eWrôeMiss
;

404 
cou¡î_t
 
SyncSt‹eWrôeUpgøde
;

405 
cou¡î_t
 
B¨St‹eWrôeUpgøde
;

406 
cou¡î_t
 
Sync_L2_miss
;

409 #ifde‡
CONF_RES_RESEND


410 
QUEUE_EVENT
 *
£nd_queue
[
MAXTHREADS
];

411 
QUEUE_EVENT
 *
ª∂y_queue
[
MAXTHREADS
];

414 
RS_lök
 *
evít_queue
;

415 
tŸÆEvítCou¡
, 
tŸÆEvítPro˚ssTime
;

416 
	gtŸÆevítcou¡
;

417 
cou¡î_t
 
	gp›√tMsgNo
;

418 
cou¡î_t
 
	gmissNo
;

419 
cou¡î_t
 
	gwrôe_back_msg
;

420 
cou¡î_t
 
	gloˇl_ˇche_ac˚ss
, 
	gªmŸe_ˇche_ac˚ss
, 
	gloˇldúe˘‹y
, 
	gªmŸedúe˘‹y
;

421 
tick_t
 
	gtŸÆmissh™dÀtime
;

422 
tick_t
 
	gtŸÆIL1missh™dÀtime
;

423 
	gtŸÆevítcou¡num
;

424 
cou¡î_t
 
	gtŸÆWrôeIndiˇã
;

425 
cou¡î_t
 
	gtŸÆ_ex˛usive_modifõd
;

426 
cou¡î_t
 
	gtŸÆ_ex˛usive_c⁄f
;

427 
cou¡î_t
 
	gtŸÆ_ex˛usive_¸oss
;

428 
cou¡î_t
 
	gtŸÆSyncEvít
;

429 
cou¡î_t
 
	gtŸÆN‹mÆEvít
;

430 
cou¡î_t
 
	gtŸÆSyncWrôeM
;

431 
cou¡î_t
 
	gtŸÆSyncRódM
;

432 
cou¡î_t
 
	gtŸÆSyncWrôeup
;

433 
cou¡î_t
 
	gtŸÆmis°imef‹N‹mÆ
;

434 
cou¡î_t
 
	gtŸÆmis°imef‹Sync
;

435 
cou¡î_t
 
	gtŸÆ_mem_œt
;

436 
cou¡î_t
 
	gtŸÆ_mem_ac˚ss
;

437 
cou¡î_t
 
	gtŸÆL2mis°ime
;

438 
cou¡î_t
 
	gtŸÆWr⁄gL2mis°ime
;

439 
cou¡î_t
 
	gTŸÆL2mis£s
;

440 
	gtŸÆ_L1_¥e„tch
;

441 
cou¡î_t
 
	gl2_¥e„tch_num
;

442 
cou¡î_t
 
	gwrôe_back_óæy
;

443 
	gtŸÆ_L1_fú°_¥e„tch
;

444 
	gtŸÆ_L1_£c_¥e„tch
;

445 
cou¡î_t
 
	gL1_¥e„tch_u£fuŒ
;

446 
cou¡î_t
 
	gL1_¥e„tch_wrôó·î
;

448 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_num
;

449 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_num
;

450 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_num
;

451 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_num
;

452 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_num
;

453 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_S_M_num
;

454 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_G_D_num
;

455 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_G_T_num
;

456 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_num
;

457 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_S_M_num
;

458 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_G_D_num
;

459 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_G_T_num
;

460 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_num
;

461 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_S_M_num
;

462 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_G_D_num
;

463 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_G_T_num
;

464 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_num
;

465 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_S_M_num
;

466 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_G_D_num
;

467 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_G_T_num
;

468 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_num
;

469 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_S_M_num
;

470 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_G_D_num
;

471 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_G_T_num
;

472 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_num
;

473 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_S_M_num
;

474 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_G_D_num
;

475 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_G_T_num
;

476 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_miss_num
;

477 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_compuls‹y_miss_num
;

478 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_ˇ∑côy_miss_num
;

479 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_cohîí˚_miss_num
;

480 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_ªad_¥e„tch_ˇ∑côy_miss_num
;

481 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_num
;

482 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_FPP_num
;

483 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_num
;

484 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_FPP_num
;

485 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_num
;

486 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_S_M_num
;

487 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_G_D_num
;

488 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_G_T_num
;

489 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_miss_num
;

490 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_compuls‹y_miss_num
;

491 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_ˇ∑côy_miss_num
;

492 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_cohîí˚_miss_num
;

493 
cou¡î_t
 
	gÀvñ1_d©a_ˇche_ac˚ss_wrôe_¥e„tch_ˇ∑côy_miss_num
;

495 
cou¡î_t
 
	gªad_L1_miss_L2_hô_num
;

496 
cou¡î_t
 
	gªad_L1_miss_L2_hô_tŸÆ_time
;

497 
cou¡î_t
 
	gªad_L2_miss_num
;

498 
cou¡î_t
 
	gªad_L2_miss_tŸÆ_time
;

499 
cou¡î_t
 
	gwrôe_L1_miss_L2_hô_num
;

500 
cou¡î_t
 
	gwrôe_L1_miss_L2_hô_tŸÆ_time
;

501 
cou¡î_t
 
	gwrôe_L2_miss_num
;

502 
cou¡î_t
 
	gwrôe_L2_miss_tŸÆ_time
;

505 
cou¡î_t
 
	gtŸÆ_∑ge_num
;

506 
cou¡î_t
 
	g¥_∑ge_num
;

507 
cou¡î_t
 
	gpw_∑ge_num
;

508 
cou¡î_t
 
	g§_∑ge_num
;

509 
cou¡î_t
 
	gsw_∑ge_num
;

511 
cou¡î_t
 
	gtŸÆ_löe_num
;

512 
cou¡î_t
 
	g¥_löe_num
;

513 
cou¡î_t
 
	gpw_löe_num
;

514 
cou¡î_t
 
	g§_löe_num
;

515 
cou¡î_t
 
	gsw_löe_num
;

517 
cou¡î_t
 
	gªˇŒ_num
;

518 
cou¡î_t
 
	gªˇŒ_öv_num
;

520 
cou¡î_t
 
	gªad_öv_S_num
;

521 
cou¡î_t
 
	gªad_öv_QH_num
;

522 
cou¡î_t
 
	gªad_öv_e_QM_num
;

523 
cou¡î_t
 
	gªad_öv_d_QM_num
;

525 
cou¡î_t
 
	gwrôe_öv_d_S_num
;

526 
cou¡î_t
 
	gwrôe_öv_e_S_num
;

527 
cou¡î_t
 
	gwrôe_öv_s_S_num
;

528 
cou¡î_t
 
	gwrôe_öv_i_S_num
;

530 
cou¡î_t
 
	gwrôe_öv_d_QM_num
;

531 
cou¡î_t
 
	gwrôe_öv_e_QM_num
;

532 
cou¡î_t
 
	gwrôe_öv_s_QM_num
;

533 
cou¡î_t
 
	gwrôe_öv_i_QM_num
;

535 
cou¡î_t
 
	gwrôe_öv_d_QH_num
;

536 
cou¡î_t
 
	gwrôe_öv_e_QH_num
;

537 
cou¡î_t
 
	gwrôe_öv_s_QH_num
;

538 
cou¡î_t
 
	gwrôe_öv_i_QH_num
;

540 
cou¡î_t
 
	gªˇŒ_öv_d_S_num
;

541 
cou¡î_t
 
	gªˇŒ_öv_e_S_num
;

542 
cou¡î_t
 
	gªˇŒ_öv_s_S_num
;

543 
cou¡î_t
 
	gªˇŒ_öv_i_S_num
;

545 
cou¡î_t
 
	gªˇŒ_öv_d_Q_num
;

546 
cou¡î_t
 
	gªˇŒ_öv_e_Q_num
;

547 
cou¡î_t
 
	gªˇŒ_öv_s_Q_num
;

548 
cou¡î_t
 
	gªˇŒ_öv_i_Q_num
;

550 
cou¡î_t
 
	gSW_ªad_ªque°_num
;

551 
cou¡î_t
 
	gSW_wrôe_ªque°_num
;

553 
cou¡î_t
 
	gªad_S_hô_num
;

554 
cou¡î_t
 
	gªad_Q_hô_num
;

555 
cou¡î_t
 
	gªad_Q_öô_num
;

556 
cou¡î_t
 
	gªad_Q_öô_SR_num
;

557 
cou¡î_t
 
	gªad_Q_öô_QR_num
;

559 
cou¡î_t
 
	gwrôe_S_hô_num
;

560 
cou¡î_t
 
	gwrôe_Q_hô_num
;

561 
cou¡î_t
 
	gwrôe_S_öô_ed_num
;

562 
cou¡î_t
 
	gwrôe_S_öô_ed_SR_num
;

563 
cou¡î_t
 
	gwrôe_S_öô_ed_QR_num
;

564 
cou¡î_t
 
	gwrôe_S_öô_s_num
;

565 
cou¡î_t
 
	gwrôe_S_öô_s_SR_num
;

566 
cou¡î_t
 
	gwrôe_S_öô_s_QR_num
;

567 
cou¡î_t
 
	gwrôe_Q_öô_num
;

568 
cou¡î_t
 
	gwrôe_Q_öô_SR_num
;

569 
cou¡î_t
 
	gwrôe_Q_öô_QR_num
;

571 
cou¡î_t
 
	gshr_d©a_ªq_öôül_num
;

572 
cou¡î_t
 
	gshr_d©a_ªq_tŸÆ_num
;

573 
cou¡î_t
 
	gshr_d©a_ªq_Áû_num
;

575 
cou¡î_t
 
	göf‹m_back_num
;

576 
cou¡î_t
 
	gwrôe_back_num
;

577 
cou¡î_t
 
	göf‹m_back_Q
;

578 
cou¡î_t
 
	göf‹m_back_S
;

579 
cou¡î_t
 
	gwrôe_back_Q
;

580 
cou¡î_t
 
	gwrôe_back_S
;

581 
cou¡î_t
 
	gmb_∑ö_dñay_num
;

582 
cou¡î_t
 
	gmb_∑ö_p‹tu£_num
;

584 
cou¡î_t
 
	gªad_Q_öô_QR_s_num
;

585 
cou¡î_t
 
	gªad_Q_öô_QR_ed_num
;

586 
cou¡î_t
 
	gwrôe_S_öô_ed_QR_s_num
;

587 
cou¡î_t
 
	gwrôe_S_öô_ed_QR_ed_num
;

588 
cou¡î_t
 
	gwrôe_S_öô_s_QR_s_num
;

589 
cou¡î_t
 
	gwrôe_S_öô_s_QR_ed_num
;

590 
cou¡î_t
 
	gwrôe_Q_öô_QR_s_num
;

591 
cou¡î_t
 
	gwrôe_Q_öô_QR_ed_num
;

593 
cou¡î_t
 
	gªˇŒ_öv_d_Q_s_num
;

594 
cou¡î_t
 
	gªˇŒ_öv_d_Q_ed_num
;

595 
cou¡î_t
 
	gªˇŒ_öv_e_Q_s_num
;

596 
cou¡î_t
 
	gªˇŒ_öv_e_Q_ed_num
;

597 
cou¡î_t
 
	gªˇŒ_öv_s_Q_s_num
;

598 
cou¡î_t
 
	gªˇŒ_öv_s_Q_ed_num
;

599 
cou¡î_t
 
	gªˇŒ_öv_i_Q_s_num
;

600 
cou¡î_t
 
	gªˇŒ_öv_i_Q_ed_num
;

602 
cou¡î_t
 
	gªˇŒ_öv_d_Q_s_ad_num
;

603 
cou¡î_t
 
	gªˇŒ_öv_e_Q_s_ad_num
;

604 
cou¡î_t
 
	gªˇŒ_öv_s_Q_ed_ad_num
;

606 
cou¡î_t
 
	glöe_ac˚ss_num
;

607 
cou¡î_t
 
	gSWP_löe_ac˚ss_num
;

608 
cou¡î_t
 
	gSWP_PR_löe_ac˚ss_num
;

609 
cou¡î_t
 
	gSWP_PW_löe_ac˚ss_num
;

610 
cou¡î_t
 
	gSWP_SR_löe_ac˚ss_num
;

611 
cou¡î_t
 
	gSWP_SW_löe_ac˚ss_num
;

613 
cou¡î_t
 
	gPVC_ve˘‹_di°r_ªc‹d_num
;

614 
cou¡î_t
 
	gPVC_ve˘‹_öc_di°r_ªc‹d_num
;

615 
cou¡î_t
 
	gPVC_ve˘‹_di°r
[
MAX_DIRECTORY_ASSOC
+1];

616 
cou¡î_t
 
	gPVC_ve˘‹_öc_di°r
[
MAX_DIRECTORY_ASSOC
+1];

618 
cou¡î_t
 
	gPVC_exch™ge_num
;

619 
cou¡î_t
 
	gPVC_Êù_num
;

620 
cou¡î_t
 
	gPVC_dowm_no_öv_num
;

621 
cou¡î_t
 
	gPVC_dowm_öv_num
;

622 
cou¡î_t
 
	gPVC_dowm_öv_shr_num
;

623 
cou¡î_t
 
	gPVC_up_no_add_num
;

624 
cou¡î_t
 
	gPVC_up_add_num
;

625 
cou¡î_t
 
	gPVC_up_add_shr_num
;

626 
cou¡î_t
 
	gPVC_exch_vec_shr_di°r
[
MAXTHREADS
+1];

627 
cou¡î_t
 
	gPVC_dowm_öv_shr_di°r
[
MAXTHREADS
+1];

628 
cou¡î_t
 
	gPVC_up_add_shr_di°r
[
MAXTHREADS
+1];

629 
cou¡î_t
 
	gPVC_öf‹m_Æl_shr_num
;

630 
cou¡î_t
 
	gPVC_rfs_Æl_shr_num
;

631 
cou¡î_t
 
	gPVC_ªad_Æl_shr_num
;

632 
cou¡î_t
 
	gPVC_wrôe_Æl_shr_num
;

633 
cou¡î_t
 
	gPVC_ªˇŒ_Æl_shr_num
;

634 
cou¡î_t
 
	gpvc_nv_c⁄Êi˘_num
;

636 
	gtŸÆªqcou¡num
;

637 
	gtŸÆmisscou¡num
;

638 
	gÊag
;

642 
	$u∆ök_hèb_ít
 (
ˇche_t
 *
˝
,

643 
ˇche_£t_t
 *
£t
,

644 
ˇche_blk_t
 *
blk
)

646 
ˇche_blk_t
 *
¥ev
, *
ít
;

647 
ödex
 = 
	`CACHE_HASH
 (
˝
, 
blk
->
ègid
.
èg
);

650 
¥ev
 = 
NULL
, 
ít
 = 
£t
->
hash
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
hash_√xt
)

652 i‡(
ít
 =
blk
)

655 
	`as£π
 (
ít
);

658 i‡(!
¥ev
)

661 
£t
->
hash
[
ödex
] = 
ít
->
hash_√xt
;

666 
¥ev
->
hash_√xt
 = 
ít
->hash_next;

668 
ít
->
hash_√xt
 = 
NULL
;

669 
	}
}

673 
	$lök_hèb_ít
 (
ˇche_t
 *
˝
,

674 
ˇche_£t_t
 *
£t
,

675 
ˇche_blk_t
 *
blk
)

677 
ödex
 = 
	`CACHE_HASH
 (
˝
, 
blk
->
ègid
.
èg
);

680 
blk
->
hash_√xt
 = 
£t
->
hash
[
ödex
];

681 
£t
->
hash
[
ödex
] = 
blk
;

682 
	}
}

685 
	eli°_loc_t


686 { 
	mHód
, 
	mTaû
 };

690 
	$upd©e_way_li°
 (
ˇche_£t_t
 *
£t
,

691 
ˇche_blk_t
 *
blk
,

692 
li°_loc_t
 
whîe
)

695 i‡(!
blk
->
way_¥ev
 && !blk->
way_√xt
)

698 
	`as£π
 (
£t
->
way_hód
 =
blk
 && së->
way_èû
 == blk);

704 i‡(!
blk
->
way_¥ev
)

706 
	`as£π
 (
£t
->
way_hód
 =
blk
 && së->
way_èû
 != blk);

707 i‡(
whîe
 =
Hód
)

714 
£t
->
way_hód
 = 
blk
->
way_√xt
;

715 
blk
->
way_√xt
->
way_¥ev
 = 
NULL
;

717 i‡(!
blk
->
way_√xt
)

720 
	`as£π
 (
£t
->
way_hód
 !
blk
 && së->
way_èû
 == blk);

721 i‡(
whîe
 =
Taû
)

726 
£t
->
way_èû
 = 
blk
->
way_¥ev
;

727 
blk
->
way_¥ev
->
way_√xt
 = 
NULL
;

732 
	`as£π
 (
£t
->
way_hód
 !
blk
 && së->
way_èû
 != blk);

733 
blk
->
way_¥ev
->
way_√xt
 = blk->way_next;

734 
blk
->
way_√xt
->
way_¥ev
 = blk->way_prev;

738 i‡(
whîe
 =
Hód
)

741 
blk
->
way_√xt
 = 
£t
->
way_hód
;

742 
blk
->
way_¥ev
 = 
NULL
;

743 
£t
->
way_hód
->
way_¥ev
 = 
blk
;

744 
£t
->
way_hód
 = 
blk
;

746 i‡(
whîe
 =
Taû
)

749 
blk
->
way_¥ev
 = 
£t
->
way_èû
;

750 
blk
->
way_√xt
 = 
NULL
;

751 
£t
->
way_èû
->
way_√xt
 = 
blk
;

752 
£t
->
way_èû
 = 
blk
;

755 
	`∑nic
 ("bogus WHERE designator");

756 
	}
}

759 
ˇche_t
 *

760 
ˇche_¸óã
 (*
«me
,

761 
n£ts
,

762 
bsize
,

763 
bÆloc
,

764 
usize
,

765 
assoc
,

766 
ˇche_pﬁicy
 
pﬁicy
,

768 (*
blk_ac˚ss_‚
Ë(
mem_cmd
 
cmd
, 
md_addr_t
 
baddr
, 
bsize
, 
ˇche_blk_t
 * 
blk
, 
tick_t
 
now
, 
thªadid
), 
hô_œãncy
,

769 
thªadid
)

771 
ˇche_t
 *
˝
;

772 
ˇche_blk_t
 *
blk
;

773 
i
, 
j
, 
bödex
;

776 i‡(
n£ts
 <= 0)

777 
	`Áèl
 ("ˇchêsizê(ö sësË`%d' mu° bên⁄-zîo", 
n£ts
);

778 i‡((
n£ts
 & (nsets - 1)) != 0)

779 
	`Áèl
 ("ˇchêsizê(ö sësË`%d' i†nŸáÖowî o‡two", 
n£ts
);

781 i‡(
bsize
 < 8)

782 
	`Áèl
 ("ˇchêblock sizê(ö byãsË`%d' mu° bê8 o∏gª©î", 
bsize
);

783 i‡((
bsize
 & (bsize - 1)) != 0)

784 
	`Áèl
 ("ˇchêblock sizê(ö byãsË`%d' mu° bê®powî o‡two", 
bsize
);

785 i‡(
usize
 < 0)

786 
	`Áèl
 ("u£∏d©®sizê(ö byãsË`%d' mu° bê®posôivêvÆue", 
usize
);

787 i‡(!
blk_ac˚ss_‚
)

788 
	`Áèl
 ("must specify miss/replacement functions");

791 
˝
 = (
ˇche_t
 *Ë
	`ˇŒoc
 (1,  (ˇche_tË+ (
n£ts
 - 1Ë*  (
ˇche_£t_t
));

792 i‡(!
˝
)

793 
	`Áèl
 ("out of virtual memory");

796 
˝
->
«me
 = 
	`my°rdup
 (name);

797 
˝
->
n£ts
 =Çsets;

798 
˝
->
bsize
 = bsize;

799 
˝
->
bÆloc
 = balloc;

800 
˝
->
usize
 = usize;

801 
˝
->
assoc
 =ássoc;

802 
˝
->
pﬁicy
 =Öolicy;

803 
˝
->
hô_œãncy
 = hit_latency;

806 
˝
->
blk_ac˚ss_‚
 = blk_access_fn;

809 
˝
->
hsize
 = 
	`CACHE_HIGHLY_ASSOC
 (˝Ë? (
assoc
 >> 2) : 0;

810 
˝
->
blk_mask
 = 
bsize
 - 1;

811 
˝
->
£t_shi·
 = 
	`log_ba£2
 (
bsize
);

812 
˝
->
£t_mask
 = 
n£ts
 - 1;

813 
˝
->
èg_shi·
 = cp->
£t_shi·
 + 
	`log_ba£2
 (
n£ts
);

814 
˝
->
èg_mask
 = (1 << (32 - cp->
èg_shi·
)) - 1;

815 
˝
->
èg£t_mask
 = ~˝->
blk_mask
;

816 
˝
->
bus_‰ì
 = 0;

819 
˝
->
hôs
 = 0;

820 
˝
->
dhôs
 = 0;

821 
˝
->
mis£s
 = 0;

822 
˝
->
dmis£s
 = 0;

823 
˝
->
ö_mshr
 = 0;

824 
˝
->
dö_mshr
 = 0;

825 
˝
->
dú_ac˚ss
 = 0;

826 
˝
->
d©a_ac˚ss
 = 0;

827 
˝
->
cohîí˚_mis£s
 = 0;

828 
˝
->
ˇ∑cô™˚_mis£s
 = 0;

829 
˝
->
ª∂a˚míts
 = 0;

830 
˝
->
ª∂Inv
 = 0;

831 
˝
->
wrôebacks
 = 0;

832 
˝
->
wb_cohîí˚_w
 = 0;

833 
˝
->
wb_cohîí˚_r
 = 0;

834 
˝
->
övÆid©i⁄s
 = 0;

835 
˝
->
s_to_i
 = 0;

836 
˝
->
e_to_i
 = 0;

837 
˝
->
e_to_m
 = 0;

838 
˝
->
cohîícyMis£s
 = 0;

839 
˝
->
cohîícyMis£sOC
 = 0;

840 
˝
->
Invld
 = 0;

841 
˝
->
rdb
 = 0;

842 
˝
->
wrb
 = 0;

843 
˝
->
œ°u£
 = 0;

844 
˝
->
dú_nŸifiˇti⁄
 = 0;

845 
˝
->
InvÆid_wrôe_ª˚ived
 = 0;

846 
˝
->
InvÆid_wrôe_ª˚ived_hôs
 = 0;

847 
˝
->
InvÆid_Ród_ª˚ived
 = 0;

848 
˝
->
InvÆid_Ród_ª˚ived_hôs
 = 0;

849 
˝
->
ack_ª˚ived
 = 0;

852 
˝
->
œ°_èg£tid
.
èg
 = 0;

853 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

854 
˝
->
œ°_blk
 = 
NULL
;

855 
˝
->
thªadid
 =Åhreadid;

857 #ifde‡ 
DCACHE_MSHR


858 
mshr_Êag
 = 0;

859 if((!
	`°rcmp
 (
˝
->
«me
, "dl1")) || (!strcmp (cp->name, "dl2")))

861 if(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

862 
mshr_Êag
 = 0;

864 
mshr_Êag
 = 1;

865 
˝
->
mshr
 = (
mshr_t
 *Ë
	`ˇŒoc
 (1,  (mshr_t));

866 
	`öôMSHR
(
˝
->
mshr
, 
mshr_Êag
);

867 
˝
->
mshr
->
thªadid
 =Åhreadid;

870 
˝
->
mshr
 = 
NULL
;

874 
˝
->
d©a
 = (
byã_t
 *Ë
	`ˇŒoc
 (
n£ts
 * 
assoc
,  (
ˇche_blk_t
Ë+ (˝->
bÆloc
 ? (
bsize
 *  (byte_t)) : 0));

875 i‡(!
˝
->
d©a
)

876 
	`Áèl
 ("out of virtual memory");

879 
bödex
 = 0, 
i
 = 0; i < 
n£ts
; i++)

881 
˝
->
£ts
[
i
].
way_hód
 = 
NULL
;

882 
˝
->
£ts
[
i
].
way_èû
 = 
NULL
;

884 
˝
->
£ts
[
i
].
PVC_ve˘‹_di°r_ªc‹d_num
 = 0;

885 
˝
->
£ts
[
i
].
PVC_ve˘‹_öc_di°r_ªc‹d_num
 = 0;

886 
PVC_i
;

887 
PVC_i
=0;PVC_i<=
MAX_DIRECTORY_ASSOC
;PVC_i++)

889 
˝
->
£ts
[
i
].
PVC_ve˘‹_di°r
[
PVC_i
] = 0;

890 
˝
->
£ts
[
i
].
PVC_ve˘‹_öc_di°r
[
PVC_i
] = 0;

893 i‡(
˝
->
hsize
)

895 
˝
->
£ts
[
i
].
hash
 = (
ˇche_blk_t
 **Ë
	`ˇŒoc
 (˝->
hsize
,  (cache_blk_t *));

896 i‡(!
˝
->
£ts
[
i
].
hash
)

897 
	`Áèl
 ("out of virtual memory");

902 
˝
->
£ts
[
i
].
blks
 = 
	`CACHE_BINDEX
 (˝, cp->
d©a
, 
bödex
);

906 
j
 = 0; j < 
assoc
; j++)

909 
blk
 = 
	`CACHE_BINDEX
 (
˝
, cp->
d©a
, 
bödex
);

910 
bödex
++;

914 
blk
->
éb_°©e
 = 0;

915 
blk
->
éb_lock
 = 0;

918 
blk
->
Æl_sh¨ed_í
 = 0;

921 
blk
->
qblk_£t_shi·
 = -1;

923 
blk
->
°©us
 = 0;

924 
blk
->
ègid
.
èg
 = 0;

925 
blk
->
ègid
.
thªadid
 = -1;

926 
blk
->
ªady
 = 0;

928 
m
 = 0, 
n
=0;

929 
m
=0; m<8; m++)

931 
n
=0;n<8;n++)

933 
blk
->
dú_sh¨î
[
m
][
n
]=0;

935 
blk
->
dú_°©e
[
m
]=
DIR_STABLE
;

936 
blk
->
dú_dúty
[
m
] = -1;

937 
blk
->
ex˛usive_time
[
m
] = 0;

938 if(
MSI
)

939 
blk
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

940 
blk
->
±r_cur_evít
[
m
] = 
NULL
;

942 
blk
->
evî_dúty
 = 0;

943 
blk
->
evî_touch
 = 0;

945 
blk
->
isSèÀ
 = 0;

947 
blk
->
löeVﬁ©ûe
 = 0;

948 
blk
->
isL1¥e„tch
 = 0;

950 
blk
->
w‹dVﬁ©ûe
 = 0;

951 
blk
->
w‹dInvÆid
 = 0;

952 
blk
->
ïochModifõd
 = -1;

954 
blk
->
u£r_d©a
 = (
usize
 !0 ? (
byã_t
 *Ë
	`ˇŒoc
 (usize,  (byã_t)Ë: 
NULL
);

955 
blk
->
övCau£
 = 0;

957 
blk
->
RódCou¡
 = 0;

958 
blk
->
WrôeCou¡
 = 0;

959 
blk
->
W‹dCou¡
 = 0;

960 
blk
->
Ty≥
 = 0;

961 
m
=0;m<8;m++)

962 
blk
->
W‹dU£Fœg
[
m
] = 0;

964 i‡(
MSI
)

966 
blk
->
°©e
 = 
MESI_INVALID
;

971 i‡(
˝
->
hsize
)

972 
	`lök_hèb_ít
 (
˝
, &˝->
£ts
[
i
], 
blk
);

975 
blk
->
way_√xt
 = 
˝
->
£ts
[
i
].
way_hód
;

976 
blk
->
way_¥ev
 = 
NULL
;

977 i‡(
˝
->
£ts
[
i
].
way_hód
)

978 
˝
->
£ts
[
i
].
way_hód
->
way_¥ev
 = 
blk
;

979 
˝
->
£ts
[
i
].
way_hód
 = 
blk
;

980 i‡(!
˝
->
£ts
[
i
].
way_èû
)

981 
˝
->
£ts
[
i
].
way_èû
 = 
blk
;

985 if(!
	`°rcmp
 (
˝
->
«me
, "ml2"))

987 if–
ve˘‹_num
 < 0 || ve˘‹_num > 
assoc
 )

988 
	`∑nic
("vector_num illegal\n");

989 if–
sh¨î_thªshﬁd
 < 1 || sh¨î_thªshﬁd > (
mesh_size
*mesh_size-1) )

990 
	`∑nic
("sharer_threshold illegal\n");

991 
i
=0;i<
n£ts
;i++)

993 
blk
 = 
˝
->
£ts
[
i
].
way_èû
;

994 
bödex
 = 0;

995 
blk
)

997 if(
bödex
 < 
ve˘‹_num
)

998 
blk
->
±r_í
 = 0;

1000 
blk
->
±r_í
 = 1;

1001 
blk
 = blk->
way_¥ev
;

1002 
bödex
++;

1007  
˝
;

1008 
	}
}

1010 
	$Æloˇã_‰ì_evít_li°
()

1012 
i
;

1013 
‰ì_evít_li°
 = 
	`ˇŒoc
(1, (
DIRECTORY_EVENT
));

1014 
DIRECTORY_EVENT
 * 
√xt
 = 
‰ì_evít_li°
;

1016 
i
 = 1; i < 
maxEvít
; i++)

1018 
√xt
->√xà
	`ˇŒoc
(1, (
DIRECTORY_EVENT
));

1019 
√xt
 =Çext->next;

1020 
√xt
->√xà
NULL
;

1022 
	}
}

1024 
DIRECTORY_EVENT
 * 
	$Æloˇã_evít
(
isSyncAc˚ss
)

1026 if(
tŸÆEvítCou¡
 >
maxEvít
)

1027 
	`∑nic
("Out of freeÉvents\n");

1028 
DIRECTORY_EVENT
 * 
ãmp
 = 
‰ì_evít_li°
;

1029 
‰ì_evít_li°
 = fªe_evít_li°->
√xt
;

1030 
ãmp
->
√xt
 = 
NULL
;

1031 
ãmp
->
›
 = 0;

1032 
ãmp
->
isPª„tch
 = 0;

1033 
ãmp
->
∑ge_íåy_°©e
 = 0;

1034 
ãmp
->
l2Sètus
 = 0;

1035 
ãmp
->
l2MissSèπ
 = 0;

1036 
ãmp
->
whí
 = 0;

1037 
ãmp
->
°¨ãd
 = 0;

1038 
ãmp
->
mshr_time
 = 0;

1039 
ãmp
->
å™s„r_time
 = 0;

1040 
ãmp
->
ªq_time
 = 0;

1041 
ãmp
->
°‹e_c⁄d
 = 0;

1042 
ãmp
->
Êù_Êag
 = 0;

1043 
ãmp
->
‹igöÆChûdCou¡
 = 0;

1045 
ãmp
->
l1_wb_íåy
 = 
NULL
;

1050 
ãmp
->
éb_°©e
 = -1;

1051 
ãmp
->
shr_d©a_ªq
 = 0;

1052 
ãmp
->
d©a_ªq_sh¨î
 = 0;

1053 
ãmp
->
L1_hô
 = 0;

1054 
ãmp
->
no_L2_dñay
 = 0;

1055 
ãmp
->
ml2_dú_blk_°©e
 = 0;

1058 
ãmp
->
qblk_£t_shi·
 = 0;

1060 
ãmp
->
öput_buf„r_fuŒ
 = 0;

1061 
ãmp
->
≥ndög_Êag
 = 0;

1062 
ãmp
->
L2miss_Êag
 = 0;

1063 
ãmp
->
dúty_Êag
 = 0;

1064 
ãmp
->
¨rivÆ_time
 = 0;

1065 
ãmp
->
dñay
 = 0;

1066 
ãmp
->
d©a_ª∂y
 = 0;

1067 
ãmp
->
c⁄f_bô
 = -1;

1068 
ãmp
->
missNo
 = 0;

1069 
ãmp
->
ª£nd
 = 0;

1070 
ãmp
->
›î©i⁄
 = 0;

1071 
ãmp
->
ãmpID
 = 0;

1072 
ãmp
->
addr
 = 0;

1073 
ãmp
->
blk1
 = 
NULL
;

1074 
ãmp
->
blk_dú
 = 
NULL
;

1076 
ãmp
->
±r_evít
 = 
NULL
;

1077 
ãmp
->
˝
 = 
NULL
;

1078 
ãmp
->
vp
 = 
NULL
;

1079 
ãmp
->
nbyãs
 = 0;

1080 
ãmp
->
ud©a
 = 
NULL
;

1081 
ãmp
->
rs
 = 
NULL
;

1082 
ãmp
->
§c1
 = 0;

1083 
ãmp
->
§c2
 = 0;

1084 
ãmp
->
des1
 = 0;

1085 
ãmp
->
des2
 = 0;

1086 
ãmp
->
√w_§c1
 = 0;

1087 
ãmp
->
√w_§c2
 = 0;

1088 
ãmp
->
√w_des1
 = 0;

1089 
ãmp
->
√w_des2
 = 0;

1090 
ãmp
->
°¨tCy˛e
 = 0;

1091 
ãmp
->
∑ª¡
 = 
NULL
;

1092 
ãmp
->
∑ª¡_›î©i⁄
 = 0;

1093 
ãmp
->
chûdCou¡
 = 0;

1094 
ãmp
->
¥o˚ssögD⁄e
 = 0;

1095 
ãmp
->
•ec_mode
 = 0;

1096 
ãmp
->
p›√tMsgNo
 = 0;

1097 
ãmp
->
evítTy≥
 = 0;

1098 
ãmp
->
ªc_busy
 = 0;

1099 
ãmp
->
sh¨î_num
 = 0;

1100 
ãmp
->
¥e„tch_√xt
 = 0;

1101 
ãmp
->
°ride
 = 0;

1102 
ãmp
->
‹dî
 = 0;

1103 
ãmp
->
°ªam_íåy_ödex
 = 0;

1104 
ãmp
->
åiggî
 = 0;

1105 
ãmp
->
isReqL2Hô
 = 0;

1106 
ãmp
->
isReqL2Inv
 = 0;

1107 
ãmp
->
isReqL2SecMiss
 = 0;

1108 
ãmp
->
isReqL2Tøns
 = 0;

1109 
ãmp
->
ªqAtDúTime
 = 0;

1110 
ãmp
->
ªqAckTime
 = 0;

1111 
ãmp
->
isSyncAc˚ss
 = isSyncAccess;

1112 
tŸÆEvítCou¡
++;

1113 
tŸÆevítcou¡
++;

1114 
ãmp
->
tŸÆevítcou¡
 =Åotaleventcount;

1115  
ãmp
;

1116 
	}
}

1118 
	$‰ì_evít
(
DIRECTORY_EVENT
 *
evít
)

1120 
evít
->
√xt
 = 
‰ì_evít_li°
;

1121 
‰ì_evít_li°
 = 
evít
;

1122 
tŸÆEvítCou¡
--;

1123 
	}
}

1126 
ˇche_pﬁicy


1127 
	$ˇche_ch¨2pﬁicy
 (
c
)

1129 
c
)

1132  
LRU
;

1134  
R™dom
;

1136  
FIFO
;

1138 
	`Áèl
 ("bogu†ª∂a˚míàpﬁicy, `%c'", 
c
);

1140 
	}
}

1144 
	$ˇche_c⁄fig
 (
ˇche_t
 *
˝
,

1145 
FILE
 * 
°ªam
)

1147 
	`Ârötf
 (
°ªam
, "ˇche: %s: %d sës, %d byã blocks, %d byã†u£∏d©a/block\n", 
˝
->
«me
, cp->
n£ts
, cp->
bsize
, cp->
usize
);

1148 
	`Ârötf
 (
°ªam
, "ˇche: %s: %d-way, `%s'Ñïœ˚míàpﬁicy, wrôe-back\n", 
˝
->
«me
, cp->
assoc
, cp->
pﬁicy
 =
LRU
 ? "LRU" : cp->pﬁicy =
R™dom
 ? "R™dom" : cp->pﬁicy =
FIFO
 ? "FIFO" : (
	`ab‹t
 (), ""));

1149 
	}
}

1153 
	$ˇche_ªg_°©s
 (
ˇche_t
 *
˝
,

1154 
°©_sdb_t
 *
sdb
, 
id
)

1156 
buf
[512], 
buf1
[512], *
«me
;

1159 i‡(
˝
->
thªadid
 !-1 && cp->thªadid !
id
)

1160 
	`∑nic
 ("Wrong cache being called in cache_reg_stats\n");

1163 i‡(!
˝
->
«me
 || !cp->name[0])

1164 
«me
 = "<unknown>";

1166 
«me
 = 
˝
->name;

1168 
«me
 = 
	`my°rdup
(
˝
->name);

1170 
	`•rötf
(
buf
, "_%d", 
id
);

1171 
	`°rˇt
(
«me
, 
buf
);

1173 
	`•rötf
 (
buf
, "%s.ac˚s£s", 
«me
);

1174 
	`•rötf
 (
buf1
, "%s.hô†+ %s.mis£†+ %s.ö_mshr", 
«me
,Çame,Çame);

1175 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ac˚s£s", 
buf1
, "%12.0f");

1176 
	`•rötf
 (
buf
, "%s.hôs", 
«me
);

1177 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡hôs", &
˝
->
hôs
, 0, 
NULL
);

1178 
	`•rötf
 (
buf
, "%s.ö_mshr", 
«me
);

1179 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡£c⁄d¨y mis£s", &
˝
->
ö_mshr
, 0, 
NULL
);

1180 
	`•rötf
 (
buf
, "%s.mis£s", 
«me
);

1181 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
˝
->
mis£s
, 0, 
NULL
);

1183 
	`•rötf
 (
buf
, "%s.dac˚s£s", 
«me
);

1184 
	`•rötf
 (
buf1
, "%s.dhô†+ %s.dmis£†+ %s.dö_mshr", 
«me
,Çame,Çame);

1185 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®ac˚s£s", 
buf1
, "%12.0f");

1186 
	`•rötf
 (
buf
, "%s.dhôs", 
«me
);

1187 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®hôs", &
˝
->
dhôs
, 0, 
NULL
);

1188 
	`•rötf
 (
buf
, "%s.dö_mshr", 
«me
);

1189 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®£c⁄d¨y mis£s", &
˝
->
dö_mshr
, 0, 
NULL
);

1190 
	`•rötf
 (
buf
, "%s.dmis£s", 
«me
);

1191 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®mis£s", &
˝
->
dmis£s
, 0, 
NULL
);

1193 
	`•rötf
 (
buf
, "%s.dú_ac˚ss", 
«me
);

1194 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡dú_ac˚ss", &
˝
->
dú_ac˚ss
, 0, 
NULL
);

1195 
	`•rötf
 (
buf
, "%s.d©a_ac˚ss", 
«me
);

1196 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©a_ac˚ss", &
˝
->
d©a_ac˚ss
, 0, 
NULL
);

1197 
	`•rötf
 (
buf
, "%s.cohîí˚_mis£s", 
«me
);

1198 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£†duêtÿövÆid©i⁄", &
˝
->
cohîí˚_mis£s
, 0, 
NULL
);

1199 
	`•rötf
 (
buf
, "%s.ˇ∑cô™˚_mis£s", 
«me
);

1200 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£†duêtÿˇ∑cô™˚", &
˝
->
ˇ∑cô™˚_mis£s
, 0, 
NULL
);

1201 
	`•rötf
 (
buf
, "%s.ª∂a˚míts", 
«me
);

1202 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ª∂a˚míts", &
˝
->
ª∂a˚míts
, 0, 
NULL
);

1203 
	`•rötf
 (
buf
, "%s.ª∂Inv", 
«me
);

1204 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ª∂a˚mít†whichálsÿö˛udêövÆid©i⁄s", &
˝
->
ª∂Inv
, 0, 
NULL
);

1205 
	`•rötf
 (
buf
, "%s.wrôebacks", 
«me
);

1206 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôebacks", &
˝
->
wrôebacks
, 0, 
NULL
);

1207 
	`•rötf
 (
buf
, "%s.wb_cohîí˚_w", 
«me
);

1208 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôeback†duêtÿcohîí˚ wrôe", &
˝
->
wb_cohîí˚_w
, 0, 
NULL
);

1209 
	`•rötf
 (
buf
, "%s.wb_cohîí˚_r", 
«me
);

1210 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôeback†duêtÿcohîí˚Ñód", &
˝
->
wb_cohîí˚_r
, 0, 
NULL
);

1211 
	`•rötf
 (
buf
, "%s.Invld", 
«me
);

1212 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡Invld", &
˝
->
Invld
, 0, 
NULL
);

1213 
	`•rötf
 (
buf
, "%s.övÆid©i⁄s", 
«me
);

1214 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄s", &
˝
->
övÆid©i⁄s
, 0, 
NULL
);

1215 
	`•rötf
 (
buf
, "%s.s_to_i", 
«me
);

1216 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡sh¨edÅÿövÆid(övÆid©i⁄_ª˚ived_sub)", &
˝
->
s_to_i
, 0, 
NULL
);

1217 
	`•rötf
 (
buf
, "%s.e_to_i", 
«me
);

1218 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ex˛usivêtÿövÆid(övÆid©i⁄_ª˚ived_sub)", &
˝
->
e_to_i
, 0, 
NULL
);

1219 
	`•rötf
 (
buf
, "%s.e_to_m", 
«me
);

1220 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ex˛usivêtÿövÆid(övÆid©i⁄_ª˚ived_sub)", &
˝
->
e_to_m
, 0, 
NULL
);

1222 
	`•rötf
 (
buf
, "%s.dú_nŸifiˇti⁄", 
«me
);

1223 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡upd©ög dúe˘‹y", &
˝
->
dú_nŸifiˇti⁄
, 0, 
NULL
);

1224 
	`•rötf
 (
buf
, "%s.InvÆid_wrôe_ª˚ived", 
«me
);

1225 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ wrôêª˚ived", &
˝
->
InvÆid_wrôe_ª˚ived
, 0, 
NULL
);

1226 
	`•rötf
 (
buf
, "%s.InvÆid_ªad_ª˚ived", 
«me
);

1227 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ÑódÑe˚ived", &
˝
->
InvÆid_Ród_ª˚ived
, 0, 
NULL
);

1228 
	`•rötf
 (
buf
, "%s.InvÆid_w_ª˚ived_hôs", 
«me
);

1229 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ wrôêª˚ived_hôs", &
˝
->
InvÆid_wrôe_ª˚ived_hôs
, 0, 
NULL
);

1230 
	`•rötf
 (
buf
, "%s.InvÆid_r_ª˚ived_hôs", 
«me
);

1231 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ÑódÑe˚ived_hôs", &
˝
->
InvÆid_Ród_ª˚ived_hôs
, 0, 
NULL
);

1232 
	`•rötf
 (
buf
, "%s.acknowÀdgemíàª˚ived", 
«me
);

1233 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡acknowÀdgemíàª˚ived", &
˝
->
ack_ª˚ived
, 0, 
NULL
);

1235 
	`•rötf
 (
buf
, "%s.cohîícyMis£s", 
«me
);

1236 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡cohîícy Mis£s", &
˝
->
cohîícyMis£s
, 0, 
NULL
);

1237 
	`•rötf
 (
buf
, "%s.cohîícyMis£sOC", 
«me
);

1238 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡cohîícy Mis£†duêtÿ›timi°i¯c‹e", &
˝
->
cohîícyMis£sOC
, 0, 
NULL
);

1239 
	`•rötf
 (
buf
, "%s.miss_øã", 
«me
);

1240 
	`•rötf
 (
buf1
, "%s.mis£†/ %s.ac˚s£s", 
«me
,Çame);

1241 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "mis†øã (i.e., mis£s/ªf)", 
buf1
, 
NULL
);

1242 
	`•rötf
 (
buf
, "%s.ª∂_øã", 
«me
);

1243 
	`•rötf
 (
buf1
, "%s.ª∂a˚mít†/ %s.ac˚s£s", 
«me
,Çame);

1244 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "ª∂a˚míàøã (i.e.,Ñïls/ªf)", 
buf1
, 
NULL
);

1245 
	`•rötf
 (
buf
, "%s.wb_øã", 
«me
);

1246 
	`•rötf
 (
buf1
, "%s.wrôeback†/ %s.ac˚s£s", 
«me
,Çame);

1247 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "wrôebackÑ©ê(i.e., wrbks/ªf)", 
buf1
, 
NULL
);

1248 
	`•rötf
 (
buf
, "%s.öv_øã", 
«me
);

1249 
	`•rötf
 (
buf1
, "%s.övÆid©i⁄†/ %s.ac˚s£s", 
«me
,Çame);

1250 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "övÆid©i⁄Ñ©ê(i.e., invs/ªf)", 
buf1
, 
NULL
);

1253 
	`•rötf
 (
buf
, "%s.ÊushCou¡", 
«me
);

1254 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆ flushes", &
˝
->
ÊushCou¡
, 0, 
NULL
);

1255 
	`•rötf
 (
buf
, "%s.löeFlushed", 
«me
);

1256 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "löe†Êushed", &
˝
->
löeFlushCou¡
, 0, 
NULL
);

1258 
	`•rötf
 (
buf
, "%s.ÊushR©e", 
«me
);

1259 
	`•rötf
 (
buf1
, "%s.löeFlushed / %s.ÊushCou¡", 
«me
,Çame);

1260 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "ÊushÑ©ê(i.e.,Üöes/chunk)", 
buf1
, 
NULL
);

1262 
	`‰ì
(
«me
);

1263 
	}
}

1276 
	$ˇche_°©s
 (
ˇche_t
 *
˝
,

1277 
FILE
 * 
°ªam
)

1279 
sum
 = (Ë(
˝
->
hôs
 + cp->
mis£s
);

1281 
	`Ârötf
 (
°ªam
, "ˇche: %s: %.0‡hô†%.0‡mis£†%.0‡ª∂†%.0‡övÆid©i⁄s\n", 
˝
->
«me
, (Ë˝->
hôs
, (Ë˝->
mis£s
, (Ë˝->
ª∂a˚míts
, (Ë˝->
övÆid©i⁄s
);

1282 
	`Ârötf
 (
°ªam
, "ˇche: %s: mis†øã=%‡Ñï»øã=%‡ invÆid©i⁄Ñ©e=%f\n", 
˝
->
«me
, (Ë˝->
mis£s
 / 
sum
, (Ë(Ë˝->
ª∂a˚míts
 / sum, (Ë˝->
övÆid©i⁄s
 / sum);

1283 
	}
}

1286 
	$b™k_check
 (
md_addr_t
 
addr
, 
ˇche_t
 *
˝
)

1289 
	}
}

1291 
	#BUS_TRAN_LAT
 0

	)

1293 
	#SET
 1

	)

1294 
	#TAG
 2

	)

1299 
	$∑ge_èbÀ_öô
 ()

1301 
i
;

1302 
i
=0;i<
PAGE_NUM
;i++)

1304 
∑ge_èbÀ
[
i
] = (
∑ge_íåy
 *Ë
	`ˇŒoc
 (1,  (page_entry));

1305 
∑ge_èbÀ
[
i
]->
vÆid
 = 0;

1306 
∑ge_èbÀ
[
i
]->
busy
 = 0;

1307 
∑ge_èbÀ
[
i
]->
VPN
 = 0;

1308 
∑ge_èbÀ
[
i
]->
PPN
 = 0;

1309 
∑ge_èbÀ
[
i
]->
kì≥r
 = -1;

1310 
∑ge_èbÀ
[
i
]->
ˇched
 = 0;

1311 
∑ge_èbÀ
[
i
]->
°©e
 = 0;

1312 
∑ge_èbÀ
[
i
]->
löe_hód
 = 
NULL
;

1314 
	`¥ötf
("page_table_init finish\n");

1315 
	}
}

1317 
	$∑ge_èbÀ_check
 ( 
md_addr_t
 
addr
, *
∑ge_èbÀ_°©e
, *
∑ge_èbÀ_busy
, *
∑ge_èbÀ_kì≥r
, *
loˇti⁄
 )

1319 
m©ch
 = 0;

1320 
i
;

1321 
ˇche_t
 *
˝
 = 
déb
[0];

1322 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

1323 
i
=0;i<
PAGE_NUM
;i++)

1325 i‡(!
∑ge_èbÀ
[
i
]->
vÆid
)

1327 *
loˇti⁄
 = 
i
;

1330 i‡(
∑ge_èbÀ
[
i
]->
VPN
 =
èg
)

1332 *
∑ge_èbÀ_°©e
 = 
∑ge_èbÀ
[
i
]->
°©e
;

1333 *
∑ge_èbÀ_busy
 = 
∑ge_èbÀ
[
i
]->
busy
;

1334 *
∑ge_èbÀ_kì≥r
 = 
∑ge_èbÀ
[
i
]->
kì≥r
;

1335 *
loˇti⁄
 = 
i
;

1336 
m©ch
 = 1;

1340 i‡(
i
 =
PAGE_NUM
)

1341 
	`∑nic
("notÉnoughÖageÅableÉntry\n");

1342  
m©ch
;

1343 
	}
}

1345 
	$déb_ac˚ss
 ( 
thªadid
, 
md_addr_t
 
addr
 , *
°©e
 )

1347 
ˇche_t
 *
˝
 = 
déb
[
thªadid
];

1348 
ˇche_blk_t
 *
blk
;

1349 
md_addr_t
 
èg
, 
£t
;

1350 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

1351 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

1352 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

1354 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

1356 *
°©e
 = 
blk
->state;

1360 
	}
}

1362 
	$sh¨e_∑âîn
–
thªadid
, 
md_addr_t
 
addr
, 
cmd
 )

1365 
∑ge_èbÀ_m©ch
;

1366 
∑ge_èbÀ_°©e
;

1367 
∑ge_èbÀ_busy
;

1368 
∑ge_èbÀ_kì≥r
;

1369 
loˇti⁄
;

1371 
löe_ow√r
;

1372 
löe_°©e
;

1373 
löe_ödex
;

1374 
löe_ödex
 = ( 
addr
 >> 
ˇche_dl1
[0]->
£t_shi·
 ) & ((1<<(
MD_LOG_PAGE_SIZE
 - cache_dl1[0]->set_shift))-1);

1376 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

1377 if–!
∑ge_èbÀ_m©ch
 )

1378 
	`∑nic
("thisÉntry must be inÖrocess\n");

1379 if(!
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
)

1380 
	`∑nic
("line head initÉrror\n");

1381 
löe_ow√r
 = 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].line_owner;

1382 
löe_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].line_state;

1385 
löe_ac˚ss_num
++;

1386 i‡(
∑ge_èbÀ_°©e
 =
SHARED_WRITE
)

1388 
SWP_löe_ac˚ss_num
++;

1389 
löe_°©e
)

1391 
PRIVATE_READ
: {
SWP_PR_löe_ac˚ss_num
++; ;}

1392 
PRIVATE_WRITE
: {
SWP_PW_löe_ac˚ss_num
++; ;}

1393 
SHARED_READ
: {
SWP_SR_löe_ac˚ss_num
++; ;}

1394 
SHARED_WRITE
: {
SWP_SW_löe_ac˚ss_num
++; ;}

1398 if(
löe_ow√r
 == -1)

1400 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_ow√r
 = 
thªadid
;

1401 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_°©e
 = (
cmd
 =
Ród
Ë? 
PRIVATE_READ
 : 
PRIVATE_WRITE
;

1402 
tŸÆ_löe_num
++;

1403 if(
cmd
 =
Ród
)

1404 
¥_löe_num
++;

1406 
pw_löe_num
++;

1410 if(
löe_°©e
 =
PRIVATE_READ
)

1412 if(
thªadid
 =
löe_ow√r
)

1414 if(
cmd
 =
Wrôe
)

1416 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_°©e
 = 
PRIVATE_WRITE
;

1417 
¥_löe_num
--;

1418 
pw_löe_num
++;

1423 if(
cmd
 =
Ród
)

1425 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_°©e
 = 
SHARED_READ
;

1426 
¥_löe_num
--;

1427 
§_löe_num
++;

1431 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_°©e
 = 
SHARED_WRITE
;

1432 
¥_löe_num
--;

1433 
sw_löe_num
++;

1437 if(
löe_°©e
 =
PRIVATE_WRITE
)

1439 if–
thªadid
 !
löe_ow√r
 )

1441 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_°©e
 = 
SHARED_WRITE
;

1442 
pw_löe_num
--;

1443 
sw_löe_num
++;

1446 if(
löe_°©e
 =
SHARED_READ
)

1448 if(
cmd
 =
Wrôe
)

1450 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
löe_ödex
].
löe_°©e
 = 
SHARED_WRITE
;

1451 
§_löe_num
--;

1452 
sw_löe_num
++;

1455 if(
löe_°©e
 !
SHARED_WRITE
)

1456 
	`∑nic
("line stateÉrror\n");

1459 
	}
}

1461 
	$éb_cu_öô
 ()

1463 
i
,
j
;

1464 
i
=0;i<
MAXTHREADS
;i++)

1466 
éb_cu
[
i
] = (
éb_cu_blk
 *Ë
	`ˇŒoc
 (1,  (tlb_cu_blk));

1467 
éb_cu
[
i
]->
ªcovî_dñay
 = 0;

1468 
j
=0;j<
TLB_CU_SIZE
;j++)

1470 
éb_cu
[
i
]->
pw_evi˘
[
j
].
vÆid
 = 0;

1471 
éb_cu
[
i
]->
pw_evi˘
[
j
].
VPN
 = 0;

1472 
éb_cu
[
i
]->
§_ªcovîy
[
j
].
vÆid
 = 0;

1473 
éb_cu
[
i
]->
§_ªcovîy
[
j
].
VPN
 = 0;

1474 
éb_cu
[
i
]->
dú_ªcovîy
[
j
].
vÆid
 = 0;

1475 
éb_cu
[
i
]->
dú_ªcovîy
[
j
].
evít
 = 
NULL
;

1478 
	}
}

1480 
	$Êush_d©a_mshr_check
–
thªadid
, 
md_addr_t
 
addr
 )

1482 
mshr_t
 *
mshr
 = 
ˇche_dl1
[
thªadid
]->mshr;

1483 
i
;

1484 
i
 = 0; i < 
MSHR_SIZE
; i++)

1486 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
 && ((mshr->mshrE¡ry[i].
addr
 >> 
MD_LOG_PAGE_SIZE
) == (addr>> MD_LOG_PAGE_SIZE)))

1490 
	}
}

1492 
	$éb_Êush_check
(
thªadid
)

1494 
i
;

1495 
m©ch
;

1496 
m©ch
 = 0;

1497 
i
=0;i<
TLB_CU_SIZE
;i++)

1499 i‡(
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
vÆid
)

1501 
m©ch
 = 
	`Êush_d©a_mshr_check
(
thªadid
, 
éb_cu
[thªadid]->
dú_ªcovîy
[
i
].
evít
->
addr
);

1502 if––!
m©ch
 ) && ( (
sim_cy˛e
-
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
->
°¨ãd
Ë>
FLUSH_OVERHEAD
 ) )

1504 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
->
°¨ãd
 = 
sim_cy˛e
;

1505 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1506 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
->
¥o˚ssögD⁄e
 = 0;

1507 
	`d©a_ˇche_Êush
((
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
->
addr
 >> 
MD_LOG_PAGE_SIZE
),Åhreadid);

1508 
	`scheduÀThroughNëw‹k
(
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, -1);

1509 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
 = 
NULL
;

1510 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
vÆid
 = 0;

1514 
	}
}

1516 
	$éb_cu_Æloˇã
–
thªadid
, 
cmd
, 
md_addr_t
 
VPN
, 
DIRECTORY_EVENT
 *
evít
)

1518 
i
;

1519 i‡–
cmd
 =
SHR_TLB_WRITE_BACK
 )

1521 
i
=0;i<
TLB_CU_SIZE
;i++)

1523 if(!
éb_cu
[
thªadid
]->
pw_evi˘
[
i
].
vÆid
)

1525 
éb_cu
[
thªadid
]->
pw_evi˘
[
i
].
vÆid
 =1;

1526 
éb_cu
[
thªadid
]->
pw_evi˘
[
i
].
VPN
 =VPN;

1530 if–
i
 =
TLB_CU_SIZE
 )

1531 
	`∑nic
("TLB_CU_SIZEÅo small\n");

1533 i‡–
cmd
 =
SHR_TLB_SR_RECOVERY
 )

1535 
i
=0;i<
TLB_CU_SIZE
;i++)

1537 if(!
éb_cu
[
thªadid
]->
§_ªcovîy
[
i
].
vÆid
)

1539 
éb_cu
[
thªadid
]->
§_ªcovîy
[
i
].
vÆid
 =1;

1540 
éb_cu
[
thªadid
]->
§_ªcovîy
[
i
].
VPN
 =VPN;

1544 if–
i
 =
TLB_CU_SIZE
 )

1545 
	`∑nic
("TLB_CU_SIZEÅo small\n");

1547 i‡–(
cmd
==
SHR_TLB_UPDATE_PW_ACK
Ë|| (cmd==
SHR_TLB_RECOVERY_ACK
) )

1549 
i
=0;i<
TLB_CU_SIZE
;i++)

1551 if(!
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
vÆid
)

1553 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
vÆid
 =1;

1554 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
evít
 =Évent;

1558 if–
i
 =
TLB_CU_SIZE
 )

1559 
	`∑nic
("TLB_CU_SIZEÅo small\n");

1561 
	}
}

1563 
	$éb_cu_check
(
thªadid
, 
md_addr_t
 
addr
, 
cmd
)

1565 
ˇche_t
 *
˝
 = 
déb
[0];

1566 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

1567 
m©ch
 = -1;

1568 
i
;

1569 i‡–(
cmd
 =
DIR_TLB_UPDATE
Ë|| (cmd =
SHR_TLB_WRITE_BACK
) )

1570 
i
=0;i<
TLB_CU_SIZE
;i++)

1572 i‡–
éb_cu
[
thªadid
]->
pw_evi˘
[
i
].
vÆid
 && (éb_cu[thªadid]->pw_evi˘[i].
VPN
 =
èg
) )

1574 
m©ch
 = 
i
;

1578 i‡–
cmd
 =
DIR_TLB_RECOVERY
 )

1579 
i
=0;i<
TLB_CU_SIZE
;i++)

1581 i‡–
éb_cu
[
thªadid
]->
§_ªcovîy
[
i
].
vÆid
 && (éb_cu[thªadid]->§_ªcovîy[i].
VPN
 =
èg
) )

1583 
m©ch
 = 
i
;

1587  
m©ch
;

1588 
	}
}

1590 
	$éb_mshr_öô
 ()

1592 
i
,
j
;

1593 
i
=0;i<
MAXTHREADS
;i++)

1594 
j
=0;j<
TLB_MSHR_SIZE
;j++)

1596 
éb_mshr
[
i
][
j
] = (
éb_mshr_íåy
 *Ë
	`ˇŒoc
 (1,  (tlb_mshr_entry));

1597 
éb_mshr
[
i
][
j
]->
vÆid
 = 0;

1598 
éb_mshr
[
i
][
j
]->
dúty
 = 0;

1599 
éb_mshr
[
i
][
j
]->
evi˘ög
 = 0;

1600 
éb_mshr
[
i
][
j
]->
VPN
 = 0;

1601 
éb_mshr
[
i
][
j
]->
hód
 = 
NULL
;

1603 
	}
}

1605 
	$éb_mshr_˛ór
(
thªadid
, 
ödex
)

1607 
éb_mshr
[
thªadid
][
ödex
]->
vÆid
 = 0;

1608 
éb_mshr
[
thªadid
][
ödex
]->
dúty
 = 0;

1609 
éb_mshr
[
thªadid
][
ödex
]->
evi˘ög
 = 0;

1610 
éb_mshr
[
thªadid
][
ödex
]->
VPN
 = 0;

1611 
éb_mshr
[
thªadid
][
ödex
]->
hód
 = 
NULL
;

1612 
	}
}

1614 
	$éb_mshr_Æloˇã
 ( 
md_addr_t
 
addr
, 
thªadid
, 
RUU_°©i⁄
 *
rs
 , 
evi˘ög
)

1616 
i
;

1617 
ˇche_t
 *
˝
 = 
déb
[0];

1618 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

1619 
éb_rs
 *
√w_rs
 = (éb_r†*Ë
	`ˇŒoc
 (1,  (tlb_rs));

1620 
√w_rs
->
rs
 =Ñs;

1621 
√w_rs
->
√xt
 = 
NULL
;

1622 
i
=0;i<
TLB_MSHR_SIZE
;i++)

1624 if(!
éb_mshr
[
thªadid
][
i
]->
vÆid
)

1626 
éb_mshr
[
thªadid
][
i
]->
vÆid
 = 1;

1627 
éb_mshr
[
thªadid
][
i
]->
dúty
 = 0;

1628 i‡(
evi˘ög
 != -1)

1629 
éb_mshr
[
thªadid
][
i
]->
evi˘ög
 = 1;

1630 
éb_mshr
[
thªadid
][
i
]->
VPN
 = 
èg
;

1631 
éb_mshr
[
thªadid
][
i
]->
hód
 = 
√w_rs
;

1635 if(
i
 =
TLB_MSHR_SIZE
)

1636 
	`∑nic
("tlb_mshr_sizeÅo small\n");

1637 
	}
}

1639 
	$éb_mshr_check
 ( 
md_addr_t
 
addr
, 
thªadid
, 
RUU_°©i⁄
 *
rs
 )

1641 
m©ch
 = -1;

1642 
i
;

1643 
ˇche_t
 *
˝
 = 
déb
[0];

1644 
éb_rs
 *
ãmp
;

1645 
éb_rs
 *
√w_rs
;

1646 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

1647 
i
=0;i<
TLB_MSHR_SIZE
;i++)

1649 if(
éb_mshr
[
thªadid
][
i
]->
vÆid
 && (éb_mshr[thªadid][i]->
VPN
 =
èg
) )

1651 i‡(!
éb_mshr
[
thªadid
][
i
]->
hód
)

1652 
	`∑nic
("tlb_mshr_head_error\n");

1654 i‡(
rs
)

1656 
ãmp
=
éb_mshr
[
thªadid
][
i
]->
hód
;ãmp->
√xt
!=
NULL
;temp =Åemp->next);

1657 
√w_rs
 = (
éb_rs
 *Ë
	`ˇŒoc
 (1,  (tlb_rs));

1658 
ãmp
->
√xt
 = 
√w_rs
;

1659 
√w_rs
->
rs
 =Ñs;

1660 
√w_rs
->
√xt
 = 
NULL
;

1662 
m©ch
 = 
i
;

1666  
m©ch
;

1667 
	}
}

1669 
	$éb_lock_check
(
thªadid
)

1671 
i
;

1672 
Êushög
 = 0;

1673 
i
=0;i<
TLB_CU_SIZE
;i++)

1674 
Êushög
 = flushög || 
éb_cu
[
thªadid
]->
dú_ªcovîy
[
i
].
vÆid
 ||Ålb_cu[thªadid]->
§_ªcovîy
[i].valid ;

1675  
Êushög
;

1676 
	}
}

1678 
	$d©a_ˇche_Êush
–
md_addr_t
 
déb_èg
, 
èrgë_éb_id
)

1680 
ˇche_t
 *
˝1
;

1681 
ˇche_blk_t
 *
blk1
;

1682 
˝1
 = 
ˇche_dl1
[
èrgë_éb_id
];

1683 
i
;

1684 
md_addr_t
 
addr
;

1685 
∑ckë_size
;

1686 
i
=0;i<
˝1
->
n£ts
;i++)

1688 
blk1
 = 
˝1
->
£ts
[
i
].
way_hód
; blk1; blk1 =blk1->
way_√xt
)

1690 
addr
 = ( 
blk1
->
ègid
.
èg
 << 
˝1
->
èg_shi·
 ) + ( 
i
 << cp1->
£t_shi·
 );

1691 i‡–––
addr
 >> 
MD_LOG_PAGE_SIZE
 ) =
déb_èg
Ë&& (
blk1
->
°©us
 & 
CACHE_BLK_VALID
) )

1694 i‡–(
blk1
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& (
a˘uÆPro˚ss
 =1Ë&& !
	`md_ãxt_addr
(blk1->
addr
, 
èrgë_éb_id
) )

1696 i‡((
blk1
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& !(blk1->
°©e
 =
MESI_MODIFIED
))

1697 
	`∑nic
 ("Cache Block should have been modified here");

1699 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

1700 if(
√w_evít
 =
NULL
)

1701 
	`∑nic
("Out of Virtual Memory");

1702 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK
;

1703 
∑ckë_size
 = 
d©a_∑ckë_size
;

1704 
√w_evít
->
§c1
 = 
èrgë_éb_id
/
mesh_size
+
MEM_LOC_SHIFT
;

1705 
√w_evít
->
§c2
 = 
èrgë_éb_id
%
mesh_size
;

1707 
md_addr_t
 
§c
 = (
blk1
->
addr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

1708 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

1709 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

1710 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

1711 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1712 
√w_evít
->
∑ª¡
 = 
NULL
;

1713 
√w_evít
->
blk_dú
 = 
NULL
;

1714 
√w_evít
->
chûdCou¡
 = 0;

1715 
√w_evít
->
ãmpID
 = 
èrgë_éb_id
;

1716 
√w_evít
->
ª£nd
 = 0;

1717 
√w_evít
->
blk1
 = blk1;

1718 
√w_evít
->
addr
 = 
blk1
->addr;

1719 
√w_evít
->
˝
 = 
˝1
;

1720 
√w_evít
->
vp
 = 
NULL
;

1721 
√w_evít
->
nbyãs
 = 
˝1
->
bsize
;

1722 
√w_evít
->
ud©a
 = 
NULL
;

1723 
√w_evít
->
cmd
 = 
Wrôe
;

1724 
√w_evít
->
rs
 = 
NULL
;

1725 
√w_evít
->
•ec_mode
 = 0;

1726 
√w_evít
->
d©a_ª∂y
 = 0;

1728 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
∑ckë_size
, 0);

1729 
	`dú_evítq_ö£π
(
√w_evít
);

1731 
blk1
->
°©us
 = 0;

1736 
	}
}

1739 
dú_evítq_ö£π
(
DIRECTORY_EVENT
 *
evít
);

1740 #ifde‡
DCACHE_MSHR


1741 
DIRECTORY_EVENT
 *
	gevít_¸óãd
 = 
NULL
;

1743 #ifde‡
L1_STREAM_PREFETCHER


1745 
	$l1öô_•
 ()

1747 
i
, 
j
;

1748 
j
=0;j<
numc⁄ãxts
;j++)

1750 
i
 = 0; i < 
L1_MISS_TABLE_SIZE
; i++)

1751 
l1miss_hi°‹y_èbÀ
[
j
].
hi°‹y
[
i
] = 0;

1752 
l1miss_hi°‹y_èbÀ
[
j
].
mht_èû
 = 0;

1753 
l1miss_hi°‹y_èbÀ
[
j
].
mht_num
 = 0;

1755 
i
 = 0; i < 
L1_STREAM_ENTRIES
; i++)

1757 
l1°ªam_èbÀ
[
j
][
i
].
vÆid
 = 0;

1758 
l1°ªam_èbÀ
[
j
][
i
].
addr
 = 0;

1759 
l1°ªam_èbÀ
[
j
][
i
].
°ride
 = 0;

1760 
l1°ªam_èbÀ
[
j
][
i
].
ªmaöög_¥e„tches
 = 0;

1761 
l1°ªam_èbÀ
[
j
][
i
].
œ°_u£
 = 0;

1764 
	}
}

1766 
md_addr_t
 
	$°ªam_m©ch_addr
(
md_addr_t
 
addr
, 
thªadid
)

1768 
i
;

1769 
quŸõ¡
;

1770 
ªmaödî
;

1771 
°ride_di°™˚
;

1773 
md_addr_t
 
°ªam_hód_addr
;

1774 
i
 = 0; i < 
L1_STREAM_ENTRIES
; i++)

1776 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
°ride
!=0)

1778 
ªmaödî
 = (
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 -áddrË%Ü1°ªam_èbÀ[thªadid][i].
°ride
;

1779 
quŸõ¡
 = (
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 -áddrË/Ü1°ªam_èbÀ[thªadid][i].
°ride
;

1780 
°ride_di°™˚
 = 
STREAM_mö_di°™˚
;

1781 i‡–
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 && !
ªmaödî
 )

1783 i‡–(
quŸõ¡
 >0Ë&& (quŸõ¡ < 
°ride_di°™˚
) )

1785 
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 = 
°ride_di°™˚
-
quŸõ¡
;

1786 
l1°ªam_èbÀ
[
thªadid
][
i
].
œ°_u£
 = 
sim_cy˛e
;

1787 
l1°ªam_èbÀ
[
thªadid
][
i
].
‹dî
 = -1;

1788  
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
;

1790 if–
quŸõ¡
 == -1 )

1792 
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 =áddr;

1793 
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 = 
°ride_di°™˚
;

1794 
l1°ªam_èbÀ
[
thªadid
][
i
].
œ°_u£
 = 
sim_cy˛e
;

1795 
l1°ªam_èbÀ
[
thªadid
][
i
].
‹dî
 = -1;

1796  
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
;

1800 
quŸõ¡
 = 0;

1801 
ªmaödî
 = 0;

1808 
	}
}

1811 
	$l1ö£π_•
 (
md_addr_t
 
addr
, 
thªadid
)

1813 
i
, 
num
;

1814 
di°
;

1815 
mö_íåy
;

1816 
md_addr_t
 
°ride_addr
;

1817 
cou¡
 = 0;

1819 i‡(
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
 == 0)

1821 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[l1miss_hi°‹y_èbÀ[thªadid].
mht_èû
] = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

1822 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 = (l1miss_hi°‹y_èbÀ[thªadid].mht_èû + 1Ë% 
L1_MISS_TABLE_SIZE
;

1823 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
++;

1827 
di°
 = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë- 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[÷1miss_hi°‹y_èbÀ[thªadid].
mht_èû
 + 
L1_MISS_TABLE_SIZE
 - 1) % L1_MISS_TABLE_SIZE];

1828 
°ride_addr
 = 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[÷1miss_hi°‹y_èbÀ[thªadid].
mht_èû
 + 
L1_MISS_TABLE_SIZE
 - 1) % L1_MISS_TABLE_SIZE];

1829 
mö_íåy
 = (
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 + 
L1_MISS_TABLE_SIZE
 - 1) % L1_MISS_TABLE_SIZE;

1832 
num
 = 1, 
i
 = (
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 + 
L1_MISS_TABLE_SIZE
 - 2Ë% L1_MISS_TABLE_SIZE;Çum <Ü1miss_hi°‹y_èbÀ[thªadid].
mht_num
; i = (i + L1_MISS_TABLE_SIZE - 1) % L1_MISS_TABLE_SIZE,Çum++)

1834 
cuº_di°
 = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë- 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1838 i‡(
	`abs
 (
cuº_di°
Ë<áb†(
di°
))

1840 
di°
 = 
cuº_di°
;

1841 
°ride_addr
 = 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1842 
mö_íåy
 = 
i
;

1846 
i
 = 
mö_íåy
;

1849 
i
 = (ò+ 
L1_MISS_TABLE_SIZE
 - 1) % L1_MISS_TABLE_SIZE;

1850 
cuº_di°
 = (
°ride_addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë- 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1852 i‡(
cuº_di°
 =
di°
)

1854 
cou¡
++;

1855 
°ride_addr
 = 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1859 
i
 !––
mö_íåy
 + 1 ) % 
L1_MISS_TABLE_SIZE
 ) );

1862 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[l1miss_hi°‹y_èbÀ[thªadid].
mht_èû
] = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

1863 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 = (l1miss_hi°‹y_èbÀ[thªadid].mht_èû + 1Ë% 
L1_MISS_TABLE_SIZE
;

1864 i‡(
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
 < 
L1_MISS_TABLE_SIZE
)

1865 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
++;

1869 i‡–(
cou¡
 > 0Ë&& (
di°
 != 0) )

1872 
id
 = 0;

1874 i‡(
l1°ªam_èbÀ
[
thªadid
][0].
vÆid
 == 1)

1876 
œ°_u£
 = 
l1°ªam_èbÀ
[
thªadid
][0].last_use;

1878 
id
 = 0;

1879 
i
 = 1; i < 
L1_STREAM_ENTRIES
; i++)

1881 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 == 1)

1884 i‡(
œ°_u£
 > 
l1°ªam_èbÀ
[
thªadid
][
i
].last_use)

1886 
œ°_u£
 = 
l1°ªam_èbÀ
[
thªadid
][
i
].last_use;

1887 
id
 = 
i
;

1892 
id
 = 
i
;

1899 
l1°ªam_èbÀ
[
thªadid
][
id
].
vÆid
 = 1;

1900 
l1°ªam_èbÀ
[
thªadid
][
id
].
‹dî
 = -1;

1901 
l1°ªam_èbÀ
[
thªadid
][
id
].
addr
 =ádd∏& ~(
ˇche_dl1
[0]->
bsize
 - 1);

1902 
l1°ªam_èbÀ
[
thªadid
][
id
].
°ride
 = 
di°
;

1904 
°ride_di°™˚
;

1905 
°ride_di°™˚
 = 
STREAM_mö_di°™˚
;

1906 
l1°ªam_èbÀ
[
thªadid
][
id
].
ªmaöög_¥e„tches
 = 
°ride_di°™˚
;

1908 
l1°ªam_èbÀ
[
thªadid
][
id
].
œ°_u£
 = 0;

1911 i‡–
STREAM_mö_En
 )

1912 
	`l1œunch_•
 (
addr
, 
thªadid
, 0);

1914 
	}
}

1915 #ifde‡
L1_DISTANCE


1917 
	$l1œunch_•
 (
md_addr_t
 
addr
, 
thªadid
, 
åiggî
)

1919 i‡–!
L1_¥e„tch_En
 )

1921 
i
;

1923 
i
 = 0; i < 
L1_STREAM_ENTRIES
; i++)

1925 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 =1 &&Ü1°ªam_èbÀ[thªadid][i].
addr
 =◊dd∏& ~(
ˇche_dl1
[0]->
bsize
 - 1)))

1927 
lﬂd_œt
 = 0;

1928 
byã_t
 *
l1ˇche_löe
 = 
	`ˇŒoc
 (
ˇche_dl1
[0]->
bsize
,  (byte_t));

1929 
j
;

1930 
j
=0;j<
STREAM_mö_di°™˚
;j++)

1932 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 == 0)

1934 
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 =Ü1°ªam_èbÀ[thªadid][i].add∏+Ü1°ªam_èbÀ[thªadid][i].
°ride
;

1935 
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
--;

1936 
l1°ªam_èbÀ
[
thªadid
][
i
].
œ°_u£
 = 
sim_cy˛e
;

1945 
dl1_¥e„tch_a˘ive
 = 1;

1946 if(
l1°ªam_èbÀ
[
thªadid
][
i
].
°ride
 != 0)

1948 
md_addr_t
 
addr_¥e„tch
 = (
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

1949 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
ˇche_dl1
[
thªadid
], 
addr_¥e„tch
);

1950 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
ˇche_dl1
[
thªadid
], 
addr_¥e„tch
);

1951 
ˇche_blk_t
 *
blk
;

1952 
ˇche_hô_Êag
 = 0;

1954 
blk
 = 
ˇche_dl1
[
thªadid
]->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

1956 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

1957 
ˇche_hô_Êag
 = 1;

1959 if(
ˇche_hô_Êag
 == 0)

1963 
§c
 = (
addr_¥e„tch
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

1964 
m©chnum
;

1965 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr_¥e„tch
, cache_dl1[thªadid]->
£t_shi·
);

1968 i‡–!
m©chnum
 && (
ˇche_dl1
[
thªadid
]->
mshr
->
‰ìE¡rõs
 > 1))

1970 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

1971 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

1972 
√w_evít
->
°ride
 = 
l1°ªam_èbÀ
[
thªadid
][
i
].stride;

1973 
√w_evít
->
‹dî
 = 
j
;

1974 
√w_evít
->
°ªam_íåy_ödex
 = 
i
;

1975 
√w_evít
->
åiggî
 =Årigger;

1976 
√w_evít
->
d©a_ª∂y
 = 0;

1977 
√w_evít
->
ªq_time
 = 0;

1978 
√w_evít
->
≥ndög_Êag
 = 0;

1979 
√w_evít
->
›
 = 
LDQ
;

1980 
√w_evít
->
isPª„tch
 = 0;

1981 
√w_evít
->
›î©i⁄
 = 
MISS_READ
;

1983 
√w_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1985 
√w_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1986 #ifde‡
CENTRALIZED_L2


1988 
§c
 = (
addr_¥e„tch
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
CENTL2_BANK_NUM
;

1989 
√w_evít
->
des1
 = 
mesh_size
 + 2 ;

1990 
√w_evít
->
des2
 = 
§c
;

1992 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

1993 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

1995 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

1996 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1997 
√w_evít
->
∑ª¡
 = 
NULL
;

1998 
√w_evít
->
ãmpID
 = 
thªadid
;

1999 
√w_evít
->
ª£nd
 = 0;

2000 
√w_evít
->
blk_dú
 = 
NULL
;

2001 
√w_evít
->
˝
 = 
ˇche_dl1
[
thªadid
];

2002 
√w_evít
->
addr
 = 
addr_¥e„tch
;

2003 
√w_evít
->
vp
 = 
NULL
;

2004 
√w_evít
->
nbyãs
 = 
ˇche_dl1
[
thªadid
]->
bsize
;

2005 
√w_evít
->
ud©a
 = 
NULL
;

2007 
√w_evít
->
cmd
 = 
Ród
;

2008 
√w_evít
->
rs
 = 
NULL
;

2009 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

2010 
√w_evít
->
•ec_mode
 = 0;

2011 
√w_evít
->
L2miss_Êag
 = 0;

2012 if(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 =
STREAM_mö_di°™˚
 - 1)

2014 
√w_evít
->
¥e„tch_√xt
 = 2;

2015 
tŸÆ_L1_fú°_¥e„tch
 ++;

2019 
√w_evít
->
¥e„tch_√xt
 = 4;

2020 
tŸÆ_L1_£c_¥e„tch
 ++;

2023 
√w_evít
->
c⁄f_bô
 = -1;

2024 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

2026 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

2028 
	`dú_evítq_ö£π
(
√w_evít
);

2029 
evít_¸óãd
 = 
√w_evít
;

2030 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr_¥e„tch
, 
WAIT_TIME
, 0, 
NULL
);

2033 i‡–
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 <0 |Ü1°ªam_èbÀ[thªadid][i].ªmaöög_¥e„tche†> 
STREAM_mö_di°™˚
 )

2034 
	`∑nic
("Ñemaining_prefetchesÉrror ");

2035 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 == 0)

2040 
dl1_¥e„tch_a˘ive
 = 0;

2041 
	`‰ì
 (
l1ˇche_löe
);

2045 
	}
}

2048 
	$l1œunch_•
 (
md_addr_t
 
addr
, 
thªadid
, 
åiggî
)

2050 i‡–!
L1_¥e„tch_En
 )

2052 
i
;

2054 
i
 = 0; i < 
L1_STREAM_ENTRIES
; i++)

2056 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 =1 &&Ü1°ªam_èbÀ[thªadid][i].
addr
 =◊dd∏& ~(
ˇche_dl1
[0]->
bsize
 - 1)))

2058 
lﬂd_œt
 = 0;

2059 
byã_t
 *
l1ˇche_löe
 = 
	`ˇŒoc
 (
ˇche_dl1
[0]->
bsize
,  (byte_t));

2061 
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 =Ü1°ªam_èbÀ[thªadid][i].add∏+Ü1°ªam_èbÀ[thªadid][i].
°ride
;

2062 
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
--;

2063 
l1°ªam_èbÀ
[
thªadid
][
i
].
œ°_u£
 = 
sim_cy˛e
;

2065 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 == 1)

2067 
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 = 0;

2072 
dl1_¥e„tch_a˘ive
 = 1;

2073 if(
l1°ªam_èbÀ
[
thªadid
][
i
].
°ride
 != 0)

2075 
md_addr_t
 
addr_¥e„tch
 = (
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

2076 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
ˇche_dl1
[
thªadid
], 
addr_¥e„tch
);

2077 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
ˇche_dl1
[
thªadid
], 
addr_¥e„tch
);

2078 
ˇche_blk_t
 *
blk
;

2079 
ˇche_hô_Êag
 = 0;

2081 
blk
 = 
ˇche_dl1
[
thªadid
]->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2083 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

2084 
ˇche_hô_Êag
 = 1;

2086 if(
ˇche_hô_Êag
 == 0)

2090 
§c
 = (
addr_¥e„tch
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

2093 
m©chnum
;

2094 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr_¥e„tch
, cache_dl1[thªadid]->
£t_shi·
);

2095 if(!
m©chnum
 && (
ˇche_dl1
[
thªadid
]->
mshr
->
‰ìE¡rõs
 > 1))

2097 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

2098 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

2099 
tŸÆ_L1_¥e„tch
 ++;

2100 
Àvñ1_¥e„tch_num
 ++;

2101 
√w_evít
->
d©a_ª∂y
 = 0;

2102 
√w_evít
->
ªq_time
 = 0;

2103 
√w_evít
->
≥ndög_Êag
 = 0;

2104 
√w_evít
->
›
 = 
LDQ
;

2105 
√w_evít
->
isPª„tch
 = 0;

2106 
√w_evít
->
›î©i⁄
 = 
MISS_READ
;

2108 
√w_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

2110 
√w_evít
->
§c2
 = 
thªadid
%
mesh_size
;

2111 #ifde‡
CENTRALIZED_L2


2113 
§c
 = (
addr_¥e„tch
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
CENTL2_BANK_NUM
;

2114 
√w_evít
->
des1
 = 
mesh_size
 + 2 ;

2115 
√w_evít
->
des2
 = 
§c
;

2117 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

2118 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

2120 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

2121 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

2122 
√w_evít
->
∑ª¡
 = 
NULL
;

2123 
√w_evít
->
ãmpID
 = 
thªadid
;

2124 
√w_evít
->
ª£nd
 = 0;

2125 
√w_evít
->
blk_dú
 = 
NULL
;

2126 
√w_evít
->
˝
 = 
ˇche_dl1
[
thªadid
];

2127 
√w_evít
->
addr
 = 
addr_¥e„tch
;

2128 
√w_evít
->
vp
 = 
NULL
;

2129 
√w_evít
->
nbyãs
 = 
ˇche_dl1
[
thªadid
]->
bsize
;

2130 
√w_evít
->
ud©a
 = 
NULL
;

2132 
√w_evít
->
cmd
 = 
Ród
;

2133 
√w_evít
->
rs
 = 
NULL
;

2134 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

2135 
√w_evít
->
•ec_mode
 = 0;

2136 
√w_evít
->
L2miss_Êag
 = 0;

2137 if(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 =
STREAM_mö_di°™˚
 - 1)

2139 
√w_evít
->
¥e„tch_√xt
 = 2;

2140 
tŸÆ_L1_fú°_¥e„tch
 ++;

2144 
√w_evít
->
¥e„tch_√xt
 = 4;

2145 
tŸÆ_L1_£c_¥e„tch
 ++;

2148 
√w_evít
->
c⁄f_bô
 = -1;

2149 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

2151 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

2153 
	`dú_evítq_ö£π
(
√w_evít
);

2154 
evít_¸óãd
 = 
√w_evít
;

2155 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr_¥e„tch
, 
WAIT_TIME
, 0, 
NULL
);

2160 
dl1_¥e„tch_a˘ive
 = 0;

2161 
	`‰ì
 (
l1ˇche_löe
);

2165 
	}
}

2168 #ifde‡
STREAM_PREFETCHER


2170 
	$öô_•
 ()

2172 
i
;

2174 
i
 = 0; i < 
L2_MISS_TABLE_SIZE
; i++)

2175 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
] = 0;

2176 
miss_hi°‹y_èbÀ
.
mht_èû
 = 0;

2177 
miss_hi°‹y_èbÀ
.
mht_num
 = 0;

2179 
i
 = 0; i < 
L2_STREAM_ENTRIES
; i++)

2181 
°ªam_èbÀ
[
i
].
vÆid
 = 0;

2182 
°ªam_èbÀ
[
i
].
addr
 = 0;

2183 
°ªam_èbÀ
[
i
].
°ride
 = 0;

2184 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
 = 0;

2185 
°ªam_èbÀ
[
i
].
œ°_u£
 = 0;

2187 
	}
}

2190 
	$ö£π_•
 (
md_addr_t
 
addr
, 
thªadid
)

2192 
i
, 
num
;

2193 
di°
;

2194 
mö_íåy
;

2195 
md_addr_t
 
°ride_addr
;

2196 
cou¡
 = 0;

2198 i‡(
miss_hi°‹y_èbÀ
.
mht_num
 == 0)

2200 
miss_hi°‹y_èbÀ
.
hi°‹y
[miss_hi°‹y_èbÀ.
mht_èû
] = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1));

2201 
miss_hi°‹y_èbÀ
.
mht_èû
 = (miss_hi°‹y_èbÀ.mht_èû + 1Ë% 
L2_MISS_TABLE_SIZE
;

2202 
miss_hi°‹y_èbÀ
.
mht_num
++;

2206 
di°
 = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[(miss_hi°‹y_èbÀ.
mht_èû
 + 
L2_MISS_TABLE_SIZE
 - 1) % L2_MISS_TABLE_SIZE];

2207 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[(miss_hi°‹y_èbÀ.
mht_èû
 + 
L2_MISS_TABLE_SIZE
 - 1) % L2_MISS_TABLE_SIZE];

2208 
mö_íåy
 = (
miss_hi°‹y_èbÀ
.
mht_èû
 + 
L2_MISS_TABLE_SIZE
 - 1) % L2_MISS_TABLE_SIZE;

2211 
num
 = 1, 
i
 = (
miss_hi°‹y_èbÀ
.
mht_èû
 + 
L2_MISS_TABLE_SIZE
 - 2Ë% L2_MISS_TABLE_SIZE;Çum < miss_hi°‹y_èbÀ.
mht_num
; i = (i + L2_MISS_TABLE_SIZE - 1) % L2_MISS_TABLE_SIZE,Çum++)

2213 
cuº_di°
 = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

2215 i‡(
	`abs
 (
cuº_di°
Ë<áb†(
di°
))

2217 
di°
 = 
cuº_di°
;

2218 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

2219 
mö_íåy
 = 
i
;

2223 
i
 = 
mö_íåy
;

2226 
i
 = (ò+ 
L2_MISS_TABLE_SIZE
 - 1) % L2_MISS_TABLE_SIZE;

2227 
cuº_di°
 = (
°ride_addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

2229 i‡(
cuº_di°
 =
di°
)

2231 
cou¡
++;

2232 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

2236 
i
 !––
mö_íåy
 + 1 ) % 
L2_MISS_TABLE_SIZE
 ) );

2239 
miss_hi°‹y_èbÀ
.
hi°‹y
[miss_hi°‹y_èbÀ.
mht_èû
] = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1));

2240 
miss_hi°‹y_èbÀ
.
mht_èû
 = (miss_hi°‹y_èbÀ.mht_èû + 1Ë% 
L2_MISS_TABLE_SIZE
;

2241 i‡(
miss_hi°‹y_èbÀ
.
mht_num
 < 
L2_MISS_TABLE_SIZE
)

2242 
miss_hi°‹y_èbÀ
.
mht_num
++;

2244 i‡(
cou¡
 > 1)

2248 
id
 = 0;

2250 i‡(
°ªam_èbÀ
[0].
vÆid
 == 1)

2252 
œ°_u£
 = 
°ªam_èbÀ
[0].last_use;

2254 
id
 = 0;

2255 
i
 = 1; i < 
L2_STREAM_ENTRIES
; i++)

2257 i‡(
°ªam_èbÀ
[
i
].
vÆid
 == 1)

2259 i‡(
œ°_u£
 < 
°ªam_èbÀ
[
i
].last_use)

2261 
œ°_u£
 = 
°ªam_èbÀ
[
i
].last_use;

2262 
id
 = 
i
;

2267 
id
 = 
i
;

2274 
°ªam_èbÀ
[
id
].
vÆid
 = 1;

2275 
°ªam_èbÀ
[
id
].
addr
 =ádd∏& ~(
ˇche_dl2
->
bsize
 - 1);

2276 
°ªam_èbÀ
[
id
].
°ride
 = 
di°
;

2277 
°ªam_èbÀ
[
id
].
ªmaöög_¥e„tches
 = 
STREAM_L2_di°™˚
;

2278 
°ªam_èbÀ
[
id
].
œ°_u£
 = 2000000000;

2281 
	`œunch_•
 (
id
, 
thªadid
);

2283 
	}
}

2286 
	$œunch_•
 (
id
, 
thªadid
)

2288 i‡–!
L2_¥e„tch_En
 )

2290 
i
 = 
id
;

2292 i‡(
°ªam_èbÀ
[
i
].
vÆid
 == 1)

2294 ; 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
; stream_table[i].remaining_prefetches --)

2296 
lﬂd_œt
 = 0;

2297 
byã_t
 *
l1ˇche_löe
 = 
	`ˇŒoc
 (
ˇche_dl2
->
bsize
,  (byte_t));

2299 
°ªam_èbÀ
[
i
].
addr
 = såóm_èbÀ[i].add∏+ såóm_èbÀ[i].
°ride
;

2300 
°ªam_èbÀ
[
i
].
œ°_u£
 = 
sim_cy˛e
;

2305 
dl2_¥e„tch_a˘ive
 = 1;

2306 
dl2_¥e„tch_id
 = 
i
;

2307 
DIRECTORY_EVENT
 *
evít
 = 
	`Æloˇã_evít
(0);

2308 if(
evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

2309 
evít
->
c⁄f_bô
 = -1;

2310 
evít
->
≥ndög_Êag
 = 0;

2311 
evít
->
addr
 = (
°ªam_èbÀ
[
i
].add∏& ~(
ˇche_dl2
->
bsize
 - 1));

2312 
evít
->
¥e„tch_√xt
 = 3;

2313 
evít
->
°¨ãd
 = 
sim_cy˛e
;

2314 
evít
->
›î©i⁄
 = 
L2_PREFETCH
;

2315 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

2316 
evít
->
›
 = 0;

2317 
evít
->
˝
 = 
ˇche_dl1
[0];

2318 
evít
->
ãmpID
 = 
thªadid
;

2319 
evít
->
nbyãs
 = 
ˇche_dl1
[0]->
bsize
;

2320 
evít
->
ud©a
 = 
NULL
;

2321 
evít
->
rs
 = 
NULL
;

2322 
evít
->
•ec_mode
 = 0;

2323 
evít
->
öput_buf„r_fuŒ
 = 0;

2324 
evít
->
§c1
 = 
thªadid
/
mesh_size
 + 
MEM_LOC_SHIFT
;

2325 
evít
->
§c2
 = 
thªadid
%
mesh_size
;

2326 
§c
;

2327 #ifde‡
CENTRALIZED_L2


2329 
§c
 = (
evít
->
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
CENTL2_BANK_NUM
;

2330 
evít
->
des1
 = 
mesh_size
 + 2 ;

2331 
evít
->
des2
 = 
§c
;

2334 
§c
 = (
evít
->
addr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

2335 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

2336 
evít
->
des2
 = (
§c
 %
mesh_size
);

2338 
evít
->
d©a_ª∂y
 = 0;

2339 
evít
->
¥o˚ssögD⁄e
 = 0;

2340 
evít
->
ªq_time
 = 0;

2341 
	`dú_evítq_ö£π
(
evít
);

2343 
dl2_¥e„tch_a˘ive
 = 0;

2344 
	`‰ì
 (
l1ˇche_löe
);

2347 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
 = 1;

2348 
	}
}

2353 
cou¡î_t
 
tŸÆL2WrôeReqHôs
;

2354 
cou¡î_t
 
tŸÆL2WrôeReqNoSh¨î
;

2355 
cou¡î_t
 
tŸÆL2WrôeReqDúty
;

2356 
cou¡î_t
 
dñayL2WrôeReqDúty
;

2357 
cou¡î_t
 
tŸÆL2WrôeReqSh¨ed
;

2358 
cou¡î_t
 
dñayL2WrôeReqSh¨ed
;

2360 
cou¡î_t
 
tŸÆL2RódReqHôs
;

2361 
cou¡î_t
 
tŸÆL2RódReqNoSh¨î
;

2362 
cou¡î_t
 
tŸÆL2RódReqDúty
;

2363 
cou¡î_t
 
dñayL2RódReqDúty
;

2365 
cou¡î_t
 
tŸÆL2RódReqSh¨ed
;

2366 
cou¡î_t
 
tŸÆL2WrôeReqSh¨edWT
;

2367 
cou¡î_t
 
tŸÆL2WrôeReqDútyWT
;

2368 
cou¡î_t
 
tŸÆL2RódReqDútyWT
;

2370 
cou¡î_t
 
tŸÆL1LöePªfU£
;

2371 
cou¡î_t
 
tŸÆL1LöePªfNoU£
;

2372 
cou¡î_t
 
tŸÆL1LöeRódU£
;

2373 
cou¡î_t
 
tŸÆL1LöeRódNoU£
;

2374 
cou¡î_t
 
tŸÆL1LöeWrôeU£
;

2375 
cou¡î_t
 
tŸÆL1LöeWrôeNoU£
;

2377 
cou¡î_t
 
tŸÆL1LöeExlU£d
;

2378 
cou¡î_t
 
tŸÆL1LöeExlInv
;

2379 
cou¡î_t
 
tŸÆL1LöeExlDr›
;

2381 
cou¡î_t
 
tŸÆL2ReqPrimMiss
;

2382 
cou¡î_t
 
tŸÆL2ReqSecMiss
;

2383 
cou¡î_t
 
tŸÆL2ReqHô
;

2384 
cou¡î_t
 
tŸÆL2ReqInTøns
;

2385 
cou¡î_t
 
tŸÆL2OwnReqInTøns
;

2386 
cou¡î_t
 
tŸÆL2ReqInInv
;

2388 
cou¡î_t
 
dñayL2ReqPrimMiss
;

2389 
cou¡î_t
 
dñayL2ReqSecMiss
;

2390 
cou¡î_t
 
dñayL2ReqHô
;

2391 
cou¡î_t
 
dñayL2ReqInTøns
;

2392 
cou¡î_t
 
dñayL2OwnReqInTøns
;

2393 
cou¡î_t
 
dñayL2ReqInInv
;

2395 
cou¡î_t
 
tŸÆWrôeReq
;

2396 
cou¡î_t
 
tŸÆWrôeReqInv
;

2397 
cou¡î_t
 
tŸÆWrôeDñay
;

2398 
cou¡î_t
 
tŸÆWrôeInvDñay
;

2399 
cou¡î_t
 
tŸÆUpgødeReq
;

2400 
cou¡î_t
 
	gtŸÆUpgødeMiss
;

2401 
cou¡î_t
 
tŸÆUpgødeReqInv
;

2402 
cou¡î_t
 
tŸÆUpgødeDñay
;

2403 
cou¡î_t
 
tŸÆUpgødeInvDñay
;

2404 
cou¡î_t
 
	gm_upd©e_miss
[
MAXTHREADS
];

2406 
cou¡î_t
 
cou¡N⁄AŒocRódE¨ly
;

2407 
cou¡î_t
 
	gsh¨î_di°r
[
MAXTHREADS
];

2408 
cou¡î_t
 
	gtŸÆ_c‹√r_∑ckës
, 
	gtŸÆ_√ighb‹_∑ckës
, 
	gtŸÆ_Ár_∑ckës
;

2410 
cou¡î_t
 
övÆid©i⁄_ª∂ay
[
MAXTHREADS
];

2412 
	$£ndLSQInv
(
md_addr_t
 
addr
, 
thªadid
)

2414 i‡(
cﬁÀ˘_°©s
)

2416 
cx
, 
dx
;

2417 
LSQ_size
;

2418 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

2419 
md_addr_t
 
mask
;

2421 
mask
 = ~
ˇche_dl1
[
thªadid
]->
blk_mask
;

2423 
cx
 = 
cuºít
->
LSQ_hód
, 
dx
 = 0; dx !cuºít->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

2425 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOADË&& (cuºít->LSQ[cx].
addr
 & 
mask
Ë=◊dd∏& maskË&& !cuºít->LSQ[cx].
•ec_mode


2426 &&!
cuºít
->
LSQ
[
cx
].
isPª„tch
 && cuºít->LSQ[cx].
issued
)

2428 #ifde‡
SEQUENTIAL_CONSISTENCY


2429 
	`fixS≥cSèã
 (
cuºít
->
LSQ
[
cx
].
¥od
[1]->
ödex
, 
thªadid
);

2430 
cuºít
->
ªgs
 = cuºít->
LSQ
[
cx
].
¥od
[1]->
backupReg
;

2431 
	`£qC⁄si°™cyRïœy
 (
cuºít
->
LSQ
[
cx
].
¥od
[1]->
ödex
, 
thªadid
);

2432 
övÆid©i⁄_ª∂ay
[
thªadid
]++;

2435 #ifde‡
RELAXED_CONSISTENCY


2436 
cuºít
->
LSQ
[
cx
].
övÆid©i⁄Re˚ived
 = 1;

2441 
	}
}

2444 
	$ª£t_p‹ts
()

2446 
i
;

2447 
i
 = 0; i < 
MAXTHREADS
+
mesh_size
*2; i++)

2449 
dú_fifo_p‹tu£
[
i
] = 0;

2450 
l1_fifo_p‹tu£
[
i
] = 0;

2451 
tshr_fifo_p‹tu£
[
i
] = 0;

2453 
	}
}

2455 
m_shSQSize
;

2456 
	$dú_fifo_íqueue
(
DIRECTORY_EVENT
 *
evít
, 
ty≥
)

2458 
thªadid
 = 
evít
->
des1
*
mesh_size
 +Évít->
des2
;

2459 if(
evít
->
›î©i⁄
 =
INV_MSG_READ
 ||Évít->›î©i⁄ =
INV_MSG_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_IL1
 ||Évít->›î©i⁄ =
ACK_DIR_READ_SHARED


2460 || 
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITE


2461 || 
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
 ||Évít->›î©i⁄ =
FINAL_INV_ACK


2462 || 
evít
->
›î©i⁄
 =
NACK
 ||Évít->›î©i⁄ =
FAIL


2465 if(
l1_fifo_num
[
thªadid
] >
DIR_FIFO_SIZE
)

2466 
	`∑nic
("L1 cache FIFO is full");

2467 if(
ty≥
 =0 && 
l1_fifo_num
[
thªadid
] >
dú_fifo_size
)

2469 if(
l1_fifo_num
[
thªadid
] >
dú_fifo_size
 && !
œ°_L1_fifo_fuŒ
[threadid])

2471 
L1_fifo_fuŒ
 ++;

2472 
œ°_L1_fifo_fuŒ
[
thªadid
] = 
sim_cy˛e
;

2476 if(
œ°_L1_fifo_fuŒ
[
thªadid
])

2478 
SèŒ_L1_fifo
 +
sim_cy˛e
 - 
œ°_L1_fifo_fuŒ
[
thªadid
];

2479 
œ°_L1_fifo_fuŒ
[
thªadid
] = 0;

2481 if(
evít
->
›î©i⁄
 =
ACK_DIR_IL1
Ëevít->
whí
 = 
sim_cy˛e
 + 
ˇche_û1_œt
;

2482 
evít
->
whí
 = 
sim_cy˛e
 + 
ˇche_dl1_œt
;

2483 
l1_fifo
[
thªadid
][
l1_fifo_èû
[thªadid]] = 
evít
;

2484 
l1_fifo_èû
[
thªadid
] = (l1_fifo_èû[thªadid]+1)%
DIR_FIFO_SIZE
;

2485 
l1_fifo_num
[
thªadid
]++;

2490 if(
evít
->
Êù_Êag
)

2492 if(
tshr_fifo_num
[
thªadid
] >
TSHR_FIFO_SIZE
)

2493 
	`∑nic
("TSHR FIFO is full");

2494 
evít
->
whí
 = 
sim_cy˛e
+
RETRY_TIME
;

2495 
tshr_fifo
[
thªadid
][
tshr_fifo_èû
[thªadid]] = 
evít
;

2496 
tshr_fifo_èû
[
thªadid
] = (tshr_fifo_èû[thªadid]+1)%
TSHR_FIFO_SIZE
;

2497 
tshr_fifo_num
[
thªadid
]++;

2500 if(
dú_fifo_num
[
thªadid
] >
DIR_FIFO_SIZE
)

2501 
	`∑nic
("DIR FIFO is full");

2502 if–(
evít
->
›î©i⁄
 =
SHR_TLB_MISS
 ) ||

2503 (
evít
->
›î©i⁄
 =
SHR_TLB_WRITE_BACK
 ) ||

2504 (
evít
->
›î©i⁄
 =
SHR_TLB_SR_RECOVERY
 ) ||

2505 (
evít
->
›î©i⁄
 =
SHR_TLB_UPDATE_PR_ACK
) ||

2506 (
evít
->
›î©i⁄
 =
SHR_TLB_UPDATE_PW_ACK
) ||

2507 (
evít
->
›î©i⁄
 =
SHR_TLB_RECOVERY_ACK
 ) ||

2508 (
evít
->
›î©i⁄
 =
DIR_TLB_REFILL
 ) ||

2509 (
evít
->
›î©i⁄
 =
DIR_TLB_UPDATE
 ) ||

2510 (
evít
->
›î©i⁄
 =
DIR_TLB_RECOVERY
 ) ||

2511 (
evít
->
›î©i⁄
 =
DIR_TLB_REFILL_WAIT
 ) ||

2512 (
evít
->
›î©i⁄
 =
DIR_TLB_UPDATE_WAIT
 ) ||

2513 (
evít
->
›î©i⁄
 =
DIR_TLB_RECOVERY_WAIT
)

2516 
evít
->
whí
 = 
sim_cy˛e
;

2517 
dú_fifo
[
thªadid
][
dú_fifo_èû
[thªadid]] = 
evít
;

2518 
dú_fifo_èû
[
thªadid
] = (dú_fifo_èû[thªadid]+1)%
DIR_FIFO_SIZE
;

2519 
dú_fifo_num
[
thªadid
]++;

2522 if(
ty≥
 =0 && 
dú_fifo_num
[
thªadid
] >
dú_fifo_size
)

2524 if(
dú_fifo_num
[
thªadid
] >
dú_fifo_size
 && !
œ°_Dú_fifo_fuŒ
[threadid])

2526 
Dú_fifo_fuŒ
 ++;

2527 
œ°_Dú_fifo_fuŒ
[
thªadid
] = 
sim_cy˛e
;

2531 if(
œ°_Dú_fifo_fuŒ
[
thªadid
])

2533 
SèŒ_dú_fifo
 +
sim_cy˛e
 - 
œ°_Dú_fifo_fuŒ
[
thªadid
];

2534 
œ°_Dú_fifo_fuŒ
[
thªadid
] = 0;

2537 if(
evít
->
no_L2_dñay
)

2539 
evít
->
whí
 = 
sim_cy˛e
;

2540 
evít
->
no_L2_dñay
 = 0;

2542 if(
evít
->
›î©i⁄
 !
MEM_READ_REQ
 &&Évít->›î©i⁄ !
MEM_READ_REPLY
 &&Évít->›î©i⁄ !
WAIT_MEM_READ_N_WAIT
 )

2544 
evít
->
whí
 = 
sim_cy˛e
 + 
ˇche_dl2_œt
;

2545 i‡–
mb_∑ö_í
 && (
mb_∑ö_cou¡
 > 0Ë&& (
evít
->
›î©i⁄
 =
MISS_READ
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 ||Évít->›î©i⁄ =
MISS_WRITE
) )

2547 
evít
->
whí
++;

2548 
mb_∑ö_dñay_num
 ++;

2549 
mb_∑ö_cou¡
--;

2553 
evít
->
whí
 = 
sim_cy˛e
;

2554 
dú_fifo
[
thªadid
][
dú_fifo_èû
[thªadid]] = 
evít
;

2555 
dú_fifo_èû
[
thªadid
] = (dú_fifo_èû[thªadid]+1)%
DIR_FIFO_SIZE
;

2556 
dú_fifo_num
[
thªadid
]++;

2559 
	}
}

2561 
	$dú_fifo_dequeue
()

2563 
i
, 
j
;

2564 
PPP_ödiˇti⁄
;

2568 
i
 = 0; i < 
numc⁄ãxts
+
mesh_size
*2; i++)

2570 if(
tshr_fifo_num
[
i
] <0 || 
tshr_fifo_p‹tu£
[i] >
DIR_FIFO_PORTS
)

2574 if(
tshr_fifo
[
i
][
tshr_fifo_hód
[i]]->
whí
 > 
sim_cy˛e
)

2576 if(
	`dú_›î©i⁄
(
tshr_fifo
[
i
][
tshr_fifo_hód
[i]], 0) == 0)

2578 
éb_å™s„r
;

2579 
éb_å™s„r
 = 
	`éb_å™s„r_check
(
tshr_fifo
[
i
][
tshr_fifo_hód
[i]]);

2580 i‡–!
éb_å™s„r
 )

2581 
tshr_fifo_p‹tu£
[
i
]++;

2582 
tshr_fifo_hód
[
i
] = (tshr_fifo_hód[i]+1)%
TSHR_FIFO_SIZE
;

2583 
tshr_fifo_num
[
i
]--;

2584 if(
tshr_fifo_p‹tu£
[
i
] >
DIR_FIFO_PORTS
 || 
tshr_fifo_num
[i] <= 0)

2590 
i
 = 0; i < 
numc⁄ãxts
+
mesh_size
*2; i++)

2592 if(
dú_fifo_num
[
i
] <0 || 
dú_fifo_p‹tu£
[i] >
DIR_FIFO_PORTS
)

2596 if(
dú_fifo
[
i
][
dú_fifo_hód
[i]]->
whí
 > 
sim_cy˛e
)

2599 
Q_hô_num
 = 
ªad_Q_hô_num
 + 
wrôe_Q_hô_num
;

2601 if(
	`dú_›î©i⁄
(
dú_fifo
[
i
][
dú_fifo_hód
[i]], 0) == 0)

2604 if((
Q_hô_num
<(
ªad_Q_hô_num
+
wrôe_Q_hô_num
)Ë&& 
mb_∑ö_í
)

2606 
dú_fifo_p‹tu£
[
i
]++;

2607 
mb_∑ö_p‹tu£_num
++;

2610 
éb_å™s„r
;

2611 
éb_å™s„r
 = 
	`éb_å™s„r_check
(
dú_fifo
[
i
][
dú_fifo_hód
[i]]);

2612 i‡–!
éb_å™s„r
 )

2613 
dú_fifo_p‹tu£
[
i
]++;

2614 
dú_fifo_hód
[
i
] = (dú_fifo_hód[i]+1)%
DIR_FIFO_SIZE
;

2615 
dú_fifo_num
[
i
]--;

2616 if(
dú_fifo_p‹tu£
[
i
] >
DIR_FIFO_PORTS
 || 
dú_fifo_num
[i] <= 0)

2622 
i
 = 0; i < 
numc⁄ãxts
+
mesh_size
*2; i++)

2624 
ªs_poﬁ
 *
fu_poﬁ
;

2626 if(
l1_fifo_num
[
i
] <0 || 
l1_fifo_p‹tu£
[i] >
DIR_FIFO_PORTS
)

2630 if(
l1_fifo
[
i
][
l1_fifo_hód
[i]]->
whí
 > 
sim_cy˛e
)

2632 if(
	`dú_›î©i⁄
(
l1_fifo
[
i
][
l1_fifo_hód
[i]], 0) == 0)

2634 
l1_fifo_p‹tu£
[
i
]++;

2635 
l1_fifo_hód
[
i
] = (l1_fifo_hód[i]+1)%
DIR_FIFO_SIZE
;

2636 
l1_fifo_num
[
i
]--;

2637 if(
l1_fifo_p‹tu£
[
i
] >
DIR_FIFO_PORTS
 || 
l1_fifo_num
[i] <= 0)

2641 
	}
}

2646 
	$dú_evítq_ö£π
(
DIRECTORY_EVENT
 *
evít
)

2648 
DIRECTORY_EVENT
 *
ev
, *
¥ev
;

2650 
¥ev
 = 
NULL
, 
ev
 = 
dú_evít_queue
;Év && (”v->
whí
Ë<(
evít
->whí));Öªv =Év,Év =Év->
√xt
);

2651 i‡(
¥ev
)

2653 
evít
->
√xt
 = 
ev
;

2654 
¥ev
->
√xt
 = 
evít
;

2658 
evít
->
√xt
 = 
dú_evít_queue
;

2659 
dú_evít_queue
 = 
evít
;

2661 
	}
}

2664 #ifde‡
CONF_RES_RESEND


2666 
	$queue_ö£π
(
DIRECTORY_EVENT
 *
evít
, 
QUEUE_EVENT
 *
queue
)

2668 
i
 = 0;

2669 if(
queue
->
‰ì_E¡rõs
 == 0)

2670 
	`∑nic
("There isÇo freeÉntryÅo insert in sending message queue");

2672 
i
=0; i<
QUEUE_SIZE
; i++)

2674 if(!
queue
->
Queue_íåy
[
i
].
isvÆid
)

2676 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 1;

2677 
queue
->
Queue_íåy
[
i
].
evít
 =Évent;

2678 
queue
->
‰ì_E¡rõs
 --;

2683 
	}
}

2685 
	$‰ì_queue
(
DIRECTORY_EVENT
 *
evít
, 
QUEUE_EVENT
 *
queue
)

2687 
i
 = 0;

2688 if(!
queue
) ;

2689 
i
=0; i<
QUEUE_SIZE
; i++)

2691 if(
queue
->
Queue_íåy
[
i
].
isvÆid
 && (queue->Queue_íåy[i].
evít
->
addr
 =evít->addrË&& (queue->Queue_íåy[i].evít->
°¨ãd
 ==Évent->started)

2692 && (
queue
->
Queue_íåy
[
i
].
evít
->
missNo
 ==Évent->missNo))

2694 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 0;

2695 
queue
->
‰ì_E¡rõs
 ++;

2700 if(
queue
->
‰ì_E¡rõs
 > 
QUEUE_SIZE
)

2701 
	`∑nic
("QUEUE SIZE EXCEEDS\n");

2703 
	}
}

2705 
	$queue_check
(
DIRECTORY_EVENT
 *
evít
, 
QUEUE_EVENT
 *
queue
)

2707 
i
 = 0;

2708 if(!
queue
)  0;

2709 
i
=0; i<
QUEUE_SIZE
; i++)

2711 if(
queue
->
Queue_íåy
[
i
].
isvÆid
 && (queue->Queue_íåy[i].
evít
->
addr
 =evít->addrË&& (queue->Queue_íåy[i].evít->
°¨ãd
 ==Évent->started)

2712 && (
queue
->
Queue_íåy
[
i
].
evít
->
missNo
 ==Évent->missNo))

2716 
	}
}

2719 
	$evítq_upd©e
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
ªady
)

2721 
RS_lök
 *
ev
, *
¥ev
, *
√w_ev
=
NULL
;

2723 if(
rs
 =
NULL
 || 
evít_queue
 == NULL)

2728 
¥ev
=
NULL
, 
ev
=
evít_queue
; (ev->
√xt
!=NULL);Örev=ev,Év=ev->next)

2730 if((
ev
->
rs
 =rsË&& (ev->
èg
 ==Ñs->tag))

2736 i‡((
ev
->
rs
 =rsË&& (ev->
èg
 ==Ñs->tag))

2738 i‡(
¥ev
)

2740 
¥ev
->
√xt
 = 
ev
->next;

2744 
evít_queue
 = 
ev
->
√xt
;

2746 
√w_ev
 = 
ev
;

2747 
√w_ev
->
x
.
whí
 = 
ªady
;

2749 
¥ev
=
NULL
, 
ev
=
evít_queue
;Év &&Év->
x
.
whí
 < 
ªady
;ÖªvÛv,ÉvÛv->
√xt
);

2750 i‡(
¥ev
)

2752 
√w_ev
->
√xt
 = 
¥ev
->next;

2753 
¥ev
->
√xt
 = 
√w_ev
;

2757 
√w_ev
->
√xt
 = 
evít_queue
;

2758 
evít_queue
 = 
√w_ev
;

2761 
	}
}

2762 #ifde‡
TSHRn


2763 
	$öôTSHR
(
tshr_t
 *
tshr
, 
Êag
)

2765 
i
;

2766 
tshr
->
tshrSIZE
 = 
TSHR_SIZE
;

2767 
tshr
->
‰ìE¡rõs
 = 
TSHR_SIZE
;

2768 
i
 = 0; i < 
TSHR_SIZE
; i++)

2770 
tshr
->
tshrE¡ry
[
i
].
id
 = i;

2771 
tshr
->
tshrE¡ry
[
i
].
isVÆid
 = 0;

2772 
tshr
->
tshrE¡ry
[
i
].
evít
 = 
NULL
;

2773 
tshr
->
tshrE¡ry
[
i
].
addr
 = 0;

2775 
	}
}

2776 
	$TSHRIn£π
(
tshr_t
 *
tshr
, 
DIRECTORY_EVENT
 *
evít
, 
md_addr_t
 
addr
)

2778 
i
;

2780 if(
tshr
->
‰ìE¡rõs
 == 0)

2781 
	`∑nic
("There isÇo freeÉntryÅo insert in TSHR");

2783 
i
 = 0; i < 
TSHR_SIZE
; i++)

2785 if(!
tshr
->
mshrE¡ry
[
i
].
isVÆid
)

2787 
tshr
->
tshrE¡ry
[
i
].
isVÆid
 = 1;

2788 
tshr
->
tshrE¡ry
[
i
].
evít
 =Évent;

2789 
tshr
->
tshrE¡ry
[
i
].
≥ndög_addr
 = (
addr
 & ~
ˇche_dl2
->
bsize
);

2790 
tshr
->
‰ìE¡rõs
--;

2794 
	`∑nic
("There isÇo freeÉntryÅo insert in MSHR");

2795 
	}
}

2796 
	$TSHRWakeup
(
tshr_t
 *
tshr
, 
wakeup_addr
)

2798 
i
;

2800 
i
 = 0; i < 
TSHR_SIZE
; i++)

2802 if(
tshr
->
mshrE¡ry
[
i
].
isVÆid
 && (tshr->
tshrE¡ry
[i].
≥ndög_addr
 =(
wakeup_addr
 & ~
ˇche_dl2
->
bsize
)))

2804 if(
	`dú_›î©i⁄
(
tshr
->
tshrE¡ry
[
i
].
evít
))

2806 
tshr
->
tshrE¡ry
[
i
].
isVÆid
 = 1;

2807 
tshr
->
tshrE¡ry
[
i
].
evít
 = 
NULL
;

2808 
tshr
->
tshrE¡ry
[
i
].
≥ndög_addr
 = 0;

2809 
tshr
->
‰ìE¡rõs
++;

2812 
	`∑nic
("canÇot wakeup becuaseÅhe blk is still inÅransient state");

2816 
	`∑nic
("There isÇo matchÉntry in TSHR");

2818 
	}
}

2821 #ifde‡
DCACHE_MSHR


2823 
	$öôMSHR
(
mshr_t
 *
mshr
, 
Êag
)

2825 
i
, 
mshr_size
;

2826 if(!
mshr
) ;

2827 if(
Êag
 == 1)

2828 
mshr_size
 = 
L2_MSHR_SIZE
;

2830 
mshr_size
 = 
MSHR_SIZE
;

2832 
mshr
->
mshrSIZE
 = 
mshr_size
;

2833 
mshr
->
‰ìE¡rõs
 = 
mshr_size
;

2834 #ifde‡ 
EDA


2835 
mshr
->
‰ìOCE¡rõs
 = 
MSHR_OC_SIZE
;

2837 
i
 = 0; i < 
mshr_size
; i++)

2839 
mshr
->
mshrE¡ry
[
i
].
id
 = i;

2840 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2841 
mshr
->
mshrE¡ry
[
i
].
addr
 = 0;

2842 
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 = 0;

2843 
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 0;

2844 
mshr
->
mshrE¡ry
[
i
].
blocknum
 = 0;

2845 #ifde‡ 
EDA


2846 
mshr
->
mshrE¡ry
[
i
].
isOC
 = 0;

2849 
	}
}

2851 
	$isMSHRFuŒ
(
mshr_t
 *
mshr
, 
isOC
, 
id
)

2853 if(!
mshr
)  0;

2854 if(
mshr
->
‰ìE¡rõs
 =0 && !
œ°_L1_mshr_fuŒ
[
id
])

2856 
L1_mshr_fuŒ
 ++;

2857 
œ°_L1_mshr_fuŒ
[
id
] = 
sim_cy˛e
;

2861 if(
œ°_L1_mshr_fuŒ
[
id
])

2863 
SèŒ_L1_mshr
 +
sim_cy˛e
 - 
œ°_L1_mshr_fuŒ
[
id
];

2864 
œ°_L1_mshr_fuŒ
[
id
] = 0;

2867  (
mshr
->
‰ìE¡rõs
 == 0);

2868 
	}
}

2870 
	$‰ìMSHR
(
mshr_t
 *
mshr
)

2872 
i
;

2873 if(!
mshr
) ;

2874 
i
 = 0; i < 
MSHR_SIZE
; i++)

2876 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
 && mshr->mshrE¡ry[i].
ídCy˛e
 <
sim_cy˛e
)

2878 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2879 
mshr
->
‰ìE¡rõs
++;

2880 
RS_li°
 *
¥ev
, *
cur
;

2881 
cur
 = 
rs_ˇche_li°
[
mshr
->
thªadid
][
i
];

2882 
cur
)

2884 if(
cur
->
rs
 && ((cur->rs->
addr
)>>
ˇche_dl1
[
mshr
->
thªadid
]->
£t_shi·
Ë!(mshr->
mshrE¡ry
[
i
].addr>>cache_dl1[mshr->threadid]->set_shift))

2885 
	`∑nic
("L1 MSHR: illegaláddress in MSHRÜist");

2887 
¥ev
 = 
cur
->
√xt
;

2888 
	`RS_block_√xt
(
cur
);

2889 
	`‰ì
(
cur
);

2890 
cur
 = 
¥ev
;

2892 
rs_ˇche_li°
[
mshr
->
thªadid
][
i
] = 
NULL
;

2895 i‡(
mshr
->
‰ìE¡rõs
 > 
MSHR_SIZE
)

2896 
	`∑nic
("MSHR SIZEÉxceeds\n");

2897 
	}
}

2899 
	$‰ìL2MSHR
(
mshr_t
 *
mshr
)

2901 
i
;

2902 if(!
mshr
) ;

2903 
i
 = 0; i < 
L2_MSHR_SIZE
; i++)

2905 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
 && mshr->mshrE¡ry[i].
ídCy˛e
 <
sim_cy˛e
)

2907 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2908 
mshr
->
mshrE¡ry
[
i
].
blocknum
 = 0;

2909 
mshr
->
‰ìE¡rõs
++;

2912 i‡(
mshr
->
‰ìE¡rõs
 > 
L2_MSHR_SIZE
)

2913 
	`∑nic
("MSHR SIZEÉxceeds\n");

2914 
	}
}

2916 
	$MSHR_block_check
(
mshr_t
 *
mshr
, 
md_addr_t
 
addr
, 
off£t
)

2919 
i
, 
m©ch
 = 0, 
mshr_size
;

2920 
mshr_size
 = 
mshr
->
mshrSIZE
;

2922 
i
=0; i<
mshr_size
; i++)

2924 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
)

2926 if(((
mshr
->
mshrE¡ry
[
i
].
addr
>>
off£t
) == (addr>>offset)))

2928 if(
m©ch
 !0Ë
	`∑nic
("MSHR:á missáddress belongsÅo moreÅhanÅwo MSHR Entries");

2929 
m©ch
 = (
i
+1);

2933  
m©ch
;

2934 
	}
}

2937 
	$MSHRLookup
(
mshr_t
 *
mshr
, 
md_addr_t
 
addr
, 
œt
, 
isOC
, 
RUU_°©i⁄
 *
rs
)

2939 
i
, 
mshr_size
;

2940 if(!
mshr
) ;

2942 if(
œt
 < 
ˇche_dl1_œt
)

2945 
mshr_size
 = 
mshr
->
mshrSIZE
;

2947 if(
rs
 &&Ñs->
thªadid
 !
mshr
->threadid)

2948 
	`∑nic
("L1 MSHR wrongÅhreadid");

2950 if(
mshr
->
‰ìE¡rõs
 == 0)

2951 
	`∑nic
("There isÇo freeÉntryÅo insert in MSHR");

2953 
i
 = 0; i < 
mshr_size
; i++)

2955 if(!
mshr
->
mshrE¡ry
[
i
].
isVÆid
)

2957 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 1;

2958 
mshr
->
mshrE¡ry
[
i
].
addr
 =áddr;

2959 
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 = 
sim_cy˛e
;

2960 
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
sim_cy˛e
 + 
œt
;

2961 
mshr
->
mshrE¡ry
[
i
].
evít
 = 
evít_¸óãd
;

2962 
mshr
->
mshrE¡ry
[
i
].
rs
 =Ñs;

2963 
mshr
->
‰ìE¡rõs
--;

2968 
	`∑nic
("There isÇo freeÉntryÅo insert in MSHR");

2969 
	}
}

2971 
	$mshr_lookup
(
DIRECTORY_EVENT
 *
evít
, 
tick_t
 
°¨tcy˛e
)

2973 
i
, 
mshr_size
;

2974 
thªadid
 = 
evít
->
ãmpID
;

2975 if(!
ˇche_dl1
[
thªadid
]->
mshr
)

2977 
mshr_size
 = 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrSIZE
;

2978 
i
=0;i<
mshr_size
;i++)

2980 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
isVÆid


2981 && ((
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
addr
 >> cache_dl1[thªadid]->
£t_shi·
Ë=(
evít
->addr >> cache_dl1[threadid]->set_shift)))

2984 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 !
°¨tcy˛e
)

2985 
	`∑nic
("L1 MSHR: illegal match in mshr");

2987  
i
;

2992 
	}
}

2994 
	$mshr_˛ór
(
thªadid
, 
i
)

2996 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2997 
ˇche_dl1
[
thªadid
]->
mshr
->
‰ìE¡rõs
++;

2998 
rs_ˇche_li°
[
thªadid
][
i
] = 
NULL
;

2999 
	}
}

3001 
	$mshª¡ry_upd©e
(
DIRECTORY_EVENT
 *
evít
, 
tick_t
 
ªady
,Åick_à
°¨tcy˛e
)

3003 
i
, 
mshr_size
;

3004 
thªadid
 = 
evít
->
ãmpID
;

3005 if(!
ˇche_dl1
[
thªadid
]->
mshr
)

3007 
mshr_size
 = 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrSIZE
;

3008 
i
=0;i<
mshr_size
;i++)

3010 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
isVÆid


3011 && ((
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
addr
 >> cache_dl1[thªadid]->
£t_shi·
Ë=(
evít
->addr >> cache_dl1[threadid]->set_shift)))

3014 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 !
°¨tcy˛e
)

3015 
	`∑nic
("L1 MSHR: illegal match in mshr");

3017 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
ªady
;

3021 
	}
}

3034 
	$loˇl_ac˚ss_check
(
DIRECTORY_EVENT
 *
evít
)

3036 
Êag
;

3037 if–((
evít
->
§c1
*
mesh_size
+evít->
§c2
)==”vít->
des1
*mesh_size+evít->
des2
)) )

3038 
Êag
 = 1;

3040 
Êag
 = 0;

3041  
Êag
;

3042 
	}
}

3044 
	$éb_å™s„r_check
(
DIRECTORY_EVENT
 *
evít
)

3046 
éb_å™s„r
;

3047 
éb_å™s„r
 = 
evít
->
›î©i⁄
 =
SHR_TLB_MISS
 ||Évít->›î©i⁄ =
SHR_TLB_WRITE_BACK
 ||Évít->›î©i⁄ =
SHR_TLB_SR_RECOVERY


3048 || 
evít
->
›î©i⁄
 =
SHR_TLB_UPDATE_PR_ACK
 ||Évít->›î©i⁄ =
SHR_TLB_UPDATE_PW_ACK
 ||Évít->›î©i⁄ =
SHR_TLB_RECOVERY_ACK


3049 || 
evít
->
›î©i⁄
 =
DIR_TLB_REFILL
 ||Évít->›î©i⁄ =
DIR_TLB_UPDATE
 ||Évít->›î©i⁄ =
DIR_TLB_RECOVERY


3050 || 
evít
->
›î©i⁄
 =
DIR_TLB_REFILL_WAIT
 ||Évít->›î©i⁄ =
DIR_TLB_UPDATE_WAIT
 ||Évít->›î©i⁄ =
DIR_TLB_RECOVERY_WAIT
;

3051  
éb_å™s„r
;

3052 
	}
}

3054 
	$ve˘‹_cou¡_func
–
ˇche_blk_t
 *
blk
 )

3056 
cou¡
 = 0;

3057 
ˇche_blk_t
 *
ãmp
 = 
blk
;

3058 
ãmp
->
way_¥ev
)

3060 
ãmp
 =Åemp->
way_¥ev
;

3062 
ãmp
)

3064 if–(
	`Is_Sh¨ed
(
ãmp
->
dú_sh¨î
[0])>1Ë&& (—emp->
°©us
 & 
CACHE_BLK_VALID
)) )

3065 
cou¡
++;

3066 
ãmp
 =Åemp->
way_√xt
;

3068  
cou¡
;

3069 
	}
}

3071 
	$ml2_£t_m©ch_func
–
ˇche_blk_t
 *
blk
, 
£t
 )

3073 
m©ch
 = 0;

3074 
ˇche_blk_t
 *
ãmp
;

3075 
ãmp
 = 
ˇche_ml2
->
£ts
[
£t
].
way_hód
;

3076 
ãmp
)

3078 i‡–
ãmp
 =
blk
 )

3080 
m©ch
 = 1;

3083 
ãmp
 =Åemp->
way_√xt
;

3085  
m©ch
;

3086 
	}
}

3088 
	$ve˘‹_avaûabÀ_func
(
ˇche_blk_t
 **
blk
, 
ml2_£t
)

3090 
ve˘‹_avaûabÀ
 = 0;

3091 
ˇche_blk_t
 *
ãmp
;

3093 
ãmp
 = 
ˇche_ml2
->
£ts
[
ml2_£t
].
way_èû
;

3094 
ãmp
)

3096 if–!
ãmp
->
±r_í
 && (ãmp->
dú_°©e
[0] =
DIR_STABLE
) )

3098 if(!
ve˘‹_avaûabÀ
)

3100 *
blk
 = 
ãmp
;

3101 
ve˘‹_avaûabÀ
 = 1;

3102 if–
	`Is_Sh¨ed
(
ãmp
->
dú_sh¨î
[0]) < 2 )

3105 if–
	`Is_Sh¨ed
(
ãmp
->
dú_sh¨î
[0]) < 2 )

3107 *
blk
 = 
ãmp
;

3108 
ve˘‹_avaûabÀ
 = 1;

3112 
ãmp
 =Åemp->
way_¥ev
;

3115  
ve˘‹_avaûabÀ
;

3116 
	}
}

3118 
	$födCacheSètus
(
ˇche_t
 *
˝
, 
md_addr_t
 
£t
, md_addr_à
èg
, 
hödex
, 
ˇche_blk_t
 **
blk
)

3120 
ˇche_blk_t
 *
födblk
;

3122 
födblk
=
˝
->
£ts
[
£t
].
way_hód
; födblk; födblk=födblk->
way_√xt
)

3124 if((
födblk
->
ègid
.
èg
 =ègË&& (födblk->
°©us
 & 
CACHE_BLK_VALID
)

3125 #i‡
PROCESS_MODEL


3126 && (
isSh¨edAddªss
 == 1)

3130 *
blk
 = 
födblk
;

3135 
	}
}

3136 
	$Is_Sh¨ed
(*
sh¨î
)

3138 
cou¡
;

3139 
cou¡î
 = 0;

3140 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

3142 if((((
sh¨î
[
cou¡
/64]) & (()1 << (count%64))) == (()1 << (count%64))))

3144 
cou¡î
 ++;

3147 if(
cou¡î
)

3148  
cou¡î
;

3152 
	}
}

3153 
	$Is_Ex˛usiveOrDúty
(*
sh¨î
)

3155 
cou¡
;

3156 
cou¡î
 = 0;

3157 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

3159 if–((
sh¨î
[
cou¡
/64]) & (()1 << (count%64))) == (()1 << (count%64)) )

3160 
cou¡î
 ++;

3162 if(
cou¡î
 == 1)

3166 
	}
}

3168 
	$IsSh¨ed
(*
sh¨î
, 
thªadid
)

3170 
cou¡
;

3171 
cou¡î
 = 0;

3172 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

3174 if((((
sh¨î
[
cou¡
/64]Ë& (()1 << (cou¡%64))Ë=(()1 << (cou¡%64))Ë&& (cou¡ !
thªadid
))

3176 
cou¡î
 ++;

3179 if(
cou¡î
)

3184 
	}
}

3185 
	$IsEx˛usiveOrDúty
(*
sh¨î
, 
thªadid
, *
Ex˛usiveID
)

3187 
cou¡
, 
Ex˛usive_id
;

3188 
cou¡î
 = 0;

3189 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

3191 if((((
sh¨î
[
cou¡
/64]Ë& (()1 << (cou¡%64))Ë=(()1 << (cou¡%64))Ë&& (cou¡ !
thªadid
))

3193 
cou¡î
 ++;

3194 
Ex˛usive_id
 = 
cou¡
;

3197 if(
cou¡î
 == 1)

3199 (*
Ex˛usiveID
Ë
Ex˛usive_id
;

3204 
	}
}

3211 
	$evít_li°_ö£π
(
DIRECTORY_EVENT
 *
evít
, 
íåy
)

3213 if(
íåy
 < 1 ||É¡ry > 
L2_MSHR_SIZE
Ë
	`∑nic
("L2 MSHR insertionÉrror");

3214 
íåy
 =Éntry - 1;

3215 
DIRECTORY_EVENT
 *
cur
, *
¥ev
;

3217 if(
evít_li°
[
íåy
] && ((
evít
->
addr
 >> 
ˇche_dl2
->
£t_shi·
) != (event_list[entry]->addr >> cache_dl2->set_shift)))

3218 
	`∑nic
("L2 MSHR insertionÉrror");

3221 if(
sim_cy˛e
 =
ˇche_dl2
->
mshr
->
mshrE¡ry
[
íåy
].
ídCy˛e
)

3222 
	`dú_evítq_ö£π
(
evít
);

3225 
evít
->
√xt
 = 
evít_li°
[
íåy
];

3226 
evít_li°
[
íåy
] = 
evít
;

3228 
	}
}

3230 
	$upd©e_L2_mshª¡ry
(
md_addr_t
 
addr
, 
tick_t
 
ªady
,Åick_à
°¨tcy˛e
)

3232 
i
;

3233 if(!
ˇche_dl2
->
mshr
)

3234 
	`∑nic
("L2 CACHE didÇot have MSHR!");

3235 
DIRECTORY_EVENT
 *
cur
, *
¥ev
;

3236 
i
=0;i<
L2_MSHR_SIZE
;i++)

3238 if(
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
isVÆid


3239 && (
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
addr
 ==áddr))

3241 if(
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 !
°¨tcy˛e
)

3242 
	`∑nic
("L2 MSHR: illegal match in MSHR while update");

3243 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
blocknum
 ++;

3244 if(
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
blocknum
 < (ˇche_dl2->
bsize
/
max_∑ckë_size
))

3246 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
ªady
;

3247 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
blocknum
 = 0;

3248 
cur
 = 
evít_li°
[
i
]; cur; cur=
¥ev
)

3250 if(((
cur
->
addr
)>>
ˇche_dl2
->
£t_shi·
Ë!((ˇche_dl2->
mshr
->
mshrE¡ry
[
i
].addr>>cache_dl2->set_shift)))

3252 
	`¥ötf
("cu∏add∏%Œd, msh∏add∏%Œd\n", 
cur
->
addr
, 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].addr);

3253 
	`∑nic
("Eventlist should haveÅhe sameáddress with itsáppending mshrÉntry!");

3255 
¥ev
 = 
cur
->
√xt
;

3256 
cur
->
√xt
 = 
NULL
;

3257 
cur
->
whí
 = 
sim_cy˛e
;

3259 
block_off£t
 = 
	`blockoff£t
(
cur
->
addr
);

3267 
	`dú_evítq_ö£π
(
cur
);

3269 
evít_li°
[
i
] = 
NULL
;

3273 
	}
}

3276 
	$IsNeighb‹
(
sh¨î
, 
thªadid
, 
ty≥
, 
md_addr_t
 
addr
)

3278 
cou¡
, 
˛o£
, 
Ár
, 
d©a_˛o£
, 
d©a_Ár
, 
d©a_c‹√r
, 
tŸÆ_sh¨î
, 
tŸÆ_d©a_sh¨î
, 
c‹√r
, 
d©a_Êag
 = 0;

3279 
ˇche_t
 *
˝1
;

3280 
ˇche_blk_t
 *
blk1
;

3281 
md_addr_t
 
èg
, 
£t
;

3282 
˛o£
 = 0;

3283 
c‹√r
 = 0;

3284 
Ár
 = 0;

3285 
tŸÆ_sh¨î
 = 0;

3286 
tŸÆ_d©a_sh¨î
 = 0;

3287 
tŸÆ_p_c_evíts
 ++;

3289 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

3291 if((((
sh¨î
Ë& (()1 << 
cou¡
)Ë=(()1 << cou¡)Ë&& (cou¡ !
thªadid
))

3293 
˝1
 = 
ˇche_dl1
[
cou¡
];

3294 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

3295 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

3296 
blk1
 = 
˝1
->
£ts
[
£t
].
way_hód
; blk1; blk1 =blk1->
way_√xt
)

3298 i‡((
blk1
->
ègid
.
èg
 =ègË&& (blk1->
°©us
 & 
CACHE_BLK_VALID
))

3300 if(
blk1
->
°©e
 =
MESI_MODIFIED
)

3302 
d©a_Êag
 = 1;

3303 
tŸÆ_d©a_c⁄sumîs
 ++;

3304 
tŸÆ_d©a_sh¨î
 ++;

3309 
tŸÆ_c⁄sumîs
 ++;

3310 
tŸÆ_sh¨î
 ++;

3312 if(
	`abs
(
thªadid
 - 
cou¡
) == 3 ||ábs(threadid - count) == 5)

3314 
tŸÆ_∑ckës_©_c‹√rs
 ++;

3315 
c‹√r
 ++;

3316 if(
d©a_Êag
 == 1)

3317 
tŸÆ_d©a_©_c‹√r
 ++;

3320 if(
	`abs
(
thªadid
 - 
cou¡
) == 1 ||ábs(threadid - count) == 4)

3322 
˛o£
 ++;

3323 
tŸÆ_∑ckës_ö_√ighb‹
 ++;

3324 if(
d©a_Êag
 == 1)

3325 
tŸÆ_d©a_˛o£
 ++;

3329 
Ár
 ++;

3330 if(
d©a_Êag
 == 1)

3331 
tŸÆ_d©a_Ár
 ++;

3337 if((
c‹√r
 + 
˛o£
Ë=
tŸÆ_sh¨î
)

3338 
tŸÆ_Æl_Æmo°˛o£
 ++;

3340 if(
˛o£
 =
tŸÆ_sh¨î
)

3341 
tŸÆ_Æl_˛o£
 ++;

3344 
tŸÆ_nŸ_Æl_˛o£
 ++;

3345 
avîage_öside_≥r˚¡
 +(()
˛o£
/()
tŸÆ_sh¨î
);

3346 
avîage_outside_≥r˚¡
 +(()
Ár
/()
tŸÆ_sh¨î
);

3347 
avîage_outside_abs_≥r˚¡
 +(()(
Ár
-
c‹√r
)/()
tŸÆ_sh¨î
);

3348 
avîage_c‹√r_≥r˚¡
 +(()(
c‹√r
)/()
tŸÆ_sh¨î
);

3351 
tŸÆ_sh¨î
)

3354 1: 
sh¨î_num
[1] ++; ;

3355 2: 
sh¨î_num
[2] ++; ;

3356 3: 
sh¨î_num
[3] ++; ;

3357 4: 
sh¨î_num
[4] ++; ;

3358 5: 
sh¨î_num
[5] ++; ;

3359 6: 
sh¨î_num
[6] ++; ;

3360 7: 
sh¨î_num
[7] ++; ;

3361 8: 
sh¨î_num
[8] ++; ;

3362 9: 
sh¨î_num
[9] ++; ;

3363 10: 
sh¨î_num
[10] ++; ;

3364 11: 
sh¨î_num
[11] ++; ;

3365 12: 
sh¨î_num
[12] ++; ;

3366 13: 
sh¨î_num
[13] ++; ;

3367 14: 
sh¨î_num
[14] ++; ;

3369 : 
sh¨î_num
[15] ++; ;

3372 
	}
}

3373 
	$IsNeighb‹_sh¨î
(
sh¨î
, 
thªadid
)

3375 
cou¡
;

3377 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

3379 if((((
sh¨î
Ë& (()1 << 
cou¡
)Ë=(()1 << cou¡)Ë&& (cou¡ !
thªadid
))

3381 if(
	`abs
(
thªadid
 - 
cou¡
) == 3 ||ábs(threadid - count) == 5)

3382 
tŸÆ_c‹√r_∑ckës
 ++;

3384 if(
	`abs
(
thªadid
 - 
cou¡
) == 1 ||ábs(threadid - count) == 4)

3385 
tŸÆ_√ighb‹_∑ckës
 ++;

3387 
tŸÆ_Ár_∑ckës
 ++;

3390 
	}
}

3392 
	$blockoff£t
(
md_addr_t
 
addr
)

3394 
bofs
;

3395 
bofs
 = 
addr
 & 
ˇche_dl2
->
blk_mask
;

3396 
bofs
 = bof†>> 
ˇche_dl1
[0]->
£t_shi·
;

3397  
bofs
;

3398 
	}
}

3400 
DIRECTORY_EVENT
 *
	$Æloˇã_√w_evít
(
DIRECTORY_EVENT
 *
evít
)

3402 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

3403 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

3405 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

3406 
√w_evít
->
ªq_time
 = 0;

3407 
√w_evít
->
c⁄f_bô
 = -1;

3408 
√w_evít
->
≥ndög_Êag
 = 0;

3409 
√w_evít
->
isPª„tch
 = 0;

3410 
√w_evít
->
°ride
 = 0;

3411 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

3412 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3413 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

3414 
√w_evít
->
blk_dú
 = 
NULL
;

3415 
√w_evít
->
˝
 = 
evít
->cp;

3416 
√w_evít
->
addr
 = 
evít
->addr;

3417 
√w_evít
->
vp
 = 
NULL
;

3418 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

3419 
√w_evít
->
ud©a
 = 
NULL
;

3420 
√w_evít
->
rs
 = 
evít
->rs;

3421 
√w_evít
->
•ec_mode
 = 0;

3422 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

3423 
√w_evít
->
d©a_ª∂y
 = 1;

3424 
√w_evít
->
mshr_time
 = 
evít
->mshr_time;

3425 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

3426 
√w_evít
->
‹igöÆChûdCou¡
 = 0;

3427 
√w_evít
->
l1_wb_íåy
 = 
NULL
;

3429 
√w_evít
->
›
 = 
evít
->op;

3431 
√w_evít
->
§c1
 = 
evít
->
des1
;

3432 
√w_evít
->
§c2
 = 
evít
->
des2
;

3433 if((
evít
->
des1
-
MEM_LOC_SHIFT
)/(
mesh_size
/2))

3434 
√w_evít
->
des1
 = 
mesh_size
+1;

3436 
√w_evít
->
des1
 = 0;

3439 
evít
->
des2
/(
mesh_size
/(
mem_p‹t_num
/2)))

3442 
√w_evít
->
des2
 = 
mesh_size
/(
mem_p‹t_num
/2) - 1;

3445 
√w_evít
->
des2
 = 
mesh_size
/(
mem_p‹t_num
/2);

3448 
√w_evít
->
des2
 = 3*(
mesh_size
/(
mem_p‹t_num
/2)) - 1;

3451 
√w_evít
->
des2
 = 3*(
mesh_size
/(
mem_p‹t_num
/2));

3454 
√w_evít
->
des2
 = 5*(
mesh_size
/(
mem_p‹t_num
/2)) - 1;

3457 
√w_evít
->
des2
 = 5*(
mesh_size
/(
mem_p‹t_num
/2));

3460 
√w_evít
->
des2
 = 7*(
mesh_size
/(
mem_p‹t_num
/2)) - 1;

3463 
√w_evít
->
des2
 = 7*(
mesh_size
/(
mem_p‹t_num
/2));

3466 
	`∑nic
("canÇot have other case\n");

3469 
√w_evít
->
∑ª¡
 = 
evít
;

3470 
√w_evít
->
ãmpID
 = 
evít
->tempID;

3471 
√w_evít
->
ª£nd
 = 0;

3472  
√w_evít
;

3473 
	}
}

3474 #ifde‡
POPNET


3475 
	sOrdîBuf„rE¡ry


3477 
	mvÆid
;

3478 
md_addr_t
 
	maddr
;

3479 
	mdes
;

3480 
	mvc
;

3481 
cou¡î_t
 
	mmsgno
;

3483 
OrdîBuf„rE¡ry
 
	gOrdîBuf„r
[
MAXSIZE
][MAXSIZE];

3484 
	gOrdîBuf„rNum
[
MAXSIZE
];

3486 
	$OrdîBufInô
()

3488 
i
=0, 
j
=0;

3489 
i
=0;i<
MAXSIZE
;i++)

3491 
OrdîBuf„rNum
[
i
] = 0;

3492 
j
=0;j<
MAXSIZE
;j++)

3494 
OrdîBuf„r
[
i
][
j
].
addr
 = 0;

3495 
OrdîBuf„r
[
i
][
j
].
vÆid
 = 0;

3496 
OrdîBuf„r
[
i
][
j
].
des
 = 0;

3497 
OrdîBuf„r
[
i
][
j
].
vc
 = -1;

3498 
OrdîBuf„r
[
i
][
j
].
msgno
 = 0;

3501 
	}
}

3502 
	$OrdîBufIn£π
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
vc
, 
cou¡î_t
 
msgno
)

3504 
i
=0, 
§c
, 
des
;

3505 
§c
 = 
s1
*
mesh_size
+
s2
;

3506 
des
 = 
d1
*
mesh_size
+
d2
;

3508 if(
OrdîBuf„rNum
[
§c
] >
MAXSIZE
)

3509 
	`∑nic
("Out going buffer is full forÖopnet multiple vcs");

3511 
i
=0;i<
MAXSIZE
;i++)

3513 if(!
OrdîBuf„r
[
§c
][
i
].
vÆid
)

3515 
OrdîBuf„r
[
§c
][
i
].
vÆid
 = 1;

3516 
OrdîBuf„r
[
§c
][
i
].
addr
 =áddr;

3517 
OrdîBuf„r
[
§c
][
i
].
des
 = des;

3518 
OrdîBuf„r
[
§c
][
i
].
vc
 = vc;

3519 
OrdîBuf„r
[
§c
][
i
].
msgno
 = msgno;

3520 
OrdîBuf„rNum
[
§c
] ++;

3524 
	}
}

3525 
	$OrdîBufRemove
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
cou¡î_t
 
msgno
)

3527 
i
=0, 
§c
, 
des
;

3528 
§c
 = 
s1
*
mesh_size
+
s2
;

3529 
des
 = 
d1
*
mesh_size
+
d2
;

3531 
i
=0;i<
MAXSIZE
;i++)

3533 if(
OrdîBuf„r
[
§c
][
i
].
vÆid
 && OrdîBuf„r[§c][i].
addr
 =add∏&& OrdîBuf„r[§c][i].
des
 =de†&& OrdîBuf„r[§c][i].
msgno
 == msgno)

3535 
OrdîBuf„r
[
§c
][
i
].
vÆid
 = 0;

3536 
OrdîBuf„r
[
§c
][
i
].
addr
 = 0;

3537 
OrdîBuf„r
[
§c
][
i
].
des
 = 0;

3538 
OrdîBuf„r
[
§c
][
i
].
vc
 = -1;

3539 
OrdîBuf„r
[
§c
][
i
].
msgno
 = 0;

3540 
OrdîBuf„rNum
[
§c
] --;

3544 
	`∑nic
("CanÇot findÅheÉntry in OrderBuffer");

3545 
	}
}

3547 
	$OrdîCheck
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
)

3549 
i
=0, 
§c
, 
des
;

3550 
§c
 = 
s1
*
mesh_size
+
s2
;

3551 
des
 = 
d1
*
mesh_size
+
d2
;

3552 #ifde‡
MULTI_VC


3553 
i
=0;i<
MAXSIZE
;i++)

3555 if(
OrdîBuf„r
[
§c
][
i
].
vÆid
 && OrdîBuf„r[§c][i].
addr
 =add∏&& OrdîBuf„r[§c][i].
des
 == des)

3556  
OrdîBuf„r
[
§c
][
i
].
vc
;

3560 
	}
}

3563 
	$time•a˚
(
cou¡î_t
 
time
, 
ty≥
)

3565 if(
time
 < 0)

3567 if(
time
 <5)

3568 
•™d
[0] ++;

3569 if(
time
 <10)

3570 
•™d
[1] ++;

3571 if(
time
 <20)

3572 
•™d
[2] ++;

3573 if(
time
 <30)

3574 
•™d
[3] ++;

3576 
•™d
[4] ++;

3577 if(
ty≥
 == 1)

3578 
downgøde_r
 ++;

3580 
downgøde_w
 ++;

3582 
	}
}

3584 
	$dú_›î©i⁄
 (
DIRECTORY_EVENT
 *
evít
, 
lock_ac˚ss
)

3586 
md_addr_t
 
addr
=
evít
->addr;

3588 
ˇche_t
 *
ml2
 = 
ˇche_ml2
;

3589 
ˇche_t
 *
dl2
 = 
ˇche_dl2
;

3590 
ˇche_blk_t
 *
ml2_blk
;

3591 
ˇche_blk_t
 *
dl2_blk
;

3592 
md_addr_t
 
ml2_èg
, 
ml2_£t
;

3593 
md_addr_t
 
ml2_mul_èg
, 
ml2_mul_£t
;

3594 
md_addr_t
 
ml2_sub_èg
, 
ml2_sub_£t
;

3595 
md_addr_t
 
dl2_èg
, 
dl2_£t
;

3596 
ml2_hödex
;

3597 
dl2_hödex
;

3599 
ml2_hô
 = 0;

3600 
ml2_ed
 = 0;

3602 
dl2_èg
 = 
	`CACHE_TAG
(
dl2
, 
addr
);

3603 
dl2_£t
 = 
	`CACHE_SET
(
dl2
, 
addr
);

3605 
md_addr_t
 
qblk_£t_shi·
 = 
mu…i_blk_£t_shi·
;

3606 
md_addr_t
 
qblk_£t_mask
 = ((1<<
qblk_£t_shi·
)-1);

3608 i‡(
qblk_£t_shi·
)

3610 
ml2_èg
 = 
	`CACHE_QBLK_TAG
(
ml2
, 
addr
);

3611 
ml2_£t
 = 
	`CACHE_QBLK_SET
(
ml2
, 
addr
);

3615 
ml2_èg
 = 
	`CACHE_TAG
(
ml2
, 
addr
);

3616 
ml2_£t
 = 
	`CACHE_SET
(
ml2
, 
addr
);

3619 
ml2_mul_èg
 = 
	`CACHE_QBLK_TAG
(
ml2
, 
addr
);

3620 
ml2_mul_£t
 = 
	`CACHE_QBLK_SET
(
ml2
, 
addr
);

3621 
ml2_sub_èg
 = 
	`CACHE_TAG
(
ml2
, 
addr
);

3622 
ml2_sub_£t
 = 
	`CACHE_SET
(
ml2
, 
addr
);

3624 
ml2_hödex
 = (Ë
	`CACHE_HASH
(
ml2
,
ml2_èg
);

3625 
dl2_hödex
 = (Ë
	`CACHE_HASH
(
dl2
,
dl2_èg
);

3627 
ˇche_t
 *
˝1
;

3628 
ˇche_blk_t
 *
dl1_blk
;

3629 
md_addr_t
 
èg
, 
£t
;

3631 
md_addr_t
 
bofs
;

3632 
block_off£t
 = 
	`blockoff£t
(
evít
->
addr
);

3633 
ˇche_blk_t
 *
ª∂
;

3635 
DIRECTORY_EVENT
 *
∑ª¡_evít
 = 
evít
->
∑ª¡
;

3637 
cou¡î_t
 
iˇche_ac˚ss
;

3638 
cou¡î_t
 
dˇche_ac˚ss
;

3639 
œt
;

3640 
m©chnum
;

3641 
Thªadid
;

3642 
ãmpID
 = 
evít
->tempID;

3643 
cou¡
;

3645 
∑ckë_size
;

3646 
övCﬁÀ˘Sètus
 = 0;

3647 
vc
 = 0, 
a
 = 0;

3648 
›ti⁄s
 = -1;

3650 
L1_hô
 = 0;

3652 
Æl_sh¨î
 = (
mesh_size
 == 8) ? (0xFFFFFFFFFFFFFFFF) : ((1<<(mesh_size*mesh_size))-1);

3654 
evít
->
Êù_Êag
 = 0;

3656 if(!(
evít
->
›î©i⁄
 =
ACK_DIR_IL1
 ||Évít->›î©i⁄ =
ACK_DIR_READ_SHARED
 ||Évít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE


3657 || 
evít
->
›î©i⁄
 =
SHR_TLB_WRITE_BACK
 ||Évít->›î©i⁄ =
SHR_TLB_SR_RECOVERY
 ||Évít->›î©i⁄ =
DIR_TLB_REFILL


3661 
buf„r_fuŒ_Êag
 = 0;

3662 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !(mystricmp (network_type, "HYBRID")))

3663 
buf„r_fuŒ_Êag
 = 
	`›tiˇlBuf„rS∑˚
(
evít
->
des1
,Évít->
des2
,Évít->
›î©i⁄
);

3664 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

3666 if(!–
evít
->
›î©i⁄
 =
ACK_DIR_IL1
 ||

3667 
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
 ||

3668 
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
 ||

3669 
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 ||

3670 
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
 ||

3671 
evít
->
›î©i⁄
 =
FINAL_INV_ACK
 ||

3672 
evít
->
›î©i⁄
 =
MEM_READ_REQ
 ||

3673 
evít
->
›î©i⁄
 =
MEM_READ_REPLY
 ||

3674 
evít
->
›î©i⁄
 =
WAIT_MEM_READ_N_WAIT
 ||

3675 (
evít
->
des1
 =evít->
§c1
 &&Évít->
des2
 =evít->
§c2
)

3680 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
des1
,Évít->
des2
,Évít->
§c1
,Évít->
§c2
, 
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3681 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
des1
,Évít->
des2
, 
›ti⁄s
);

3683 
buf„r_fuŒ_Êag
 = (
vc
 == -1);

3685 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

3687 
buf„r_fuŒ_Êag
 = 
	`CombNëw‹kBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1),Évít->
›î©i⁄
, &
vc
);

3689 if(
buf„r_fuŒ_Êag
)

3691 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3693 
I≈ut_queue_fuŒ
 ++;

3694 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

3700 if(
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3702 
SèŒ_öput_queue
 +
sim_cy˛e
 - 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
];

3703 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3708 
evít
->
›î©i⁄
)

3710 
IDEAL_CASE
 :

3711 
	`∑nic
("DIR: Event operation is ideal -ÇotÖossible");

3714 
UPDATE_DIR
 :

3715 
	`∑nic
("This Update_dirÖart shouldÇever beÉntered!\n");

3718 
NACK
 :

3720 
«ck_cou¡î
 ++;

3721 
evít
->
§c1
 +evít->
des1
;

3722 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3723 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3724 
evít
->
§c2
 +evít->
des2
;

3725 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3726 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3727 
evít
->
›î©i⁄
 =Évít->
∑ª¡_›î©i⁄
;

3728 
evít
->
¥o˚ssögD⁄e
 = 0;

3729 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
 + 20;

3730 
	`scheduÀThroughNëw‹k
(
evít
,Évít->
°¨tCy˛e
, 
mëa_∑ckë_size
, 
vc
);

3731 if(
evít
->
¥e„tch_√xt
 == 2 ||Évent->prefetch_next == 4)

3732 
¥e„tch_«cks
 ++;

3733 if(
evít
->
isSyncAc˚ss
)

3734 
sync_«cks
 ++;

3735 if(
evít
->
›î©i⁄
 =
MISS_WRITE
)

3736 
wrôe_«cks
 ++;

3738 
n‹mÆ_«cks
 ++;

3739 
	`dú_evítq_ö£π
(
evít
);

3740 if(
cﬁÀ˘_°©s
)

3741 
dl2
->
dú_ac˚ss
 ++;

3744 
L2_PREFETCH
:

3745 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

3746 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

3748 
	`‰ì_evít
(
evít
);

3753 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

3754 if(!
m©chnum
 && !
	`md_ãxt_addr
(
evít
->
addr
, 
ãmpID
))

3756 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3758 
L2_mshr_fuŒ_¥e„tch
 ++;

3759 
	`‰ì_evít
(
evít
);

3762 
l2_¥e„tch_num
 ++;

3763 
evít
->
mshr_time
 = 
sim_cy˛e
;

3764 
DIRECTORY_EVENT
 *
√w_evít
;

3765 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

3766 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

3767 
√w_evít
->
cmd
 = 
Ród
;

3768 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3769 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3770 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3771 
	`dú_evítq_ö£π
(
√w_evít
);

3772 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3773 
evít_¸óãd
 = 
evít
;

3774 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

3779 
	`‰ì_evít
(
evít
);

3785 
DIR_TLB_REFILL
:

3788 
éb_mshr_m©ch
 = -1;

3789 
éb_mshr_m©ch
 = 
	`éb_mshr_check
(
addr
, 
ãmpID
, 
NULL
);

3790 i‡(
éb_mshr_m©ch
 == -1)

3791 
	`∑nic
("tlb_mshr miss\n");

3792 if(
éb_mshr
[
ãmpID
][
éb_mshr_m©ch
]->
evi˘ög
 && (
evít
->
∑ge_íåy_°©e
 =
PRIVATE_READ
))

3793 
evít
->
∑ge_íåy_°©e
 = 
PRIVATE_WRITE
;

3794 if(
éb_mshr
[
ãmpID
][
éb_mshr_m©ch
]->
dúty
)

3795 
evít
->
∑ge_íåy_°©e
 = 
SHARED_WRITE
;

3796 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

3797 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

3798 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

3799 i‡(
ª∂
->
°©e
 =
PRIVATE_WRITE
)

3802 
	`éb_cu_Æloˇã
(
evít
->
ãmpID
, 
SHR_TLB_WRITE_BACK
, 
ª∂
->
ègid
.
èg
, 
NULL
);

3803 
DIRECTORY_EVENT
 *
√w_evít
 = (DIRECTORY_EVENT *Ë
	`Æloˇã_evít
(0);

3804 i‡(!
√w_evít
)

3805 
	`Áèl
("out of virtual memory in calloc dirÉvent");

3806 
§c
;

3807 
√w_evít
->
›î©i⁄
 = 
SHR_TLB_WRITE_BACK
;

3808 
√w_evít
->
§c1
 = 
evít
->
des1
;

3809 
√w_evít
->
§c2
 = 
evít
->
des2
;

3810 
§c
 = 0;

3811 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

3812 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

3813 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

3814 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3815 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

3816 
√w_evít
->
ãmpID
 = 
evít
->tempID;

3817 
√w_evít
->
addr
 = ( 
ª∂
->
ègid
.
èg
 << 
MD_LOG_PAGE_SIZE
 );

3818 
√w_evít
->
˝
 = 
déb
[
evít
->
ãmpID
];

3820 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3821 
	`dú_evítq_ö£π
(
√w_evít
);

3823 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

3824 
ª∂
->
ègid
.
èg
 =Åag;

3825 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

3826 
ª∂
->
ªady
 = 
sim_cy˛e
;

3827 
ª∂
->
°©e
 = 
evít
->
∑ge_íåy_°©e
;

3831 
éb_rs
 *
ãmp
;

3832 
ãmp
=
éb_mshr
[
evít
->
ãmpID
][
éb_mshr_m©ch
]->
hód
;ãmp!=
NULL
;ãmpÒemp->
√xt
)

3834 
ãmp
->
rs
->
issue_time
 = 
sim_cy˛e
;

3836 
	`éb_mshr_˛ór
(
evít
->
ãmpID
, 
éb_mshr_m©ch
);

3837 
	`‰ì_evít
(
evít
);

3841 
DIR_TLB_UPDATE
:

3845 
èrgë_éb_id
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
;

3846 
éb_íåy_m©ch
 = 0;

3847 
éb_cu_m©ch
 = -1;

3848 
ˇche_t
 *
èrgë_déb
 = 
déb
[
èrgë_éb_id
];

3849 
ˇche_blk_t
 *
déb_íåy
;

3850 
md_addr_t
 
déb_èg
 = 
	`CACHE_TAG
 (
èrgë_déb
, 
addr
);

3851 
md_addr_t
 
déb_£t
 = 
	`CACHE_SET
 (
èrgë_déb
, 
addr
);

3852 
èrgë_°©e
 = 0;

3853 
déb_íåy
 = 
èrgë_déb
->
£ts
[
déb_£t
].
way_hód
; déb_íåy; déb_íåy = déb_íåy->
way_√xt
)

3855 i‡((
déb_íåy
->
ègid
.
èg
 =
déb_èg
Ë&& (déb_íåy->
°©us
 & 
CACHE_BLK_VALID
))

3857 
èrgë_°©e
 = 
déb_íåy
->
°©e
;

3858 i‡(
èrgë_°©e
 =
PRIVATE_READ
)

3859 
déb_íåy
->
°©e
 = 
SHARED_READ
;

3860 i‡(
èrgë_°©e
 =
PRIVATE_WRITE
)

3861 
déb_íåy
->
°©e
 = 
SHARED_WRITE
;

3863 
	`∑nic
("wrong sharer state\n");

3864 
éb_íåy_m©ch
 = 1;

3868 i‡(!
èrgë_°©e
)

3870 
éb_cu_m©ch
 = 
	`éb_cu_check
(
èrgë_éb_id
, 
addr
, 
DIR_TLB_UPDATE
);

3871 i‡(
éb_cu_m©ch
!= -1)

3872 
èrgë_°©e
 = 
PRIVATE_WRITE
;

3874 
èrgë_°©e
 = 
PRIVATE_READ
;

3876 i‡(
èrgë_°©e
 =
PRIVATE_READ
)

3879 
evít
->
›î©i⁄
 = 
SHR_TLB_UPDATE_PR_ACK
;

3880 
evít
->
∑ge_íåy_°©e
 = 
SHARED_READ
;

3881 
evít
->
§c1
 +evít->
des1
;

3882 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3883 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3884 
evít
->
§c2
 +evít->
des2
;

3885 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3886 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3887 
evít
->
°¨ãd
 = 
sim_cy˛e
;

3888 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3889 
evít
->
¥o˚ssögD⁄e
 = 0;

3891 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3892 
	`dú_evítq_ö£π
(
evít
);

3894 i‡(
èrgë_°©e
 =
PRIVATE_WRITE
)

3898 
	`d©a_ˇche_Êush
(
addr
, 
èrgë_éb_id
);

3899 
	`éb_cu_Æloˇã
(
èrgë_éb_id
, 
SHR_TLB_UPDATE_PW_ACK
, 0, 
evít
);

3901 
evít
->
›î©i⁄
 = 
SHR_TLB_UPDATE_PW_ACK
;

3902 
evít
->
∑ge_íåy_°©e
 = 
SHARED_WRITE
;

3903 
evít
->
§c1
 +evít->
des1
;

3904 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3905 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3906 
evít
->
§c2
 +evít->
des2
;

3907 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3908 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3909 
evít
->
°¨ãd
 = 
sim_cy˛e
;

3910 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3911 
evít
->
¥o˚ssögD⁄e
 = 0;

3912 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3913 
	`dú_evítq_ö£π
(
evít
);

3916 
	`∑nic
("wrong sharer state\n");

3920 
DIR_TLB_RECOVERY
:

3923 
èrgë_éb_id
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
;

3924 
éb_cu_m©ch
 = -1;

3925 
éb_mshr_m©ch
 = 0;

3926 
ˇche_t
 *
èrgë_déb
 = 
déb
[
èrgë_éb_id
];

3927 
ˇche_blk_t
 *
déb_íåy
;

3928 
md_addr_t
 
déb_èg
 = 
	`CACHE_TAG
 (
èrgë_déb
, 
addr
);

3929 
md_addr_t
 
déb_£t
 = 
	`CACHE_SET
 (
èrgë_déb
, 
addr
);

3932 
éb_cu_m©ch
 = 
	`éb_cu_check
(
èrgë_éb_id
, 
addr
, 
DIR_TLB_RECOVERY
);

3933 if(
éb_cu_m©ch
 != -1)

3935 
éb_cu
[
èrgë_éb_id
]->
§_ªcovîy
[
éb_cu_m©ch
].
vÆid
 = 0;

3936 
éb_cu
[
èrgë_éb_id
]->
§_ªcovîy
[
éb_cu_m©ch
].
VPN
 = 0;

3940 
déb_íåy
 = 
èrgë_déb
->
£ts
[
déb_£t
].
way_hód
; déb_íåy; déb_íåy = déb_íåy->
way_√xt
)

3942 i‡((
déb_íåy
->
ègid
.
èg
 =
déb_èg
Ë&& (déb_íåy->
°©us
 & 
CACHE_BLK_VALID
))

3944 
déb_íåy
->
°©e
 = 
SHARED_WRITE
;

3949 
evít
->
›î©i⁄
 = 
SHR_TLB_RECOVERY_ACK
;

3950 
evít
->
§c1
 +evít->
des1
;

3951 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3952 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3953 
evít
->
§c2
 +evít->
des2
;

3954 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3955 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3956 
evít
->
°¨ãd
 = 
sim_cy˛e
;

3957 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3958 
evít
->
¥o˚ssögD⁄e
 = 0;

3959 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3960 
	`dú_evítq_ö£π
(
evít
);

3963 
éb_mshr_m©ch
 = 
	`éb_mshr_check
(
addr
, 
ãmpID
, 
NULL
);

3964 i‡(
éb_mshr_m©ch
 != -1)

3966 
éb_mshr
[
ãmpID
][
éb_mshr_m©ch
]->
dúty
 = 1;

3967 
	`d©a_ˇche_Êush
(
déb_èg
, 
èrgë_éb_id
);

3968 
	`éb_cu_Æloˇã
(
èrgë_éb_id
, 
SHR_TLB_RECOVERY_ACK
, 0, 
evít
);

3972 
DIR_TLB_REFILL_WAIT
:

3975 
∑ge_èbÀ_m©ch
;

3976 
∑ge_èbÀ_°©e
;

3977 
∑ge_èbÀ_busy
;

3978 
∑ge_èbÀ_kì≥r
;

3979 
loˇti⁄
;

3981 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

3982 if–!
∑ge_èbÀ_m©ch
 )

3983 
	`∑nic
("thisÉntry must be inÖrocess\n");

3984 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 0;

3986 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL
;

3987 
evít
->
∑ge_íåy_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
;

3989 
evít
->
§c1
 +evít->
des1
;

3990 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3991 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3992 
evít
->
§c2
 +evít->
des2
;

3993 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3994 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3995 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3996 
evít
->
°¨ãd
 = 
sim_cy˛e
;

3997 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3998 
evít
->
¥o˚ssögD⁄e
 = 0;

3999 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4000 
	`dú_evítq_ö£π
(
evít
);

4004 
DIR_TLB_UPDATE_WAIT
:

4006 
evít
->
›î©i⁄
 = 
DIR_TLB_UPDATE
;

4007 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

4008 
evít
->
°¨ãd
 = 
sim_cy˛e
;

4009 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4010 
evít
->
¥o˚ssögD⁄e
 = 0;

4011 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4012 
	`dú_evítq_ö£π
(
evít
);

4016 
DIR_TLB_RECOVERY_WAIT
:

4018 
evít
->
›î©i⁄
 = 
DIR_TLB_RECOVERY
;

4019 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

4020 
evít
->
°¨ãd
 = 
sim_cy˛e
;

4021 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4022 
evít
->
¥o˚ssögD⁄e
 = 0;

4023 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4024 
	`dú_evítq_ö£π
(
evít
);

4028 
SHR_TLB_WRITE_BACK
:

4030 
∑ge_èbÀ_m©ch
;

4031 
∑ge_èbÀ_°©e
;

4032 
∑ge_èbÀ_busy
;

4033 
∑ge_èbÀ_kì≥r
;

4034 
loˇti⁄
;

4035 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
evít
->
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

4036 i‡(
∑ge_èbÀ_busy
)

4038 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4039 
evít
->
Êù_Êag
 = 1;

4040 
	`dú_evítq_ö£π
(
evít
);

4044 if(
∑ge_èbÀ_°©e
 =
PRIVATE_READ
)

4047 
¥_∑ge_num
--;

4048 
pw_∑ge_num
++;

4049 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 0;

4050 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
PRIVATE_WRITE
;

4052 i‡(
∑ge_èbÀ_°©e
 =
PRIVATE_WRITE
)

4055 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 0;

4056 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
PRIVATE_WRITE
;

4060 i‡(
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 !
SHARED_WRITE
)

4061 
	`∑nic
("it should be SHARED_WRITE\n");

4064 
éb_cu_m©ch
 = -1;

4065 
éb_cu_m©ch
 = 
	`éb_cu_check
(
evít
->
ãmpID
,Évít->
addr
, 
SHR_TLB_WRITE_BACK
);

4066 i‡–
éb_cu_m©ch
 == -1 )

4067 
	`∑nic
("evict informationÜost\n");

4070 
éb_cu
[
evít
->
ãmpID
]->
pw_evi˘
[
éb_cu_m©ch
].
vÆid
 = 0;

4071 
éb_cu
[
evít
->
ãmpID
]->
pw_evi˘
[
éb_cu_m©ch
].
VPN
 = 0;

4073 
	`‰ì_evít
(
evít
);

4078 
SHR_TLB_RECOVERY_ACK
:

4080 i‡(
evít
->
∑ª¡
 =
NULL
)

4082 
∑ge_èbÀ_m©ch
;

4083 
∑ge_èbÀ_°©e
;

4084 
∑ge_èbÀ_busy
;

4085 
∑ge_èbÀ_kì≥r
;

4086 
loˇti⁄
;

4088 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

4089 if–!
∑ge_èbÀ_m©ch
 )

4090 
	`∑nic
("thisÉntry must be inÖrocess\n");

4091 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4092 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
SHARED_WRITE
;

4094 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4096 
evít
->
§c1
 =Évít->
√w_§c1
;

4097 
evít
->
§c2
 =Évít->
√w_§c2
;

4098 
evít
->
des1
 =Évít->
√w_des1
;

4099 
evít
->
des2
 =Évít->
√w_des2
;

4101 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4102 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4103 
evít
->
¥o˚ssögD⁄e
 = 0;

4104 
	`dú_evítq_ö£π
(
evít
);

4108 
evít
->
∑ª¡
->
chûdCou¡
--;

4109 if(
evít
->
∑ª¡
->
chûdCou¡
 == 0)

4111 
∑ge_èbÀ_m©ch
;

4112 
∑ge_èbÀ_°©e
;

4113 
∑ge_èbÀ_busy
;

4114 
∑ge_èbÀ_kì≥r
;

4115 
loˇti⁄
;

4116 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
evít
->
∑ª¡
->
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

4117 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
SHARED_WRITE
;

4118 if–
evít
->
∑ª¡
->
›î©i⁄
 =
SHR_TLB_MISS
 )

4120 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4121 
evít
->
∑ª¡
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4122 
evít
->
∑ª¡
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4123 
evít
->
∑ª¡
->
°¨tCy˛e
 = 
sim_cy˛e
;

4124 
evít
->
∑ª¡
->
¥o˚ssögD⁄e
 = 0;

4125 
	`dú_evítq_ö£π
(
evít
->
∑ª¡
);

4127 i‡–
evít
->
∑ª¡
->
›î©i⁄
 =
SHR_TLB_SR_RECOVERY
 )

4129 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 0;

4130 
	`‰ì_evít
(
evít
->
∑ª¡
);

4133 
	`∑nic
("no otherÑequest\n");

4135 
	`‰ì_evít
(
evít
);

4140 
SHR_TLB_UPDATE_PR_ACK
:

4141 
SHR_TLB_UPDATE_PW_ACK
:

4143 
∑ge_èbÀ_m©ch
;

4144 
∑ge_èbÀ_°©e
;

4145 
∑ge_èbÀ_busy
;

4146 
∑ge_èbÀ_kì≥r
;

4147 
loˇti⁄
;

4149 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

4150 if–!
∑ge_èbÀ_m©ch
 )

4151 
	`∑nic
("thisÉntry must be inÖrocess\n");

4152 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4153 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
evít
->
∑ge_íåy_°©e
;

4155 i‡–
evít
->
∑ge_íåy_°©e
 =
SHARED_WRITE
 )

4157 
§_∑ge_num
--;

4158 
sw_∑ge_num
++;

4161 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4163 
evít
->
§c1
 =Évít->
√w_§c1
;

4164 
evít
->
§c2
 =Évít->
√w_§c2
;

4165 
evít
->
des1
 =Évít->
√w_des1
;

4166 
evít
->
des2
 =Évít->
√w_des2
;

4168 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4169 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4170 
evít
->
¥o˚ssögD⁄e
 = 0;

4171 
	`dú_evítq_ö£π
(
evít
);

4175 
SHR_TLB_SR_RECOVERY
:

4177 
∑ge_èbÀ_m©ch
;

4178 
∑ge_èbÀ_°©e
;

4179 
∑ge_èbÀ_busy
;

4180 
∑ge_èbÀ_kì≥r
;

4181 
loˇti⁄
;

4183 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

4185 i‡(!
∑ge_èbÀ_m©ch
)

4186 
	`∑nic
("SR must match\n");

4187 i‡(
∑ge_èbÀ_busy
)

4189 if(
∑ge_èbÀ_°©e
 =
SHARED_READ
)

4192 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4193 
evít
->
Êù_Êag
 = 1;

4194 
	`dú_evítq_ö£π
(
evít
);

4196 i‡(
∑ge_èbÀ_°©e
 =
SHARED_WRITE
)

4199 
	`‰ì_evít
(
evít
);

4202 
	`∑nic
("SRÑecovery canÇot be other state\n");

4205 
§_∑ge_num
--;

4206 
sw_∑ge_num
++;

4208 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4209 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
SHARED_WRITE
;

4211 
i
;

4212 
i
=0;i<
numc⁄ãxts
;i++)

4214 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

4215 if(
√w_evít
 =
NULL
)

4216 
	`∑nic
("Out of Virtual Memory");

4217 
√w_evít
->
›î©i⁄
 = 
DIR_TLB_RECOVERY_WAIT
;

4218 
√w_evít
->
addr
 = 
evít
->addr;

4219 
√w_evít
->
§c1
 = 1;

4220 
√w_evít
->
§c2
 = 0;

4221 
√w_evít
->
des1
 = 
i
/
mesh_size
+
MEM_LOC_SHIFT
;

4222 
√w_evít
->
des2
 = 
i
%
mesh_size
;

4223 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4224 
√w_evít
->
∑ª¡
 = 
evít
;

4225 
evít
->
chûdCou¡
++;

4227 
√w_evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4228 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4229 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

4230 
	`dú_evítq_ö£π
(
√w_evít
);

4236 
SHR_TLB_MISS
 :

4239 
∑ge_èbÀ_m©ch
;

4240 
∑ge_èbÀ_°©e
;

4241 
∑ge_èbÀ_busy
;

4242 
∑ge_èbÀ_kì≥r
;

4243 
loˇti⁄
;

4245 
∑ge_èbÀ_m©ch
 = 
	`∑ge_èbÀ_check
(
addr
, &
∑ge_èbÀ_°©e
, &
∑ge_èbÀ_busy
, &
∑ge_èbÀ_kì≥r
, &
loˇti⁄
);

4247 i‡(!
∑ge_èbÀ_m©ch
)

4250 
tŸÆ_∑ge_num
++;

4251 i‡–
evít
->
cmd
 =
Ród
 )

4252 
¥_∑ge_num
++;

4254 
pw_∑ge_num
++;

4256 
ˇche_t
 *
˝
 = 
déb
[0];

4257 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

4258 
∑ge_èbÀ
[
loˇti⁄
]->
vÆid
 = 1;

4259 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4260 
∑ge_èbÀ
[
loˇti⁄
]->
VPN
 = 
èg
;

4261 
∑ge_èbÀ
[
loˇti⁄
]->
PPN
 = 
èg
;

4262 
∑ge_èbÀ
[
loˇti⁄
]->
kì≥r
 = 
ãmpID
;

4263 
∑ge_èbÀ
[
loˇti⁄
]->
ˇched
 = 1;

4264 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
 = (
löe_öfo
 *Ë
	`ˇŒoc
 ( (
MD_PAGE_SIZE
/
ˇche_dl1
[0]->
bsize
),  (line_info) );

4265 
i
;

4266 
i
=0;i<(
MD_PAGE_SIZE
/
ˇche_dl1
[0]->
bsize
);i++)

4268 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
i
].
löe_ow√r
 = -1;

4269 
∑ge_èbÀ
[
loˇti⁄
]->
löe_hód
[
i
].
löe_°©e
 = -1;

4271 i‡–
éb_c_c
 )

4272 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = (
evít
->
cmd
 =
Ród
Ë? 
PRIVATE_READ
 : 
PRIVATE_WRITE
;

4274 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
SHARED_WRITE
;

4276 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4277 
evít
->
∑ge_íåy_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
;

4278 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4279 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4280 
evít
->
¥o˚ssögD⁄e
 = 0;

4281 
	`dú_evítq_ö£π
(
evít
);

4283 i‡(
∑ge_èbÀ_busy
)

4286 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4287 
evít
->
Êù_Êag
 = 1;

4288 
	`dú_evítq_ö£π
(
evít
);

4293 
∑ge_èbÀ_°©e
)

4295 
PRIVATE_READ
:

4296 if(
∑ge_èbÀ_kì≥r
 =
ãmpID
)

4299 i‡–
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 =
PRIVATE_READ
 && 
evít
->
cmd
 =
Wrôe
 )

4301 
¥_∑ge_num
--;

4302 
pw_∑ge_num
++;

4304 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4305 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = (
evít
->
cmd
 =
Ród
Ë? 
PRIVATE_READ
 : 
PRIVATE_WRITE
;

4306 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4307 
evít
->
∑ge_íåy_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
;

4308 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4309 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4310 
evít
->
¥o˚ssögD⁄e
 = 0;

4311 
	`dú_evítq_ö£π
(
evít
);

4316 
¥_∑ge_num
--;

4317 i‡–
evít
->
cmd
 =
Ród
 )

4318 
§_∑ge_num
++;

4320 
sw_∑ge_num
++;

4322 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4325 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = (
evít
->
cmd
 =
Ród
Ë? 
SHARED_READ
 : 
SHARED_WRITE
;

4327 
evít
->
›î©i⁄
 = (evít->
cmd
 =
Ród
Ë? 
DIR_TLB_UPDATE_WAIT
 : 
DIR_TLB_RECOVERY_WAIT
;

4329 
evít
->
√w_§c1
 =Évít->
§c1
;

4330 
evít
->
√w_§c2
 =Évít->
§c2
;

4331 
evít
->
√w_des1
 =Évít->
des1
;

4332 
evít
->
√w_des2
 =Évít->
des2
;

4334 
evít
->
§c1
 = 1;

4335 
evít
->
§c2
 = 0;

4336 
§c
 = 
∑ge_èbÀ
[
loˇti⁄
]->
kì≥r
;

4337 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

4338 
evít
->
des2
 = (
§c
 %
mesh_size
);

4340 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4341 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4342 
evít
->
¥o˚ssögD⁄e
 = 0;

4343 
	`dú_evítq_ö£π
(
evít
);

4346 
PRIVATE_WRITE
:

4347 if(
∑ge_èbÀ_kì≥r
 =
ãmpID
)

4350 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4351 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
PRIVATE_WRITE
;

4353 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4354 
evít
->
∑ge_íåy_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
;

4355 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4356 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4357 
evít
->
¥o˚ssögD⁄e
 = 0;

4358 
	`dú_evítq_ö£π
(
evít
);

4363 
pw_∑ge_num
--;

4364 
sw_∑ge_num
++;

4366 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4367 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
SHARED_WRITE
;

4369 
evít
->
›î©i⁄
 = 
DIR_TLB_RECOVERY_WAIT
;

4371 
evít
->
√w_§c1
 =Évít->
§c1
;

4372 
evít
->
√w_§c2
 =Évít->
§c2
;

4373 
evít
->
√w_des1
 =Évít->
des1
;

4374 
evít
->
√w_des2
 =Évít->
des2
;

4376 
evít
->
§c1
 = 1;

4377 
evít
->
§c2
 = 0;

4378 
§c
 = 
∑ge_èbÀ
[
loˇti⁄
]->
kì≥r
;

4379 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

4380 
evít
->
des2
 = (
§c
 %
mesh_size
);

4382 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4383 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4384 
evít
->
¥o˚ssögD⁄e
 = 0;

4385 
	`dú_evítq_ö£π
(
evít
);

4388 
SHARED_READ
:

4389 i‡(
evít
->
cmd
 =
Ród
)

4391 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4393 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4394 
evít
->
∑ge_íåy_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
;

4395 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4396 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4397 
evít
->
¥o˚ssögD⁄e
 = 0;

4398 
	`dú_evítq_ö£π
(
evít
);

4403 
§_∑ge_num
--;

4404 
sw_∑ge_num
++;

4405 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4406 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
 = 
SHARED_WRITE
;

4408 
i
;

4409 
i
=0;i<
numc⁄ãxts
;i++)

4411 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

4412 if(
√w_evít
 =
NULL
)

4413 
	`∑nic
("Out of Virtual Memory");

4414 
√w_evít
->
›î©i⁄
 = 
DIR_TLB_RECOVERY_WAIT
;

4415 
√w_evít
->
addr
 = 
evít
->addr;

4416 
√w_evít
->
§c1
 = 1;

4417 
√w_evít
->
§c2
 = 0;

4418 
√w_evít
->
des1
 = 
i
/
mesh_size
+
MEM_LOC_SHIFT
;

4419 
√w_evít
->
des2
 = 
i
%
mesh_size
;

4420 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4421 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

4422 
√w_evít
->
∑ª¡
 = 
evít
;

4423 
evít
->
chûdCou¡
++;

4424 
√w_evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4425 
	`dú_evítq_ö£π
(
√w_evít
);

4429 
SHARED_WRITE
:

4430 
∑ge_èbÀ
[
loˇti⁄
]->
busy
 = 1;

4432 
evít
->
›î©i⁄
 = 
DIR_TLB_REFILL_WAIT
;

4433 
evít
->
∑ge_íåy_°©e
 = 
∑ge_èbÀ
[
loˇti⁄
]->
°©e
;

4434 
evít
->
whí
 = 
sim_cy˛e
 + 
PAGE_TABLE_SEARCH
;

4435 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4436 
evít
->
¥o˚ssögD⁄e
 = 0;

4437 
	`dú_evítq_ö£π
(
evít
);

4440 
	`∑nic
("theÖageÅable stateÉrror\n");

4445 
MISS_IL1
 :

4446 
dˇche2_ac˚ss
++;

4447 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

4448 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

4449 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

4451 i‡(
dl2_blk
->
way_¥ev
 && 
dl2
->
pﬁicy
 =
LRU
)

4452 
	`upd©e_way_li°
 (&
dl2
->
£ts
[
dl2_£t
], 
dl2_blk
, 
Hód
);

4454 if(
dl2_blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

4455 
	`∑nic
("DIR: ThisÉvent couldÇot be inÅransition");

4457 if(
dl2_blk
->
dú_sh¨î
[
block_off£t
][0] !0 || dl2_blk->dú_sh¨î[block_off£t][1] !0 || dl2_blk->dú_sh¨î[block_off£t][2] !0 || dl2_blk->dú_sh¨î[block_off£t][3] !0 || (dl2_blk->
°©us
 & 
CACHE_BLK_DIRTY
))

4458 
	`∑nic
("DIR: IL1 block canÇot have sharersÜist or modified");

4460 if(
cﬁÀ˘_°©s
)

4462 
dl2
->
d©a_ac˚ss
 ++;

4463 
dl2
->
hôs
 ++;

4465 
evít
->
›î©i⁄
 = 
ACK_DIR_IL1
;

4466 
evít
->
§c1
 +evít->
des1
;

4467 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4468 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4469 
evít
->
§c2
 +evít->
des2
;

4470 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4471 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4472 
evít
->
¥o˚ssögD⁄e
 = 0;

4473 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4474 
evít
->
∑ª¡
 = 
NULL
;

4475 
evít
->
blk_dú
 = 
NULL
;

4476 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4477 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

4478 
	`dú_evítq_ö£π
(
evít
);

4483 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

4484 
evít
->
L2miss_Êag
 = 1;

4485 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

4486 
evít
->
blk_dú
 = 
NULL
;

4487 if(!
m©chnum
)

4489 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

4491 if(!
œ°_L2_mshr_fuŒ
)

4493 
L2_mshr_fuŒ
 ++;

4494 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

4496 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4498 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

4500 
evít
->
§c1
 +evít->
des1
;

4501 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4502 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4503 
evít
->
§c2
 +evít->
des2
;

4504 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4505 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4506 
evít
->
›î©i⁄
 = 
NACK
;

4507 
evít
->
¥o˚ssögD⁄e
 = 0;

4508 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4509 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4510 
	`dú_evítq_ö£π
(
evít
);

4515 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

4516 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4517 
Êù_cou¡î
 ++;

4518 
evít
->
Êù_Êag
 = 1;

4519 
	`dú_evítq_ö£π
(
evít
);

4525 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4526 if(
œ°_L2_mshr_fuŒ
)

4528 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

4529 
œ°_L2_mshr_fuŒ
 = 0;

4532 if(
cﬁÀ˘_°©s
)

4533 
ˇche_dl2
->
mis£s
++;

4534 
evít
->
mshr_time
 = 
sim_cy˛e
;

4535 
DIRECTORY_EVENT
 *
√w_evít
;

4536 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

4537 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

4538 
√w_evít
->
cmd
 = 
Wrôe
;

4539 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

4540 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

4541 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4542 
	`dú_evítq_ö£π
(
√w_evít
);

4543 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4544 
evít_¸óãd
 = 
evít
;

4545 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

4550 if(
cﬁÀ˘_°©s
)

4551 
ˇche_dl2
->
ö_mshr
 ++;

4553 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

4558 
MISS_READ
 :

4559 
dˇche2_ac˚ss
++;

4560 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

4561 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

4564 if(
	`födCacheSètus
(
ml2
, 
ml2_sub_£t
, 
ml2_sub_èg
, 
ml2_hödex
, &
ml2_blk
))

4566 if(
ml2_blk
->
qblk_£t_shi·
 == 0)

4568 
ªad_S_hô_num
++;

4569 
ml2_hô
 = 1;

4570 
ml2_èg
 = 
ml2_sub_èg
;

4571 
ml2_£t
 = 
ml2_sub_£t
;

4574 
ml2_hô
 = 0;

4576 if(
	`födCacheSètus
(
ml2
, 
ml2_mul_£t
, 
ml2_mul_èg
, 
ml2_hödex
, &
ml2_blk
))

4578 if(
ml2_blk
->
qblk_£t_shi·
 == 1)

4580 
ªad_Q_hô_num
++;

4581 
mb_∑ö_cou¡
++;

4582 
ml2_hô
 = 1;

4583 
ml2_èg
 = 
ml2_mul_èg
;

4584 
ml2_£t
 = 
ml2_mul_£t
;

4587 
ml2_hô
 = 0;

4590 
ml2_hô
 = 0;

4592 if(
ml2_hô
)

4594 i‡–
evít
->
éb_°©e
 !
SHARED_WRITE
 )

4595 
	`¥ötf
("meta only for SHARED_WRITE\n");

4597 i‡(
ml2_blk
->
way_¥ev
 && 
ml2
->
pﬁicy
 =
LRU
)

4598 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ml2_blk
, 
Hód
);

4600 i‡(
ml2_blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

4602 if(
ml2_blk
->
qblk_£t_shi·
)

4604 
ªad_Q_hô_num
--;

4605 
mb_∑ö_cou¡
--;

4608 
ªad_S_hô_num
--;

4609 
evít
->
isReqL2Tøns
 = 1;

4610 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4612 
evít
->
§c1
 +evít->
des1
;

4613 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4614 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4615 
evít
->
§c2
 +evít->
des2
;

4616 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4617 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4618 
evít
->
›î©i⁄
 = 
NACK
;

4619 
evít
->
¥o˚ssögD⁄e
 = 0;

4620 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4621 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4622 
	`dú_evítq_ö£π
(
evít
);

4623 if(
cﬁÀ˘_°©s
)

4624 
ml2
->
dú_ac˚ss
 ++;

4629 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4630 
Êù_cou¡î
 ++;

4631 
evít
->
Êù_Êag
 = 1;

4632 
	`dú_evítq_ö£π
(
evít
);

4633 if(
cﬁÀ˘_°©s
)

4634 
ml2
->
dú_ac˚ss
 ++;

4639 i‡–(
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] & (()1 << 
evít
->ãmpID )Ë&& (!ml2_blk->
qblk_£t_shi·
Ë&& (!
mu…i_blk_ad≠_í
Ë&& (!ml2_blk->
Æl_sh¨ed_í
) )

4640 
	`¥ötf
("read miss but in sharer\n");

4641 if–!
ml2_blk
->
qblk_£t_shi·
 && !ml2_blk->
Æl_sh¨ed_í
)

4643 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] &~ (()1 << 
evít
->tempID );

4644 if–
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
]) == 1 )

4645 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

4649 if(
	`IsEx˛usiveOrDúty
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
Ë&& ml2_blk->
dú_blk_°©e
[block_off£t] !
MESI_SHARED
)

4651 if–
ve˘‹_num
 == 0 )

4652 
pvc_nv_c⁄Êi˘_num
++;

4653 if(
ml2_blk
->
±r_í
)

4655 if(
ml2_blk
->
Æl_sh¨ed_í
)

4656 
	`∑nic
("exclusiveÖointer canÇot beáll_shared\n");

4658 
ve˘‹_avaûabÀ
;

4659 
sh¨î_num
;

4660 
ãmp_thªadid
;

4661 
ˇche_blk_t
 *
ve˘‹_blk
;

4663 
ve˘‹_avaûabÀ
 = 
	`ve˘‹_avaûabÀ_func
(&
ve˘‹_blk
, 
ml2_£t
);

4665 if(!
ve˘‹_avaûabÀ
)

4667 
PVC_Êù_num
++;

4668 if(
ml2_blk
->
qblk_£t_shi·
)

4670 
ªad_Q_hô_num
--;

4671 
mb_∑ö_cou¡
--;

4674 
ªad_S_hô_num
--;

4675 
evít
->
isReqL2Tøns
 = 1;

4676 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4678 
evít
->
§c1
 +evít->
des1
;

4679 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4680 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4681 
evít
->
§c2
 +evít->
des2
;

4682 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4683 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4684 
evít
->
›î©i⁄
 = 
NACK
;

4685 
evít
->
¥o˚ssögD⁄e
 = 0;

4686 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4687 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4688 
	`dú_evítq_ö£π
(
evít
);

4689 if(
cﬁÀ˘_°©s
)

4690 
ml2
->
dú_ac˚ss
 ++;

4695 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4696 
Êù_cou¡î
 ++;

4697 
evít
->
Êù_Êag
 = 1;

4698 
	`dú_evítq_ö£π
(
evít
);

4699 if(
cﬁÀ˘_°©s
)

4700 
ml2
->
dú_ac˚ss
 ++;

4706 
sh¨î_num
 = 
	`Is_Sh¨ed
(
ve˘‹_blk
->
dú_sh¨î
[
block_off£t
]);

4708 
PVC_exch™ge_num
++;

4709 
PVC_exch_vec_shr_di°r
[
sh¨î_num
]++;

4711 if–
sh¨î_num
 < 2 )

4713 
PVC_dowm_no_öv_num
++;

4715 
ml2_blk
->
±r_í
 = 0;

4717 
ve˘‹_blk
->
±r_í
 = 1;

4718 if(
ve˘‹_blk
->
Æl_sh¨ed_í
)

4719 
	`∑nic
("vector_blkáll_shared_en illegal\n");

4720 if–
ve˘‹_blk
->
dú_blk_°©e
[0] =
MESI_SHARED
 )

4721 
	`∑nic
("stateÉrror\n");

4723 if–
sh¨î_num
 =
mesh_size
*mesh_size )

4725 
PVC_up_no_add_num
++;

4727 
ml2_blk
->
±r_í
 = 0;

4729 
ve˘‹_blk
->
±r_í
 = 1;

4730 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 1;

4731 if(
ve˘‹_blk
->
dú_sh¨î
[0][0] !()
Æl_sh¨î
)

4732 
	`∑nic
("all_shared_en dir_sharerÉrrpr\n");

4733 if–
ve˘‹_blk
->
dú_blk_°©e
[0] !
MESI_SHARED
 )

4734 
	`∑nic
("stateÉrror\n");

4738 if(
sh¨î_num
 > 
sh¨î_thªshﬁd
)

4740 
PVC_up_add_num
++;

4741 
PVC_up_add_shr_num
 +
mesh_size
*mesh_size-
sh¨î_num
;

4742 
PVC_up_add_shr_di°r
[
mesh_size
*mesh_size-
sh¨î_num
]++;

4744 
ml2_blk
->
±r_í
 = 0;

4746 
ve˘‹_blk
->
±r_í
 = 1;

4747 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 1;

4748 
ve˘‹_blk
->
dú_sh¨î
[0][0] = ()
Æl_sh¨î
;

4749 if–
ve˘‹_blk
->
dú_blk_°©e
[0] !
MESI_SHARED
 )

4750 
	`∑nic
("stateÉrror\n");

4754 
PVC_dowm_öv_num
++;

4755 
PVC_dowm_öv_shr_num
 +
sh¨î_num
-1;

4756 
PVC_dowm_öv_shr_di°r
[
sh¨î_num
-1]++;

4758 
ml2_blk
->
±r_í
 = 0;

4760 
ml2_dú_blk_°©e
 = 
ve˘‹_blk
->
dú_blk_°©e
[0];

4761 
survive_í
 = 1, 
surviv‹
 = -1;

4762 
DIRECTORY_EVENT
 *
cﬁÀ˘_evít
 = 
	`Æloˇã_evít
(0);

4763 if(
cﬁÀ˘_evít
 =
NULL
)

4764 
	`∑nic
("Out of Virtual Memory");

4766 
ve˘‹_blk
->
±r_í
 = 1;

4767 if(
ve˘‹_blk
->
Æl_sh¨ed_í
)

4768 
	`∑nic
("vector_blkáll_shared_en illegal\n");

4769 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 0;

4770 
ve˘‹_blk
->
dú_blk_°©e
[0] = 
MESI_EXCLUSIVE
;

4771 
ve˘‹_blk
->
dú_°©e
[0] = 
DIR_TRANSITION
;

4772 
ve˘‹_blk
->
±r_cur_evít
[0] = 
cﬁÀ˘_evít
;

4773 i‡(
ve˘‹_blk
->
qblk_£t_shi·
)

4774 
ve˘‹_blk
->
addr
 = (ve˘‹_blk->
ègid
.
èg
 << (
ˇche_ml2
->
èg_shi·
+
qblk_£t_shi·
)Ë+ (
ml2_£t
 << (ˇche_ml2->
£t_shi·
+qblk_set_shift));

4776 
ve˘‹_blk
->
addr
 = (ve˘‹_blk->
ègid
.
èg
 << 
ˇche_ml2
->
èg_shi·
Ë+ (
ml2_£t
 << cache_ml2->
£t_shi·
);

4778 
cﬁÀ˘_evít
->
chûdCou¡
 = 0;

4779 
cﬁÀ˘_evít
->
ödividuÆ_chûdCou¡
[0] = 0;

4780 
cﬁÀ˘_evít
->
sh¨î_num
 = 1;

4781 
cﬁÀ˘_evít
->
blk_dú
 = 
ve˘‹_blk
;

4782 
cﬁÀ˘_evít
->
›î©i⁄
 = 
VEC_DEGRADE
;

4784 
ãmp_thªadid
 = 0;Åemp_thªadid < 
numc⁄ãxts
;Åemp_threadid++)

4786 if(((
ve˘‹_blk
->
dú_sh¨î
[0][
ãmp_thªadid
/64]) & (()1 << (temp_threadid%64))) == (()1 << (temp_threadid%64)))

4788 if(
survive_í
)

4790 
surviv‹
 = 
ãmp_thªadid
;

4791 
survive_í
 = 0;

4794 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

4795 if(
√w_evít
 =
NULL
)

4796 
	`∑nic
("Out of Virtual Memory");

4799 
√w_evít
->
qblk_£t_shi·
 = 
ve˘‹_blk
->qblk_set_shift;

4800 
√w_evít
->
ml2_dú_blk_°©e
 = ml2_dir_blk_state;

4801 
√w_evít
->
addr
 = 
ve˘‹_blk
->addr;

4802 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

4803 
√w_evít
->
∑ª¡
 = 
cﬁÀ˘_evít
;

4804 
√w_evít
->
blk_dú
 = 
ve˘‹_blk
;

4805 
√w_evít
->
ãmpID
 = 
evít
->tempID;

4806 
√w_evít
->
˝
 = 
evít
->cp;

4807 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

4808 
√w_evít
->
§c1
 = 
evít
->
des1
;

4809 
√w_evít
->
§c2
 = 
evít
->
des2
;

4810 
√w_evít
->
des1
 = 
ãmp_thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

4811 
√w_evít
->
des2
 = 
ãmp_thªadid
%
mesh_size
;

4813 
√w_evít
->
isPª„tch
 = 0;

4814 
√w_evít
->
c⁄f_bô
 = -1;

4815 
√w_evít
->
ªq_time
 = 0;

4816 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

4817 
√w_evít
->
≥ndög_Êag
 = 0;

4818 
√w_evít
->
›
 = 
cﬁÀ˘_evít
->op;

4819 
√w_evít
->
vp
 = 
NULL
;

4820 
√w_evít
->
ud©a
 = 
NULL
;

4821 
√w_evít
->
rs
 = 
NULL
;

4822 
√w_evít
->
•ec_mode
 = 0;

4823 
√w_evít
->
d©a_ª∂y
 = 1;

4826 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

4827 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4828 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

4829 
	`dú_evítq_ö£π
(
√w_evít
);

4831 
cﬁÀ˘_evít
->
chûdCou¡
++;

4832 
cﬁÀ˘_evít
->
ödividuÆ_chûdCou¡
[0] ++;

4835 if(
surviv‹
 == -1)

4836 
	`∑nic
("survivorÉrror\n");

4837 
ve˘‹_blk
->
dú_sh¨î
[0][
surviv‹
/64] = (()1 << (survivor%64));

4843 if(
cﬁÀ˘_°©s
)

4844 
övﬁve_4_h›s
 ++;

4845 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

4846 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

4847 
evít
->
blk_dú
 = 
ml2_blk
;

4848 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

4849 
√w_evít
->
∑ª¡
 = 
evít
;

4850 if(
√w_evít
 =
NULL
)

4851 
	`∑nic
("Out of Virtual Memory");

4852 if(
cﬁÀ˘_°©s
)

4853 
ml2
->
dú_ac˚ss
 ++;

4855 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

4857 
evít
->
shr_d©a_ªq
 = 0;

4858 
√w_evít
->
shr_d©a_ªq
 = 0;

4859 
dl2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

4863 
evít
->
shr_d©a_ªq
 = 1;

4864 
√w_evít
->
shr_d©a_ªq
 = 1;

4866 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

4867 
√w_evít
->
ªq_time
 = 0;

4868 
√w_evít
->
c⁄f_bô
 = -1;

4869 
√w_evít
->
≥ndög_Êag
 = 0;

4870 
√w_evít
->
›
 = 
evít
->op;

4871 
√w_evít
->
isPª„tch
 = 0;

4872 
√w_evít
->
›î©i⁄
 = 
INV_MSG_READ
;

4875 
√w_evít
->
qblk_£t_shi·
 = 
ml2_blk
->qblk_set_shift;

4877 
√w_evít
->
§c1
 = 
evít
->
des1
;

4878 
√w_evít
->
§c2
 = 
evít
->
des2
;

4879 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

4880 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

4881 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

4882 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4883 
√w_evít
->
ãmpID
 = 
evít
->tempID;

4884 
√w_evít
->
ª£nd
 = 0;

4885 
√w_evít
->
blk_dú
 = 
ml2_blk
;

4886 
√w_evít
->
˝
 = 
evít
->cp;

4887 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

4888 
√w_evít
->
addr
 = 
evít
->addr;

4889 
√w_evít
->
vp
 = 
NULL
;

4890 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

4891 
√w_evít
->
ud©a
 = 
NULL
;

4892 
√w_evít
->
cmd
 = 
Wrôe
;

4893 
√w_evít
->
rs
 = 
evít
->rs;

4894 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

4895 
√w_evít
->
•ec_mode
 = 0;

4896 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

4897 
√w_evít
->
d©a_ª∂y
 = 1;

4898 
evít
->
chûdCou¡
++;

4899 
evít
->
dúty_Êag
 = 1;

4900 if(
evít
->
rs
)

4901 if(
evít
->
rs
->
›
 =
LDL_L
)

4902 
lﬂd_lök_ex˛usive
 ++;

4905 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4906 
	`dú_evítq_ö£π
(
√w_evít
);

4910 i‡–!
	`IsSh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
) )

4912 if(
ml2_blk
->
±r_í
 && ml2_blk->
Æl_sh¨ed_í
)

4913 
	`∑nic
("missÑead mesi_invalidÖtr_enáll_shared_enÉrror \n");

4915 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

4917 
ml2
->
d©a_ac˚ss
 ++;

4918 
övﬁve_2_h›s
 ++;

4919 if(
evít
->
rs
)

4920 if(
evít
->
rs
->
›
 =
LDL_L
)

4921 
lﬂd_lök_sh¨ed
 ++;

4922 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

4923 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

4924 
ml2_blk
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

4926 
ve˘‹_cou¡
;

4927 
ve˘‹_cou¡
 = 
	`ve˘‹_cou¡_func
(
ml2_blk
);

4933 
PVC_ve˘‹_di°r_ªc‹d_num
++;

4934 
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

4935 
ˇche_ml2
->
£ts
[
ml2_£t
].
PVC_ve˘‹_di°r_ªc‹d_num
++;

4936 
ˇche_ml2
->
£ts
[
ml2_£t
].
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

4938 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

4940 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

4941 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

4944 
	`¥ötf
("directory is for data segment\n");

4946 
evít
->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

4947 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

4948 
evít
->
§c1
 +evít->
des1
;

4949 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4950 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4951 
evít
->
§c2
 +evít->
des2
;

4952 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4953 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4954 
evít
->
¥o˚ssögD⁄e
 = 0;

4955 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4956 
evít
->
∑ª¡
 = 
NULL
;

4957 
evít
->
blk_dú
 = 
NULL
;

4958 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4959 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

4960 
	`dú_evítq_ö£π
(
evít
);

4966 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

4967 if(
ml2_blk
->
qblk_£t_shi·
)

4969 
ªad_Q_hô_num
--;

4970 
mb_∑ö_cou¡
--;

4973 
ªad_S_hô_num
--;

4974 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

4975 
evít
->
L2miss_Êag
 = 1;

4976 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

4977 if(
evít
->
isSyncAc˚ss
)

4978 
Sync_L2_miss
 ++;

4979 if(!
m©chnum
)

4981 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

4983 if(!
œ°_L2_mshr_fuŒ
)

4985 
L2_mshr_fuŒ
 ++;

4986 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

4988 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4990 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

4992 
evít
->
§c1
 +evít->
des1
;

4993 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4994 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4995 
evít
->
§c2
 +evít->
des2
;

4996 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4997 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4998 
evít
->
›î©i⁄
 = 
NACK
;

4999 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5000 
evít
->
¥o˚ssögD⁄e
 = 0;

5001 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5002 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5003 
	`dú_evítq_ö£π
(
evít
);

5008 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5009 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5010 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5011 
evít
->
Êù_Êag
 = 1;

5012 
Êù_cou¡î
 ++;

5013 
	`dú_evítq_ö£π
(
evít
);

5019 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

5020 if(
œ°_L2_mshr_fuŒ
)

5022 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

5023 
œ°_L2_mshr_fuŒ
 = 0;

5026 if(
cﬁÀ˘_°©s
)

5028 
ˇche_dl2
->
mis£s
 ++;

5029 
ˇche_dl2
->
dmis£s
 ++;

5030 
övﬁve_2_h›s_miss
 ++;

5032 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

5033 
evít
->
mshr_time
 = 
sim_cy˛e
;

5034 
evít
->
blk_dú
 = 
ml2_blk
;

5035 
DIRECTORY_EVENT
 *
√w_evít
;

5036 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

5037 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

5038 
√w_evít
->
cmd
 = 
Ród
;

5039 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

5040 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

5041 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5042 
	`dú_evítq_ö£π
(
√w_evít
);

5043 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5044 
evít_¸óãd
 = 
evít
;

5045 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

5050 
evít
->
isReqL2SecMiss
 = 1;

5051 if(
cﬁÀ˘_°©s
)

5053 
ˇche_dl2
->
ö_mshr
 ++;

5054 
ˇche_dl2
->
dö_mshr
 ++;

5056 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

5057 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5065 if(
ml2_blk
->
±r_í
 && !ml2_blk->
Æl_sh¨ed_í
)

5066 
	`∑nic
("missÑead mesi_sharedÖtr_enáll_shared_enÉrror \n");

5068 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

5070 
ml2
->
d©a_ac˚ss
 ++;

5071 
övﬁve_2_h›s
 ++;

5072 if(
evít
->
rs
)

5073 if(
evít
->
rs
->
›
 =
LDL_L
)

5074 
lﬂd_lök_sh¨ed
 ++;

5075 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5076 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

5077 
ml2_blk
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

5079 
ve˘‹_cou¡
;

5080 
ve˘‹_cou¡
 = 
	`ve˘‹_cou¡_func
(
ml2_blk
);

5086 
PVC_ve˘‹_di°r_ªc‹d_num
++;

5087 
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

5088 
ˇche_ml2
->
£ts
[
ml2_£t
].
PVC_ve˘‹_di°r_ªc‹d_num
++;

5089 
ˇche_ml2
->
£ts
[
ml2_£t
].
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

5091 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5093 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64) | ml2_blk->dir_sharer[block_offset][tempID/64];

5094 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

5097 
	`¥ötf
("directory is for data segment\n");

5099 
evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

5100 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

5101 
evít
->
§c1
 +evít->
des1
;

5102 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5103 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5104 
evít
->
§c2
 +evít->
des2
;

5105 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5106 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5107 
evít
->
¥o˚ssögD⁄e
 = 0;

5108 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5109 
evít
->
∑ª¡
 = 
NULL
;

5110 
evít
->
blk_dú
 = 
NULL
;

5111 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

5112 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

5113 
	`dú_evítq_ö£π
(
evít
);

5120 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

5121 i‡(!
evít
->
shr_d©a_ªq
)

5123 
shr_d©a_ªq_öôül_num
++;

5124 
evít
->
d©a_ªq_sh¨î
 = 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64];

5126 
shr_d©a_ªq_tŸÆ_num
++;

5127 
de°
 = -1;

5128 
i
;

5129 
i
=0;i<
numc⁄ãxts
;i++)

5131 i‡–(((
evít
->
d©a_ªq_sh¨î
>>
i
)&1)==1Ë&& (i!Ûvít->
ãmpID
) )

5133 
de°
 = 
i
;

5134 
evít
->
d©a_ªq_sh¨î
 &~(1<<
i
);

5138 if(
ml2_blk
->
Æl_sh¨ed_í
)

5140 
PVC_ªad_Æl_shr_num
++;

5141 if(
shr_ªad_í
)

5142 
PVC_rfs_Æl_shr_num
++;

5144 if–!
shr_ªad_í
 || 
ml2_blk
->
Æl_sh¨ed_í
 )

5145 
de°
 = -1;

5146 i‡–
de°
 == -1 )

5149 
shr_d©a_ªq_Áû_num
++;

5150 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

5151 if(
ml2_blk
->
qblk_£t_shi·
)

5153 
ªad_Q_hô_num
--;

5154 
mb_∑ö_cou¡
--;

5157 
ªad_S_hô_num
--;

5158 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

5159 
evít
->
L2miss_Êag
 = 1;

5160 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

5161 if(
evít
->
isSyncAc˚ss
)

5162 
Sync_L2_miss
 ++;

5163 if(!
m©chnum
)

5165 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

5167 if(!
œ°_L2_mshr_fuŒ
)

5169 
L2_mshr_fuŒ
 ++;

5170 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

5172 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

5174 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

5176 
evít
->
§c1
 +evít->
des1
;

5177 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5178 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5179 
evít
->
§c2
 +evít->
des2
;

5180 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5181 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5182 
evít
->
›î©i⁄
 = 
NACK
;

5183 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5184 
evít
->
¥o˚ssögD⁄e
 = 0;

5185 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5186 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5187 
	`dú_evítq_ö£π
(
evít
);

5192 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5193 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5194 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5195 
evít
->
Êù_Êag
 = 1;

5196 
Êù_cou¡î
 ++;

5197 
	`dú_evítq_ö£π
(
evít
);

5203 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

5204 if(
œ°_L2_mshr_fuŒ
)

5206 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

5207 
œ°_L2_mshr_fuŒ
 = 0;

5210 if(
cﬁÀ˘_°©s
)

5212 
ˇche_dl2
->
mis£s
 ++;

5213 
ˇche_dl2
->
dmis£s
 ++;

5214 
övﬁve_2_h›s_miss
 ++;

5216 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

5217 
evít
->
mshr_time
 = 
sim_cy˛e
;

5218 
evít
->
blk_dú
 = 
ml2_blk
;

5219 
DIRECTORY_EVENT
 *
√w_evít
;

5220 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

5221 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

5222 
√w_evít
->
cmd
 = 
Ród
;

5223 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

5224 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

5225 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5226 
	`dú_evítq_ö£π
(
√w_evít
);

5227 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5228 
evít_¸óãd
 = 
evít
;

5229 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

5234 
evít
->
isReqL2SecMiss
 = 1;

5235 if(
cﬁÀ˘_°©s
)

5237 
ˇche_dl2
->
ö_mshr
 ++;

5238 
ˇche_dl2
->
dö_mshr
 ++;

5240 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

5241 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5245 
evít
->
shr_d©a_ªq
 = 1;

5246 
evít
->
›î©i⁄
 = 
DIR_SHR_READ
;

5249 
evít
->
qblk_£t_shi·
 = 
ml2_blk
->qblk_set_shift;

5251 
evít
->
§c1
 =Évít->
des1
;

5252 
evít
->
§c2
 =Évít->
des2
;

5253 
evít
->
des1
 = 
de°
/
mesh_size
+
MEM_LOC_SHIFT
;

5254 
evít
->
des2
 = 
de°
%
mesh_size
;

5255 
evít
->
¥o˚ssögD⁄e
 = 0;

5256 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5257 
evít
->
∑ª¡
 = 
NULL
;

5258 
evít
->
blk_dú
 = 
ml2_blk
;

5259 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

5260 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

5261 
	`dú_evítq_ö£π
(
evít
);

5266 i‡–
evít
->
éb_°©e
 =
SHARED_WRITE
 )

5269 
ml2_èg
 = 
ml2_mul_èg
;

5270 
ml2_£t
 = 
ml2_mul_£t
;

5271 
ªad_Q_öô_num
++;

5273 
ml2
->
pﬁicy
)

5275 
i
;

5276 
bödex
;

5277 
LRU
:

5278 
FIFO
:

5279 
i
 = 
ml2
->
assoc
;

5281 if(
i
 == 0) ;

5282 
i
--;

5283 
ª∂
 = 
ml2
->
£ts
[
ml2_£t
].
way_èû
;

5284 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

5286 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
));

5288 i‡–
ª∂_ad_í
 && ( 
ª∂
->
qblk_£t_shi·
 == 1 ) )

5290 
ˇche_blk_t
 *
bak
;

5291 
bak
 = 
ª∂
;

5293 
i
 = 
ml2
->
assoc
;

5295 if(
i
 == 0) ;

5296 
i
--;

5297 
ª∂
 = 
ml2
->
£ts
[
ml2_£t
].
way_èû
;

5298 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

5300 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
Ë|| (ª∂->
qblk_£t_shi·
 == 1) );

5302 i‡–
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
Ë|| (ª∂->
qblk_£t_shi·
 == 1))

5304 
ª∂
 = 
bak
;

5305 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

5309 if(
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
))

5311 
Êù_cou¡î
 ++;

5312 
evít
->
Êù_Êag
 = 1;

5313 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5314 
	`dú_evítq_ö£π
(
evít
);

5318 
R™dom
:

5319 
bödex
 = 
	`myønd
 (Ë& (
dl2
->
assoc
 - 1);

5320 
ª∂
 = 
	`CACHE_BINDEX
 (
dl2
, dl2->
£ts
[
dl2_£t
].
blks
, 
bödex
);

5323 
	`∑nic
 ("bogusÑeplacementÖolicy");

5326 
i
=0, 
ôî©i⁄
 = 1;

5327 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

5328 
ôî©i⁄
 = iteration * 2;

5329 
m
;

5330 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

5332 if–
ª∂
->
±r_í
 &&Ñïl->
Æl_sh¨ed_í
 && (ª∂->
dú_sh¨î
[0][0] !()
Æl_sh¨î
) )

5333 
	`∑nic
("recallÖtr_enáll_shared_enÉrror \n");

5335 i‡(
cﬁÀ˘_°©s
)

5336 
ml2
->
ª∂a˚míts
++;

5338 
ml2_dú_blk_°©e
;

5339 
√w_vc
 = 0;

5340 
Êag
 = 0, 
sh¨î_num
 = 0;

5341 
i
=0; i<
ôî©i⁄
; i++)

5342 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]))

5343 
sh¨î_num
 ++;

5345 
evít
->
chûdCou¡
 = 0;

5346 
evít
->
sh¨î_num
 = 0;

5348 
i
=0; i<
ôî©i⁄
; i++)

5350 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]))

5354 
ml2_dú_blk_°©e
 = 
ª∂
->
dú_blk_°©e
[
i
];

5355 i‡–(
ml2_dú_blk_°©e
 =
MESI_SHARED
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) < 2)

5356 || (
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) != 1)

5357 || (
ml2_dú_blk_°©e
 =
MESI_EXCLUSIVE
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) != 1)

5358 || (
ml2_dú_blk_°©e
 =
MESI_INVALID
)

5360 
	`¥ötf
("state conflicts with sharer vector\n");

5362 
m
 = 0; m<
ôî©i⁄
; m++)

5364 
ª∂
->
dú_°©e
[
m
] = 
DIR_TRANSITION
;

5365 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

5367 
ª∂
->
±r_cur_evít
[
i
] = 
evít
;

5368 i‡(
ª∂
->
qblk_£t_shi·
)

5369 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << (
ˇche_ml2
->
èg_shi·
+
qblk_£t_shi·
)Ë+ (
ml2_£t
 << (ˇche_ml2->
£t_shi·
+qblk_set_shift));

5371 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << 
ˇche_ml2
->
èg_shi·
Ë+ (
ml2_£t
 << cache_ml2->
£t_shi·
Ë+ (
i
 << 
ˇche_dl1
[0]->set_shift);

5372 
evít
->
ödividuÆ_chûdCou¡
[
i
] = 0;

5373 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

5375 if(((
ª∂
->
dú_sh¨î
[
i
][
Thªadid
/64]) & (()1 << (Threadid%64))) == (()1 << (Threadid%64)))

5377 
ªˇŒ_öv_num
++;

5378 if(
cﬁÀ˘_°©s
)

5379 
ˇche_ml2
->
övÆid©i⁄s
 ++;

5380 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

5381 if(
√w_evít
 =
NULL
)

5382 
	`∑nic
("Out of Virtual Memory");

5383 
övﬁve_4_h›s_miss
 ++;

5384 
√w_evít
->
c⁄f_bô
 = -1;

5385 
√w_evít
->
ªq_time
 = 0;

5386 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

5387 
√w_evít
->
≥ndög_Êag
 = 0;

5388 
√w_evít
->
›
 = 
evít
->op;

5389 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

5392 
√w_evít
->
qblk_£t_shi·
 = 
ª∂
->qblk_set_shift;

5393 
√w_evít
->
ml2_dú_blk_°©e
 = ml2_dir_blk_state;

5395 
√w_evít
->
isPª„tch
 = 0;

5396 
√w_evít
->
ãmpID
 = 
evít
->tempID;

5397 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

5398 
√w_evít
->
ª£nd
 = 0;

5399 
√w_evít
->
blk1
 = 
ª∂
;

5400 
√w_evít
->
addr
 = 
ª∂
->addr;

5401 
√w_evít
->
˝
 = 
evít
->cp;

5402 
√w_evít
->
vp
 = 
NULL
;

5403 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

5404 
√w_evít
->
ud©a
 = 
NULL
;

5405 
√w_evít
->
rs
 = 
NULL
;

5406 
√w_evít
->
•ec_mode
 = 0;

5407 
√w_evít
->
§c1
 = 
evít
->
des1
;

5408 
√w_evít
->
§c2
 = 
evít
->
des2
;

5409 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

5410 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

5411 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

5412 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5413 
√w_evít
->
∑ª¡
 = 
evít
;

5414 
√w_evít
->
blk_dú
 = 
ª∂
;

5415 
√w_evít
->
d©a_ª∂y
 = 1;

5416 
evít
->
sh¨î_num
 = sharer_num;

5417 
evít
->
blk_dú
 = 
ª∂
;

5418 
evít
->
chûdCou¡
++;

5419 
evít
->
ödividuÆ_chûdCou¡
[
i
] ++;

5421 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
√w_vc
);

5423 
	`dú_evítq_ö£π
(
√w_evít
);

5426 
Êag
 = 1;

5428 if(
ª∂
->
qblk_£t_shi·
)

5430 
ªad_Q_öô_QR_num
++;

5431 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

5432 
ªad_Q_öô_QR_s_num
++;

5433 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

5434 
ªad_Q_öô_QR_ed_num
++;

5437 
ªad_Q_öô_SR_num
++;

5438 
ªˇŒ_num
++;

5439 if(
ª∂
->
Æl_sh¨ed_í
)

5441 
ª∂
->
Æl_sh¨ed_í
 = 0;

5442 
PVC_ªˇŒ_Æl_shr_num
++;

5445 
sh¨î_di°r
[
evít
->
chûdCou¡
] ++;

5446 
	`IsNeighb‹_sh¨î
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
);

5449 if(
Êag
 == 1)

5452 if(
cﬁÀ˘_°©s
)

5453 
dl2
->
ª∂Inv
++;

5454 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

5455 
ª∂
->
addr
 =áddr;

5456 
ª∂
->
ègid
.
èg
 = 
ml2_èg
;

5457 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

5458 
m
=0; m<
ôî©i⁄
; m++)

5460 
ª∂
->
dú_sh¨î
[
m
][
ãmpID
/64] = 0;

5461 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

5463 i‡(
qblk_£t_shi·
)

5464 
ª∂
->
qblk_£t_shi·
 = 1;

5466 
ª∂
->
qblk_£t_shi·
 = 0;

5471 
m
=0;m<
ôî©i⁄
;m++)

5473 
ª∂
->
±r_cur_evít
[
m
] = 
NULL
;

5474 
ª∂
->
dú_°©e
[
m
] = 
DIR_STABLE
;

5475 
ª∂
->
dú_sh¨î
[
m
][
ãmpID
/64] = 0;

5476 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

5477 
ª∂
->
dú_dúty
[
m
] = -1;

5478 
ª∂
->
ex˛usive_time
[
m
] = 
sim_cy˛e
;

5480 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

5481 
ª∂
->
ªady
 = 
sim_cy˛e
;

5482 
ª∂
->
ègid
.
èg
 = 
ml2_èg
;

5483 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

5484 i‡(
qblk_£t_shi·
)

5485 
ª∂
->
qblk_£t_shi·
 = 1;

5487 
ª∂
->
qblk_£t_shi·
 = 0;

5488 
ª∂
->
addr
 =áddr;

5489 i‡(
ª∂
->
way_¥ev
 && 
ml2
->
pﬁicy
 =
LRU
)

5490 
	`upd©e_way_li°
(&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

5491 i‡(
ml2
->
hsize
)

5492 
	`lök_hèb_ít
(
ml2
, &ml2->
£ts
[
ml2_£t
], 
ª∂
);

5493 
ml2
->
œ°_èg£tid
.
èg
 = 0;

5494 
ml2
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

5495 
ml2
->
œ°_blk
 = 
ª∂
;

5497 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

5499 
ml2
->
d©a_ac˚ss
 ++;

5500 
övﬁve_2_h›s
 ++;

5501 if(
evít
->
rs
)

5502 if(
evít
->
rs
->
›
 =
LDL_L
)

5503 
lﬂd_lök_sh¨ed
 ++;

5504 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5505 
ª∂
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

5506 
ª∂
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

5508 
ve˘‹_cou¡
;

5509 
ve˘‹_cou¡
 = 
	`ve˘‹_cou¡_func
(
ª∂
);

5515 
PVC_ve˘‹_di°r_ªc‹d_num
++;

5516 
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

5517 
ˇche_ml2
->
£ts
[
ml2_£t
].
PVC_ve˘‹_di°r_ªc‹d_num
++;

5518 
ˇche_ml2
->
£ts
[
ml2_£t
].
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

5520 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5522 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5523 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

5526 
	`¥ötf
("directory is for data segment\n");

5528 
evít
->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

5529 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

5530 
evít
->
§c1
 +evít->
des1
;

5531 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5532 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5533 
evít
->
§c2
 +evít->
des2
;

5534 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5535 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5536 
evít
->
¥o˚ssögD⁄e
 = 0;

5537 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5538 
evít
->
∑ª¡
 = 
NULL
;

5539 
evít
->
blk_dú
 = 
NULL
;

5540 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

5541 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

5542 
	`dú_evítq_ö£π
(
evít
);

5548 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

5549 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

5550 
evít
->
L2miss_Êag
 = 1;

5551 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

5552 if(
evít
->
isSyncAc˚ss
)

5553 
Sync_L2_miss
 ++;

5554 if(!
m©chnum
)

5556 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

5558 if(!
œ°_L2_mshr_fuŒ
)

5560 
L2_mshr_fuŒ
 ++;

5561 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

5563 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

5565 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

5567 
evít
->
§c1
 +evít->
des1
;

5568 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5569 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5570 
evít
->
§c2
 +evít->
des2
;

5571 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5572 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5573 
evít
->
›î©i⁄
 = 
NACK
;

5574 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5575 
evít
->
¥o˚ssögD⁄e
 = 0;

5576 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5577 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5578 
	`dú_evítq_ö£π
(
evít
);

5583 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5584 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5585 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5586 
evít
->
Êù_Êag
 = 1;

5587 
Êù_cou¡î
 ++;

5588 
	`dú_evítq_ö£π
(
evít
);

5594 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

5595 if(
œ°_L2_mshr_fuŒ
)

5597 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

5598 
œ°_L2_mshr_fuŒ
 = 0;

5601 if(
cﬁÀ˘_°©s
)

5603 
ˇche_dl2
->
mis£s
 ++;

5604 
ˇche_dl2
->
dmis£s
 ++;

5605 
övﬁve_2_h›s_miss
 ++;

5607 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

5608 
evít
->
mshr_time
 = 
sim_cy˛e
;

5609 
evít
->
blk_dú
 = 
ª∂
;

5610 
DIRECTORY_EVENT
 *
√w_evít
;

5611 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

5612 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

5613 
√w_evít
->
cmd
 = 
Ród
;

5614 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

5615 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

5616 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5617 
	`dú_evítq_ö£π
(
√w_evít
);

5618 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5619 
evít_¸óãd
 = 
evít
;

5620 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

5625 
evít
->
isReqL2SecMiss
 = 1;

5626 if(
cﬁÀ˘_°©s
)

5628 
ˇche_dl2
->
ö_mshr
 ++;

5629 
ˇche_dl2
->
dö_mshr
 ++;

5631 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

5632 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5639 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

5641 i‡(
dl2_blk
->
way_¥ev
 && 
dl2
->
pﬁicy
 =
LRU
)

5642 
	`upd©e_way_li°
 (&
dl2
->
£ts
[
dl2_£t
], 
dl2_blk
, 
Hód
);

5644 
evít
->
isReqL2Hô
 = 1;

5645 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

5646 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

5647 if(
evít
->
rs
)

5648 if(
evít
->
rs
->
›
 =
LDL_L
)

5649 
lﬂd_lök_sh¨ed
 ++;

5650 
evít
->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

5651 
evít
->
§c1
 +evít->
des1
;

5652 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5653 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5654 
evít
->
§c2
 +evít->
des2
;

5655 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5656 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5657 
evít
->
¥o˚ssögD⁄e
 = 0;

5658 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5659 
evít
->
∑ª¡
 = 
NULL
;

5660 
evít
->
blk_dú
 = 
NULL
;

5661 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

5662 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

5663 
	`dú_evítq_ö£π
(
evít
);

5668 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

5669 
evít
->
L2miss_Êag
 = 1;

5670 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

5671 
evít
->
blk_dú
 = 
NULL
;

5672 if(
evít
->
isSyncAc˚ss
)

5673 
Sync_L2_miss
 ++;

5674 if(!
m©chnum
)

5676 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

5678 if(!
œ°_L2_mshr_fuŒ
)

5680 
L2_mshr_fuŒ
 ++;

5681 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

5683 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

5685 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

5687 
evít
->
§c1
 +evít->
des1
;

5688 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5689 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5690 
evít
->
§c2
 +evít->
des2
;

5691 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5692 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5693 
evít
->
›î©i⁄
 = 
NACK
;

5694 
evít
->
¥o˚ssögD⁄e
 = 0;

5695 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5696 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5697 
	`dú_evítq_ö£π
(
evít
);

5702 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5703 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5704 
evít
->
Êù_Êag
 = 1;

5705 
Êù_cou¡î
 ++;

5706 
	`dú_evítq_ö£π
(
evít
);

5712 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

5713 if(
œ°_L2_mshr_fuŒ
)

5715 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

5716 
œ°_L2_mshr_fuŒ
 = 0;

5719 if(
cﬁÀ˘_°©s
)

5721 
ˇche_dl2
->
mis£s
 ++;

5722 
ˇche_dl2
->
dmis£s
 ++;

5723 
övﬁve_2_h›s_miss
 ++;

5725 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

5726 
evít
->
mshr_time
 = 
sim_cy˛e
;

5727 
DIRECTORY_EVENT
 *
√w_evít
;

5728 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

5729 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

5730 
√w_evít
->
cmd
 = 
Ród
;

5731 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

5732 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

5733 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5734 
	`dú_evítq_ö£π
(
√w_evít
);

5735 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5736 
evít_¸óãd
 = 
evít
;

5737 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

5742 
evít
->
isReqL2SecMiss
 = 1;

5743 if(
cﬁÀ˘_°©s
)

5745 
ˇche_dl2
->
ö_mshr
 ++;

5746 
ˇche_dl2
->
dö_mshr
 ++;

5748 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

5754 
WRITE_UPDATE
 :

5755 
dˇche2_ac˚ss
++;

5756 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

5757 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

5758 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5759 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

5760 if(
	`födCacheSètus
(
ml2
, 
ml2_sub_£t
, 
ml2_sub_èg
, 
ml2_hödex
, &
ml2_blk
))

5762 if(
ml2_blk
->
qblk_£t_shi·
 == 0)

5764 
ml2_hô
 = 1;

5765 
ml2_èg
 = 
ml2_sub_èg
;

5766 
ml2_£t
 = 
ml2_sub_£t
;

5768 
wrôe_S_hô_num
++;

5771 
ml2_hô
 = 0;

5773 if(!
ml2_hô
 && 
	`födCacheSètus
(
ml2
, 
ml2_mul_£t
, 
ml2_mul_èg
, 
ml2_hödex
, &
ml2_blk
))

5775 
mu…i_hô_c⁄dôi⁄
;

5776 
mu…i_hô_c⁄dôi⁄
 = !
	`IsSh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
Ë|| !
mu…i_blk_ad≠_í
;

5777 if((
ml2_blk
->
qblk_£t_shi·
 =1Ë&& 
mu…i_hô_c⁄dôi⁄
)

5779 i‡–
mu…i_blk_ad≠_í
 && (
ml2_blk
->
dú_°©e
[
block_off£t
] !
DIR_TRANSITION
) )

5780 
	`¥ötf
("WRITE_UPDATE m_blkÉrrorÜike\n");

5781 
ml2_hô
 = 1;

5782 
ml2_èg
 = 
ml2_mul_èg
;

5783 
ml2_£t
 = 
ml2_mul_£t
;

5785 
wrôe_Q_hô_num
++;

5786 
mb_∑ö_cou¡
++;

5789 
ml2_hô
 = 0;

5792 if(
ml2_hô
)

5794 *
mu…ùÀ_sh¨îs
 = (*)
	`ˇŒoc
(4, ());

5795 
cuºítThªadId
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

5796 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

5797 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

5798 i‡(
ml2_blk
->
way_¥ev
 && 
ml2
->
pﬁicy
 =
LRU
)

5799 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ml2_blk
, 
Hód
);

5800 
evít
->
isReqL2Hô
 = 1;

5801 if(
ml2_blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

5803 
evít
->
isReqL2Tøns
 = 1;

5804 if(
ml2_blk
->
qblk_£t_shi·
)

5806 
wrôe_Q_hô_num
--;

5807 
mb_∑ö_cou¡
--;

5810 
wrôe_S_hô_num
--;

5811 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

5813 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

5814 
evít
->
§c1
 +evít->
des1
;

5815 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5816 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5817 
evít
->
§c2
 +evít->
des2
;

5818 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5819 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5820 
evít
->
›î©i⁄
 = 
NACK
;

5821 
evít
->
¥o˚ssögD⁄e
 = 0;

5822 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5823 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5824 
	`dú_evítq_ö£π
(
evít
);

5825 if(
cﬁÀ˘_°©s
)

5826 
ml2
->
dú_ac˚ss
 ++;

5831 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5832 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5833 
Êù_cou¡î
 ++;

5834 
evít
->
Êù_Êag
 = 1;

5835 
	`dú_evítq_ö£π
(
evít
);

5836 if(
cﬁÀ˘_°©s
)

5837 
ml2
->
dú_ac˚ss
 ++;

5842 if((!
	`IsEx˛usiveOrDúty
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
)Ë&& (ml2_blk->
dú_dúty
[block_offset] != -1) )

5844 i‡(
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] == ()1<<(tempID%64))

5846 i‡((!
ml2_blk
->
qblk_£t_shi·
Ë&& (!
mu…i_blk_ad≠_í
))

5847 
	`¥ötf
("WRITE_UPDATEÉrrorÜike\n");

5850 
	`∑nic
("DIR: Block canÇot be dirty state when it isÇotÉxclusive!");

5854 if(!
	`IsSh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
))

5856 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
Ë|| (
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] & ()1<<(tempID%64)))

5859 i‡(
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] & ()1<<(tempID%64))

5861 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

5862 
∑ckë_size
 = 
mëa_∑ckë_size
;

5866 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

5867 
∑ckë_size
 = 
d©a_∑ckë_size
;

5869 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5870 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5871 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

5872 
ml2_blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5873 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5875 
evít
->
§c1
 +evít->
des1
;

5876 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5877 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5878 
evít
->
§c2
 +evít->
des2
;

5879 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5880 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5882 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

5884 
evít
->
¥o˚ssögD⁄e
 = 0;

5885 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5886 
evít
->
∑ª¡
 = 
NULL
;

5887 
evít
->
blk_dú
 = 
NULL
;

5888 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

5889 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

5890 
	`dú_evítq_ö£π
(
evít
);

5894 
evít
->
¥o˚ssögD⁄e
 = 0;

5895 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5896 
evít
->
∑ª¡
 = 
NULL
;

5897 
evít
->
blk_dú
 = 
NULL
;

5898 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

5899 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

5900 
	`dú_evítq_ö£π
(
evít
);

5906 
evít
->
›î©i⁄
 = 
MISS_WRITE
;

5907 
evít
->
∑ª¡_›î©i⁄
 = 
MISS_WRITE
;

5909 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

5910 if(
ml2_blk
->
qblk_£t_shi·
)

5912 
wrôe_Q_hô_num
--;

5913 
mb_∑ö_cou¡
--;

5916 
wrôe_S_hô_num
--;

5918 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

5919 
evít
->
L2miss_Êag
 = 1;

5920 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

5921 if(
evít
->
isSyncAc˚ss
)

5922 
Sync_L2_miss
 ++;

5923 if(!
m©chnum
)

5925 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

5927 if(!
œ°_L2_mshr_fuŒ
)

5929 
L2_mshr_fuŒ
 ++;

5930 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

5932 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

5934 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

5936 
evít
->
§c1
 +evít->
des1
;

5937 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5938 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5939 
evít
->
§c2
 +evít->
des2
;

5940 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5941 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5942 
evít
->
›î©i⁄
 = 
NACK
;

5943 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5944 
evít
->
¥o˚ssögD⁄e
 = 0;

5945 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5946 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5947 
	`dú_evítq_ö£π
(
evít
);

5952 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5953 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5954 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5955 
evít
->
Êù_Êag
 = 1;

5956 
Êù_cou¡î
 ++;

5957 
	`dú_evítq_ö£π
(
evít
);

5963 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

5964 if(
œ°_L2_mshr_fuŒ
)

5966 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

5967 
œ°_L2_mshr_fuŒ
 = 0;

5970 if(
cﬁÀ˘_°©s
)

5972 
ˇche_dl2
->
mis£s
 ++;

5973 
ˇche_dl2
->
dmis£s
 ++;

5974 
övﬁve_2_h›s_miss
 ++;

5976 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

5977 
evít
->
mshr_time
 = 
sim_cy˛e
;

5978 
evít
->
blk_dú
 = 
ml2_blk
;

5979 
DIRECTORY_EVENT
 *
√w_evít
;

5980 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

5981 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

5982 
√w_evít
->
cmd
 = 
Ród
;

5983 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

5984 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

5985 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5986 
	`dú_evítq_ö£π
(
√w_evít
);

5987 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5988 
evít_¸óãd
 = 
evít
;

5989 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

5994 
evít
->
isReqL2SecMiss
 = 1;

5995 if(
cﬁÀ˘_°©s
)

5997 
ˇche_dl2
->
ö_mshr
 ++;

5998 
ˇche_dl2
->
dö_mshr
 ++;

6000 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

6001 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6008 if(
ml2_blk
->
qblk_£t_shi·
 && 
mu…i_blk_ad≠_í
)

6009 
	`∑nic
("m_blk write canÇotÑearch here write update");

6010 if–
ml2_blk
->
±r_í
 && ml2_blk->
Æl_sh¨ed_í
 && (ml2_blk->
dú_sh¨î
[0][0] !()
Æl_sh¨î
) )

6011 
	`∑nic
("writeÖtr_enáll_shared_enÉrror \n");

6012 if–
ml2_blk
->
Æl_sh¨ed_í
 )

6014 
ml2_blk
->
Æl_sh¨ed_í
 = 0;

6015 
PVC_wrôe_Æl_shr_num
++;

6017 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

6018 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

6019 i‡(!(
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] & ()1<<(tempID%64)))

6021 
evít
->
›î©i⁄
 = 
MISS_WRITE
;

6022 
evít
->
∑ª¡_›î©i⁄
 = 
MISS_WRITE
;

6024 
evít
->
blk_dú
 = 
ml2_blk
;

6025 
evít
->
chûdCou¡
 = 0;

6026 
mu…ùÀ_sh¨îs
 = 
ml2_blk
->
dú_sh¨î
[
block_off£t
];

6027 
shr_d©a_ªq
 = 0;

6029 i‡(
evít
->
›î©i⁄
 =
MISS_WRITE
)

6031 i‡(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

6033 
shr_d©a_ªq
 = 0;

6034 
dl2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

6037 
shr_d©a_ªq
 = 1;

6039 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

6041 if((((
mu…ùÀ_sh¨îs
[
Thªadid
/64]Ë& (()1 << (Thªadid%64))Ë=(()1 << (Thªadid%64))Ë&& (Thªadid !
ãmpID
))

6043 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

6044 if(
√w_evít
 =
NULL
)

6045 
	`∑nic
("Out of Virtual Memory");

6046 
√w_evít
->
∑ª¡
 = 
evít
;

6047 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

6050 if(
ml2_blk
->
qblk_£t_shi·
 && 
mu…i_blk_ad≠_í
)

6051 
	`∑nic
("we doÇot writeÅo m_blk");

6052 
√w_evít
->
qblk_£t_shi·
 = 
ml2_blk
->qblk_set_shift;

6054 
√w_evít
->
§c1
 = 
cuºítThªadId
/
mesh_size
+
MEM_LOC_SHIFT
;

6055 
√w_evít
->
§c2
 = 
cuºítThªadId
%
mesh_size
;

6056 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

6057 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

6058 i‡(
shr_d©a_ªq
)

6060 
evít
->
shr_d©a_ªq
 = 1;

6061 
√w_evít
->
shr_d©a_ªq
 = 1;

6062 
shr_d©a_ªq
 = 0;

6064 
√w_evít
->
ªq_time
 = 0;

6065 
√w_evít
->
c⁄f_bô
 = -1;

6066 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

6067 
√w_evít
->
≥ndög_Êag
 = 0;

6068 
√w_evít
->
›
 = 
evít
->op;

6069 
√w_evít
->
isPª„tch
 = 0;

6070 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

6071 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

6072 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6073 
√w_evít
->
ãmpID
 =ÅempID;

6074 
√w_evít
->
ª£nd
 = 0;

6075 
√w_evít
->
blk_dú
 = 
ml2_blk
;

6076 
√w_evít
->
˝
 = 
evít
->cp;

6077 
√w_evít
->
addr
 = 
evít
->addr;

6078 
√w_evít
->
vp
 = 
NULL
;

6079 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

6080 
√w_evít
->
ud©a
 = 
NULL
;

6081 
√w_evít
->
cmd
 = 
Wrôe
;

6082 
√w_evít
->
rs
 = 
evít
->rs;

6083 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

6084 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

6085 
√w_evít
->
•ec_mode
 = 0;

6086 
√w_evít
->
d©a_ª∂y
 = 1;

6088 
evít
->
chûdCou¡
++;

6089 
evít
->
dúty_Êag
 = 1;

6091 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6092 
	`dú_evítq_ö£π
(
√w_evít
);

6101 
ml2_hô
 = 
	`födCacheSètus
(
ml2
, 
ml2_mul_£t
, 
ml2_mul_èg
, 
ml2_hödex
, &
ml2_blk
);

6102 if(
ml2_hô
)

6103 
ml2_ed
 = 
	`Is_Ex˛usiveOrDúty
(
ml2_blk
->
dú_sh¨î
[
block_off£t
]);

6104 if(
ml2_hô
)

6106 
ml2_èg
 = 
ml2_sub_èg
;

6107 
ml2_£t
 = 
ml2_sub_£t
;

6108 if(
ml2_ed
)

6109 
wrôe_S_öô_ed_num
++;

6111 
wrôe_S_öô_s_num
++;

6115 
ml2_èg
 = 
ml2_mul_èg
;

6116 
ml2_£t
 = 
ml2_mul_£t
;

6117 
wrôe_Q_öô_num
++;

6120 
ml2
->
pﬁicy
)

6122 
i
;

6123 
bödex
;

6124 
LRU
:

6125 
FIFO
:

6126 
i
 = 
ml2
->
assoc
;

6128 if(
i
 == 0) ;

6129 
i
--;

6130 
ª∂
 = 
ml2
->
£ts
[
ml2_£t
].
way_èû
;

6131 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

6133 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
));

6135 i‡–
ª∂_ad_í
 && ( 
ª∂
->
qblk_£t_shi·
 == 1 ) )

6137 
ˇche_blk_t
 *
bak
;

6138 
bak
 = 
ª∂
;

6140 
i
 = 
ml2
->
assoc
;

6142 if(
i
 == 0) ;

6143 
i
--;

6144 
ª∂
 = 
ml2
->
£ts
[
ml2_£t
].
way_èû
;

6145 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

6147 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
Ë|| (ª∂->
qblk_£t_shi·
 == 1) );

6149 i‡–
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
Ë|| (ª∂->
qblk_£t_shi·
 == 1))

6151 
ª∂
 = 
bak
;

6152 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

6156 if(
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
))

6158 
Êù_cou¡î
 ++;

6159 
evít
->
Êù_Êag
 = 1;

6160 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

6161 
	`dú_evítq_ö£π
(
evít
);

6165 
R™dom
:

6166 
bödex
 = 
	`myønd
 (Ë& (
dl2
->
assoc
 - 1);

6167 
ª∂
 = 
	`CACHE_BINDEX
 (
dl2
, dl2->
£ts
[
dl2_£t
].
blks
, 
bödex
);

6170 
	`∑nic
 ("bogusÑeplacementÖolicy");

6175 i‡(
ml2_hô
 && 
qblk_£t_shi·
 && (
ve˘‹_num
!=0Ë&& (
ª∂
->
±r_í
Ë&& (
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
])>1) )

6177 
ve˘‹_avaûabÀ
;

6178 
sh¨î_num
;

6179 
ãmp_thªadid
;

6180 
ˇche_blk_t
 *
ve˘‹_blk
;

6182 
ve˘‹_avaûabÀ
 = 
	`ve˘‹_avaûabÀ_func
(&
ve˘‹_blk
, 
ml2_£t
);

6186 if(!
ve˘‹_avaûabÀ
)

6188 
PVC_Êù_num
++;

6189 
evít
->
isReqL2Tøns
 = 1;

6190 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

6192 
evít
->
§c1
 +evít->
des1
;

6193 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6194 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6195 
evít
->
§c2
 +evít->
des2
;

6196 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6197 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6198 
evít
->
›î©i⁄
 = 
NACK
;

6199 
evít
->
¥o˚ssögD⁄e
 = 0;

6200 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6201 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6202 
	`dú_evítq_ö£π
(
evít
);

6203 if(
cﬁÀ˘_°©s
)

6204 
ml2
->
dú_ac˚ss
 ++;

6209 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

6210 
Êù_cou¡î
 ++;

6211 
evít
->
Êù_Êag
 = 1;

6212 
	`dú_evítq_ö£π
(
evít
);

6213 if(
cﬁÀ˘_°©s
)

6214 
ml2
->
dú_ac˚ss
 ++;

6220 
sh¨î_num
 = 
	`Is_Sh¨ed
(
ve˘‹_blk
->
dú_sh¨î
[
block_off£t
]);

6222 
PVC_exch™ge_num
++;

6223 
PVC_exch_vec_shr_di°r
[
sh¨î_num
]++;

6225 if–
sh¨î_num
 < 2 )

6227 
PVC_dowm_no_öv_num
++;

6229 
ª∂
->
±r_í
 = 0;

6231 
ve˘‹_blk
->
±r_í
 = 1;

6232 if(
ve˘‹_blk
->
Æl_sh¨ed_í
)

6233 
	`∑nic
("vector_blkáll_shared_en illegal\n");

6234 if–
ve˘‹_blk
->
dú_blk_°©e
[0] =
MESI_SHARED
 )

6235 
	`∑nic
("stateÉrror\n");

6237 if–
sh¨î_num
 =
mesh_size
*mesh_size )

6239 
PVC_up_no_add_num
++;

6241 
ª∂
->
±r_í
 = 0;

6243 
ve˘‹_blk
->
±r_í
 = 1;

6244 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 1;

6245 if(
ve˘‹_blk
->
dú_sh¨î
[0][0] !()
Æl_sh¨î
)

6246 
	`∑nic
("all_shared_en dir_sharerÉrrpr\n");

6247 if–
ve˘‹_blk
->
dú_blk_°©e
[0] !
MESI_SHARED
 )

6248 
	`∑nic
("stateÉrror\n");

6252 if(
sh¨î_num
 > 
sh¨î_thªshﬁd
)

6254 
PVC_up_add_num
++;

6255 
PVC_up_add_shr_num
 +
mesh_size
*mesh_size-
sh¨î_num
;

6256 
PVC_up_add_shr_di°r
[
mesh_size
*mesh_size-
sh¨î_num
]++;

6258 
ª∂
->
±r_í
 = 0;

6260 
ve˘‹_blk
->
±r_í
 = 1;

6261 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 1;

6262 
ve˘‹_blk
->
dú_sh¨î
[0][0] = ()
Æl_sh¨î
;

6263 if–
ve˘‹_blk
->
dú_blk_°©e
[0] !
MESI_SHARED
 )

6264 
	`∑nic
("stateÉrror\n");

6268 
PVC_dowm_öv_num
++;

6269 
PVC_dowm_öv_shr_num
 +
sh¨î_num
-1;

6270 
PVC_dowm_öv_shr_di°r
[
sh¨î_num
-1]++;

6272 
ª∂
->
±r_í
 = 0;

6274 
ml2_dú_blk_°©e
 = 
ve˘‹_blk
->
dú_blk_°©e
[0];

6275 
survive_í
 = 1, 
surviv‹
 = -1;

6276 
DIRECTORY_EVENT
 *
cﬁÀ˘_evít
 = 
	`Æloˇã_evít
(0);

6277 if(
cﬁÀ˘_evít
 =
NULL
)

6278 
	`∑nic
("Out of Virtual Memory");

6280 
ve˘‹_blk
->
±r_í
 = 1;

6281 if(
ve˘‹_blk
->
Æl_sh¨ed_í
)

6282 
	`∑nic
("vector_blkáll_shared_en illegal\n");

6283 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 0;

6284 
ve˘‹_blk
->
dú_blk_°©e
[0] = 
MESI_EXCLUSIVE
;

6285 
ve˘‹_blk
->
dú_°©e
[0] = 
DIR_TRANSITION
;

6286 
ve˘‹_blk
->
±r_cur_evít
[0] = 
cﬁÀ˘_evít
;

6287 i‡(
ve˘‹_blk
->
qblk_£t_shi·
)

6288 
ve˘‹_blk
->
addr
 = (ve˘‹_blk->
ègid
.
èg
 << (
ˇche_ml2
->
èg_shi·
+
qblk_£t_shi·
)Ë+ (
ml2_£t
 << (ˇche_ml2->
£t_shi·
+qblk_set_shift));

6290 
ve˘‹_blk
->
addr
 = (ve˘‹_blk->
ègid
.
èg
 << 
ˇche_ml2
->
èg_shi·
Ë+ (
ml2_£t
 << cache_ml2->
£t_shi·
);

6292 
cﬁÀ˘_evít
->
chûdCou¡
 = 0;

6293 
cﬁÀ˘_evít
->
ödividuÆ_chûdCou¡
[0] = 0;

6294 
cﬁÀ˘_evít
->
sh¨î_num
 = 1;

6295 
cﬁÀ˘_evít
->
blk_dú
 = 
ve˘‹_blk
;

6296 
cﬁÀ˘_evít
->
›î©i⁄
 = 
VEC_DEGRADE
;

6298 
ãmp_thªadid
 = 0;Åemp_thªadid < 
numc⁄ãxts
;Åemp_threadid++)

6300 if(((
ve˘‹_blk
->
dú_sh¨î
[0][
ãmp_thªadid
/64]) & (()1 << (temp_threadid%64))) == (()1 << (temp_threadid%64)))

6302 if(
survive_í
)

6304 
surviv‹
 = 
ãmp_thªadid
;

6305 
survive_í
 = 0;

6308 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

6309 if(
√w_evít
 =
NULL
)

6310 
	`∑nic
("Out of Virtual Memory");

6313 
√w_evít
->
qblk_£t_shi·
 = 
ve˘‹_blk
->qblk_set_shift;

6314 
√w_evít
->
ml2_dú_blk_°©e
 = ml2_dir_blk_state;

6315 
√w_evít
->
addr
 = 
ve˘‹_blk
->addr;

6316 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

6317 
√w_evít
->
∑ª¡
 = 
cﬁÀ˘_evít
;

6318 
√w_evít
->
blk_dú
 = 
ve˘‹_blk
;

6319 
√w_evít
->
ãmpID
 = 
evít
->tempID;

6320 
√w_evít
->
˝
 = 
evít
->cp;

6321 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

6322 
√w_evít
->
§c1
 = 
evít
->
des1
;

6323 
√w_evít
->
§c2
 = 
evít
->
des2
;

6324 
√w_evít
->
des1
 = 
ãmp_thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

6325 
√w_evít
->
des2
 = 
ãmp_thªadid
%
mesh_size
;

6327 
√w_evít
->
isPª„tch
 = 0;

6328 
√w_evít
->
c⁄f_bô
 = -1;

6329 
√w_evít
->
ªq_time
 = 0;

6330 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

6331 
√w_evít
->
≥ndög_Êag
 = 0;

6332 
√w_evít
->
›
 = 
cﬁÀ˘_evít
->op;

6333 
√w_evít
->
vp
 = 
NULL
;

6334 
√w_evít
->
ud©a
 = 
NULL
;

6335 
√w_evít
->
rs
 = 
NULL
;

6336 
√w_evít
->
•ec_mode
 = 0;

6337 
√w_evít
->
d©a_ª∂y
 = 1;

6340 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

6341 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6342 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

6343 
	`dú_evítq_ö£π
(
√w_evít
);

6345 
cﬁÀ˘_evít
->
chûdCou¡
++;

6346 
cﬁÀ˘_evít
->
ödividuÆ_chûdCou¡
[0] ++;

6349 if(
surviv‹
 == -1)

6350 
	`∑nic
("survivorÉrror\n");

6351 
ve˘‹_blk
->
dú_sh¨î
[0][
surviv‹
/64] = (()1 << (survivor%64));

6358 
i
=0, 
ôî©i⁄
 = 1;

6359 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

6360 
ôî©i⁄
 = iteration * 2;

6361 
m
;

6362 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

6364 if–
ª∂
->
±r_í
 &&Ñïl->
Æl_sh¨ed_í
 && (ª∂->
dú_sh¨î
[0][0] !()
Æl_sh¨î
) )

6365 
	`∑nic
("recallÖtr_enáll_shared_enÉrror \n");

6366 i‡(
cﬁÀ˘_°©s
)

6367 
ml2
->
ª∂a˚míts
++;

6369 
ml2_dú_blk_°©e
;

6370 
√w_vc
 = 0;

6371 
Êag
 = 0, 
sh¨î_num
 = 0;

6372 
i
=0; i<
ôî©i⁄
; i++)

6373 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]))

6374 
sh¨î_num
 ++;

6376 
evít
->
chûdCou¡
 = 0;

6377 
evít
->
sh¨î_num
 = 0;

6379 
i
=0; i<
ôî©i⁄
; i++)

6381 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]))

6385 
ml2_dú_blk_°©e
 = 
ª∂
->
dú_blk_°©e
[
i
];

6386 i‡–(
ml2_dú_blk_°©e
 =
MESI_SHARED
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) < 2)

6387 || (
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) != 1)

6388 || (
ml2_dú_blk_°©e
 =
MESI_EXCLUSIVE
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) != 1)

6389 || (
ml2_dú_blk_°©e
 =
MESI_INVALID
)

6391 
	`¥ötf
("state conflicts with sharer vector\n");

6393 
m
 = 0; m<
ôî©i⁄
; m++)

6395 
ª∂
->
dú_°©e
[
m
] = 
DIR_TRANSITION
;

6396 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

6398 
ª∂
->
±r_cur_evít
[
i
] = 
evít
;

6399 i‡(
ª∂
->
qblk_£t_shi·
)

6400 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << (
ˇche_ml2
->
èg_shi·
+
qblk_£t_shi·
)Ë+ (
ml2_£t
 << (ˇche_ml2->
£t_shi·
+qblk_set_shift));

6402 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << 
ˇche_ml2
->
èg_shi·
Ë+ (
ml2_£t
 << cache_ml2->
£t_shi·
Ë+ (
i
 << 
ˇche_dl1
[0]->set_shift);

6403 
evít
->
ödividuÆ_chûdCou¡
[
i
] = 0;

6404 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

6406 if(((
ª∂
->
dú_sh¨î
[
i
][
Thªadid
/64]) & (()1 << (Threadid%64))) == (()1 << (Threadid%64)))

6408 
ªˇŒ_öv_num
++;

6409 if(
cﬁÀ˘_°©s
)

6410 
ˇche_ml2
->
övÆid©i⁄s
 ++;

6411 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

6412 if(
√w_evít
 =
NULL
)

6413 
	`∑nic
("Out of Virtual Memory");

6414 
övﬁve_4_h›s_miss
 ++;

6415 
√w_evít
->
c⁄f_bô
 = -1;

6416 
√w_evít
->
ªq_time
 = 0;

6417 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

6418 
√w_evít
->
≥ndög_Êag
 = 0;

6419 
√w_evít
->
›
 = 
evít
->op;

6420 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

6423 
√w_evít
->
qblk_£t_shi·
 = 
ª∂
->qblk_set_shift;

6424 
√w_evít
->
ml2_dú_blk_°©e
 = ml2_dir_blk_state;

6426 
√w_evít
->
isPª„tch
 = 0;

6427 
√w_evít
->
ãmpID
 = 
evít
->tempID;

6428 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

6429 
√w_evít
->
ª£nd
 = 0;

6430 
√w_evít
->
blk1
 = 
ª∂
;

6431 
√w_evít
->
addr
 = 
ª∂
->addr;

6432 
√w_evít
->
˝
 = 
evít
->cp;

6433 
√w_evít
->
vp
 = 
NULL
;

6434 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

6435 
√w_evít
->
ud©a
 = 
NULL
;

6436 
√w_evít
->
rs
 = 
NULL
;

6437 
√w_evít
->
•ec_mode
 = 0;

6438 
√w_evít
->
§c1
 = 
evít
->
des1
;

6439 
√w_evít
->
§c2
 = 
evít
->
des2
;

6440 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

6441 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

6442 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

6443 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6444 
√w_evít
->
∑ª¡
 = 
evít
;

6445 
√w_evít
->
blk_dú
 = 
ª∂
;

6446 
√w_evít
->
d©a_ª∂y
 = 1;

6447 
evít
->
sh¨î_num
 = sharer_num;

6448 
evít
->
blk_dú
 = 
ª∂
;

6449 
evít
->
chûdCou¡
++;

6450 
evít
->
ödividuÆ_chûdCou¡
[
i
] ++;

6452 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
√w_vc
);

6454 
	`dú_evítq_ö£π
(
√w_evít
);

6457 
Êag
 = 1;

6459 if(
ml2_hô
)

6460 if(
ml2_ed
)

6461 if(
ª∂
->
qblk_£t_shi·
)

6463 
wrôe_S_öô_ed_QR_num
++;

6464 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

6465 
wrôe_S_öô_ed_QR_s_num
++;

6466 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

6467 
wrôe_S_öô_ed_QR_ed_num
++;

6469 
wrôe_S_öô_ed_SR_num
++;

6471 if(
ª∂
->
qblk_£t_shi·
)

6473 
wrôe_S_öô_s_QR_num
++;

6474 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

6475 
wrôe_S_öô_s_QR_s_num
++;

6476 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

6477 
wrôe_S_öô_s_QR_ed_num
++;

6479 
wrôe_S_öô_s_SR_num
++;

6481 if(
ª∂
->
qblk_£t_shi·
)

6483 
wrôe_Q_öô_QR_num
++;

6484 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

6485 
wrôe_Q_öô_QR_s_num
++;

6486 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

6487 
wrôe_Q_öô_QR_ed_num
++;

6489 
wrôe_Q_öô_SR_num
++;

6490 
ªˇŒ_num
++;

6491 if(
ª∂
->
Æl_sh¨ed_í
)

6493 
ª∂
->
Æl_sh¨ed_í
 = 0;

6494 
PVC_ªˇŒ_Æl_shr_num
++;

6497 
sh¨î_di°r
[
evít
->
chûdCou¡
] ++;

6498 
	`IsNeighb‹_sh¨î
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
);

6501 if(
Êag
 == 1)

6504 if(
cﬁÀ˘_°©s
)

6505 
dl2
->
ª∂Inv
++;

6507 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

6508 
ª∂
->
addr
 =áddr;

6509 
ª∂
->
ègid
.
èg
 = 
ml2_èg
;

6510 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

6511 
m
=0; m<
ôî©i⁄
; m++)

6513 
ª∂
->
dú_sh¨î
[
m
][
ãmpID
/64] = 0;

6514 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

6517 if(
ml2_hô
 && 
qblk_£t_shi·
)

6519 if–(
ª∂
->
±r_í
Ë&& (
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
])>1) )

6520 
	`∑nic
("unableÅo copy\n");

6521 
ª∂
->
qblk_£t_shi·
 = 0;

6522 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = 
ml2_blk
->dir_sharer[block_offset][tempID/64];

6523 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
ml2_blk
->dir_blk_state[block_offset];

6524 
ª∂
->
dú_dúty
[
block_off£t
] = 
ml2_blk
->dir_dirty[block_offset];

6526 i‡(
qblk_£t_shi·
)

6527 
ª∂
->
qblk_£t_shi·
 = 1;

6529 
ª∂
->
qblk_£t_shi·
 = 0;

6534 
m
=0;m<
ôî©i⁄
;m++)

6536 
ª∂
->
±r_cur_evít
[
m
] = 
NULL
;

6537 
ª∂
->
dú_°©e
[
m
] = 
DIR_STABLE
;

6538 
ª∂
->
dú_sh¨î
[
m
][
ãmpID
/64] = 0;

6539 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

6540 
ª∂
->
dú_dúty
[
m
] = -1;

6541 
ª∂
->
ex˛usive_time
[
m
] = 
sim_cy˛e
;

6543 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

6544 
ª∂
->
ªady
 = 
sim_cy˛e
;

6545 
ª∂
->
ègid
.
èg
 = 
ml2_èg
;

6546 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

6547 if(
ml2_hô
 && 
qblk_£t_shi·
)

6548 
ª∂
->
qblk_£t_shi·
 = 0;

6549 i‡(
qblk_£t_shi·
)

6550 
ª∂
->
qblk_£t_shi·
 = 1;

6552 
ª∂
->
qblk_£t_shi·
 = 0;

6553 
ª∂
->
addr
 =áddr;

6554 i‡(
ª∂
->
way_¥ev
 && 
ml2
->
pﬁicy
 =
LRU
)

6555 
	`upd©e_way_li°
(&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

6556 i‡(
ml2
->
hsize
)

6557 
	`lök_hèb_ít
(
ml2
, &ml2->
£ts
[
ml2_£t
], 
ª∂
);

6558 
ml2
->
œ°_èg£tid
.
èg
 = 0;

6559 
ml2
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

6560 
ml2
->
œ°_blk
 = 
ª∂
;

6563 i‡(
ml2_hô
 && 
qblk_£t_shi·
)

6565 if–(
ª∂
->
±r_í
Ë&& (
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
])>1) )

6566 
	`∑nic
("unableÅo copy\n");

6567 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = 
ml2_blk
->dir_sharer[block_offset][tempID/64];

6568 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
ml2_blk
->dir_blk_state[block_offset];

6569 
ª∂
->
dú_dúty
[
block_off£t
] = 
ml2_blk
->dir_dirty[block_offset];

6570 
evít
->
whí
 = 
sim_cy˛e
;

6571 
evít
->
no_L2_dñay
 = 1;

6572 
	`dú_evítq_ö£π
(
evít
);

6576 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

6578 
ml2
->
d©a_ac˚ss
 ++;

6579 
övﬁve_2_h›s
 ++;

6580 if(
evít
->
rs
)

6581 if(
evít
->
rs
->
›
 =
LDL_L
)

6582 
lﬂd_lök_sh¨ed
 ++;

6583 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6584 
ª∂
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

6585 
ª∂
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

6586 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

6588 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6589 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

6590 
ª∂
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

6593 
	`¥ötf
("directory is for data segment\n");

6595 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

6596 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

6597 
evít
->
§c1
 +evít->
des1
;

6598 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6599 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6600 
evít
->
§c2
 +evít->
des2
;

6601 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6602 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6603 
evít
->
¥o˚ssögD⁄e
 = 0;

6604 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6605 
evít
->
∑ª¡
 = 
NULL
;

6606 
evít
->
blk_dú
 = 
NULL
;

6607 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

6608 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

6609 
	`dú_evítq_ö£π
(
evít
);

6615 
evít
->
›î©i⁄
 = 
MISS_WRITE
;

6616 
evít
->
∑ª¡_›î©i⁄
 = 
MISS_WRITE
;

6617 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

6618 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

6619 
evít
->
L2miss_Êag
 = 1;

6620 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

6621 if(
evít
->
isSyncAc˚ss
)

6622 
Sync_L2_miss
 ++;

6623 if(!
m©chnum
)

6625 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

6627 if(!
œ°_L2_mshr_fuŒ
)

6629 
L2_mshr_fuŒ
 ++;

6630 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

6632 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

6634 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

6636 
evít
->
§c1
 +evít->
des1
;

6637 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6638 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6639 
evít
->
§c2
 +evít->
des2
;

6640 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6641 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6642 
evít
->
›î©i⁄
 = 
NACK
;

6643 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6644 
evít
->
¥o˚ssögD⁄e
 = 0;

6645 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6646 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6647 
	`dú_evítq_ö£π
(
evít
);

6652 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6653 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

6654 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

6655 
evít
->
Êù_Êag
 = 1;

6656 
Êù_cou¡î
 ++;

6657 
	`dú_evítq_ö£π
(
evít
);

6663 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

6664 if(
œ°_L2_mshr_fuŒ
)

6666 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

6667 
œ°_L2_mshr_fuŒ
 = 0;

6670 if(
cﬁÀ˘_°©s
)

6672 
ˇche_dl2
->
mis£s
 ++;

6673 
ˇche_dl2
->
dmis£s
 ++;

6674 
övﬁve_2_h›s_miss
 ++;

6676 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

6677 
evít
->
mshr_time
 = 
sim_cy˛e
;

6678 
evít
->
blk_dú
 = 
ª∂
;

6679 
DIRECTORY_EVENT
 *
√w_evít
;

6680 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

6681 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

6682 
√w_evít
->
cmd
 = 
Ród
;

6683 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

6684 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

6685 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6686 
	`dú_evítq_ö£π
(
√w_evít
);

6687 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6688 
evít_¸óãd
 = 
evít
;

6689 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

6694 
evít
->
isReqL2SecMiss
 = 1;

6695 if(
cﬁÀ˘_°©s
)

6697 
ˇche_dl2
->
ö_mshr
 ++;

6698 
ˇche_dl2
->
dö_mshr
 ++;

6700 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

6701 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6708 
MISS_WRITE
 :

6709 
dˇche2_ac˚ss
++;

6710 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

6711 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

6712 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

6713 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

6715 if(
	`födCacheSètus
(
ml2
, 
ml2_sub_£t
, 
ml2_sub_èg
, 
ml2_hödex
, &
ml2_blk
))

6717 if(
ml2_blk
->
qblk_£t_shi·
 == 0)

6719 
ml2_hô
 = 1;

6720 
ml2_èg
 = 
ml2_sub_èg
;

6721 
ml2_£t
 = 
ml2_sub_£t
;

6723 
wrôe_S_hô_num
++;

6726 
ml2_hô
 = 0;

6728 if(!
ml2_hô
 && 
	`födCacheSètus
(
ml2
, 
ml2_mul_£t
, 
ml2_mul_èg
, 
ml2_hödex
, &
ml2_blk
))

6730 
mu…i_hô_c⁄dôi⁄
;

6731 
mu…i_hô_c⁄dôi⁄
 = !
	`IsSh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
Ë|| !
mu…i_blk_ad≠_í
;

6732 if((
ml2_blk
->
qblk_£t_shi·
 =1Ë&& 
mu…i_hô_c⁄dôi⁄
)

6734 
ml2_hô
 = 1;

6735 
ml2_èg
 = 
ml2_mul_èg
;

6736 
ml2_£t
 = 
ml2_mul_£t
;

6738 
wrôe_Q_hô_num
++;

6739 
mb_∑ö_cou¡
++;

6742 
ml2_hô
 = 0;

6745 if(
ml2_hô
)

6747 *
mu…ùÀ_sh¨îs
 = (*)
	`ˇŒoc
(4, ());

6748 
cuºítThªadId
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

6749 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

6750 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

6751 i‡(
ml2_blk
->
way_¥ev
 && 
ml2
->
pﬁicy
 =
LRU
)

6752 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ml2_blk
, 
Hód
);

6753 
evít
->
isReqL2Hô
 = 1;

6754 if(
ml2_blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

6756 
evít
->
isReqL2Tøns
 = 1;

6757 if(
ml2_blk
->
qblk_£t_shi·
)

6759 
wrôe_Q_hô_num
--;

6760 
mb_∑ö_cou¡
--;

6763 
wrôe_S_hô_num
--;

6764 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

6766 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

6767 
evít
->
§c1
 +evít->
des1
;

6768 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6769 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6770 
evít
->
§c2
 +evít->
des2
;

6771 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6772 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6773 
evít
->
›î©i⁄
 = 
NACK
;

6774 
evít
->
¥o˚ssögD⁄e
 = 0;

6775 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6776 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6777 
	`dú_evítq_ö£π
(
evít
);

6778 if(
cﬁÀ˘_°©s
)

6779 
ml2
->
dú_ac˚ss
 ++;

6784 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

6785 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

6786 
Êù_cou¡î
 ++;

6787 
evít
->
Êù_Êag
 = 1;

6788 
	`dú_evítq_ö£π
(
evít
);

6789 if(
cﬁÀ˘_°©s
)

6790 
ml2
->
dú_ac˚ss
 ++;

6795 if((!
	`IsEx˛usiveOrDúty
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
)Ë&& (ml2_blk->
dú_dúty
[block_offset] != -1) )

6797 i‡(
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64]==()1<<(tempID%64))

6799 i‡(!
ml2_blk
->
qblk_£t_shi·
)

6800 
	`¥ötf
("MISS_WRITEÉveict selfÜike\n");

6803 
	`∑nic
("DIR: Block canÇot be dirty state when it isÇotÉxclusive!");

6807 if(!
	`IsSh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
))

6809 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

6811 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6812 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

6813 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

6814 
ml2_blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

6815 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6816 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

6817 
∑ckë_size
 = 
d©a_∑ckë_size
;

6818 
evít
->
§c1
 +evít->
des1
;

6819 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6820 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6821 
evít
->
§c2
 +evít->
des2
;

6822 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6823 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6825 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

6827 
evít
->
¥o˚ssögD⁄e
 = 0;

6828 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6829 
evít
->
∑ª¡
 = 
NULL
;

6830 
evít
->
blk_dú
 = 
NULL
;

6831 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

6832 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

6833 
	`dú_evítq_ö£π
(
evít
);

6837 
evít
->
¥o˚ssögD⁄e
 = 0;

6838 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6839 
evít
->
∑ª¡
 = 
NULL
;

6840 
evít
->
blk_dú
 = 
NULL
;

6841 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

6842 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

6843 
	`dú_evítq_ö£π
(
evít
);

6849 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

6850 if(
ml2_blk
->
qblk_£t_shi·
)

6852 
wrôe_Q_hô_num
--;

6853 
mb_∑ö_cou¡
--;

6856 
wrôe_S_hô_num
--;

6857 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

6858 
evít
->
L2miss_Êag
 = 1;

6859 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

6860 if(
evít
->
isSyncAc˚ss
)

6861 
Sync_L2_miss
 ++;

6862 if(!
m©chnum
)

6864 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

6866 if(!
œ°_L2_mshr_fuŒ
)

6868 
L2_mshr_fuŒ
 ++;

6869 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

6871 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

6873 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

6875 
evít
->
§c1
 +evít->
des1
;

6876 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6877 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6878 
evít
->
§c2
 +evít->
des2
;

6879 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6880 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6881 
evít
->
›î©i⁄
 = 
NACK
;

6882 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6883 
evít
->
¥o˚ssögD⁄e
 = 0;

6884 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6885 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6886 
	`dú_evítq_ö£π
(
evít
);

6891 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6892 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

6893 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

6894 
evít
->
Êù_Êag
 = 1;

6895 
Êù_cou¡î
 ++;

6896 
	`dú_evítq_ö£π
(
evít
);

6902 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

6903 if(
œ°_L2_mshr_fuŒ
)

6905 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

6906 
œ°_L2_mshr_fuŒ
 = 0;

6909 if(
cﬁÀ˘_°©s
)

6911 
ˇche_dl2
->
mis£s
 ++;

6912 
ˇche_dl2
->
dmis£s
 ++;

6913 
övﬁve_2_h›s_miss
 ++;

6915 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

6916 
evít
->
mshr_time
 = 
sim_cy˛e
;

6917 
evít
->
blk_dú
 = 
ml2_blk
;

6918 
DIRECTORY_EVENT
 *
√w_evít
;

6919 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

6920 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

6921 
√w_evít
->
cmd
 = 
Ród
;

6922 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

6923 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

6924 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

6925 
	`dú_evítq_ö£π
(
√w_evít
);

6926 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6927 
evít_¸óãd
 = 
evít
;

6928 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

6933 
evít
->
isReqL2SecMiss
 = 1;

6934 if(
cﬁÀ˘_°©s
)

6936 
ˇche_dl2
->
ö_mshr
 ++;

6937 
ˇche_dl2
->
dö_mshr
 ++;

6939 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

6940 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6947 if(
ml2_blk
->
qblk_£t_shi·
 && 
mu…i_blk_ad≠_í
)

6948 
	`∑nic
("m_blk write canÇotÑearch here write miss");

6949 if–
ml2_blk
->
±r_í
 && ml2_blk->
Æl_sh¨ed_í
 && (ml2_blk->
dú_sh¨î
[0][0] !()
Æl_sh¨î
) )

6950 
	`∑nic
("writeÖtr_enáll_shared_enÉrror \n");

6951 if–
ml2_blk
->
Æl_sh¨ed_í
 )

6953 
ml2_blk
->
Æl_sh¨ed_í
 = 0;

6954 
PVC_wrôe_Æl_shr_num
++;

6956 
ml2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

6957 
ml2_blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

6958 
evít
->
blk_dú
 = 
ml2_blk
;

6959 
evít
->
chûdCou¡
 = 0;

6960 
mu…ùÀ_sh¨îs
 = 
ml2_blk
->
dú_sh¨î
[
block_off£t
];

6961 
shr_d©a_ªq
;

6962 i‡(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

6964 
shr_d©a_ªq
 = 0;

6965 
dl2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

6968 
shr_d©a_ªq
 = 1;

6969 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

6971 if((((
mu…ùÀ_sh¨îs
[
Thªadid
/64]Ë& (()1 << (Thªadid%64))Ë=(()1 << (Thªadid%64))Ë&& (Thªadid !
ãmpID
))

6973 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

6974 if(
√w_evít
 =
NULL
)

6975 
	`∑nic
("Out of Virtual Memory");

6976 
√w_evít
->
∑ª¡
 = 
evít
;

6977 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

6980 
√w_evít
->
qblk_£t_shi·
 = 
ml2_blk
->qblk_set_shift;

6982 i‡(
shr_d©a_ªq
)

6984 
evít
->
shr_d©a_ªq
 = 1;

6985 
√w_evít
->
shr_d©a_ªq
 = 1;

6986 
shr_d©a_ªq
 = 0;

6988 
√w_evít
->
§c1
 = 
cuºítThªadId
/
mesh_size
+
MEM_LOC_SHIFT
;

6989 
√w_evít
->
§c2
 = 
cuºítThªadId
%
mesh_size
;

6990 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

6991 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

6993 
√w_evít
->
ªq_time
 = 0;

6994 
√w_evít
->
c⁄f_bô
 = -1;

6995 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

6996 
√w_evít
->
≥ndög_Êag
 = 0;

6997 
√w_evít
->
›
 = 
evít
->op;

6998 
√w_evít
->
isPª„tch
 = 0;

6999 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

7000 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7001 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7002 
√w_evít
->
ãmpID
 =ÅempID;

7003 
√w_evít
->
ª£nd
 = 0;

7004 
√w_evít
->
blk_dú
 = 
ml2_blk
;

7005 
√w_evít
->
˝
 = 
evít
->cp;

7006 
√w_evít
->
addr
 = 
evít
->addr;

7007 
√w_evít
->
vp
 = 
NULL
;

7008 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

7009 
√w_evít
->
ud©a
 = 
NULL
;

7010 
√w_evít
->
cmd
 = 
Wrôe
;

7011 
√w_evít
->
rs
 = 
evít
->rs;

7012 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

7013 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

7014 
√w_evít
->
•ec_mode
 = 0;

7015 
√w_evít
->
d©a_ª∂y
 = 1;

7017 
evít
->
chûdCou¡
++;

7018 
evít
->
dúty_Êag
 = 1;

7020 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

7021 
	`dú_evítq_ö£π
(
√w_evít
);

7026 i‡–
evít
->
éb_°©e
 =
SHARED_WRITE
 )

7029 
ml2_hô
 = 
	`födCacheSètus
(
ml2
, 
ml2_mul_£t
, 
ml2_mul_èg
, 
ml2_hödex
, &
ml2_blk
);

7030 if(
ml2_hô
)

7031 
ml2_ed
 = 
	`Is_Ex˛usiveOrDúty
(
ml2_blk
->
dú_sh¨î
[
block_off£t
]);

7032 if(
ml2_hô
)

7034 
ml2_èg
 = 
ml2_sub_èg
;

7035 
ml2_£t
 = 
ml2_sub_£t
;

7036 if(
ml2_ed
)

7037 
wrôe_S_öô_ed_num
++;

7039 
wrôe_S_öô_s_num
++;

7043 
ml2_èg
 = 
ml2_mul_èg
;

7044 
ml2_£t
 = 
ml2_mul_£t
;

7045 
wrôe_Q_öô_num
++;

7048 
ml2
->
pﬁicy
)

7050 
i
;

7051 
bödex
;

7052 
LRU
:

7053 
FIFO
:

7054 
i
 = 
ml2
->
assoc
;

7056 if(
i
 == 0) ;

7057 
i
--;

7058 
ª∂
 = 
ml2
->
£ts
[
ml2_£t
].
way_èû
;

7059 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

7061 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
));

7063 i‡–
ª∂_ad_í
 && ( 
ª∂
->
qblk_£t_shi·
 == 1 ) )

7065 
ˇche_blk_t
 *
bak
;

7066 
bak
 = 
ª∂
;

7068 
i
 = 
ml2
->
assoc
;

7070 if(
i
 == 0) ;

7071 
i
--;

7072 
ª∂
 = 
ml2
->
£ts
[
ml2_£t
].
way_èû
;

7073 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

7075 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
Ë|| (ª∂->
qblk_£t_shi·
 == 1) );

7077 i‡–
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
Ë|| (ª∂->
qblk_£t_shi·
 == 1))

7079 
ª∂
 = 
bak
;

7080 
	`upd©e_way_li°
 (&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

7084 if(
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
))

7086 
Êù_cou¡î
 ++;

7087 
evít
->
Êù_Êag
 = 1;

7088 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7089 
	`dú_evítq_ö£π
(
evít
);

7093 
R™dom
:

7094 
bödex
 = 
	`myønd
 (Ë& (
dl2
->
assoc
 - 1);

7095 
ª∂
 = 
	`CACHE_BINDEX
 (
dl2
, dl2->
£ts
[
dl2_£t
].
blks
, 
bödex
);

7098 
	`∑nic
 ("bogusÑeplacementÖolicy");

7103 i‡(
ml2_hô
 && 
qblk_£t_shi·
 && (
ve˘‹_num
!=0Ë&& (
ª∂
->
±r_í
Ë&& (
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
])>1) )

7105 
ve˘‹_avaûabÀ
;

7106 
sh¨î_num
;

7107 
ãmp_thªadid
;

7108 
ˇche_blk_t
 *
ve˘‹_blk
;

7110 
ve˘‹_avaûabÀ
 = 
	`ve˘‹_avaûabÀ_func
(&
ve˘‹_blk
, 
ml2_£t
);

7114 if(!
ve˘‹_avaûabÀ
)

7116 
PVC_Êù_num
++;

7117 
evít
->
isReqL2Tøns
 = 1;

7118 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

7120 
evít
->
§c1
 +evít->
des1
;

7121 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

7122 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

7123 
evít
->
§c2
 +evít->
des2
;

7124 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

7125 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

7126 
evít
->
›î©i⁄
 = 
NACK
;

7127 
evít
->
¥o˚ssögD⁄e
 = 0;

7128 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7129 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

7130 
	`dú_evítq_ö£π
(
evít
);

7131 if(
cﬁÀ˘_°©s
)

7132 
ml2
->
dú_ac˚ss
 ++;

7137 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7138 
Êù_cou¡î
 ++;

7139 
evít
->
Êù_Êag
 = 1;

7140 
	`dú_evítq_ö£π
(
evít
);

7141 if(
cﬁÀ˘_°©s
)

7142 
ml2
->
dú_ac˚ss
 ++;

7148 
sh¨î_num
 = 
	`Is_Sh¨ed
(
ve˘‹_blk
->
dú_sh¨î
[
block_off£t
]);

7150 
PVC_exch™ge_num
++;

7151 
PVC_exch_vec_shr_di°r
[
sh¨î_num
]++;

7153 if–
sh¨î_num
 < 2 )

7155 
PVC_dowm_no_öv_num
++;

7157 
ª∂
->
±r_í
 = 0;

7159 
ve˘‹_blk
->
±r_í
 = 1;

7160 if(
ve˘‹_blk
->
Æl_sh¨ed_í
)

7161 
	`∑nic
("vector_blkáll_shared_en illegal\n");

7162 if–
ve˘‹_blk
->
dú_blk_°©e
[0] =
MESI_SHARED
 )

7163 
	`∑nic
("stateÉrror\n");

7165 if–
sh¨î_num
 =
mesh_size
*mesh_size )

7167 
PVC_up_no_add_num
++;

7169 
ª∂
->
±r_í
 = 0;

7171 
ve˘‹_blk
->
±r_í
 = 1;

7172 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 1;

7173 if(
ve˘‹_blk
->
dú_sh¨î
[0][0] !()
Æl_sh¨î
)

7174 
	`∑nic
("all_shared_en dir_sharerÉrrpr\n");

7175 if–
ve˘‹_blk
->
dú_blk_°©e
[0] !
MESI_SHARED
 )

7176 
	`∑nic
("stateÉrror\n");

7180 if(
sh¨î_num
 > 
sh¨î_thªshﬁd
)

7182 
PVC_up_add_num
++;

7183 
PVC_up_add_shr_num
 +
mesh_size
*mesh_size-
sh¨î_num
;

7184 
PVC_up_add_shr_di°r
[
mesh_size
*mesh_size-
sh¨î_num
]++;

7186 
ª∂
->
±r_í
 = 0;

7188 
ve˘‹_blk
->
±r_í
 = 1;

7189 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 1;

7190 
ve˘‹_blk
->
dú_sh¨î
[0][0] = ()
Æl_sh¨î
;

7191 if–
ve˘‹_blk
->
dú_blk_°©e
[0] !
MESI_SHARED
 )

7192 
	`∑nic
("stateÉrror\n");

7196 
PVC_dowm_öv_num
++;

7197 
PVC_dowm_öv_shr_num
 +
sh¨î_num
-1;

7198 
PVC_dowm_öv_shr_di°r
[
sh¨î_num
-1]++;

7200 
ª∂
->
±r_í
 = 0;

7202 
ml2_dú_blk_°©e
 = 
ve˘‹_blk
->
dú_blk_°©e
[0];

7203 
survive_í
 = 1, 
surviv‹
 = -1;

7204 
DIRECTORY_EVENT
 *
cﬁÀ˘_evít
 = 
	`Æloˇã_evít
(0);

7205 if(
cﬁÀ˘_evít
 =
NULL
)

7206 
	`∑nic
("Out of Virtual Memory");

7208 
ve˘‹_blk
->
±r_í
 = 1;

7209 if(
ve˘‹_blk
->
Æl_sh¨ed_í
)

7210 
	`∑nic
("vector_blkáll_shared_en illegal\n");

7211 
ve˘‹_blk
->
Æl_sh¨ed_í
 = 0;

7212 
ve˘‹_blk
->
dú_blk_°©e
[0] = 
MESI_EXCLUSIVE
;

7213 
ve˘‹_blk
->
dú_°©e
[0] = 
DIR_TRANSITION
;

7214 
ve˘‹_blk
->
±r_cur_evít
[0] = 
cﬁÀ˘_evít
;

7215 i‡(
ve˘‹_blk
->
qblk_£t_shi·
)

7216 
ve˘‹_blk
->
addr
 = (ve˘‹_blk->
ègid
.
èg
 << (
ˇche_ml2
->
èg_shi·
+
qblk_£t_shi·
)Ë+ (
ml2_£t
 << (ˇche_ml2->
£t_shi·
+qblk_set_shift));

7218 
ve˘‹_blk
->
addr
 = (ve˘‹_blk->
ègid
.
èg
 << 
ˇche_ml2
->
èg_shi·
Ë+ (
ml2_£t
 << cache_ml2->
£t_shi·
);

7220 
cﬁÀ˘_evít
->
chûdCou¡
 = 0;

7221 
cﬁÀ˘_evít
->
ödividuÆ_chûdCou¡
[0] = 0;

7222 
cﬁÀ˘_evít
->
sh¨î_num
 = 1;

7223 
cﬁÀ˘_evít
->
blk_dú
 = 
ve˘‹_blk
;

7224 
cﬁÀ˘_evít
->
›î©i⁄
 = 
VEC_DEGRADE
;

7226 
ãmp_thªadid
 = 0;Åemp_thªadid < 
numc⁄ãxts
;Åemp_threadid++)

7228 if(((
ve˘‹_blk
->
dú_sh¨î
[0][
ãmp_thªadid
/64]) & (()1 << (temp_threadid%64))) == (()1 << (temp_threadid%64)))

7230 if(
survive_í
)

7232 
surviv‹
 = 
ãmp_thªadid
;

7233 
survive_í
 = 0;

7236 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

7237 if(
√w_evít
 =
NULL
)

7238 
	`∑nic
("Out of Virtual Memory");

7241 
√w_evít
->
qblk_£t_shi·
 = 
ve˘‹_blk
->qblk_set_shift;

7242 
√w_evít
->
ml2_dú_blk_°©e
 = ml2_dir_blk_state;

7243 
√w_evít
->
addr
 = 
ve˘‹_blk
->addr;

7244 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

7245 
√w_evít
->
∑ª¡
 = 
cﬁÀ˘_evít
;

7246 
√w_evít
->
blk_dú
 = 
ve˘‹_blk
;

7247 
√w_evít
->
ãmpID
 = 
evít
->tempID;

7248 
√w_evít
->
˝
 = 
evít
->cp;

7249 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

7250 
√w_evít
->
§c1
 = 
evít
->
des1
;

7251 
√w_evít
->
§c2
 = 
evít
->
des2
;

7252 
√w_evít
->
des1
 = 
ãmp_thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

7253 
√w_evít
->
des2
 = 
ãmp_thªadid
%
mesh_size
;

7255 
√w_evít
->
isPª„tch
 = 0;

7256 
√w_evít
->
c⁄f_bô
 = -1;

7257 
√w_evít
->
ªq_time
 = 0;

7258 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

7259 
√w_evít
->
≥ndög_Êag
 = 0;

7260 
√w_evít
->
›
 = 
cﬁÀ˘_evít
->op;

7261 
√w_evít
->
vp
 = 
NULL
;

7262 
√w_evít
->
ud©a
 = 
NULL
;

7263 
√w_evít
->
rs
 = 
NULL
;

7264 
√w_evít
->
•ec_mode
 = 0;

7265 
√w_evít
->
d©a_ª∂y
 = 1;

7268 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7269 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7270 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

7271 
	`dú_evítq_ö£π
(
√w_evít
);

7273 
cﬁÀ˘_evít
->
chûdCou¡
++;

7274 
cﬁÀ˘_evít
->
ödividuÆ_chûdCou¡
[0] ++;

7277 if(
surviv‹
 == -1)

7278 
	`∑nic
("survivorÉrror\n");

7279 
ve˘‹_blk
->
dú_sh¨î
[0][
surviv‹
/64] = (()1 << (survivor%64));

7286 
i
=0, 
ôî©i⁄
 = 1;

7287 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

7288 
ôî©i⁄
 = iteration * 2;

7289 
m
;

7290 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

7292 if–
ª∂
->
±r_í
 &&Ñïl->
Æl_sh¨ed_í
 && (ª∂->
dú_sh¨î
[0][0] !()
Æl_sh¨î
) )

7293 
	`∑nic
("recallÖtr_enáll_shared_enÉrror \n");

7294 i‡(
cﬁÀ˘_°©s
)

7295 
ml2
->
ª∂a˚míts
++;

7297 
ml2_dú_blk_°©e
;

7298 
√w_vc
 = 0;

7299 
Êag
 = 0, 
sh¨î_num
 = 0;

7300 
i
=0; i<
ôî©i⁄
; i++)

7301 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]))

7302 
sh¨î_num
 ++;

7304 
evít
->
chûdCou¡
 = 0;

7305 
evít
->
sh¨î_num
 = 0;

7307 
i
=0; i<
ôî©i⁄
; i++)

7309 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]))

7313 
ml2_dú_blk_°©e
 = 
ª∂
->
dú_blk_°©e
[
i
];

7314 i‡–(
ml2_dú_blk_°©e
 =
MESI_SHARED
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) < 2)

7315 || (
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) != 1)

7316 || (
ml2_dú_blk_°©e
 =
MESI_EXCLUSIVE
Ë&& (
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
]) != 1)

7317 || (
ml2_dú_blk_°©e
 =
MESI_INVALID
)

7319 
	`¥ötf
("state conflicts with sharer vector\n");

7321 
m
 = 0; m<
ôî©i⁄
; m++)

7323 
ª∂
->
dú_°©e
[
m
] = 
DIR_TRANSITION
;

7324 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

7326 
ª∂
->
±r_cur_evít
[
i
] = 
evít
;

7327 i‡(
ª∂
->
qblk_£t_shi·
)

7328 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << (
ˇche_ml2
->
èg_shi·
+
qblk_£t_shi·
)Ë+ (
ml2_£t
 << (ˇche_ml2->
£t_shi·
+qblk_set_shift));

7330 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << 
ˇche_ml2
->
èg_shi·
Ë+ (
ml2_£t
 << cache_ml2->
£t_shi·
Ë+ (
i
 << 
ˇche_dl1
[0]->set_shift);

7331 
evít
->
ödividuÆ_chûdCou¡
[
i
] = 0;

7332 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

7334 if(((
ª∂
->
dú_sh¨î
[
i
][
Thªadid
/64]) & (()1 << (Threadid%64))) == (()1 << (Threadid%64)))

7336 
ªˇŒ_öv_num
++;

7337 if(
cﬁÀ˘_°©s
)

7338 
ˇche_ml2
->
övÆid©i⁄s
 ++;

7339 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

7340 if(
√w_evít
 =
NULL
)

7341 
	`∑nic
("Out of Virtual Memory");

7342 
övﬁve_4_h›s_miss
 ++;

7343 
√w_evít
->
c⁄f_bô
 = -1;

7344 
√w_evít
->
ªq_time
 = 0;

7345 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

7346 
√w_evít
->
≥ndög_Êag
 = 0;

7347 
√w_evít
->
›
 = 
evít
->op;

7348 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

7351 
√w_evít
->
qblk_£t_shi·
 = 
ª∂
->qblk_set_shift;

7352 
√w_evít
->
ml2_dú_blk_°©e
 = ml2_dir_blk_state;

7354 
√w_evít
->
isPª„tch
 = 0;

7355 
√w_evít
->
ãmpID
 = 
evít
->tempID;

7356 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

7357 
√w_evít
->
ª£nd
 = 0;

7358 
√w_evít
->
blk1
 = 
ª∂
;

7359 
√w_evít
->
addr
 = 
ª∂
->addr;

7360 
√w_evít
->
˝
 = 
evít
->cp;

7361 
√w_evít
->
vp
 = 
NULL
;

7362 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

7363 
√w_evít
->
ud©a
 = 
NULL
;

7364 
√w_evít
->
rs
 = 
NULL
;

7365 
√w_evít
->
•ec_mode
 = 0;

7366 
√w_evít
->
§c1
 = 
evít
->
des1
;

7367 
√w_evít
->
§c2
 = 
evít
->
des2
;

7368 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

7369 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

7370 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7371 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7372 
√w_evít
->
∑ª¡
 = 
evít
;

7373 
√w_evít
->
blk_dú
 = 
ª∂
;

7374 
√w_evít
->
d©a_ª∂y
 = 1;

7375 
evít
->
sh¨î_num
 = sharer_num;

7376 
evít
->
blk_dú
 = 
ª∂
;

7377 
evít
->
chûdCou¡
++;

7378 
evít
->
ödividuÆ_chûdCou¡
[
i
] ++;

7380 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
√w_vc
);

7382 
	`dú_evítq_ö£π
(
√w_evít
);

7385 
Êag
 = 1;

7387 if(
ml2_hô
)

7388 if(
ml2_ed
)

7389 if(
ª∂
->
qblk_£t_shi·
)

7391 
wrôe_S_öô_ed_QR_num
++;

7392 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

7393 
wrôe_S_öô_ed_QR_s_num
++;

7394 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

7395 
wrôe_S_öô_ed_QR_ed_num
++;

7397 
wrôe_S_öô_ed_SR_num
++;

7399 if(
ª∂
->
qblk_£t_shi·
)

7401 
wrôe_S_öô_s_QR_num
++;

7402 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

7403 
wrôe_S_öô_s_QR_s_num
++;

7404 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

7405 
wrôe_S_öô_s_QR_ed_num
++;

7407 
wrôe_S_öô_s_SR_num
++;

7409 if(
ª∂
->
qblk_£t_shi·
)

7411 
wrôe_Q_öô_QR_num
++;

7412 if(
ml2_dú_blk_°©e
 =
MESI_SHARED
)

7413 
wrôe_Q_öô_QR_s_num
++;

7414 i‡–(
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
) )

7415 
wrôe_Q_öô_QR_ed_num
++;

7417 
wrôe_Q_öô_SR_num
++;

7419 
ªˇŒ_num
++;

7420 if(
ª∂
->
Æl_sh¨ed_í
)

7422 
ª∂
->
Æl_sh¨ed_í
 = 0;

7423 
PVC_ªˇŒ_Æl_shr_num
++;

7426 
sh¨î_di°r
[
evít
->
chûdCou¡
] ++;

7427 
	`IsNeighb‹_sh¨î
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
);

7430 if(
Êag
 == 1)

7433 if(
cﬁÀ˘_°©s
)

7434 
dl2
->
ª∂Inv
++;

7436 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7437 
ª∂
->
addr
 =áddr;

7438 
ª∂
->
ègid
.
èg
 = 
ml2_èg
;

7439 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

7440 
m
=0; m<
ôî©i⁄
; m++)

7442 
ª∂
->
dú_sh¨î
[
m
][
ãmpID
/64] = 0;

7443 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

7445 if(
ml2_hô
 && 
qblk_£t_shi·
)

7447 if–(
ª∂
->
±r_í
Ë&& (
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
])>1) )

7448 
	`∑nic
("unableÅo copy\n");

7449 
ª∂
->
qblk_£t_shi·
 = 0;

7450 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = 
ml2_blk
->dir_sharer[block_offset][tempID/64];

7451 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
ml2_blk
->dir_blk_state[block_offset];

7452 
ª∂
->
dú_dúty
[
block_off£t
] = 
ml2_blk
->dir_dirty[block_offset];

7454 i‡(
qblk_£t_shi·
)

7455 
ª∂
->
qblk_£t_shi·
 = 1;

7457 
ª∂
->
qblk_£t_shi·
 = 0;

7462 
m
=0;m<
ôî©i⁄
;m++)

7464 
ª∂
->
±r_cur_evít
[
m
] = 
NULL
;

7465 
ª∂
->
dú_°©e
[
m
] = 
DIR_STABLE
;

7466 
ª∂
->
dú_sh¨î
[
m
][
ãmpID
/64] = 0;

7467 
ª∂
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

7468 
ª∂
->
dú_dúty
[
m
] = -1;

7469 
ª∂
->
ex˛usive_time
[
m
] = 
sim_cy˛e
;

7471 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7472 
ª∂
->
ªady
 = 
sim_cy˛e
;

7473 
ª∂
->
ègid
.
èg
 = 
ml2_èg
;

7474 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

7475 if(
ml2_hô
 && 
qblk_£t_shi·
)

7476 
ª∂
->
qblk_£t_shi·
 = 0;

7477 i‡(
qblk_£t_shi·
)

7478 
ª∂
->
qblk_£t_shi·
 = 1;

7480 
ª∂
->
qblk_£t_shi·
 = 0;

7481 
ª∂
->
addr
 =áddr;

7482 i‡(
ª∂
->
way_¥ev
 && 
ml2
->
pﬁicy
 =
LRU
)

7483 
	`upd©e_way_li°
(&
ml2
->
£ts
[
ml2_£t
], 
ª∂
, 
Hód
);

7484 i‡(
ml2
->
hsize
)

7485 
	`lök_hèb_ít
(
ml2
, &ml2->
£ts
[
ml2_£t
], 
ª∂
);

7486 
ml2
->
œ°_èg£tid
.
èg
 = 0;

7487 
ml2
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

7488 
ml2
->
œ°_blk
 = 
ª∂
;

7490 i‡(
ml2_hô
 && 
qblk_£t_shi·
)

7492 if–(
ª∂
->
±r_í
Ë&& (
	`Is_Sh¨ed
(
ml2_blk
->
dú_sh¨î
[
block_off£t
])>1) )

7493 
	`∑nic
("unableÅo copy\n");

7494 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = 
ml2_blk
->dir_sharer[block_offset][tempID/64];

7495 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
ml2_blk
->dir_blk_state[block_offset];

7496 
ª∂
->
dú_dúty
[
block_off£t
] = 
ml2_blk
->dir_dirty[block_offset];

7497 
evít
->
whí
 = 
sim_cy˛e
;

7498 
evít
->
no_L2_dñay
 = 1;

7499 
	`dú_evítq_ö£π
(
evít
);

7503 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

7505 
ml2
->
d©a_ac˚ss
 ++;

7506 
övﬁve_2_h›s
 ++;

7507 if(
evít
->
rs
)

7508 if(
evít
->
rs
->
›
 =
LDL_L
)

7509 
lﬂd_lök_sh¨ed
 ++;

7510 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

7511 
ª∂
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

7512 
ª∂
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

7513 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

7515 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

7516 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

7517 
ª∂
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

7520 
	`¥ötf
("directory is for data segment\n");

7522 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

7523 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

7524 
evít
->
§c1
 +evít->
des1
;

7525 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

7526 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

7527 
evít
->
§c2
 +evít->
des2
;

7528 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

7529 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

7530 
evít
->
¥o˚ssögD⁄e
 = 0;

7531 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7532 
evít
->
∑ª¡
 = 
NULL
;

7533 
evít
->
blk_dú
 = 
NULL
;

7534 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

7535 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

7536 
	`dú_evítq_ö£π
(
evít
);

7542 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

7543 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

7544 
evít
->
L2miss_Êag
 = 1;

7545 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

7546 if(
evít
->
isSyncAc˚ss
)

7547 
Sync_L2_miss
 ++;

7548 if(!
m©chnum
)

7550 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

7552 if(!
œ°_L2_mshr_fuŒ
)

7554 
L2_mshr_fuŒ
 ++;

7555 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

7557 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

7559 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

7561 
evít
->
§c1
 +evít->
des1
;

7562 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

7563 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

7564 
evít
->
§c2
 +evít->
des2
;

7565 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

7566 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

7567 
evít
->
›î©i⁄
 = 
NACK
;

7568 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

7569 
evít
->
¥o˚ssögD⁄e
 = 0;

7570 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7571 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

7572 
	`dú_evítq_ö£π
(
evít
);

7577 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

7578 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

7579 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7580 
evít
->
Êù_Êag
 = 1;

7581 
Êù_cou¡î
 ++;

7582 
	`dú_evítq_ö£π
(
evít
);

7588 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

7589 if(
œ°_L2_mshr_fuŒ
)

7591 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

7592 
œ°_L2_mshr_fuŒ
 = 0;

7595 if(
cﬁÀ˘_°©s
)

7597 
ˇche_dl2
->
mis£s
 ++;

7598 
ˇche_dl2
->
dmis£s
 ++;

7599 
övﬁve_2_h›s_miss
 ++;

7601 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

7602 
evít
->
mshr_time
 = 
sim_cy˛e
;

7603 
evít
->
blk_dú
 = 
ª∂
;

7604 
DIRECTORY_EVENT
 *
√w_evít
;

7605 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

7606 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

7607 
√w_evít
->
cmd
 = 
Ród
;

7608 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

7609 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

7610 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

7611 
	`dú_evítq_ö£π
(
√w_evít
);

7612 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7613 
evít_¸óãd
 = 
evít
;

7614 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

7619 
evít
->
isReqL2SecMiss
 = 1;

7620 if(
cﬁÀ˘_°©s
)

7622 
ˇche_dl2
->
ö_mshr
 ++;

7623 
ˇche_dl2
->
dö_mshr
 ++;

7625 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

7626 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

7633 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

7636 i‡(
dl2_blk
->
way_¥ev
 && 
dl2
->
pﬁicy
 =
LRU
)

7637 
	`upd©e_way_li°
 (&
dl2
->
£ts
[
dl2_£t
], 
dl2_blk
, 
Hód
);

7639 
evít
->
isReqL2Hô
 = 1;

7640 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

7641 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

7642 if(
evít
->
rs
)

7643 if(
evít
->
rs
->
›
 =
LDL_L
)

7644 
lﬂd_lök_sh¨ed
 ++;

7645 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

7646 
evít
->
§c1
 +evít->
des1
;

7647 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

7648 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

7649 
evít
->
§c2
 +evít->
des2
;

7650 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

7651 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

7652 
evít
->
¥o˚ssögD⁄e
 = 0;

7653 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7654 
evít
->
∑ª¡
 = 
NULL
;

7655 
evít
->
blk_dú
 = 
NULL
;

7656 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

7657 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

7658 
	`dú_evítq_ö£π
(
evít
);

7663 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

7664 
evít
->
L2miss_Êag
 = 1;

7665 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

7666 
evít
->
blk_dú
 = 
NULL
;

7667 if(
evít
->
isSyncAc˚ss
)

7668 
Sync_L2_miss
 ++;

7669 if(!
m©chnum
)

7671 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

7673 if(!
œ°_L2_mshr_fuŒ
)

7675 
L2_mshr_fuŒ
 ++;

7676 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

7678 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

7680 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

7682 
evít
->
§c1
 +evít->
des1
;

7683 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

7684 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

7685 
evít
->
§c2
 +evít->
des2
;

7686 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

7687 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

7688 
evít
->
›î©i⁄
 = 
NACK
;

7689 
evít
->
¥o˚ssögD⁄e
 = 0;

7690 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7691 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

7692 
	`dú_evítq_ö£π
(
evít
);

7697 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

7698 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7699 
evít
->
Êù_Êag
 = 1;

7700 
Êù_cou¡î
 ++;

7701 
	`dú_evítq_ö£π
(
evít
);

7707 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

7708 if(
œ°_L2_mshr_fuŒ
)

7710 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

7711 
œ°_L2_mshr_fuŒ
 = 0;

7714 if(
cﬁÀ˘_°©s
)

7716 
ˇche_dl2
->
mis£s
 ++;

7717 
ˇche_dl2
->
dmis£s
 ++;

7718 
övﬁve_2_h›s_miss
 ++;

7720 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

7721 
evít
->
mshr_time
 = 
sim_cy˛e
;

7722 
DIRECTORY_EVENT
 *
√w_evít
;

7723 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

7724 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

7725 
√w_evít
->
cmd
 = 
Ród
;

7726 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

7727 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

7728 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

7729 
	`dú_evítq_ö£π
(
√w_evít
);

7730 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7731 
evít_¸óãd
 = 
evít
;

7732 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

7737 
evít
->
isReqL2SecMiss
 = 1;

7738 if(
cﬁÀ˘_°©s
)

7740 
ˇche_dl2
->
ö_mshr
 ++;

7741 
ˇche_dl2
->
dö_mshr
 ++;

7743 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

7749 
INFORM_BACK
 :

7750 
WRITE_BACK
 :

7751 
dˇche2_ac˚ss
++;

7752 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

7753 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

7754 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

7755 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

7756 i‡–
evít
->
›î©i⁄
 =
WRITE_BACK
 )

7758 i‡–
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
) )

7759 
dl2_blk
->
°©us
 |
CACHE_BLK_DIRTY
;

7763 
DIRECTORY_EVENT
 *
√w_evít
;

7764 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

7765 
√w_evít
->
addr
 = 
evít
->addr;

7766 
√w_evít
->
›î©i⁄
 = 
MEM_WRITE_BACK
;

7767 
√w_evít
->
cmd
 = 
Wrôe
;

7768 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 0);

7769 
	`dú_evítq_ö£π
(
√w_evít
);

7772 if(
	`födCacheSètus
(
ml2
, 
ml2_sub_£t
, 
ml2_sub_èg
, 
ml2_hödex
, &
ml2_blk
))

7774 if–
ml2_blk
->
±r_í
 && ml2_blk->
Æl_sh¨ed_í
 && (ml2_blk->
dú_sh¨î
[0][0] !()
Æl_sh¨î
) )

7775 
	`∑nic
("inform/write_backÖtr_enáll_shared_enÉrror \n");

7776 if–
ml2_blk
->
Æl_sh¨ed_í
 && (
evít
->
›î©i⁄
 =
WRITE_BACK
) )

7777 
	`∑nic
("WRITE_BACKáll_shared_enÉrror \n");

7778 if(!
ml2_blk
->
qblk_£t_shi·
 )

7780 if(
ml2_blk
->
Æl_sh¨ed_í
 && (
evít
->
›î©i⁄
 =
INFORM_BACK
))

7781 
PVC_öf‹m_Æl_shr_num
++;

7784 
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] &~ (()1 << (((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
)%64));

7785 i‡–!
ml2_blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] )

7787 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_INVALID
;

7788 
ml2_blk
->
dú_dúty
[
block_off£t
] = -1;

7790 i‡(
	`Is_Ex˛usiveOrDúty
(
ml2_blk
->
dú_sh¨î
[
block_off£t
]))

7792 
ml2_blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

7796 if–
evít
->
›î©i⁄
 =
WRITE_BACK
 )

7798 
wrôe_back_num
++;

7799 if–
ml2_blk
->
qblk_£t_shi·
 )

7800 
wrôe_back_Q
++;

7802 
wrôe_back_S
++;

7806 
öf‹m_back_num
++;

7807 if–
ml2_blk
->
qblk_£t_shi·
 )

7808 
öf‹m_back_Q
++;

7810 
öf‹m_back_S
++;

7813 
	`‰ì_evít
(
evít
);

7816 
INV_MSG_READ
 :

7817 
dˇche_ac˚ss
++;

7818 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

7819 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

7820 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

7821 
cou¡
 = (
evít
->
des1
-
MEM_LOC_SHIFT
Ë* 
mesh_size
 +Évít->
des2
;

7822 
˝1
 = 
ˇche_dl1
[
cou¡
];

7823 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

7824 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

7825 if(
cﬁÀ˘_°©s
)

7826 
˝1
->
InvÆid_Ród_ª˚ived
 ++;

7828 
∑ckë_size
 = 
mëa_∑ckë_size
;

7829 
evít
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

7831 
dl1_blk
 = 
˝1
->
£ts
[
£t
].
way_hód
; dl1_blk; dl1_blk =dl1_blk->
way_√xt
)

7833 i‡((
dl1_blk
->
ègid
.
èg
 =ègË&& (dl1_blk->
°©us
 & 
CACHE_BLK_VALID
))

7835 
L1_hô
 = 1;

7836 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
)

7838 
∑ckë_size
 = 
d©a_∑ckë_size
;

7839 
evít
->
›î©i⁄
 = 
ACK_MSG_READ
;

7840 if(
cﬁÀ˘_°©s
)

7841 
˝1
->
wb_cohîí˚_r
 ++;

7842 if(
evít
->
d©a_ª∂y
 == 0)

7843 
tŸÆ_ex˛usive_¸oss
 ++;

7845 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
)

7847 
∑ckë_size
 = 
mëa_∑ckë_size
;

7848 
evít
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

7850 i‡(
evít
->
qblk_£t_shi·
)

7851 
ªad_öv_QH_num
++;

7853 
ªad_öv_S_num
++;

7856 if–(
ve˘‹_num
==0Ë&& !
nv_brﬂdˇ°
 )

7858 
dl1_blk
->
°©e
 = 
MESI_INVALID
;

7859 
dl1_blk
->
°©us
 = 0;

7863 
dl1_blk
->
°©e
 = 
MESI_SHARED
;

7864 
dl1_blk
->
°©us
 = 
CACHE_BLK_VALID
;

7866 if(
cﬁÀ˘_°©s
)

7867 
˝1
->
InvÆid_Ród_ª˚ived_hôs
 ++;

7871 i‡–(
evít
->
shr_d©a_ªq
Ë&& (
∑ckë_size
 =
mëa_∑ckë_size
Ë&& 
L1_hô
 )

7873 
∑ckë_size
 = 
d©a_∑ckë_size
;

7874 
evít
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

7876 
evít
->
L1_hô
 = L1_hit;

7877 
evít
->
§c1
 +evít->
des1
;

7878 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

7879 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

7880 
evít
->
§c2
 +evít->
des2
;

7881 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

7882 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

7883 
evít
->
¥o˚ssögD⁄e
 = 0;

7884 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7886 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

7887 
	`dú_evítq_ö£π
(
evít
);

7890 i‡(
evít
->
qblk_£t_shi·
)

7892 
i
;

7893 
i
=0;i<(1<<
mu…i_blk_£t_shi·
);i++)

7895 
addr
 = (add∏& (~(
qblk_£t_mask
<<
ml2
->
£t_shi·
))Ë+ (
i
<<ml2->set_shift);

7896 if(
addr
==
evít
->addr)

7898 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

7899 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

7901 
dl1_blk
 = 
˝1
->
£ts
[
£t
].
way_hód
; dl1_blk; dl1_blk =dl1_blk->
way_√xt
)

7903 i‡((
dl1_blk
->
ègid
.
èg
 =ègË&& (dl1_blk->
°©us
 & 
CACHE_BLK_VALID
))

7905 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
)

7907 
DIRECTORY_EVENT
 *
√w_evít
;

7908 
√w_evít
 = 
	`Æloˇã_evít
(0);

7909 
√w_evít
->
∑ª¡
 = 
evít
->parent;

7910 
√w_evít
->
blk_dú
 = 
evít
->blk_dir;

7911 
√w_evít
->
›î©i⁄
 = 
ACK_MSG_READ
;

7912 
√w_evít
->
addr
 =áddr;

7913 
√w_evít
->
§c1
 = 
evít
->src1;

7914 
√w_evít
->
§c2
 = 
evít
->src2;

7915 
√w_evít
->
des1
 = 
evít
->des1;

7916 
√w_evít
->
des2
 = 
evít
->des2;

7917 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7918 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7919 
evít
->
∑ª¡
->
chûdCou¡
 ++;

7920 
ªad_öv_d_QM_num
++;

7921 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

7922 
	`dú_evítq_ö£π
(
√w_evít
);

7925 
ªad_öv_e_QM_num
++;

7927 
evít
->
L1_hô
 |= 2;

7930 if–(
ve˘‹_num
==0Ë&& !
nv_brﬂdˇ°
 )

7932 
dl1_blk
->
°©e
 = 
MESI_INVALID
;

7933 
dl1_blk
->
°©us
 = 0;

7937 
dl1_blk
->
°©e
 = 
MESI_SHARED
;

7938 
dl1_blk
->
°©us
 = 
CACHE_BLK_VALID
;

7947 
INV_MSG_WRITE
 :

7948 
dˇche_ac˚ss
++;

7949 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

7950 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

7951 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

7952 
cou¡
 = (
evít
->
des1
-
MEM_LOC_SHIFT
Ë* 
mesh_size
 +Évít->
des2
;

7953 
˝1
 = 
ˇche_dl1
[
cou¡
];

7954 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

7955 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

7956 
	`£ndLSQInv
(
addr
, 
cou¡
);

7958 
∑ckë_size
 = 
mëa_∑ckë_size
;

7959 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

7960 
dl1_blk
 = 
˝1
->
£ts
[
£t
].
way_hód
; dl1_blk; dl1_blk =dl1_blk->
way_√xt
)

7962 i‡((
dl1_blk
->
ègid
.
èg
 =ègË&& (dl1_blk->
°©us
 & 
CACHE_BLK_VALID
))

7964 
L1_hô
 = 1;

7966 if–
evít
->
∑ª¡
->
sh¨î_num
 )

7968 if(
evít
->
qblk_£t_shi·
)

7969 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
)

7971 
ªˇŒ_öv_d_Q_num
++;

7972 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

7974 if(
ªˇŒ_ad_í
)

7976 
ªˇŒ_öv_d_Q_num
--;

7977 
ªˇŒ_öv_d_Q_s_ad_num
++;

7980 
ªˇŒ_öv_d_Q_s_num
++;

7982 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

7983 
ªˇŒ_öv_d_Q_ed_num
++;

7985 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
)

7987 
ªˇŒ_öv_e_Q_num
++;

7988 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

7990 if(
ªˇŒ_ad_í
)

7992 
ªˇŒ_öv_e_Q_num
--;

7993 
ªˇŒ_öv_e_Q_s_ad_num
++;

7996 
ªˇŒ_öv_e_Q_s_num
++;

7998 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

7999 
ªˇŒ_öv_e_Q_ed_num
++;

8003 
ªˇŒ_öv_s_Q_num
++;

8004 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

8005 
ªˇŒ_öv_s_Q_s_num
++;

8006 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

8008 if(
ªˇŒ_ad_í
)

8010 
ªˇŒ_öv_s_Q_num
--;

8011 
ªˇŒ_öv_s_Q_ed_ad_num
++;

8014 
ªˇŒ_öv_s_Q_ed_num
++;

8018 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
Ë
ªˇŒ_öv_d_S_num
++;

8019 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
Ë
ªˇŒ_öv_e_S_num
++;

8020 
ªˇŒ_öv_s_S_num
++;

8024 if(
evít
->
qblk_£t_shi·
)

8025 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
Ë
wrôe_öv_d_QH_num
++;

8026 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
Ë
wrôe_öv_e_QH_num
++;

8027 
wrôe_öv_s_QH_num
++;

8029 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
Ë
wrôe_öv_d_S_num
++;

8030 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
Ë
wrôe_öv_e_S_num
++;

8031 
wrôe_öv_s_S_num
++;

8034 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
)

8036 
∑ckë_size
 = 
d©a_∑ckë_size
;

8037 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITE
;

8041 
∑ckë_size
 = 
mëa_∑ckë_size
;

8042 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

8046 
dl1_blk
->
°©e
 = 
MESI_INVALID
;

8047 
dl1_blk
->
°©us
 = 0;

8052 if(!
L1_hô
)

8053 if–
evít
->
∑ª¡
->
sh¨î_num
 )

8054 if(
evít
->
qblk_£t_shi·
)

8056 
ªˇŒ_öv_i_Q_num
++;

8057 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

8058 
ªˇŒ_öv_i_Q_s_num
++;

8059 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

8060 
ªˇŒ_öv_i_Q_ed_num
++;

8062 
ªˇŒ_öv_i_S_num
++;

8064 if(
evít
->
qblk_£t_shi·
Ë
wrôe_öv_i_QH_num
++;

8065 
wrôe_öv_i_S_num
++;

8067 i‡–(
evít
->
shr_d©a_ªq
Ë&& (
∑ckë_size
 =
mëa_∑ckë_size
Ë&& 
L1_hô
 )

8069 
∑ckë_size
 = 
d©a_∑ckë_size
;

8070 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

8072 
evít
->
L1_hô
 = L1_hit;

8073 
evít
->
§c1
 +evít->
des1
;

8074 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

8075 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

8076 
evít
->
§c2
 +evít->
des2
;

8077 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

8078 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

8079 
evít
->
¥o˚ssögD⁄e
 = 0;

8080 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8081 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

8082 
	`dú_evítq_ö£π
(
evít
);

8085 i‡(
evít
->
qblk_£t_shi·
)

8087 
i
;

8088 
i
=0;i<(1<<
mu…i_blk_£t_shi·
);i++)

8090 
addr
 = (add∏& (~(
qblk_£t_mask
<<
ml2
->
£t_shi·
))Ë+ (
i
<<ml2->set_shift);

8091 if(
addr
==
evít
->addr)

8093 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

8094 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

8095 
	`£ndLSQInv
(
addr
, 
cou¡
);

8096 
L1_hô
 = 0;

8097 
dl1_blk
 = 
˝1
->
£ts
[
£t
].
way_hód
; dl1_blk; dl1_blk =dl1_blk->
way_√xt
)

8099 i‡((
dl1_blk
->
ègid
.
èg
 =ègË&& (dl1_blk->
°©us
 & 
CACHE_BLK_VALID
))

8101 
L1_hô
 = 1;

8103 if–
evít
->
∑ª¡
->
sh¨î_num
 )

8105 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
)

8107 
ªˇŒ_öv_d_Q_num
++;

8108 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

8110 if(
ªˇŒ_ad_í
)

8112 
ªˇŒ_öv_d_Q_num
--;

8113 
ªˇŒ_öv_d_Q_s_ad_num
++;

8116 
ªˇŒ_öv_d_Q_s_num
++;

8118 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

8119 
ªˇŒ_öv_d_Q_ed_num
++;

8121 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
)

8123 
ªˇŒ_öv_e_Q_num
++;

8124 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

8126 if(
ªˇŒ_ad_í
)

8128 
ªˇŒ_öv_e_Q_num
--;

8129 
ªˇŒ_öv_e_Q_s_ad_num
++;

8132 
ªˇŒ_öv_e_Q_s_num
++;

8134 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

8135 
ªˇŒ_öv_e_Q_ed_num
++;

8139 
ªˇŒ_öv_s_Q_num
++;

8140 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

8141 
ªˇŒ_öv_s_Q_s_num
++;

8142 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

8144 if(
ªˇŒ_ad_í
)

8146 
ªˇŒ_öv_s_Q_num
--;

8147 
ªˇŒ_öv_s_Q_ed_ad_num
++;

8150 
ªˇŒ_öv_s_Q_ed_num
++;

8156 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
Ë
wrôe_öv_d_QM_num
++;

8157 if(
dl1_blk
->
°©e
 =
MESI_EXCLUSIVE
Ë
wrôe_öv_e_QM_num
++;

8158 
wrôe_öv_s_QM_num
++;

8161 if(
dl1_blk
->
°©e
 =
MESI_MODIFIED
)

8163 
DIRECTORY_EVENT
 *
√w_evít
;

8164 
√w_evít
 = 
	`Æloˇã_evít
(0);

8165 
√w_evít
->
∑ª¡
 = 
evít
->parent;

8166 
√w_evít
->
blk_dú
 = 
evít
->blk_dir;

8167 
√w_evít
->
›î©i⁄
 = 
ACK_MSG_WRITE
;

8168 
√w_evít
->
addr
 =áddr;

8169 
√w_evít
->
§c1
 = 
evít
->src1;

8170 
√w_evít
->
§c2
 = 
evít
->src2;

8171 
√w_evít
->
des1
 = 
evít
->des1;

8172 
√w_evít
->
des2
 = 
evít
->des2;

8173 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

8174 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8175 
evít
->
∑ª¡
->
chûdCou¡
 ++;

8176 if(
evít
->
∑ª¡
->
sh¨î_num
)

8177 
evít
->
∑ª¡
->
ödividuÆ_chûdCou¡
[
block_off£t
] ++;

8178 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

8179 
	`dú_evítq_ö£π
(
√w_evít
);

8183 
dl1_blk
->
°©e
 = 
MESI_INVALID
;

8184 
dl1_blk
->
°©us
 = 0;

8189 if(!
L1_hô
)

8190 if–
evít
->
∑ª¡
->
sh¨î_num
 )

8192 
ªˇŒ_öv_i_Q_num
++;

8193 if(
evít
->
ml2_dú_blk_°©e
 =
MESI_SHARED
)

8194 
ªˇŒ_öv_i_Q_s_num
++;

8195 if((
evít
->
ml2_dú_blk_°©e
 =
MESI_MODIFIED
Ë|| (evít->ml2_dú_blk_°©ê=
MESI_EXCLUSIVE
))

8196 
ªˇŒ_öv_i_Q_ed_num
++;

8198 
wrôe_öv_i_QM_num
++;

8203 
DIR_SHR_READ
:

8204 
cou¡
 = (
evít
->
des1
-
MEM_LOC_SHIFT
Ë* 
mesh_size
 +Évít->
des2
;

8205 
˝1
 = 
ˇche_dl1
[
cou¡
];

8206 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

8207 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

8208 
dl1_blk
 = 
˝1
->
£ts
[
£t
].
way_hód
; dl1_blk; dl1_blk =dl1_blk->
way_√xt
)

8210 i‡((
dl1_blk
->
ègid
.
èg
 =ègË&& (dl1_blk->
°©us
 & 
CACHE_BLK_VALID
))

8211 
L1_hô
 = 1;

8213 i‡–
L1_hô
 )

8214 
∑ckë_size
 = 
d©a_∑ckë_size
;

8216 
∑ckë_size
 = 
mëa_∑ckë_size
;

8217 
evít
->
›î©i⁄
 = 
ACK_SHR_READ
;

8218 
evít
->
L1_hô
 = L1_hit;

8219 
evít
->
§c1
 +evít->
des1
;

8220 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

8221 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

8222 
evít
->
§c2
 +evít->
des2
;

8223 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

8224 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

8225 
evít
->
¥o˚ssögD⁄e
 = 0;

8226 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8228 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

8229 
	`dú_evítq_ö£π
(
evít
);

8232 
ACK_SHR_READ
:

8233 if(
evít
->
blk_dú
->
Æl_sh¨ed_í
)

8234 
	`∑nic
("ACK_SHR_READáll_shared_enÉrror \n");

8235 (
evít
->
blk_dú
)->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8236 i‡–!
evít
->
L1_hô
 && !evít->
qblk_£t_shi·
)

8237 
evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] &~ (()1 << ((”vít->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
)%64));

8238 i‡–!
evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] )

8240 
evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_INVALID
;

8241 
evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = -1;

8243 i‡(
	`Is_Ex˛usiveOrDúty
((
evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
]))

8245 
evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

8248 i‡(
evít
->
L1_hô
 || 
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

8251 
ve˘‹_cou¡
;

8252 
PVC_ml2_£t
;

8254 i‡–
	`ml2_£t_m©ch_func
(
evít
->
blk_dú
, 
ml2_mul_£t
) )

8255 
PVC_ml2_£t
 = 
ml2_mul_£t
;

8256 i‡–
	`ml2_£t_m©ch_func
(
evít
->
blk_dú
, 
ml2_sub_£t
) )

8257 
PVC_ml2_£t
 = 
ml2_sub_£t
;

8259 
	`∑nic
("must hit\n");

8261 
ve˘‹_cou¡
 = 
	`ve˘‹_cou¡_func
(
evít
->
blk_dú
);

8262 if(
	`Is_Sh¨ed
(
evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
]) == 1)

8265 
PVC_ve˘‹_öc_di°r_ªc‹d_num
++;

8266 
PVC_ve˘‹_öc_di°r
[
ve˘‹_cou¡
]++;

8267 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_öc_di°r_ªc‹d_num
++;

8268 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_öc_di°r
[
ve˘‹_cou¡
]++;

8269 
ve˘‹_cou¡
++;

8272 
PVC_ve˘‹_di°r_ªc‹d_num
++;

8273 
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

8274 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_di°r_ªc‹d_num
++;

8275 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

8277 if–
evít
->
blk_dú
->
±r_í
 )

8278 
	`∑nic
("no sharer data obtain forÖointer\n");

8279 
evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64) | (event->blk_dir)->dir_sharer[block_offset][tempID/64];

8280 
evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
	`IsSh¨ed
(”vít->blk_dú)->
dú_sh¨î
[block_off£t], 
ãmpID
Ë? 
MESI_SHARED
 : 
MESI_EXCLUSIVE
;

8281 
evít
->
›î©i⁄
 = 
	`IsSh¨ed
(”vít->
blk_dú
)->
dú_sh¨î
[
block_off£t
], 
ãmpID
Ë? 
ACK_DIR_READ_SHARED
 : 
ACK_DIR_READ_EXCLUSIVE
;

8282 
∑ckë_size
 = 
d©a_∑ckë_size
;

8283 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

8284 
evít
->
§c1
 =Évít->
des1
;

8285 
evít
->
§c2
 =Évít->
des2
;

8286 
evít
->
des1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

8287 
evít
->
des2
 = 
ãmpID
%
mesh_size
;

8288 
evít
->
¥o˚ssögD⁄e
 = 0;

8289 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8290 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

8291 
	`dú_evítq_ö£π
(
evít
);

8296 if(
evít
->
blk_dú
->
qblk_£t_shi·
)

8298 
ªad_Q_hô_num
--;

8299 
mb_∑ö_cou¡
--;

8302 
ªad_S_hô_num
--;

8303 
evít
->
›î©i⁄
 =Évít->
∑ª¡_›î©i⁄
;

8304 
evít
->
§c1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

8305 
evít
->
§c2
 = 
ãmpID
%
mesh_size
;

8306 
evít
->
whí
 = 
sim_cy˛e
;

8307 
evít
->
no_L2_dñay
 = 1;

8308 
	`dú_evítq_ö£π
(
evít
);

8313 
ACK_MSG_READ
 :

8314 
ACK_MSG_READUPDATE
 :

8315 
dˇche2_ac˚ss
++;

8316 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

8317 
Ród≥ndög
 = 0;

8318 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

8319 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

8320 if(
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] =
DIR_STABLE
)

8321 
	`∑nic
("DIR:áfterÅheÑeceipt of ACK msg, directoryÇot inÅransient state");

8323 
∑ª¡_evít
->
chûdCou¡
 --;

8324 i‡(
evít
->
L1_hô
)

8326 
∑ª¡_evít
->
L1_hô
 = 1;

8327 i‡–
evít
->
addr
 =
∑ª¡_evít
->add∏&& (evít->
L1_hô
 & 1))

8328 
∑ª¡_evít
->
shr_d©a_ªq
 = 0;

8330 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
Ë&& (
evít
->
›î©i⁄
 =
ACK_MSG_READ
))

8331 
dl2_blk
->
°©us
 |
CACHE_BLK_DIRTY
;

8333 if(
∑ª¡_evít
->
chûdCou¡
 != 0)

8334 
	`‰ì_evít
(
evít
);

8337 if(!
∑ª¡_evít
->
L1_hô
)

8339 i‡(
∑ª¡_evít
->
blk_dú
->
Æl_sh¨ed_í
)

8340 
	`∑nic
("ACK_MSG_READáll_shared_enÉrror\n");

8341 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][(
ãmpID
/64)] &~ (()1 << (((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
)%64));

8342 
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_INVALID
;

8343 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = -1;

8345 if–
ve˘‹_num
 == 0 )

8347 if–
nv_brﬂdˇ°
 )

8349 
∑ª¡_evít
->
blk_dú
->
Æl_sh¨ed_í
 = 1;

8350 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][(
ãmpID
/64)] = ()
Æl_sh¨î
;

8351 
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

8352 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = -1;

8356 
∑ª¡_evít
->
blk_dú
->
Æl_sh¨ed_í
 = 0;

8357 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][(
ãmpID
/64)] = 0;

8358 
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_INVALID
;

8359 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = -1;

8363 
dl2_èg
 = 
	`CACHE_TAG
(
dl2
, 
∑ª¡_evít
->
addr
);

8364 
dl2_£t
 = 
	`CACHE_SET
(
dl2
, 
∑ª¡_evít
->
addr
);

8367 i‡–
∑ª¡_evít
->
shr_d©a_ªq
 && !
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

8369 
	`‰ì_evít
(
evít
);

8370 if(
∑ª¡_evít
->
blk_dú
->
qblk_£t_shi·
)

8372 
ªad_Q_hô_num
--;

8373 
mb_∑ö_cou¡
--;

8376 
ªad_S_hô_num
--;

8378 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
∑ª¡_evít
->
addr
, cache_dl2->
£t_shi·
);

8379 
∑ª¡_evít
->
L2miss_Êag
 = 1;

8380 
∑ª¡_evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

8381 if(
∑ª¡_evít
->
isSyncAc˚ss
)

8382 
Sync_L2_miss
 ++;

8383 if(!
m©chnum
)

8385 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

8387 if(!
œ°_L2_mshr_fuŒ
)

8389 
L2_mshr_fuŒ
 ++;

8390 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

8392 if(
tshr_fifo_num
[
∑ª¡_evít
->
des1
*
mesh_size
+
evít
->
des2
] >
tshr_fifo_size
)

8394 
dú_fifo_fuŒ
[
∑ª¡_evít
->
des1
*
mesh_size
+∑ª¡_evít->
des2
] = dir_fifo_full[parent_event->des1*mesh_size+parent_event->des2] - 4;

8396 
∑ª¡_evít
->
§c1
 +∑ª¡_evít->
des1
;

8397 
∑ª¡_evít
->
des1
 =Ö¨ít_evít->
§c1
 -Öarent_event->des1;

8398 
∑ª¡_evít
->
§c1
 =Ö¨ít_evít->§c1 -Ö¨ít_evít->
des1
;

8399 
∑ª¡_evít
->
§c2
 +∑ª¡_evít->
des2
;

8400 
∑ª¡_evít
->
des2
 =Ö¨ít_evít->
§c2
 -Öarent_event->des2;

8401 
∑ª¡_evít
->
§c2
 =Ö¨ít_evít->§c2 -Ö¨ít_evít->
des2
;

8402 
∑ª¡_evít
->
›î©i⁄
 = 
NACK
;

8403 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8404 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

8405 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8406 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

8407 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8412 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8413 
dú_fifo_fuŒ
[
∑ª¡_evít
->
des1
*
mesh_size
+∑ª¡_evít->
des2
] ++;

8414 
∑ª¡_evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

8415 
∑ª¡_evít
->
Êù_Êag
 = 1;

8416 
Êù_cou¡î
 ++;

8417 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8423 
dú_fifo_fuŒ
[
∑ª¡_evít
->
des1
*
mesh_size
+∑ª¡_evít->
des2
] = 0;

8424 if(
œ°_L2_mshr_fuŒ
)

8426 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

8427 
œ°_L2_mshr_fuŒ
 = 0;

8430 if(
cﬁÀ˘_°©s
)

8432 
ˇche_dl2
->
mis£s
 ++;

8433 
ˇche_dl2
->
dmis£s
 ++;

8434 
övﬁve_2_h›s_miss
 ++;

8436 
∑ª¡_evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

8437 
∑ª¡_evít
->
mshr_time
 = 
sim_cy˛e
;

8438 
DIRECTORY_EVENT
 *
√w_evít
;

8439 
√w_evít
 = 
	`Æloˇã_√w_evít
(
∑ª¡_evít
);

8440 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

8441 
√w_evít
->
cmd
 = 
Ród
;

8442 
∑ª¡_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

8443 
∑ª¡_evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

8444 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

8445 
	`dú_evítq_ö£π
(
√w_evít
);

8446 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8447 
evít_¸óãd
 = 
∑ª¡_evít
;

8448 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
∑ª¡_evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

8453 
evít
->
isReqL2SecMiss
 = 1;

8454 if(
cﬁÀ˘_°©s
)

8456 
ˇche_dl2
->
ö_mshr
 ++;

8457 
ˇche_dl2
->
dö_mshr
 ++;

8459 
	`evít_li°_ö£π
(
∑ª¡_evít
, 
m©chnum
);

8460 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8467 
ãmpID
 = 
∑ª¡_evít
->tempID;

8469 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8470 
∑ª¡_evít
->
blk_dú
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

8472 
ve˘‹_cou¡
;

8473 
PVC_ml2_£t
;

8475 i‡–
	`ml2_£t_m©ch_func
(
∑ª¡_evít
->
blk_dú
, 
ml2_mul_£t
) )

8476 
PVC_ml2_£t
 = 
ml2_mul_£t
;

8477 i‡–
	`ml2_£t_m©ch_func
(
∑ª¡_evít
->
blk_dú
, 
ml2_sub_£t
) )

8478 
PVC_ml2_£t
 = 
ml2_sub_£t
;

8480 
	`∑nic
("must hit\n");

8481 
ve˘‹_cou¡
 = 
	`ve˘‹_cou¡_func
(
∑ª¡_evít
->
blk_dú
);

8482 if(
	`Is_Sh¨ed
(
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
]) == 1)

8484 
PVC_ve˘‹_öc_di°r_ªc‹d_num
++;

8485 
PVC_ve˘‹_öc_di°r
[
ve˘‹_cou¡
]++;

8486 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_öc_di°r_ªc‹d_num
++;

8487 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_öc_di°r
[
ve˘‹_cou¡
]++;

8488 
ve˘‹_cou¡
++;

8491 
PVC_ve˘‹_di°r_ªc‹d_num
++;

8492 
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

8493 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_di°r_ªc‹d_num
++;

8494 
ˇche_ml2
->
£ts
[
PVC_ml2_£t
].
PVC_ve˘‹_di°r
[
ve˘‹_cou¡
]++;

8496 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] |= ()1<<(tempID%64);

8497 
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
	`IsSh¨ed
(’¨ít_evít->blk_dú)->
dú_sh¨î
[block_off£t], 
ãmpID
Ë? 
MESI_SHARED
 : 
MESI_EXCLUSIVE
;

8498 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = -1;

8500 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

8501 
dl2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8504 
∑ª¡_evít
->
›î©i⁄
 = 
	`IsSh¨ed
(’¨ít_evít->
blk_dú
)->
dú_sh¨î
[
block_off£t
], 
ãmpID
Ë? 
ACK_DIR_READ_SHARED
 : 
ACK_DIR_READ_EXCLUSIVE
;

8505 
∑ckë_size
 = 
d©a_∑ckë_size
;

8506 
∑ª¡_evít
->
ªqAckTime
 = 
sim_cy˛e
;

8507 
∑ª¡_evít
->
§c1
 = 
evít
->
des1
;

8508 
∑ª¡_evít
->
§c2
 = 
evít
->
des2
;

8509 
∑ª¡_evít
->
des1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

8510 
∑ª¡_evít
->
des2
 = 
ãmpID
%
mesh_size
;

8511 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

8512 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8513 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

8514 
	`‰ì_evít
(
evít
);

8515 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8521 
ACK_MSG_WRITE
 :

8522 
ACK_MSG_WRITEUPDATE
:

8523 
dˇche2_ac˚ss
++;

8524 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

8525 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

8526 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

8527 if(
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] =
DIR_STABLE
)

8528 
	`∑nic
("DIR:áfterÅheÑeceipt of ACK msg, directoryÇot inÅransient state");

8531 
∑ª¡_evít
->
chûdCou¡
 --;

8532 i‡–
evít
->
L1_hô
 &&Évít->
shr_d©a_ªq
)

8533 
evít
->
∑ª¡
->
shr_d©a_ªq
 = 0;

8534 if–
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
Ë&& (
evít
->
›î©i⁄
 =
ACK_MSG_WRITE
) )

8535 
dl2_blk
->
°©us
 |
CACHE_BLK_DIRTY
;

8536 if–!
∑ª¡_evít
->
sh¨î_num
 )

8537 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][(((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
)/64)] &= ~ (()1 << (((event->src1-MEM_LOC_SHIFT)*mesh_size+event->src2)%64));

8540 if(
∑ª¡_evít
->
sh¨î_num
)

8541 
∑ª¡_evít
->
ödividuÆ_chûdCou¡
[
block_off£t
] --;

8543 if(
∑ª¡_evít
->
sh¨î_num
 &&Ö¨ít_evít->
ödividuÆ_chûdCou¡
[
block_off£t
] == 0)

8545 
∑ª¡_evít
->
sh¨î_num
 --;

8546 if(
∑ª¡_evít
->
sh¨î_num
 != 0)

8548 
	`‰ì_evít
(
evít
);

8551 
∑ª¡_evít
->
sh¨î_num
 = 100;

8554 if(
∑ª¡_evít
->
chûdCou¡
 == 0)

8557 
∑ª¡_evít
->
blk_dú
->
Æl_sh¨ed_í
 = 0;

8559 
ãmpID
 = 
∑ª¡_evít
->tempID;

8560 
block_off£t
 = 
	`blockoff£t
(
∑ª¡_evít
->
addr
);

8562 
dl2_èg
 = 
	`CACHE_TAG
(
dl2
, 
∑ª¡_evít
->
addr
);

8563 
dl2_£t
 = 
	`CACHE_SET
(
dl2
, 
∑ª¡_evít
->
addr
);

8565 
ml2_mul_èg
 = 
	`CACHE_QBLK_TAG
(
ml2
, 
∑ª¡_evít
->
addr
);

8566 
ml2_mul_£t
 = 
	`CACHE_QBLK_SET
(
ml2
, 
∑ª¡_evít
->
addr
);

8567 
ml2_sub_èg
 = 
	`CACHE_TAG
(
ml2
, 
∑ª¡_evít
->
addr
);

8568 
ml2_sub_£t
 = 
	`CACHE_SET
(
ml2
, 
∑ª¡_evít
->
addr
);

8571 if(
∑ª¡_evít
->
sh¨î_num
 != 100)

8573 
∑ª¡_evít
->
blk_dú
->
°©us
 = 
CACHE_BLK_VALID
;

8575 i‡–!
∑ª¡_evít
->
shr_d©a_ªq
 || 
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
) )

8577 if(
	`födCacheSètus
(
dl2
, 
dl2_£t
, 
dl2_èg
, 
dl2_hödex
, &
dl2_blk
))

8578 
dl2_blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8580 
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

8581 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8582 
∑ª¡_evít
->
blk_dú
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

8584 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

8585 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

8586 if(
∑ª¡_evít
->
›î©i⁄
 =
WRITE_UPDATE
)

8588 
∑ckë_size
 = 
mëa_∑ckë_size
;

8589 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

8591 if(
∑ª¡_evít
->
›î©i⁄
 =
MISS_WRITE
)

8593 
∑ckë_size
 = 
d©a_∑ckë_size
;

8594 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

8596 
∑ª¡_evít
->
§c1
 = 
evít
->
des1
;

8597 
∑ª¡_evít
->
§c2
 = 
evít
->
des2
;

8598 
∑ª¡_evít
->
des1
 =Ö¨ít_evít->
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

8599 
∑ª¡_evít
->
des2
 =Ö¨ít_evít->
ãmpID
%
mesh_size
;

8600 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

8601 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8602 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8603 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

8604 
	`‰ì_evít
(
evít
);

8610 
	`‰ì_evít
(
evít
);

8612 
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
] = 
MESI_INVALID
;

8613 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

8614 if(
∑ª¡_evít
->
blk_dú
->
qblk_£t_shi·
)

8616 
wrôe_Q_hô_num
--;

8617 
mb_∑ö_cou¡
--;

8620 
wrôe_S_hô_num
--;

8622 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
block_off£t
] = -1;

8623 
∑ª¡_evít
->
blk_dú
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = 0;

8626 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
∑ª¡_evít
->
addr
, cache_dl2->
£t_shi·
);

8627 
∑ª¡_evít
->
L2miss_Êag
 = 1;

8628 
∑ª¡_evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

8629 if(
∑ª¡_evít
->
isSyncAc˚ss
)

8630 
Sync_L2_miss
 ++;

8631 if(!
m©chnum
)

8633 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

8635 if(!
œ°_L2_mshr_fuŒ
)

8637 
L2_mshr_fuŒ
 ++;

8638 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

8640 if(
tshr_fifo_num
[
∑ª¡_evít
->
des1
*
mesh_size
+
evít
->
des2
] >
tshr_fifo_size
)

8642 
dú_fifo_fuŒ
[
∑ª¡_evít
->
des1
*
mesh_size
+∑ª¡_evít->
des2
] = dir_fifo_full[parent_event->des1*mesh_size+parent_event->des2] - 4;

8644 
∑ª¡_evít
->
§c1
 +∑ª¡_evít->
des1
;

8645 
∑ª¡_evít
->
des1
 =Ö¨ít_evít->
§c1
 -Öarent_event->des1;

8646 
∑ª¡_evít
->
§c1
 =Ö¨ít_evít->§c1 -Ö¨ít_evít->
des1
;

8647 
∑ª¡_evít
->
§c2
 +∑ª¡_evít->
des2
;

8648 
∑ª¡_evít
->
des2
 =Ö¨ít_evít->
§c2
 -Öarent_event->des2;

8649 
∑ª¡_evít
->
§c2
 =Ö¨ít_evít->§c2 -Ö¨ít_evít->
des2
;

8650 
∑ª¡_evít
->
›î©i⁄
 = 
NACK
;

8651 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8652 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

8653 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8654 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

8655 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8660 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8661 
dú_fifo_fuŒ
[
∑ª¡_evít
->
des1
*
mesh_size
+∑ª¡_evít->
des2
] ++;

8662 
∑ª¡_evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

8663 
∑ª¡_evít
->
Êù_Êag
 = 1;

8664 
Êù_cou¡î
 ++;

8665 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8671 
dú_fifo_fuŒ
[
∑ª¡_evít
->
des1
*
mesh_size
+∑ª¡_evít->
des2
] = 0;

8672 if(
œ°_L2_mshr_fuŒ
)

8674 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

8675 
œ°_L2_mshr_fuŒ
 = 0;

8678 if(
cﬁÀ˘_°©s
)

8680 
ˇche_dl2
->
mis£s
 ++;

8681 
ˇche_dl2
->
dmis£s
 ++;

8682 
övﬁve_2_h›s_miss
 ++;

8684 
∑ª¡_evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

8685 
∑ª¡_evít
->
mshr_time
 = 
sim_cy˛e
;

8686 
DIRECTORY_EVENT
 *
√w_evít
;

8687 
√w_evít
 = 
	`Æloˇã_√w_evít
(
∑ª¡_evít
);

8688 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

8689 
√w_evít
->
cmd
 = 
Ród
;

8690 
∑ª¡_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

8691 
∑ª¡_evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

8692 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

8693 
	`dú_evítq_ö£π
(
√w_evít
);

8694 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8695 
evít_¸óãd
 = 
∑ª¡_evít
;

8696 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
∑ª¡_evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

8701 
evít
->
isReqL2SecMiss
 = 1;

8702 if(
cﬁÀ˘_°©s
)

8704 
ˇche_dl2
->
ö_mshr
 ++;

8705 
ˇche_dl2
->
dö_mshr
 ++;

8707 
	`evít_li°_ö£π
(
∑ª¡_evít
, 
m©chnum
);

8708 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

8716 if(
∑ª¡_evít
->
sh¨î_num
 != 100)

8717 
	`∑nic
("WAIT_MEM_READ: sharer_num should be zeroÇow!\n");

8718 if(!
∑ª¡_evít
->
blk_dú
->
qblk_£t_shi·
)

8719 
ml2_£t
 = 
ml2_sub_£t
;

8721 
ml2_£t
 = 
ml2_mul_£t
;

8723 
i
=0, 
m
=0, 
ôî©i⁄
 = 1;

8724 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

8725 
ôî©i⁄
 = iteration * 2;

8726 
m
=0; m<
ôî©i⁄
; m++)

8728 
∑ª¡_evít
->
blk_dú
->
dú_dúty
[
m
] = -1;

8729 
∑ª¡_evít
->
blk_dú
->
dú_°©e
[
m
] = 
DIR_STABLE
;

8730 
∑ª¡_evít
->
blk_dú
->
±r_cur_evít
[
m
] = 
NULL
;

8732 
∑ª¡_evít
->
blk_dú
->
ªady
 = 
sim_cy˛e
;

8734 if–
∑ª¡_evít
->
›î©i⁄
 =
VEC_DEGRADE
 )

8736 
	`‰ì_evít
(
evít
);

8737 
	`‰ì_evít
(
∑ª¡_evít
);

8740 if–(
∑ª¡_evít
->
blk_dú
->
dú_blk_°©e
[
block_off£t
]==
MESI_SHARED
Ë&& (
	`Is_Sh¨ed
’¨ít_evít->blk_dú->
dú_sh¨î
[block_offset])<2) )

8741 
	`∑nic
("stateÉrror\n");

8743 i‡(
ml2
->
hsize
)

8744 
	`lök_hèb_ít
(
ml2
, &ml2->
£ts
[
ml2_£t
], 
∑ª¡_evít
->
blk_dú
);

8748 
ml2
->
œ°_èg£tid
.
èg
 = 
∑ª¡_evít
->
blk_dú
->
ègid
.tag;

8749 
ml2
->
œ°_èg£tid
.
thªadid
 = 
∑ª¡_evít
->
blk_dú
->
ègid
.threadid;

8750 
ml2
->
œ°_blk
 = (
∑ª¡_evít
->
blk_dú
);

8753 i‡(
∑ª¡_evít
->
ud©a
)

8754 *(
∑ª¡_evít
->
ud©a
Ë’¨ít_evít->
blk_dú
)->
u£r_d©a
;

8756 
∑ª¡_evít
->
›î©i⁄
 =Ö¨ít_evít->
∑ª¡_›î©i⁄
;

8757 
∑ª¡_evít
->
sh¨î_num
 = 0;

8758 
∑ª¡_evít
->
whí
 = 
sim_cy˛e
;

8759 
∑ª¡_evít
->
no_L2_dñay
 = 1;

8760 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

8763 
	`‰ì_evít
(
evít
);

8766 
ACK_DIR_IL1
 :

8767 
iˇche_ac˚ss
++;

8768 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
iˇche_ac˚ss
++;

8770 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

8771 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

8773 (
evít
->
˝
)->
pﬁicy
)

8775 
bödex
;

8776 
LRU
:

8777 
FIFO
:

8778 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

8779 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

8781 
R™dom
:

8782 
bödex
 = 
	`myønd
 (Ë& ((
evít
->
˝
)->
assoc
 - 1);

8783 
ª∂
 = 
	`CACHE_BINDEX
 ((
evít
->
˝
), (evít->˝)->
£ts
[
£t
].
blks
, 
bödex
);

8786 
	`∑nic
 ("bogusÑeplacementÖolicy");

8788 i‡(
cﬁÀ˘_°©s
)

8789 
evít
->
˝
->
ª∂a˚míts
++;

8790 
ª∂
->
ègid
.
èg
 =Åag;

8791 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

8792 
ª∂
->
addr
 = 
evít
->addr;

8793 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

8794 
ª∂
->
°©e
 = 
MESI_SHARED
;

8797 
bofs
 = 
	`CACHE_BLK
(
evít
->
˝
,Évít->
addr
);

8798 i‡((
evít
->
˝
)->
bÆloc
 && (evít->
vp
))

8799 
	`CACHE_BCOPY
(
evít
->
cmd
, 
ª∂
, 
bofs
,Évít->
vp
,Évít->
nbyãs
);

8801 (
evít
->
˝
)->
œ°_èg£tid
.
èg
 = 0;

8802 (
evít
->
˝
)->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

8803 (
evít
->
˝
)->
œ°_blk
 = 
ª∂
;

8806 i‡(
evít
->
ud©a
)

8807 *(
evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

8809 if(
cﬁÀ˘_°©s
)

8810 
tŸÆIL1missh™dÀtime
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

8812 
ª∂
->
ªady
 = 
sim_cy˛e
;

8814 i‡((
evít
->
˝
)->
hsize
)

8815 
	`lök_hèb_ít
((
evít
->
˝
), &”vít->˝)->
£ts
[
£t
], 
ª∂
);

8817 
thec⁄ãxts
[
ãmpID
]->
ruu_„tch_issue_dñay
 = 0;

8818 
thec⁄ãxts
[
ãmpID
]->
evít
 = 
NULL
;

8819 
	`‰ì_evít
(
evít
);

8822 
ACK_DIR_WRITE
 :

8823 
ACK_DIR_WRITEUPDATE
:

8824 
ACK_DIR_READ_EXCLUSIVE
:

8825 
ACK_DIR_READ_SHARED
:

8826 
dˇche_ac˚ss
++;

8827 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

8830 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

8831 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

8832 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

8833 
m_upd©e_miss
[
evít
->
ãmpID
] = 0;

8835 (
evít
->
˝
)->
pﬁicy
)

8837 
bödex
, 
i
=0;

8838 
LRU
:

8839 
FIFO
:

8840 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

8842 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

8843 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

8847 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

8848 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

8851 
R™dom
:

8852 
bödex
 = 
	`myønd
 (Ë& ((
evít
->
˝
)->
assoc
 - 1);

8853 
ª∂
 = 
	`CACHE_BINDEX
 ((
evít
->
˝
), (evít->˝)->
£ts
[
£t
].
blks
, 
bödex
);

8856 
	`∑nic
 ("bogusÑeplacementÖolicy");

8859 
éb_°©e
 = -1;

8860 
	`déb_ac˚ss
 ( ((
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
), 
ª∂
->
addr
, &
éb_°©e
 );

8862 
öf‹m_back_í
;

8863 
öf‹m_back_í
 = 
tŸÆ_öf‹m_back_í
 && ((
éb_°©e
 =
SHARED_WRITE
Ë|| (éb_°©ê=-1)Ë&& ((
mu…i_blk_ad≠_í
 && 
mu…i_blk_ad≠_öf‹m_í
Ë|| !
mu…i_blk_£t_shi·
);

8865 i‡––
öf‹m_back_í
 || (
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
) )

8866 && (
ª∂
->
°©us
 & 
CACHE_BLK_VALID
Ë&& (
a˘uÆPro˚ss
 =1Ë&& !
	`md_ãxt_addr
‘ïl->
addr
, 
ãmpID
) )

8868 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& !‘ïl->
°©e
 =
MESI_MODIFIED
))

8869 
	`∑nic
 ("Cache Block should have been modified here");

8871 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

8872 if(
√w_evít
 =
NULL
)

8873 
	`∑nic
("Out of Virtual Memory");

8874 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

8876 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK
;

8877 
∑ckë_size
 = 
d©a_∑ckë_size
;

8881 
√w_evít
->
›î©i⁄
 = 
INFORM_BACK
;

8882 
∑ckë_size
 = 
mëa_∑ckë_size
;

8884 
√w_evít
->
c⁄f_bô
 = -1;

8885 
√w_evít
->
ªq_time
 = 0;

8886 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

8887 
√w_evít
->
≥ndög_Êag
 = 0;

8888 
√w_evít
->
›
 = 
evít
->op;

8889 
√w_evít
->
§c1
 = 
evít
->
des1
;

8890 
√w_evít
->
§c2
 = 
evít
->
des2
;

8892 
md_addr_t
 
§c
 = (
ª∂
->
addr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

8893 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8894 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

8895 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

8896 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

8897 
√w_evít
->
∑ª¡
 = 
NULL
;

8898 
√w_evít
->
blk_dú
 = 
NULL
;

8899 
√w_evít
->
chûdCou¡
 = 0;

8900 
√w_evít
->
ãmpID
 = 
evít
->tempID;

8901 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

8902 
√w_evít
->
ª£nd
 = 0;

8903 
√w_evít
->
blk1
 = 
ª∂
;

8904 
√w_evít
->
addr
 = 
ª∂
->addr;

8905 
√w_evít
->
˝
 = 
evít
->cp;

8906 
√w_evít
->
vp
 = 
NULL
;

8907 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

8908 
√w_evít
->
ud©a
 = 
NULL
;

8909 
√w_evít
->
cmd
 = 
Wrôe
;

8910 
√w_evít
->
rs
 = 
NULL
;

8911 
√w_evít
->
•ec_mode
 = 0;

8912 
√w_evít
->
d©a_ª∂y
 = 0;

8914 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
∑ckë_size
, 0);

8915 
	`dú_evítq_ö£π
(
√w_evít
);

8919 
ª∂
->
ègid
.
èg
 =Åag;

8920 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

8921 
ª∂
->
addr
 = 
evít
->addr;

8922 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

8925 
bofs
 = 
	`CACHE_BLK
(
evít
->
˝
,Évít->
addr
);

8926 i‡((
evít
->
˝
)->
bÆloc
 && (evít->
vp
))

8927 
	`CACHE_BCOPY
(
evít
->
cmd
, 
ª∂
, 
bofs
,Évít->
vp
,Évít->
nbyãs
);

8930 
ª∂
->
W‹dU£Fœg
[‘ïl->
addr
>>2) & 7] = 1;

8931 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
)

8933 
ª∂
->
RódCou¡
 ++;

8934 
ª∂
->
Ty≥
 = 
PRIVATE
;

8935 
ª∂
->
°©e
 = 
MESI_EXCLUSIVE
;

8937 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
)

8939 
ª∂
->
RódCou¡
 ++;

8940 
ª∂
->
Ty≥
 = 
SHARED_READ_ONLY
;

8941 
ª∂
->
°©e
 = 
MESI_SHARED
;

8943 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
)

8945 
ª∂
->
WrôeCou¡
 ++;

8946 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

8947 
ª∂
->
Ty≥
 = 
SHARED_READ_WRITE
;

8948 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
)

8949 
ª∂
->
Ty≥
 = 
PRIVATE
;

8950 
ª∂
->
°©e
 = 
MESI_MODIFIED
;

8951 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

8953 
evít
->
˝
->
œ°_èg£tid
.
èg
 = 0;

8954 
evít
->
˝
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

8955 
evít
->
˝
->
œ°_blk
 = 
ª∂
;

8958 i‡(
evít
->
ud©a
)

8959 *(
evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

8961 
missH™dÀTime
 = 
sim_cy˛e
 - 
evít
->
°¨ãd
;

8963 if(!
evít
->
isReqL2Hô
)

8965 i‡–
evít
->
cmd
 =
Ród
 )

8967 
ªad_L2_miss_num
 ++;

8968 
ªad_L2_miss_tŸÆ_time
 +
missH™dÀTime
;

8971 #ifde‡
L2_TRACE


8972 
FILE
 *
fL2Tø˚
;

8973 
fL2Tø˚
=
	`f›í
(
L2_åa˚
,"at+");

8974 
	`Ârötf
(
fL2Tø˚
,"%dÑód_mis† %Œd %d\n", 
ãmpID
,
sim_cy˛e
,
d©a_∑ckë_size
);

8975 
	`f˛o£
(
fL2Tø˚
);

8979 i‡–
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 )

8981 
wrôe_L2_miss_num
 ++;

8982 
wrôe_L2_miss_tŸÆ_time
 +
missH™dÀTime
;

8984 #ifde‡
L2_TRACE


8985 
FILE
 *
fL2Tø˚
;

8986 
fL2Tø˚
=
	`f›í
(
L2_åa˚
,"at+");

8987 
	`Ârötf
(
fL2Tø˚
,"%d wrôe_mis† %Œd %d\n", 
ãmpID
,
sim_cy˛e
,
d©a_∑ckë_size
);

8988 
	`f˛o£
(
fL2Tø˚
);

8996 i‡–
evít
->
cmd
 =
Ród
 )

8998 
ªad_L1_miss_L2_hô_num
 ++;

8999 
ªad_L1_miss_L2_hô_tŸÆ_time
 +
missH™dÀTime
;

9001 #ifde‡
L2_TRACE


9002 
FILE
 *
fL2Tø˚
;

9003 
fL2Tø˚
=
	`f›í
(
L2_åa˚
,"at+");

9004 
	`Ârötf
(
fL2Tø˚
,"%dÑód_hô %Œd %d\n", 
ãmpID
,
sim_cy˛e
,
d©a_∑ckë_size
);

9005 
	`f˛o£
(
fL2Tø˚
);

9010 i‡–
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 )

9012 
wrôe_L1_miss_L2_hô_num
 ++;

9013 
wrôe_L1_miss_L2_hô_tŸÆ_time
 +
missH™dÀTime
;

9015 #ifde‡
L2_TRACE


9016 
FILE
 *
fL2Tø˚
;

9017 
fL2Tø˚
=
	`f›í
(
L2_åa˚
,"at+");

9018 
	`Ârötf
(
fL2Tø˚
,"%d wrôe_hô %Œd %d\n", 
ãmpID
,
sim_cy˛e
,
d©a_∑ckë_size
);

9019 
	`f˛o£
(
fL2Tø˚
);

9025 if(
cﬁÀ˘_°©s
)

9027 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 &&Évít->
isReqL2Hô
 && !evít->
isReqL2SecMiss
)

9029 
tŸÆWrôeReq
++;

9030 
tŸÆWrôeReqInv
 +((
evít
->
ªqAckTime
 =evít->
ªqAtDúTime
) ? 0 : 1);

9031 
tŸÆWrôeDñay
 +(
sim_cy˛e
 - 
evít
->
°¨ãd
);

9032 
tŸÆWrôeInvDñay
 +(
evít
->
ªqAckTime
 -Évít->
ªqAtDúTime
);

9034 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
 &&Évít->
isReqL2Hô
 && !evít->
isReqL2SecMiss
)

9036 
tŸÆUpgødeReq
++;

9037 
tŸÆUpgødeReqInv
 +((
evít
->
ªqAckTime
 =evít->
ªqAtDúTime
) ? 0 : 1);

9038 
tŸÆUpgødeDñay
 +(
sim_cy˛e
 - 
evít
->
°¨ãd
);

9039 
tŸÆUpgødeInvDñay
 +(
evít
->
ªqAckTime
 -Évít->
ªqAtDúTime
);

9042 
tŸÆUpgødeMiss
 ++;

9044 
tŸÆmissh™dÀtime
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

9045 if(
evít
->
isSyncAc˚ss
)

9046 
tŸÆmis°imef‹Sync
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

9049 
tŸÆmis°imef‹N‹mÆ
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

9050 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_com∂ëe
 &&Évít->
L2miss_°©ed
)

9052 
tŸÆL2mis°ime
 +
evít
->
L2miss_com∂ëe
 -Évít->
L2miss_°©ed
;

9053 
TŸÆL2mis£s
 ++;

9055 if(
evít
->
L2miss_Êag
)

9056 
tŸÆWr⁄gL2mis°ime
 ++;

9060 
ª∂
->
ªady
 = 
sim_cy˛e
;

9062 if–(
evít
->
¥e„tch_√xt
 =2 ||Évít->¥e„tch_√xà=4Ë&& (evít->
›î©i⁄
 =
ACK_DIR_READ_SHARED
 ||Évít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
) )

9063 
ª∂
->
isL1¥e„tch
 = 1;

9065 
ª∂
->
isL1¥e„tch
 = 0;

9067 i‡((
evít
->
˝
)->
hsize
)

9068 
	`lök_hèb_ít
((
evít
->
˝
), &”vít->˝)->
£ts
[
£t
], 
ª∂
);

9072 if(!
evít
->
•ec_mode
 &&Évít->
rs
)

9074 if((
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
Ë|| (evít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
))

9075 
	`evítq_upd©e
(
evít
->
rs
, 
ª∂
->
ªady
);

9077 
evít
->
rs
->
wrôewaô
 = 2;

9079 
	`mshª¡ry_upd©e
(
evít
, 
ª∂
->
ªady
,Évít->
°¨ãd
);

9080 
	`‰ì_evít
(
evít
);

9083 
MEM_WRITE_BACK
 :

9084 
œt
 = 
dl2
->
	`blk_ac˚ss_‚
(
Wrôe
, 
	`CACHE_BADDR
(dl2,
evít
->
addr
), dl2->
bsize
, 
NULL
, 
sim_cy˛e
,Évít->
ãmpID
);

9085 
	`‰ì_evít
(
evít
);

9088 
MEM_READ_REQ
 :

9089 
œt
 = 
dl2
->
	`blk_ac˚ss_‚
(
Ród
, 
	`CACHE_BADDR
(dl2,
addr
), dl2->
bsize
, 
NULL
, 
sim_cy˛e
, 
ãmpID
);

9090 
evít
->
whí
 = 
sim_cy˛e
 + 
œt
;

9091 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

9092 
evít
->
›î©i⁄
 = 
MEM_READ_REPLY
;

9093 
tŸÆ_mem_œt
 +
œt
;

9094 
tŸÆ_mem_ac˚ss
 ++;

9095 
	`dú_evítq_ö£π
(
evít
);

9098 
MEM_READ_REPLY
 :

9100 
evít
->
mshr_time
 =Évít->
∑ª¡
->mshr_time;

9101 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

9102 
evít
->
§c1
 +evít->
des1
;

9103 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

9104 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

9105 
evít
->
§c2
 +evít->
des2
;

9106 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

9107 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

9108 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

9109 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

9110 
evít
->
¥o˚ssögD⁄e
 = 0;

9111 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

9112 
	`dú_evítq_ö£π
(
evít
);

9113 
i
;

9114 
i
=1;i<(
ˇche_dl2
->
bsize
/
max_∑ckë_size
);i++)

9116 
DIRECTORY_EVENT
 *
√w_evít
;

9117 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

9118 
√w_evít
->
mshr_time
 = 
evít
->
∑ª¡
->mshr_time;

9119 
√w_evít
->
§c1
 = 
evít
->src1;

9120 
√w_evít
->
§c2
 = 
evít
->src2;

9121 
√w_evít
->
des1
 = 
evít
->des1;

9122 
√w_evít
->
des2
 = 
evít
->des2;

9123 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

9124 
√w_evít
->
›î©i⁄
 = 
WAIT_MEM_READ_N_WAIT
;

9125 
√w_evít
->
ªq_time
 = 
evít
->req_time;

9126 
√w_evít
->
whí
 = 
sim_cy˛e
 + ((
ˇche_dl1
[0]->
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()4/
mem_bus_•ìd
))*
i
;

9127 
	`dú_evítq_ö£π
(
√w_evít
);

9132 
WAIT_MEM_READ_N_WAIT
:

9133 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ_N
;

9134 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

9135 
evít
->
¥o˚ssögD⁄e
 = 0;

9136 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

9137 
	`dú_evítq_ö£π
(
evít
);

9140 
WAIT_MEM_READ
 :

9141 
WAIT_MEM_READ_N
 :

9143 i‡–
evít
->
›î©i⁄
 =
WAIT_MEM_READ
 )

9145 
DIRECTORY_EVENT
 *
p_evít
 = 
evít
->
∑ª¡
;

9146 
dˇche2_ac˚ss
++;

9147 
thec⁄ãxts
[(
p_evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+p_evít->
des2
]->
dˇche2_ac˚ss
++;

9148 
p_evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

9149 
dl2
->
pﬁicy
)

9151 
i
;

9152 
bödex
;

9153 
LRU
:

9154 
FIFO
:

9155 
i
 = 
dl2
->
assoc
;

9157 if(
i
 == 0) ;

9158 
i
--;

9159 
ª∂
 = 
dl2
->
£ts
[
dl2_£t
].
way_èû
;

9160 
	`upd©e_way_li°
 (&
dl2
->
£ts
[
dl2_£t
], 
ª∂
, 
Hód
);

9162 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
));

9164 if(
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
))

9166 
Êù_cou¡î
 ++;

9167 
evít
->
Êù_Êag
 = 1;

9168 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

9169 
	`dú_evítq_ö£π
(
evít
);

9173 
R™dom
:

9174 
bödex
 = 
	`myønd
 (Ë& (
dl2
->
assoc
 - 1);

9175 
ª∂
 = 
	`CACHE_BINDEX
 (
dl2
, dl2->
£ts
[
dl2_£t
].
blks
, 
bödex
);

9178 
	`∑nic
 ("bogusÑeplacementÖolicy");

9181 i‡–(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
Ë&& (ª∂->°©u†& 
CACHE_BLK_DIRTY
) )

9183 
DIRECTORY_EVENT
 *
√w_evít
;

9184 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

9185 
√w_evít
->
addr
 = 
ª∂
->addr;

9186 
√w_evít
->
›î©i⁄
 = 
MEM_WRITE_BACK
;

9187 
√w_evít
->
cmd
 = 
Wrôe
;

9188 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 0);

9189 
	`dú_evítq_ö£π
(
√w_evít
);

9191 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

9192 
ª∂
->
ègid
.
èg
 = 
dl2_èg
;

9193 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

9194 
ª∂
->
addr
 =áddr;

9195 
m
=0, 
ôî©i⁄
 = 1, 
Êag
 = 0;

9196 
m
=0; m<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); m++)

9197 
ôî©i⁄
 = iteration * 2;

9198 
m
=0; m<
ôî©i⁄
; m++)

9199 
ª∂
->
dú_°©e
[
m
] = 
DIR_STABLE
;

9201 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

9203 i‡(
ª∂
->
way_¥ev
 && 
dl2
->
pﬁicy
 =
LRU
)

9204 
	`upd©e_way_li°
(&
dl2
->
£ts
[
dl2_£t
], 
ª∂
, 
Hód
);

9206 
dl2
->
œ°_èg£tid
.
èg
 = 
dl2_èg
;

9207 
dl2
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

9208 
dl2
->
œ°_blk
 = 
ª∂
;

9210 
ª∂
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

9213 i‡(
p_evít
->
ud©a
)

9214 *(
p_evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

9216 
ª∂
->
ªady
 = 
sim_cy˛e
;

9218 i‡(
dl2
->
hsize
)

9219 
	`lök_hèb_ít
(
dl2
, &dl2->
£ts
[
dl2_£t
], 
ª∂
);

9223 i‡–(
p_evít
->
éb_°©e
 =
SHARED_WRITE
Ë&& (!p_evít->
blk_dú
) )

9224 
	`∑nic
("it shouldÜocká metaÉntry\n");

9226 i‡–
p_evít
->
blk_dú
 )

9228 
p_evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

9229 
p_evít
->
blk_dú
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

9232 
p_evít
->
›î©i⁄
 =Ö_evít->
∑ª¡_›î©i⁄
;

9233 
p_evít
->
whí
 = 
sim_cy˛e
;

9234 
p_evít
->
no_L2_dñay
 = 1;

9235 
	`dú_evítq_ö£π
(
p_evít
);

9237 
	`upd©e_L2_mshª¡ry
(
evít
->
addr
, 
sim_cy˛e
,Évít->
mshr_time
);

9238 
	`‰ì_evít
(
evít
);

9242 
	`∑nic
("DIR: undefined directory operation");

9245 
	}
}

9247 
	$ª∂_dú_°©e_check
(*
dú_°©e
)

9249 
m
=0, 
ôî©i⁄
 = 1, 
Êag
 = 0;

9250 
m
=0; m<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); m++)

9251 
ôî©i⁄
 = iteration * 2;

9252 
m
=0; m<
ôî©i⁄
; m++)

9253 if(
dú_°©e
[
m
] =
DIR_TRANSITION
)

9254 
Êag
 = 1;

9255  
Êag
;

9256 
	}
}

9265 
tŸÆUpgødes
;

9267 
	$ˇche_ac˚ss
 (
ˇche_t
 *
˝
,

9268 
mem_cmd
 
cmd
,

9269 
md_addr_t
 
addr
,

9270 *
vp
,

9271 
nbyãs
,

9272 
tick_t
 
now
,

9273 
byã_t
 ** 
ud©a
,

9274 
md_addr_t
 * 
ª∂_addr
,

9275 
RUU_°©i⁄
 *
rs
,

9276 
thªadid


9277 , 
m_L1WBufE¡ry
 *
l1_wb_íåy


9280 
	`•rötf
(
dl1«me
, "dl1");

9282 i‡(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
Ë&& cp->
thªadid
 !=Åhreadid)

9283 
	`∑nic
 ("Wrond DL1 cache being called in cacheáccess\n");

9285 if(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
Ë&& 
	`md_ãxt_addr
(
addr
, 
thªadid
))

9286  
ˇche_dl1_œt
;

9289 
byã_t
 *
p
 = 
vp
;

9290 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

9291 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

9292 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

9293 
ˇche_blk_t
 *
blk
, *
ª∂
;

9294 
œt
 = 0, 
˙t
;

9295 
vc
 = -1, 
a
 = 0;

9296 
isSyncAc˚ss
 = 0;

9297 
RUU_°©i⁄
 *
my_rs
 = 
rs
;

9300 
md_addr_t
 
wb_addr
, 
ª∂Addªss
;

9301 
DIRECTORY_EVENT
 *
evít
;

9303 
p‹t_œt
 = 0, 
now_œt
 = 0, 
p‹t_now
 = 0;

9304 #i‡
PROCESS_MODEL


9305 
isSh¨edAddªss
 = 0;

9308 #i‡
PROCESS_MODEL


9310 i‡(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
))

9312 
isSh¨edAddªss
 = 
	`checkF‹Sh¨edAddr
 ((Ë
addr
);

9317 i‡(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
))

9319 i‡(
cmd
 =
Wrôe
)

9321 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

9323 i‡((
quõs˚AddrSåu˘
[
˙t
].
addªss
 =
addr
))

9325 
thec⁄ãxts
[
˙t
]->
‰ìze
 = 0;

9326 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

9327 
quõs˚AddrSåu˘
[
˙t
].
addªss
 = 1;

9328 
quõs˚AddrSåu˘
[
˙t
].
thªadid
 = -1;

9332 #ifde‡ 
L1_STREAM_PREFETCHER


9334 i‡–
STREAM_mö_En
 )

9336 
md_addr_t
 
°ªam_hód_addr
;

9337 if(
rs
)

9339 if(!
rs
->
isSyncIn°
)

9341 
°ªam_hód_addr
 = 
	`°ªam_m©ch_addr
(
addr
, 
thªadid
);

9342 
	`l1œunch_•
 (
°ªam_hód_addr
, 
thªadid
, 1);

9348 
°ªam_hód_addr
 = 
	`°ªam_m©ch_addr
(
addr
, 
thªadid
);

9349 
	`l1œunch_•
 (
°ªam_hód_addr
, 
thªadid
, 1);

9356 i‡(
ª∂_addr
)

9357 *
ª∂_addr
 = 0;

9359 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

9361 
	`¥ötf
("nbyã†i†%d\n", 
nbyãs
);

9362 
	`Áèl
 ("ˇche:ác˚s†îr‹: bad sizê‹álignmít,ádd∏0x%08x", 
addr
);

9365 i‡((
addr
 + 
nbyãs
 - 1Ë> (◊dd∏& ~
˝
->
blk_mask
Ë+ cp->
bsize
 - 1))

9366 
	`∑nic
 ("ˇche:ác˚s†îr‹:ác˚s†•™†block,ádd∏0x%08x", 
addr
);

9368 i‡(
	`°rcmp
 (
˝
->
«me
, 
dl1«me
))

9370 i‡(
˝
->
hsize
)

9373 
hödex
 = (Ë
	`CACHE_HASH
 (
˝
, 
èg
);

9375 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9377 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9378 
ˇche_hô
;

9384 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9386 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9387 
ˇche_hô
;

9393 if(
rs
)

9395 if(
rs
->
isSyncIn°
)

9397 
SyncIn°CacheAc˚ss
 ++;

9398 if(
my_rs
->
ö_LSQ
 != 1)

9399 
my_rs
 = &
thec⁄ãxts
[
thªadid
]->
LSQ
[thec⁄ãxts[thªadid]->
LSQ_hód
];

9400 if(!
my_rs
)

9401 
	`∑nic
("lsq doesÇot haveány data\n");

9402 if(
my_rs
->
›
 =
LDL
)

9403 
Te°CacheAc˚ss
 ++;

9404 if(
my_rs
->
›
 =
LDL_L
)

9405 
Te°SecCacheAc˚ss
 ++;

9406 if(
my_rs
->
›
 =
STL_C
)

9407 
SëCacheAc˚ss
 ++;

9410 if(
l1_wb_íåy
)

9411 if(
l1_wb_íåy
->
›
 =
STL_C
)

9412 
SëCacheAc˚ss
 ++;

9413 
Àvñ1_d©a_ˇche_ac˚ss_num
++;

9414 
cmd
)

9416 
Ród
:

9417 
Àvñ1_d©a_ˇche_ac˚ss_ªad_num
++;

9418 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9420 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
Ë&& ((blk->
°©e
 =
MESI_SHARED
Ë|| (blk->°©ê=
MESI_MODIFIED
Ë|| (blk->°©ê=
MESI_EXCLUSIVE
)))

9422 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_num
++;

9423 i‡–
blk
->
isL1¥e„tch
 )

9425 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_num
++;

9426 
blk
->
isL1¥e„tch
 = 0;

9429 
blk
->
addr
 =áddr;

9431 
blk
->
RódCou¡
 ++;

9432 
blk
->
W‹dU£Fœg
[(blk->
addr
>>2) & 7] = 1;

9434 i‡(
cﬁÀ˘_°©s
)

9436 
blk
->
°©e
)

9438 
MESI_SHARED
:

9439 
˝
->
ccLoˇlLﬂdS
++;

9441 
MESI_EXCLUSIVE
:

9442 
˝
->
ccLoˇlLﬂdX
++;

9444 
MESI_MODIFIED
:

9445 
˝
->
ccLoˇlLﬂdM
++;

9451 
ˇche_hô
;

9455 
Wrôe
:

9456 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_num
++;

9457 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9459 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9461 
blk
->
addr
 =áddr;

9462 
blk
->
°©e
)

9464 
MESI_MODIFIED
:

9465 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_num
++;

9466 i‡–
blk
->
isL1¥e„tch
 )

9468 
	`∑nic
("blk canÇot be dirtyándÖrefetched");

9470 i‡(
cﬁÀ˘_°©s
)

9471 
˝
->
ccLoˇlSt‹eM
++;

9473 
blk
->
WrôeCou¡
 ++;

9474 
blk
->
W‹dU£Fœg
[(blk->
addr
>>2) & 7] = 1;

9475 
ˇche_hô
;

9478 
MESI_SHARED
:

9479 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_num
++;

9480 i‡–
blk
->
isL1¥e„tch
 )

9482 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_FPP_num
++;

9483 
blk
->
isL1¥e„tch
 = 0;

9485 i‡(
cﬁÀ˘_°©s
)

9486 
˝
->
ccLoˇlSt‹eS
++;

9487 i‡(
•ec_bíchm¨ks
)

9488 
	`∑nic
 ("The state canÇever be shared \n");

9490 
blk
->
°©us
 = 0;

9491 if(
rs
)

9492 
isSyncAc˚ss
 = 
rs
->
isSyncIn°
;

9493 if(
l1_wb_íåy
)

9494 if(
l1_wb_íåy
->
›
 =
STL_C
)

9495 
isSyncAc˚ss
 = 1;

9496 
evít
 = (
DIRECTORY_EVENT
 *)

9497 
	`Æloˇã_evít
(
isSyncAc˚ss
);

9498 i‡(!
evít
)

9499 
	`Áèl
("out of virtual memory in calloc dirÉvent");

9501 
§c
;

9502 if(
my_rs
)

9504 
evít
->
›
 = 
my_rs
->op;

9505 
evít
->
isPª„tch
 = !
my_rs
->
issued
;

9506 
evít
->
isSyncAc˚ss
 = isSyncAccess;

9507 
evít
->
•ec_mode
 = 
my_rs
->spec_mode;

9508 if(
my_rs
->
isSyncIn°
)

9510 if(
my_rs
->
›
 =
STL_C
 || my_rs->› =
STQ_C
)

9512 
evít
->
°‹e_c⁄d
 = 
MY_STL_C
;

9513 
SyncSt‹eCWrôeUpgøde
 ++;

9515 if(
my_rs
->
›
 =
STL
)

9517 
SyncSt‹eWrôeUpgøde
 ++;

9518 
evít
->
°‹e_c⁄d
 = 
MY_STL
;

9522 if(
l1_wb_íåy
)

9524 if(
l1_wb_íåy
->
›
 =
STL_C
)

9526 
evít
->
°‹e_c⁄d
 = 
MY_STL_C
;

9527 
SyncSt‹eCWrôeUpgøde
 ++;

9532 
evít
->
›
 = 0;

9533 
evít
->
isPª„tch
 = 0;

9534 
evít
->
isSyncAc˚ss
 = 0;

9535 
evít
->
•ec_mode
 = 0;

9537 
evít
->
§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

9538 
evít
->
§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

9539 #ifde‡
CENTRALIZED_L2


9541 
§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
CENTL2_BANK_NUM
;

9542 
evít
->
des1
 = 
mesh_size
 + 2 ;

9543 
evít
->
des2
 = 
§c
;

9546 
§c
 = (
addr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

9547 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

9548 
evít
->
des2
 = (
§c
 %
mesh_size
);

9550 
evít
->
°¨ãd
 = 
now
;

9551 
evít
->
°¨tCy˛e
 = 
now
;

9552 
evít
->
≥ndög_Êag
 = 0;

9553 
evít
->
d©a_ª∂y
 = 0;

9554 
evít
->
ªq_time
 = 0;

9556 
missNo
 ++;

9557 
evít
->
ª£nd
 = 0;

9558 
evít
->
chûdCou¡
 = 0;

9559 
evít
->
∑ª¡
 = 
NULL
;

9560 
evít
->
›î©i⁄
 = 
WRITE_UPDATE
;

9562 
éb_°©e
 = -1;

9563 
	`déb_ac˚ss
 ( 
thªadid
, 
addr
, &
éb_°©e
 );

9564 
evít
->
éb_°©e
 =Ålb_state;

9565 if–
éb_°©e
 !
SHARED_WRITE
 )

9566 
	`¥ötf
("WRITE_UPDATEÑequest butÇot SHARED_WRITE");

9567 
SW_wrôe_ªque°_num
++;

9569 if(
cﬁÀ˘_°©s
)

9571 
˝
->
övÆid©i⁄s
++;

9572 if–(((
evít
->
addr
)>>
ˇche_dl2
->
£t_shi·
)%
numc⁄ãxts
 =
thec⁄ãxts
[
thªadid
]->
a˘uÆid
) )

9573 
loˇl_ˇche_ac˚ss
++;

9575 
ªmŸe_ˇche_ac˚ss
++;

9578 
m_upd©e_miss
[
thªadid
] = 1;

9580 if(
cﬁÀ˘_°©s
)

9581 
tŸÆevítcou¡num
 ++;

9582 if(
cﬁÀ˘_°©s
 && 
evít
->
isSyncAc˚ss
)

9584 
tŸÆSyncWrôeup
 ++;

9585 
tŸÆSyncEvít
 ++;

9588 
tŸÆN‹mÆEvít
 ++;

9589 
tŸÆUpgødes
++;

9590 
evít
->
ãmpID
 = 
thªadid
;

9591 
evít
->
blk1
 = 
NULL
;

9592 
evít
->
addr
 =áddr;

9593 
evít
->
˝
 = cp;

9594 
evít
->
vp
 = 
p
;

9595 
evít
->
nbyãs
 =Çbytes;

9596 
evít
->
ud©a
 = udata;

9597 
evít
->
cmd
 = cmd;

9598 
evít
->
rs
 =Ñs;

9599 
evít
->
l1_wb_íåy
 =Ü1_wb_entry;

9600 
evít
->
missNo
 = missNo;

9601 
evít
->
l2Sètus
 = 0;

9602 
evít
->
l2MissSèπ
 = 0;

9603 
evít
->
L2miss_Êag
 = 0;

9604 
evít
->
sh¨î_num
 = 0;

9605 
evít
->
dúty_Êag
 = 0;

9606 
evít
->
¨rivÆ_time
 = 0;

9607 
evít
->
c⁄f_bô
 = -1;

9608 
evít
->
öput_buf„r_fuŒ
 = 0;

9610 
	`scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

9611 
	`dú_evítq_ö£π
(
evít
);

9613 
evít_¸óãd
 = 
evít
;

9614 if(
blk
->
isL1¥e„tch
)

9615 
L1_¥e„tch_wrôó·î
 ++;

9617 
œt
 =Ü© + 
WAIT_TIME
;

9618  
œt
;

9621 
MESI_EXCLUSIVE
:

9622 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_num
++;

9623 i‡–
blk
->
isL1¥e„tch
 )

9625 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_FPP_num
++;

9626 
blk
->
isL1¥e„tch
 = 0;

9629 i‡(
cﬁÀ˘_°©s
)

9630 
˝
->
e_to_m
++;

9631 
e_to_m
 ++;

9632 
tŸÆL1LöeExlU£d
++;

9633 
blk
->
°©e
 = 
MESI_MODIFIED
;

9634 
blk
->
WrôeCou¡
 ++;

9635 
blk
->
W‹dU£Fœg
[(blk->
addr
>>2) & 7] = 1;

9636 
ˇche_hô
;

9639 
	`∑nic
 ("ShouldÇot be invalid");

9646 
	`∑nic
 ("CacheÅoÅhe command isÇeitherÑeadÇor write");

9651 
Êag
 = 0, 
√xt_block
 = 0, 
¥e_block
 = 0;

9652 if(!
	`°rcmp
(
˝
->
«me
, 
dl1«me
))

9655 if–
cmd
 =
Ród
 )

9657 
Àvñ1_d©a_ˇche_ac˚ss_ªad_miss_num
++;

9661 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_miss_num
++;

9663 if(
cﬁÀ˘_°©s
)

9665 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9667 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 =0)&& (blk->
°©e
 =
MESI_INVALID
))

9669 
˝
->
cohîí˚_mis£s
 ++;

9670 
Êag
 = 1;

9673 if(
Êag
 != 1)

9674 
˝
->
ˇ∑cô™˚_mis£s
 ++;

9677 if(
rs
)

9678 
isSyncAc˚ss
 = 
rs
->
isSyncIn°
;

9679 if(
l1_wb_íåy
)

9680 if(
l1_wb_íåy
->
›
 =
STL_C
)

9681 
isSyncAc˚ss
 = 1;

9682 
evít
 = (
DIRECTORY_EVENT
 *)

9683 
	`Æloˇã_evít
(
isSyncAc˚ss
);

9685 i‡(!
evít
)

9686 
	`Áèl
("out of virtual memory in calloc dirÉvent");

9687 i‡(
cmd
 =
Ród
)

9689 
evít
->
›î©i⁄
 = 
MISS_READ
;

9690 
tŸÆmisscou¡num
 ++;

9691 
evít
->
isPª„tch
 = 
rs
->isPrefetch;

9695 
evít
->
›î©i⁄
 = 
MISS_WRITE
;

9696 
tŸÆªqcou¡num
 ++;

9697 if(
rs
)

9698 
evít
->
isPª„tch
 = !
rs
->
issued
;

9700 
evít
->
isPª„tch
 = 0;

9702 
éb_°©e
 = -1;

9703 
	`déb_ac˚ss
 ( 
thªadid
, 
addr
, &
éb_°©e
 );

9704 
evít
->
éb_°©e
 =Ålb_state;

9705 if–
éb_°©e
 =
SHARED_WRITE
 )

9707 if(
cmd
 =
Ród
)

9708 
SW_ªad_ªque°_num
++;

9710 
SW_wrôe_ªque°_num
++;

9712 if(
cﬁÀ˘_°©s
)

9713 
tŸÆevítcou¡num
 ++;

9714 if(
cﬁÀ˘_°©s
 && 
isSyncAc˚ss
)

9716 
tŸÆSyncEvít
 ++;

9717 if(
evít
->
›î©i⁄
 =
MISS_WRITE
)

9718 
tŸÆSyncWrôeM
 ++;

9720 
tŸÆSyncRódM
 ++;

9723 
tŸÆN‹mÆEvít
 ++;

9724 
missNo
 ++;

9725 
§c
;

9726 
evít
->
≥ndög_Êag
 = 0;

9727 
evít
->
›
 = 
LDQ
;

9728 
evít
->
§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

9729 
evít
->
§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

9730 #ifde‡
CENTRALIZED_L2


9732 
§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
CENTL2_BANK_NUM
;

9733 
evít
->
des1
 = 
mesh_size
 + 2 ;

9734 
evít
->
des2
 = 
§c
;

9737 
§c
 = (
addr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

9738 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

9739 
evít
->
des2
 = (
§c
 %
mesh_size
);

9741 
evít
->
°¨ãd
 = 
now
;

9742 
evít
->
°¨tCy˛e
 = 
now
;

9743 if(
rs
)

9745 
evít
->
isSyncAc˚ss
 = isSyncAccess;

9746 
evít
->
•ec_mode
 = 
rs
->spec_mode;

9748 if(
l1_wb_íåy
)

9750 if(
l1_wb_íåy
->
›
 =
STL_C
)

9752 
evít
->
isSyncAc˚ss
 = isSyncAccess;

9753 
evít
->
•ec_mode
 = 0;

9758 
evít
->
isSyncAc˚ss
 = 0;

9759 
evít
->
•ec_mode
 = 0;

9762 if(
cﬁÀ˘_°©s
)

9764 
˝
->
mis£s
 ++;

9765 if((
addr
>>
ˇche_dl2
->
£t_shi·
)%
numc⁄ãxts
 =
thec⁄ãxts
[
thªadid
]->
a˘uÆid
)

9766 
loˇl_ˇche_ac˚ss
++;

9768 
ªmŸe_ˇche_ac˚ss
++;

9771 
evít
->
chûdCou¡
 = 0;

9772 
evít
->
∑ª¡
 = 
NULL
;

9773 
evít
->
l2Sètus
 = 0;

9774 
evít
->
l2MissSèπ
 = 0;

9775 
evít
->
ãmpID
 = 
thªadid
;

9776 
evít
->
ª£nd
 = 0;

9777 
evít
->
blk1
 = 
NULL
;

9778 
evít
->
addr
 =áddr;

9779 
evít
->
˝
 = cp;

9780 
evít
->
vp
 = 
p
;

9781 
evít
->
nbyãs
 =Çbytes;

9782 
evít
->
ud©a
 = udata;

9783 
evít
->
cmd
 = cmd;

9784 
evít
->
rs
 =Ñs;

9785 
evít
->
l1_wb_íåy
 =Ü1_wb_entry;

9786 
evít
->
missNo
 = missNo;

9787 
evít
->
L2miss_Êag
 = 0;

9788 
evít
->
sh¨î_num
 = 0;

9789 
evít
->
¥e„tch_√xt
 = 0;

9790 
evít
->
dúty_Êag
 = 0;

9791 
evít
->
¨rivÆ_time
 = 0;

9792 
evít
->
c⁄f_bô
 = -1;

9793 
evít
->
d©a_ª∂y
 = 0;

9794 
evít
->
ªq_time
 = 0;

9795 if(
my_rs
)

9797 if(
my_rs
->
isSyncIn°
 && my_rs->
›
 =
LDL
)

9799 
SyncLﬂdRódMiss
 ++;

9800 
evít
->
°‹e_c⁄d
 = 
MY_LDL
;

9802 if(
my_rs
->
›
 =
LDL_L
)

9804 
SyncLﬂdLRódMiss
 ++;

9805 
evít
->
°‹e_c⁄d
 = 
MY_LDL_L
;

9807 if(
my_rs
->
›
 =
STL_C
)

9809 
SyncSt‹eCWrôeMiss
 ++;

9810 
evít
->
°‹e_c⁄d
 = 
MY_STL_C
;

9812 if(
my_rs
->
isSyncIn°
 && my_rs->
›
 =
STL
)

9814 
SyncSt‹eWrôeMiss
 ++;

9815 
evít
->
°‹e_c⁄d
 = 
MY_STL
;

9819 if(
l1_wb_íåy
)

9821 if(
l1_wb_íåy
->
›
 =
STL_C
)

9823 
SyncSt‹eCWrôeMiss
 ++;

9824 
evít
->
°‹e_c⁄d
 = 
MY_STL_C
;

9830 #ifde‡ 
L1_STREAM_PREFETCHER


9832 i‡(!
dl1_¥e„tch_a˘ive
)

9834 if(
rs
)

9836 if(!
rs
->
isSyncIn°
)

9837 
	`l1ö£π_•
 (
addr
, 
thªadid
);

9840 
	`l1ö£π_•
 (
addr
, 
thªadid
);

9844 
evít_¸óãd
 = 
evít
;

9845 
evít
->
öput_buf„r_fuŒ
 = 0;

9846 
	`scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

9848 
	`dú_evítq_ö£π
(
evít
);

9849  
WAIT_TIME
;

9851 if(!
	`°rcmp
 (
˝
->
«me
, "il1"))

9853 
evít
 = (
DIRECTORY_EVENT
 *)

9854 
	`Æloˇã_evít
(0);

9856 i‡(!
evít
)

9857 
	`Áèl
("out of virtual memory in calloc dirÉvent");

9858 if(
cmd
 =
Wrôe
)

9859 
	`∑nic
("Il1áccess could-notÜeadÅo Write command");

9861 
§c
;

9862 
evít
->
›
 = 
LDQ
;

9863 
evít
->
≥ndög_Êag
 = 0;

9864 
evít
->
›î©i⁄
 = 
MISS_IL1
;

9865 
evít
->
isPª„tch
 = 0;

9866 
evít
->
§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

9867 
evít
->
§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

9868 #ifde‡
CENTRALIZED_L2


9870 
§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
CENTL2_BANK_NUM
;

9871 
evít
->
des1
 = 
mesh_size
 + 2 ;

9872 
evít
->
des2
 = 
§c
;

9875 
§c
 = (
addr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

9876 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

9877 
evít
->
des2
 = (
§c
 %
mesh_size
);

9879 
evít
->
°¨ãd
 = 
now
;

9880 
evít
->
°¨tCy˛e
 = 
now
;

9881 
evít
->
d©a_ª∂y
 = 0;

9882 
evít
->
ªq_time
 = 0;

9884 if(
cﬁÀ˘_°©s
)

9886 
˝
->
mis£s
 ++;

9887 if((
addr
>>
ˇche_dl2
->
£t_shi·
)%
numc⁄ãxts
 =
thec⁄ãxts
[
thªadid
]->
a˘uÆid
)

9888 
loˇl_ˇche_ac˚ss
++;

9890 
ªmŸe_ˇche_ac˚ss
++;

9893 
evít
->
chûdCou¡
 = 0;

9894 
evít
->
∑ª¡
 = 
NULL
;

9895 
evít
->
l2Sètus
 = 0;

9896 
evít
->
l2MissSèπ
 = 0;

9897 
evít
->
ãmpID
 = 
thªadid
;

9898 
evít
->
ª£nd
 = 0;

9899 
evít
->
blk1
 = 
NULL
;

9900 
evít
->
addr
 =áddr;

9901 
evít
->
˝
 = cp;

9902 
evít
->
vp
 = 
p
;

9903 
evít
->
nbyãs
 =Çbytes;

9904 
evít
->
ud©a
 = udata;

9905 
evít
->
cmd
 = cmd;

9906 
evít
->
rs
 = 
NULL
;

9907 
evít
->
l1_wb_íåy
 =Ü1_wb_entry;

9908 
missNo
 ++;

9909 
evít
->
missNo
 = missNo;

9910 
evít
->
L2miss_Êag
 = 0;

9911 
evít
->
sh¨î_num
 = 0;

9912 
evít
->
dúty_Êag
 = 0;

9913 
evít
->
¨rivÆ_time
 = 0;

9914 
evít
->
c⁄f_bô
 = -1;

9915 
evít
->
öput_buf„r_fuŒ
 = 0;

9917 
	`scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

9919 
	`dú_evítq_ö£π
(
evít
);

9920 
evít_¸óãd
 = 
evít
;

9921 
thec⁄ãxts
[
thªadid
]->
evít
 =Évent;

9922  
WAIT_TIME
;

9924 i‡(!
	`°rcmp
 (
˝
->
«me
, "dtlb"))

9927 
evít
 = (
DIRECTORY_EVENT
 *)

9928 
	`Æloˇã_evít
(0);

9929 i‡(!
evít
)

9930 
	`Áèl
("out of virtual memory in calloc dirÉvent");

9931 
§c
;

9932 
evít
->
›
 = 
LDQ
;

9933 
evít
->
≥ndög_Êag
 = 0;

9934 
evít
->
›î©i⁄
 = 
SHR_TLB_MISS
;

9935 
evít
->
isPª„tch
 = 0;

9936 
evít
->
§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

9937 
evít
->
§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

9938 
§c
 = 0;

9939 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

9940 
evít
->
des2
 = (
§c
 %
mesh_size
);

9941 
evít
->
°¨ãd
 = 
now
;

9942 
evít
->
°¨tCy˛e
 = 
now
;

9943 
evít
->
d©a_ª∂y
 = 0;

9944 
evít
->
ªq_time
 = 0;

9945 
evít
->
chûdCou¡
 = 0;

9946 
evít
->
∑ª¡
 = 
NULL
;

9947 
evít
->
l2Sètus
 = 0;

9948 
evít
->
l2MissSèπ
 = 0;

9949 
evít
->
ãmpID
 = 
thªadid
;

9950 
evít
->
ª£nd
 = 0;

9951 
evít
->
blk1
 = 
NULL
;

9952 
evít
->
addr
 =áddr;

9953 
evít
->
˝
 = cp;

9954 
evít
->
vp
 = 
p
;

9955 
evít
->
nbyãs
 =Çbytes;

9956 
evít
->
ud©a
 = udata;

9957 
evít
->
cmd
 = cmd;

9958 
evít
->
rs
 = 
NULL
;

9959 
missNo
 ++;

9960 
evít
->
missNo
 = missNo;

9961 
evít
->
•ec_mode
 = 
thec⁄ãxts
[
thªadid
]->spec_mode;

9962 
evít
->
L2miss_Êag
 = 0;

9963 
evít
->
sh¨î_num
 = 0;

9964 
evít
->
dúty_Êag
 = 0;

9965 
evít
->
¨rivÆ_time
 = 0;

9966 
evít
->
c⁄f_bô
 = -1;

9967 
evít
->
öput_buf„r_fuŒ
 = 0;

9969 
	`scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

9971 
	`dú_evítq_ö£π
(
evít
);

9972 
evít_¸óãd
 = 
evít
;

9973 
thec⁄ãxts
[
thªadid
]->
evít
 =Évent;

9974  
WAIT_TIME
;

9980 
˝
->
pﬁicy
)

9982 
LRU
:

9983 
FIFO
:

9984 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

9985 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
);

9987 
R™dom
:

9989 
bödex
 = 
	`myønd
 (Ë& (
˝
->
assoc
 - 1);

9991 
ª∂
 = 
	`CACHE_BINDEX
 (
˝
, cp->
£ts
[
£t
].
blks
, 
bödex
);

9995 
	`∑nic
 ("bogusÑeplacementÖolicy");

9999 i‡(
	`°rcmp
 (
˝
->
«me
, 
dl1«me
))

10002 i‡(
cﬁÀ˘_°©s
)

10003 
˝
->
mis£s
++;

10006 i‡(
˝
->
hsize
)

10007 
	`u∆ök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

10010 
˝
->
œ°_èg£tid
.
èg
 = 0;

10011 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

10012 
˝
->
œ°_blk
 = 
NULL
;

10014 
œt
 +
˝
->
hô_œãncy
;

10017 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

10019 i‡(
cﬁÀ˘_°©s
)

10020 
˝
->
ª∂a˚míts
++;

10022 i‡(
ª∂_addr
)

10023 *
ª∂_addr
 = 
	`CACHE_MK_BADDR
 (
˝
, 
ª∂
->
ègid
.
èg
, 
£t
);

10026 
œt
 +
	`BOUND_POS
 (
ª∂
->
ªady
 - 
now
);

10028 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
))

10031 i‡(
cﬁÀ˘_°©s
)

10033 
˝
->
wrôebacks
++;

10034 
˝
->
wrb
++;

10036 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
Wrôe
, 
	`CACHE_MK_BADDR
 (˝, 
ª∂
->
ègid
.
èg
, 
£t
), cp->
bsize
,Ñïl, 
now
 +Ü©,Ñïl->ègid.
thªadid
);

10041 
ª∂
->
ègid
.
èg
 =Åag;

10042 
ª∂
->
ègid
.
thªadid
 =Åhreadid;

10043 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

10044 
ª∂
->
addr
 =áddr;

10045 
ª∂
->
löeVﬁ©ûe
 = 0;

10046 
ª∂
->
w‹dVﬁ©ûe
 = 0;

10047 
ª∂
->
w‹dInvÆid
 = 0;

10048 
ª∂
->
isSèÀ
 = 0;

10052 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
cmd
, 
èg
, cp->
bsize
, 
ª∂
, 
now
 +Ü©, 
thªadid
);

10055 i‡(
˝
->
bÆloc
 && 
p
)

10057 
	`CACHE_BCOPY
 (
cmd
, 
ª∂
, 
bofs
, 
p
, 
nbyãs
);

10061 i‡(
cmd
 =
Wrôe
)

10063 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

10066 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl2"))

10068 i‡(
cmd
 =
Wrôe
)

10070 
wm2
++;

10074 
rm2
++;

10079 i‡(
ud©a
)

10080 *
ud©a
 = 
ª∂
->
u£r_d©a
;

10083 
ª∂
->
ªady
 = 
now
 + 
œt
;

10085 i‡(
˝
->
hsize
)

10086 
	`lök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

10089  
œt
;

10093 
	`∑nic
(" DL1áccess couldÇot ENTERÅhisÖart ofÅhe code ");

10096 
ˇche_hô
:

10098 if(!
	`°rcmp
 (
˝
->
«me
, "dtlb"))

10100 i‡–
cmd
 =
Ród
 )

10101  
˝
->
hô_œãncy
;

10104 if(
blk
->
°©e
 =
PRIVATE_READ
)

10106 
blk
->
°©e
 = 
PRIVATE_WRITE
;

10107  
˝
->
hô_œãncy
;

10109 i‡(
blk
->
°©e
 =
SHARED_READ
)

10112 
	`éb_cu_Æloˇã
(
thªadid
, 
SHR_TLB_SR_RECOVERY
, 
èg
, 
NULL
);

10113 
DIRECTORY_EVENT
 *
√w_evít
 = (DIRECTORY_EVENT *Ë
	`Æloˇã_evít
(0);

10114 i‡(!
√w_evít
)

10115 
	`Áèl
("out of virtual memory in calloc dirÉvent");

10116 
§c
;

10117 
√w_evít
->
›î©i⁄
 = 
SHR_TLB_SR_RECOVERY
;

10118 
√w_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

10119 
√w_evít
->
§c2
 = 
thªadid
%
mesh_size
;

10120 
§c
 = 0;

10121 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

10122 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

10123 
√w_evít
->
°¨ãd
 = 
now
;

10124 
√w_evít
->
°¨tCy˛e
 = 
now
;

10125 
√w_evít
->
ãmpID
 = 
thªadid
;

10126 
√w_evít
->
addr
 =áddr;

10128 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

10129 
	`dú_evítq_ö£π
(
√w_evít
);

10130  (
˝
->
hô_œãncy
+1);

10133  
˝
->
hô_œãncy
;

10137 i‡(
cﬁÀ˘_°©s
)

10138 
˝
->
hôs
++;

10141 i‡(
˝
->
bÆloc
 && 
p
)

10143 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

10147 i‡(
cmd
 =
Wrôe
)

10148 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

10149 
blk
->
isSèÀ
 = 0;

10152 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

10154 i‡(
cmd
 =
Wrôe
)

10155 
wh1
++;

10157 
rh1
++;

10159 if(
my_rs
)

10161 if(
my_rs
->
isSyncIn°
 && my_rs->
›
 =
LDL
)

10162 
SyncLﬂdHô
 ++;

10163 if(
my_rs
->
›
 =
LDL_L
)

10164 
SyncLﬂdLHô
 ++;

10165 if(
my_rs
->
›
 =
STL_C
)

10166 
SyncSt‹eCHô
 ++;

10167 if(
my_rs
->
isSyncIn°
 && my_rs->
›
 =
STL
)

10168 
SyncSt‹eHô
 ++;

10171 if(
l1_wb_íåy
)

10172 if(
l1_wb_íåy
->
›
 =
STL_C
)

10173 
SyncSt‹eCHô
 ++;

10176 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl2"))

10178 i‡(
cmd
 =
Wrôe
)

10179 
wh2
++;

10181 
rh2
++;

10183 #ifde‡
STREAM_PREFETCHER


10184 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl2"Ë&& 
blk
->
•Tag
 && !
dl2_¥e„tch_a˘ive
)

10186 
	`œunch_•
(
blk
->
•Tag
-1, 
thªadid
);

10188 
blk
->
•Tag
 = 0;

10191 i‡(
blk
->
way_¥ev
 && 
˝
->
pﬁicy
 =
LRU
)

10193 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

10199 
˝
->
œ°_èg£tid
.
èg
 = 
	`CACHE_TAGSET
 (˝, 
addr
);

10200 
˝
->
œ°_èg£tid
.
thªadid
 =Åhreadid;

10201 
˝
->
œ°_blk
 = 
blk
;

10204 i‡(
ud©a
)

10205 *
ud©a
 = 
blk
->
u£r_d©a
;

10207 if((Ë
	`max2
 ((
˝
->
hô_œãncy
 + 
œt
), (
blk
->
ªady
 - 
now
)Ë> 
WAIT_TIME
)

10208 
	`∑nic
("Cache HitÜatencyÅooÜarge\n");

10211  (Ë
	`max2
 ((
˝
->
hô_œãncy
 + 
œt
), (
blk
->
ªady
 - 
now
));

10213 
	}
}

10215 
	$ˇche_w¨mup
 (
ˇche_t
 *
˝
,

10216 
mem_cmd
 
cmd
,

10217 
md_addr_t
 
addr
,

10218 
nbyãs
,

10219 
thªadid
)

10224 
	}
}

10243 
	$ˇche_¥öt
 (
ˇche_t
 *
˝1
, ˇche_à*
˝2
)

10245 
	`Ârötf
 (
°dîr
, "ZZ L1D stats\n");

10246 
	`Ârötf
 (
°dîr
, "ZZ %ld %ld %ld %ld %lu\n", 
rm1
, 
rh1
, 
wm1
, 
wh1
, (Ë
˝1
->
wrôebacks
);

10247 
	`Ârötf
 (
°dîr
, "ZZ UL2 stats\n");

10248 i‡(
˝2
)

10249 
	`Ârötf
 (
°dîr
, "ZZ %ld %ld %ld %ld %lu\n", 
rm2
, 
rh2
, 
wm2
, 
wh2
, (Ë
˝2
->
wrôebacks
);

10250 
	}
}

10254 
	$sim∂e_ˇche_Êush
 (
ˇche_t
 *
˝
)

10256 
i
, 
numÊush
;

10257 
ˇche_blk_t
 *
blk
;

10259 #ifde‡
TOKENB


10260 
	`Áèl
 ("needÅo updateÅhis funcÅoáccount for TOKENB coherence.");

10263 
numÊush
 = 0;

10264 
i
 = 0; i < 
˝
->
n£ts
; i++)

10266 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

10268 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

10271 
blk
->
°©us
 = 0;

10272 
blk
->
isSèÀ
 = 0;

10274 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

10276 i‡(
cﬁÀ˘_°©s
)

10277 
˝
->
wrôebacks
++;

10278 
numÊush
++;

10284  
numÊush
;

10285 
	}
}

10289 
	$ˇche_Êush
 (
ˇche_t
 *
˝
,

10290 
tick_t
 
now
)

10293 
i
, 
œt
 = 
˝
->
hô_œãncy
;

10294 
ˇche_blk_t
 *
blk
;

10297 
˝
->
œ°_èg£tid
.
èg
 = 0;

10298 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

10299 
˝
->
œ°_blk
 = 
NULL
;

10302 
i
 = 0; i < 
˝
->
n£ts
; i++)

10304 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

10306 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

10310 
blk
->
°©us
 = 0;

10311 
blk
->
isSèÀ
 = 0;

10312 
blk
->
°©e
 = 
MESI_INVALID
;

10313 
blk
->
övCau£
 = 0;

10317  
œt
;

10318 
	}
}

10322 
	$ˇcheBc›y
 (
mem_cmd
 
cmd
, 
ˇche_blk_t
 *
blk
, 
posôi⁄
, 
byã_t
 * 
d©a
, 
nbyãs
)

10324 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
posôi⁄
, 
d©a
, 
nbyãs
);

10325 
	}
}

10327 
	$isCacheHô
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
)

10329 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"Ë&& cp->
thªadid
 !=Åhreadid)

10330 
	`∑nic
 ("Wrond DL1 cache being called in cacheáccess\n");

10332 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

10333 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

10334 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

10335 
ˇche_blk_t
 *
blk
;

10337 i‡(
˝
->
hsize
)

10340 
hödex
 = (Ë
	`CACHE_HASH
 (
˝
, 
èg
);

10342 
blk
 = 
˝
->
£ts
[
£t
].
hash
[
hödex
]; blk; blk = blk->
hash_√xt
)

10344 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

10351 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

10353 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

10358 
	}
}

10360 #i‡ 
deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

10362 
	$busInô
 ()

10364 
i
, 
j
;

10366 
j
 = 
BUSSLOTS
 * 
NUMBEROFBUSES
;

10368 
bs_nd
 *
lök
;

10370 
busNodePoﬁ
 = 
NULL
;

10372 
i
 = 0; i < 
j
; i++)

10374 
lök
 = 
	`ˇŒoc
 (1,  (
bs_nd
));

10375 i‡(!
lök
)

10376 
	`Áèl
 ("out of virtual memory");

10377 
lök
->
√xt
 = 
busNodePoﬁ
;

10378 
busNodePoﬁ
 = 
lök
;

10380 #ifde‡
BUS_INTERCONNECT


10381 
i
 = 0; i < 
NUMBEROFBUSES
; i++)

10382 
busNodesInU£
[
i
] = 
NULL
;

10384 
	}
}

	@cache.h

124 #i‚de‡
CACHE_H


125 
	#CACHE_H


	)

127 
	~<°dio.h
>

129 
	~"ho°.h
"

130 
	~"misc.h
"

131 
	~"machöe.h
"

132 
	~"mem‹y.h
"

133 
	~"°©s.h
"

135 
	~"smt.h
"

136 
	~"öãrc⁄√˘.h
"

137 
	~"sim-out‹dî.h
"

139 
	#PAGE_NUM
 (128*1024)

	)

140 
	#MAX_DIRECTORY_ASSOC
 16

	)

145 
	#SILENT_DROP


	)

149 
	#OPTIMIZED_OPTICAL_NETWORK


	)

151 
	#MESH_NETWORK


	)

154 #ifde‡
MESH_NETWORK


155 
	#POPNET


	)

158 
	#MULTI_VC


	)

162 #ifde‡
BASELINE_OPTICAL_NETWORK


163 
	#OPTICAL_INTERCONNECT


	)

169 #ifde‡
OPTIMIZED_OPTICAL_NETWORK


170 
	#OPTICAL_INTERCONNECT


171 

	)

173 
	#INV_ACK_CON


174 
	#WB_SPLIT_NET


175 

	)

180 
	#TSHR


	)

183 #ifde‡
CACHE_COHERENCE_OPTIMIZATION


184 #ifde‡
RELAXED_CONSISTENCY


185 
	#SERIALIZATION_ACK


	)

186 
	#READ_PERMIT


	)

187 #ifde‡
OPTICAL_INTERCONNECT


188 
	#EUP_NETWORK


	)

194 #ifde‡
POPNET


195 
OrdîBufRemove
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
cou¡î_t
 
msgno
);

196 
OrdîBufIn£π
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
vc
, 
cou¡î_t
 
msgno
);

200 
mu…i_blk_£t_shi·
;

202 
cou¡î_t
 
	g≥ndög_övÆid©i⁄
[
MAXTHREADS
];

203 
cou¡î_t
 
	g≥ndög_övÆid_°¨t_cy˛es
[
MAXTHREADS
];

204 
cou¡î_t
 
	g≥ndög_övÆid_cy˛es
;

207 
	gd©a_∑ckë_size
;

208 
	gmëa_∑ckë_size
;

209 
cou¡î_t
 
¥e„tch_num
;

210 
cou¡î_t
 
vîi_ª∂a˚
;

211 #ifde‡
POPNETn


212 
	gd©a_∑ckë_size
 = 5;

213 
	gmëa_∑ckë_size
 = 1;

216 
	#DCACHE_MSHR


	)

218 
	#WAIT_TIME
 800000000

	)

219 
	#RETRY_TIME
 1

	)

220 #ifde‡ 
DCACHE_MSHR


221 
	#TLB_MSHR_SIZE
 32

	)

222 
	#MSHR_SIZE
 32

	)

223 
	#L2_MSHR_SIZE
 48

	)

224 
	#MSHR_OC_SIZE
 15

	)

226 #ifde‡
CONF_RES_RESEND


227 
	#QUEUE_SIZE
 100

	)

230 
	#LSQSIZE
 1024

	)

231 
	#RUUSIZE
 1024

	)

235 
	smshr_íåy_t


237 
	mid
;

238 
	misVÆid
;

239 
md_addr_t
 
	maddr
;

240 
cou¡î_t
 
	m°¨tCy˛e
;

241 
cou¡î_t
 
	mídCy˛e
;

242 
	mblocknum
;

243 
	misOC
;

244 
RUU_°©i⁄
 *
	mrs
;

245 
DIRECTORY_EVENT
 *
	mevít
;

248 
	smshr_t


250 
	mthªadid
;

251 
mshr_íåy_t
 
	mmshrE¡ry
[
L2_MSHR_SIZE
];

252 
	m‰ìE¡rõs
;

253 
	m‰ìOCE¡rõs
;

254 
	mmshrSIZE
;

257 
md_addr_t
 
	gwb_buf„r
[
MAXTHREADS
][
MSHR_SIZE
];

258 
öôMSHR
(
mshr_t
 *
mshr
, 
Êag
);

259 
‰ìMSHR
(
mshr_t
 *
mshr
);

260 
éb_Êush_check
(
thªadid
);

261 
isMSHRFuŒ
(
mshr_t
 *
mshr
, 
isOC
, 
thªadid
);

262 
MSHRLookup
(
mshr_t
 *
mshr
, 
md_addr_t
 
addr
, 
œt
, 
isOC
, 
RUU_°©i⁄
 *
rs
);

267 
	#MEM_MODEL


268 
	#STREAM_PREFETCHER


269 
	#L1_STREAM_PREFETCHER


	)

270 
	#L1_DISTANCE


	)

273 
	#READ_EXCLUSION


274 

	)

275 #ifde‡ 
STREAM_PREFETCHER


276 
	#L1_MISS_TABLE_SIZE
 32

	)

277 
	#L1_STREAM_ENTRIES
 16

	)

278 
	#L2_MISS_TABLE_SIZE
 16

	)

279 
	#L2_STREAM_ENTRIES
 8

	)

280 
	#PREFETCH_REPLACE_HISTORY
 1

	)

281 
	#REPLACE_HISTORY
 8

	)

282 
	#COHERENCE_HISTORY
 8

	)

284 
	sL1_miss_hi°‹y_èbÀ_t


286 
md_addr_t
 
	mhi°‹y
[
L1_MISS_TABLE_SIZE
];

287 
	mmht_èû
;

288 
	mmht_num
;

291 
	sL2_miss_hi°‹y_èbÀ_t


293 
md_addr_t
 
	mhi°‹y
[
L2_MISS_TABLE_SIZE
];

294 
	mmht_èû
;

295 
	mmht_num
;

298 
	s°ªam_èbÀ_íåy_t


300 
	mvÆid
;

301 
	m‹dî
;

302 
md_addr_t
 
	maddr
;

303 
	m°ride
;

304 
	mªmaöög_¥e„tches
;

305 
cou¡î_t
 
	mœ°_u£
;

308 
L2_miss_hi°‹y_èbÀ_t
 
	gmiss_hi°‹y_èbÀ
;

309 
°ªam_èbÀ_íåy_t
 
	g°ªam_èbÀ
[
L2_STREAM_ENTRIES
];

311 
öô_•
();

312 
ö£π_•
(
md_addr_t
 
addr
, 
thªadid
);

313 
œunch_•
(
id
, 
thªadid
);

315 #ifde‡
L1_STREAM_PREFETCHER


316 
L1_miss_hi°‹y_èbÀ_t
 
	gl1miss_hi°‹y_èbÀ
[
MAXTHREADS
];

317 
°ªam_èbÀ_íåy_t
 
	gl1°ªam_èbÀ
[
MAXTHREADS
][
L1_STREAM_ENTRIES
];

319 
l1öô_•
();

320 
l1ö£π_•
(
md_addr_t
 
addr
, 
thªadid
);

321 
l1œunch_•
(
md_addr_t
 
addr
, 
thªadid
, 
åiggî
);

324 #ifde‡
CROSSBAR_INTERCONNECT


325 
	#NUMBEROFBUSES
 8

	)

329 #ifde‡
BUS_INTERCONNECT


330 
	#NUMBEROFBUSES
 1

	)

332 
	#BUSSLOTS
 2048

	)

333 
	sbs_nd


335 
	m°¨tTime
, 
	mídTime
;

336 
	mac˚ssTy≥
, 
	mthªadid
;

337 
bs_nd
 *
	m√xt
;

376 
	#CACHE_HIGHLY_ASSOC
(
˝
Ë((˝)->
assoc
 > 4)

	)

379 
	#CACHE_TAG
(
˝
, 
addr
Ë(◊ddrË>> (˝)->
èg_shi·
)

	)

380 
	#CACHE_SET
(
˝
, 
addr
Ë((◊ddrË>> (˝)->
£t_shi·
Ë& (˝)->
£t_mask
)

	)

382 
	#CACHE_QBLK_TAG
(
˝
, 
addr
Ë(◊ddrË>> ((˝)->
èg_shi·
+
mu…i_blk_£t_shi·
))

	)

383 
	#CACHE_QBLK_SET
(
˝
, 
addr
Ë((◊ddrË>> ((˝)->
£t_shi·
)+
mu…i_blk_£t_shi·
Ë& (˝)->
£t_mask
)

	)

385 
	#CACHE_BLK
(
˝
, 
addr
Ë(◊ddrË& (˝)->
blk_mask
)

	)

386 
	#CACHE_TAGSET
(
˝
, 
addr
Ë(◊ddrË& (˝)->
èg£t_mask
)

	)

389 
	eˇche_pﬁicy
 {

390 
	mLRU
,

391 
	mR™dom
,

392 
	mFIFO


395 
	#STREAM_MIN
 1

	)

398 
	#CACHE_BLK_VALID
 0x00000001

	)

399 
	#CACHE_BLK_DIRTY
 0x00000002

	)

400 
	#CACHE_BLK_WVALID
 0x00000004

	)

401 
	#MESI_INVALID
 1

	)

402 
	#MESI_SHARED
 2

	)

403 
	#MESI_MODIFIED
 3

	)

404 
	#MESI_EXCLUSIVE
 4

	)

406 
	#MESI_NONSHARED
 5

	)

408 
	#WRITE_HIT_SHARED
 1

	)

411 
	#LOCAL
 1

	)

419 
	#NON_SHARED
 1

	)

420 
	#SHARED
 2

	)

421 
	#EXCLUSIVE_O_DIRTY
 3

	)

422 
	#MISS
 4

	)

423 
	#MISS_REPLACE
 5

	)

426 
	#READ_MATCH
 1

	)

427 
	#WRITE_MATCH
 2

	)

428 
	#L1_REPLACED
 3

	)

429 
	#L2_OVERLAP
 4

	)

430 
	#L2_REPLACED
 5

	)

431 
	#DROPPED
 6

	)

433 
	#L2_DROP
 0

	)

435 
	#PREFETCH_NUM
 20000000

	)

437 
	#TLB_CU_SIZE
 32

	)

439 
	#PRIVATE_READ
 1

	)

440 
	#PRIVATE_WRITE
 2

	)

441 
	#SHARED_READ
 3

	)

442 
	#SHARED_WRITE
 4

	)

444 
	#PAGE_TABLE_SEARCH
 300

	)

445 
	#FLUSH_OVERHEAD
 100

	)

447 
	#QBLK_SET_SHIFT
 2

	)

449 
	#IDEAL_CASE
 1

	)

451 
	#MISS_IL1
 2

	)

452 
	#MISS_READ
 3

	)

453 
	#MISS_WRITE
 4

	)

454 
	#WRITE_UPDATE
 5

	)

455 
	#WRITE_BACK
 6

	)

456 
	#WRITE_BACK_HEAD
 7

	)

457 
	#WRITE_BACK_REPLY
 8

	)

458 
	#UPDATE_DIR
 9

	)

459 
	#INV_MSG_READ
 10

	)

460 
	#INV_MSG_WRITE
 11

	)

461 
	#ACK_MSG_READ
 12

	)

462 
	#ACK_MSG_READUPDATE
 13

	)

463 
	#ACK_MSG_WRITE
 14

	)

464 
	#ACK_MSG_WRITEUPDATE
 15

	)

465 
	#ACK_DIR_IL1
 16

	)

466 
	#ACK_DIR_READ_SHARED
 17

	)

467 
	#ACK_DIR_READ_EXCLUSIVE
 18

	)

468 
	#ACK_DIR_WRITE
 19

	)

469 
	#ACK_DIR_WRITE_EARLY
 20

	)

470 
	#ACK_DIR_WRITEUPDATE
 21

	)

471 
	#WAIT_MEM_READ
 22

	)

472 
	#WAIT_MEM_READ_N
 23

	)

473 
	#L2_PREFETCH
 24

	)

474 
	#NACK
 25

	)

475 
	#FAIL
 26

	)

476 
	#FINAL_INV_ACK
 27

	)

477 
	#MEM_READ_REQ
 28

	)

478 
	#MEM_READ_REPLY
 29

	)

479 
	#WAIT_MEM_READ_N_WAIT
 30

	)

480 
	#MEM_WRITE_BACK
 31

	)

481 
	#MEM_PACK_HEAD
 32

	)

482 
	#MEM_PACK_REPLY
 33

	)

483 
	#FINAL_READ_ACK
 34

	)

484 
	#ACK_MSG_UPDATE
 35

	)

485 
	#INV_MSG_UPDATE
 36

	)

487 
	#SHR_TLB_MISS
 50

	)

488 
	#SHR_TLB_WRITE_BACK
 51

	)

489 
	#SHR_TLB_SR_RECOVERY
 52

	)

490 
	#SHR_TLB_UPDATE_PR_ACK
 53

	)

491 
	#SHR_TLB_UPDATE_PW_ACK
 54

	)

492 
	#SHR_TLB_RECOVERY_ACK
 55

	)

493 
	#DIR_TLB_REFILL
 56

	)

494 
	#DIR_TLB_UPDATE
 57

	)

495 
	#DIR_TLB_RECOVERY
 58

	)

496 
	#DIR_TLB_REFILL_WAIT
 59

	)

497 
	#DIR_TLB_UPDATE_WAIT
 60

	)

498 
	#DIR_TLB_RECOVERY_WAIT
 61

	)

500 
	#DIR_SHR_READ
 62

	)

501 
	#ACK_SHR_READ
 63

	)

502 
	#INFORM_BACK
 64

	)

504 
	#VEC_DEGRADE
 65

	)

507 
	#DIR_STABLE
 1

	)

508 
	#DIR_TRANSITION
 2

	)

509 
	#INV_TYPE
 3

	)

510 
	#REPL_TYPE
 4

	)

512 
	#REQ_PACKET
 1

	)

513 
	#DATA_PACKET
 4

	)

516 
	#LINE_PREFETCH
 1

	)

517 
	#LINE_READ
 2

	)

518 
	#LINE_WRITE
 3

	)

521 
	#LINE_READ_OP
 1

	)

522 
	#LINE_WRITE_OP
 2

	)

525 
	#MY_NORMAL
 0

	)

526 
	#MY_LDL
 1

	)

527 
	#MY_LDL_L
 2

	)

528 
	#MY_STL_C
 3

	)

529 
	#MY_STL
 4

	)

532 #ifde‡
SMT_SS


533 
	sèg_id_t


535 
	mthªadid
;

536 
md_addr_t
 
	mèg
;

540 #ifde‡
EVENT_CACHE_UPDATE


541 
	smshrq
 {

543 
	mwhí
;

544 
	mrd_wt
;

545 
md_addr_t
 
	maddr
;

546 
mshrq
 *
	m√xt
;

547 
mshrq
 *
	m¥ev
;

554 
	s¥e„tch_ª∂a˚_hi°‹y_t


556 
md_addr_t
 
	m¥e„tch_ª∂a˚_addr
;

557 
cou¡î_t
 
	mp›√tMsgNo
;

560 
	slöe_öfo


562 
	mlöe_ow√r
;

563 
	mlöe_°©e
;

566 
	s∑ge_íåy


568 
	mvÆid
;

569 
	mbusy
;

570 
md_addr_t
 
	mVPN
;

571 
md_addr_t
 
	mPPN
;

572 
	mkì≥r
;

573 
	mˇched
;

574 
	m°©e
;

575 
löe_öfo
 *
	mlöe_hód
;

578 
∑ge_íåy
 *
	g∑ge_èbÀ
[
PAGE_NUM
];

580 
	séb_rs


582 
RUU_°©i⁄
 *
	mrs
;

583 
éb_rs
 *
	m√xt
;

586 
	séb_mshr_íåy


588 
	mvÆid
;

589 
	mdúty
;

590 
	mevi˘ög
;

591 
md_addr_t
 
	mVPN
;

592 
éb_rs
 *
	mhód
;

595 
éb_mshr_íåy
 *
	géb_mshr
[
MAXTHREADS
][
TLB_MSHR_SIZE
];

597 
	spw_evi˘_íåy


599 
	mvÆid
;

600 
md_addr_t
 
	mVPN
;

603 
	s§_ªcovîy_íåy


605 
	mvÆid
;

606 
md_addr_t
 
	mVPN
;

609 
	sdú_ªcovîy_íåy


611 
	mvÆid
;

612 
DIRECTORY_EVENT
 *
	mevít
;

615 
	séb_cu_blk


617 
	mªcovî_dñay
;

618 
pw_evi˘_íåy
 
	mpw_evi˘
[
TLB_CU_SIZE
];

619 
§_ªcovîy_íåy
 
	m§_ªcovîy
[
TLB_CU_SIZE
];

620 
dú_ªcovîy_íåy
 
	mdú_ªcovîy
[
TLB_CU_SIZE
];

623 
éb_cu_blk
 *
	géb_cu
[
MAXTHREADS
];

626 
	sˇche_blk_t


628 
ˇche_blk_t
 *
	mway_√xt
;

630 
ˇche_blk_t
 *
	mway_¥ev
;

631 
ˇche_blk_t
 *
	mhash_√xt
;

635 #ifde‡
SMT_SS


636 
èg_id_t
 
	mègid
;

638 
md_addr_t
 
	mèg
;

640 
	m°©us
;

642 
	méb_°©e
;

643 
	méb_lock
;

646 
	m±r_í
;

647 
	mÆl_sh¨ed_í
;

650 
md_addr_t
 
	mqblk_£t_shi·
;

652 
tick_t
 
	mªady
;

655 
	m°©e
;

656 
	misSèÀ
;

657 
md_addr_t
 
	maddr
;

659 
	mœ°Thrd
;

660 
	mvÆue
;

661 
	mlöeVﬁ©ûe
;

662 
	mw‹dVﬁ©ûe
, 
	mw‹dInvÆid
;

663 
	mïochModifõd
;

664 
	misL1¥e„tch
;

665 
	mdú_°©e
[8];

666 
	mdú_sh¨î
[8][8];

667 
cou¡î_t
 
	mex˛usive_time
[8];

668 
	mdú_dúty
[8];

669 
	mdú_blk_°©e
[8];

670 
	mevî_wb
;

673 #ifde‡
STREAM_PREFETCHER


674 
	m•Tag
;

676 
	mevî_dúty
;

677 
	mevî_touch
;

678 
	mRódCou¡
;

679 
	mWrôeCou¡
;

680 
	mW‹dCou¡
;

681 
	mTy≥
;

682 
	mW‹dU£Fœg
[8];

683 
DIRECTORY_EVENT
 *
	m±r_cur_evít
[8];

686 
byã_t
 *
	mu£r_d©a
;

691 
byã_t
 
	md©a
[1];

694 
	mœ°Modifõd
, 
	mœ°Ac˚s£d
;

695 
	mmodifõdThisEpoch
;

696 
	mmodifõdByMe
;

697 
	mövCau£
;

701 
	sˇche_£t_t


703 
ˇche_blk_t
 **
	mhash
;

705 
ˇche_blk_t
 *
	mway_hód
;

706 
ˇche_blk_t
 *
	mway_èû
;

707 
ˇche_blk_t
 *
	mblks
;

710 
cou¡î_t
 
	mPVC_ve˘‹_di°r_ªc‹d_num
;

711 
cou¡î_t
 
	mPVC_ve˘‹_öc_di°r_ªc‹d_num
;

712 
cou¡î_t
 
	mPVC_ve˘‹_di°r
[
MAX_DIRECTORY_ASSOC
+1];

713 
cou¡î_t
 
	mPVC_ve˘‹_öc_di°r
[
MAX_DIRECTORY_ASSOC
+1];

717 
	sˇche_t


720 *
	m«me
;

721 
	mn£ts
;

722 
	mbsize
;

723 
	mbÆloc
;

724 
	musize
;

725 
	massoc
;

726 
ˇche_pﬁicy
 
	mpﬁicy
;

727 
	mhô_œãncy
;

739 (*
	mblk_ac˚ss_‚
)(
mem_cmd
 
	mcmd
,

740 
md_addr_t
 
	mbaddr
,

741 
	mbsize
,

742 
ˇche_blk_t
 *
	mblk
,

743 #ifde‡
SMT_SS


744 
tick_t
 
	mnow
,

745 
	mthªadid


746 #i‡
deföed
–
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

747 , 
	m˛u°î


751 
tick_t
 
	mnow
);

755 
	mhsize
;

756 
md_addr_t
 
	mblk_mask
;

757 
	m£t_shi·
;

758 
md_addr_t
 
	m£t_mask
;

759 
	mèg_shi·
;

760 
md_addr_t
 
	mèg_mask
;

761 
md_addr_t
 
	mèg£t_mask
;

764 
tick_t
 
	mbus_‰ì
;

774 
cou¡î_t
 
	mhôs
;

775 
cou¡î_t
 
	mdhôs
;

776 
cou¡î_t
 
	mmis£s
;

777 
cou¡î_t
 
	mdmis£s
;

778 
cou¡î_t
 
	mcohîí˚_mis£s
;

779 
cou¡î_t
 
	mˇ∑cô™˚_mis£s
;

780 
cou¡î_t
 
	mª∂a˚míts
;

781 
cou¡î_t
 
	mª∂Inv
;

782 
cou¡î_t
 
	mwrôebacks
;

783 
cou¡î_t
 
	mwb_cohîí˚_w
;

784 
cou¡î_t
 
	mwb_cohîí˚_r
;

785 
cou¡î_t
 
	mövÆid©i⁄s
;

786 
cou¡î_t
 
	mcohîícyMis£s
;

787 
cou¡î_t
 
	mcohîícyMis£sOC
;

790 
cou¡î_t
 
	mö_mshr
;

791 
cou¡î_t
 
	mdö_mshr
;

792 
cou¡î_t
 
	mdú_nŸifiˇti⁄
;

793 
cou¡î_t
 
	mInvÆid_Ród_ª˚ived
;

794 
cou¡î_t
 
	mInvÆid_wrôe_ª˚ived
;

795 
cou¡î_t
 
	mInvÆid_Ród_ª˚ived_hôs
;

796 
cou¡î_t
 
	mInvÆid_wrôe_ª˚ived_hôs
;

797 
cou¡î_t
 
	me_to_i
;

798 
cou¡î_t
 
	me_to_m
;

799 
cou¡î_t
 
	ms_to_i
;

801 
cou¡î_t
 
	mack_ª˚ived
;

802 
cou¡î_t
 
	mL2_ac˚ss
;

803 
cou¡î_t
 
	mdú_ac˚ss
;

804 
cou¡î_t
 
	md©a_ac˚ss
;

805 
cou¡î_t
 
	mloˇldúe˘‹y
;

806 
cou¡î_t
 
	mªmŸedúe˘‹y
;

807 
cou¡î_t
 
	m£ndInvÆid
, 
	mövÆidD⁄e
, 
	mwasInvÆid©ed
;

809 
cou¡î_t
 
	mÊushCou¡
, 
	mlöeFlushCou¡
;

812 
	mrdb
;

813 
	mwrb
;

814 
	mpùedñay
;

815 
	mwrbufsize
;

816 
	mœ°u£
;

818 #ifde‡
EVENT_CACHE_UPDATE


819 
mshrq
 *
	mmshr_queue
;

823 #ifde‡
SMT_SS


824 
èg_id_t
 
	mœ°_èg£tid
;

826 
md_addr_t
 
	mœ°_èg£t
;

828 
ˇche_blk_t
 *
	mœ°_blk
;

830 #ifde‡ 
DCACHE_MSHR


831 
mshr_t
 *
	mmshr
;

835 
byã_t
 *
	md©a
;

837 
cou¡î_t
 
	mnumDiffThrds
;

841 
	mœ°InvÆid©e
;

842 
	mInvld
;

845 
	möåaThrdC⁄Êi˘
;

846 
	möãrThrdC⁄Êi˘
;

847 
	mC⁄£cutiveAc˚ss
;

850 
	mccLoˇlLﬂdS
;

851 
	mccLoˇlLﬂdX
;

852 
	mccLoˇlLﬂdM
;

853 
	mccLoˇlSt‹eS
;

854 
	mccLoˇlSt‹eX
;

855 
	mccLoˇlSt‹eM
;

856 
	mccRemŸeLﬂdS
;

857 
	mccRemŸeLﬂdX
;

858 
	mccRemŸeLﬂdM
;

859 
	mccRemŸeSt‹eS
;

860 
	mccRemŸeSt‹eX
;

861 
	mccRemŸeSt‹eM
;

864 
	mSRLoˇlLﬂdS
;

865 
	mSRLoˇlLﬂdX
;

866 
	mSRLoˇlLﬂdM
;

867 
	mSRLoˇlSt‹eS
;

868 
	mSRLoˇlSt‹eX
;

869 
	mSRLoˇlSt‹eM
;

870 
	mSRRemŸeLﬂdS
;

871 
	mSRRemŸeLﬂdX
;

872 
	mSRRemŸeLﬂdM
;

873 
	mSRRemŸeSt‹eS
;

874 
	mSRRemŸeSt‹eX
;

875 
	mSRRemŸeSt‹eM
;

877 
	mglLoˇlHô
;

878 
	mglRemŸeHô
;

880 
	mNumAc˚s£s
;

882 
	mthªadid
;

886 
ˇche_£t_t
 
	m£ts
[1];

890 
ˇche_t
 *

891 
ˇche_¸óã
(*
«me
,

892 
n£ts
,

893 
bsize
,

894 
bÆloc
,

895 
usize
,

896 
assoc
,

897 
ˇche_pﬁicy
 
pﬁicy
,

899 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

900 
md_addr_t
 
baddr
, 
bsize
,

901 
ˇche_blk_t
 *
blk
,

902 #ifde‡
SMT_SS


903 
tick_t
 
now
,

905 
thªadid


906 #i‡
	`deföed
–
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

907 , 
˛u°î


911 
tick_t
 
now
),

913 
hô_œãncy
,

914 
thªadid
);

917 
ˇche_pﬁicy


918 
	`ˇche_ch¨2pﬁicy
(
c
);

922 
	`ˇche_c⁄fig
(
ˇche_t
 *
˝
,

923 
FILE
 *
°ªam
);

926 
	`ˇche_ªg_°©s
(
ˇche_t
 *
˝
, 
°©_sdb_t
 *
sdb
, 
id
);

932 
	`ˇche_°©s
(
ˇche_t
 *
˝
,

933 
FILE
 *
°ªam
);

943 #ifde‡
SMT_SS


956 
	`ˇche_ac˚ss
(
ˇche_t
 *
˝
,

957 
mem_cmd
 
cmd
,

958 
md_addr_t
 
addr
,

959 *
vp
,

960 
nbyãs
,

961 
tick_t
 
now
,

962 
byã_t
 **
ud©a
,

963 
md_addr_t
 *
ª∂_addr


964 
RUU_°©i⁄
 *
rs
,

965 
thªadid
,

966 
m_L1WBufE¡ry
 *
l1_wb_íåy


970 
	`ˇche_w¨mup
 (
ˇche_t
 *
˝
,

971 
mem_cmd
 
cmd
,

972 
md_addr_t
 
addr
,

973 
nbyãs
,

974 
thªadid
);

979 #i‡
	`deföed
–
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

980 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

981 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

982 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

983 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

984 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

985 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

986 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

987 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

988 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

989 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

990 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

991 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

993 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

994 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

995 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

996 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

997 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

998 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

999 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

1000 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

1001 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

1002 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

1003 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

1004 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

1009 
	`m¨kCacheNewEpoch
(
ˇche_t
 *
˝
, );

1011 
	`busFªe
();

1012 
	`busInô
();

1013 
	`m¨kCacheLöe
(
ˇche_t
 *, 
md_addr_t
, );

1015 
	`ˇche_m¨k_vﬁ©ûe
(
ˇche_t
 *
˝
,

1016 
md_addr_t
 
addr
,

1017 
tick_t
 
now
,

1018 
thªadid
, );

1021 
	`ˇche_Êush_vﬁ©ûe
(
ˇche_t
 *
˝
,

1022 
tick_t
 
now
,

1023 
thªadid
, );

1026 
	`check_f‹_l1_miss
(
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
);

1028 
	`upd©eBlockL©
(
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
, 
œt
);

1030 
	`checkRïœ˚mítSètus
(
id
, 
md_addr_t
 
addr
);

1036 
	`ˇche_¥obe
(
ˇche_t
 *
˝
,

1037 
md_addr_t
 
addr
);

1041 
	`ˇche_Êush
(
ˇche_t
 *
˝
,

1042 
tick_t
 
now
);

1046 #ifde‡
SMT_SS


1048 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

1049 
md_addr_t
 
addr
,

1050 
tick_t
 
now
,

1051 
thªadid
);

1054 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

1055 
md_addr_t
 
addr
,

1056 
tick_t
 
now
);

1058 #ifde‡
EVENT_CACHE_UPDATE


1059 
	`ö£π_mshr
(
ˇche_t
 *,,,
md_addr_t
,);

1063 
	`ˇcheBc›y
(
mem_cmd
 
cmd
, 
ˇche_blk_t
 *
blk
, 
posôi⁄
, 
byã_t
 *
d©a
, 
nbyãs
);

1065 
	`isCacheHô
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
);

1067 #ifde‡ 
EDA


1068 
	`ˇcheBlockSórch
(
ˇche_t
 * 
˝
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, 
byã_t
 *
d©a
, 
nbyãs
);

1069 
	`ÊushSñe˘ive
(
ˇche_t
 *
˝
, 
id
);

1072 
	sDIRECTORY_EVENT


1074 
md_›code
 
›
;

1075 
isPª„tch
;

1076 
°ride
;

1077 
‹dî
;

1078 
°ªam_íåy_ödex
;

1079 
åiggî
;

1080 
∑ge_íåy_°©e
;

1081 
l2Sètus
;

1082 
cou¡î_t
 
l2MissSèπ
;

1083 
DIRECTORY_EVENT
 *
√xt
;

1084 
tick_t
 
whí
;

1085 
tick_t
 
°¨ãd
;

1086 
tick_t
 
mshr_time
;

1087 
tick_t
 
å™s„r_time
;

1088 
tick_t
 
ªq_time
;

1089 
°‹e_c⁄d
;

1090 
Êù_Êag
;

1093 
éb_°©e
;

1094 
shr_d©a_ªq
;

1095 
d©a_ªq_sh¨î
;

1096 
L1_hô
;

1097 
no_L2_dñay
;

1100 
md_addr_t
 
qblk_£t_shi·
;

1101 
ml2_dú_blk_°©e
;

1104 
öput_buf„r_fuŒ
;

1105 
≥ndög_Êag
;

1106 
L2miss_Êag
;

1107 
L2miss_°©ed
;

1108 
L2miss_com∂ëe
;

1109 
dúty_Êag
;

1110 
cou¡î_t
 
¨rivÆ_time
;

1111 
dñay
;

1112 
d©a_ª∂y
;

1113 
c⁄f_bô
;

1114 
cou¡î_t
 
missNo
;

1115 
cou¡î_t
 
tŸÆevítcou¡
;

1116 
ª£nd
;

1117 
›î©i⁄
;

1118 
ãmpID
;

1119 
md_addr_t
 
addr
;

1120 
ˇche_blk_t
 *
blk1
, *
blk_dú
;

1122 
RS_lök
 *
±r_evít
;

1123 
ˇche_t
 *
˝
;

1124 *
vp
;

1125 
nbyãs
;

1126 
byã_t
 **
ud©a
;

1127 
mem_cmd
 
cmd
;

1128 
RUU_°©i⁄
 *
rs
;

1129 
m_L1WBufE¡ry
 *
l1_wb_íåy
;

1130 
§c1
, 
§c2
, 
des1
, 
des2
, 
°¨tCy˛e
;

1131 
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
;

1132 
DIRECTORY_EVENT
 *
∑ª¡
;

1133 
∑ª¡_›î©i⁄
;

1134 
chûdCou¡
, 
¥o˚ssögD⁄e
, 
•ec_mode
, 
‹igöÆChûdCou¡
;

1135 
¥ef_mode
;

1136 
cou¡î_t
 
p›√tMsgNo
;

1137 
evítTy≥
;

1138 
ªc_busy
;

1139 
sh¨î_num
;

1140 
ödividuÆ_chûdCou¡
[8];

1141 
¥e„tch_√xt
;

1142 
isReqL2Hô
;

1143 
isReqL2SecMiss
;

1144 
isReqL2Inv
;

1145 
isReqL2Tøns
;

1146 
cou¡î_t
 
ªqAtDúTime
;

1147 
cou¡î_t
 
ªqAckTime
;

1148 
isSyncAc˚ss
;

1151 
	#EUP_NETWORKn


	)

1152 #ifde‡
EUP_NETWORKn


1153 
DIRECTORY_EVENT
 *
‰ì_evít_li°
;

1154 
	#maxEvít
 30000

	)

1155 
	`Æloˇã_‰ì_evít_li°
();

1157 #ifde‡
CONF_RES_RESEND


1158 
	sQUEUE_EVENT_ENTRY


1160 
DIRECTORY_EVENT
 *
evít
;

1161 
isvÆid
;

1164 
	sQUEUE_EVENT


1166 
QUEUE_EVENT_ENTRY
 
Queue_íåy
[
QUEUE_SIZE
];

1167 
‰ì_E¡rõs
;

1172 
	#MEM_LOC_SHIFT
 1

	)

1174 
	#DIR_FIFO_PORTS
 2

	)

1175 
	#DIR_FIFO_SIZE
 4096

	)

1176 
	#dú_fifo_size
 64

	)

1177 
	#DIR_FIFO_FULL


	)

1178 
	#MAXSIZE
 250

	)

1179 
dú_fifo_fuŒ
[
MAXSIZE
];

1181 
DIRECTORY_EVENT
 *
dú_fifo
[
MAXSIZE
][
DIR_FIFO_SIZE
];

1182 
dú_fifo_hód
[
MAXSIZE
];

1183 
dú_fifo_èû
[
MAXSIZE
];

1184 
dú_fifo_num
[
MAXSIZE
];

1185 
dú_fifo_p‹tu£
[
MAXSIZE
];

1186 
	#TSHR_FIFO_SIZE
 1024

	)

1187 
	#tshr_fifo_size
 64

	)

1188 
DIRECTORY_EVENT
 *
tshr_fifo
[
MAXSIZE
][
TSHR_FIFO_SIZE
];

1189 
tshr_fifo_hód
[
MAXSIZE
];

1190 
tshr_fifo_èû
[
MAXSIZE
];

1191 
tshr_fifo_num
[
MAXSIZE
];

1192 
tshr_fifo_p‹tu£
[
MAXSIZE
];

1195 
DIRECTORY_EVENT
 *
l1_fifo
[
MAXSIZE
][
DIR_FIFO_SIZE
];

1196 
l1_fifo_hód
[
MAXSIZE
];

1197 
l1_fifo_èû
[
MAXSIZE
];

1198 
l1_fifo_num
[
MAXSIZE
];

1199 
l1_fifo_p‹tu£
[
MAXSIZE
];

1201 
	`ª£t_p‹ts
();

1202 
	`dú_fifo_íqueue
(
DIRECTORY_EVENT
 *
evít
, 
ty≥
);

1203 
	`dú_fifo_dequeue
();

1204 
	`£ndLSQInv
(
md_addr_t
 
addr
, 
thªadid
);

	@cache_o.c

60 
	~<°dio.h
>

61 
	~<°dlib.h
>

62 
	~<as£π.h
>

64 
	~"hódîs.h
"

68 
	#CACHE_BADDR
(
˝
, 
addr
Ë(◊ddrË& ~(˝)->
blk_mask
)

	)

69 
	#CACHE_MK_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

70 (((
	gèg
Ë<< (
	g˝
)->
	gèg_shi·
)|((
	g£t
Ë<< (˝)->
	g£t_shi·
))

72 
	#CACHE_MK1_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

73 ((((
	gèg
Ë<< (
	g˝
)->
	gèg_shi·
)/
	gBANKS
)|((
	g£t
Ë<< (˝)->
	g£t_shi·
))

75 
	#CACHE_MK2_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

76 (((
	gèg
Ë<< ((
	g˝
)->
	gèg_shi·
 - (
log_ba£2
(
ªs_memb™k
)-log_ba£2(
n_ˇche_limô_thrd
[
thªadid
])) ))| \

77 ((
	g£t
Ë<< ((
	g˝
)->
	g£t_shi·
 - (
log_ba£2
(
ªs_memb™k
)-
	$log_ba£2
(
n_ˇche_limô_thrd
[
thªadid
])) )))

81 
	#CACHE_BINDEX
(
˝
, 
blks
, 
i
Ë\

	)

82 ((
ˇche_blk_t
 *)(((*)(
blks
)) + \

83 (
i
)*((
ˇche_blk_t
) + \

84 ((
˝
)->
bÆloc
 \

85 ? (
˝
)->
bsize
*(
byã_t
) : 0))))

88 
	#__CACHE_ACCESS
(
ty≥
, 
d©a
, 
bofs
Ë\

	)

89 (*((
ty≥
 *)(((*)
d©a
Ë+ (
bofs
))))

92 
	#CACHE_DOUBLE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

93 
	#CACHE_FLOAT
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

94 
	#CACHE_WORD
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

95 
	#CACHE_HALF
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

96 
	#CACHE_BYTE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

101 
	#CACHE_HASH
(
˝
, 
key
Ë\

	)

102 (((
key
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
˝
)->
hsize
-1))

105 
	#CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
Ë\

	)

106 i‡(
cmd
 =
Ród
) \

108 
nbyãs
) { \

110 *((
byã_t
 *)
p
Ë
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
); ; \

112 *((
hÆf_t
 *)
p
Ë
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
); ; \

114 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); ; \

117 
w‹ds
 = 
nbyãs
 >> 2; \

118 
w‹ds
-- > 0) \

120 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); \

121 
p
 +4; 
bofs
 += 4; \

125 
	}
}\

128 
	gnbyãs
) { \

130 
CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
Ë*((
byã_t
 *)
p
); ; \

132 
CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

134 
CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

137 
w‹ds
 = 
nbyãs
 >> 2; \

138 
	gw‹ds
-- > 0) \

140 
CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); \

141 
	gp
 +4; 
	gbofs
 += 4; \

148 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

152 
	#BANKS
 16

	)

158 #ifde‡
CROSSBAR_INTERCONNECT


159 
	gbusSlŸCou¡
 = 
BUSSLOTS
 * 
NUMBEROFBUSES
;

160 
busU£d
;

161 
cou¡î_t
 
busOccu∑ncy
;

162 
bs_nd
 *
	gbusNodePoﬁ
;

163 
bs_nd
 *
	g¸ossb¨SndHd
[3][
MAXTHREADS
], *
	g¸ossb¨RcvHd
[3][MAXTHREADS];

164 
cou¡î_t
 
	g£ndCou¡
[3][
MAXTHREADS
], 
	grcvCou¡
[3][MAXTHREADS];

166 
cou¡î_t
 
dˇche2_ac˚ss
;

170 #ifde‡
BUS_INTERCONNECT


171 
	gbusSlŸCou¡
 = 
BUSSLOTS
 * 
NUMBEROFBUSES
;

172 
busU£d
;

173 
cou¡î_t
 
busOccu∑ncy
;

174 
bs_nd
 *
	gbusNodePoﬁ
, *
	gbusNodesInU£
[
NUMBEROFBUSES
];

178 
	gdl1«me
[20];

180 
ˇche_dl1_œt
;

181 
ˇche_û1_œt
;

182 
ˇche_dl2_œt
;

183 
mesh_size
;

184 
mem_bus_width
;

185 
mem_bus_•ìd
;

186 
mem_p‹t_num
;

187 
	gmax_∑ckë_size
 = 32;

188 
cou¡î_t
 
ˇcheMiss
[
MAXTHREADS
], 
hôInOthîCache
[MAXTHREADS];

189 
cou¡î_t
 
	gövﬁve_4_h›s
, 
	gövﬁve_2_h›s
, 
	gövﬁve_2_h›_wb
, 
	gövﬁve_2_h›_touch
, 
	gövﬁve_2_h›s_wm
, 
	gövﬁve_4_h›s_wm
, 
	gövﬁve_4_h›s_upgøde
, 
	gövﬁve_2_h›s_upgøde
;

190 
cou¡î_t
 
	gövﬁve_4_h›s_miss
, 
	gövﬁve_2_h›s_miss
;

191 
cou¡î_t
 
	gd©a_¥iv©e_ªad
, 
	gd©a_¥iv©e_wrôe
, 
	gd©a_sh¨ed_ªad
, 
	gd©a_sh¨ed_wrôe
;

192 
cou¡î_t
 
lﬂd_lök_sh¨ed
, 
lﬂd_lök_ex˛usive
;

193 
cou¡î_t
 
•™d
[5];

194 
cou¡î_t
 
downgøde_w
, 
downgøde_r
;

196 
cou¡î_t
 
	gtŸÆ_Æl_˛o£
, 
	gtŸÆ_Æl_Æmo°˛o£
, 
	gtŸÆ_nŸ_Æl_˛o£
, 
	gtŸÆ_p_c_evíts
, 
	gtŸÆ_c⁄sumîs
, 
	gtŸÆ_∑ckës_ö_√ighb‹
, 
	gtŸÆ_∑ckës_©_c‹√rs
;

197 
cou¡î_t
 
	gtŸÆ_d©a_©_c‹√r
, 
	gtŸÆ_d©a_˛o£
, 
	gtŸÆ_d©a_Ár
, 
	gtŸÆ_d©a_c⁄sumîs
;

198 
cou¡î_t
 
	gsh¨î_num
[
MAXTHREADS
];

199 
	gavîage_öside_≥r˚¡
;

200 
	gavîage_outside_≥r˚¡
;

201 
	gavîage_outside_abs_≥r˚¡
;

202 
	gavîage_c‹√r_≥r˚¡
;

203 
cou¡î_t
 
	gwrôe_óæy
;

204 
dl2A˘uÆlyAc˚s£d
, 
m¨kedLöeRïœ˚d
;

205 
cou¡î_t
 
tŸÆS∂ôWM
, 
tŸÆS∂ôNo
;

206 
cou¡î_t
 
tŸÆUpgødesUßbÀ
, 
tŸÆUpgødesBíeficül
;

208 
a˘uÆPro˚ss
;

210 
d©aFoundInPCB
 (
md_addr_t
, , );

211 
övÆid©eOthîPCB
 (
who
, 
id
, 
md_addr_t
 
addr
);

214 
	gdl2_¥e„tch_a˘ive
 = 0;

215 
	gdl1_¥e„tch_a˘ive
 = 0;

218 
quõs˚Såu˘
 
quõs˚AddrSåu˘
[
CLUSTERS
];

219 
•ec_bíchm¨ks
;

220 
ªs_poﬁ
 *
fu_poﬁ
;

221 
ˇche_t
 *
ˇche_dl1
[], *
ˇche_dl2
;

224 #ifde‡
LOCK_CACHE_REGISTER


225 
	sLOCK_CACHE
 {

226 
md_addr_t
 
	mèg
;

227 
	mSubS¸ibeVe˘
;

228 
	mlock_ow√r
;

229 
	mBoﬁVÆue
;

230 } 
	gLock_ˇche
[
MAXTHREADS
];

231 
	#MAXLOCKEVENT
 8

	)

232 
DIRECTORY_EVENT
 *
	glock_fifo
[
MAXTHREADS
][
MAXLOCKEVENT
];

233 
	glock_fifo_num
[
MAXTHREADS
];

234 
	glock_fifo_hód
[
MAXTHREADS
];

235 
	glock_fifo_èû
[
MAXTHREADS
];

236 
cou¡î_t
 
lock_fifo_fuŒ
;

237 
cou¡î_t
 
lock_fifo_wr⁄g
;

238 
cou¡î_t
 
lock_fifo_wrôeback
;

239 
cou¡î_t
 
lock_fifo_bíefô
;

240 
cou¡î_t
 
lock_ˇche_hô
;

241 
cou¡î_t
 
lock_ˇche_miss
;

243 
md_addr_t
 
b¨rõr_addr
;

245 
m¨kRódA·îWrôe
;

247 
	gœãn
[
BANKS
];

250 
	grm1
 = 0;

251 
	gwm1
 = 0;

252 
	grh1
 = 0;

253 
	gwh1
 = 0;

254 
	grm2
 = 0;

255 
	gwm2
 = 0;

256 
	grh2
 = 0;

257 
	gwh2
 = 0;

259 #ifde‡ 
THRD_WAY_CACHE


260 
a˘ivec⁄ãxts
;

261 
ªs_memb™k
;

262 
n_ˇche_limô_thrd
[];

263 
n_ˇche_°¨t_thrd
[];

264 
COHERENT_CACHE
;

265 
MSI
;

268 
c⁄ãxt
 *
thec⁄ãxts
[
MAXTHREADS
];

270 
FILE
 *
outFûe
;

271 
cﬁÀ˘_°©s
, 
ÆlF‹ked
;

273 #ifde‡ 
THRD_WAY_CACHE


274 
ö£π_fûlq
 (, 
md_addr_t
, );

276 
ö£π_fûlq
 (, 
md_addr_t
);

279 
numc⁄ãxts
;

280 
nŸRoundRobö
;

282 
RS_li°
 *
rs_ˇche_li°
[
MAXTHREADS
][
MSHR_SIZE
];

283 
FILE
 *
Â_åa˚
;

284 
DIRECTORY_EVENT
 *
dú_evít_queue
;

285 
DIRECTORY_EVENT
 *
evít_li°
[
L2_MSHR_SIZE
];

286 
cou¡î_t
 
	g«ck_cou¡î
;

287 
cou¡î_t
 
	gn‹mÆ_«cks
;

288 
cou¡î_t
 
	gwrôe_«cks
;

289 
cou¡î_t
 
	g¥e„tch_«cks
;

290 
cou¡î_t
 
	gsync_«cks
;

291 
cou¡î_t
 
	gÊù_cou¡î
;

292 
cou¡î_t
 
	g°‹e_c⁄dôi⁄Æ_Áûed
;

293 
cou¡î_t
 
	gL1_Êù_cou¡î
;

294 
cou¡î_t
 
	ge_to_m
;

296 
cou¡î_t
 
L1_mshr_fuŒ
;

297 
cou¡î_t
 
œ°_L1_mshr_fuŒ
[
MAXTHREADS
];

298 
cou¡î_t
 
L2_mshr_fuŒ
;

299 
cou¡î_t
 
œ°_L2_mshr_fuŒ
;

300 
cou¡î_t
 
L2_mshr_fuŒ_¥e„tch
;

301 
cou¡î_t
 
L1_fifo_fuŒ
;

302 
cou¡î_t
 
œ°_L1_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

303 
cou¡î_t
 
Dú_fifo_fuŒ
;

304 
cou¡î_t
 
œ°_Dú_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

305 
cou¡î_t
 
I≈ut_queue_fuŒ
;

306 
cou¡î_t
 
œ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

307 
cou¡î_t
 
Ouçut_queue_fuŒ
;

309 
cou¡î_t
 
SèŒ_L1_mshr
;

310 
cou¡î_t
 
SèŒ_L2_mshr
;

311 
cou¡î_t
 
SèŒ_L1_fifo
;

312 
cou¡î_t
 
SèŒ_dú_fifo
;

313 
cou¡î_t
 
SèŒ_öput_queue
;

314 
cou¡î_t
 
SèŒ_ouçut_queue
;

315 
mshr_≥ndög_evít
[
MAXTHREADS
];

317 
cou¡î_t
 
WM_Miss
;

318 
cou¡î_t
 
WM_CÀ™
;

319 
cou¡î_t
 
WM_S
;

320 
cou¡î_t
 
WM_EM
;

321 
cou¡î_t
 
wrôe_sh¨ed_u£d_c⁄f
;

323 
cou¡î_t
 
SyncIn°CacheAc˚ss
;

324 
cou¡î_t
 
Te°CacheAc˚ss
;

325 
cou¡î_t
 
Te°SecCacheAc˚ss
;

326 
cou¡î_t
 
SëCacheAc˚ss
;

327 
cou¡î_t
 
SyncLﬂdRódMiss
;

328 
cou¡î_t
 
SyncLﬂdLRódMiss
;

329 
cou¡î_t
 
SyncLﬂdHô
;

330 
cou¡î_t
 
SyncLﬂdLHô
;

331 
cou¡î_t
 
SyncSt‹eCHô
;

332 
cou¡î_t
 
SyncSt‹eCWrôeMiss
;

333 
cou¡î_t
 
SyncSt‹eCWrôeUpgøde
;

334 
cou¡î_t
 
SyncSt‹eHô
;

335 
cou¡î_t
 
SyncSt‹eWrôeMiss
;

336 
cou¡î_t
 
B¨St‹eWrôeMiss
;

337 
cou¡î_t
 
SyncSt‹eWrôeUpgøde
;

338 
cou¡î_t
 
B¨St‹eWrôeUpgøde
;

339 
cou¡î_t
 
Sync_L2_miss
;

342 #ifde‡
CONF_RES_RESEND


343 
QUEUE_EVENT
 *
£nd_queue
[
MAXTHREADS
];

344 
QUEUE_EVENT
 *
ª∂y_queue
[
MAXTHREADS
];

347 
RS_lök
 *
evít_queue
;

348 
tŸÆEvítCou¡
, 
tŸÆEvítPro˚ssTime
;

349 
	gtŸÆevítcou¡
;

350 
cou¡î_t
 
	gp›√tMsgNo
;

351 
cou¡î_t
 
	gmissNo
;

352 
cou¡î_t
 
	gwrôe_back_msg
;

353 
cou¡î_t
 
	gloˇl_ˇche_ac˚ss
, 
	gªmŸe_ˇche_ac˚ss
, 
	gloˇldúe˘‹y
, 
	gªmŸedúe˘‹y
;

354 
tick_t
 
	gtŸÆmissh™dÀtime
;

355 
tick_t
 
	gtŸÆIL1missh™dÀtime
;

356 
	gtŸÆevítcou¡num
;

357 
cou¡î_t
 
	gtŸÆWrôeIndiˇã
;

358 
cou¡î_t
 
	gtŸÆ_ex˛usive_modifõd
;

359 
cou¡î_t
 
	gtŸÆ_ex˛usive_c⁄f
;

360 
cou¡î_t
 
	gtŸÆ_ex˛usive_¸oss
;

361 
cou¡î_t
 
	gtŸÆSyncEvít
;

362 
cou¡î_t
 
	gtŸÆN‹mÆEvít
;

363 
cou¡î_t
 
	gtŸÆSyncWrôeM
;

364 
cou¡î_t
 
	gtŸÆSyncRódM
;

365 
cou¡î_t
 
	gtŸÆSyncWrôeup
;

366 
cou¡î_t
 
	gtŸÆmis°imef‹N‹mÆ
;

367 
cou¡î_t
 
	gtŸÆmis°imef‹Sync
;

368 
cou¡î_t
 
	gtŸÆ_mem_œt
;

369 
cou¡î_t
 
	gtŸÆ_mem_ac˚ss
;

370 
cou¡î_t
 
	gtŸÆL2mis°ime
;

371 
cou¡î_t
 
	gtŸÆWr⁄gL2mis°ime
;

372 
cou¡î_t
 
	gTŸÆL2mis£s
;

373 
	gtŸÆ_L1_¥e„tch
;

374 
cou¡î_t
 
	gl2_¥e„tch_num
;

375 
cou¡î_t
 
	gwrôe_back_óæy
;

376 
	gtŸÆ_L1_fú°_¥e„tch
;

377 
	gtŸÆ_L1_£c_¥e„tch
;

378 
cou¡î_t
 
	gL1_¥e„tch_u£fuŒ
;

379 
cou¡î_t
 
	gL1_¥e„tch_wrôó·î
;

380 #ifde‡
PREFETCH_OPTI


381 
cou¡î_t
 
	gRódPª„tchUpd©e
;

382 
cou¡î_t
 
	gWrôePª„tchUpd©e
;

383 
cou¡î_t
 
	gRódMëaRïly_CS
;

384 
cou¡î_t
 
	gRódD©aRïly_CS
;

385 
cou¡î_t
 
	gRódDowngøde_EM
;

386 
cou¡î_t
 
	gRódL2Miss
;

387 
cou¡î_t
 
	gRódEMëaRïly
;

388 
cou¡î_t
 
	gRódED©aRïly
;

389 
cou¡î_t
 
	gRódMRïly
;

390 
cou¡î_t
 
	gWrôeMëaRïly_C
;

391 
cou¡î_t
 
	gWrôeD©aRïly_C
;

392 
cou¡î_t
 
	gWrôeInvÆid©e_SEM
;

393 
cou¡î_t
 
	gWrôeL2Miss
;

394 
cou¡î_t
 
	gWrôeSEMëaRïly
;

395 
cou¡î_t
 
	gWrôeSED©aRïly
;

396 
cou¡î_t
 
	gWrôeMRïly
;

398 
	gtŸÆªqcou¡num
;

399 
	gtŸÆmisscou¡num
;

400 
	gÊag
;

404 
	$u∆ök_hèb_ít
 (
ˇche_t
 *
˝
,

405 
ˇche_£t_t
 *
£t
,

406 
ˇche_blk_t
 *
blk
)

408 
ˇche_blk_t
 *
¥ev
, *
ít
;

409 
ödex
 = 
	`CACHE_HASH
 (
˝
, 
blk
->
ègid
.
èg
);

412 
¥ev
 = 
NULL
, 
ít
 = 
£t
->
hash
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
hash_√xt
)

414 i‡(
ít
 =
blk
)

417 
	`as£π
 (
ít
);

420 i‡(!
¥ev
)

423 
£t
->
hash
[
ödex
] = 
ít
->
hash_√xt
;

428 
¥ev
->
hash_√xt
 = 
ít
->hash_next;

430 
ít
->
hash_√xt
 = 
NULL
;

431 
	}
}

435 
	$lök_hèb_ít
 (
ˇche_t
 *
˝
,

436 
ˇche_£t_t
 *
£t
,

437 
ˇche_blk_t
 *
blk
)

439 
ödex
 = 
	`CACHE_HASH
 (
˝
, 
blk
->
ègid
.
èg
);

442 
blk
->
hash_√xt
 = 
£t
->
hash
[
ödex
];

443 
£t
->
hash
[
ödex
] = 
blk
;

444 
	}
}

447 
	eli°_loc_t


448 { 
	mHód
, 
	mTaû
 };

452 
	$upd©e_way_li°
 (
ˇche_£t_t
 *
£t
,

453 
ˇche_blk_t
 *
blk
,

454 
li°_loc_t
 
whîe
)

457 i‡(!
blk
->
way_¥ev
 && !blk->
way_√xt
)

460 
	`as£π
 (
£t
->
way_hód
 =
blk
 && së->
way_èû
 == blk);

466 i‡(!
blk
->
way_¥ev
)

468 
	`as£π
 (
£t
->
way_hód
 =
blk
 && së->
way_èû
 != blk);

469 i‡(
whîe
 =
Hód
)

476 
£t
->
way_hód
 = 
blk
->
way_√xt
;

477 
blk
->
way_√xt
->
way_¥ev
 = 
NULL
;

479 i‡(!
blk
->
way_√xt
)

482 
	`as£π
 (
£t
->
way_hód
 !
blk
 && së->
way_èû
 == blk);

483 i‡(
whîe
 =
Taû
)

488 
£t
->
way_èû
 = 
blk
->
way_¥ev
;

489 
blk
->
way_¥ev
->
way_√xt
 = 
NULL
;

494 
	`as£π
 (
£t
->
way_hód
 !
blk
 && së->
way_èû
 != blk);

495 
blk
->
way_¥ev
->
way_√xt
 = blk->way_next;

496 
blk
->
way_√xt
->
way_¥ev
 = blk->way_prev;

500 i‡(
whîe
 =
Hód
)

503 
blk
->
way_√xt
 = 
£t
->
way_hód
;

504 
blk
->
way_¥ev
 = 
NULL
;

505 
£t
->
way_hód
->
way_¥ev
 = 
blk
;

506 
£t
->
way_hód
 = 
blk
;

508 i‡(
whîe
 =
Taû
)

511 
blk
->
way_¥ev
 = 
£t
->
way_èû
;

512 
blk
->
way_√xt
 = 
NULL
;

513 
£t
->
way_èû
->
way_√xt
 = 
blk
;

514 
£t
->
way_èû
 = 
blk
;

517 
	`∑nic
 ("bogus WHERE designator");

518 
	}
}

521 
ˇche_t
 *

522 
ˇche_¸óã
 (*
«me
,

523 
n£ts
,

524 
bsize
,

525 
bÆloc
,

526 
usize
,

527 
assoc
,

528 
ˇche_pﬁicy
 
pﬁicy
,

530 (*
blk_ac˚ss_‚
Ë(
mem_cmd
 
cmd
, 
md_addr_t
 
baddr
, 
bsize
, 
ˇche_blk_t
 * 
blk
, 
tick_t
 
now
, 
thªadid
), 
hô_œãncy
,

531 
thªadid
)

533 
ˇche_t
 *
˝
;

534 
ˇche_blk_t
 *
blk
;

535 
i
, 
j
, 
bödex
;

538 i‡(
n£ts
 <= 0)

539 
	`Áèl
 ("ˇchêsizê(ö sësË`%d' mu° bên⁄-zîo", 
n£ts
);

540 i‡((
n£ts
 & (nsets - 1)) != 0)

541 
	`Áèl
 ("ˇchêsizê(ö sësË`%d' i†nŸáÖowî o‡two", 
n£ts
);

543 i‡(
bsize
 < 8)

544 
	`Áèl
 ("ˇchêblock sizê(ö byãsË`%d' mu° bê8 o∏gª©î", 
bsize
);

545 i‡((
bsize
 & (bsize - 1)) != 0)

546 
	`Áèl
 ("ˇchêblock sizê(ö byãsË`%d' mu° bê®powî o‡two", 
bsize
);

547 i‡(
usize
 < 0)

548 
	`Áèl
 ("u£∏d©®sizê(ö byãsË`%d' mu° bê®posôivêvÆue", 
usize
);

549 i‡(!
blk_ac˚ss_‚
)

550 
	`Áèl
 ("must specify miss/replacement functions");

553 
˝
 = (
ˇche_t
 *Ë
	`ˇŒoc
 (1,  (ˇche_tË+ (
n£ts
 - 1Ë*  (
ˇche_£t_t
));

554 i‡(!
˝
)

555 
	`Áèl
 ("out of virtual memory");

558 
˝
->
«me
 = 
	`my°rdup
 (name);

559 
˝
->
n£ts
 =Çsets;

560 
˝
->
bsize
 = bsize;

561 
˝
->
bÆloc
 = balloc;

562 
˝
->
usize
 = usize;

563 
˝
->
assoc
 =ássoc;

564 
˝
->
pﬁicy
 =Öolicy;

565 
˝
->
hô_œãncy
 = hit_latency;

568 
˝
->
blk_ac˚ss_‚
 = blk_access_fn;

571 
˝
->
hsize
 = 
	`CACHE_HIGHLY_ASSOC
 (˝Ë? (
assoc
 >> 2) : 0;

572 
˝
->
blk_mask
 = 
bsize
 - 1;

573 
˝
->
£t_shi·
 = 
	`log_ba£2
 (
bsize
);

574 
˝
->
£t_mask
 = 
n£ts
 - 1;

575 
˝
->
èg_shi·
 = cp->
£t_shi·
 + 
	`log_ba£2
 (
n£ts
);

576 
˝
->
èg_mask
 = (1 << (32 - cp->
èg_shi·
)) - 1;

577 
˝
->
èg£t_mask
 = ~˝->
blk_mask
;

578 
˝
->
bus_‰ì
 = 0;

581 
˝
->
hôs
 = 0;

582 
˝
->
dhôs
 = 0;

583 
˝
->
mis£s
 = 0;

584 
˝
->
dmis£s
 = 0;

585 
˝
->
ö_mshr
 = 0;

586 
˝
->
dö_mshr
 = 0;

587 
˝
->
dú_ac˚ss
 = 0;

588 
˝
->
d©a_ac˚ss
 = 0;

589 
˝
->
cohîí˚_mis£s
 = 0;

590 
˝
->
ˇ∑cô™˚_mis£s
 = 0;

591 
˝
->
ª∂a˚míts
 = 0;

592 
˝
->
ª∂Inv
 = 0;

593 
˝
->
wrôebacks
 = 0;

594 
˝
->
wb_cohîí˚_w
 = 0;

595 
˝
->
wb_cohîí˚_r
 = 0;

596 
˝
->
övÆid©i⁄s
 = 0;

597 
˝
->
s_to_i
 = 0;

598 
˝
->
e_to_i
 = 0;

599 
˝
->
e_to_m
 = 0;

600 
˝
->
cohîícyMis£s
 = 0;

601 
˝
->
cohîícyMis£sOC
 = 0;

602 
˝
->
Invld
 = 0;

603 
˝
->
rdb
 = 0;

604 
˝
->
wrb
 = 0;

605 
˝
->
œ°u£
 = 0;

606 
˝
->
dú_nŸifiˇti⁄
 = 0;

607 
˝
->
InvÆid_wrôe_ª˚ived
 = 0;

608 
˝
->
InvÆid_wrôe_ª˚ived_hôs
 = 0;

609 
˝
->
InvÆid_Ród_ª˚ived
 = 0;

610 
˝
->
InvÆid_Ród_ª˚ived_hôs
 = 0;

611 
˝
->
ack_ª˚ived
 = 0;

614 
˝
->
œ°_èg£tid
.
èg
 = 0;

615 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

616 
˝
->
œ°_blk
 = 
NULL
;

617 
˝
->
thªadid
 =Åhreadid;

619 #ifdef 
DCACHE_MSHR


620 
mshr_Êag
 = 0;

621 if((!
	`°rcmp
 (
˝
->
«me
, "dl1")) || (!strcmp (cp->name, "ul2")))

623 if(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

624 
mshr_Êag
 = 0;

626 
mshr_Êag
 = 1;

627 
˝
->
mshr
 = (
mshr_t
 *Ë
	`ˇŒoc
 (1,  (mshr_t));

628 
	`öôMSHR
(
˝
->
mshr
, 
mshr_Êag
);

629 
˝
->
mshr
->
thªadid
 =Åhreadid;

632 
˝
->
mshr
 = 
NULL
;

636 
˝
->
d©a
 = (
byã_t
 *Ë
	`ˇŒoc
 (
n£ts
 * 
assoc
,  (
ˇche_blk_t
Ë+ (˝->
bÆloc
 ? (
bsize
 *  (byte_t)) : 0));

637 i‡(!
˝
->
d©a
)

638 
	`Áèl
 ("out of virtual memory");

641 
bödex
 = 0, 
i
 = 0; i < 
n£ts
; i++)

643 
˝
->
£ts
[
i
].
way_hód
 = 
NULL
;

644 
˝
->
£ts
[
i
].
way_èû
 = 
NULL
;

646 i‡(
˝
->
hsize
)

648 
˝
->
£ts
[
i
].
hash
 = (
ˇche_blk_t
 **Ë
	`ˇŒoc
 (˝->
hsize
,  (cache_blk_t *));

649 i‡(!
˝
->
£ts
[
i
].
hash
)

650 
	`Áèl
 ("out of virtual memory");

655 
˝
->
£ts
[
i
].
blks
 = 
	`CACHE_BINDEX
 (˝, cp->
d©a
, 
bödex
);

659 
j
 = 0; j < 
assoc
; j++)

662 
blk
 = 
	`CACHE_BINDEX
 (
˝
, cp->
d©a
, 
bödex
);

663 
bödex
++;

666 
blk
->
°©us
 = 0;

667 
blk
->
ègid
.
èg
 = 0;

668 
blk
->
ègid
.
thªadid
 = -1;

669 
blk
->
ªady
 = 0;

670 #ifde‡
EUP_NETWORK


671 
blk
->
óæy_nŸifiˇti⁄
 = 0;

674 
m
 = 0, 
n
=0;

675 
m
=0; m<8; m++)

677 
n
=0;n<8;n++)

678 
blk
->
dú_sh¨î
[
m
][
n
]=0;

679 
blk
->
dú_°©e
[
m
]=
DIR_STABLE
;

680 
blk
->
dú_dúty
[
m
] = -1;

681 
blk
->
ex˛usive_time
[
m
] = 0;

682 if(
MSI
)

683 
blk
->
dú_blk_°©e
[
m
] = 
MESI_INVALID
;

684 
blk
->
±r_cur_evít
[
m
] = 
NULL
;

685 #ifde‡
SERIALIZATION_ACK


686 
blk
->
RódPídög
[
m
] = -1;

687 
blk
->
RódPídög_evít
[
m
] = 
NULL
;

688 
blk
->
≥ndögInvAck
[
m
] = 0;

691 
blk
->
evî_dúty
 = 0;

692 
blk
->
evî_touch
 = 0;

694 
blk
->
isSèÀ
 = 0;

696 
blk
->
löeVﬁ©ûe
 = 0;

697 
blk
->
isL1¥e„tch
 = 0;

698 
blk
->
¥e„tch_time
 = 0;

700 
blk
->
w‹dVﬁ©ûe
 = 0;

701 
blk
->
w‹dInvÆid
 = 0;

702 
blk
->
ïochModifõd
 = -1;

704 
blk
->
u£r_d©a
 = (
usize
 !0 ? (
byã_t
 *Ë
	`ˇŒoc
 (usize,  (byã_t)Ë: 
NULL
);

705 
blk
->
övCau£
 = 0;

707 
blk
->
RódCou¡
 = 0;

708 
blk
->
WrôeCou¡
 = 0;

709 
blk
->
W‹dCou¡
 = 0;

710 
blk
->
Ty≥
 = 0;

711 
m
=0;m<8;m++)

712 
blk
->
W‹dU£Fœg
[
m
] = 0;

714 i‡(
MSI
)

716 
blk
->
°©e
 = 
MESI_INVALID
;

721 i‡(
˝
->
hsize
)

722 
	`lök_hèb_ít
 (
˝
, &˝->
£ts
[
i
], 
blk
);

725 
blk
->
way_√xt
 = 
˝
->
£ts
[
i
].
way_hód
;

726 
blk
->
way_¥ev
 = 
NULL
;

727 i‡(
˝
->
£ts
[
i
].
way_hód
)

728 
˝
->
£ts
[
i
].
way_hód
->
way_¥ev
 = 
blk
;

729 
˝
->
£ts
[
i
].
way_hód
 = 
blk
;

730 i‡(!
˝
->
£ts
[
i
].
way_èû
)

731 
˝
->
£ts
[
i
].
way_èû
 = 
blk
;

734  
˝
;

735 
	}
}

736 #ifde‡
EUP_NETWORK


737 
	$UpgødeCheck
(
DIRECTORY_EVENT
 *
evít
)

739 
i
, 
Êag
 = 0, 
des
 = 
evít
->
des1
*
mesh_size
 +Évít->
des2
;

740 
DIRECTORY_EVENT
 *
ãmp
;

741 
i
=0;i<
dú_fifo_num
[
des
];i++)

743 
ãmp
 = 
dú_fifo
[
des
][(
dú_fifo_hód
[des] + 
i
)%
DIR_FIFO_SIZE
];

744 if(
ãmp
->
§c1
 =
evít
->§c1 &&Åemp->
§c2
 =evít->§c2 &&Åemp->
›î©i⁄
 =
WRITE_UPDATE
 &&Åemp->
p›√tMsgNo
 <Évít->p›√tMsgNÿ&& (ãmp->
addr
>>
ˇche_dl1
[0]->
£t_shi·
 ==Évent->addr>>cache_dl1[0]->set_shift))

745 
Êag
 = 1;

746 if(
evít
->
›î©i⁄
 =
MISS_WRITE
 && 
ãmp
->›î©i⁄ =
WRITE_UPDATE
 &&Åemp->
p›√tMsgNo
 <Évít->p›√tMsgNÿ&& (ãmp->
addr
>>
ˇche_dl1
[0]->
£t_shi·
 ==Évent->addr>>cache_dl1[0]->set_shift))

747 
Êag
 = 1;

749  
Êag
;

750 
	}
}

751 
	$SameUpgødeCheck
(
DIRECTORY_EVENT
 *
evít
)

753 
i
, 
j
, 
Êag
 = 0, 
des
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

754 
i
 = 0; i < 
INV_COLLECT_TABLE_SIZE
; i++)

756 if(
övCﬁÀ˘TabÀ
[
des
][
i
].
isVÆid
 && (övCﬁÀ˘TabÀ[des][i].
addr
>>
ˇche_dl1
[0]->
£t_shi·
 =
evít
->addr>>cache_dl1[0]->set_shift))

758 
j
=0;j<
MAX_OWNERS
;j++)

759 if(
övCﬁÀ˘TabÀ
[
des
][
i
].
ow√rsLi°
[
j
] =
evít
->
ãmpID
)

760 
Êag
 = 1;

763  
Êag
;

764 
	}
}

766 
	$Æloˇã_‰ì_evít_li°
()

768 
i
;

769 
‰ì_evít_li°
 = 
	`ˇŒoc
(1, (
DIRECTORY_EVENT
));

770 
DIRECTORY_EVENT
 * 
√xt
 = 
‰ì_evít_li°
;

772 
i
 = 1; i < 
maxEvít
; i++)

774 
√xt
->√xà
	`ˇŒoc
(1, (
DIRECTORY_EVENT
));

775 
√xt
 =Çext->next;

776 
√xt
->√xà
NULL
;

778 
	}
}

780 
DIRECTORY_EVENT
 * 
	$Æloˇã_evít
(
isSyncAc˚ss
)

782 if(
tŸÆEvítCou¡
 >
maxEvít
)

783 
	`∑nic
("Out of freeÉvents\n");

784 
DIRECTORY_EVENT
 * 
ãmp
 = 
‰ì_evít_li°
;

785 
‰ì_evít_li°
 = fªe_evít_li°->
√xt
;

786 
ãmp
->
√xt
 = 
NULL
;

787 
ãmp
->
›
 = 0;

788 
ãmp
->
isPª„tch
 = 0;

789 
ãmp
->
l2Sètus
 = 0;

790 
ãmp
->
l2MissSèπ
 = 0;

791 
ãmp
->
whí
 = 0;

792 
ãmp
->
°¨ãd
 = 0;

793 
ãmp
->
mshr_time
 = 0;

794 
ãmp
->
å™s„r_time
 = 0;

795 
ãmp
->
ªq_time
 = 0;

796 
ãmp
->
°‹e_c⁄d
 = 0;

797 
ãmp
->
Êù_Êag
 = 0;

798 
ãmp
->
‹igöÆChûdCou¡
 = 0;

799 #ifde‡
EXCLUSIVE_OPT


800 
ãmp
->
ex˛usive_a·î_wb
 = 0;

802 #ifde‡
SMD_USE_WRITE_BUF


803 
ãmp
->
l1_wb_íåy
 = 
NULL
;

805 #ifde‡
EUP_NETWORK


806 
ãmp
->
óæy_Êag
 = 0;

809 
ãmp
->
öput_buf„r_fuŒ
 = 0;

810 
ãmp
->
≥ndög_Êag
 = 0;

811 
ãmp
->
L2miss_Êag
 = 0;

812 
ãmp
->
dúty_Êag
 = 0;

813 
ãmp
->
¨rivÆ_time
 = 0;

814 
ãmp
->
dñay
 = 0;

815 
ãmp
->
d©a_ª∂y
 = 0;

816 
ãmp
->
c⁄f_bô
 = -1;

817 
ãmp
->
missNo
 = 0;

818 
ãmp
->
ª£nd
 = 0;

819 
ãmp
->
›î©i⁄
 = 0;

820 
ãmp
->
ãmpID
 = 0;

821 
ãmp
->
addr
 = 0;

822 
ãmp
->
blk1
 = 
NULL
;

823 
ãmp
->
blk_dú
 = 
NULL
;

825 
ãmp
->
±r_evít
 = 
NULL
;

826 
ãmp
->
˝
 = 
NULL
;

827 
ãmp
->
vp
 = 
NULL
;

828 
ãmp
->
nbyãs
 = 0;

829 
ãmp
->
ud©a
 = 
NULL
;

830 
ãmp
->
rs
 = 
NULL
;

831 
ãmp
->
§c1
 = 0;

832 
ãmp
->
§c2
 = 0;

833 
ãmp
->
des1
 = 0;

834 
ãmp
->
des2
 = 0;

835 
ãmp
->
√w_§c1
 = 0;

836 
ãmp
->
√w_§c2
 = 0;

837 
ãmp
->
√w_des1
 = 0;

838 
ãmp
->
√w_des2
 = 0;

839 
ãmp
->
°¨tCy˛e
 = 0;

840 
ãmp
->
∑ª¡
 = 
NULL
;

841 
ãmp
->
∑ª¡_›î©i⁄
 = 0;

842 
ãmp
->
chûdCou¡
 = 0;

843 
ãmp
->
¥o˚ssögD⁄e
 = 0;

844 
ãmp
->
•ec_mode
 = 0;

845 
ãmp
->
p›√tMsgNo
 = 0;

846 
ãmp
->
evítTy≥
 = 0;

847 
ãmp
->
ªc_busy
 = 0;

848 
ãmp
->
sh¨î_num
 = 0;

849 
ãmp
->
¥e„tch_√xt
 = 0;

850 
ãmp
->
≥ndögInvAck
 = 0;

851 
ãmp
->
isReqL2Hô
 = 0;

852 
ãmp
->
isReqL2Inv
 = 0;

853 
ãmp
->
isReqL2SecMiss
 = 0;

854 
ãmp
->
isReqL2Tøns
 = 0;

855 
ãmp
->
ªqNëTime
 = 0;

856 
ãmp
->
ªqAtDúTime
 = 0;

857 
ãmp
->
ªqAckTime
 = 0;

858 
ãmp
->
isSyncAc˚ss
 = isSyncAccess;

859 
tŸÆEvítCou¡
++;

860 
tŸÆevítcou¡
++;

861 
ãmp
->
tŸÆevítcou¡
 =Åotaleventcount;

862  
ãmp
;

863 
	}
}

865 
	$‰ì_evít
(
DIRECTORY_EVENT
 *
evít
)

867 
evít
->
√xt
 = 
‰ì_evít_li°
;

868 
‰ì_evít_li°
 = 
evít
;

869 
tŸÆEvítCou¡
--;

870 
	}
}

873 
ˇche_pﬁicy


874 
	$ˇche_ch¨2pﬁicy
 (
c
)

876 
c
)

879  
LRU
;

881  
R™dom
;

883  
FIFO
;

885 
	`Áèl
 ("bogu†ª∂a˚míàpﬁicy, `%c'", 
c
);

887 
	}
}

891 
	$ˇche_c⁄fig
 (
ˇche_t
 *
˝
,

892 
FILE
 * 
°ªam
)

894 
	`Ârötf
 (
°ªam
, "ˇche: %s: %d sës, %d byã blocks, %d byã†u£∏d©a/block\n", 
˝
->
«me
, cp->
n£ts
, cp->
bsize
, cp->
usize
);

895 
	`Ârötf
 (
°ªam
, "ˇche: %s: %d-way, `%s'Ñïœ˚míàpﬁicy, wrôe-back\n", 
˝
->
«me
, cp->
assoc
, cp->
pﬁicy
 =
LRU
 ? "LRU" : cp->pﬁicy =
R™dom
 ? "R™dom" : cp->pﬁicy =
FIFO
 ? "FIFO" : (
	`ab‹t
 (), ""));

896 
	}
}

900 
	$ˇche_ªg_°©s
 (
ˇche_t
 *
˝
,

901 
°©_sdb_t
 *
sdb
, 
id
)

903 
buf
[512], 
buf1
[512], *
«me
;

906 i‡(
˝
->
thªadid
 !-1 && cp->thªadid !
id
)

907 
	`∑nic
 ("Wrong cache being called in cache_reg_stats\n");

910 i‡(!
˝
->
«me
 || !cp->name[0])

911 
«me
 = "<unknown>";

913 
«me
 = 
˝
->name;

915 
«me
 = 
	`my°rdup
(
˝
->name);

917 
	`•rötf
(
buf
, "_%d", 
id
);

918 
	`°rˇt
(
«me
, 
buf
);

920 
	`•rötf
 (
buf
, "%s.ac˚s£s", 
«me
);

921 
	`•rötf
 (
buf1
, "%s.hô†+ %s.mis£†+ %s.ö_mshr", 
«me
,Çame,Çame);

922 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ac˚s£s", 
buf1
, "%12.0f");

923 
	`•rötf
 (
buf
, "%s.hôs", 
«me
);

924 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡hôs", &
˝
->
hôs
, 0, 
NULL
);

925 
	`•rötf
 (
buf
, "%s.ö_mshr", 
«me
);

926 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡£c⁄d¨y mis£s", &
˝
->
ö_mshr
, 0, 
NULL
);

927 
	`•rötf
 (
buf
, "%s.mis£s", 
«me
);

928 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
˝
->
mis£s
, 0, 
NULL
);

930 
	`•rötf
 (
buf
, "%s.dac˚s£s", 
«me
);

931 
	`•rötf
 (
buf1
, "%s.dhô†+ %s.dmis£†+ %s.dö_mshr", 
«me
,Çame,Çame);

932 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®ac˚s£s", 
buf1
, "%12.0f");

933 
	`•rötf
 (
buf
, "%s.dhôs", 
«me
);

934 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®hôs", &
˝
->
dhôs
, 0, 
NULL
);

935 
	`•rötf
 (
buf
, "%s.dö_mshr", 
«me
);

936 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®£c⁄d¨y mis£s", &
˝
->
dö_mshr
, 0, 
NULL
);

937 
	`•rötf
 (
buf
, "%s.dmis£s", 
«me
);

938 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©®mis£s", &
˝
->
dmis£s
, 0, 
NULL
);

940 
	`•rötf
 (
buf
, "%s.dú_ac˚ss", 
«me
);

941 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡dú_ac˚ss", &
˝
->
dú_ac˚ss
, 0, 
NULL
);

942 
	`•rötf
 (
buf
, "%s.d©a_ac˚ss", 
«me
);

943 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡d©a_ac˚ss", &
˝
->
d©a_ac˚ss
, 0, 
NULL
);

944 
	`•rötf
 (
buf
, "%s.cohîí˚_mis£s", 
«me
);

945 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£†duêtÿövÆid©i⁄", &
˝
->
cohîí˚_mis£s
, 0, 
NULL
);

946 
	`•rötf
 (
buf
, "%s.ˇ∑cô™˚_mis£s", 
«me
);

947 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£†duêtÿˇ∑cô™˚", &
˝
->
ˇ∑cô™˚_mis£s
, 0, 
NULL
);

948 
	`•rötf
 (
buf
, "%s.ª∂a˚míts", 
«me
);

949 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ª∂a˚míts", &
˝
->
ª∂a˚míts
, 0, 
NULL
);

950 
	`•rötf
 (
buf
, "%s.ª∂Inv", 
«me
);

951 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ª∂a˚mít†whichálsÿö˛udêövÆid©i⁄s", &
˝
->
ª∂Inv
, 0, 
NULL
);

952 
	`•rötf
 (
buf
, "%s.wrôebacks", 
«me
);

953 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôebacks", &
˝
->
wrôebacks
, 0, 
NULL
);

954 
	`•rötf
 (
buf
, "%s.wb_cohîí˚_w", 
«me
);

955 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôeback†duêtÿcohîí˚ wrôe", &
˝
->
wb_cohîí˚_w
, 0, 
NULL
);

956 
	`•rötf
 (
buf
, "%s.wb_cohîí˚_r", 
«me
);

957 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôeback†duêtÿcohîí˚Ñód", &
˝
->
wb_cohîí˚_r
, 0, 
NULL
);

958 
	`•rötf
 (
buf
, "%s.Invld", 
«me
);

959 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡Invld", &
˝
->
Invld
, 0, 
NULL
);

960 
	`•rötf
 (
buf
, "%s.övÆid©i⁄s", 
«me
);

961 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄s", &
˝
->
övÆid©i⁄s
, 0, 
NULL
);

962 
	`•rötf
 (
buf
, "%s.s_to_i", 
«me
);

963 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡sh¨edÅÿövÆid(övÆid©i⁄_ª˚ived_sub)", &
˝
->
s_to_i
, 0, 
NULL
);

964 
	`•rötf
 (
buf
, "%s.e_to_i", 
«me
);

965 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ex˛usivêtÿövÆid(övÆid©i⁄_ª˚ived_sub)", &
˝
->
e_to_i
, 0, 
NULL
);

966 
	`•rötf
 (
buf
, "%s.e_to_m", 
«me
);

967 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ex˛usivêtÿövÆid(övÆid©i⁄_ª˚ived_sub)", &
˝
->
e_to_m
, 0, 
NULL
);

969 
	`•rötf
 (
buf
, "%s.dú_nŸifiˇti⁄", 
«me
);

970 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡upd©ög dúe˘‹y", &
˝
->
dú_nŸifiˇti⁄
, 0, 
NULL
);

971 
	`•rötf
 (
buf
, "%s.InvÆid_wrôe_ª˚ived", 
«me
);

972 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ wrôêª˚ived", &
˝
->
InvÆid_wrôe_ª˚ived
, 0, 
NULL
);

973 
	`•rötf
 (
buf
, "%s.InvÆid_ªad_ª˚ived", 
«me
);

974 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ÑódÑe˚ived", &
˝
->
InvÆid_Ród_ª˚ived
, 0, 
NULL
);

975 
	`•rötf
 (
buf
, "%s.InvÆid_w_ª˚ived_hôs", 
«me
);

976 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ wrôêª˚ived_hôs", &
˝
->
InvÆid_wrôe_ª˚ived_hôs
, 0, 
NULL
);

977 
	`•rötf
 (
buf
, "%s.InvÆid_r_ª˚ived_hôs", 
«me
);

978 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄ÑódÑe˚ived_hôs", &
˝
->
InvÆid_Ród_ª˚ived_hôs
, 0, 
NULL
);

979 
	`•rötf
 (
buf
, "%s.acknowÀdgemíàª˚ived", 
«me
);

980 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡acknowÀdgemíàª˚ived", &
˝
->
ack_ª˚ived
, 0, 
NULL
);

982 
	`•rötf
 (
buf
, "%s.cohîícyMis£s", 
«me
);

983 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡cohîícy Mis£s", &
˝
->
cohîícyMis£s
, 0, 
NULL
);

984 
	`•rötf
 (
buf
, "%s.cohîícyMis£sOC", 
«me
);

985 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡cohîícy Mis£†duêtÿ›timi°i¯c‹e", &
˝
->
cohîícyMis£sOC
, 0, 
NULL
);

986 
	`•rötf
 (
buf
, "%s.miss_øã", 
«me
);

987 
	`•rötf
 (
buf1
, "%s.mis£†/ %s.ac˚s£s", 
«me
,Çame);

988 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "mis†øã (i.e., mis£s/ªf)", 
buf1
, 
NULL
);

989 
	`•rötf
 (
buf
, "%s.ª∂_øã", 
«me
);

990 
	`•rötf
 (
buf1
, "%s.ª∂a˚mít†/ %s.ac˚s£s", 
«me
,Çame);

991 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "ª∂a˚míàøã (i.e.,Ñïls/ªf)", 
buf1
, 
NULL
);

992 
	`•rötf
 (
buf
, "%s.wb_øã", 
«me
);

993 
	`•rötf
 (
buf1
, "%s.wrôeback†/ %s.ac˚s£s", 
«me
,Çame);

994 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "wrôebackÑ©ê(i.e., wrbks/ªf)", 
buf1
, 
NULL
);

995 
	`•rötf
 (
buf
, "%s.öv_øã", 
«me
);

996 
	`•rötf
 (
buf1
, "%s.övÆid©i⁄†/ %s.ac˚s£s", 
«me
,Çame);

997 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "övÆid©i⁄Ñ©ê(i.e., invs/ªf)", 
buf1
, 
NULL
);

1000 
	`•rötf
 (
buf
, "%s.ÊushCou¡", 
«me
);

1001 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆ flushes", &
˝
->
ÊushCou¡
, 0, 
NULL
);

1002 
	`•rötf
 (
buf
, "%s.löeFlushed", 
«me
);

1003 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "löe†Êushed", &
˝
->
löeFlushCou¡
, 0, 
NULL
);

1005 
	`•rötf
 (
buf
, "%s.ÊushR©e", 
«me
);

1006 
	`•rötf
 (
buf1
, "%s.löeFlushed / %s.ÊushCou¡", 
«me
,Çame);

1007 
	`°©_ªg_f‹muœ
 (
sdb
, 
buf
, "ÊushÑ©ê(i.e.,Üöes/chunk)", 
buf1
, 
NULL
);

1009 
	`‰ì
(
«me
);

1010 
	}
}

1023 
	$ˇche_°©s
 (
ˇche_t
 *
˝
,

1024 
FILE
 * 
°ªam
)

1026 
sum
 = (Ë(
˝
->
hôs
 + cp->
mis£s
);

1028 
	`Ârötf
 (
°ªam
, "ˇche: %s: %.0‡hô†%.0‡mis£†%.0‡ª∂†%.0‡övÆid©i⁄s\n", 
˝
->
«me
, (Ë˝->
hôs
, (Ë˝->
mis£s
, (Ë˝->
ª∂a˚míts
, (Ë˝->
övÆid©i⁄s
);

1029 
	`Ârötf
 (
°ªam
, "ˇche: %s: mis†øã=%‡Ñï»øã=%‡ invÆid©i⁄Ñ©e=%f\n", 
˝
->
«me
, (Ë˝->
mis£s
 / 
sum
, (Ë(Ë˝->
ª∂a˚míts
 / sum, (Ë˝->
övÆid©i⁄s
 / sum);

1030 
	}
}

1033 
	$b™k_check
 (
md_addr_t
 
addr
, 
ˇche_t
 *
˝
)

1036 
	}
}

1038 
	#BUS_TRAN_LAT
 0

	)

1040 
	#SET
 1

	)

1041 
	#TAG
 2

	)

1046 
dú_evítq_ö£π
(
DIRECTORY_EVENT
 *
evít
);

1047 #ifde‡
DCACHE_MSHR


1048 
DIRECTORY_EVENT
 *
	gevít_¸óãd
 = 
NULL
;

1050 #ifde‡
L1_STREAM_PREFETCHER


1052 
	$l1öô_•
 ()

1054 
i
, 
j
;

1055 
j
=0;j<
numc⁄ãxts
;j++)

1057 
i
 = 0; i < 
MISS_TABLE_SIZE
; i++)

1058 
l1miss_hi°‹y_èbÀ
[
j
].
hi°‹y
[
i
] = 0;

1059 
l1miss_hi°‹y_èbÀ
[
j
].
mht_èû
 = 0;

1060 
l1miss_hi°‹y_èbÀ
[
j
].
mht_num
 = 0;

1062 
i
 = 0; i < 
STREAM_ENTRIES
; i++)

1064 
l1°ªam_èbÀ
[
j
][
i
].
vÆid
 = 0;

1065 
l1°ªam_èbÀ
[
j
][
i
].
addr
 = 0;

1066 
l1°ªam_èbÀ
[
j
][
i
].
°ride
 = 0;

1067 
l1°ªam_èbÀ
[
j
][
i
].
ªmaöög_¥e„tches
 = 0;

1068 
l1°ªam_èbÀ
[
j
][
i
].
œ°_u£
 = 0;

1071 
	}
}

1074 
	$l1ö£π_•
 (
md_addr_t
 
addr
, 
thªadid
)

1076 
i
, 
num
;

1077 
di°
;

1078 
mö_íåy
;

1079 
md_addr_t
 
°ride_addr
;

1080 
cou¡
 = 0;

1082 i‡(
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
 == 0)

1084 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[l1miss_hi°‹y_èbÀ[thªadid].
mht_èû
] = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

1085 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 = (l1miss_hi°‹y_èbÀ[thªadid].mht_èû + 1Ë% 
MISS_TABLE_SIZE
;

1086 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
++;

1090 
di°
 = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë- 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[÷1miss_hi°‹y_èbÀ[thªadid].
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE];

1091 
°ride_addr
 = 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[÷1miss_hi°‹y_èbÀ[thªadid].
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE];

1092 
mö_íåy
 = (
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE;

1095 
num
 = 1, 
i
 = (
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 + 
MISS_TABLE_SIZE
 - 2Ë% MISS_TABLE_SIZE;Çum <Ü1miss_hi°‹y_èbÀ[thªadid].
mht_num
; i = (i + MISS_TABLE_SIZE - 1) % MISS_TABLE_SIZE,Çum++)

1097 
cuº_di°
 = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë- 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1099 i‡(
	`abs
 (
cuº_di°
Ë<áb†(
di°
))

1101 
di°
 = 
cuº_di°
;

1102 
°ride_addr
 = 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1103 
mö_íåy
 = 
i
;

1107 
i
 = 
mö_íåy
;

1110 
i
 = (ò+ 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE;

1111 
cuº_di°
 = (
°ride_addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë- 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1113 i‡(
cuº_di°
 =
di°
)

1115 
cou¡
++;

1116 
°ride_addr
 = 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[
i
];

1119 
i
 !
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
);

1122 
l1miss_hi°‹y_èbÀ
[
thªadid
].
hi°‹y
[l1miss_hi°‹y_èbÀ[thªadid].
mht_èû
] = (
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

1123 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_èû
 = (l1miss_hi°‹y_èbÀ[thªadid].mht_èû + 1Ë% 
MISS_TABLE_SIZE
;

1124 i‡(
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
 < 
MISS_TABLE_SIZE
)

1125 
l1miss_hi°‹y_èbÀ
[
thªadid
].
mht_num
++;

1127 i‡(
cou¡
 > 1)

1130 
id
 = 0;

1132 i‡(
l1°ªam_èbÀ
[
thªadid
][0].
vÆid
 == 1)

1134 
œ°_u£
 = 
l1°ªam_èbÀ
[
thªadid
][0].last_use;

1136 
id
 = 0;

1137 
i
 = 1; i < 
STREAM_ENTRIES
; i++)

1139 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 == 1)

1141 i‡(
œ°_u£
 < 
l1°ªam_èbÀ
[
thªadid
][
i
].last_use)

1143 
œ°_u£
 = 
l1°ªam_èbÀ
[
thªadid
][
i
].last_use;

1144 
id
 = 
i
;

1149 
id
 = 
i
;

1156 
l1°ªam_èbÀ
[
thªadid
][
id
].
vÆid
 = 1;

1157 
l1°ªam_èbÀ
[
thªadid
][
id
].
addr
 =ádd∏& ~(
ˇche_dl1
[0]->
bsize
 - 1);

1158 
l1°ªam_èbÀ
[
thªadid
][
id
].
°ride
 = 
di°
;

1159 
l1°ªam_èbÀ
[
thªadid
][
id
].
ªmaöög_¥e„tches
 = 
PREFETCH_DISTANCE
;

1160 
l1°ªam_èbÀ
[
thªadid
][
id
].
œ°_u£
 = 2000000000;

1163 
	`l1œunch_•
 (
addr
, 
thªadid
);

1165 
	}
}

1168 
	$l1œunch_•
 (
md_addr_t
 
addr
, 
thªadid
)

1170 
i
;

1172 
i
 = 0; i < 
STREAM_ENTRIES
; i++)

1174 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 =1 &&Ü1°ªam_èbÀ[thªadid][i].
addr
 =◊dd∏& ~(
ˇche_dl1
[0]->
bsize
 - 1)))

1176 
lﬂd_œt
 = 0;

1177 
byã_t
 *
l1ˇche_löe
 = 
	`ˇŒoc
 (
ˇche_dl1
[0]->
bsize
,  (byte_t));

1179 
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 =Ü1°ªam_èbÀ[thªadid][i].add∏+Ü1°ªam_èbÀ[thªadid][i].
°ride
;

1180 
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
--;

1181 
l1°ªam_èbÀ
[
thªadid
][
i
].
œ°_u£
 = 
sim_cy˛e
;

1183 i‡(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 == 1)

1185 
l1°ªam_èbÀ
[
thªadid
][
i
].
vÆid
 = 0;

1190 
dl1_¥e„tch_a˘ive
 = 1;

1191 if(
l1°ªam_èbÀ
[
thªadid
][
i
].
°ride
 != 0)

1193 
md_addr_t
 
addr_¥e„tch
 = (
l1°ªam_èbÀ
[
thªadid
][
i
].
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1));

1194 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
ˇche_dl1
[
thªadid
], 
addr_¥e„tch
);

1195 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
ˇche_dl1
[
thªadid
], 
addr_¥e„tch
);

1196 
ˇche_blk_t
 *
blk
;

1197 
ˇche_hô_Êag
 = 0;

1199 
blk
 = 
ˇche_dl1
[
thªadid
]->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

1201 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

1202 
ˇche_hô_Êag
 = 1;

1204 if(
ˇche_hô_Êag
 == 0)

1206 
§c
 = (
addr_¥e„tch
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

1207 
tŸÆ_L1_¥e„tch
 ++;

1209 
m©chnum
;

1210 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr_¥e„tch
, cache_dl1[thªadid]->
£t_shi·
);

1211 if(!
m©chnum
 && (
ˇche_dl1
[
thªadid
]->
mshr
->
‰ìE¡rõs
 > 1))

1213 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(0);

1214 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

1215 
√w_evít
->
d©a_ª∂y
 = 0;

1216 
√w_evít
->
ªq_time
 = 0;

1217 
√w_evít
->
≥ndög_Êag
 = 0;

1218 
√w_evít
->
›
 = 
LDQ
;

1219 
√w_evít
->
isPª„tch
 = 0;

1220 #ifde‡
PREFETCH_OPTI


1221 
√w_evít
->
›î©i⁄
 = 
L1_PREFETCH
;

1223 
√w_evít
->
›î©i⁄
 = 
MISS_READ
;

1225 
√w_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1227 
√w_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1228 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

1229 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

1230 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

1231 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1232 
√w_evít
->
∑ª¡
 = 
NULL
;

1233 
√w_evít
->
ãmpID
 = 
thªadid
;

1234 
√w_evít
->
ª£nd
 = 0;

1235 
√w_evít
->
blk_dú
 = 
NULL
;

1236 
√w_evít
->
˝
 = 
ˇche_dl1
[
thªadid
];

1237 
√w_evít
->
addr
 = 
addr_¥e„tch
;

1238 
√w_evít
->
vp
 = 
NULL
;

1239 
√w_evít
->
nbyãs
 = 
ˇche_dl1
[
thªadid
]->
bsize
;

1240 
√w_evít
->
ud©a
 = 
NULL
;

1241 
√w_evít
->
cmd
 = 
Wrôe
;

1242 
√w_evít
->
rs
 = 
NULL
;

1243 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

1244 
√w_evít
->
•ec_mode
 = 0;

1245 
√w_evít
->
L2miss_Êag
 = 0;

1246 if(
l1°ªam_èbÀ
[
thªadid
][
i
].
ªmaöög_¥e„tches
 =
PREFETCH_DISTANCE
 - 1)

1248 
√w_evít
->
¥e„tch_√xt
 = 2;

1249 
tŸÆ_L1_fú°_¥e„tch
 ++;

1253 
√w_evít
->
¥e„tch_√xt
 = 4;

1254 
tŸÆ_L1_£c_¥e„tch
 ++;

1256 
√w_evít
->
c⁄f_bô
 = -1;

1257 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

1259 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

1261 
	`dú_evítq_ö£π
(
√w_evít
);

1262 
evít_¸óãd
 = 
√w_evít
;

1263 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr_¥e„tch
, 
WAIT_TIME
, 0, 
NULL
);

1268 
dl1_¥e„tch_a˘ive
 = 0;

1269 
	`‰ì
 (
l1ˇche_löe
);

1273 
	}
}

1276 #ifde‡
STREAM_PREFETCHER


1278 
	$öô_•
 ()

1280 
i
;

1282 
i
 = 0; i < 
MISS_TABLE_SIZE
; i++)

1283 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
] = 0;

1284 
miss_hi°‹y_èbÀ
.
mht_èû
 = 0;

1285 
miss_hi°‹y_èbÀ
.
mht_num
 = 0;

1287 
i
 = 0; i < 
STREAM_ENTRIES
; i++)

1289 
°ªam_èbÀ
[
i
].
vÆid
 = 0;

1290 
°ªam_èbÀ
[
i
].
addr
 = 0;

1291 
°ªam_èbÀ
[
i
].
°ride
 = 0;

1292 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
 = 0;

1293 
°ªam_èbÀ
[
i
].
œ°_u£
 = 0;

1295 
	}
}

1298 
	$ö£π_•
 (
md_addr_t
 
addr
, 
thªadid
)

1300 
i
, 
num
;

1301 
di°
;

1302 
mö_íåy
;

1303 
md_addr_t
 
°ride_addr
;

1304 
cou¡
 = 0;

1306 i‡(
miss_hi°‹y_èbÀ
.
mht_num
 == 0)

1308 
miss_hi°‹y_èbÀ
.
hi°‹y
[miss_hi°‹y_èbÀ.
mht_èû
] = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1));

1309 
miss_hi°‹y_èbÀ
.
mht_èû
 = (miss_hi°‹y_èbÀ.mht_èû + 1Ë% 
MISS_TABLE_SIZE
;

1310 
miss_hi°‹y_èbÀ
.
mht_num
++;

1314 
di°
 = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[(miss_hi°‹y_èbÀ.
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE];

1315 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[(miss_hi°‹y_èbÀ.
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE];

1316 
mö_íåy
 = (
miss_hi°‹y_èbÀ
.
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE;

1319 
num
 = 1, 
i
 = (
miss_hi°‹y_èbÀ
.
mht_èû
 + 
MISS_TABLE_SIZE
 - 2Ë% MISS_TABLE_SIZE;Çum < miss_hi°‹y_èbÀ.
mht_num
; i = (i + MISS_TABLE_SIZE - 1) % MISS_TABLE_SIZE,Çum++)

1321 
cuº_di°
 = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

1323 i‡(
	`abs
 (
cuº_di°
Ë<áb†(
di°
))

1325 
di°
 = 
cuº_di°
;

1326 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

1327 
mö_íåy
 = 
i
;

1331 
i
 = 
mö_íåy
;

1334 
i
 = (ò+ 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE;

1335 
cuº_di°
 = (
°ride_addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

1337 i‡(
cuº_di°
 =
di°
)

1339 
cou¡
++;

1340 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

1343 
i
 !
miss_hi°‹y_èbÀ
.
mht_èû
);

1346 
miss_hi°‹y_èbÀ
.
hi°‹y
[miss_hi°‹y_èbÀ.
mht_èû
] = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1));

1347 
miss_hi°‹y_èbÀ
.
mht_èû
 = (miss_hi°‹y_èbÀ.mht_èû + 1Ë% 
MISS_TABLE_SIZE
;

1348 i‡(
miss_hi°‹y_èbÀ
.
mht_num
 < 
MISS_TABLE_SIZE
)

1349 
miss_hi°‹y_èbÀ
.
mht_num
++;

1351 i‡(
cou¡
 > 1)

1354 
id
 = 0;

1356 i‡(
°ªam_èbÀ
[0].
vÆid
 == 1)

1358 
œ°_u£
 = 
°ªam_èbÀ
[0].last_use;

1360 
id
 = 0;

1361 
i
 = 1; i < 
STREAM_ENTRIES
; i++)

1363 i‡(
°ªam_èbÀ
[
i
].
vÆid
 == 1)

1365 i‡(
œ°_u£
 < 
°ªam_èbÀ
[
i
].last_use)

1367 
œ°_u£
 = 
°ªam_èbÀ
[
i
].last_use;

1368 
id
 = 
i
;

1373 
id
 = 
i
;

1380 
°ªam_èbÀ
[
id
].
vÆid
 = 1;

1381 
°ªam_èbÀ
[
id
].
addr
 =ádd∏& ~(
ˇche_dl2
->
bsize
 - 1);

1382 
°ªam_èbÀ
[
id
].
°ride
 = 
di°
;

1383 
°ªam_èbÀ
[
id
].
ªmaöög_¥e„tches
 = 
PREFETCH_DISTANCE
;

1384 
°ªam_èbÀ
[
id
].
œ°_u£
 = 2000000000;

1387 
	`œunch_•
 (
addr
, 
thªadid
);

1389 
	}
}

1392 
	$œunch_•
 (
md_addr_t
 
addr
, 
thªadid
)

1394 
i
;

1396 
i
 = 0; i < 
STREAM_ENTRIES
; i++)

1398 i‡(
°ªam_èbÀ
[
i
].
vÆid
 =1 && såóm_èbÀ[i].
addr
 =◊dd∏& ~(
ˇche_dl2
->
bsize
 - 1)))

1400 
lﬂd_œt
 = 0;

1401 
byã_t
 *
l1ˇche_löe
 = 
	`ˇŒoc
 (
ˇche_dl2
->
bsize
,  (byte_t));

1403 
°ªam_èbÀ
[
i
].
addr
 = såóm_èbÀ[i].add∏+ såóm_èbÀ[i].
°ride
;

1404 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
--;

1405 
°ªam_èbÀ
[
i
].
œ°_u£
 = 
sim_cy˛e
;

1407 i‡(
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
 == 1)

1409 
°ªam_èbÀ
[
i
].
vÆid
 = 0;

1414 
dl2_¥e„tch_a˘ive
 = 1;

1415 
DIRECTORY_EVENT
 *
evít
 = 
	`Æloˇã_evít
(0);

1416 if(
evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

1417 
evít
->
c⁄f_bô
 = -1;

1418 
evít
->
≥ndög_Êag
 = 0;

1419 
evít
->
addr
 = (
°ªam_èbÀ
[
i
].add∏& ~(
ˇche_dl2
->
bsize
 - 1));

1420 
evít
->
¥e„tch_√xt
 = 3;

1421 
evít
->
°¨ãd
 = 
sim_cy˛e
;

1422 
evít
->
›î©i⁄
 = 
L2_PREFETCH
;

1423 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1424 
evít
->
›
 = 0;

1425 
evít
->
˝
 = 
ˇche_dl1
[0];

1426 
evít
->
ãmpID
 = 
thªadid
;

1427 
evít
->
nbyãs
 = 
ˇche_dl1
[0]->
bsize
;

1428 
evít
->
ud©a
 = 
NULL
;

1429 
evít
->
rs
 = 
NULL
;

1430 
evít
->
•ec_mode
 = 0;

1431 
evít
->
öput_buf„r_fuŒ
 = 0;

1432 
evít
->
§c1
 = 
thªadid
/
mesh_size
 + 
MEM_LOC_SHIFT
;

1433 
evít
->
§c2
 = 
thªadid
%
mesh_size
;

1434 
§c
;

1435 
§c
 = (
evít
->
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

1436 
evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

1437 
evít
->
des2
 = (
§c
 %
mesh_size
);

1438 
evít
->
d©a_ª∂y
 = 0;

1439 
evít
->
¥o˚ssögD⁄e
 = 0;

1440 
evít
->
ªq_time
 = 0;

1441 
	`dú_evítq_ö£π
(
evít
);

1443 
dl2_¥e„tch_a˘ive
 = 0;

1444 
	`‰ì
 (
l1ˇche_löe
);

1448 
	}
}

1453 
cou¡î_t
 
tŸÆL2WrôeReqHôs
;

1454 
cou¡î_t
 
tŸÆL2WrôeReqNoSh¨î
;

1455 
cou¡î_t
 
tŸÆL2WrôeReqDúty
;

1456 
cou¡î_t
 
dñayL2WrôeReqDúty
;

1457 
cou¡î_t
 
tŸÆL2WrôeReqSh¨ed
;

1458 
cou¡î_t
 
dñayL2WrôeReqSh¨ed
;

1460 
cou¡î_t
 
tŸÆL2RódReqHôs
;

1461 
cou¡î_t
 
tŸÆL2RódReqNoSh¨î
;

1462 
cou¡î_t
 
tŸÆL2RódReqDúty
;

1463 
cou¡î_t
 
dñayL2RódReqDúty
;

1465 
cou¡î_t
 
tŸÆL2RódReqSh¨ed
;

1466 
cou¡î_t
 
tŸÆL2WrôeReqSh¨edWT
;

1467 
cou¡î_t
 
tŸÆL2WrôeReqDútyWT
;

1468 
cou¡î_t
 
tŸÆL2RódReqDútyWT
;

1470 
cou¡î_t
 
tŸÆL1LöePªfU£
;

1471 
cou¡î_t
 
tŸÆL1LöePªfNoU£
;

1472 
cou¡î_t
 
tŸÆL1LöeRódU£
;

1473 
cou¡î_t
 
tŸÆL1LöeRódNoU£
;

1474 
cou¡î_t
 
tŸÆL1LöeWrôeU£
;

1475 
cou¡î_t
 
tŸÆL1LöeWrôeNoU£
;

1477 
cou¡î_t
 
tŸÆL1LöeExlU£d
;

1478 
cou¡î_t
 
tŸÆL1LöeExlInv
;

1479 
cou¡î_t
 
tŸÆL1LöeExlDr›
;

1481 
cou¡î_t
 
tŸÆL2ReqPrimMiss
;

1482 
cou¡î_t
 
tŸÆL2ReqSecMiss
;

1483 
cou¡î_t
 
tŸÆL2ReqHô
;

1484 
cou¡î_t
 
tŸÆL2ReqInTøns
;

1485 
cou¡î_t
 
tŸÆL2OwnReqInTøns
;

1486 
cou¡î_t
 
tŸÆL2ReqInInv
;

1488 
cou¡î_t
 
dñayL2ReqPrimMiss
;

1489 
cou¡î_t
 
dñayL2ReqSecMiss
;

1490 
cou¡î_t
 
dñayL2ReqHô
;

1491 
cou¡î_t
 
dñayL2ReqInTøns
;

1492 
cou¡î_t
 
dñayL2OwnReqInTøns
;

1493 
cou¡î_t
 
dñayL2ReqInInv
;

1495 
cou¡î_t
 
tŸÆWrôeReq
;

1496 
cou¡î_t
 
tŸÆWrôeReqInv
;

1497 
cou¡î_t
 
tŸÆWrôeDñay
;

1498 
cou¡î_t
 
tŸÆWrôeInvDñay
;

1499 
cou¡î_t
 
tŸÆUpgødeReq
;

1500 
cou¡î_t
 
	gtŸÆUpgødeMiss
;

1501 
cou¡î_t
 
tŸÆUpgødeReqInv
;

1502 
cou¡î_t
 
tŸÆUpgødeDñay
;

1503 
cou¡î_t
 
tŸÆUpgødeInvDñay
;

1504 
cou¡î_t
 
	gm_upd©e_miss
[
MAXTHREADS
];

1506 
cou¡î_t
 
cou¡N⁄AŒocRódE¨ly
;

1507 
cou¡î_t
 
	gsh¨î_di°r
[
MAXTHREADS
];

1508 
cou¡î_t
 
	gtŸÆ_c‹√r_∑ckës
, 
	gtŸÆ_√ighb‹_∑ckës
, 
	gtŸÆ_Ár_∑ckës
;

1510 #ifde‡
SERIALIZATION_ACK


1511 
	$isInvCﬁÀ˘TabÀFuŒ
(
thªadid
)

1513 
i
;

1514 
i
 = 0; i < 
INV_COLLECT_TABLE_SIZE
; i++)

1516 if(!
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
)

1520 
	}
}

1522 
	$√wInvCﬁÀ˘
(
thªadid
, 
md_addr_t
 
addr
, 
≥ndögInv
, 
ow√r
, 
c⁄f
)

1524 
i
;

1527 
i
 = 0; i < 
INV_COLLECT_TABLE_SIZE
; i++)

1529 if(
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
 && invCﬁÀ˘TabÀ[thªadid][i].
addr
 ==áddr)

1530 
	`∑nic
("Error inÇewInvCollect:áddressálreadyÉxists.");

1534 
i
 = 0; i < 
INV_COLLECT_TABLE_SIZE
; i++)

1536 if(!
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
)

1538 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
 = 1;

1539 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
addr
 =áddr;

1540 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
≥ndögInv
 =ÖendingInv;

1541 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
numOw√rs
 = 1;

1542 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ow√rsLi°
[0] = 
ow√r
;

1543 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ack_c⁄f
[0] = 
c⁄f
;

1547 
	`∑nic
("Error inÇewInvCollect:Åable is full!!!");

1548 
	}
}

1550 
	$addOw√r
(
thªadid
, 
md_addr_t
 
addr
, 
ow√r
)

1552 
i
;

1553 
i
 = 0; i < 
INV_COLLECT_TABLE_SIZE
; i++)

1555 if(
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
 && invCﬁÀ˘TabÀ[thªadid][i].
addr
 ==áddr)

1557 if(
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
numOw√rs
 >
MAX_OWNERS
)

1559 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ow√rsLi°
[övCﬁÀ˘TabÀ[thªadid][i].
numOw√rs
] = 
ow√r
;

1560 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
numOw√rs
++;

1564 
	`∑nic
("Error ináddOwner:ÉntryÇot found!!!");

1565 
	}
}

1569 
	$övAckUpd©e
(
thªadid
, 
md_addr_t
 
addr
, 
ow√r
, 
isSyncAc˚ss
)

1571 
i
;

1572 
i
 = 0; i < 
INV_COLLECT_TABLE_SIZE
; i++)

1575 if(
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
 && invCﬁÀ˘TabÀ[thªadid][i].
addr
 =add∏&& invCﬁÀ˘TabÀ[thªadid][i].
ow√rsLi°
[övCﬁÀ˘TabÀ[thªadid][i].
numOw√rs
 - 1] =
ow√r
)

1577 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
≥ndögInv
--;

1578 if(
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
≥ndögInv
 == 0)

1580 
j
 = 0;

1581 
j
 = 0; j < 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
numOw√rs
; j++)

1583 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
isSyncAc˚ss
);

1585 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

1586 
√w_evít
->
ªq_time
 = 0;

1587 
√w_evít
->
c⁄f_bô
 = -1;

1588 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

1589 
√w_evít
->
≥ndög_Êag
 = 0;

1590 
√w_evít
->
›
 = 0;

1591 
√w_evít
->
isPª„tch
 = 0;

1592 
√w_evít
->
L2miss_Êag
 = 0;

1593 
√w_evít
->
›î©i⁄
 = 
FINAL_INV_ACK
;

1594 
√w_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1595 
√w_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1596 
√w_evít
->
des1
 = 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ow√rsLi°
[
j
]/
mesh_size
+
MEM_LOC_SHIFT
;

1597 
√w_evít
->
des2
 = 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ow√rsLi°
[
j
]%
mesh_size
;

1598 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

1599 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1600 
√w_evít
->
∑ª¡
 = 
NULL
;

1601 
√w_evít
->
ãmpID
 = 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ow√rsLi°
[
j
];

1602 
√w_evít
->
ª£nd
 = 0;

1603 
√w_evít
->
blk_dú
 = 
NULL
;

1604 
√w_evít
->
˝
 = 
NULL
;

1605 
√w_evít
->
addr
 =áddr;

1606 
√w_evít
->
vp
 = 
NULL
;

1607 
√w_evít
->
nbyãs
 = 0;

1608 
√w_evít
->
ud©a
 = 
NULL
;

1609 
√w_evít
->
cmd
 = 
Wrôe
;

1610 
√w_evít
->
rs
 = 
NULL
;

1611 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

1612 
√w_evít
->
•ec_mode
 = 0;

1613 if(
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
ack_c⁄f
[
j
])

1614 
√w_evít
->
c⁄f_bô
 = 1;

1616 
vc
 = 0;

1617 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

1618 
vc
 = 
	`p›√tBuf„rS∑˚
(
√w_evít
->
§c1
,Çew_evít->
§c2
, -1);

1619 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

1620 
	`dú_evítq_ö£π
(
√w_evít
);

1622 
övCﬁÀ˘TabÀ
[
thªadid
][
i
].
isVÆid
 = 0;

1629 
	}
}

1632 
cou¡î_t
 
övÆid©i⁄_ª∂ay
[
MAXTHREADS
];

1634 
	$£ndLSQInv
(
md_addr_t
 
addr
, 
thªadid
)

1636 i‡(
cﬁÀ˘_°©s
)

1638 
cx
, 
dx
;

1639 
LSQ_size
;

1640 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

1641 
md_addr_t
 
mask
;

1643 
mask
 = ~
ˇche_dl1
[
thªadid
]->
blk_mask
;

1645 
cx
 = 
cuºít
->
LSQ_hód
, 
dx
 = 0; dx !cuºít->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

1647 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOADË&& (cuºít->LSQ[cx].
addr
 & 
mask
Ë=◊dd∏& maskË&& !cuºít->LSQ[cx].
•ec_mode
 && !cuºít->LSQ[cx].
isPª„tch
 && cuºít->LSQ[cx].
issued
)

1649 #ifde‡
SEQUENTIAL_CONSISTENCY


1650 
	`fixS≥cSèã
 (
cuºít
->
LSQ
[
cx
].
¥od
[1]->
ödex
, 
thªadid
);

1651 
cuºít
->
ªgs
 = cuºít->
LSQ
[
cx
].
¥od
[1]->
backupReg
;

1652 
	`£qC⁄si°™cyRïœy
 (
cuºít
->
LSQ
[
cx
].
¥od
[1]->
ödex
, 
thªadid
);

1653 
övÆid©i⁄_ª∂ay
[
thªadid
]++;

1656 #ifde‡
RELAXED_CONSISTENCY


1657 
cuºít
->
LSQ
[
cx
].
övÆid©i⁄Re˚ived
 = 1;

1662 
	}
}

1665 
	$ª£t_p‹ts
()

1667 
i
;

1668 
i
 = 0; i < 
MAXTHREADS
+
mesh_size
*2; i++)

1670 
dú_fifo_p‹tu£
[
i
] = 0;

1671 
l1_fifo_p‹tu£
[
i
] = 0;

1672 #ifde‡
TSHR


1673 
tshr_fifo_p‹tu£
[
i
] = 0;

1676 
	}
}

1677 #ifde‡
LOCK_CACHE_REGISTER


1678 
	$LockRege°îCheck
(
DIRECTORY_EVENT
 *
evít
)

1680 
thªadid
 = (
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
;

1681 
LOCK_CACHE
 *
LockReg
 = &
Lock_ˇche
[
thªadid
];

1682 if(
LockReg
->
SubS¸ibeVe˘
 =0 && LockReg->
lock_ow√r
 == 0)

1684 
LockReg
->
SubS¸ibeVe˘
 |()1<<
evít
->
ãmpID
;

1685 
LockReg
->
èg
 = 
evít
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1);

1687 if((
evít
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë=
LockReg
->
èg
)

1688 
LockReg
->
SubS¸ibeVe˘
 |()1<<
evít
->
ãmpID
;

1690 
	}
}

1691 
	$lock_ˇche_ac˚ss
(
DIRECTORY_EVENT
 *
evít
)

1693 
thªadid
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

1694 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
 ||Évít->°‹e_c⁄d =
MY_LDL_L
)

1696 if(
evít
->
›î©i⁄
 =
INV_MSG_UPDATE
)

1698 if(
evít
->
addr
 =
comm⁄_ªgs_s
[
thec⁄ãxts
[
thªadid
]->
ma°îid
][thªadid].
addªss
 && comm⁄_ªgs_s[thec⁄ãxts[thªadid]->ma°îid][thªadid].
ªgs_lock
)

1700 if(
lock_fifo_num
[
thªadid
] >
MAXLOCKEVENT
)

1702 
lock_fifo_fuŒ
 ++;

1705 
lock_fifo
[
thªadid
][
lock_fifo_èû
[thªadid]] = 
evít
;

1706 
lock_fifo_num
[
thªadid
] ++;

1707 
lock_fifo_èû
[
thªadid
] = (lock_fifo_èû[thªadid] + 1 + 
MAXLOCKEVENT
) % MAXLOCKEVENT;

1711 if(((
evít
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë=
Lock_ˇche
[
thªadid
].
èg
))

1713 if(
lock_fifo_num
[
thªadid
] >
MAXLOCKEVENT
)

1715 
lock_fifo_fuŒ
 ++;

1718 
lock_fifo
[
thªadid
][
lock_fifo_èû
[thªadid]] = 
evít
;

1719 
lock_fifo_num
[
thªadid
] ++;

1720 
lock_fifo_èû
[
thªadid
] = (lock_fifo_èû[thªadid] + 1 + 
MAXLOCKEVENT
) % MAXLOCKEVENT;

1725 
	}
}

1726 
	$lock_ˇche_›î©i⁄
(
DIRECTORY_EVENT
 *
evít
)

1728 
thªadid
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

1729 
LOCK_CACHE
 *
LockReg
 = &
Lock_ˇche
[
thªadid
];

1730 
Thªadid
;

1732 
evít
->
°‹e_c⁄d
)

1734 
MY_LDL_L
:

1735 if((
evít
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë=
LockReg
->
èg
)

1737 
lock_ˇche_hô
 ++;

1738 
LockReg
->
SubS¸ibeVe˘
 |()1<<
evít
->
ãmpID
;

1740 
evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

1741 
evít
->
§c1
 +evít->
des1
;

1742 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

1743 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

1744 
evít
->
§c2
 +evít->
des2
;

1745 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

1746 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

1747 
evít
->
¥o˚ssögD⁄e
 = 0;

1748 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1749 
evít
->
∑ª¡
 = 
NULL
;

1750 
evít
->
blk_dú
 = 
NULL
;

1751 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

1752 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 0);

1753 
	`dú_evítq_ö£π
(
evít
);

1758 
lock_ˇche_miss
 ++;

1760 
	`∑nic
("LOCK OPERATION!");

1763 
MY_STL_C
:

1764 if(
evít
->
›î©i⁄
 =
INV_MSG_UPDATE
)

1766 if(
evít
->
addr
 =
comm⁄_ªgs_s
[
thec⁄ãxts
[
thªadid
]->
ma°îid
][thªadid].
addªss
 && comm⁄_ªgs_s[thec⁄ãxts[thªadid]->ma°îid][thªadid].
ªgs_lock
)

1768 
comm⁄_ªgs_s
[
thec⁄ãxts
[
thªadid
]->
ma°îid
][thªadid].
ªgs_lock
 = 0;

1769 
comm⁄_ªgs_s
[
thec⁄ãxts
[
thªadid
]->
ma°îid
][thªadid].
subs¸ibe_vÆue
 = ~common_regs_s[thecontexts[threadid]->masterid][threadid].subscribe_value;

1771 
i
, 
mshr_size
;

1772 
mshr_size
 = 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrSIZE
;

1773 
i
=0;i<
mshr_size
;i++)

1775 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
isVÆid


1776 && ((
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
addr
 >> cache_dl1[thªadid]->
£t_shi·
Ë=(
evít
->addr >> cache_dl1[threadid]->set_shift)))

1778 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
sim_cy˛e
;

1779 if(!
evít
->
•ec_mode
 && 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].evít->
rs
)

1781 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
evít
->
rs
->
wrôewaô
 = 2;

1782 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
evít
->
rs
->
STL_C_Áû
 = 1;

1784 #ifde‡
SMD_USE_WRITE_BUF


1785 if(
evít
->
l1_wb_íåy
)

1786 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
evít
->
l1_wb_íåy
->
STL_C_Áû
 = 1;

1791 
	`‰ì_evít
(
evít
);

1794 
	`∑nic
("The store conditional update didÇot matchÅheÜoadÜinkáddressÑegister!");

1796 if(
evít
->
›î©i⁄
 =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
)

1798 if((
evít
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë=
Lock_ˇche
[
thªadid
].
èg
)

1800 
lock_ˇche_hô
 ++;

1801 if(
LockReg
->
lock_ow√r
 !0 && LockReg->lock_ow√∏!
evít
->
ãmpID
+1)

1803 
	`¥ötf
("thªadid %d faû o¿lock \n", 
evít
->
ãmpID
);

1804 
	`‰ì_evít
(
evít
);

1809 
LockReg
->
SubS¸ibeVe˘
 &~()1<<
evít
->
ãmpID
;

1811 
LockReg
->
BoﬁVÆue
 = ~LockReg->BoolValue;

1812 if(
LockReg
->
lock_ow√r
 == 0)

1814 
LockReg
->
lock_ow√r
 = 1+
evít
->
ãmpID
;

1815 
	`¥ötf
("thªadid %dácquúê⁄Üock \n", 
evít
->
ãmpID
);

1817 if(
LockReg
->
lock_ow√r
 =1+
evít
->
ãmpID
)

1819 
LockReg
->
lock_ow√r
 = 0;

1820 
	`¥ötf
("thªadid %dÑñó£ o¿lock \n", 
evít
->
ãmpID
);

1824 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

1826 if((((
LockReg
->
SubS¸ibeVe˘
Ë& (()1 << (
Thªadid
%64))Ë=(()1 << (Thªadid%64))Ë&& (Thªadid !
evít
->
ãmpID
))

1828 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

1829 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

1830 
√w_evít
->
ªq_time
 = 0;

1831 
√w_evít
->
c⁄f_bô
 = -1;

1832 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

1833 
√w_evít
->
≥ndög_Êag
 = 0;

1834 
√w_evít
->
›
 = 
evít
->op;

1835 
√w_evít
->
isPª„tch
 = 0;

1836 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

1837 
√w_evít
->
›î©i⁄
 = 
INV_MSG_UPDATE
;

1838 
√w_evít
->
c⁄f_bô
 = 
evít
->
chûdCou¡
;

1839 
√w_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1840 
√w_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1841 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1842 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

1843 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

1844 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1845 
√w_evít
->
∑ª¡
 = 
evít
;

1846 
√w_evít
->
ãmpID
 = 
evít
->tempID;

1847 
√w_evít
->
ª£nd
 = 0;

1848 
√w_evít
->
blk_dú
 = 
NULL
;

1849 
√w_evít
->
˝
 = 
evít
->cp;

1850 
√w_evít
->
addr
 = 
evít
->addr;

1851 
√w_evít
->
vp
 = 
NULL
;

1852 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

1853 
√w_evít
->
ud©a
 = 
NULL
;

1854 
√w_evít
->
cmd
 = 
Wrôe
;

1855 
√w_evít
->
rs
 = 
evít
->rs;

1856 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

1857 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

1858 
√w_evít
->
•ec_mode
 = 0;

1859 
evít
->
chûdCou¡
++;

1860 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI") || (!mystricmp(network_type, "HYBRID")))

1862 #ifde‡
INV_ACK_CON


1863 
thªad_id
;

1864 if(
	`Is_Sh¨ed
(
LockReg
->
SubS¸ibeVe˘
, 
ãmpID
) > 1)

1866 if((
√w_evít
->
§c1
*
mesh_size
+√w_evít->
§c2
 !√w_evít->
des1
*mesh_size+√w_evít->
des2
Ë&& ((!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI")Ë|| (!my°ricmp“ëw‹k_ty≥, "HYBRID"Ë&& ((
	`abs
(new_event->src1 -Çew_event->des1) +ábs(new_event->src2 -Çew_event->des2)) > 1))))

1868 
√w_evít
->
d©a_ª∂y
 = 0;

1869 
DIRECTORY_EVENT
 *
√w_evít2
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

1870 if(
√w_evít2
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

1871 if(
cﬁÀ˘_°©s
)

1872 
˝_dú
->
dú_ac˚ss
 ++;

1873 
√w_evít2
->
öput_buf„r_fuŒ
 = 0;

1874 
√w_evít2
->
ªq_time
 = 0;

1875 
√w_evít2
->
c⁄f_bô
 = -1;

1876 
√w_evít2
->
≥ndög_Êag
 = 0;

1877 
√w_evít2
->
›
 = 
evít
->op;

1878 
√w_evít2
->
isPª„tch
 = 0;

1879 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_UPDATE
;

1880 
√w_evít2
->
°‹e_c⁄d
 = 
evít
->store_cond;

1881 
√w_evít2
->
§c1
 = 
√w_evít
->
des1
;

1882 
√w_evít2
->
§c2
 = 
√w_evít
->
des2
;

1883 
√w_evít2
->
des1
 = 
√w_evít
->
§c1
;

1884 
√w_evít2
->
des2
 = 
√w_evít
->
§c2
;

1885 
√w_evít2
->
¥o˚ssögD⁄e
 = 0;

1886 
√w_evít2
->
°¨tCy˛e
 = 
sim_cy˛e
;

1887 
√w_evít2
->
∑ª¡
 = 
evít
;

1888 
√w_evít2
->
ãmpID
 = 
evít
->tempID;

1889 
√w_evít2
->
ª£nd
 = 0;

1890 
√w_evít2
->
blk_dú
 = 
NULL
;

1891 
√w_evít2
->
˝
 = 
evít
->cp;

1892 
√w_evít2
->
addr
 = 
evít
->addr;

1893 
√w_evít2
->
vp
 = 
NULL
;

1894 
√w_evít2
->
nbyãs
 = 
evít
->
˝
->
bsize
;

1895 
√w_evít2
->
ud©a
 = 
NULL
;

1896 
√w_evít2
->
cmd
 = 
Wrôe
;

1897 
√w_evít2
->
rs
 = 
evít
->rs;

1898 
√w_evít2
->
°¨ãd
 = 
sim_cy˛e
;

1899 
√w_evít2
->
•ec_mode
 = 0;

1900 
√w_evít2
->
L2miss_Êag
 = 
evít
->L2miss_flag;

1901 
√w_evít2
->
d©a_ª∂y
 = 0;

1902 
p›√tMsgNo
 ++;

1903 
√w_evít2
->
p›√tMsgNo
 =ÖopnetMsgNo;

1904 
√w_evít2
->
whí
 = 
WAIT_TIME
;

1905 
	`dú_evítq_ö£π
(
√w_evít2
);

1908 
√w_evít
->
d©a_ª∂y
 = 1;

1911 
√w_evít
->
d©a_ª∂y
 = 1;

1913 
√w_evít
->
d©a_ª∂y
 = 1;

1917 
√w_evít
->
d©a_ª∂y
 = 1;

1918 
evít
->
dúty_Êag
 = 1;

1920 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 0);

1922 
	`dú_evítq_ö£π
(
√w_evít
);

1930 
lock_ˇche_miss
 ++;

1931 
	`∑nic
("LOCK OPERATION!");

1936 if((
evít
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
 - 1)Ë=
Lock_ˇche
[
thªadid
].
èg
)

1938 
dˇche2_ac˚ss
++;

1939 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

1940 (
evít
->
∑ª¡
)->
chûdCou¡
 --;

1942 if((
evít
->
∑ª¡
)->
chûdCou¡
 == 0)

1945 
DIRECTORY_EVENT
 *
∑ª¡_evít
 = 
evít
->
∑ª¡
;

1946 
∑ckë_size
 = 
mëa_∑ckë_size
;

1949 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

1950 
∑ª¡_evít
->
ªqAckTime
 = 
sim_cy˛e
;

1951 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

1952 
∑ª¡_evít
->
§c1
 = 
evít
->
des1
;

1953 
∑ª¡_evít
->
§c2
 = 
evít
->
des2
;

1954 
∑ª¡_evít
->
des1
 =Ö¨ít_evít->
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

1955 
∑ª¡_evít
->
des2
 =Ö¨ít_evít->
ãmpID
%
mesh_size
;

1956 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

1957 
∑ª¡_evít
->
≥ndögInvAck
 = 0;

1958 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
,Ö¨ít_evít->
°¨tCy˛e
, 
∑ckë_size
, 0);

1959 
	`‰ì_evít
(
evít
);

1960 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

1963 
	`‰ì_evít
(
evít
);

1968 
lock_ˇche_miss
 ++;

1969 
	`∑nic
("LOCK OPERATION!");

1975 
	`∑nic
("Operations otherÅhan LDL_Lánd STL_CándÇotáccessÅhis function");

1977 
	}
}

1979 
m_shSQSize
;

1980 
	$dú_fifo_íqueue
(
DIRECTORY_EVENT
 *
evít
, 
ty≥
)

1982 
thªadid
 = 
evít
->
des1
*
mesh_size
 +Évít->
des2
;

1983 if(
evít
->
›î©i⁄
 =
INV_MSG_READ
 ||Évít->›î©i⁄ =
INV_MSG_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_IL1
 ||Évít->›î©i⁄ =
ACK_DIR_READ_SHARED
 ||Évít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
 ||Évít->›î©i⁄ =
FINAL_INV_ACK
 ||Évít->›î©i⁄ =
NACK
 ||Évít->›î©i⁄ =
FAIL


1984 #ifde‡
WRITE_EARLY


1985 || 
evít
->
›î©i⁄
 =
ACK_DIR_WRITE_EARLY


1987 #ifde‡
PREFETCH_OPTI


1988 || 
evít
->
›î©i⁄
 =
READ_META_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_META_REPLY_SHARED
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_SHARED
 ||Évít->›î©i⁄ =
WRITE_META_REPLY
 ||Évít->›î©i⁄ =
WRITE_DATA_REPLY


1992 #ifde‡
LOCK_CACHE_REGISTER


1993 if(
evít
->
›î©i⁄
 =
INV_MSG_UPDATE
)

1994 if(
	`lock_ˇche_ac˚ss
(
evít
))

1997 if(
l1_fifo_num
[
thªadid
] >
DIR_FIFO_SIZE
)

1998 
	`∑nic
("L1 cache FIFO is full");

1999 if(
ty≥
 =0 && 
l1_fifo_num
[
thªadid
] >
dú_fifo_size
)

2001 if(
l1_fifo_num
[
thªadid
] >
dú_fifo_size
 && !
œ°_L1_fifo_fuŒ
[threadid])

2003 
L1_fifo_fuŒ
 ++;

2004 
œ°_L1_fifo_fuŒ
[
thªadid
] = 
sim_cy˛e
;

2008 if(
œ°_L1_fifo_fuŒ
[
thªadid
])

2010 
SèŒ_L1_fifo
 +
sim_cy˛e
 - 
œ°_L1_fifo_fuŒ
[
thªadid
];

2011 
œ°_L1_fifo_fuŒ
[
thªadid
] = 0;

2013 if(
evít
->
›î©i⁄
 =
ACK_DIR_IL1
Ëevít->
whí
 = 
sim_cy˛e
 + 
ˇche_û1_œt
;

2014 
evít
->
whí
 = 
sim_cy˛e
 + 
ˇche_dl1_œt
;

2015 
l1_fifo
[
thªadid
][
l1_fifo_èû
[thªadid]] = 
evít
;

2016 
l1_fifo_èû
[
thªadid
] = (l1_fifo_èû[thªadid]+1)%
DIR_FIFO_SIZE
;

2017 
l1_fifo_num
[
thªadid
]++;

2022 #ifde‡
LOCK_CACHE_REGISTER


2023 if(
evít
->
›î©i⁄
 =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 ||Évít->›î©i⁄ =
ACK_MSG_UPDATE
)

2024 if(
	`lock_ˇche_ac˚ss
(
evít
))

2027 #ifde‡
TSHR


2028 if(
evít
->
Êù_Êag
)

2030 
evít
->
whí
 = 
sim_cy˛e
+
RETRY_TIME
;

2031 
tshr_fifo
[
thªadid
][
tshr_fifo_èû
[thªadid]] = 
evít
;

2032 
tshr_fifo_èû
[
thªadid
] = (tshr_fifo_èû[thªadid]+1)%
TSHR_FIFO_SIZE
;

2033 
tshr_fifo_num
[
thªadid
]++;

2037 if(
dú_fifo_num
[
thªadid
] >
DIR_FIFO_SIZE
)

2038 
	`∑nic
("DIR FIFO is full");

2039 if(
ty≥
 =0 && 
dú_fifo_num
[
thªadid
] >
dú_fifo_size
)

2041 if(
dú_fifo_num
[
thªadid
] >
dú_fifo_size
 && !
œ°_Dú_fifo_fuŒ
[threadid])

2043 
Dú_fifo_fuŒ
 ++;

2044 
œ°_Dú_fifo_fuŒ
[
thªadid
] = 
sim_cy˛e
;

2048 if(
œ°_Dú_fifo_fuŒ
[
thªadid
])

2050 
SèŒ_dú_fifo
 +
sim_cy˛e
 - 
œ°_Dú_fifo_fuŒ
[
thªadid
];

2051 
œ°_Dú_fifo_fuŒ
[
thªadid
] = 0;

2054 if(
evít
->
›î©i⁄
 !
MEM_READ_REQ
 &&Évít->›î©i⁄ !
MEM_READ_REPLY
 &&Évít->›î©i⁄ !
WAIT_MEM_READ_NBLK
)

2055 
evít
->
whí
 = 
sim_cy˛e
 + 
ˇche_dl2_œt
;

2057 
evít
->
whí
 = 
sim_cy˛e
;

2058 
dú_fifo
[
thªadid
][
dú_fifo_èû
[thªadid]] = 
evít
;

2059 
dú_fifo_èû
[
thªadid
] = (dú_fifo_èû[thªadid]+1)%
DIR_FIFO_SIZE
;

2060 
dú_fifo_num
[
thªadid
]++;

2063 
	}
}

2065 
	$dú_fifo_dequeue
()

2067 
i
, 
j
;

2068 #ifde‡
LOCK_CACHE_REGISTER


2069 
íåy
;

2070 
i
=0;i<
numc⁄ãxts
;i++)

2072 if(
lock_fifo_num
[
i
])

2074 
j
=0;j<
MAXLOCKEVENT
;j++)

2076 if(
	`lock_ˇche_›î©i⁄
(
lock_fifo
[
i
][
lock_fifo_hód
[i]]))

2078 
lock_fifo_num
[
i
] --;

2079 
lock_fifo_bíefô
 ++;

2080 
lock_fifo_hód
[
i
] = (lock_fifo_hód[i]+1+
MAXLOCKEVENT
)%MAXLOCKEVENT;

2084 if(
lock_fifo_num
[
i
] == 0)

2090 #ifde‡
TSHR


2092 
i
 = 0; i < 
numc⁄ãxts
+
mesh_size
*2; i++)

2094 if(
tshr_fifo_num
[
i
] <0 || 
tshr_fifo_p‹tu£
[i] >
DIR_FIFO_PORTS
)

2098 if(
tshr_fifo
[
i
][
tshr_fifo_hód
[i]]->
whí
 > 
sim_cy˛e
)

2100 if(
	`dú_›î©i⁄
(
tshr_fifo
[
i
][
tshr_fifo_hód
[i]], 0) == 0)

2102 
tshr_fifo_p‹tu£
[
i
]++;

2103 
tshr_fifo_hód
[
i
] = (tshr_fifo_hód[i]+1)%
TSHR_FIFO_SIZE
;

2104 
tshr_fifo_num
[
i
]--;

2105 if(
tshr_fifo_p‹tu£
[
i
] >
DIR_FIFO_PORTS
 || 
tshr_fifo_num
[i] <= 0)

2112 
i
 = 0; i < 
numc⁄ãxts
+
mesh_size
*2; i++)

2114 if(
dú_fifo_num
[
i
] <0 || 
dú_fifo_p‹tu£
[i] >
DIR_FIFO_PORTS
)

2118 if(
dú_fifo
[
i
][
dú_fifo_hód
[i]]->
whí
 > 
sim_cy˛e
)

2120 if(
	`dú_›î©i⁄
(
dú_fifo
[
i
][
dú_fifo_hód
[i]], 0) == 0)

2122 
dú_fifo_p‹tu£
[
i
]++;

2123 
dú_fifo_hód
[
i
] = (dú_fifo_hód[i]+1)%
DIR_FIFO_SIZE
;

2124 
dú_fifo_num
[
i
]--;

2125 if(
dú_fifo_p‹tu£
[
i
] >
DIR_FIFO_PORTS
 || 
dú_fifo_num
[i] <= 0)

2131 
i
 = 0; i < 
numc⁄ãxts
+
mesh_size
*2; i++)

2133 
ªs_poﬁ
 *
fu_poﬁ
;

2135 if(
l1_fifo_num
[
i
] <0 || 
l1_fifo_p‹tu£
[i] >
DIR_FIFO_PORTS
)

2139 if(
l1_fifo
[
i
][
l1_fifo_hód
[i]]->
whí
 > 
sim_cy˛e
)

2141 if(
	`dú_›î©i⁄
(
l1_fifo
[
i
][
l1_fifo_hód
[i]], 0) == 0)

2143 
l1_fifo_p‹tu£
[
i
]++;

2144 
l1_fifo_hód
[
i
] = (l1_fifo_hód[i]+1)%
DIR_FIFO_SIZE
;

2145 
l1_fifo_num
[
i
]--;

2146 if(
l1_fifo_p‹tu£
[
i
] >
DIR_FIFO_PORTS
 || 
l1_fifo_num
[i] <= 0)

2150 
	}
}

2155 
	$dú_evítq_ö£π
(
DIRECTORY_EVENT
 *
evít
)

2157 
DIRECTORY_EVENT
 *
ev
, *
¥ev
;

2159 
¥ev
 = 
NULL
, 
ev
 = 
dú_evít_queue
;Év && (”v->
whí
Ë<(
evít
->whí));Öªv =Év,Év =Év->
√xt
);

2160 i‡(
¥ev
)

2162 
evít
->
√xt
 = 
ev
;

2163 
¥ev
->
√xt
 = 
evít
;

2167 
evít
->
√xt
 = 
dú_evít_queue
;

2168 
dú_evít_queue
 = 
evít
;

2170 
	}
}

2172 #ifde‡
CONF_RES_RESEND


2174 
	$queue_ö£π
(
DIRECTORY_EVENT
 *
evít
, 
QUEUE_EVENT
 *
queue
)

2176 
i
 = 0;

2177 if(
queue
->
‰ì_E¡rõs
 == 0)

2178 
	`∑nic
("There isÇo freeÉntryÅo insert in sending message queue");

2180 
i
=0; i<
QUEUE_SIZE
; i++)

2182 if(!
queue
->
Queue_íåy
[
i
].
isvÆid
)

2184 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 1;

2185 
queue
->
Queue_íåy
[
i
].
evít
 =Évent;

2186 
queue
->
‰ì_E¡rõs
 --;

2191 
	}
}

2193 
	$‰ì_queue
(
DIRECTORY_EVENT
 *
evít
, 
QUEUE_EVENT
 *
queue
)

2195 
i
 = 0;

2196 if(!
queue
) ;

2197 
i
=0; i<
QUEUE_SIZE
; i++)

2199 if(
queue
->
Queue_íåy
[
i
].
isvÆid
 && (queue->Queue_íåy[i].
evít
->
addr
 =evít->addrË&& (queue->Queue_íåy[i].evít->
°¨ãd
 ==Évent->started)

2200 && (
queue
->
Queue_íåy
[
i
].
evít
->
missNo
 ==Évent->missNo))

2202 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 0;

2203 
queue
->
‰ì_E¡rõs
 ++;

2208 if(
queue
->
‰ì_E¡rõs
 > 
QUEUE_SIZE
)

2209 
	`∑nic
("QUEUE SIZE EXCEEDS\n");

2211 
	}
}

2213 
	$queue_check
(
DIRECTORY_EVENT
 *
evít
, 
QUEUE_EVENT
 *
queue
)

2215 
i
 = 0;

2216 if(!
queue
)  0;

2217 
i
=0; i<
QUEUE_SIZE
; i++)

2219 if(
queue
->
Queue_íåy
[
i
].
isvÆid
 && (queue->Queue_íåy[i].
evít
->
addr
 =evít->addrË&& (queue->Queue_íåy[i].evít->
°¨ãd
 ==Évent->started)

2220 && (
queue
->
Queue_íåy
[
i
].
evít
->
missNo
 ==Évent->missNo))

2224 
	}
}

2227 
	$evítq_upd©e
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
ªady
)

2229 
RS_lök
 *
ev
, *
¥ev
, *
√w_ev
=
NULL
;

2231 if(
rs
 =
NULL
 || 
evít_queue
 == NULL)

2236 
¥ev
=
NULL
, 
ev
=
evít_queue
; (ev->
√xt
!=NULL);Örev=ev,Év=ev->next)

2238 if((
ev
->
rs
 =rsË&& (ev->
èg
 ==Ñs->tag))

2244 i‡((
ev
->
rs
 =rsË&& (ev->
èg
 ==Ñs->tag))

2246 i‡(
¥ev
)

2248 
¥ev
->
√xt
 = 
ev
->next;

2252 
evít_queue
 = 
ev
->
√xt
;

2254 
√w_ev
 = 
ev
;

2255 
√w_ev
->
x
.
whí
 = 
ªady
;

2257 
¥ev
=
NULL
, 
ev
=
evít_queue
;Év &&Év->
x
.
whí
 < 
ªady
;ÖªvÛv,ÉvÛv->
√xt
);

2258 i‡(
¥ev
)

2260 
√w_ev
->
√xt
 = 
¥ev
->next;

2261 
¥ev
->
√xt
 = 
√w_ev
;

2265 
√w_ev
->
√xt
 = 
evít_queue
;

2266 
evít_queue
 = 
√w_ev
;

2269 
	}
}

2270 #ifde‡
TSHRn


2271 
	$öôTSHR
(
tshr_t
 *
tshr
, 
Êag
)

2273 
i
;

2274 
tshr
->
tshrSIZE
 = 
TSHR_SIZE
;

2275 
tshr
->
‰ìE¡rõs
 = 
TSHR_SIZE
;

2276 
i
 = 0; i < 
TSHR_SIZE
; i++)

2278 
tshr
->
tshrE¡ry
[
i
].
id
 = i;

2279 
tshr
->
tshrE¡ry
[
i
].
isVÆid
 = 0;

2280 
tshr
->
tshrE¡ry
[
i
].
evít
 = 
NULL
;

2281 
tshr
->
tshrE¡ry
[
i
].
addr
 = 0;

2283 
	}
}

2284 
	$TSHRIn£π
(
tshr_t
 *
tshr
, 
DIRECTORY_EVENT
 *
evít
, 
md_addr_t
 
addr
)

2286 
i
;

2288 if(
tshr
->
‰ìE¡rõs
 == 0)

2289 
	`∑nic
("There isÇo freeÉntryÅo insert in TSHR");

2291 
i
 = 0; i < 
TSHR_SIZE
; i++)

2293 if(!
tshr
->
mshrE¡ry
[
i
].
isVÆid
)

2295 
tshr
->
tshrE¡ry
[
i
].
isVÆid
 = 1;

2296 
tshr
->
tshrE¡ry
[
i
].
evít
 =Évent;

2297 
tshr
->
tshrE¡ry
[
i
].
≥ndög_addr
 = (
addr
 & ~
ˇche_dl2
->
bsize
);

2298 
tshr
->
‰ìE¡rõs
--;

2302 
	`∑nic
("There isÇo freeÉntryÅo insert in MSHR");

2303 
	}
}

2304 
	$TSHRWakeup
(
tshr_t
 *
tshr
, 
wakeup_addr
)

2306 
i
;

2308 
i
 = 0; i < 
TSHR_SIZE
; i++)

2310 if(
tshr
->
mshrE¡ry
[
i
].
isVÆid
 && (tshr->
tshrE¡ry
[i].
≥ndög_addr
 =(
wakeup_addr
 & ~
ˇche_dl2
->
bsize
)))

2312 if(
	`dú_›î©i⁄
(
tshr
->
tshrE¡ry
[
i
].
evít
))

2314 
tshr
->
tshrE¡ry
[
i
].
isVÆid
 = 1;

2315 
tshr
->
tshrE¡ry
[
i
].
evít
 = 
NULL
;

2316 
tshr
->
tshrE¡ry
[
i
].
≥ndög_addr
 = 0;

2317 
tshr
->
‰ìE¡rõs
++;

2320 
	`∑nic
("canÇot wakeup becuaseÅhe blk is still inÅransient state");

2324 
	`∑nic
("There isÇo matchÉntry in TSHR");

2326 
	}
}

2329 #ifde‡
DCACHE_MSHR


2331 
	$öôMSHR
(
mshr_t
 *
mshr
, 
Êag
)

2333 
i
, 
mshr_size
;

2334 if(!
mshr
) ;

2335 if(
Êag
 == 1)

2336 
mshr_size
 = 
L2_MSHR_SIZE
;

2338 
mshr_size
 = 
MSHR_SIZE
;

2340 
mshr
->
mshrSIZE
 = 
mshr_size
;

2341 
mshr
->
‰ìE¡rõs
 = 
mshr_size
;

2342 #ifde‡ 
EDA


2343 
mshr
->
‰ìOCE¡rõs
 = 
MSHR_OC_SIZE
;

2345 
i
 = 0; i < 
mshr_size
; i++)

2347 
mshr
->
mshrE¡ry
[
i
].
id
 = i;

2348 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2349 
mshr
->
mshrE¡ry
[
i
].
addr
 = 0;

2350 
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 = 0;

2351 
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 0;

2352 
mshr
->
mshrE¡ry
[
i
].
blocknum
 = 0;

2353 #ifdef 
EDA


2354 
mshr
->
mshrE¡ry
[
i
].
isOC
 = 0;

2357 
	}
}

2359 
	$isMSHRFuŒ
(
mshr_t
 *
mshr
, 
isOC
, 
id
)

2361 if(!
mshr
)  0;

2362 if(
mshr
->
‰ìE¡rõs
 =0 && !
œ°_L1_mshr_fuŒ
[
id
])

2364 
L1_mshr_fuŒ
 ++;

2365 
œ°_L1_mshr_fuŒ
[
id
] = 
sim_cy˛e
;

2369 if(
œ°_L1_mshr_fuŒ
[
id
])

2371 
SèŒ_L1_mshr
 +
sim_cy˛e
 - 
œ°_L1_mshr_fuŒ
[
id
];

2372 
œ°_L1_mshr_fuŒ
[
id
] = 0;

2375  (
mshr
->
‰ìE¡rõs
 == 0);

2376 
	}
}

2378 
	$‰ìMSHR
(
mshr_t
 *
mshr
)

2380 
i
;

2381 if(!
mshr
) ;

2382 
i
 = 0; i < 
MSHR_SIZE
; i++)

2384 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
 && mshr->mshrE¡ry[i].
ídCy˛e
 <
sim_cy˛e
)

2386 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2387 
mshr
->
‰ìE¡rõs
++;

2388 
RS_li°
 *
¥ev
, *
cur
;

2389 
cur
 = 
rs_ˇche_li°
[
mshr
->
thªadid
][
i
];

2390 
cur
)

2392 if(
cur
->
rs
 && ((cur->rs->
addr
)>>
ˇche_dl1
[
mshr
->
thªadid
]->
£t_shi·
Ë!(mshr->
mshrE¡ry
[
i
].addr>>cache_dl1[mshr->threadid]->set_shift))

2393 
	`∑nic
("L1 MSHR: illegaláddress in MSHRÜist");

2395 
¥ev
 = 
cur
->
√xt
;

2396 
	`RS_block_√xt
(
cur
);

2397 
	`‰ì
(
cur
);

2398 
cur
 = 
¥ev
;

2400 
rs_ˇche_li°
[
mshr
->
thªadid
][
i
] = 
NULL
;

2403 i‡(
mshr
->
‰ìE¡rõs
 > 
MSHR_SIZE
)

2404 
	`∑nic
("MSHR SIZEÉxceeds\n");

2405 
	}
}

2407 
	$‰ìL2MSHR
(
mshr_t
 *
mshr
)

2409 
i
;

2410 if(!
mshr
) ;

2411 
i
 = 0; i < 
L2_MSHR_SIZE
; i++)

2413 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
 && mshr->mshrE¡ry[i].
ídCy˛e
 <
sim_cy˛e
)

2415 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 0;

2416 
mshr
->
mshrE¡ry
[
i
].
blocknum
 = 0;

2417 
mshr
->
‰ìE¡rõs
++;

2420 i‡(
mshr
->
‰ìE¡rõs
 > 
L2_MSHR_SIZE
)

2421 
	`∑nic
("MSHR SIZEÉxceeds\n");

2422 
	}
}

2424 
	$MSHR_block_check
(
mshr_t
 *
mshr
, 
md_addr_t
 
addr
, 
off£t
)

2426 
i
, 
m©ch
 = 0, 
mshr_size
;

2427 
mshr_size
 = 
mshr
->
mshrSIZE
;

2429 
i
=0; i<
mshr_size
; i++)

2431 if(
mshr
->
mshrE¡ry
[
i
].
isVÆid
)

2433 if(((
mshr
->
mshrE¡ry
[
i
].
addr
>>
off£t
) == (addr>>offset)))

2435 if(
m©ch
 !0Ë
	`∑nic
("MSHR:á missáddress belongsÅo moreÅhanÅwo MSHR Entries");

2436 
m©ch
 = (
i
+1);

2440  
m©ch
;

2441 
	}
}

2444 
	$MSHRLookup
(
mshr_t
 *
mshr
, 
md_addr_t
 
addr
, 
œt
, 
isOC
, 
RUU_°©i⁄
 *
rs
)

2446 
i
, 
mshr_size
;

2447 if(!
mshr
) ;

2449 if(
œt
 < 
ˇche_dl1_œt
)

2452 
mshr_size
 = 
mshr
->
mshrSIZE
;

2454 if(
rs
 &&Ñs->
thªadid
 !
mshr
->threadid)

2455 
	`∑nic
("L1 MSHR wrongÅhreadid");

2457 if(
mshr
->
‰ìE¡rõs
 == 0)

2458 
	`∑nic
("There isÇo freeÉntryÅo insert in MSHR");

2460 
i
 = 0; i < 
mshr_size
; i++)

2462 if(!
mshr
->
mshrE¡ry
[
i
].
isVÆid
)

2464 
mshr
->
mshrE¡ry
[
i
].
isVÆid
 = 1;

2465 
mshr
->
mshrE¡ry
[
i
].
addr
 =áddr;

2466 
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 = 
sim_cy˛e
;

2467 
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
sim_cy˛e
 + 
œt
;

2468 
mshr
->
mshrE¡ry
[
i
].
evít
 = 
evít_¸óãd
;

2469 
mshr
->
mshrE¡ry
[
i
].
rs
 =Ñs;

2470 
mshr
->
‰ìE¡rõs
--;

2475 
	`∑nic
("There isÇo freeÉntryÅo insert in MSHR");

2476 
	}
}

2477 
	$mshª¡ry_upd©e
(
DIRECTORY_EVENT
 *
evít
, 
tick_t
 
ªady
,Åick_à
°¨tcy˛e
)

2479 
i
, 
mshr_size
;

2480 
thªadid
 = 
evít
->
ãmpID
;

2481 if(!
ˇche_dl1
[
thªadid
]->
mshr
)

2483 
mshr_size
 = 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrSIZE
;

2484 
i
=0;i<
mshr_size
;i++)

2486 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
isVÆid


2487 && ((
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
addr
 >> cache_dl1[thªadid]->
£t_shi·
Ë=(
evít
->addr >> cache_dl1[threadid]->set_shift)))

2489 #i‚de‡
EUP_NETWORK


2490 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 !
°¨tcy˛e
)

2491 
	`∑nic
("L1 MSHR: illegal match in mshr");

2493 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
ªady
;

2497 
	}
}

2498 #ifde‡
READ_PERMIT


2499 
cou¡î_t
 
	$mshr_check_rs
(
thªadid
, 
md_addr_t
 
addr
, 
RUU_°©i⁄
 **
rs
)

2501 
i
;

2502 if(!
ˇche_dl1
[
thªadid
]->
mshr
)

2504 
i
=0;i<
MSHR_SIZE
;i++)

2506 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
isVÆid


2507 && ((
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
addr
 >> cache_dl1[thªadid]->
£t_shi·
) == (addr >> cache_dl1[threadid]->set_shift)))

2509 *
rs
 = 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].rs;

2510  
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
;

2513 
	}
}

2517 
	$loˇl_ac˚ss_check
(
§c1
, 
§c2
, 
des1
, 
des2
)

2519 
Êag
;

2520 if((
§c1
*
mesh_size
+
§c2
)==(
des1
*mesh_size+
des2
))

2521 
Êag
 = 1;

2523 
Êag
 = 0;

2524  
Êag
;

2525 
	}
}

2526 
	$födCacheSètus
(
ˇche_t
 *
˝
, 
md_addr_t
 
£t
, md_addr_à
èg
, 
hödex
, 
ˇche_blk_t
 **
blk
)

2528 
ˇche_blk_t
 *
födblk
;

2530 
födblk
=
˝
->
£ts
[
£t
].
way_hód
; födblk; födblk=födblk->
way_√xt
)

2532 if((
födblk
->
ègid
.
èg
 =ègË&& (födblk->
°©us
 & 
CACHE_BLK_VALID
)

2533 #i‡
PROCESS_MODEL


2534 && (
isSh¨edAddªss
 == 1)

2538 *
blk
 = 
födblk
;

2543 
	}
}

2544 
	$Is_Sh¨ed
(*
sh¨î
, 
thªadid
)

2546 
cou¡
;

2547 
cou¡î
 = 0;

2548 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

2550 if((((
sh¨î
[
cou¡
/64]) & (()1 << (count%64))) == (()1 << (count%64))))

2552 
cou¡î
 ++;

2555 if(
cou¡î
)

2556  
cou¡î
;

2560 
	}
}

2561 
	$Is_Ex˛usiveOrDúty
(*
sh¨î
, 
thªadid
, *
Ex˛usiveID
)

2563 
cou¡
, 
Ex˛usive_id
;

2564 
cou¡î
 = 0;

2565 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

2567 if((((
sh¨î
[
cou¡
/64]) & (()1 << (count%64))) == (()1 << (count%64))))

2569 
cou¡î
 ++;

2570 
Ex˛usive_id
 = 
cou¡
;

2573 if(
cou¡î
 == 1)

2575 (*
Ex˛usiveID
Ë
Ex˛usive_id
;

2580 
	}
}

2582 
	$IsSh¨ed
(*
sh¨î
, 
thªadid
)

2584 
cou¡
;

2585 
cou¡î
 = 0;

2586 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

2588 if((((
sh¨î
[
cou¡
/64]Ë& (()1 << (cou¡%64))Ë=(()1 << (cou¡%64))Ë&& (cou¡ !
thªadid
))

2590 
cou¡î
 ++;

2593 if(
cou¡î
)

2598 
	}
}

2599 
	$IsEx˛usiveOrDúty
(*
sh¨î
, 
thªadid
, *
Ex˛usiveID
)

2601 
cou¡
, 
Ex˛usive_id
;

2602 
cou¡î
 = 0;

2603 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

2605 if((((
sh¨î
[
cou¡
/64]Ë& (()1 << (cou¡%64))Ë=(()1 << (cou¡%64))Ë&& (cou¡ !
thªadid
))

2607 
cou¡î
 ++;

2608 
Ex˛usive_id
 = 
cou¡
;

2611 if(
cou¡î
 == 1)

2613 (*
Ex˛usiveID
Ë
Ex˛usive_id
;

2618 
	}
}

2625 
	$evít_li°_ö£π
(
DIRECTORY_EVENT
 *
evít
, 
íåy
)

2627 if(
íåy
 < 1 ||É¡ry > 
L2_MSHR_SIZE
Ë
	`∑nic
("L2 MSHR insertionÉrror");

2628 
íåy
 =Éntry - 1;

2629 
DIRECTORY_EVENT
 *
cur
, *
¥ev
;

2631 if(
evít_li°
[
íåy
] && ((
evít
->
addr
 >> 
ˇche_dl2
->
£t_shi·
) != (event_list[entry]->addr >> cache_dl2->set_shift)))

2632 
	`∑nic
("L2 MSHR insertionÉrror");

2635 if(
sim_cy˛e
 =
ˇche_dl2
->
mshr
->
mshrE¡ry
[
íåy
].
ídCy˛e
)

2636 
	`dú_evítq_ö£π
(
evít
);

2639 
evít
->
√xt
 = 
evít_li°
[
íåy
];

2640 
evít_li°
[
íåy
] = 
evít
;

2642 
	}
}

2644 
	$upd©e_L2_mshª¡ry
(
md_addr_t
 
addr
, 
tick_t
 
ªady
,Åick_à
°¨tcy˛e
)

2646 
i
;

2647 if(!
ˇche_dl2
->
mshr
)

2648 
	`∑nic
("L2 CACHE didÇot have MSHR!");

2649 
DIRECTORY_EVENT
 *
cur
, *
¥ev
;

2650 
i
=0;i<
L2_MSHR_SIZE
;i++)

2652 if(
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
isVÆid


2653 && (
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
addr
 ==áddr))

2655 if(
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
°¨tCy˛e
 !
°¨tcy˛e
)

2656 
	`∑nic
("L2 MSHR: illegal match in MSHR while update");

2657 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
blocknum
 ++;

2658 if(
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
blocknum
 < 2)

2660 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
ídCy˛e
 = 
ªady
;

2661 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].
blocknum
 = 0;

2662 
cur
 = 
evít_li°
[
i
]; cur; cur=
¥ev
)

2664 if(((
cur
->
addr
)>>
ˇche_dl2
->
£t_shi·
Ë!((ˇche_dl2->
mshr
->
mshrE¡ry
[
i
].addr>>cache_dl2->set_shift)))

2666 
	`¥ötf
("cu∏add∏%Œd, msh∏add∏%Œd\n", 
cur
->
addr
, 
ˇche_dl2
->
mshr
->
mshrE¡ry
[
i
].addr);

2667 
	`∑nic
("Eventlist should haveÅhe sameáddress with itsáppending mshrÉntry!");

2669 
¥ev
 = 
cur
->
√xt
;

2670 
cur
->
√xt
 = 
NULL
;

2671 
cur
->
whí
 = 
sim_cy˛e
;

2672 
	`dú_evítq_ö£π
(
cur
);

2674 
evít_li°
[
i
] = 
NULL
;

2678 
	}
}

2681 
	$IsNeighb‹
(
sh¨î
, 
thªadid
, 
ty≥
, 
md_addr_t
 
addr
)

2683 
cou¡
, 
˛o£
, 
Ár
, 
d©a_˛o£
, 
d©a_Ár
, 
d©a_c‹√r
, 
tŸÆ_sh¨î
, 
tŸÆ_d©a_sh¨î
, 
c‹√r
, 
d©a_Êag
 = 0;

2684 
ˇche_t
 *
˝1
;

2685 
ˇche_blk_t
 *
blk1
;

2686 
md_addr_t
 
èg
, 
£t
;

2687 
˛o£
 = 0;

2688 
c‹√r
 = 0;

2689 
Ár
 = 0;

2690 
tŸÆ_sh¨î
 = 0;

2691 
tŸÆ_d©a_sh¨î
 = 0;

2692 
tŸÆ_p_c_evíts
 ++;

2694 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

2696 if((((
sh¨î
Ë& (()1 << 
cou¡
)Ë=(()1 << cou¡)Ë&& (cou¡ !
thªadid
))

2698 
˝1
 = 
ˇche_dl1
[
cou¡
];

2699 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

2700 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

2701 
blk1
 = 
˝1
->
£ts
[
£t
].
way_hód
; blk1; blk1 =blk1->
way_√xt
)

2703 i‡((
blk1
->
ègid
.
èg
 =ègË&& (blk1->
°©us
 & 
CACHE_BLK_VALID
))

2705 if(
blk1
->
°©e
 =
MESI_MODIFIED
)

2707 
d©a_Êag
 = 1;

2708 
tŸÆ_d©a_c⁄sumîs
 ++;

2709 
tŸÆ_d©a_sh¨î
 ++;

2714 
tŸÆ_c⁄sumîs
 ++;

2715 
tŸÆ_sh¨î
 ++;

2717 if(
	`abs
(
thªadid
 - 
cou¡
) == 3 ||ábs(threadid - count) == 5)

2719 
tŸÆ_∑ckës_©_c‹√rs
 ++;

2720 
c‹√r
 ++;

2721 if(
d©a_Êag
 == 1)

2722 
tŸÆ_d©a_©_c‹√r
 ++;

2725 if(
	`abs
(
thªadid
 - 
cou¡
) == 1 ||ábs(threadid - count) == 4)

2727 
˛o£
 ++;

2728 
tŸÆ_∑ckës_ö_√ighb‹
 ++;

2729 if(
d©a_Êag
 == 1)

2730 
tŸÆ_d©a_˛o£
 ++;

2734 
Ár
 ++;

2735 if(
d©a_Êag
 == 1)

2736 
tŸÆ_d©a_Ár
 ++;

2742 if((
c‹√r
 + 
˛o£
Ë=
tŸÆ_sh¨î
)

2743 
tŸÆ_Æl_Æmo°˛o£
 ++;

2745 if(
˛o£
 =
tŸÆ_sh¨î
)

2746 
tŸÆ_Æl_˛o£
 ++;

2749 
tŸÆ_nŸ_Æl_˛o£
 ++;

2750 
avîage_öside_≥r˚¡
 +(()
˛o£
/()
tŸÆ_sh¨î
);

2751 
avîage_outside_≥r˚¡
 +(()
Ár
/()
tŸÆ_sh¨î
);

2752 
avîage_outside_abs_≥r˚¡
 +(()(
Ár
-
c‹√r
)/()
tŸÆ_sh¨î
);

2753 
avîage_c‹√r_≥r˚¡
 +(()(
c‹√r
)/()
tŸÆ_sh¨î
);

2756 
tŸÆ_sh¨î
)

2759 1: 
sh¨î_num
[1] ++; ;

2760 2: 
sh¨î_num
[2] ++; ;

2761 3: 
sh¨î_num
[3] ++; ;

2762 4: 
sh¨î_num
[4] ++; ;

2763 5: 
sh¨î_num
[5] ++; ;

2764 6: 
sh¨î_num
[6] ++; ;

2765 7: 
sh¨î_num
[7] ++; ;

2766 8: 
sh¨î_num
[8] ++; ;

2767 9: 
sh¨î_num
[9] ++; ;

2768 10: 
sh¨î_num
[10] ++; ;

2769 11: 
sh¨î_num
[11] ++; ;

2770 12: 
sh¨î_num
[12] ++; ;

2771 13: 
sh¨î_num
[13] ++; ;

2772 14: 
sh¨î_num
[14] ++; ;

2774 : 
sh¨î_num
[15] ++; ;

2777 
	}
}

2778 
	$IsNeighb‹_sh¨î
(
sh¨î
, 
thªadid
)

2780 
cou¡
;

2782 
cou¡
 = 0; cou¡ < 
numc⁄ãxts
; count++)

2784 if((((
sh¨î
Ë& (()1 << 
cou¡
)Ë=(()1 << cou¡)Ë&& (cou¡ !
thªadid
))

2786 if(
	`abs
(
thªadid
 - 
cou¡
) == 3 ||ábs(threadid - count) == 5)

2787 
tŸÆ_c‹√r_∑ckës
 ++;

2789 if(
	`abs
(
thªadid
 - 
cou¡
) == 1 ||ábs(threadid - count) == 4)

2790 
tŸÆ_√ighb‹_∑ckës
 ++;

2792 
tŸÆ_Ár_∑ckës
 ++;

2795 
	}
}

2797 
	$blockoff£t
(
md_addr_t
 
addr
)

2799 
bofs
;

2800 
bofs
 = 
addr
 & 
ˇche_dl2
->
blk_mask
;

2801 
bofs
 = bof†>> 
ˇche_dl1
[0]->
£t_shi·
;

2802  
bofs
;

2803 
	}
}

2805 
DIRECTORY_EVENT
 *
	$Æloˇã_√w_evít
(
DIRECTORY_EVENT
 *
evít
)

2807 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

2808 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

2810 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

2811 
√w_evít
->
ªq_time
 = 0;

2812 
√w_evít
->
c⁄f_bô
 = -1;

2813 
√w_evít
->
≥ndög_Êag
 = 0;

2814 
√w_evít
->
isPª„tch
 = 0;

2815 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

2816 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

2817 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

2818 
√w_evít
->
blk_dú
 = 
NULL
;

2819 
√w_evít
->
˝
 = 
evít
->cp;

2820 
√w_evít
->
addr
 = 
evít
->addr;

2821 
√w_evít
->
vp
 = 
NULL
;

2822 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

2823 
√w_evít
->
ud©a
 = 
NULL
;

2824 
√w_evít
->
rs
 = 
evít
->rs;

2825 
√w_evít
->
•ec_mode
 = 0;

2826 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

2827 
√w_evít
->
d©a_ª∂y
 = 1;

2828 
√w_evít
->
mshr_time
 = 
evít
->mshr_time;

2829 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

2830 
√w_evít
->
‹igöÆChûdCou¡
 = 0;

2831 #ifde‡
SMD_USE_WRITE_BUF


2832 
√w_evít
->
l1_wb_íåy
 = 
NULL
;

2835 
√w_evít
->
›
 = 
evít
->op;

2837 
√w_evít
->
§c1
 = 
evít
->
des1
;

2838 
√w_evít
->
§c2
 = 
evít
->
des2
;

2839 if((
evít
->
des1
-
MEM_LOC_SHIFT
)/(
mesh_size
/2))

2840 
√w_evít
->
des1
 = 
mesh_size
+1;

2842 
√w_evít
->
des1
 = 0;

2845 
evít
->
des2
/(
mesh_size
/(
mem_p‹t_num
/2)))

2848 
√w_evít
->
des2
 = 
mesh_size
/(
mem_p‹t_num
/2) - 1;

2851 
√w_evít
->
des2
 = 
mesh_size
/(
mem_p‹t_num
/2);

2854 
√w_evít
->
des2
 = 3*(
mesh_size
/(
mem_p‹t_num
/2)) - 1;

2857 
√w_evít
->
des2
 = 3*(
mesh_size
/(
mem_p‹t_num
/2));

2860 
√w_evít
->
des2
 = 5*(
mesh_size
/(
mem_p‹t_num
/2)) - 1;

2863 
√w_evít
->
des2
 = 5*(
mesh_size
/(
mem_p‹t_num
/2));

2866 
√w_evít
->
des2
 = 7*(
mesh_size
/(
mem_p‹t_num
/2)) - 1;

2869 
√w_evít
->
des2
 = 7*(
mesh_size
/(
mem_p‹t_num
/2));

2872 
	`∑nic
("canÇot have other case\n");

2875 
√w_evít
->
∑ª¡
 = 
evít
;

2876 
√w_evít
->
ãmpID
 = 
evít
->tempID;

2877 
√w_evít
->
ª£nd
 = 0;

2878  
√w_evít
;

2879 
	}
}

2880 #ifde‡
POPNET


2881 
	sOrdîBuf„rE¡ry


2883 
	mvÆid
;

2884 
md_addr_t
 
	maddr
;

2885 
	mdes
;

2886 
	mvc
;

2887 
cou¡î_t
 
	mmsgno
;

2889 
OrdîBuf„rE¡ry
 
	gOrdîBuf„r
[
MAXSIZE
][MAXSIZE];

2890 
	gOrdîBuf„rNum
[
MAXSIZE
];

2892 
	$OrdîBufInô
()

2894 
i
=0, 
j
=0;

2895 
i
=0;i<
MAXSIZE
;i++)

2897 
OrdîBuf„rNum
[
i
] = 0;

2898 
j
=0;j<
MAXSIZE
;j++)

2900 
OrdîBuf„r
[
i
][
j
].
addr
 = 0;

2901 
OrdîBuf„r
[
i
][
j
].
vÆid
 = 0;

2902 
OrdîBuf„r
[
i
][
j
].
des
 = 0;

2903 
OrdîBuf„r
[
i
][
j
].
vc
 = -1;

2904 
OrdîBuf„r
[
i
][
j
].
msgno
 = 0;

2907 
	}
}

2908 
	$OrdîBufIn£π
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
vc
, 
cou¡î_t
 
msgno
)

2910 
i
=0, 
§c
, 
des
;

2911 
§c
 = 
s1
*
mesh_size
+
s2
;

2912 
des
 = 
d1
*
mesh_size
+
d2
;

2914 if(
OrdîBuf„rNum
[
§c
] >
MAXSIZE
)

2915 
	`∑nic
("Out going buffer is full forÖopnet multiple vcs");

2917 
i
=0;i<
MAXSIZE
;i++)

2919 if(!
OrdîBuf„r
[
§c
][
i
].
vÆid
)

2921 
OrdîBuf„r
[
§c
][
i
].
vÆid
 = 1;

2922 
OrdîBuf„r
[
§c
][
i
].
addr
 =áddr;

2923 
OrdîBuf„r
[
§c
][
i
].
des
 = des;

2924 
OrdîBuf„r
[
§c
][
i
].
vc
 = vc;

2925 
OrdîBuf„r
[
§c
][
i
].
msgno
 = msgno;

2926 
OrdîBuf„rNum
[
§c
] ++;

2930 
	}
}

2931 
	$OrdîBufRemove
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
cou¡î_t
 
msgno
)

2933 
i
=0, 
§c
, 
des
;

2934 
§c
 = 
s1
*
mesh_size
+
s2
;

2935 
des
 = 
d1
*
mesh_size
+
d2
;

2937 
i
=0;i<
MAXSIZE
;i++)

2939 if(
OrdîBuf„r
[
§c
][
i
].
vÆid
 && OrdîBuf„r[§c][i].
addr
 =add∏&& OrdîBuf„r[§c][i].
des
 =de†&& OrdîBuf„r[§c][i].
msgno
 == msgno)

2941 
OrdîBuf„r
[
§c
][
i
].
vÆid
 = 0;

2942 
OrdîBuf„r
[
§c
][
i
].
addr
 = 0;

2943 
OrdîBuf„r
[
§c
][
i
].
des
 = 0;

2944 
OrdîBuf„r
[
§c
][
i
].
vc
 = -1;

2945 
OrdîBuf„r
[
§c
][
i
].
msgno
 = 0;

2946 
OrdîBuf„rNum
[
§c
] --;

2950 
	`∑nic
("CanÇot findÅheÉntry in OrderBuffer");

2951 
	}
}

2953 
	$OrdîCheck
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
)

2955 
i
=0, 
§c
, 
des
;

2956 
§c
 = 
s1
*
mesh_size
+
s2
;

2957 
des
 = 
d1
*
mesh_size
+
d2
;

2958 #ifde‡
MULTI_VC


2959 
i
=0;i<
MAXSIZE
;i++)

2961 if(
OrdîBuf„r
[
§c
][
i
].
vÆid
 && OrdîBuf„r[§c][i].
addr
 =add∏&& OrdîBuf„r[§c][i].
des
 == des)

2962  
OrdîBuf„r
[
§c
][
i
].
vc
;

2966 
	}
}

2969 
	$time•a˚
(
cou¡î_t
 
time
, 
ty≥
)

2971 if(
time
 < 0)

2973 if(
time
 <5)

2974 
•™d
[0] ++;

2975 if(
time
 <10)

2976 
•™d
[1] ++;

2977 if(
time
 <20)

2978 
•™d
[2] ++;

2979 if(
time
 <30)

2980 
•™d
[3] ++;

2982 
•™d
[4] ++;

2983 if(
ty≥
 == 1)

2984 
downgøde_r
 ++;

2986 
downgøde_w
 ++;

2988 
	}
}

2989 
	$dú_›î©i⁄
 (
DIRECTORY_EVENT
 *
evít
, 
lock_ac˚ss
)

2991 
cou¡î_t
 
iˇche_ac˚ss
;

2992 
cou¡î_t
 
dˇche_ac˚ss
;

2994 
œt
;

2995 
md_addr_t
 
èg_dú
, 
£t_dú
;

2996 
md_addr_t
 
èg_¥e„tch
, 
£t_¥e„tch
, 
addr_¥e„tch
;

2997 
md_addr_t
 
èg
, 
£t
;

2998 
hödex_dú
;

2999 
ˇche_blk_t
 *
blk
;

3000 
ˇche_blk_t
 *
blk1
;

3001 
ˇche_blk_t
 *
ª∂
;

3003 
m©chnum
;

3004 
Thªadid
;

3005 
ãmpID
 = 
evít
->tempID;

3006 
cou¡
;

3007 
ˇche_t
 *
˝_dú
 = 
ˇche_dl2
, *
˝1
;

3008 
md_addr_t
 
addr
=
evít
->addr;

3009 
∑ckë_size
;

3010 
èg_dú
 = 
	`CACHE_TAG
(
˝_dú
, 
addr
);

3011 
£t_dú
 = 
	`CACHE_SET
(
˝_dú
, 
addr
);

3012 
hödex_dú
 = (Ë
	`CACHE_HASH
(
˝_dú
,
èg_dú
);

3013 
md_addr_t
 
bofs
;

3014 
block_off£t
 = 
	`blockoff£t
(
evít
->
addr
);

3015 
övCﬁÀ˘Sètus
 = 0;

3016 
vc
 = 0, 
a
 = 0;

3019 
›ti⁄s
 = -1;

3020 
evít
->
Êù_Êag
 = 0;

3022 if(!(
evít
->
›î©i⁄
 =
ACK_DIR_IL1
 ||Évít->›î©i⁄ =
ACK_DIR_READ_SHARED
 ||Évít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE


3023 #ifde‡
PREFETCH_OPTI


3024 || 
evít
->
›î©i⁄
 =
READ_META_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_META_REPLY_SHARED
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_SHARED
 ||Évít->›î©i⁄ =
WRITE_META_REPLY
 ||Évít->›î©i⁄ =
WRITE_DATA_REPLY


3029 
buf„r_fuŒ_Êag
 = 0;

3030 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !(mystricmp (network_type, "HYBRID")))

3031 
buf„r_fuŒ_Êag
 = 
	`›tiˇlBuf„rS∑˚
(
evít
->
des1
,Évít->
des2
,Évít->
›î©i⁄
);

3032 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

3034 if(!(
evít
->
›î©i⁄
 =
ACK_DIR_IL1
 ||Évít->›î©i⁄ =
ACK_DIR_READ_SHARED
 ||Évít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
 ||Évít->›î©i⁄ =
FINAL_INV_ACK
 ||Évít->›î©i⁄ =
MEM_READ_REQ
 ||Évít->›î©i⁄ =
MEM_READ_REPLY
 ||Évít->›î©i⁄ =
WAIT_MEM_READ_NBLK
 || (evít->
des1
 =evít->
§c1
 &&Évít->
des2
 =evít->
§c2
)

3035 #ifde‡
PREFETCH_OPTI


3036 || 
evít
->
›î©i⁄
 =
READ_META_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_META_REPLY_SHARED
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_SHARED
 ||Évít->›î©i⁄ =
WRITE_META_REPLY
 ||Évít->›î©i⁄ =
WRITE_DATA_REPLY


3040 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
des1
,Évít->
des2
,Évít->
§c1
,Évít->
§c2
, 
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3041 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
des1
,Évít->
des2
, 
›ti⁄s
);

3043 
buf„r_fuŒ_Êag
 = (
vc
 == -1);

3045 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

3047 
buf„r_fuŒ_Êag
 = 
	`CombNëw‹kBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1),Évít->
›î©i⁄
, &
vc
);

3049 if(
buf„r_fuŒ_Êag
)

3051 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3053 
I≈ut_queue_fuŒ
 ++;

3054 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

3060 if(
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3062 
SèŒ_öput_queue
 +
sim_cy˛e
 - 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
];

3063 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3068 
evít
->
›î©i⁄
)

3070 
IDEAL_CASE
 :

3071 
	`∑nic
("DIR: Event operation is ideal -ÇotÖossible");

3073 #ifde‡
REAL_LOCK


3074 
FAIL
:

3075 if(!
evít
->
•ec_mode
 &&Évít->
rs
)

3077 
evít
->
rs
->
wrôewaô
 = 2;

3078 
evít
->
rs
->
STL_C_Áû
 = 1;

3080 #ifde‡
SMD_USE_WRITE_BUF


3081 if(
evít
->
l1_wb_íåy
)

3082 
evít
->
l1_wb_íåy
->
STL_C_Áû
 = 1;

3085 
	`mshª¡ry_upd©e
(
evít
, 
sim_cy˛e
,Évít->
°¨ãd
);

3087 
	`‰ì_evít
(
evít
);

3092 
NACK
 :

3094 
«ck_cou¡î
 ++;

3095 
evít
->
§c1
 +evít->
des1
;

3096 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3097 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3098 
evít
->
§c2
 +evít->
des2
;

3099 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3100 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3101 
evít
->
›î©i⁄
 =Évít->
∑ª¡_›î©i⁄
;

3102 
evít
->
¥o˚ssögD⁄e
 = 0;

3103 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
 + 20;

3104 
	`scheduÀThroughNëw‹k
(
evít
,Évít->
°¨tCy˛e
, 
mëa_∑ckë_size
, 
vc
);

3105 if(
evít
->
¥e„tch_√xt
 == 2 ||Évent->prefetch_next == 4)

3106 
¥e„tch_«cks
 ++;

3107 if(
evít
->
isSyncAc˚ss
)

3108 
sync_«cks
 ++;

3109 if(
evít
->
›î©i⁄
 =
MISS_WRITE
)

3110 
wrôe_«cks
 ++;

3112 
n‹mÆ_«cks
 ++;

3114 
	`dú_evítq_ö£π
(
evít
);

3115 if(
cﬁÀ˘_°©s
)

3116 
˝_dú
->
dú_ac˚ss
 ++;

3119 
MEM_READ_REQ
 :

3120 
œt
 = 
˝_dú
->
	`blk_ac˚ss_‚
(
Ród
, 
	`CACHE_BADDR
(˝_dú,
addr
), cp_dú->
bsize
, 
NULL
, 
sim_cy˛e
, 
ãmpID
);

3121 
evít
->
whí
 = 
sim_cy˛e
 + 
œt
;

3122 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3123 
evít
->
›î©i⁄
 = 
MEM_READ_REPLY
;

3124 
tŸÆ_mem_œt
 +
œt
;

3125 
tŸÆ_mem_ac˚ss
 ++;

3126 
	`dú_evítq_ö£π
(
evít
);

3129 
MEM_READ_REPLY
 :

3131 
i
=0;

3132 
i
=0;i<(
ˇche_dl2
->
bsize
/
max_∑ckë_size
);i++)

3134 
DIRECTORY_EVENT
 *
√w_evít
;

3135 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

3136 
√w_evít
->
§c1
 = 
evít
->
des1
;

3137 
√w_evít
->
§c2
 = 
evít
->
des2
;

3138 
√w_evít
->
des1
 = 
evít
->
§c1
;

3139 
√w_evít
->
des2
 = 
evít
->
§c2
;

3140 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

3141 
√w_evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3142 
√w_evít
->
ªq_time
 = 
evít
->req_time;

3143 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3144 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3145 
evít
->
chûdCou¡
 ++;

3146 if(
i
==0)

3148 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

3149 
	`dú_evítq_ö£π
(
√w_evít
);

3153 
√w_evít
->
›î©i⁄
 = 
WAIT_MEM_READ_NBLK
;

3154 
√w_evít
->
whí
 = 
sim_cy˛e
 + ((
ˇche_dl1
[0]->
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()4/
mem_bus_•ìd
))*
i
;

3155 
	`dú_evítq_ö£π
(
√w_evít
);

3160 
WAIT_MEM_READ_NBLK
:

3161 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ_N
;

3162 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3163 
evít
->
¥o˚ssögD⁄e
 = 0;

3164 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

3165 
	`dú_evítq_ö£π
(
evít
);

3167 
MEM_WRITE_BACK
:

3168 
œt
 = 
˝_dú
->
	`blk_ac˚ss_‚
(
Wrôe
, 
	`CACHE_BADDR
(˝_dú,
evít
->
addr
), cp_dú->
bsize
, 
NULL
, 
sim_cy˛e
,Évít->
ãmpID
);

3169 
	`‰ì_evít
(
evít
);

3171 
L2_PREFETCH
 :

3172 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

3173 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

3175 
	`‰ì_evít
(
evít
);

3180 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

3181 if(!
m©chnum
 && !
	`md_ãxt_addr
(
evít
->
addr
, 
ãmpID
))

3183 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3185 
L2_mshr_fuŒ_¥e„tch
 ++;

3186 
	`‰ì_evít
(
evít
);

3189 
l2_¥e„tch_num
 ++;

3190 
evít
->
mshr_time
 = 
sim_cy˛e
;

3191 
DIRECTORY_EVENT
 *
√w_evít
;

3192 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

3193 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

3194 
√w_evít
->
cmd
 = 
Ród
;

3195 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3196 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3197 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3198 
	`dú_evítq_ö£π
(
√w_evít
);

3199 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3200 
evít_¸óãd
 = 
evít
;

3201 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

3206 
	`‰ì_evít
(
evít
);

3212 
MISS_IL1
 :

3213 
dˇche2_ac˚ss
++;

3214 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

3215 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

3216 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

3218 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

3219 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

3221 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

3222 
	`∑nic
("DIR: ThisÉvent couldÇot be inÅransition");

3224 if(
blk
->
dú_sh¨î
[
block_off£t
][0] !0 || blk->dú_sh¨î[block_off£t][1] !0 || blk->dú_sh¨î[block_off£t][2] !0 || blk->dú_sh¨î[block_off£t][3] !0 || (blk->
°©us
 & 
CACHE_BLK_DIRTY
))

3225 
	`∑nic
("DIR: IL1 block canÇot have sharersÜist or modified");

3227 if(
cﬁÀ˘_°©s
)

3229 
˝_dú
->
d©a_ac˚ss
 ++;

3230 
˝_dú
->
hôs
 ++;

3232 
evít
->
›î©i⁄
 = 
ACK_DIR_IL1
;

3233 
evít
->
§c1
 +evít->
des1
;

3234 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3235 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3236 
evít
->
§c2
 +evít->
des2
;

3237 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3238 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3239 
evít
->
¥o˚ssögD⁄e
 = 0;

3240 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3241 
evít
->
∑ª¡
 = 
NULL
;

3242 
evít
->
blk_dú
 = 
NULL
;

3243 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

3244 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

3245 
	`dú_evítq_ö£π
(
evít
);

3250 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

3251 
evít
->
L2miss_Êag
 = 1;

3252 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

3253 if(!
m©chnum
)

3255 #ifde‡
DIR_FIFO_FULL


3256 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3258 if(!
œ°_L2_mshr_fuŒ
)

3260 
L2_mshr_fuŒ
 ++;

3261 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

3263 #ifde‡
TSHR


3264 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

3266 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

3269 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

3271 
evít
->
§c1
 +evít->
des1
;

3272 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3273 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3274 
evít
->
§c2
 +evít->
des2
;

3275 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3276 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3277 
evít
->
›î©i⁄
 = 
NACK
;

3278 
evít
->
¥o˚ssögD⁄e
 = 0;

3279 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3280 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3281 
	`dú_evítq_ö£π
(
evít
);

3286 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

3287 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3288 
Êù_cou¡î
 ++;

3289 
evít
->
Êù_Êag
 = 1;

3290 
	`dú_evítq_ö£π
(
evít
);

3296 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3297 if(
œ°_L2_mshr_fuŒ
)

3299 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

3300 
œ°_L2_mshr_fuŒ
 = 0;

3304 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3306 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3307 
Êù_cou¡î
 ++;

3308 
evít
->
Êù_Êag
 = 1;

3309 
	`dú_evítq_ö£π
(
evít
);

3313 if(
cﬁÀ˘_°©s
)

3314 
ˇche_dl2
->
mis£s
++;

3315 
evít
->
mshr_time
 = 
sim_cy˛e
;

3316 
DIRECTORY_EVENT
 *
√w_evít
;

3317 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

3318 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

3319 
√w_evít
->
cmd
 = 
Ród
;

3320 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3321 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3322 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3323 
	`dú_evítq_ö£π
(
√w_evít
);

3324 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3325 
evít_¸óãd
 = 
evít
;

3326 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

3331 if(
cﬁÀ˘_°©s
)

3332 
ˇche_dl2
->
ö_mshr
 ++;

3334 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

3338 #ifde‡
PREFETCH_OPTI


3339 
L1_PREFETCH
 :

3340 
dˇche2_ac˚ss
++;

3341 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

3342 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

3343 if(
evít
->
ªqNëTime
 == 0)

3344 
evít
->
ªqNëTime
 = 
sim_cy˛e
;

3345 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

3347 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

3348 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

3350 
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
] = 1;

3351 
blk
->
dú_¥e„tch_num
[
block_off£t
] ++;

3355 
evít
->
§c1
 +evít->
des1
;

3356 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3357 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3358 
evít
->
§c2
 +evít->
des2
;

3359 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3360 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3361 
evít
->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

3362 
evít
->
¥o˚ssögD⁄e
 = 0;

3363 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3364 
evít
->
∑ª¡
 = 
NULL
;

3365 
evít
->
blk_dú
 = 
NULL
;

3366 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

3367 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

3368 
	`dú_evítq_ö£π
(
evít
);

3373 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

3374 
evít
->
L2miss_Êag
 = 1;

3375 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

3376 if(
evít
->
isSyncAc˚ss
)

3377 
Sync_L2_miss
 ++;

3378 if(!
m©chnum
)

3380 #ifde‡
DIR_FIFO_FULL


3381 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3383 if(!
œ°_L2_mshr_fuŒ
)

3385 
L2_mshr_fuŒ
 ++;

3386 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

3388 #ifde‡
TSHR


3389 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

3391 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

3394 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

3396 
evít
->
§c1
 +evít->
des1
;

3397 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3398 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3399 
evít
->
§c2
 +evít->
des2
;

3400 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3401 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3402 
evít
->
≥ndögInvAck
 = 0;

3403 
evít
->
›î©i⁄
 = 
NACK
;

3404 
evít
->
¥o˚ssögD⁄e
 = 0;

3405 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3406 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3407 
	`dú_evítq_ö£π
(
evít
);

3412 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

3413 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3414 
evít
->
Êù_Êag
 = 1;

3415 
Êù_cou¡î
 ++;

3416 
	`dú_evítq_ö£π
(
evít
);

3422 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3423 if(
œ°_L2_mshr_fuŒ
)

3425 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

3426 
œ°_L2_mshr_fuŒ
 = 0;

3430 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3432 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3433 
Êù_cou¡î
 ++;

3434 
evít
->
Êù_Êag
 = 1;

3435 
	`dú_evítq_ö£π
(
evít
);

3439 if(
cﬁÀ˘_°©s
)

3441 
ˇche_dl2
->
mis£s
 ++;

3442 
ˇche_dl2
->
dmis£s
 ++;

3443 
övﬁve_2_h›s_miss
 ++;

3445 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

3446 
evít
->
mshr_time
 = 
sim_cy˛e
;

3447 
DIRECTORY_EVENT
 *
√w_evít
;

3448 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

3449 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

3450 
√w_evít
->
cmd
 = 
Ród
;

3451 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3452 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3453 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3454 
	`dú_evítq_ö£π
(
√w_evít
);

3455 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3456 
evít_¸óãd
 = 
evít
;

3457 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

3462 
evít
->
isReqL2SecMiss
 = 1;

3463 if(
cﬁÀ˘_°©s
)

3465 
ˇche_dl2
->
ö_mshr
 ++;

3466 
ˇche_dl2
->
dö_mshr
 ++;

3468 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

3475 
READ_COHERENCE_UPDATE
 :

3477 
dˇche2_ac˚ss
++;

3478 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

3479 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

3480 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

3482 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

3483 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

3485 #ifde‡
DIR_FIFO_FULL


3486 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION


3487 #ifde‡
READ_PERMIT


3488 || (
blk
->
RódPídög
[
block_off£t
] != -1)

3492 
evít
->
isReqL2Tøns
 = 1;

3493 #ifde‡
TSHR


3494 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

3496 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

3499 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

3501 
evít
->
§c1
 +evít->
des1
;

3502 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3503 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3504 
evít
->
§c2
 +evít->
des2
;

3505 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3506 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3507 
evít
->
›î©i⁄
 = 
NACK
;

3508 
evít
->
¥o˚ssögD⁄e
 = 0;

3509 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3510 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3511 
	`dú_evítq_ö£π
(
evít
);

3512 if(
cﬁÀ˘_°©s
)

3513 
˝_dú
->
dú_ac˚ss
 ++;

3518 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

3519 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3520 
Êù_cou¡î
 ++;

3521 
evít
->
Êù_Êag
 = 1;

3522 
	`dú_evítq_ö£π
(
evít
);

3523 if(
cﬁÀ˘_°©s
)

3524 
˝_dú
->
dú_ac˚ss
 ++;

3529 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3531 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

3533 
evít
->
isReqL2Tøns
 = 1;

3534 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3535 
Êù_cou¡î
 ++;

3536 
evít
->
Êù_Êag
 = 1;

3537 
	`dú_evítq_ö£π
(
evít
);

3538 if(
cﬁÀ˘_°©s
)

3539 
˝_dú
->
dú_ac˚ss
 ++;

3543 if((!
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
)Ë&& (blk->
dú_dúty
[block_offset] != -1))

3545 #ifde‡
L1_STREAM_PREFETCHER


3546 if(
evít
->
¥e„tch_√xt
 == 4)

3548 
wrôe_back_óæy
 ++;

3549 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

3550 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3551 
Êù_cou¡î
 ++;

3552 
evít
->
Êù_Êag
 = 1;

3553 
	`dú_evítq_ö£π
(
evít
);

3558 
	`∑nic
("DIR: Block canÇot be dirty state when it isÇot shared!");

3561 if(
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
])

3563 
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
] = 0;

3564 
blk
->
dú_¥e„tch_num
[
block_off£t
] --;

3565 if(
blk
->
dú_¥e„tch_num
[
block_off£t
] < 0)

3566 
	`∑nic
("prefetchÇumber doesn't match!\n");

3569 if(
cﬁÀ˘_°©s
)

3571 
˝_dú
->
hôs
 ++;

3572 
˝_dú
->
dhôs
 ++;

3574 
ex˛usive_˛ón
 = 0;

3576 if(
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
Ë&& blk->
dú_blk_°©e
[block_off£t] !
MESI_SHARED
)

3578 
RódDowngøde_EM
 ++;

3579 
	`IsNeighb‹
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, 
MISS_READ
, 
evít
->
addr
);

3580 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

3581 
blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

3582 
evít
->
blk_dú
 = 
blk
;

3583 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

3584 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

3585 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

3586 
√w_evít
->
ªq_time
 = 0;

3587 
√w_evít
->
c⁄f_bô
 = -1;

3588 
√w_evít
->
≥ndög_Êag
 = 0;

3589 
√w_evít
->
›
 = 
evít
->op;

3590 
√w_evít
->
isPª„tch
 = 0;

3591 
√w_evít
->
›î©i⁄
 = 
INV_MSG_READ
;

3592 
√w_evít
->
§c1
 = 
evít
->
des1
;

3593 
√w_evít
->
§c2
 = 
evít
->
des2
;

3594 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

3595 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

3596 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

3597 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3598 
√w_evít
->
∑ª¡
 = 
evít
;

3599 
√w_evít
->
ãmpID
 = 
evít
->tempID;

3600 
√w_evít
->
ª£nd
 = 0;

3601 
√w_evít
->
blk_dú
 = 
blk
;

3602 
√w_evít
->
˝
 = 
evít
->cp;

3603 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

3604 
√w_evít
->
addr
 = 
evít
->addr;

3605 
√w_evít
->
vp
 = 
NULL
;

3606 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

3607 
√w_evít
->
ud©a
 = 
NULL
;

3608 
√w_evít
->
cmd
 = 
Wrôe
;

3609 
√w_evít
->
rs
 = 
evít
->rs;

3610 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

3611 
√w_evít
->
•ec_mode
 = 0;

3612 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

3613 #ifde‡
COHERENCE_MODIFIED


3614 #ifde‡
INV_ACK_CON


3615 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_EXCLUSIVE
)

3617 if((
√w_evít
->
§c1
*
mesh_size
+√w_evít->
§c2
 !√w_evít->
des1
*mesh_size+√w_evít->
des2
Ë&& ((!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI")Ë|| (!my°ricmp“ëw‹k_ty≥, "HYBRID"Ë&& ((
	`abs
(new_event->src1 -Çew_event->des1) +ábs(new_event->src2 -Çew_event->des2)) > 1))))

3620 
√w_evít
->
d©a_ª∂y
 = 0;

3621 
ex˛usive_˛ón
 = 1;

3622 
tŸÆ_ex˛usive_c⁄f
 ++;

3623 
DIRECTORY_EVENT
 *
√w_evít2
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

3624 if(
√w_evít2
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

3625 if(
cﬁÀ˘_°©s
)

3626 
˝_dú
->
dú_ac˚ss
 ++;

3627 
√w_evít2
->
öput_buf„r_fuŒ
 = 0;

3628 
√w_evít2
->
ªq_time
 = 0;

3629 
√w_evít2
->
c⁄f_bô
 = -1;

3630 
√w_evít2
->
≥ndög_Êag
 = 0;

3631 
√w_evít2
->
›
 = 
evít
->op;

3632 
√w_evít2
->
isPª„tch
 = 0;

3633 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

3634 
√w_evít2
->
°‹e_c⁄d
 = 
evít
->store_cond;

3635 
√w_evít2
->
§c1
 = 
√w_evít
->
des1
;

3636 
√w_evít2
->
§c2
 = 
√w_evít
->
des2
;

3637 
√w_evít2
->
des1
 = 
√w_evít
->
§c1
;

3638 
√w_evít2
->
des2
 = 
√w_evít
->
§c2
;

3639 
√w_evít2
->
¥o˚ssögD⁄e
 = 0;

3640 
√w_evít2
->
°¨tCy˛e
 = 
sim_cy˛e
;

3641 
√w_evít2
->
∑ª¡
 = 
evít
;

3642 
√w_evít2
->
ãmpID
 = 
evít
->tempID;

3643 
√w_evít2
->
ª£nd
 = 0;

3644 
√w_evít2
->
blk_dú
 = 
blk
;

3645 
√w_evít2
->
˝
 = 
evít
->cp;

3646 
√w_evít2
->
addr
 = 
evít
->addr;

3647 
√w_evít2
->
vp
 = 
NULL
;

3648 
√w_evít2
->
nbyãs
 = 
evít
->
˝
->
bsize
;

3649 
√w_evít2
->
ud©a
 = 
NULL
;

3650 
√w_evít2
->
cmd
 = 
Ród
;

3651 
√w_evít2
->
rs
 = 
evít
->rs;

3652 
√w_evít2
->
°¨ãd
 = 
sim_cy˛e
;

3653 
√w_evít2
->
•ec_mode
 = 0;

3654 
√w_evít2
->
L2miss_Êag
 = 
evít
->L2miss_flag;

3655 
√w_evít2
->
d©a_ª∂y
 = 0;

3656 
p›√tMsgNo
 ++;

3657 
√w_evít2
->
p›√tMsgNo
 =ÖopnetMsgNo;

3658 
√w_evít2
->
whí
 = 
WAIT_TIME
;

3659 
	`dú_evítq_ö£π
(
√w_evít2
);

3661 
√w_evít
->
d©a_ª∂y
 = 0;

3662 
ex˛usive_˛ón
 = 1;

3663 
tŸÆ_ex˛usive_c⁄f
 ++;

3667 
√w_evít
->
d©a_ª∂y
 = 1;

3672 
√w_evít
->
d©a_ª∂y
 = 1;

3673 
evít
->
chûdCou¡
++;

3674 
evít
->
dúty_Êag
 = 1;

3675 if(
evít
->
rs
)

3676 if(
evít
->
rs
->
›
 =
LDL_L
)

3677 
lﬂd_lök_ex˛usive
 ++;

3680 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3682 
	`dú_evítq_ö£π
(
√w_evít
);

3683 #ifde‡
COHERENCE_MODIFIED


3684 if(!
ex˛usive_˛ón
)

3690 if(
cﬁÀ˘_°©s
)

3693 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

3694 
blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

3695 if(
blk
->
¥e„tch_modifõd
[
block_off£t
] || blk->
¥e„tch_övÆid©e
[block_offset])

3697 if(
	`IsSh¨ed
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
))

3698 
evít
->
›î©i⁄
 = 
READ_DATA_REPLY_SHARED
;

3700 
evít
->
›î©i⁄
 = 
READ_DATA_REPLY_EXCLUSIVE
;

3701 
∑ckë_size
 = 
d©a_∑ckë_size
;

3702 
RódD©aRïly_CS
 ++;

3706 if(
	`IsSh¨ed
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
))

3707 
evít
->
›î©i⁄
 = 
READ_META_REPLY_SHARED
;

3709 
evít
->
›î©i⁄
 = 
READ_META_REPLY_EXCLUSIVE
;

3710 
∑ckë_size
 = 
mëa_∑ckë_size
;

3711 
RódMëaRïly_CS
 ++;

3713 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

3714 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

3716 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = (
	`IsSh¨ed
(blk->dir_sharer[block_offset],ÅempID) ? blk->dir_sharer[block_offset][tempID/64] : 0) | ()1<<(tempID%64);

3717 
blk
->
dú_blk_°©e
[
block_off£t
] = 
	`IsSh¨ed
(blk->
dú_sh¨î
[block_off£t], 
ãmpID
Ë? 
MESI_SHARED
 : 
MESI_EXCLUSIVE
;

3719 if(
blk
->
dú_¥e„tch_num
[
block_off£t
] == 0)

3721 
blk
->
¥e„tch_övÆid©e
[
block_off£t
] = 0;

3722 
blk
->
¥e„tch_modifõd
[
block_off£t
] = 0;

3724 
evít
->
§c1
 +evít->
des1
;

3725 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3726 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3727 
evít
->
§c2
 +evít->
des2
;

3728 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3729 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3730 
evít
->
¥o˚ssögD⁄e
 = 0;

3731 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3732 
evít
->
∑ª¡
 = 
NULL
;

3733 
evít
->
blk_dú
 = 
NULL
;

3734 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

3735 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

3736 
	`dú_evítq_ö£π
(
evít
);

3737 #ifde‡
LOCK_CACHE_REGISTER


3739 if(
evít
->
°‹e_c⁄d
 =
MY_LDL_L
)

3740 
	`LockRege°îCheck
(
evít
);

3746 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

3747 
evít
->
L2miss_Êag
 = 1;

3748 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

3749 if(
evít
->
isSyncAc˚ss
)

3750 
Sync_L2_miss
 ++;

3751 if(!
m©chnum
)

3753 #ifde‡
DIR_FIFO_FULL


3754 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3756 if(!
œ°_L2_mshr_fuŒ
)

3758 
L2_mshr_fuŒ
 ++;

3759 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

3761 #ifde‡
TSHR


3762 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

3764 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

3767 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

3769 
evít
->
§c1
 +evít->
des1
;

3770 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3771 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3772 
evít
->
§c2
 +evít->
des2
;

3773 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3774 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3775 
evít
->
≥ndögInvAck
 = 0;

3776 
evít
->
›î©i⁄
 = 
NACK
;

3777 
evít
->
¥o˚ssögD⁄e
 = 0;

3778 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3779 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3780 
	`dú_evítq_ö£π
(
evít
);

3785 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

3786 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3787 
evít
->
Êù_Êag
 = 1;

3788 
Êù_cou¡î
 ++;

3789 
	`dú_evítq_ö£π
(
evít
);

3795 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3796 if(
œ°_L2_mshr_fuŒ
)

3798 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

3799 
œ°_L2_mshr_fuŒ
 = 0;

3803 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

3805 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3806 
Êù_cou¡î
 ++;

3807 
evít
->
Êù_Êag
 = 1;

3808 
	`dú_evítq_ö£π
(
evít
);

3812 if(
cﬁÀ˘_°©s
)

3814 
ˇche_dl2
->
mis£s
 ++;

3815 
ˇche_dl2
->
dmis£s
 ++;

3816 
övﬁve_2_h›s_miss
 ++;

3818 
RódL2Miss
 ++;

3819 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

3820 
evít
->
mshr_time
 = 
sim_cy˛e
;

3821 
DIRECTORY_EVENT
 *
√w_evít
;

3822 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

3823 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

3824 
√w_evít
->
cmd
 = 
Ród
;

3825 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

3826 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

3827 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3828 
	`dú_evítq_ö£π
(
√w_evít
);

3829 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3830 
evít_¸óãd
 = 
evít
;

3831 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

3836 
evít
->
isReqL2SecMiss
 = 1;

3837 if(
cﬁÀ˘_°©s
)

3839 
ˇche_dl2
->
ö_mshr
 ++;

3840 
ˇche_dl2
->
dö_mshr
 ++;

3842 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

3848 
WRITE_COHERENCE_UPDATE
 :

3850 
dˇche2_ac˚ss
++;

3851 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

3852 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

3853 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

3854 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

3855 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

3857 *
mu…ùÀ_sh¨îs
 = (*)
	`ˇŒoc
(4, ());

3858 
cuºítThªadId
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

3859 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

3860 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

3861 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

3862 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

3863 
evít
->
isReqL2Hô
 = 1;

3864 #ifde‡
REAL_LOCK


3865 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
 || (blk->dú_°©e[block_off£t] =
DIR_STABLE
 && blk->
dú_dúty
[block_off£t] !-1 && blk->dú_dúty[block_off£t] !
ãmpID
)

3866 #ifde‡
SERIALIZATION_ACK


3867 || 
blk
->
≥ndögInvAck
[
block_off£t
]

3871 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
)

3873 
evít
->
§c1
 +evít->
des1
;

3874 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3875 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3876 
evít
->
§c2
 +evít->
des2
;

3877 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3878 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3879 
evít
->
›î©i⁄
 = 
FAIL
;

3880 
evít
->
¥o˚ssögD⁄e
 = 0;

3881 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3882 
°‹e_c⁄dôi⁄Æ_Áûed
 ++;

3883 
evít
->
whí
 = 
sim_cy˛e
;

3884 
	`dú_evítq_ö£π
(
evít
);

3885 if(
cﬁÀ˘_°©s
)

3886 
˝_dú
->
dú_ac˚ss
 ++;

3891 #ifde‡
DIR_FIFO_FULL


3892 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION


3893 #ifde‡
SERIALIZATION_ACK


3894 || 
blk
->
≥ndögInvAck
[
block_off£t
]

3898 
evít
->
isReqL2Tøns
 = 1;

3899 #ifde‡
TSHR


3900 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

3902 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

3905 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

3906 
evít
->
§c1
 +evít->
des1
;

3907 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

3908 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

3909 
evít
->
§c2
 +evít->
des2
;

3910 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

3911 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

3912 
evít
->
›î©i⁄
 = 
NACK
;

3913 
evít
->
¥o˚ssögD⁄e
 = 0;

3914 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3915 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3916 
	`dú_evítq_ö£π
(
evít
);

3917 if(
cﬁÀ˘_°©s
)

3918 
˝_dú
->
dú_ac˚ss
 ++;

3923 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

3924 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3925 
Êù_cou¡î
 ++;

3926 
evít
->
Êù_Êag
 = 1;

3927 
	`dú_evítq_ö£π
(
evít
);

3928 if(
cﬁÀ˘_°©s
)

3929 
˝_dú
->
dú_ac˚ss
 ++;

3934 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3938 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION


3939 #ifde‡
SERIALIZATION_ACK


3940 || 
blk
->
≥ndögInvAck
[
block_off£t
]

3944 
evít
->
isReqL2Tøns
 = 1;

3945 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3946 
Êù_cou¡î
 ++;

3947 
evít
->
Êù_Êag
 = 1;

3948 
	`dú_evítq_ö£π
(
evít
);

3949 if(
cﬁÀ˘_°©s
)

3950 
˝_dú
->
dú_ac˚ss
 ++;

3954 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

3956 #ifde‡
SERIALIZATION_ACK


3957 if(!
	`Is_Ex˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
Ë&& 
	`Is_Sh¨ed
(blk->dir_sharer[block_offset],ÅempID))

3959 if(
	`isInvCﬁÀ˘TabÀFuŒ
((
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
Ë|| 
blk
->
≥ndögInvAck
[
block_off£t
])

3961 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

3962 
Êù_cou¡î
 ++;

3963 
evít
->
Êù_Êag
 = 1;

3964 
	`dú_evítq_ö£π
(
evít
);

3965 if(
cﬁÀ˘_°©s
)

3966 
˝_dú
->
dú_ac˚ss
 ++;

3969 
mu…ùÀ_sh¨îs
 = 
blk
->
dú_sh¨î
[
block_off£t
];

3972 if((!
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
)Ë&& (blk->
dú_dúty
[block_offset] != -1))

3973 
	`∑nic
("DIR: Block canÇot be dirty state when it isÇotÉxclusive!");

3975 
isEx˛usiveOrDúty
 = 
	`Is_Ex˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
);

3977 if(
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
])

3979 
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
] = 0;

3980 
blk
->
dú_¥e„tch_num
[
block_off£t
] --;

3981 if(
blk
->
dú_¥e„tch_num
[
block_off£t
] < 0)

3982 
	`∑nic
("prefetchÇumber doesn't match!\n");

3985 #ifde‡
SERIALIZATION_ACK


3987 if(!
isEx˛usiveOrDúty
 || (isEx˛usiveOrDúty && 
Thªadid
 =
ãmpID
))

3989 if(!
	`IsSh¨ed
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
))

3992 if(
cﬁÀ˘_°©s
)

3994 if(
blk
->
evî_dúty
 == 1)

3995 
övﬁve_2_h›_wb
 ++;

3996 if(
blk
->
evî_touch
 == 1)

3997 
övﬁve_2_h›_touch
 ++;

3998 if(
evít
->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

4000 
˝_dú
->
d©a_ac˚ss
 ++;

4001 
övﬁve_2_h›s_wm
 ++;

4002 
WM_CÀ™
 ++;

4006 
övﬁve_2_h›s_upgøde
 ++;

4007 
˝_dú
->
dú_ac˚ss
 ++;

4010 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

4011 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

4012 
blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

4013 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

4014 if(
blk
->
¥e„tch_övÆid©e
[
block_off£t
] || blk->
¥e„tch_modifõd
[block_offset])

4016 
evít
->
›î©i⁄
 = 
WRITE_DATA_REPLY
;

4017 
∑ckë_size
 = 
d©a_∑ckë_size
;

4018 
WrôeD©aRïly_C
 ++;

4022 
evít
->
›î©i⁄
 = 
WRITE_META_REPLY
;

4023 
∑ckë_size
 = 
mëa_∑ckë_size
;

4024 
WrôeMëaRïly_C
 ++;

4027 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

4028 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

4029 
evít
->
§c1
 +evít->
des1
;

4030 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4031 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4032 
evít
->
§c2
 +evít->
des2
;

4033 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4034 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4035 if(
blk
->
dú_¥e„tch_num
[
block_off£t
] == 0)

4037 
blk
->
¥e„tch_övÆid©e
[
block_off£t
] = 0;

4038 
blk
->
¥e„tch_modifõd
[
block_off£t
] = 0;

4041 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

4043 #ifde‡
EUP_NETWORK


4044 if(
evít
->
óæy_Êag
 == 1)

4045 
	`EUP_íåy_dñloˇã
((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
,Évít->
addr
>>
ˇche_dl2
->
£t_shi·
);

4049 
evít
->
¥o˚ssögD⁄e
 = 0;

4050 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4051 
evít
->
∑ª¡
 = 
NULL
;

4052 
evít
->
blk_dú
 = 
NULL
;

4053 
evít
->
≥ndögInvAck
 = (
mu…ùÀ_sh¨îs
[0] != 0 || multiple_sharers[1] != 0 || multiple_sharers[2] != 0 || multiple_sharers[3] != 0);

4054 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4055 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

4056 
	`dú_evítq_ö£π
(
evít
);

4057 #ifde‡
EUP_NETWORK


4063 
evít
->
¥o˚ssögD⁄e
 = 0;

4064 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4065 
evít
->
∑ª¡
 = 
NULL
;

4066 
evít
->
blk_dú
 = 
NULL
;

4067 
evít
->
≥ndögInvAck
 = (
mu…ùÀ_sh¨îs
[0] != 0 || multiple_sharers[1] != 0 || multiple_sharers[2] != 0 || multiple_sharers[3] != 0);

4068 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4069 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

4070 
	`dú_evítq_ö£π
(
evít
);

4073 #ifde‡
SERIALIZATION_ACK


4074 if(
mu…ùÀ_sh¨îs
[0] == 0 && multiple_sharers[1] == 0 && multiple_sharers[2] == 0 && multiple_sharers[3] == 0)

4080 
evít
->
blk_dú
 = 
blk
;

4081 if(
mu…ùÀ_sh¨îs
[0] == 0 && multiple_sharers[1] == 0 && multiple_sharers[2] == 0 && multiple_sharers[3] == 0)

4083 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

4084 
blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

4085 
evít
->
blk_dú
 = 
blk
;

4087 
evít
->
chûdCou¡
 = 0;

4089 if(
mu…ùÀ_sh¨îs
[0] == 0 && multiple_sharers[1] == 0 && multiple_sharers[2] == 0 && multiple_sharers[3] == 0)

4090 
mu…ùÀ_sh¨îs
 = (
blk
->
dú_sh¨î
[
block_off£t
]);

4091 
	`IsNeighb‹
(
mu…ùÀ_sh¨îs
, 
ãmpID
, 
evít
->
›î©i⁄
,Évít->
addr
);

4093 
mu…ish¨îs_Êag
 = 0;

4094 if(
	`IsSh¨ed
(
mu…ùÀ_sh¨îs
, 
ãmpID
) > 1)

4095 
mu…ish¨îs_Êag
 = 1;

4097 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

4099 if((((
mu…ùÀ_sh¨îs
[
Thªadid
/64]Ë& (()1 << (Thªadid%64))Ë=(()1 << (Thªadid%64))Ë&& (Thªadid !
ãmpID
))

4101 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

4103 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

4104 
WrôeInvÆid©e_SEM
 ++;

4105 
√w_evít
->
ªq_time
 = 0;

4106 
√w_evít
->
c⁄f_bô
 = -1;

4107 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

4108 
√w_evít
->
≥ndög_Êag
 = 0;

4109 
√w_evít
->
›
 = 
evít
->op;

4110 
√w_evít
->
isPª„tch
 = 0;

4111 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

4112 #ifde‡
LOCK_CACHE_REGISTER


4113 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
 && 
mu…ish¨îs_Êag
)

4115 
√w_evít
->
›î©i⁄
 = 
INV_MSG_UPDATE
;

4116 
√w_evít
->
c⁄f_bô
 = 
evít
->
chûdCou¡
;

4120 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

4121 
√w_evít
->
isEx˛usiveOrDúty
 = isExclusiveOrDirty;

4122 
√w_evít
->
§c1
 = 
cuºítThªadId
/
mesh_size
+
MEM_LOC_SHIFT
;

4123 
√w_evít
->
§c2
 = 
cuºítThªadId
%
mesh_size
;

4124 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

4125 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

4126 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

4127 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4128 
√w_evít
->
∑ª¡
 = 
evít
;

4129 
√w_evít
->
ãmpID
 =ÅempID;

4130 
√w_evít
->
ª£nd
 = 0;

4131 
√w_evít
->
blk_dú
 = 
blk
;

4132 
√w_evít
->
˝
 = 
evít
->cp;

4133 
√w_evít
->
addr
 = 
evít
->addr;

4134 
√w_evít
->
vp
 = 
NULL
;

4135 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

4136 
√w_evít
->
ud©a
 = 
NULL
;

4137 
√w_evít
->
cmd
 = 
Wrôe
;

4138 
√w_evít
->
rs
 = 
evít
->rs;

4139 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

4140 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

4141 
√w_evít
->
•ec_mode
 = 0;

4142 
evít
->
chûdCou¡
++;

4143 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI") || (!mystricmp(network_type, "HYBRID")))

4145 #ifde‡
INV_ACK_CON


4146 
thªad_id
;

4147 if(
	`Is_Sh¨ed
(
mu…ùÀ_sh¨îs
, 
ãmpID
) > 1)

4149 if((
√w_evít
->
§c1
*
mesh_size
+√w_evít->
§c2
 !√w_evít->
des1
*mesh_size+√w_evít->
des2
Ë&& ((!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI")Ë|| (!my°ricmp“ëw‹k_ty≥, "HYBRID"Ë&& ((
	`abs
(new_event->src1 -Çew_event->des1) +ábs(new_event->src2 -Çew_event->des2)) > 1))))

4151 
√w_evít
->
d©a_ª∂y
 = 0;

4152 
DIRECTORY_EVENT
 *
√w_evít2
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

4153 if(
√w_evít2
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

4154 if(
cﬁÀ˘_°©s
)

4155 
˝_dú
->
dú_ac˚ss
 ++;

4156 
√w_evít2
->
öput_buf„r_fuŒ
 = 0;

4157 
√w_evít2
->
ªq_time
 = 0;

4158 
√w_evít2
->
c⁄f_bô
 = -1;

4159 
√w_evít2
->
≥ndög_Êag
 = 0;

4160 
√w_evít2
->
›
 = 
evít
->op;

4161 
√w_evít2
->
isPª„tch
 = 0;

4162 #ifde‡
LOCK_CACHE_REGISTER


4163 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
 && 
mu…ish¨îs_Êag
)

4164 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_UPDATE
;

4167 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

4168 
√w_evít2
->
°‹e_c⁄d
 = 
evít
->store_cond;

4169 
√w_evít2
->
§c1
 = 
√w_evít
->
des1
;

4170 
√w_evít2
->
§c2
 = 
√w_evít
->
des2
;

4171 
√w_evít2
->
des1
 = 
√w_evít
->
§c1
;

4172 
√w_evít2
->
des2
 = 
√w_evít
->
§c2
;

4173 
√w_evít2
->
¥o˚ssögD⁄e
 = 0;

4174 
√w_evít2
->
°¨tCy˛e
 = 
sim_cy˛e
;

4175 
√w_evít2
->
∑ª¡
 = 
evít
;

4176 
√w_evít2
->
ãmpID
 = 
evít
->tempID;

4177 
√w_evít2
->
ª£nd
 = 0;

4178 
√w_evít2
->
blk_dú
 = 
blk
;

4179 
√w_evít2
->
˝
 = 
evít
->cp;

4180 
√w_evít2
->
addr
 = 
evít
->addr;

4181 
√w_evít2
->
vp
 = 
NULL
;

4182 
√w_evít2
->
nbyãs
 = 
evít
->
˝
->
bsize
;

4183 
√w_evít2
->
ud©a
 = 
NULL
;

4184 
√w_evít2
->
cmd
 = 
Wrôe
;

4185 
√w_evít2
->
rs
 = 
evít
->rs;

4186 
√w_evít2
->
°¨ãd
 = 
sim_cy˛e
;

4187 
√w_evít2
->
•ec_mode
 = 0;

4188 
√w_evít2
->
L2miss_Êag
 = 
evít
->L2miss_flag;

4189 
√w_evít2
->
d©a_ª∂y
 = 0;

4190 
p›√tMsgNo
 ++;

4191 
√w_evít2
->
p›√tMsgNo
 =ÖopnetMsgNo;

4192 
√w_evít2
->
whí
 = 
WAIT_TIME
;

4193 
	`dú_evítq_ö£π
(
√w_evít2
);

4196 
√w_evít
->
d©a_ª∂y
 = 1;

4199 
√w_evít
->
d©a_ª∂y
 = 1;

4201 
√w_evít
->
d©a_ª∂y
 = 1;

4205 
√w_evít
->
d©a_ª∂y
 = 1;

4206 
evít
->
dúty_Êag
 = 1;

4208 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4210 
	`dú_evítq_ö£π
(
√w_evít
);

4213 
sh¨î_di°r
[
evít
->
chûdCou¡
] ++;

4214 
	`IsNeighb‹_sh¨î
(
mu…ùÀ_sh¨îs
, 
ãmpID
);

4215 #ifde‡
SERIALIZATION_ACK


4217 if(
evít
->
chûdCou¡
 >1 && !
isEx˛usiveOrDúty
)

4219 
föÆ_ack_c⁄f
 = 0;

4220 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

4221 
föÆ_ack_c⁄f
 = 1;

4223 
föÆ_ack_c⁄f
 = 0;

4225 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
)

4226 
wrôe_sh¨ed_u£d_c⁄f
 ++;

4227 
	`√wInvCﬁÀ˘
((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
,Évít->
addr
,Évít->
chûdCou¡
, 
ãmpID
, 
föÆ_ack_c⁄f
);

4228 
blk
->
≥ndögInvAck
[
block_off£t
] = 1;

4229 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

4231 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

4233 
tŸÆUpgødesUßbÀ
++;

4234 if(
thec⁄ãxts
[
ãmpID
]->
m_shSQNum
 > 
m_shSQSize
-3)

4235 
tŸÆUpgødesBíeficül
++;

4244 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

4245 
evít
->
L2miss_Êag
 = 1;

4246 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

4247 if(
evít
->
isSyncAc˚ss
)

4248 
Sync_L2_miss
 ++;

4249 if(!
m©chnum
)

4251 #ifde‡
DIR_FIFO_FULL


4252 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

4254 if(!
œ°_L2_mshr_fuŒ
)

4256 
L2_mshr_fuŒ
 ++;

4257 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

4259 #ifde‡
TSHR


4260 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4262 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

4265 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

4266 
evít
->
§c1
 +evít->
des1
;

4267 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4268 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4269 
evít
->
§c2
 +evít->
des2
;

4270 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4271 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4272 
evít
->
›î©i⁄
 = 
NACK
;

4273 
evít
->
¥o˚ssögD⁄e
 = 0;

4274 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4275 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4276 
	`dú_evítq_ö£π
(
evít
);

4281 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

4282 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4283 
Êù_cou¡î
 ++;

4284 
evít
->
Êù_Êag
 = 1;

4285 
	`dú_evítq_ö£π
(
evít
);

4291 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4292 if(
œ°_L2_mshr_fuŒ
)

4294 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

4295 
œ°_L2_mshr_fuŒ
 = 0;

4299 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

4301 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4302 
Êù_cou¡î
 ++;

4303 
evít
->
Êù_Êag
 = 1;

4304 
	`dú_evítq_ö£π
(
evít
);

4308 
d©a_¥iv©e_wrôe
 ++;

4309 if(
cﬁÀ˘_°©s
)

4311 
ˇche_dl2
->
mis£s
 ++;

4312 
ˇche_dl2
->
dmis£s
 ++;

4313 
övﬁve_2_h›s_miss
 ++;

4315 
WrôeL2Miss
 ++;

4316 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

4317 
evít
->
mshr_time
 = 
sim_cy˛e
;

4318 
DIRECTORY_EVENT
 *
√w_evít
;

4319 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

4320 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

4321 
√w_evít
->
cmd
 = 
Ród
;

4322 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

4323 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

4324 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4325 
	`dú_evítq_ö£π
(
√w_evít
);

4326 if(
evít
->
›î©i⁄
 !
WRITE_UPDATE
)

4327 
WM_Miss
 ++;

4328 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4329 
evít_¸óãd
 = 
evít
;

4330 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

4335 
evít
->
isReqL2SecMiss
 = 1;

4336 if(
cﬁÀ˘_°©s
)

4338 
ˇche_dl2
->
ö_mshr
 ++;

4339 
ˇche_dl2
->
dö_mshr
 ++;

4341 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

4347 
MISS_READ
 :

4348 
dˇche2_ac˚ss
++;

4349 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

4350 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

4351 if(
evít
->
ªqNëTime
 == 0)

4352 
evít
->
ªqNëTime
 = 
sim_cy˛e
;

4353 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

4356 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

4357 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

4359 
evít
->
isReqL2Hô
 = 1;

4360 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

4361 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

4362 #ifde‡
DIR_FIFO_FULL


4363 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION


4364 #ifde‡
READ_PERMIT


4365 || (
blk
->
RódPídög
[
block_off£t
] != -1)

4369 
evít
->
isReqL2Tøns
 = 1;

4370 #ifde‡
TSHR


4371 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4373 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

4376 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

4378 
evít
->
§c1
 +evít->
des1
;

4379 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4380 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4381 
evít
->
§c2
 +evít->
des2
;

4382 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4383 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4384 
evít
->
›î©i⁄
 = 
NACK
;

4385 
evít
->
¥o˚ssögD⁄e
 = 0;

4386 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4387 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4388 
	`dú_evítq_ö£π
(
evít
);

4389 if(
cﬁÀ˘_°©s
)

4390 
˝_dú
->
dú_ac˚ss
 ++;

4395 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

4396 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4397 
Êù_cou¡î
 ++;

4398 
evít
->
Êù_Êag
 = 1;

4399 
	`dú_evítq_ö£π
(
evít
);

4400 if(
cﬁÀ˘_°©s
)

4401 
˝_dú
->
dú_ac˚ss
 ++;

4406 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4408 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

4410 
evít
->
isReqL2Tøns
 = 1;

4411 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4412 
Êù_cou¡î
 ++;

4413 
evít
->
Êù_Êag
 = 1;

4414 
	`dú_evítq_ö£π
(
evít
);

4415 if(
cﬁÀ˘_°©s
)

4416 
˝_dú
->
dú_ac˚ss
 ++;

4420 if((!
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
)Ë&& (blk->
dú_dúty
[block_offset] != -1))

4422 #ifde‡
L1_STREAM_PREFETCHER


4423 if(
evít
->
¥e„tch_√xt
 == 4)

4425 
wrôe_back_óæy
 ++;

4426 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

4427 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4428 
Êù_cou¡î
 ++;

4429 
evít
->
Êù_Êag
 = 1;

4430 
	`dú_evítq_ö£π
(
evít
);

4435 
	`∑nic
("DIR: Block canÇot be dirty state when it isÇot shared!");

4438 #ifde‡
PREFETCH_OPTI


4439 if(
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
])

4440 
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
] = 0;

4442 if(
cﬁÀ˘_°©s
)

4444 
˝_dú
->
hôs
 ++;

4445 
˝_dú
->
dhôs
 ++;

4447 
tŸÆL2RódReqHôs
++;

4448 if(
blk
->
dú_sh¨î
[
block_off£t
][0] == 0 && blk->dir_sharer[block_offset][1] == 0 && blk->dir_sharer[block_offset][2] == 0 && blk->dir_sharer[block_offset][3] == 0)

4449 
tŸÆL2RódReqNoSh¨î
++;

4450 if(
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
))

4452 
evít
->
isReqL2Inv
 = 1;

4453 
tŸÆL2RódReqDúty
++;

4456 
tŸÆL2RódReqSh¨ed
++;

4458 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

4459 
ex˛usive_˛ón
 = 0;

4461 if(
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
Ë&& blk->
dú_blk_°©e
[block_off£t] !
MESI_SHARED
)

4463 if(
cﬁÀ˘_°©s
)

4464 
övﬁve_4_h›s
 ++;

4465 
	`IsNeighb‹
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, 
MISS_READ
, 
evít
->
addr
);

4466 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

4467 
blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

4468 
evít
->
blk_dú
 = 
blk
;

4469 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

4470 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

4471 if(
cﬁÀ˘_°©s
)

4472 
˝_dú
->
dú_ac˚ss
 ++;

4473 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

4474 
√w_evít
->
ªq_time
 = 0;

4475 
√w_evít
->
c⁄f_bô
 = -1;

4476 
√w_evít
->
≥ndög_Êag
 = 0;

4477 
√w_evít
->
›
 = 
evít
->op;

4478 
√w_evít
->
isPª„tch
 = 0;

4479 
√w_evít
->
›î©i⁄
 = 
INV_MSG_READ
;

4480 
√w_evít
->
§c1
 = 
evít
->
des1
;

4481 
√w_evít
->
§c2
 = 
evít
->
des2
;

4482 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

4483 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

4484 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

4485 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4486 
√w_evít
->
∑ª¡
 = 
evít
;

4487 
√w_evít
->
ãmpID
 = 
evít
->tempID;

4488 
√w_evít
->
ª£nd
 = 0;

4489 
√w_evít
->
blk_dú
 = 
blk
;

4490 
√w_evít
->
˝
 = 
evít
->cp;

4491 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

4492 
√w_evít
->
addr
 = 
evít
->addr;

4493 
√w_evít
->
vp
 = 
NULL
;

4494 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

4495 
√w_evít
->
ud©a
 = 
NULL
;

4496 
√w_evít
->
cmd
 = 
Wrôe
;

4497 
√w_evít
->
rs
 = 
evít
->rs;

4498 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

4499 
√w_evít
->
•ec_mode
 = 0;

4500 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

4501 #ifde‡
COHERENCE_MODIFIED


4502 #ifde‡
INV_ACK_CON


4503 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_EXCLUSIVE
)

4505 if((
√w_evít
->
§c1
*
mesh_size
+√w_evít->
§c2
 !√w_evít->
des1
*mesh_size+√w_evít->
des2
Ë&& ((!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI")Ë|| (!my°ricmp“ëw‹k_ty≥, "HYBRID"Ë&& ((
	`abs
(new_event->src1 -Çew_event->des1) +ábs(new_event->src2 -Çew_event->des2)) > 1))))

4508 
√w_evít
->
d©a_ª∂y
 = 0;

4509 
ex˛usive_˛ón
 = 1;

4510 
tŸÆ_ex˛usive_c⁄f
 ++;

4511 
DIRECTORY_EVENT
 *
√w_evít2
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

4512 if(
√w_evít2
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

4513 if(
cﬁÀ˘_°©s
)

4514 
˝_dú
->
dú_ac˚ss
 ++;

4515 
√w_evít2
->
öput_buf„r_fuŒ
 = 0;

4516 
√w_evít2
->
ªq_time
 = 0;

4517 
√w_evít2
->
c⁄f_bô
 = -1;

4518 
√w_evít2
->
≥ndög_Êag
 = 0;

4519 
√w_evít2
->
›
 = 
evít
->op;

4520 
√w_evít2
->
isPª„tch
 = 0;

4521 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

4522 
√w_evít2
->
°‹e_c⁄d
 = 
evít
->store_cond;

4523 
√w_evít2
->
§c1
 = 
√w_evít
->
des1
;

4524 
√w_evít2
->
§c2
 = 
√w_evít
->
des2
;

4525 
√w_evít2
->
des1
 = 
√w_evít
->
§c1
;

4526 
√w_evít2
->
des2
 = 
√w_evít
->
§c2
;

4527 
√w_evít2
->
¥o˚ssögD⁄e
 = 0;

4528 
√w_evít2
->
°¨tCy˛e
 = 
sim_cy˛e
;

4529 
√w_evít2
->
∑ª¡
 = 
evít
;

4530 
√w_evít2
->
ãmpID
 = 
evít
->tempID;

4531 
√w_evít2
->
ª£nd
 = 0;

4532 
√w_evít2
->
blk_dú
 = 
blk
;

4533 
√w_evít2
->
˝
 = 
evít
->cp;

4534 
√w_evít2
->
addr
 = 
evít
->addr;

4535 
√w_evít2
->
vp
 = 
NULL
;

4536 
√w_evít2
->
nbyãs
 = 
evít
->
˝
->
bsize
;

4537 
√w_evít2
->
ud©a
 = 
NULL
;

4538 
√w_evít2
->
cmd
 = 
Ród
;

4539 
√w_evít2
->
rs
 = 
evít
->rs;

4540 
√w_evít2
->
°¨ãd
 = 
sim_cy˛e
;

4541 
√w_evít2
->
•ec_mode
 = 0;

4542 
√w_evít2
->
L2miss_Êag
 = 
evít
->L2miss_flag;

4543 
√w_evít2
->
d©a_ª∂y
 = 0;

4544 
p›√tMsgNo
 ++;

4545 
√w_evít2
->
p›√tMsgNo
 =ÖopnetMsgNo;

4546 
√w_evít2
->
whí
 = 
WAIT_TIME
;

4547 
	`dú_evítq_ö£π
(
√w_evít2
);

4549 
√w_evít
->
d©a_ª∂y
 = 0;

4550 
ex˛usive_˛ón
 = 1;

4551 
tŸÆ_ex˛usive_c⁄f
 ++;

4555 
√w_evít
->
d©a_ª∂y
 = 1;

4560 
√w_evít
->
d©a_ª∂y
 = 1;

4561 
evít
->
chûdCou¡
++;

4562 
evít
->
dúty_Êag
 = 1;

4563 if(
evít
->
rs
)

4564 if(
evít
->
rs
->
›
 =
LDL_L
)

4565 
lﬂd_lök_ex˛usive
 ++;

4568 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4570 
	`dú_evítq_ö£π
(
√w_evít
);

4571 #ifde‡
COHERENCE_MODIFIED


4572 if(!
ex˛usive_˛ón
)

4578 if(
cﬁÀ˘_°©s
)

4580 
˝_dú
->
d©a_ac˚ss
 ++;

4581 
övﬁve_2_h›s
 ++;

4582 if(
blk
->
evî_dúty
 == 1)

4583 
övﬁve_2_h›_wb
 ++;

4585 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

4586 
blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

4587 if(
evít
->
rs
)

4588 if(
evít
->
rs
->
›
 =
LDL_L
)

4589 
lﬂd_lök_sh¨ed
 ++;

4590 
evít
->
›î©i⁄
 = 
	`IsSh¨ed
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
Ë? 
ACK_DIR_READ_SHARED
 : 
ACK_DIR_READ_EXCLUSIVE
;

4591 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

4592 if(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

4594 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = (
	`IsSh¨ed
(blk->dir_sharer[block_offset],ÅempID) ? blk->dir_sharer[block_offset][tempID/64] : 0) | ()1<<(tempID%64);

4595 
blk
->
dú_blk_°©e
[
block_off£t
] = 
	`IsSh¨ed
(blk->
dú_sh¨î
[block_off£t], 
ãmpID
Ë? 
MESI_SHARED
 : 
MESI_EXCLUSIVE
;

4598 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
)

4599 
blk
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

4601 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
 && 
cﬁÀ˘_°©s
 && 
blk
->
evî_touch
 == 1)

4602 
övﬁve_2_h›_touch
 ++;

4603 
evít
->
§c1
 +evít->
des1
;

4604 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4605 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4606 
evít
->
§c2
 +evít->
des2
;

4607 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4608 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4609 
evít
->
¥o˚ssögD⁄e
 = 0;

4610 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4611 
evít
->
∑ª¡
 = 
NULL
;

4612 
evít
->
blk_dú
 = 
NULL
;

4613 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4614 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

4615 
	`dú_evítq_ö£π
(
evít
);

4616 #ifde‡
LOCK_CACHE_REGISTER


4618 if(
evít
->
°‹e_c⁄d
 =
MY_LDL_L
)

4619 
	`LockRege°îCheck
(
evít
);

4625 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

4626 
evít
->
L2miss_Êag
 = 1;

4627 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

4628 if(
evít
->
isSyncAc˚ss
)

4629 
Sync_L2_miss
 ++;

4630 if(!
m©chnum
)

4632 #ifde‡
DIR_FIFO_FULL


4633 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

4635 if(!
œ°_L2_mshr_fuŒ
)

4637 
L2_mshr_fuŒ
 ++;

4638 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

4640 #ifde‡
TSHR


4641 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4643 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

4646 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

4648 
evít
->
§c1
 +evít->
des1
;

4649 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4650 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4651 
evít
->
§c2
 +evít->
des2
;

4652 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4653 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4654 
evít
->
≥ndögInvAck
 = 0;

4655 
evít
->
›î©i⁄
 = 
NACK
;

4656 
evít
->
¥o˚ssögD⁄e
 = 0;

4657 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4658 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4659 
	`dú_evítq_ö£π
(
evít
);

4664 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

4665 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4666 
evít
->
Êù_Êag
 = 1;

4667 
Êù_cou¡î
 ++;

4668 
	`dú_evítq_ö£π
(
evít
);

4674 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4675 if(
œ°_L2_mshr_fuŒ
)

4677 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

4678 
œ°_L2_mshr_fuŒ
 = 0;

4682 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

4684 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4685 
Êù_cou¡î
 ++;

4686 
evít
->
Êù_Êag
 = 1;

4687 
	`dú_evítq_ö£π
(
evít
);

4691 if(
cﬁÀ˘_°©s
)

4693 
ˇche_dl2
->
mis£s
 ++;

4694 
ˇche_dl2
->
dmis£s
 ++;

4695 
övﬁve_2_h›s_miss
 ++;

4697 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

4698 
evít
->
mshr_time
 = 
sim_cy˛e
;

4699 
DIRECTORY_EVENT
 *
√w_evít
;

4700 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

4701 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

4702 
√w_evít
->
cmd
 = 
Ród
;

4703 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

4704 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

4705 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4706 
	`dú_evítq_ö£π
(
√w_evít
);

4707 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4708 
evít_¸óãd
 = 
evít
;

4709 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

4714 
evít
->
isReqL2SecMiss
 = 1;

4715 if(
cﬁÀ˘_°©s
)

4717 
ˇche_dl2
->
ö_mshr
 ++;

4718 
ˇche_dl2
->
dö_mshr
 ++;

4720 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

4725 #ifde‡
COHERENCE_MODIFIED


4726 
WRITE_INDICATE
 :

4727 
dˇche2_ac˚ss
++;

4728 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

4729 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

4730 if(
evít
->
ªqNëTime
 == 0)

4731 
evít
->
ªqNëTime
 = 
sim_cy˛e
;

4732 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

4733 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

4734 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

4736 if((
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_EXCLUSIVE
Ë&& (((blk->
dú_sh¨î
[block_off£t][
ãmpID
/64]) & (()1 << (tempID%64))) == (()1 << (tempID%64))))

4738 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

4739 
tŸÆ_ex˛usive_modifõd
 ++;

4741 
	`‰ì_evít
(
evít
);

4745 
	`∑nic
("WriteÉxclusive canÇot beá miss in L2 cache");

4749 
WRITE_UPDATE
 :

4750 
MISS_WRITE
 :

4751 
dˇche2_ac˚ss
++;

4752 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

4753 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

4754 if(
evít
->
ªqNëTime
 == 0)

4755 
evít
->
ªqNëTime
 = 
sim_cy˛e
;

4756 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

4757 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

4758 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

4760 *
mu…ùÀ_sh¨îs
 = (*)
	`ˇŒoc
(4, ());

4761 
cuºítThªadId
 = (
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
des2
;

4762 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_°©ed
)

4763 
evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

4764 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

4765 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

4766 
evít
->
isReqL2Hô
 = 1;

4767 #ifde‡
REAL_LOCK


4768 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
 || (blk->dú_°©e[block_off£t] =
DIR_STABLE
 && blk->
dú_dúty
[block_off£t] !-1 && blk->dú_dúty[block_off£t] !
ãmpID
)

4769 #ifde‡
SERIALIZATION_ACK


4770 || 
blk
->
≥ndögInvAck
[
block_off£t
]

4774 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
)

4776 
evít
->
§c1
 +evít->
des1
;

4777 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4778 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4779 
evít
->
§c2
 +evít->
des2
;

4780 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4781 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4782 
evít
->
›î©i⁄
 = 
FAIL
;

4783 
evít
->
¥o˚ssögD⁄e
 = 0;

4784 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4785 
°‹e_c⁄dôi⁄Æ_Áûed
 ++;

4786 
evít
->
whí
 = 
sim_cy˛e
;

4787 
	`dú_evítq_ö£π
(
evít
);

4788 if(
cﬁÀ˘_°©s
)

4789 
˝_dú
->
dú_ac˚ss
 ++;

4794 #ifde‡
DIR_FIFO_FULL


4795 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION


4796 #ifde‡
SERIALIZATION_ACK


4797 || 
blk
->
≥ndögInvAck
[
block_off£t
]

4801 
evít
->
isReqL2Tøns
 = 1;

4802 #ifde‡
TSHR


4803 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

4805 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

4808 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

4809 
evít
->
§c1
 +evít->
des1
;

4810 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4811 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4812 
evít
->
§c2
 +evít->
des2
;

4813 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4814 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4815 
evít
->
›î©i⁄
 = 
NACK
;

4816 
evít
->
¥o˚ssögD⁄e
 = 0;

4817 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4818 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4819 
	`dú_evítq_ö£π
(
evít
);

4820 if(
cﬁÀ˘_°©s
)

4821 
˝_dú
->
dú_ac˚ss
 ++;

4826 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

4827 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4828 
Êù_cou¡î
 ++;

4829 
evít
->
Êù_Êag
 = 1;

4830 
	`dú_evítq_ö£π
(
evít
);

4831 if(
cﬁÀ˘_°©s
)

4832 
˝_dú
->
dú_ac˚ss
 ++;

4837 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4841 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION


4842 #ifde‡
SERIALIZATION_ACK


4843 || 
blk
->
≥ndögInvAck
[
block_off£t
]

4847 
evít
->
isReqL2Tøns
 = 1;

4848 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4849 
Êù_cou¡î
 ++;

4850 
evít
->
Êù_Êag
 = 1;

4851 
	`dú_evítq_ö£π
(
evít
);

4852 if(
cﬁÀ˘_°©s
)

4853 
˝_dú
->
dú_ac˚ss
 ++;

4857 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

4859 #ifde‡
SERIALIZATION_ACK


4860 if(!
	`Is_Ex˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
Ë&& 
	`Is_Sh¨ed
(blk->dir_sharer[block_offset],ÅempID))

4862 if(
	`isInvCﬁÀ˘TabÀFuŒ
((
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
Ë|| 
blk
->
≥ndögInvAck
[
block_off£t
])

4864 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

4865 
Êù_cou¡î
 ++;

4866 
evít
->
Êù_Êag
 = 1;

4867 
	`dú_evítq_ö£π
(
evít
);

4868 if(
cﬁÀ˘_°©s
)

4869 
˝_dú
->
dú_ac˚ss
 ++;

4872 
mu…ùÀ_sh¨îs
 = 
blk
->
dú_sh¨î
[
block_off£t
];

4875 if((!
	`IsEx˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
)Ë&& (blk->
dú_dúty
[block_offset] != -1))

4876 
	`∑nic
("DIR: Block canÇot be dirty state when it isÇotÉxclusive!");

4878 
isEx˛usiveOrDúty
 = 
	`Is_Ex˛usiveOrDúty
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
, &
Thªadid
);

4879 if(
cﬁÀ˘_°©s
)

4881 if(
evít
->
›î©i⁄
 =
WRITE_UPDATE
)

4882 
˝_dú
->
ack_ª˚ived
 ++;

4883 
˝_dú
->
hôs
 ++;

4884 
˝_dú
->
dhôs
 ++;

4886 
tŸÆL2WrôeReqHôs
++;

4887 if(
blk
->
dú_sh¨î
[
block_off£t
][0] == 0 && blk->dir_sharer[block_offset][1] == 0 && blk->dir_sharer[block_offset][2] == 0 && blk->dir_sharer[block_offset][3] == 0)

4888 
tŸÆL2WrôeReqNoSh¨î
++;

4889 if(
isEx˛usiveOrDúty
)

4891 
evít
->
isReqL2Inv
 = 1;

4892 
tŸÆL2WrôeReqDúty
++;

4896 
evít
->
isReqL2Inv
 = 1;

4897 
tŸÆL2WrôeReqSh¨ed
++;

4901 #ifde‡
PREFETCH_OPTI


4902 if(
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
])

4903 
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
] = 0;

4906 #ifde‡
SERIALIZATION_ACK


4908 if(!
isEx˛usiveOrDúty
 || (isEx˛usiveOrDúty && 
Thªadid
 =
ãmpID
))

4910 if(!
	`IsSh¨ed
(
blk
->
dú_sh¨î
[
block_off£t
], 
ãmpID
))

4913 if(
cﬁÀ˘_°©s
)

4915 if(
blk
->
evî_dúty
 == 1)

4916 
övﬁve_2_h›_wb
 ++;

4917 if(
blk
->
evî_touch
 == 1)

4918 
övﬁve_2_h›_touch
 ++;

4919 if(
evít
->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

4921 
˝_dú
->
d©a_ac˚ss
 ++;

4922 
övﬁve_2_h›s_wm
 ++;

4923 
WM_CÀ™
 ++;

4927 
övﬁve_2_h›s_upgøde
 ++;

4928 
˝_dú
->
dú_ac˚ss
 ++;

4931 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

4932 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

4933 
blk
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

4934 
evít
->
ªqAckTime
 = 
sim_cy˛e
;

4935 #ifde‡
PREFETCH_OPTI


4936 if(
blk
->
dú_¥e„tch_num
[
block_off£t
])

4937 
blk
->
¥e„tch_övÆid©e
[
block_off£t
] = 1;

4938 if(
blk
->
dú_¥e„tch_num
[
block_off£t
])

4939 
blk
->
¥e„tch_modifõd
[
block_off£t
] = 1;

4941 if(
evít
->
∑ª¡_›î©i⁄
 =
MISS_WRITE
 || (
mu…ùÀ_sh¨îs
[0] =0 && mu…ùÀ_sh¨îs[1] =0 && mu…ùÀ_sh¨îs[2] =0 && mu…ùÀ_sh¨îs[3] =0 && 
blk
->
dú_dúty
[
block_off£t
] !-1 &&Évít->
›î©i⁄
 =
WRITE_UPDATE
))

4943 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

4944 
∑ckë_size
 = 
d©a_∑ckë_size
;

4948 
evít
->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

4949 
∑ckë_size
 = 
mëa_∑ckë_size
;

4952 
d©a_¥iv©e_wrôe
 ++;

4953 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

4954 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

4955 
evít
->
§c1
 +evít->
des1
;

4956 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

4957 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

4958 
evít
->
§c2
 +evít->
des2
;

4959 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

4960 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

4962 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

4964 #ifde‡
EUP_NETWORK


4965 if(
evít
->
óæy_Êag
 == 1)

4966 
	`EUP_íåy_dñloˇã
((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
,Évít->
addr
>>
ˇche_dl2
->
£t_shi·
);

4970 
evít
->
¥o˚ssögD⁄e
 = 0;

4971 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4972 
evít
->
∑ª¡
 = 
NULL
;

4973 
evít
->
blk_dú
 = 
NULL
;

4974 
evít
->
≥ndögInvAck
 = (
mu…ùÀ_sh¨îs
[0] != 0 || multiple_sharers[1] != 0 || multiple_sharers[2] != 0 || multiple_sharers[3] != 0);

4975 if(
evít
->
≥ndögInvAck
 =1 &&Évít->
∑ª¡_›î©i⁄
 =
WRITE_UPDATE
)

4976 
tŸÆS∂ôNo
 ++;

4977 if(
evít
->
≥ndögInvAck
 =1 &&Évít->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

4978 
tŸÆS∂ôWM
 ++;

4979 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4980 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

4981 
	`dú_evítq_ö£π
(
evít
);

4982 #ifde‡
EUP_NETWORK


4988 
evít
->
¥o˚ssögD⁄e
 = 0;

4989 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4990 
evít
->
∑ª¡
 = 
NULL
;

4991 
evít
->
blk_dú
 = 
NULL
;

4992 
evít
->
≥ndögInvAck
 = (
mu…ùÀ_sh¨îs
[0] != 0 || multiple_sharers[1] != 0 || multiple_sharers[2] != 0 || multiple_sharers[3] != 0);

4993 if(
evít
->
≥ndögInvAck
 =1 &&Évít->
∑ª¡_›î©i⁄
 =
WRITE_UPDATE
)

4994 
tŸÆS∂ôNo
 ++;

4995 if(
evít
->
≥ndögInvAck
 =1 &&Évít->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

4996 
tŸÆS∂ôWM
 ++;

4997 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
 -Évent->arrival_time;

4998 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

4999 
	`dú_evítq_ö£π
(
evít
);

5002 #ifde‡
SERIALIZATION_ACK


5003 if(
mu…ùÀ_sh¨îs
[0] == 0 && multiple_sharers[1] == 0 && multiple_sharers[2] == 0 && multiple_sharers[3] == 0)

5009 
d©a_sh¨ed_wrôe
 ++;

5010 if(
cﬁÀ˘_°©s
)

5012 
˝_dú
->
dú_ac˚ss
 ++;

5013 if(
evít
->
›î©i⁄
 =
WRITE_UPDATE
)

5014 
övﬁve_4_h›s_upgøde
 ++;

5016 
övﬁve_4_h›s_wm
 ++;

5018 
evít
->
blk_dú
 = 
blk
;

5019 if(
mu…ùÀ_sh¨îs
[0] == 0 && multiple_sharers[1] == 0 && multiple_sharers[2] == 0 && multiple_sharers[3] == 0)

5021 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_TRANSITION
;

5022 
blk
->
±r_cur_evít
[
block_off£t
] = 
evít
;

5023 
evít
->
blk_dú
 = 
blk
;

5024 if(
blk
->
dú_dúty
[
block_off£t
] !-1 && 
evít
->
›î©i⁄
 =
WRITE_UPDATE
)

5026 
evít
->
›î©i⁄
 = 
MISS_WRITE
;

5027 
evít
->
∑ª¡_›î©i⁄
 = 
MISS_WRITE
;

5030 
evít
->
chûdCou¡
 = 0;

5032 if(
mu…ùÀ_sh¨îs
[0] == 0 && multiple_sharers[1] == 0 && multiple_sharers[2] == 0 && multiple_sharers[3] == 0)

5033 
mu…ùÀ_sh¨îs
 = (
blk
->
dú_sh¨î
[
block_off£t
]);

5034 
	`IsNeighb‹
(
mu…ùÀ_sh¨îs
, 
ãmpID
, 
evít
->
›î©i⁄
,Évít->
addr
);

5036 
mu…ish¨îs_Êag
 = 0;

5037 if(
	`IsSh¨ed
(
mu…ùÀ_sh¨îs
, 
ãmpID
) > 1)

5038 
mu…ish¨îs_Êag
 = 1;

5040 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

5042 if((((
mu…ùÀ_sh¨îs
[
Thªadid
/64]Ë& (()1 << (Thªadid%64))Ë=(()1 << (Thªadid%64))Ë&& (Thªadid !
ãmpID
))

5044 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

5046 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

5047 
√w_evít
->
ªq_time
 = 0;

5048 
√w_evít
->
c⁄f_bô
 = -1;

5049 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

5050 
√w_evít
->
≥ndög_Êag
 = 0;

5051 
√w_evít
->
›
 = 
evít
->op;

5052 
√w_evít
->
isPª„tch
 = 0;

5053 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

5054 #ifde‡
LOCK_CACHE_REGISTER


5055 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
 && 
mu…ish¨îs_Êag
)

5057 
√w_evít
->
›î©i⁄
 = 
INV_MSG_UPDATE
;

5058 
√w_evít
->
c⁄f_bô
 = 
evít
->
chûdCou¡
;

5062 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

5063 
√w_evít
->
isEx˛usiveOrDúty
 = isExclusiveOrDirty;

5064 
√w_evít
->
§c1
 = 
cuºítThªadId
/
mesh_size
+
MEM_LOC_SHIFT
;

5065 
√w_evít
->
§c2
 = 
cuºítThªadId
%
mesh_size
;

5066 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

5067 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

5068 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

5069 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5070 
√w_evít
->
∑ª¡
 = 
evít
;

5071 
√w_evít
->
ãmpID
 =ÅempID;

5072 
√w_evít
->
ª£nd
 = 0;

5073 
√w_evít
->
blk_dú
 = 
blk
;

5074 
√w_evít
->
˝
 = 
evít
->cp;

5075 
√w_evít
->
addr
 = 
evít
->addr;

5076 
√w_evít
->
vp
 = 
NULL
;

5077 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

5078 
√w_evít
->
ud©a
 = 
NULL
;

5079 
√w_evít
->
cmd
 = 
Wrôe
;

5080 
√w_evít
->
rs
 = 
evít
->rs;

5081 
√w_evít
->
°¨ãd
 = 
sim_cy˛e
;

5082 
√w_evít
->
°‹e_c⁄d
 = 
evít
->store_cond;

5083 
√w_evít
->
•ec_mode
 = 0;

5084 
evít
->
chûdCou¡
++;

5085 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI") || (!mystricmp(network_type, "HYBRID")))

5087 #ifde‡
INV_ACK_CON


5088 
thªad_id
;

5089 if(
	`Is_Sh¨ed
(
mu…ùÀ_sh¨îs
, 
ãmpID
) > 1)

5091 if((
√w_evít
->
§c1
*
mesh_size
+√w_evít->
§c2
 !√w_evít->
des1
*mesh_size+√w_evít->
des2
Ë&& ((!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI")Ë|| (!my°ricmp“ëw‹k_ty≥, "HYBRID"Ë&& ((
	`abs
(new_event->src1 -Çew_event->des1) +ábs(new_event->src2 -Çew_event->des2)) > 1))))

5093 
√w_evít
->
d©a_ª∂y
 = 0;

5094 
DIRECTORY_EVENT
 *
√w_evít2
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

5095 if(
√w_evít2
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

5096 if(
cﬁÀ˘_°©s
)

5097 
˝_dú
->
dú_ac˚ss
 ++;

5098 
√w_evít2
->
öput_buf„r_fuŒ
 = 0;

5099 
√w_evít2
->
ªq_time
 = 0;

5100 
√w_evít2
->
c⁄f_bô
 = -1;

5101 
√w_evít2
->
≥ndög_Êag
 = 0;

5102 
√w_evít2
->
›
 = 
evít
->op;

5103 
√w_evít2
->
isPª„tch
 = 0;

5104 #ifde‡
LOCK_CACHE_REGISTER


5105 if(
evít
->
°‹e_c⁄d
 =
MY_STL_C
 && 
mu…ish¨îs_Êag
)

5106 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_UPDATE
;

5109 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

5110 
√w_evít2
->
°‹e_c⁄d
 = 
evít
->store_cond;

5111 
√w_evít2
->
§c1
 = 
√w_evít
->
des1
;

5112 
√w_evít2
->
§c2
 = 
√w_evít
->
des2
;

5113 
√w_evít2
->
des1
 = 
√w_evít
->
§c1
;

5114 
√w_evít2
->
des2
 = 
√w_evít
->
§c2
;

5115 
√w_evít2
->
¥o˚ssögD⁄e
 = 0;

5116 
√w_evít2
->
°¨tCy˛e
 = 
sim_cy˛e
;

5117 
√w_evít2
->
∑ª¡
 = 
evít
;

5118 
√w_evít2
->
ãmpID
 = 
evít
->tempID;

5119 
√w_evít2
->
ª£nd
 = 0;

5120 
√w_evít2
->
blk_dú
 = 
blk
;

5121 
√w_evít2
->
˝
 = 
evít
->cp;

5122 
√w_evít2
->
addr
 = 
evít
->addr;

5123 
√w_evít2
->
vp
 = 
NULL
;

5124 
√w_evít2
->
nbyãs
 = 
evít
->
˝
->
bsize
;

5125 
√w_evít2
->
ud©a
 = 
NULL
;

5126 
√w_evít2
->
cmd
 = 
Wrôe
;

5127 
√w_evít2
->
rs
 = 
evít
->rs;

5128 
√w_evít2
->
°¨ãd
 = 
sim_cy˛e
;

5129 
√w_evít2
->
•ec_mode
 = 0;

5130 
√w_evít2
->
L2miss_Êag
 = 
evít
->L2miss_flag;

5131 
√w_evít2
->
d©a_ª∂y
 = 0;

5132 
p›√tMsgNo
 ++;

5133 
√w_evít2
->
p›√tMsgNo
 =ÖopnetMsgNo;

5134 
√w_evít2
->
whí
 = 
WAIT_TIME
;

5135 
	`dú_evítq_ö£π
(
√w_evít2
);

5138 
√w_evít
->
d©a_ª∂y
 = 1;

5141 
√w_evít
->
d©a_ª∂y
 = 1;

5143 
√w_evít
->
d©a_ª∂y
 = 1;

5147 
√w_evít
->
d©a_ª∂y
 = 1;

5148 
evít
->
dúty_Êag
 = 1;

5150 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5152 
	`dú_evítq_ö£π
(
√w_evít
);

5155 if(
evít
->
chûdCou¡
 =1 &&Évít->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

5157 
WM_EM
 ++;

5158 
blk
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

5159 
evít
->
‹igöÆChûdCou¡
 =Évít->
chûdCou¡
;

5161 if(
evít
->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

5162 
WM_S
 ++;

5163 
sh¨î_di°r
[
evít
->
chûdCou¡
] ++;

5164 
	`IsNeighb‹_sh¨î
(
mu…ùÀ_sh¨îs
, 
ãmpID
);

5165 #ifde‡
SERIALIZATION_ACK


5167 if(
evít
->
chûdCou¡
 >1 && !
isEx˛usiveOrDúty
)

5169 
föÆ_ack_c⁄f
 = 0;

5170 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

5171 
föÆ_ack_c⁄f
 = 1;

5173 
föÆ_ack_c⁄f
 = 0;

5175 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
)

5176 
wrôe_sh¨ed_u£d_c⁄f
 ++;

5177 
	`√wInvCﬁÀ˘
((
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
,Évít->
addr
,Évít->
chûdCou¡
, 
ãmpID
, 
föÆ_ack_c⁄f
);

5178 
blk
->
≥ndögInvAck
[
block_off£t
] = 1;

5179 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

5181 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

5183 
tŸÆUpgødesUßbÀ
++;

5184 if(
thec⁄ãxts
[
ãmpID
]->
m_shSQNum
 > 
m_shSQSize
-3)

5185 
tŸÆUpgødesBíeficül
++;

5194 if(
evít
->
›î©i⁄
 =
WRITE_UPDATE
)

5195 
	`¥ötf
("here\n");

5196 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, cache_dl2->
£t_shi·
);

5197 
evít
->
L2miss_Êag
 = 1;

5198 
evít
->
L2miss_°©ed
 = 
sim_cy˛e
;

5199 if(
evít
->
isSyncAc˚ss
)

5200 
Sync_L2_miss
 ++;

5201 if(!
m©chnum
)

5203 #ifde‡
DIR_FIFO_FULL


5204 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

5206 if(!
œ°_L2_mshr_fuŒ
)

5208 
L2_mshr_fuŒ
 ++;

5209 
œ°_L2_mshr_fuŒ
 = 
sim_cy˛e
;

5211 #ifde‡
TSHR


5212 if(
tshr_fifo_num
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
tshr_fifo_size
)

5214 if(
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] >
dú_fifo_size
)

5217 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = dir_fifo_full[event->des1*mesh_size+event->des2] - 4;

5218 
evít
->
§c1
 +evít->
des1
;

5219 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5220 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5221 
evít
->
§c2
 +evít->
des2
;

5222 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5223 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5224 
evít
->
›î©i⁄
 = 
NACK
;

5225 
evít
->
¥o˚ssögD⁄e
 = 0;

5226 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5227 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5228 
	`dú_evítq_ö£π
(
evít
);

5233 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] ++;

5234 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5235 
Êù_cou¡î
 ++;

5236 
evít
->
Êù_Êag
 = 1;

5237 
	`dú_evítq_ö£π
(
evít
);

5243 
dú_fifo_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

5244 if(
œ°_L2_mshr_fuŒ
)

5246 
SèŒ_L2_mshr
 +
sim_cy˛e
 - 
œ°_L2_mshr_fuŒ
;

5247 
œ°_L2_mshr_fuŒ
 = 0;

5251 if(!
ˇche_dl2
->
mshr
->
‰ìE¡rõs
)

5253 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

5254 
Êù_cou¡î
 ++;

5255 
evít
->
Êù_Êag
 = 1;

5256 
	`dú_evítq_ö£π
(
evít
);

5260 
d©a_¥iv©e_wrôe
 ++;

5261 if(
cﬁÀ˘_°©s
)

5263 
ˇche_dl2
->
mis£s
 ++;

5264 
ˇche_dl2
->
dmis£s
 ++;

5265 
övﬁve_2_h›s_miss
 ++;

5267 
evít
->
ªqAtDúTime
 = 
sim_cy˛e
;

5268 
evít
->
mshr_time
 = 
sim_cy˛e
;

5269 
DIRECTORY_EVENT
 *
√w_evít
;

5270 
√w_evít
 = 
	`Æloˇã_√w_evít
(
evít
);

5271 
√w_evít
->
›î©i⁄
 = 
MEM_READ_REQ
;

5272 
√w_evít
->
cmd
 = 
Ród
;

5273 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

5274 
evít
->
›î©i⁄
 = 
WAIT_MEM_READ
;

5275 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

5276 
	`dú_evítq_ö£π
(
√w_evít
);

5277 if(
evít
->
›î©i⁄
 !
WRITE_UPDATE
)

5278 
WM_Miss
 ++;

5279 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5280 
evít_¸óãd
 = 
evít
;

5281 
	`MSHRLookup
(
ˇche_dl2
->
mshr
, 
evít
->
addr
, 
WAIT_TIME
, 0, 
NULL
);

5286 
evít
->
isReqL2SecMiss
 = 1;

5287 if(
cﬁÀ˘_°©s
)

5289 
ˇche_dl2
->
ö_mshr
 ++;

5290 
ˇche_dl2
->
dö_mshr
 ++;

5292 
	`evít_li°_ö£π
(
evít
, 
m©chnum
);

5297 
UPDATE_DIR
 :

5298 #ifde‡
UPDATE_HINT


5299 
dˇche2_ac˚ss
++;

5300 
thec⁄ãxts
[
evít
->
des1
*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

5301 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

5302 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5303 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

5304 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

5306 if(
cﬁÀ˘_°©s
)

5307 
˝_dú
->
d©a_ac˚ss
 ++;

5309 
blk
->
evî_touch
 = 1;

5310 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] &= ~((()1<<(tempID%64)));

5311 
	`‰ì_evít
(
evít
);

5317 
	`‰ì_evít
(
evít
);

5321 #ifde‡
SILENT_DROP


5322 
	`∑nic
("This Update_dirÖart shouldÇever beÉntered!\n");

5324 
dˇche2_ac˚ss
++;

5325 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

5326 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

5327 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5328 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

5329 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

5331 
blk
->
evî_touch
 = 1;

5332 if(
cﬁÀ˘_°©s
)

5334 
˝_dú
->
hôs
 ++;

5335 
˝_dú
->
ack_ª˚ived
 ++;

5336 
˝_dú
->
dú_ac˚ss
 ++;

5339 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

5341 if(!
blk
->
±r_cur_evít
[
block_off£t
]Ë
	`∑nic
("DIR (WB):ÖarentÉvent missing");

5342 if(
blk
->
±r_cur_evít
[
block_off£t
]->
›î©i⁄
 !
MISS_READ
 && blk->±r_cur_evít[block_off£t]->›î©i⁄ !
MISS_WRITE
 && blk->±r_cur_evít[block_off£t]->›î©i⁄ !
WRITE_UPDATE
 && blk->±r_cur_evít[block_off£t]->›î©i⁄ !
WAIT_MEM_READ
)

5343 
	`∑nic
("DIR (WB):Åhe original message has invalid operation");

5345 if((
blk
->
±r_cur_evít
[
block_off£t
])->
›î©i⁄
 =
WAIT_MEM_READ
)

5347 (
blk
->
±r_cur_evít
[
block_off£t
])->
ödividuÆ_chûdCou¡
[block_offset] --;

5348 
blk
->
±r_cur_evít
[
block_off£t
]->
chûdCou¡
--;

5350 if(
block_off£t
 =
	`blockoff£t
(
blk
->
±r_cur_evít
[block_off£t]->
addr
))

5351 
blk
->
±r_cur_evít
[
block_off£t
]->
chûdCou¡
--;

5353 if((
blk
->
±r_cur_evít
[
block_off£t
])->
›î©i⁄
 =
WAIT_MEM_READ
 && (blk->±r_cur_evít[block_off£t])->
ödividuÆ_chûdCou¡
[block_offset] == 0)

5355 (
blk
->
±r_cur_evít
[
block_off£t
])->
sh¨î_num
 --;

5356 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_dúty
[block_offset] = -1;

5357 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][0] = 0;

5358 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][1] = 0;

5359 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][2] = 0;

5360 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][3] = 0;

5362 if((
blk
->
±r_cur_evít
[
block_off£t
])->
sh¨î_num
 != 0)

5364 
	`‰ì_evít
(
evít
);

5369 if(
blk
->
±r_cur_evít
[
block_off£t
]->
chûdCou¡
 == 0)

5371 
ﬁd_boff£t
 = 
block_off£t
;

5372 
block_off£t
 = 
	`blockoff£t
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
);

5373 
cou¡î_t
 
°¨tCy˛e
 = 
sim_cy˛e
;

5374 
ãmpID
 = 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->tempID;

5375 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5376 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5378 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 =
WAIT_MEM_READ
)

5381 if(!
blk
->
Iswb_to_mem
 && (blk->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& (blk->°©u†& 
CACHE_BLK_VALID
))

5383 
œt
 = 
˝_dú
->
	`blk_ac˚ss_‚
(
Wrôe
, 
	`CACHE_BADDR
(˝_dú,
evít
->
addr
), cp_dú->
bsize
, 
NULL
, 
sim_cy˛e
,Évít->
ãmpID
);

5384 if(
cﬁÀ˘_°©s
)

5385 
ˇche_dl2
->
wrôebacks
 ++;

5388 
i
=0, 
m
=0, 
ôî©i⁄
 = 1;

5389 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

5390 
ôî©i⁄
 = iteration * 2;

5391 
m
=0; m<
ôî©i⁄
; m++)

5392 
blk
->
dú_°©e
[
m
] = 
DIR_STABLE
;

5394 
èg_dú
 = 
	`CACHE_TAG
(
˝_dú
, 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
);

5395 
blk
->
ègid
.
èg
 = 
èg_dú
;

5396 
blk
->
ègid
.
thªadid
 = blk->
±r_cur_evít
[
ﬁd_boff£t
]->
ãmpID
;

5397 
blk
->
addr
 = blk->
±r_cur_evít
[
ﬁd_boff£t
]->addr;

5398 
blk
->
°©us
 = 
CACHE_BLK_VALID
;

5399 
blk
->
Iswb_to_mem
 = 0;

5402 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

5403 
	`upd©e_way_li°
(&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

5404 
˝_dú
->
œ°_èg£tid
.
èg
 = 0;

5405 
˝_dú
->
œ°_èg£tid
.
thªadid
 = 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
ãmpID
;

5406 
˝_dú
->
œ°_blk
 = 
blk
;

5408 i‡(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
ud©a
)

5409 *(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
ud©a
Ëblk->
u£r_d©a
;

5410 
blk
->
ªady
 = 
sim_cy˛e
;

5411 i‡(
˝_dú
->
hsize
)

5412 
	`lök_hèb_ít
(
˝_dú
, &˝_dú->
£ts
[
£t_dú
], 
blk
);

5415 
	`upd©e_L2_mshª¡ry
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
, 
sim_cy˛e
, blk->±r_cur_evít[ﬁd_boff£t]->
mshr_time
);

5417 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
L2_PREFETCH
)

5419 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5420 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5421 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5422 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5423 
blk
->
dú_dúty
[
block_off£t
] = -1;

5424 
	`‰ì_evít
(
evít
);

5425 
	`‰ì_evít
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5428 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_IL1
)

5430 
∑ckë_size
 = 
d©a_∑ckë_size
;

5431 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_IL1
;

5432 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

5433 
blk
->
dú_dúty
[
block_off£t
] = -1;

5434 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5435 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5436 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5437 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5438 
°¨tCy˛e
 = 
sim_cy˛e
;

5440 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_READ
)

5442 
∑ckë_size
 = 
d©a_∑ckë_size
;

5443 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

5444 
blk
->
dú_dúty
[
block_off£t
] = -1;

5445 #ifde‡
LOCK_CACHE_REGISTER


5447 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
°‹e_c⁄d
 =
MY_LDL_L
)

5448 
	`LockRege°îCheck
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5450 i‡(!
	`md_ãxt_addr
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
, blk->±r_cur_evít[ﬁd_boff£t]->
ãmpID
))

5452 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

5453 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5457 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

5458 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5459 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5460 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5461 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5464 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

5466 
∑ckë_size
 = 
d©a_∑ckë_size
;

5467 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITE
;

5468 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5469 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5470 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5474 
∑ckë_size
 = 
mëa_∑ckë_size
;

5475 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

5476 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5477 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5478 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5481 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_READ
)

5483 
∑ckë_size
 = 
d©a_∑ckë_size
;

5484 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

5485 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

5486 
blk
->
dú_dúty
[
block_off£t
] = -1;

5487 #ifde‡
LOCK_CACHE_REGISTER


5489 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
°‹e_c⁄d
 =
MY_LDL_L
)

5490 
	`LockRege°îCheck
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5493 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
WRITE_UPDATE
)

5495 
∑ckë_size
 = 
mëa_∑ckë_size
;

5496 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

5497 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5498 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5500 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

5502 
∑ckë_size
 = 
d©a_∑ckë_size
;

5503 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITE
;

5504 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5505 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5508 
	`∑nic
("DIR UD:áll state optionsÉxhausted.");

5510 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
°¨tCy˛e
 = startCycle;

5511 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
§c1
 = blk->±r_cur_evít[ﬁd_boff£t]->
des1
;

5512 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
§c2
 = blk->±r_cur_evít[ﬁd_boff£t]->
des2
;

5513 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
des1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

5514 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
des2
 = 
ãmpID
%
mesh_size
;

5515 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
¥o˚ssögD⁄e
 = 0;

5516 
	`scheduÀThroughNëw‹k
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
], blk->±r_cur_evít[ﬁd_boff£t]->
°¨tCy˛e
, 
∑ckë_size
, 
vc
);

5517 
	`dú_evítq_ö£π
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5518 
blk
->
±r_cur_evít
[
ﬁd_boff£t
] = 
NULL
;

5519 
	`‰ì_evít
(
evít
);

5524 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] &= ~(()1<<(tempID%64));

5525 
	`‰ì_evít
(
evít
);

5530 
	`∑nic
("DIR: We mainting cache inclusionáccross cache hierarchy. There cannot beá miss for Update Dir");

5534 
WRITE_BACK
 :

5535 
dˇche2_ac˚ss
++;

5536 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

5537 
evít
->
∑ª¡_›î©i⁄
 =Évít->
›î©i⁄
;

5538 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5539 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

5540 if(
	`födCacheSètus
(
˝_dú
, 
£t_dú
, 
èg_dú
, 
hödex_dú
, &
blk
))

5542 if(
cﬁÀ˘_°©s
)

5543 
˝_dú
->
d©a_ac˚ss
 ++;

5545 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

5546 
blk
->
evî_dúty
 = 1;

5547 
blk
->
evî_touch
 = 1;

5548 #ifde‡
NON_SILENT_DROP


5550 if(
blk
->
dú_°©e
[
block_off£t
] =
DIR_TRANSITION
)

5552 
cou¡î_t
 
°¨tCy˛e
 = 
sim_cy˛e
;

5553 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_SHARED
 || blk->dú_blk_°©e[block_off£t] =
MESI_INVALID
Ë
	`∑nic
("DIR: The directory isÇot in dirty state");

5554 if(!
blk
->
±r_cur_evít
[
block_off£t
]Ë
	`∑nic
("DIR (WB):ÖarentÉvent missing");

5555 if(
blk
->
±r_cur_evít
[
block_off£t
]->
›î©i⁄
 !
MISS_READ
 && blk->±r_cur_evít[block_off£t]->›î©i⁄ !
MISS_WRITE
 && blk->±r_cur_evít[block_off£t]->›î©i⁄ !
WRITE_UPDATE
 && blk->±r_cur_evít[block_off£t]->›î©i⁄ !
WAIT_MEM_READ
)

5556 
	`∑nic
("DIR (WB):Åhe original message has invalid operation");

5559 if(
blk
->
±r_cur_evít
[
block_off£t
]->
›î©i⁄
 =
WAIT_MEM_READ
)

5562 (
blk
->
±r_cur_evít
[
block_off£t
])->
ödividuÆ_chûdCou¡
[block_offset] --;

5563 (
blk
->
±r_cur_evít
[
block_off£t
])->
chûdCou¡
 --;

5564 if((
blk
->
±r_cur_evít
[
block_off£t
])->
ödividuÆ_chûdCou¡
[block_offset] == 0)

5566 (
blk
->
±r_cur_evít
[
block_off£t
])->
sh¨î_num
 --;

5567 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_dúty
[block_offset] = -1;

5568 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][0] = 0;

5569 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][1] = 0;

5570 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][2] = 0;

5571 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][3] = 0;

5573 if((
blk
->
±r_cur_evít
[
block_off£t
])->
sh¨î_num
 != 0)

5575 
	`‰ì_evít
(
evít
);

5580 if(
block_off£t
 !
	`blockoff£t
(
blk
->
±r_cur_evít
[block_off£t]->
addr
Ë&& blk->±r_cur_evít[block_off£t]->
›î©i⁄
 !
WAIT_MEM_READ
)

5582 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_dúty
[block_offset] = -1;

5583 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][0] = 0;

5584 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][1] = 0;

5585 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][2] = 0;

5586 ((
blk
->
±r_cur_evít
[
block_off£t
])->
blk_dú
)->
dú_sh¨î
[block_offset][3] = 0;

5587 
	`‰ì_evít
(
evít
);

5591 
ãmpID
 = 
blk
->
±r_cur_evít
[
block_off£t
]->tempID;

5592 
ﬁd_boff£t
 = 
block_off£t
;

5593 
block_off£t
 = 
	`blockoff£t
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
);

5594 
blk
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

5595 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5597 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 =
WAIT_MEM_READ
)

5600 if(!
blk
->
Iswb_to_mem
)

5602 
œt
 = 
˝_dú
->
	`blk_ac˚ss_‚
(
Wrôe
, 
	`CACHE_BADDR
(˝_dú,
evít
->
addr
), cp_dú->
bsize
, 
NULL
, 
sim_cy˛e
,Évít->
ãmpID
);

5603 if(
cﬁÀ˘_°©s
)

5604 
ˇche_dl2
->
wrôebacks
 ++;

5606 
èg_dú
 = 
	`CACHE_TAG
(
˝_dú
, 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
);

5607 
i
=0, 
m
=0, 
ôî©i⁄
 = 1;

5608 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

5609 
ôî©i⁄
 = iteration * 2;

5610 
m
=0; m<
ôî©i⁄
; m++)

5611 
blk
->
dú_°©e
[
m
] = 
DIR_STABLE
;

5612 
blk
->
ègid
.
èg
 = 
èg_dú
;

5613 
blk
->
ègid
.
thªadid
 = blk->
±r_cur_evít
[
ﬁd_boff£t
]->
ãmpID
;

5614 
blk
->
addr
 = blk->
±r_cur_evít
[
ﬁd_boff£t
]->addr;

5615 
blk
->
°©us
 = 
CACHE_BLK_VALID
;

5616 
blk
->
Iswb_to_mem
 = 0;

5619 i‡(
blk
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

5620 
	`upd©e_way_li°
(&
˝_dú
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

5621 
˝_dú
->
œ°_èg£tid
.
èg
 = 0;

5622 
˝_dú
->
œ°_èg£tid
.
thªadid
 = 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
ãmpID
;

5623 
˝_dú
->
œ°_blk
 = 
blk
;

5625 i‡(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
ud©a
)

5626 *(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
ud©a
Ëblk->
u£r_d©a
;

5627 
blk
->
ªady
 = 
sim_cy˛e
;

5628 i‡(
˝_dú
->
hsize
)

5629 
	`lök_hèb_ít
(
˝_dú
, &˝_dú->
£ts
[
£t_dú
], 
blk
);

5632 
	`upd©e_L2_mshª¡ry
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
, 
sim_cy˛e
, blk->±r_cur_evít[ﬁd_boff£t]->
mshr_time
);

5634 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
L2_PREFETCH
)

5636 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5637 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5638 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5639 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5640 
blk
->
dú_dúty
[
block_off£t
] = -1;

5641 
	`‰ì_evít
(
evít
);

5642 
	`‰ì_evít
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5646 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_IL1
)

5648 
∑ckë_size
 = 
d©a_∑ckë_size
;

5649 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_IL1
;

5650 
blk
->
dú_dúty
[
block_off£t
] = -1;

5651 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

5652 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5653 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5654 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5655 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5656 
°¨tCy˛e
 = 
sim_cy˛e
;

5658 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_READ
)

5660 
∑ckë_size
 = 
d©a_∑ckë_size
;

5661 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

5662 
blk
->
dú_dúty
[
block_off£t
] = -1;

5663 #ifde‡
LOCK_CACHE_REGISTER


5665 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
°‹e_c⁄d
 =
MY_LDL_L
)

5666 
	`LockRege°îCheck
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5668 i‡(!
	`md_ãxt_addr
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
addr
, blk->±r_cur_evít[ﬁd_boff£t]->
ãmpID
))

5670 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

5671 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5675 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

5676 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5677 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5678 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5679 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5682 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

5684 
∑ckë_size
 = 
d©a_∑ckë_size
;

5685 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITE
;

5686 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5687 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5688 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5692 
∑ckë_size
 = 
mëa_∑ckë_size
;

5693 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

5694 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5695 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5696 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

5699 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_READ
)

5701 
∑ckë_size
 = 
d©a_∑ckë_size
;

5702 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

5703 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

5704 
blk
->
dú_dúty
[
block_off£t
] = -1;

5705 #ifde‡
LOCK_CACHE_REGISTER


5707 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
°‹e_c⁄d
 =
MY_LDL_L
)

5708 
	`LockRege°îCheck
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5711 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
WRITE_UPDATE
)

5713 
∑ckë_size
 = 
mëa_∑ckë_size
;

5714 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

5715 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5716 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5718 if(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
∑ª¡_›î©i⁄
 =
MISS_WRITE
)

5720 
∑ckë_size
 = 
d©a_∑ckë_size
;

5721 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
›î©i⁄
 = 
ACK_DIR_WRITE
;

5722 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

5723 
blk
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

5726 
	`∑nic
("DIR WB:áll state optionsÉxhausted.");

5728 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
°¨tCy˛e
 = startCycle;

5729 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
§c1
 = blk->±r_cur_evít[ﬁd_boff£t]->
des1
;

5730 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
§c2
 = blk->±r_cur_evít[ﬁd_boff£t]->
des2
;

5731 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
des1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

5732 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
des2
 = 
ãmpID
%
mesh_size
;

5733 
blk
->
±r_cur_evít
[
ﬁd_boff£t
]->
¥o˚ssögD⁄e
 = 0;

5734 
	`scheduÀThroughNëw‹k
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
], blk->±r_cur_evít[ﬁd_boff£t]->
°¨tCy˛e
, 
∑ckë_size
, 
vc
);

5735 
	`dú_evítq_ö£π
(
blk
->
±r_cur_evít
[
ﬁd_boff£t
]);

5736 
blk
->
±r_cur_evít
[
ﬁd_boff£t
] = 
NULL
;

5737 
	`‰ì_evít
(
evít
);

5741 #ifde‡
PREFETCH_OPTI


5742 if(
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
])

5744 
blk
->
dú_¥e„tch
[
block_off£t
][
ãmpID
] = 0;

5745 
blk
->
dú_¥e„tch_num
[
block_off£t
] --;

5746 if(
blk
->
dú_¥e„tch_num
[
block_off£t
] < 0)

5747 
	`∑nic
("prefetchÇumber doesÇot match!\n");

5748 #ifde‡
SILENT_DROP


5749 
	`∑nic
("prefetch canÇot be write back!\n");

5752 if(
blk
->
dú_¥e„tch_num
[
block_off£t
])

5753 
blk
->
¥e„tch_modifõd
[
block_off£t
] = 1;

5756 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

5758 #ifde‡
EUP_NETWORK


5759 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_SHARED
)

5760 
blk
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] &~(()1<<(
evít
->tempID%64));

5763 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5764 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5765 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5766 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5767 
blk
->
dú_dúty
[
block_off£t
] = -1;

5770 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_SHARED
)

5771 
	`∑nic
("DIR: L2 cache blockÇot in modified state during WB");

5772 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5773 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5774 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5775 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5776 
blk
->
dú_dúty
[
block_off£t
] = -1;

5781 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_SHARED
)

5782 
	`∑nic
("DIR: L2 cache blockÇot in modified state during WB");

5783 
blk
->
dú_sh¨î
[
block_off£t
][0] = 0;

5784 
blk
->
dú_sh¨î
[
block_off£t
][1] = 0;

5785 
blk
->
dú_sh¨î
[
block_off£t
][2] = 0;

5786 
blk
->
dú_sh¨î
[
block_off£t
][3] = 0;

5787 
blk
->
dú_dúty
[
block_off£t
] = -1;

5789 
	`‰ì_evít
(
evít
);

5794 
	`∑nic
("DIR: We mainting cache inclusionáccross cache hierarchy. There cannot beá miss for WB");

5798 
INV_MSG_READ
 :

5799 
dˇche_ac˚ss
++;

5800 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

5801 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5802 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

5803 
cou¡
 = (
evít
->
des1
-
MEM_LOC_SHIFT
Ë* 
mesh_size
 +Évít->
des2
;

5804 
˝1
 = 
ˇche_dl1
[
cou¡
];

5805 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

5806 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

5807 if(
cﬁÀ˘_°©s
)

5808 
˝1
->
InvÆid_Ród_ª˚ived
 ++;

5809 #ifde‡
SILENT_DROP


5810 
∑ckë_size
 = 
mëa_∑ckë_size
;

5811 
evít
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

5813 #ifde‡
EXCLUSIVE_OPT


5814 
evít
->
ex˛usive_a·î_wb
 = 0;

5816 
evít
->
l1LöeU£Sètus
 = 0;

5817 
blk1
 = 
˝1
->
£ts
[
£t
].
way_hód
; blk1; blk1 =blk1->
way_√xt
)

5819 i‡((
blk1
->
ègid
.
èg
 =ègË&& (blk1->
°©us
 & 
CACHE_BLK_VALID
))

5821 if(
blk1
->
°©e
 =
MESI_MODIFIED
)

5823 
∑ckë_size
 = 
d©a_∑ckë_size
;

5824 
evít
->
›î©i⁄
 = 
ACK_MSG_READ
;

5825 if(
cﬁÀ˘_°©s
)

5826 
˝1
->
wb_cohîí˚_r
 ++;

5827 if(
evít
->
d©a_ª∂y
 == 0)

5828 
tŸÆ_ex˛usive_¸oss
 ++;

5830 if(
blk1
->
°©e
 =
MESI_EXCLUSIVE
)

5832 
∑ckë_size
 = 
mëa_∑ckë_size
;

5833 
evít
->
›î©i⁄
 = 
ACK_MSG_READUPDATE
;

5839 if((
blk1
->
°©us
 & 
CACHE_BLK_VALID
Ë&& blk1->
°©e
 =
MESI_EXCLUSIVE
)

5840 
tŸÆL1LöeExlInv
++;

5842 
blk1
->
°©e
 = 
MESI_SHARED
;

5843 
blk1
->
°©us
 = 
CACHE_BLK_VALID
;

5844 if(
cﬁÀ˘_°©s
)

5845 
˝1
->
InvÆid_Ród_ª˚ived_hôs
 ++;

5846 
evít
->
l1LöeU£Sètus
 = !
blk1
->
blkImdtOp
;

5850 #ifde‡
NON_SILENT_DROP


5851 if(!
blk1
)

5853 
	`‰ì_evít
(
evít
);

5857 #ifde‡
EXCLUSIVE_OPT


5858 if(!
blk1
)

5859 
evít
->
ex˛usive_a·î_wb
 = 1;

5861 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

5863 #ifde‡
INV_ACK_CON


5864 if(
evít
->
d©a_ª∂y
 =0 && (evít->
§c1
*
mesh_size
+evít->
§c2
 !evít->
des1
*mesh_size+evít->
des2
))

5866 
≥ndög_övÆid©i⁄
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
] --;

5867 if(
≥ndög_övÆid©i⁄
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
] == 0)

5869 
≥ndög_övÆid_cy˛es
 = 
sim_cy˛e
 - 
≥ndög_övÆid_°¨t_cy˛es
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
];

5871 
	`‰ì_evít
(
evít
);

5876 
evít
->
§c1
 +evít->
des1
;

5877 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

5878 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

5879 
evít
->
§c2
 +evít->
des2
;

5880 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

5881 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

5882 
evít
->
¥o˚ssögD⁄e
 = 0;

5883 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

5885 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

5887 
	`dú_evítq_ö£π
(
evít
);

5890 
INV_MSG_WRITE
 :

5891 
dˇche_ac˚ss
++;

5892 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

5893 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

5894 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

5895 
cou¡
 = (
evít
->
des1
-
MEM_LOC_SHIFT
Ë* 
mesh_size
 +Évít->
des2
;

5896 
˝1
 = 
ˇche_dl1
[
cou¡
];

5897 
èg
 = 
	`CACHE_TAG
(
˝1
,
addr
);

5898 
£t
 = 
	`CACHE_SET
(
˝1
,
addr
);

5899 
	`£ndLSQInv
(
addr
, 
cou¡
);

5900 if(
cﬁÀ˘_°©s
)

5901 
˝1
->
InvÆid_wrôe_ª˚ived
 ++;

5902 
sh¨ed_Êag
 = 0;

5903 #ifde‡
SILENT_DROP


5904 
∑ckë_size
 = 
mëa_∑ckë_size
;

5905 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

5907 
evít
->
l1LöeU£Sètus
 = 0;

5908 
blk1
 = 
˝1
->
£ts
[
£t
].
way_hód
; blk1; blk1 =blk1->
way_√xt
)

5910 i‡((
blk1
->
ègid
.
èg
 =ègË&& (blk1->
°©us
 & 
CACHE_BLK_VALID
))

5912 if(
blk1
->
°©e
 =
MESI_MODIFIED
)

5914 
∑ckë_size
 = 
d©a_∑ckë_size
;

5915 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITE
;

5916 if(
cﬁÀ˘_°©s
)

5917 
˝1
->
wb_cohîí˚_w
 ++;

5921 
∑ckë_size
 = 
mëa_∑ckë_size
;

5922 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

5923 
sh¨ed_Êag
 = 1;

5924 if(
cﬁÀ˘_°©s
 && 
blk1
->
°©e
 =
MESI_SHARED
)

5925 
˝1
->
s_to_i
 ++;

5926 if(
cﬁÀ˘_°©s
 && 
blk1
->
°©e
 =
MESI_EXCLUSIVE
)

5927 
˝1
->
e_to_i
 ++;

5930 if(
cﬁÀ˘_°©s
)

5931 
˝1
->
InvÆid_wrôe_ª˚ived_hôs
 ++;

5933 if((
blk1
->
°©us
 & 
CACHE_BLK_VALID
Ë&& blk1->
°©e
 =
MESI_EXCLUSIVE
)

5934 
tŸÆL1LöeExlInv
++;

5936 
m
 = 0;

5937 
m
=0;m<8;m++)

5938 if(
blk1
->
W‹dU£Fœg
[
m
])

5939 
blk1
->
W‹dCou¡
 ++;

5940 if(
evít
->
∑ª¡
->
›î©i⁄
 =
WAIT_MEM_READ
)

5941 
	`°©s_do
(
blk1
->
addr
&(~(
ˇche_dl1
[0]->
bsize
-1)), blk1->
RódCou¡
, blk1->
WrôeCou¡
, blk1->
W‹dCou¡
, blk1->
Ty≥
, 
cou¡
);

5943 
	`°©s_do
(
blk1
->
addr
&(~(
ˇche_dl1
[0]->
bsize
-1)), blk1->
RódCou¡
, blk1->
WrôeCou¡
, blk1->
W‹dCou¡
, 
SHARED_READ_WRITE
, 
cou¡
);

5944 
blk1
->
RódCou¡
 = 0;

5945 
blk1
->
WrôeCou¡
 = 0;

5946 
blk1
->
W‹dCou¡
 = 0;

5947 
m
=0;m<8;m++)

5948 
blk1
->
W‹dU£Fœg
[
m
] = 0;

5950 
blk1
->
°©e
 = 
MESI_INVALID
;

5951 
blk1
->
°©us
 = 0;

5952 
evít
->
l1LöeU£Sètus
 = !
blk1
->
blkImdtOp
;

5953 if(
blk1
->
blkAlocRós⁄
 =
LINE_PREFETCH
)

5955 if(
blk1
->
blkImdtOp
)

5956 
tŸÆL1LöePªfU£
++;

5958 
tŸÆL1LöePªfNoU£
++;

5960 if(
blk1
->
blkAlocRós⁄
 =
LINE_READ
)

5962 if(
blk1
->
blkImdtOp
)

5963 
tŸÆL1LöeRódU£
++;

5965 
tŸÆL1LöeRódNoU£
++;

5967 i‡(
blk1
->
blkAlocRós⁄
 =
LINE_WRITE
)

5969 if(
blk1
->
blkImdtOp
)

5970 
tŸÆL1LöeWrôeU£
++;

5972 
tŸÆL1LöeWrôeNoU£
++;

5977 #ifde‡
NON_SILENT_DROP


5978 if(!
blk1
)

5980 
m©ch
;

5981 if((
m©ch
=
	`MSHR_block_check
(
˝1
->
mshr
, 
evít
->
addr
, cp1->
£t_shi·
)))

5983 if(
˝1
->
mshr
->
mshrE¡ry
[
m©ch
-1].
evít
->
›î©i⁄
 !
WRITE_UPDATE
)

5985 if(
˝1
->
mshr
->
mshrE¡ry
[
m©ch
-1].
evít
->
›î©i⁄
 =
NACK
 && (˝1->mshr->mshrE¡ry[m©ch-1].evít->
∑ª¡_›î©i⁄
 =
WRITE_UPDATE
))

5987 
∑ckë_size
 = 
mëa_∑ckë_size
;

5988 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

5992 
	`‰ì_evít
(
evít
);

5998 
∑ckë_size
 = 
mëa_∑ckë_size
;

5999 
evít
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

6004 
	`‰ì_evít
(
evít
);

6009 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

6011 #ifde‡
INV_ACK_CON


6012 if(
evít
->
d©a_ª∂y
 =0 && (evít->
§c1
*
mesh_size
+evít->
§c2
 !evít->
des1
*mesh_size+evít->
des2
))

6014 
≥ndög_övÆid©i⁄
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
] --;

6015 if(
≥ndög_övÆid©i⁄
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
] == 0)

6017 
≥ndög_övÆid_cy˛es
 = 
sim_cy˛e
 - 
≥ndög_övÆid_°¨t_cy˛es
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
];

6019 
	`‰ì_evít
(
evít
);

6024 
evít
->
§c1
 +evít->
des1
;

6025 
evít
->
des1
 =Évít->
§c1
 -Évent->des1;

6026 
evít
->
§c1
 =Évít->§c1 -Évít->
des1
;

6027 
evít
->
§c2
 +evít->
des2
;

6028 
evít
->
des2
 =Évít->
§c2
 -Évent->des2;

6029 
evít
->
§c2
 =Évít->§c2 -Évít->
des2
;

6030 
evít
->
¥o˚ssögD⁄e
 = 0;

6031 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6033 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

6035 
	`dú_evítq_ö£π
(
evít
);

6038 
ACK_MSG_READ
 :

6039 
ACK_MSG_READUPDATE
 :

6040 
dˇche2_ac˚ss
++;

6041 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

6042 
Ród≥ndög
 = 0;

6043 #ifde‡
SERIALIZATION_ACK


6044 if(
evít
->
blk_dú
->
≥ndögInvAck
[
block_off£t
])

6046 #ifde‡
READ_PERMIT


6047 if(
evít
->
blk_dú
->
RódPídög
[
block_off£t
] == -1)

6049 
evít
->
∑ª¡
->
blk_dú
->
RódPídög
[
block_off£t
] =Évít->
ãmpID
;

6050 
evít
->
∑ª¡
->
blk_dú
->
RódPídög_evít
[
block_off£t
] =Évent->parent;

6051 
Ród≥ndög
 = 1;

6054 
evít
->
whí
 +
RETRY_TIME
;

6055 
	`dú_evítq_ö£π
(
evít
);

6060 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

6061 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

6062 if(
evít
->
blk_dú
->
dú_°©e
[
block_off£t
] =
DIR_STABLE
)

6063 
	`∑nic
("DIR:áfterÅheÑeceipt of ACK msg, directoryÇot inÅransient state");

6064 (
evít
->
∑ª¡
)->
chûdCou¡
 --;

6065 if(
cﬁÀ˘_°©s
)

6068 if(
evít
->
›î©i⁄
 =
ACK_MSG_READUPDATE
)

6069 
ˇche_dl2
->
dú_ac˚ss
 ++;

6071 
ˇche_dl2
->
d©a_ac˚ss
 ++;

6073 if((
evít
->
∑ª¡
)->
chûdCou¡
 == 0)

6075 
DIRECTORY_EVENT
 *
∑ª¡_evít
 = 
evít
->
∑ª¡
;

6076 
ãmpID
 = 
∑ª¡_evít
->tempID;

6077 if((
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] =
MESI_SHARED
)

6078 
	`∑nic
("DIR: L2 cacheÜine couldÇot be in shared state");

6080 (
∑ª¡_evít
->
blk_dú
)->
±r_cur_evít
[
block_off£t
] = 
NULL
;

6081 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = -1;

6082 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] |= ()1<<(tempID%64);

6083 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

6084 if(
evít
->
›î©i⁄
 =
ACK_MSG_READ
)

6085 (
∑ª¡_evít
->
blk_dú
)->
°©us
 |
CACHE_BLK_DIRTY
;

6087 if(
evít
->
l1LöeU£Sètus
)

6089 
dñayL2RódReqDúty
 +
evít
->
whí
 -Évít->
∑ª¡
->when;

6090 
tŸÆL2RódReqDútyWT
++;

6093 #ifde‡
READ_PERMIT


6094 if(!
Ród≥ndög
)

6097 (
∑ª¡_evít
->
blk_dú
)->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6099 
	`time•a˚
(
sim_cy˛e
 - 
∑ª¡_evít
->
blk_dú
->
ex˛usive_time
[
block_off£t
], 1);

6102 #ifde‡
PREFETCH_OPTI


6103 if(
∑ª¡_evít
->
›î©i⁄
 =
READ_COHERENCE_UPDATE
)

6105 if(
evít
->
›î©i⁄
 =
ACK_MSG_READUPDATE
)

6107 if(
∑ª¡_evít
->
blk_dú
->
¥e„tch_modifõd
[
block_off£t
] ||Ö¨ít_evít->blk_dú->
¥e„tch_övÆid©e
[block_offset])

6109 
∑ckë_size
 = 
d©a_∑ckë_size
;

6110 
∑ª¡_evít
->
›î©i⁄
 = 
READ_META_REPLY_SHARED
;

6111 
RódED©aRïly
 ++;

6115 
∑ckë_size
 = 
mëa_∑ckë_size
;

6116 
∑ª¡_evít
->
›î©i⁄
 = 
READ_META_REPLY_SHARED
;

6117 
RódEMëaRïly
 ++;

6122 
∑ckë_size
 = 
d©a_∑ckë_size
;

6123 
∑ª¡_evít
->
›î©i⁄
 = 
READ_DATA_REPLY_SHARED
;

6124 
RódMRïly
 ++;

6126 if(
∑ª¡_evít
->
blk_dú
->
dú_¥e„tch_num
[
block_off£t
] == 0)

6128 
∑ª¡_evít
->
blk_dú
->
¥e„tch_övÆid©e
[
block_off£t
] = 0;

6129 
∑ª¡_evít
->
blk_dú
->
¥e„tch_modifõd
[
block_off£t
] = 0;

6134 
∑ckë_size
 = 
d©a_∑ckë_size
;

6135 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

6138 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

6139 
∑ckë_size
 = 
d©a_∑ckë_size
;

6141 
∑ª¡_evít
->
ªqAckTime
 = 
sim_cy˛e
;

6142 
∑ª¡_evít
->
§c1
 = 
evít
->
des1
;

6143 
∑ª¡_evít
->
§c2
 = 
evít
->
des2
;

6144 
∑ª¡_evít
->
des1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

6145 
∑ª¡_evít
->
des2
 = 
ãmpID
%
mesh_size
;

6146 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

6147 
∑ª¡_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6148 
∑ª¡_evít
->
≥ndögInvAck
 = 0;

6149 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
, 
sim_cy˛e
, 
∑ckë_size
, 
vc
);

6150 #ifde‡
LOCK_CACHE_REGISTER


6152 if(
∑ª¡_evít
->
°‹e_c⁄d
 =
MY_LDL_L
)

6153 
	`LockRege°îCheck
(
∑ª¡_evít
);

6155 
	`‰ì_evít
(
evít
);

6156 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

6157 #ifde‡
READ_PERMIT


6161 
	`‰ì_evít
(
evít
);

6168 #ifde‡
LOCK_CACHE_REGISTER


6169 
ACK_MSG_UPDATE
:

6170 
dˇche2_ac˚ss
++;

6171 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

6172 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

6173 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

6174 if(
evít
->
∑ª¡
->
blk_dú
->
dú_°©e
[
block_off£t
] =
DIR_STABLE
)

6175 
	`∑nic
("DIR:áfterÅheÑeceipt of ACK msg, directoryÇot inÅransient state");

6176 (
evít
->
∑ª¡
)->
chûdCou¡
 --;

6178 if(
cﬁÀ˘_°©s
)

6180 
ˇche_dl2
->
ack_ª˚ived
 ++;

6181 
ˇche_dl2
->
dú_ac˚ss
 ++;

6183 if((
evít
->
∑ª¡
)->
chûdCou¡
 == 0)

6186 
cou¡î_t
 
°¨tCy˛e
 = 
sim_cy˛e
;

6187 
DIRECTORY_EVENT
 *
∑ª¡_evít
 = 
evít
->
∑ª¡
;

6188 
ãmpID
 = 
∑ª¡_evít
->tempID;

6190 (
∑ª¡_evít
->
blk_dú
)->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6191 (
∑ª¡_evít
->
blk_dú
)->
±r_cur_evít
[
block_off£t
] = 
NULL
;

6194 
∑ckë_size
 = 
mëa_∑ckë_size
;

6195 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

6196 
∑ª¡_evít
->
ªqAckTime
 = 
sim_cy˛e
;

6197 
∑ª¡_evít
->
°¨tCy˛e
 = startCycle;

6198 
∑ª¡_evít
->
§c1
 = 
evít
->
des1
;

6199 
∑ª¡_evít
->
§c2
 = 
evít
->
des2
;

6200 
∑ª¡_evít
->
des1
 =Ö¨ít_evít->
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

6201 
∑ª¡_evít
->
des2
 =Ö¨ít_evít->
ãmpID
%
mesh_size
;

6202 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

6203 
∑ª¡_evít
->
≥ndögInvAck
 = 0;

6204 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
,Ö¨ít_evít->
°¨tCy˛e
, 
∑ckë_size
, 
vc
);

6205 #ifde‡
LOCK_CACHE_REGISTER


6207 if(
∑ª¡_evít
->
°‹e_c⁄d
 =
MY_LDL_L
)

6208 
	`LockRege°îCheck
(
∑ª¡_evít
);

6210 
	`‰ì_evít
(
evít
);

6212 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

6215 
	`‰ì_evít
(
evít
);

6218 
ACK_MSG_WRITEUPDATE
:

6219 
ACK_MSG_WRITE
 :

6220 #ifde‡
SERIALIZATION_ACK


6221 
övCﬁÀ˘Sètus
 = 
	`övAckUpd©e
((
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
,Évít->
addr
,Évít->
ãmpID
,Évít->
isSyncAc˚ss
);

6222 if(
övCﬁÀ˘Sètus
 == 1)

6224 
evít
->
blk_dú
->
≥ndögInvAck
[
block_off£t
] = 0;

6225 #ifde‡
READ_PERMIT


6226 if(
evít
->
blk_dú
->
RódPídög
[
block_off£t
] != -1)

6228 
evít
->
blk_dú
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6229 
DIRECTORY_EVENT
 *
p_evít
;

6230 
p_evít
 = 
evít
->
blk_dú
->
RódPídög_evít
[
block_off£t
];

6231 if(
p_evít
->
ãmpID
 !
evít
->
blk_dú
->
RódPídög
[
block_off£t
])

6232 
	`∑nic
("Event isÇotÅhe same in Early ReadÖermit!\n");

6233 
p_evít
->
›î©i⁄
 = 
ACK_DIR_READ_SHARED
;

6234 
p_evít
->
§c1
 = 
evít
->
des1
;

6235 
p_evít
->
§c2
 = 
evít
->
des2
;

6236 
p_evít
->
des1
 =Ö_evít->
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

6237 
p_evít
->
des2
 =Ö_evít->
ãmpID
%
mesh_size
;

6238 
p_evít
->
¥o˚ssögD⁄e
 = 0;

6239 
p_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6240 
p_evít
->
≥ndögInvAck
 = 0;

6241 
	`scheduÀThroughNëw‹k
(
p_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
vc
);

6242 
	`dú_evítq_ö£π
(
p_evít
);

6243 
evít
->
blk_dú
->
RódPídög
[
block_off£t
] = -1;

6245 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

6247 #ifde‡
EUP_NETWORK


6248 if(
evít
->
∑ª¡
->
óæy_Êag
 == 1)

6250 if(
evít
->
addr
 =evít->
∑ª¡
->addr)

6251 
	`‰ì_evít
(
evít
->
∑ª¡
);

6257 if(
övCﬁÀ˘Sètus
 != 0)

6259 
	`‰ì_evít
(
evít
);

6263 
dˇche2_ac˚ss
++;

6264 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche2_ac˚ss
++;

6265 if(
	`md_ãxt_addr
(
addr
, 
ãmpID
))

6266 
	`∑nic
("Writes cannotáccessÅext memoryÑegion");

6267 if(
evít
->
∑ª¡
->
blk_dú
->
dú_°©e
[
block_off£t
] =
DIR_STABLE
)

6268 
	`∑nic
("DIR:áfterÅheÑeceipt of ACK msg, directoryÇot inÅransient state");

6269 (
evít
->
∑ª¡
)->
blk_dú
->
dú_sh¨î
[
block_off£t
][((”vít->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
§c2
)/64)] &= ~ (()1 << (((event->src1-MEM_LOC_SHIFT)*mesh_size+event->src2)%64));

6270 (
evít
->
∑ª¡
)->
chûdCou¡
 --;

6272 if((
evít
->
∑ª¡
)->
›î©i⁄
 =
WAIT_MEM_READ
)

6273 (
evít
->
∑ª¡
)->
ödividuÆ_chûdCou¡
[
block_off£t
] --;

6274 if(
cﬁÀ˘_°©s
)

6276 if(
evít
->
›î©i⁄
 =
ACK_MSG_WRITEUPDATE
)

6278 
ˇche_dl2
->
ack_ª˚ived
 ++;

6279 
ˇche_dl2
->
dú_ac˚ss
 ++;

6282 
ˇche_dl2
->
d©a_ac˚ss
 ++;

6285 if((
evít
->
∑ª¡
)->
›î©i⁄
 =
WAIT_MEM_READ
 && (evít->∑ª¡)->
ödividuÆ_chûdCou¡
[
block_off£t
] == 0)

6287 (
evít
->
∑ª¡
)->
sh¨î_num
 --;

6288 ((
evít
->
∑ª¡
)->
blk_dú
)->
dú_dúty
[
block_off£t
] = -1;

6289 ((
evít
->
∑ª¡
)->
blk_dú
)->
dú_sh¨î
[
block_off£t
][0] = 0;

6290 ((
evít
->
∑ª¡
)->
blk_dú
)->
dú_sh¨î
[
block_off£t
][1] = 0;

6291 ((
evít
->
∑ª¡
)->
blk_dú
)->
dú_sh¨î
[
block_off£t
][2] = 0;

6292 ((
evít
->
∑ª¡
)->
blk_dú
)->
dú_sh¨î
[
block_off£t
][3] = 0;

6294 if((
evít
->
∑ª¡
)->
sh¨î_num
 != 0)

6296 
	`‰ì_evít
(
evít
);

6301 if((
evít
->
∑ª¡
)->
chûdCou¡
 == 0)

6304 
cou¡î_t
 
°¨tCy˛e
 = 
sim_cy˛e
;

6305 
DIRECTORY_EVENT
 *
∑ª¡_evít
 = 
evít
->
∑ª¡
;

6306 
ãmpID
 = 
∑ª¡_evít
->tempID;

6308 (
∑ª¡_evít
->
blk_dú
)->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

6309 (
∑ª¡_evít
->
blk_dú
)->
±r_cur_evít
[
block_off£t
] = 
NULL
;

6310 
block_off£t
 = 
	`blockoff£t
(
∑ª¡_evít
->
addr
);

6311 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = 
ãmpID
;

6312 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6313 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

6315 if(
evít
->
›î©i⁄
 =
ACK_MSG_WRITE
)

6316 (
∑ª¡_evít
->
blk_dú
)->
°©us
 |
CACHE_BLK_DIRTY
;

6317 if(
∑ª¡_evít
->
›î©i⁄
 !
WAIT_MEM_READ
)

6319 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = 
ãmpID
;

6320 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6321 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

6323 if(
∑ª¡_evít
->
‹igöÆChûdCou¡
 == 1)

6324 
	`time•a˚
(
sim_cy˛e
 - 
∑ª¡_evít
->
blk_dú
->
ex˛usive_time
[
block_off£t
], 2);

6325 #ifde‡
PREFETCH_OPTI


6326 if(
∑ª¡_evít
->
›î©i⁄
 !
WRITE_COHERENCE_UPDATE
)

6328 if((
∑ª¡_evít
->
blk_dú
)->
dú_¥e„tch_num
[
block_off£t
])

6329 (
∑ª¡_evít
->
blk_dú
)->
¥e„tch_övÆid©e
[
block_off£t
] = 1;

6330 if((
∑ª¡_evít
->
blk_dú
)->
dú_¥e„tch_num
[
block_off£t
])

6331 (
∑ª¡_evít
->
blk_dú
)->
¥e„tch_modifõd
[
block_off£t
] = 1;

6335 if(
evít
->
l1LöeU£Sètus
)

6337 if(
evít
->
isEx˛usiveOrDúty
)

6339 
dñayL2WrôeReqDúty
 +
evít
->
whí
 -Évít->
∑ª¡
->when;

6340 
tŸÆL2WrôeReqDútyWT
++;

6344 
dñayL2WrôeReqSh¨ed
 +
evít
->
whí
 -Évít->
∑ª¡
->when;

6345 
tŸÆL2WrôeReqSh¨edWT
++;

6349 if(
evít
->
›î©i⁄
 =
ACK_MSG_WRITE
)

6350 (
∑ª¡_evít
->
blk_dú
)->
°©us
 |
CACHE_BLK_DIRTY
;

6354 if(
∑ª¡_evít
->
›î©i⁄
 =
WRITE_UPDATE
)

6356 
∑ckë_size
 = 
mëa_∑ckë_size
;

6357 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

6359 if(
∑ª¡_evít
->
›î©i⁄
 =
MISS_WRITE
)

6361 
∑ckë_size
 = 
d©a_∑ckë_size
;

6362 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

6364 #ifde‡
PREFETCH_OPTI


6365 if(
∑ª¡_evít
->
›î©i⁄
 =
WRITE_COHERENCE_UPDATE
)

6367 if(
evít
->
›î©i⁄
 =
ACK_MSG_WRITE
)

6369 
∑ckë_size
 = 
d©a_∑ckë_size
;

6370 
∑ª¡_evít
->
›î©i⁄
 = 
WRITE_DATA_REPLY
;

6371 
WrôeMRïly
 ++;

6375 if(
∑ª¡_evít
->
blk_dú
->
¥e„tch_övÆid©e
[
block_off£t
] ||Ö¨ít_evít->blk_dú->
¥e„tch_modifõd
[block_offset])

6377 
∑ckë_size
 = 
d©a_∑ckë_size
;

6378 
∑ª¡_evít
->
›î©i⁄
 = 
WRITE_DATA_REPLY
;

6379 
WrôeSED©aRïly
 ++;

6383 
∑ckë_size
 = 
mëa_∑ckë_size
;

6384 
∑ª¡_evít
->
›î©i⁄
 = 
WRITE_META_REPLY
;

6385 
WrôeSEMëaRïly
 ++;

6388 if(
∑ª¡_evít
->
blk_dú
->
dú_¥e„tch_num
[
block_off£t
] == 0)

6390 
∑ª¡_evít
->
blk_dú
->
¥e„tch_övÆid©e
[
block_off£t
] = 0;

6391 
∑ª¡_evít
->
blk_dú
->
¥e„tch_modifõd
[
block_off£t
] = 0;

6399 if(
evít
->
sh¨î_num
 != 0)

6400 
	`∑nic
("WAIT_MEM_READ: sharer_num should be zeroÇow!\n");

6404 if(!
∑ª¡_evít
->
blk_dú
->
Iswb_to_mem
 && (∑ª¡_evít->blk_dú->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& (∑ª¡_evít->blk_dú->°©u†& 
CACHE_BLK_VALID
))

6406 
√w_vc
 = 0;

6407 
l
=0;

6408 
l
=0;l<
ˇche_dl2
->
bsize
/
max_∑ckë_size
;l++)

6410 
DIRECTORY_EVENT
 *
√w_evít
;

6411 
√w_evít
 = 
	`Æloˇã_√w_evít
(
∑ª¡_evít
);

6412 
√w_evít
->
addr
 = 
∑ª¡_evít
->addr;

6413 
√w_evít
->
›î©i⁄
 = 
MEM_WRITE_BACK
;

6414 
√w_evít
->
cmd
 = 
Wrôe
;

6415 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
√w_vc
);

6416 
	`dú_evítq_ö£π
(
√w_evít
);

6418 
∑ª¡_evít
->
blk_dú
->
Iswb_to_mem
 = 1;

6419 if(
cﬁÀ˘_°©s
)

6420 
ˇche_dl2
->
wrôebacks
 ++;

6423 
∑ª¡_evít
->
blk_dú
->
Iswb_to_mem
 = 0;

6425 
èg_dú
 = 
	`CACHE_TAG
(
˝_dú
, 
∑ª¡_evít
->
addr
);

6427 
i
=0, 
m
=0, 
ôî©i⁄
 = 1;

6428 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

6429 
ôî©i⁄
 = iteration * 2;

6430 
m
=0; m<
ôî©i⁄
; m++)

6431 (
∑ª¡_evít
->
blk_dú
)->
dú_°©e
[
m
] = 
DIR_STABLE
;

6433 (
∑ª¡_evít
->
blk_dú
)->
ègid
.
èg
 = 
èg_dú
;

6434 (
∑ª¡_evít
->
blk_dú
)->
ègid
.
thªadid
 = 
ãmpID
;

6435 (
∑ª¡_evít
->
blk_dú
)->
addr
 =Öarent_event->addr;

6436 (
∑ª¡_evít
->
blk_dú
)->
°©us
 = 
CACHE_BLK_VALID
;

6437 (
∑ª¡_evít
->
blk_dú
)->
Iswb_to_mem
 = 0;

6442 
˝_dú
->
œ°_èg£tid
.
èg
 = 0;

6443 
˝_dú
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

6444 
˝_dú
->
œ°_blk
 = (
∑ª¡_evít
->
blk_dú
);

6447 i‡(
∑ª¡_evít
->
ud©a
)

6448 *(
∑ª¡_evít
->
ud©a
Ë’¨ít_evít->
blk_dú
)->
u£r_d©a
;

6450 (
∑ª¡_evít
->
blk_dú
)->
ªady
 = 
sim_cy˛e
;

6452 i‡(
˝_dú
->
hsize
)

6453 
	`lök_hèb_ít
(
˝_dú
, &˝_dú->
£ts
[
£t_dú
], (
∑ª¡_evít
->
blk_dú
));

6456 
	`upd©e_L2_mshª¡ry
(
∑ª¡_evít
->
addr
, 
sim_cy˛e
,Ö¨ít_evít->
°¨tCy˛e
);

6457 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

6458 #ifde‡
PREFETCH_OPTI


6459 
i
=0;i<
MAXTHREADS
;i++)

6460 (
∑ª¡_evít
->
blk_dú
)->
dú_¥e„tch
[
block_off£t
][
i
] = 0;

6461 (
∑ª¡_evít
->
blk_dú
)->
dú_¥e„tch_num
[
block_off£t
] = 0;

6462 (
∑ª¡_evít
->
blk_dú
)->
¥e„tch_övÆid©e
[
block_off£t
] = 0;

6463 (
∑ª¡_evít
->
blk_dú
)->
¥e„tch_modifõd
[
block_off£t
] = 0;

6466 if(
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
L2_PREFETCH
)

6468 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][0] = 0;

6469 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][1] = 0;

6470 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][2] = 0;

6471 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][3] = 0;

6472 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = -1;

6473 
	`‰ì_evít
(
evít
);

6474 
	`‰ì_evít
(
∑ª¡_evít
);

6478 if(
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
MISS_IL1
)

6480 
∑ckë_size
 = 
d©a_∑ckë_size
;

6481 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_IL1
;

6482 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = -1;

6483 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][0] = 0;

6484 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][1] = 0;

6485 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][2] = 0;

6486 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][3] = 0;

6487 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

6488 
°¨tCy˛e
 = 
sim_cy˛e
;

6490 if(
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
MISS_READ


6491 #ifde‡
PREFETCH_OPTI


6492 || 
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
L1_PREFETCH


6493 || 
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
READ_COHERENCE_UPDATE


6497 
∑ckë_size
 = 
d©a_∑ckë_size
;

6498 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

6499 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = -1;

6500 i‡(!
	`md_ãxt_addr
(
∑ª¡_evít
->
addr
, 
ãmpID
))

6502 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6503 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

6507 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][0] = 0;

6508 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][1] = 0;

6509 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][2] = 0;

6510 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][3] = 0;

6511 (
∑ª¡_evít
->
blk_dú
)->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

6513 #ifde‡
LOCK_CACHE_REGISTER


6515 if(
∑ª¡_evít
->
°‹e_c⁄d
 =
MY_LDL_L
)

6516 
	`LockRege°îCheck
(
∑ª¡_evít
);

6519 if(
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
MISS_WRITE


6520 #ifde‡
PREFETCH_OPTI


6521 || 
∑ª¡_evít
->
∑ª¡_›î©i⁄
 =
WRITE_COHERENCE_UPDATE


6525 
∑ckë_size
 = 
d©a_∑ckë_size
;

6526 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

6527 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = 
ãmpID
;

6528 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6532 
∑ckë_size
 = 
mëa_∑ckë_size
;

6533 
∑ª¡_evít
->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

6534 (
∑ª¡_evít
->
blk_dú
)->
dú_dúty
[
block_off£t
] = 
ãmpID
;

6535 (
∑ª¡_evít
->
blk_dú
)->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

6539 
∑ª¡_evít
->
blk_dú
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

6540 
∑ª¡_evít
->
ªqAckTime
 = 
sim_cy˛e
;

6541 
∑ª¡_evít
->
°¨tCy˛e
 = startCycle;

6542 
∑ª¡_evít
->
§c1
 = 
evít
->
des1
;

6543 
∑ª¡_evít
->
§c2
 = 
evít
->
des2
;

6544 
∑ª¡_evít
->
des1
 =Ö¨ít_evít->
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

6545 
∑ª¡_evít
->
des2
 =Ö¨ít_evít->
ãmpID
%
mesh_size
;

6546 
∑ª¡_evít
->
¥o˚ssögD⁄e
 = 0;

6547 
∑ª¡_evít
->
≥ndögInvAck
 = 0;

6548 
	`scheduÀThroughNëw‹k
(
∑ª¡_evít
,Ö¨ít_evít->
°¨tCy˛e
, 
∑ckë_size
, 
vc
);

6549 
	`‰ì_evít
(
evít
);

6551 
	`dú_evítq_ö£π
(
∑ª¡_evít
);

6554 
	`‰ì_evít
(
evít
);

6557 
ACK_DIR_IL1
 :

6558 
iˇche_ac˚ss
++;

6559 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
iˇche_ac˚ss
++;

6561 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

6562 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

6564 (
evít
->
˝
)->
pﬁicy
)

6566 
bödex
;

6567 
LRU
:

6568 
FIFO
:

6569 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

6570 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

6572 
R™dom
:

6573 
bödex
 = 
	`myønd
 (Ë& ((
evít
->
˝
)->
assoc
 - 1);

6574 
ª∂
 = 
	`CACHE_BINDEX
 ((
evít
->
˝
), (evít->˝)->
£ts
[
£t
].
blks
, 
bödex
);

6577 
	`∑nic
 ("bogusÑeplacementÖolicy");

6579 i‡(
cﬁÀ˘_°©s
)

6580 
evít
->
˝
->
ª∂a˚míts
++;

6581 
ª∂
->
ègid
.
èg
 =Åag;

6582 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

6583 
ª∂
->
addr
 = 
evít
->addr;

6584 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

6585 
ª∂
->
°©e
 = 
MESI_SHARED
;

6588 
bofs
 = 
	`CACHE_BLK
(
evít
->
˝
,Évít->
addr
);

6589 i‡((
evít
->
˝
)->
bÆloc
 && (evít->
vp
))

6590 
	`CACHE_BCOPY
(
evít
->
cmd
, 
ª∂
, 
bofs
,Évít->
vp
,Évít->
nbyãs
);

6592 (
evít
->
˝
)->
œ°_èg£tid
.
èg
 = 0;

6593 (
evít
->
˝
)->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

6594 (
evít
->
˝
)->
œ°_blk
 = 
ª∂
;

6597 i‡(
evít
->
ud©a
)

6598 *(
evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

6600 if(
cﬁÀ˘_°©s
)

6601 
tŸÆIL1missh™dÀtime
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

6603 
ª∂
->
ªady
 = 
sim_cy˛e
;

6605 i‡((
evít
->
˝
)->
hsize
)

6606 
	`lök_hèb_ít
((
evít
->
˝
), &”vít->˝)->
£ts
[
£t
], 
ª∂
);

6608 
thec⁄ãxts
[
ãmpID
]->
ruu_„tch_issue_dñay
 = 0;

6609 
thec⁄ãxts
[
ãmpID
]->
evít
 = 
NULL
;

6610 
	`‰ì_evít
(
evít
);

6614 #ifde‡
SERIALIZATION_ACK


6615 
FINAL_INV_ACK
:

6616 if(
numSt‹ePídög
[
evít
->
ãmpID
] == 0)

6617 
	`∑nic
("error in FINAL_INV_ACK\n");

6618 
numSt‹ePídög
[
evít
->
ãmpID
]--;

6619 if((
numSt‹ePídög
[
evít
->
ãmpID
] =0Ë&& 
thec⁄ãxts
[evít->ãmpID]->
WBèbÀTaû
 =
NULL
)

6620 
thec⁄ãxts
[
evít
->
ãmpID
]->
©MB
 = 0;

6621 
	`‰ì_evít
(
evít
);

6626 #ifde‡
WRITE_EARLY


6627 
ACK_DIR_WRITE
 :

6628 if(
evít
->
óæy_Êag
 == 3)

6630 
˝1
 = 
evít
->
˝
;

6631 
wrôe_óæy
 --;

6632 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
,
addr
);

6633 
£t
 = 
	`CACHE_SET
(
evít
->
˝
,
addr
);

6634 
Êag
 = 0;

6635 
blk1
 = 
˝1
->
£ts
[
£t
].
way_hód
; blk1; blk1 =blk1->
way_√xt
)

6637 i‡((
blk1
->
ègid
.
èg
 =ègË&& (blk1->
°©us
 & 
CACHE_BLK_WVALID
))

6639 
Êag
 = 1;

6640 
blk1
->
°©us
 &(~
CACHE_BLK_WVALID
);

6641 
blk1
->
°©us
 |
CACHE_BLK_VALID
;

6645 if(
Êag
 != 0)

6647 #ifde‡
SERIALIZATION_ACK


6648 if(
evít
->
≥ndögInvAck
)

6649 
numSt‹ePídög
[
ãmpID
]++;

6651 
	`mshª¡ry_upd©e
(
evít
, 
sim_cy˛e
,Évít->
°¨ãd
);

6652 
	`‰ì_evít
(
evít
);

6656 
ACK_DIR_WRITE_EARLY
:

6657 
dˇche_ac˚ss
++;

6659 
wrôe_óæy
 ++;

6660 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

6662 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

6663 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

6665 (
evít
->
˝
)->
pﬁicy
)

6667 
bödex
, 
i
=0;

6668 
LRU
:

6669 
FIFO
:

6676 
i
 = 
evít
->
˝
->
assoc
;

6678 if(
i
 == 0) ;

6679 
i
--;

6680 
ª∂
 = 
evít
->
˝
->
£ts
[
£t
].
way_èû
;

6681 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

6683 
ª∂
->
°©us
 & 
CACHE_BLK_WVALID
);

6685 if(
ª∂
->
°©us
 & 
CACHE_BLK_WVALID
)

6687 
L1_Êù_cou¡î
 ++;

6688 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

6689 
	`dú_evítq_ö£π
(
evít
);

6693 
R™dom
:

6694 
bödex
 = 
	`myønd
 (Ë& ((
evít
->
˝
)->
assoc
 - 1);

6695 
ª∂
 = 
	`CACHE_BINDEX
 ((
evít
->
˝
), (evít->˝)->
£ts
[
£t
].
blks
, 
bödex
);

6698 
	`∑nic
 ("bogusÑeplacementÖolicy");

6701 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

6702 #ifde‡
SILENT_DROP


6703 #i‚de‡
UPDATE_HINT


6704 && (
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

6709 i‡(
cﬁÀ˘_°©s
)

6710 
evít
->
˝
->
ª∂a˚míts
++;

6712 i‡(
a˘uÆPro˚ss
 =1 && !
	`md_ãxt_addr
(
ª∂
->
addr
, 
ãmpID
))

6714 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& !‘ïl->
°©e
 =
MESI_MODIFIED
))

6715 
	`∑nic
 ("Cache Block should have been modified here");

6717 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

6718 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

6719 
√w_evít
->
isPª„tch
 = 0;

6720 #i‡
	`deföed
(
NON_SILENT_DROP
Ë|| deföed(
UPDATE_HINT
)

6721 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

6724 i‡(
cﬁÀ˘_°©s
)

6725 
evít
->
˝
->
wrôebacks
++;

6726 #ifde‡
WB_SPLIT


6727 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK_HEAD
;

6728 
∑ckë_size
 = 
mëa_∑ckë_size
;

6729 
j
=0, 
wb_f
;

6730 
j
=0;j<
MSHR_SIZE
;j++)

6732 if(
wb_buf„r
[
evít
->
des1
*
mesh_size
+evít->
des2
][
j
] == 0)

6734 
wb_buf„r
[
evít
->
des1
*
mesh_size
+evít->
des2
][
j
] = 
ª∂
->
addr
;

6735 
wb_f
 = 1;

6740 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK
;

6741 
∑ckë_size
 = 
d©a_∑ckë_size
;

6743 #i‡
	`deföed
(
NON_SILENT_DROP
Ë|| deföed(
UPDATE_HINT
)

6747 
√w_evít
->
›î©i⁄
 = 
UPDATE_DIR
;

6748 
∑ckë_size
 = 
mëa_∑ckë_size
;

6749 i‡(
cﬁÀ˘_°©s
)

6750 
evít
->
˝
->
dú_nŸifiˇti⁄
++;

6753 
√w_evít
->
c⁄f_bô
 = -1;

6754 
√w_evít
->
ªq_time
 = 0;

6755 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

6756 
√w_evít
->
≥ndög_Êag
 = 0;

6757 
√w_evít
->
›
 = 
evít
->op;

6758 
√w_evít
->
§c1
 = 
evít
->
des1
;

6759 
√w_evít
->
§c2
 = 
evít
->
des2
;

6760 
md_addr_t
 
§c
 = (
ª∂
->
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

6761 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

6762 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

6763 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

6764 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

6765 
√w_evít
->
∑ª¡
 = 
NULL
;

6766 
√w_evít
->
blk_dú
 = 
NULL
;

6767 
√w_evít
->
chûdCou¡
 = 0;

6768 
√w_evít
->
ãmpID
 = 
evít
->tempID;

6769 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

6770 
√w_evít
->
ª£nd
 = 0;

6771 
√w_evít
->
blk1
 = 
ª∂
;

6772 
√w_evít
->
addr
 = 
ª∂
->addr;

6773 
√w_evít
->
˝
 = 
evít
->cp;

6774 
√w_evít
->
vp
 = 
NULL
;

6775 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

6776 
√w_evít
->
ud©a
 = 
NULL
;

6777 
√w_evít
->
cmd
 = 
Wrôe
;

6778 
√w_evít
->
rs
 = 
NULL
;

6779 
√w_evít
->
•ec_mode
 = 0;

6780 
√w_evít
->
d©a_ª∂y
 = 0;

6781 
√w_vc
 = 0;

6783 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
∑ckë_size
, 
√w_vc
);

6785 
	`dú_evítq_ö£π
(
√w_evít
);

6789 if(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

6791 if(
ª∂
->
°©e
 =
MESI_EXCLUSIVE
)

6792 
tŸÆL1LöeExlDr›
++;

6794 if(
ª∂
->
blkAlocRós⁄
 =
LINE_PREFETCH
)

6796 if(
ª∂
->
blkImdtOp
)

6797 
tŸÆL1LöePªfU£
++;

6799 
tŸÆL1LöePªfNoU£
++;

6801 if(
ª∂
->
blkAlocRós⁄
 =
LINE_READ
)

6803 if(
ª∂
->
blkImdtOp
)

6804 
tŸÆL1LöeRódU£
++;

6806 
tŸÆL1LöeRódNoU£
++;

6808 if(
ª∂
->
blkAlocRós⁄
 =
LINE_WRITE
)

6810 if(
ª∂
->
blkImdtOp
)

6811 
tŸÆL1LöeWrôeU£
++;

6813 
tŸÆL1LöeWrôeNoU£
++;

6817 if(
evít
->
isPª„tch
)

6818 
ª∂
->
blkAlocRós⁄
 = 
LINE_PREFETCH
;

6819 if(
evít
->
cmd
 =
Wrôe
)

6820 
ª∂
->
blkAlocRós⁄
 = 
LINE_WRITE
;

6821 if(
evít
->
cmd
 =
Ród
)

6822 
ª∂
->
blkAlocRós⁄
 = 
LINE_READ
;

6824 
ª∂
->
blkAlocRós⁄
 = 0;

6827 
ª∂
->
ègid
.
èg
 =Åag;

6828 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

6829 
ª∂
->
addr
 = 
evít
->addr;

6830 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE_EARLY
)

6831 
ª∂
->
°©us
 = 
CACHE_BLK_WVALID
;

6833 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

6835 
ª∂
->
blkImdtOp
 = 0;

6836 
ª∂
->
blkNextOps
 = 0;

6838 #ifde‡
SERIALIZATION_ACK


6839 if(
evít
->
›î©i⁄
 !
ACK_DIR_WRITE_EARLY
 &&Évít->
≥ndögInvAck
)

6840 
numSt‹ePídög
[
ãmpID
]++;

6844 
bofs
 = 
	`CACHE_BLK
(
evít
->
˝
,Évít->
addr
);

6845 i‡((
evít
->
˝
)->
bÆloc
 && (evít->
vp
))

6846 
	`CACHE_BCOPY
(
evít
->
cmd
, 
ª∂
, 
bofs
,Évít->
vp
,Évít->
nbyãs
);

6850 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
)

6851 
ª∂
->
°©e
 = 
MESI_EXCLUSIVE
;

6852 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
)

6853 
ª∂
->
°©e
 = 
MESI_SHARED
;

6854 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITE_EARLY
)

6856 
ª∂
->
°©e
 = 
MESI_MODIFIED
;

6857 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

6860 (
evít
->
˝
)->
œ°_èg£tid
.
èg
 = 0;

6861 (
evít
->
˝
)->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

6862 (
evít
->
˝
)->
œ°_blk
 = 
ª∂
;

6865 i‡(
evít
->
ud©a
)

6866 *(
evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

6868 if(
cﬁÀ˘_°©s
)

6872 
missH™dÀTime
 = 
sim_cy˛e
 - 
evít
->
°¨ãd
;

6873 if(!
evít
->
isReqL2Hô
)

6875 
tŸÆL2ReqPrimMiss
++;

6876 
dñayL2ReqPrimMiss
 +
missH™dÀTime
;

6880 if(
evít
->
isReqL2SecMiss
)

6882 
tŸÆL2ReqSecMiss
++;

6883 
dñayL2ReqSecMiss
 +
missH™dÀTime
;

6885 if(
evít
->
isReqL2Tøns
)

6887 
tŸÆL2ReqInTøns
++;

6888 
dñayL2ReqInTøns
 +
missH™dÀTime
;

6889 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
)

6891 
tŸÆL2OwnReqInTøns
++;

6892 
dñayL2OwnReqInTøns
 +
missH™dÀTime
;

6895 if(
evít
->
isReqL2Inv
)

6897 
tŸÆL2ReqInInv
++;

6898 
dñayL2ReqInInv
 +
missH™dÀTime
;

6902 
tŸÆL2ReqHô
++;

6903 
dñayL2ReqHô
 +
missH™dÀTime
;

6908 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 &&Évít->
isReqL2Hô
 && !evít->
isReqL2SecMiss
)

6910 
tŸÆWrôeReq
++;

6911 
tŸÆWrôeReqInv
 +((
evít
->
ªqAckTime
 =evít->
ªqAtDúTime
) ? 0 : 1);

6912 
tŸÆWrôeDñay
 +(
sim_cy˛e
 - 
evít
->
°¨ãd
);

6913 
tŸÆWrôeInvDñay
 +(
evít
->
ªqAckTime
 -Évít->
ªqAtDúTime
);

6915 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
 &&Évít->
isReqL2Hô
 && !evít->
isReqL2SecMiss
)

6917 
tŸÆUpgødeReq
++;

6918 
tŸÆUpgødeReqInv
 +((
evít
->
ªqAckTime
 =evít->
ªqAtDúTime
) ? 0 : 1);

6919 
tŸÆUpgødeDñay
 +(
sim_cy˛e
 - 
evít
->
°¨ãd
);

6920 
tŸÆUpgødeInvDñay
 +(
evít
->
ªqAckTime
 -Évít->
ªqAtDúTime
);

6923 
tŸÆmissh™dÀtime
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

6924 if(
evít
->
isSyncAc˚ss
)

6925 
tŸÆmis°imef‹Sync
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

6927 
tŸÆmis°imef‹N‹mÆ
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

6932 
ª∂
->
ªady
 = 
sim_cy˛e
;

6934 i‡((
evít
->
˝
)->
hsize
)

6935 
	`lök_hèb_ít
((
evít
->
˝
), &”vít->˝)->
£ts
[
£t
], 
ª∂
);

6939 if(!
evít
->
•ec_mode
 &&Évít->
rs
)

6941 if((
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
Ë|| (evít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
))

6942 
	`evítq_upd©e
(
evít
->
rs
, 
ª∂
->
ªady
);

6944 
evít
->
rs
->
wrôewaô
 = 2;

6946 if(
evít
->
›î©i⁄
 !
ACK_DIR_WRITE_EARLY
)

6947 
	`mshª¡ry_upd©e
(
evít
, 
ª∂
->
ªady
,Évít->
°¨ãd
);

6949 
	`‰ì_evít
(
evít
);

6952 
ACK_DIR_WRITE
 :

6954 
ACK_DIR_WRITEUPDATE
:

6955 
ACK_DIR_READ_EXCLUSIVE
:

6956 
ACK_DIR_READ_SHARED
:

6957 
dˇche_ac˚ss
++;

6958 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

6959 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
)

6960 
d©a_sh¨ed_ªad
 ++;

6961 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
)

6962 
d©a_¥iv©e_ªad
 ++;

6963 #ifde‡
LOCK_CACHE_REGISTER


6964 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
)

6966 if(
evít
->
›
 =
LDL_L
)

6968 i‡(
comm⁄_ªgs_s
[
thec⁄ãxts
[
ãmpID
]->
ma°îid
][ãmpID].
addªss
 =
evít
->
addr
 && comm⁄_ªgs_s[thec⁄ãxts[ãmpID]->ma°îid][ãmpID].
ªgs_lock
)

6970 
comm⁄_ªgs_s
[
thec⁄ãxts
[
ãmpID
]->
ma°îid
][ãmpID].
subs¸ibed
 = 1;

6973 if(
evít
->
›
 =
STL_C
)

6975 i‡(
comm⁄_ªgs_s
[
thec⁄ãxts
[
ãmpID
]->
ma°îid
][ãmpID].
addªss
 =
evít
->
addr
 && comm⁄_ªgs_s[thec⁄ãxts[ãmpID]->ma°îid][ãmpID].
ªgs_lock
)

6977 
comm⁄_ªgs_s
[
thec⁄ãxts
[
ãmpID
]->
ma°îid
][ãmpID].
ªgs_lock
 = 0;

6978 
comm⁄_ªgs_s
[
thec⁄ãxts
[
ãmpID
]->
ma°îid
][ãmpID].
addªss
 = 0;

6979 
comm⁄_ªgs_s
[
thec⁄ãxts
[
ãmpID
]->
ma°îid
][ãmpID].
subs¸ibed
 = 0;

6985 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

6986 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

6987 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

6988 
m_upd©e_miss
[
evít
->
ãmpID
] = 0;

6990 (
evít
->
˝
)->
pﬁicy
)

6992 
bödex
, 
i
=0;

6993 
LRU
:

6994 
FIFO
:

6995 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

6997 #ifde‡
WRITE_EARLY


6998 
i
 = 
evít
->
˝
->
assoc
;

7000 if(
i
 == 0) ;

7001 
i
--;

7002 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

7003 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

7005 
ª∂
->
°©us
 & 
CACHE_BLK_WVALID
);

7007 if(
ª∂
->
°©us
 & 
CACHE_BLK_WVALID
)

7009 
L1_Êù_cou¡î
 ++;

7010 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7011 
	`dú_evítq_ö£π
(
evít
);

7015 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

7016 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

7021 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

7022 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

7025 
R™dom
:

7026 
bödex
 = 
	`myønd
 (Ë& ((
evít
->
˝
)->
assoc
 - 1);

7027 
ª∂
 = 
	`CACHE_BINDEX
 ((
evít
->
˝
), (evít->˝)->
£ts
[
£t
].
blks
, 
bödex
);

7030 
	`∑nic
 ("bogusÑeplacementÖolicy");

7033 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

7034 #ifde‡
SILENT_DROP


7035 #i‚de‡
UPDATE_HINT


7036 && (
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

7041 i‡(
cﬁÀ˘_°©s
)

7042 
evít
->
˝
->
ª∂a˚míts
++;

7044 i‡(
a˘uÆPro˚ss
 =1 && !
	`md_ãxt_addr
(
ª∂
->
addr
, 
ãmpID
))

7046 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& !‘ïl->
°©e
 =
MESI_MODIFIED
))

7047 
	`∑nic
 ("Cache Block should have been modified here");

7049 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

7050 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

7051 
√w_evít
->
isPª„tch
 = 0;

7052 #i‡
	`deföed
(
NON_SILENT_DROP
Ë|| deföed(
UPDATE_HINT
)

7053 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

7056 i‡(
cﬁÀ˘_°©s
)

7057 
evít
->
˝
->
wrôebacks
++;

7059 
m
 = 0;

7060 
m
=0;m<8;m++)

7061 if(
ª∂
->
W‹dU£Fœg
[
m
])

7062 
ª∂
->
W‹dCou¡
 ++;

7063 
	`°©s_do
((
ª∂
->
addr
 & ~(
ˇche_dl1
[0]->
bsize
-1)),Ñïl->
RódCou¡
,Ñïl->
WrôeCou¡
,Ñïl->
W‹dCou¡
,Ñïl->
Ty≥
, 
ãmpID
);

7064 
ª∂
->
RódCou¡
 = 0;

7065 
ª∂
->
WrôeCou¡
 = 0;

7066 
ª∂
->
W‹dCou¡
 = 0;

7067 
m
=0;m<8;m++)

7068 
ª∂
->
W‹dU£Fœg
[
m
] = 0;

7069 #ifde‡
WB_SPLIT


7070 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK_HEAD
;

7071 
∑ckë_size
 = 
mëa_∑ckë_size
;

7072 
j
=0, 
wb_f
;

7073 
j
=0;j<
MSHR_SIZE
;j++)

7075 if(
wb_buf„r
[
evít
->
des1
*
mesh_size
+evít->
des2
][
j
] == 0)

7077 
wb_buf„r
[
evít
->
des1
*
mesh_size
+evít->
des2
][
j
] = 
ª∂
->
addr
;

7078 
wb_f
 = 1;

7082 if(
wb_f
 == 0)

7083 
	`¥ötf
("Wb_addrÖending buffer is full\n");

7085 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK
;

7086 
∑ckë_size
 = 
d©a_∑ckë_size
;

7088 #i‡
	`deföed
(
NON_SILENT_DROP
Ë|| deföed(
UPDATE_HINT
)

7092 
√w_evít
->
›î©i⁄
 = 
UPDATE_DIR
;

7093 
∑ckë_size
 = 
mëa_∑ckë_size
;

7094 i‡(
cﬁÀ˘_°©s
)

7095 
evít
->
˝
->
dú_nŸifiˇti⁄
++;

7098 
√w_evít
->
c⁄f_bô
 = -1;

7099 
√w_evít
->
ªq_time
 = 0;

7100 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

7101 
√w_evít
->
≥ndög_Êag
 = 0;

7102 
√w_evít
->
›
 = 
evít
->op;

7103 
√w_evít
->
§c1
 = 
evít
->
des1
;

7104 
√w_evít
->
§c2
 = 
evít
->
des2
;

7105 
md_addr_t
 
§c
 = (
ª∂
->
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

7106 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

7107 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

7108 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7109 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7110 
√w_evít
->
∑ª¡
 = 
NULL
;

7111 
√w_evít
->
blk_dú
 = 
NULL
;

7112 
√w_evít
->
chûdCou¡
 = 0;

7113 
√w_evít
->
ãmpID
 = 
evít
->tempID;

7114 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

7115 
√w_evít
->
ª£nd
 = 0;

7116 
√w_evít
->
blk1
 = 
ª∂
;

7117 
√w_evít
->
addr
 = 
ª∂
->addr;

7118 
√w_evít
->
˝
 = 
evít
->cp;

7119 
√w_evít
->
vp
 = 
NULL
;

7120 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

7121 
√w_evít
->
ud©a
 = 
NULL
;

7122 
√w_evít
->
cmd
 = 
Wrôe
;

7123 
√w_evít
->
rs
 = 
NULL
;

7124 
√w_evít
->
•ec_mode
 = 0;

7125 
√w_evít
->
d©a_ª∂y
 = 0;

7126 
√w_vc
 = 0;

7128 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
∑ckë_size
, 
√w_vc
);

7130 
	`dú_evítq_ö£π
(
√w_evít
);

7133 if(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

7135 if(
ª∂
->
°©e
 =
MESI_EXCLUSIVE
)

7136 
tŸÆL1LöeExlDr›
++;

7138 if(
ª∂
->
blkAlocRós⁄
 =
LINE_PREFETCH
)

7140 if(
ª∂
->
blkImdtOp
)

7141 
tŸÆL1LöePªfU£
++;

7143 
tŸÆL1LöePªfNoU£
++;

7145 if(
ª∂
->
blkAlocRós⁄
 =
LINE_READ
)

7147 if(
ª∂
->
blkImdtOp
)

7148 
tŸÆL1LöeRódU£
++;

7150 
tŸÆL1LöeRódNoU£
++;

7152 if(
ª∂
->
blkAlocRós⁄
 =
LINE_WRITE
)

7154 if(
ª∂
->
blkImdtOp
)

7155 
tŸÆL1LöeWrôeU£
++;

7157 
tŸÆL1LöeWrôeNoU£
++;

7161 if(
evít
->
isPª„tch
)

7162 
ª∂
->
blkAlocRós⁄
 = 
LINE_PREFETCH
;

7163 if(
evít
->
cmd
 =
Wrôe
)

7164 
ª∂
->
blkAlocRós⁄
 = 
LINE_WRITE
;

7165 if(
evít
->
cmd
 =
Ród
)

7166 
ª∂
->
blkAlocRós⁄
 = 
LINE_READ
;

7168 
ª∂
->
blkAlocRós⁄
 = 0;

7171 
ª∂
->
ègid
.
èg
 =Åag;

7172 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

7173 
ª∂
->
addr
 = 
evít
->addr;

7174 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7176 
ª∂
->
blkImdtOp
 = 0;

7177 
ª∂
->
blkNextOps
 = 0;

7180 #ifde‡
SERIALIZATION_ACK


7181 if(
evít
->
≥ndögInvAck
)

7182 
numSt‹ePídög
[
ãmpID
]++;

7186 
bofs
 = 
	`CACHE_BLK
(
evít
->
˝
,Évít->
addr
);

7187 i‡((
evít
->
˝
)->
bÆloc
 && (evít->
vp
))

7188 
	`CACHE_BCOPY
(
evít
->
cmd
, 
ª∂
, 
bofs
,Évít->
vp
,Évít->
nbyãs
);

7191 
ª∂
->
W‹dU£Fœg
[‘ïl->
addr
>>2) & 7] = 1;

7192 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7193 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_EXCLUSIVE
)

7195 
ª∂
->
RódCou¡
 ++;

7196 
ª∂
->
Ty≥
 = 
PRIVATE
;

7197 
ª∂
->
°©e
 = 
MESI_EXCLUSIVE
;

7199 if(
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
)

7201 
ª∂
->
RódCou¡
 ++;

7202 
ª∂
->
Ty≥
 = 
SHARED_READ_ONLY
;

7203 
ª∂
->
°©e
 = 
MESI_SHARED
;

7205 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
)

7207 
ª∂
->
WrôeCou¡
 ++;

7208 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

7209 
ª∂
->
Ty≥
 = 
SHARED_READ_WRITE
;

7210 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
)

7211 
ª∂
->
Ty≥
 = 
PRIVATE
;

7212 
ª∂
->
°©e
 = 
MESI_MODIFIED
;

7213 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

7216 (
evít
->
˝
)->
œ°_èg£tid
.
èg
 = 0;

7217 (
evít
->
˝
)->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

7218 (
evít
->
˝
)->
œ°_blk
 = 
ª∂
;

7221 i‡(
evít
->
ud©a
)

7222 *(
evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

7224 if(
cﬁÀ˘_°©s
)

7228 
missH™dÀTime
 = 
sim_cy˛e
 - 
evít
->
°¨ãd
;

7229 if(!
evít
->
isReqL2Hô
)

7231 
tŸÆL2ReqPrimMiss
++;

7232 
dñayL2ReqPrimMiss
 +
missH™dÀTime
;

7236 if(
evít
->
isReqL2SecMiss
)

7238 
tŸÆL2ReqSecMiss
++;

7239 
dñayL2ReqSecMiss
 +
missH™dÀTime
;

7241 if(
evít
->
isReqL2Tøns
)

7243 
tŸÆL2ReqInTøns
++;

7244 
dñayL2ReqInTøns
 +
missH™dÀTime
;

7245 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 ||Évít->›î©i⁄ =
ACK_DIR_WRITEUPDATE
)

7247 
tŸÆL2OwnReqInTøns
++;

7248 
dñayL2OwnReqInTøns
 +
missH™dÀTime
;

7251 if(
evít
->
isReqL2Inv
)

7253 
tŸÆL2ReqInInv
++;

7254 
dñayL2ReqInInv
 +
missH™dÀTime
;

7258 
tŸÆL2ReqHô
++;

7259 
dñayL2ReqHô
 +
missH™dÀTime
;

7264 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITE
 &&Évít->
isReqL2Hô
 && !evít->
isReqL2SecMiss
)

7266 
tŸÆWrôeReq
++;

7267 
tŸÆWrôeReqInv
 +((
evít
->
ªqAckTime
 =evít->
ªqAtDúTime
) ? 0 : 1);

7268 
tŸÆWrôeDñay
 +(
sim_cy˛e
 - 
evít
->
°¨ãd
);

7269 
tŸÆWrôeInvDñay
 +(
evít
->
ªqAckTime
 -Évít->
ªqAtDúTime
);

7271 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
 &&Évít->
isReqL2Hô
 && !evít->
isReqL2SecMiss
)

7273 
tŸÆUpgødeReq
++;

7274 
tŸÆUpgødeReqInv
 +((
evít
->
ªqAckTime
 =evít->
ªqAtDúTime
) ? 0 : 1);

7275 
tŸÆUpgødeDñay
 +(
sim_cy˛e
 - 
evít
->
°¨ãd
);

7276 
tŸÆUpgødeInvDñay
 +(
evít
->
ªqAckTime
 -Évít->
ªqAtDúTime
);

7279 
tŸÆUpgødeMiss
 ++;

7281 
tŸÆmissh™dÀtime
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

7282 if(
evít
->
isSyncAc˚ss
)

7283 
tŸÆmis°imef‹Sync
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

7286 
tŸÆmis°imef‹N‹mÆ
 +
sim_cy˛e
 - 
evít
->
°¨ãd
;

7287 if(
evít
->
L2miss_Êag
 &&Évít->
L2miss_com∂ëe
 &&Évít->
L2miss_°©ed
)

7289 
tŸÆL2mis°ime
 +
evít
->
L2miss_com∂ëe
 -Évít->
L2miss_°©ed
;

7290 
TŸÆL2mis£s
 ++;

7292 if(
evít
->
L2miss_Êag
)

7293 
tŸÆWr⁄gL2mis°ime
 ++;

7298 
ª∂
->
ªady
 = 
sim_cy˛e
;

7300 if((
evít
->
¥e„tch_√xt
 =2 ||Évít->¥e„tch_√xà=4)&& (evít->
›î©i⁄
 =
ACK_DIR_READ_SHARED
 ||Évít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
))

7302 
ª∂
->
isL1¥e„tch
 = 1;

7303 
ª∂
->
¥e„tch_time
 = 
sim_cy˛e
;

7307 
ª∂
->
isL1¥e„tch
 = 0;

7308 
ª∂
->
¥e„tch_time
 = 0;

7311 i‡((
evít
->
˝
)->
hsize
)

7312 
	`lök_hèb_ít
((
evít
->
˝
), &”vít->˝)->
£ts
[
£t
], 
ª∂
);

7316 if(!
evít
->
•ec_mode
 &&Évít->
rs
)

7318 if((
evít
->
›î©i⁄
 =
ACK_DIR_READ_SHARED
Ë|| (evít->›î©i⁄ =
ACK_DIR_READ_EXCLUSIVE
))

7319 
	`evítq_upd©e
(
evít
->
rs
, 
ª∂
->
ªady
);

7321 
evít
->
rs
->
wrôewaô
 = 2;

7323 
	`mshª¡ry_upd©e
(
evít
, 
ª∂
->
ªady
,Évít->
°¨ãd
);

7325 
	`‰ì_evít
(
evít
);

7328 #ifde‡
PREFETCH_OPTI


7329 
READ_DATA_REPLY_EXCLUSIVE
:

7330 
READ_META_REPLY_EXCLUSIVE
:

7331 
READ_DATA_REPLY_SHARED
:

7332 
READ_META_REPLY_SHARED
:

7333 
WRITE_DATA_REPLY
:

7334 
WRITE_META_REPLY
:

7335 
dˇche_ac˚ss
++;

7336 
thec⁄ãxts
[(
evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+evít->
des2
]->
dˇche_ac˚ss
++;

7338 
èg
 = 
	`CACHE_TAG
(
evít
->
˝
, 
addr
);

7339 
£t
 = 
	`CACHE_SET
(
evít
->
˝
, 
addr
);

7341 (
evít
->
˝
)->
pﬁicy
)

7343 
bödex
, 
i
=0;

7344 
LRU
:

7345 
FIFO
:

7346 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

7348 #ifde‡
WRITE_EARLY


7349 
i
 = 
evít
->
˝
->
assoc
;

7351 if(
i
 == 0) ;

7352 
i
--;

7353 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

7354 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

7356 
ª∂
->
°©us
 & 
CACHE_BLK_WVALID
);

7358 if(
ª∂
->
°©us
 & 
CACHE_BLK_WVALID
)

7360 
L1_Êù_cou¡î
 ++;

7361 
evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7362 
	`dú_evítq_ö£π
(
evít
);

7366 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

7367 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

7372 
ª∂
 = (
evít
->
˝
)->
£ts
[
£t
].
way_èû
;

7373 
	`upd©e_way_li°
 (&(
evít
->
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

7376 
R™dom
:

7377 
bödex
 = 
	`myønd
 (Ë& ((
evít
->
˝
)->
assoc
 - 1);

7378 
ª∂
 = 
	`CACHE_BINDEX
 ((
evít
->
˝
), (evít->˝)->
£ts
[
£t
].
blks
, 
bödex
);

7381 
	`∑nic
 ("bogusÑeplacementÖolicy");

7384 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

7385 #ifde‡
SILENT_DROP


7386 #i‚de‡
UPDATE_HINT


7387 && (
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

7392 i‡(
cﬁÀ˘_°©s
)

7393 
evít
->
˝
->
ª∂a˚míts
++;

7395 i‡(
a˘uÆPro˚ss
 =1 && !
	`md_ãxt_addr
(
ª∂
->
addr
, 
ãmpID
))

7397 i‡((
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& !‘ïl->
°©e
 =
MESI_MODIFIED
))

7398 
	`∑nic
 ("Cache Block should have been modified here");

7400 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

7401 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

7402 
√w_evít
->
isPª„tch
 = 0;

7403 #i‡
	`deföed
(
NON_SILENT_DROP
Ë|| deföed(
UPDATE_HINT
)

7404 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

7407 i‡(
cﬁÀ˘_°©s
)

7408 
evít
->
˝
->
wrôebacks
++;

7409 #ifde‡
WB_SPLIT


7410 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK_HEAD
;

7411 
∑ckë_size
 = 
mëa_∑ckë_size
;

7412 
j
=0, 
wb_f
;

7413 
j
=0;j<
MSHR_SIZE
;j++)

7415 if(
wb_buf„r
[
evít
->
des1
*
mesh_size
+evít->
des2
][
j
] == 0)

7417 
wb_buf„r
[
evít
->
des1
*
mesh_size
+evít->
des2
][
j
] = 
ª∂
->
addr
;

7418 
wb_f
 = 1;

7422 if(
wb_f
 == 0)

7423 
	`¥ötf
("Wb_addrÖending buffer is full\n");

7425 
√w_evít
->
›î©i⁄
 = 
WRITE_BACK
;

7426 
∑ckë_size
 = 
d©a_∑ckë_size
;

7428 #i‡
	`deföed
(
NON_SILENT_DROP
Ë|| deföed(
UPDATE_HINT
)

7432 
√w_evít
->
›î©i⁄
 = 
UPDATE_DIR
;

7433 
∑ckë_size
 = 
mëa_∑ckë_size
;

7434 i‡(
cﬁÀ˘_°©s
)

7435 
evít
->
˝
->
dú_nŸifiˇti⁄
++;

7438 
√w_evít
->
c⁄f_bô
 = -1;

7439 
√w_evít
->
ªq_time
 = 0;

7440 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

7441 
√w_evít
->
≥ndög_Êag
 = 0;

7442 
√w_evít
->
›
 = 
evít
->op;

7443 
√w_evít
->
§c1
 = 
evít
->
des1
;

7444 
√w_evít
->
§c2
 = 
evít
->
des2
;

7445 
md_addr_t
 
§c
 = (
ª∂
->
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

7446 
√w_evít
->
des1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

7447 
√w_evít
->
des2
 = (
§c
 %
mesh_size
);

7448 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7449 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7450 
√w_evít
->
∑ª¡
 = 
NULL
;

7451 
√w_evít
->
blk_dú
 = 
NULL
;

7452 
√w_evít
->
chûdCou¡
 = 0;

7453 
√w_evít
->
ãmpID
 = 
evít
->tempID;

7454 
√w_evít
->
L2miss_Êag
 = 
evít
->L2miss_flag;

7455 
√w_evít
->
ª£nd
 = 0;

7456 
√w_evít
->
blk1
 = 
ª∂
;

7457 
√w_evít
->
addr
 = 
ª∂
->addr;

7458 
√w_evít
->
˝
 = 
evít
->cp;

7459 
√w_evít
->
vp
 = 
NULL
;

7460 
√w_evít
->
nbyãs
 = 
evít
->
˝
->
bsize
;

7461 
√w_evít
->
ud©a
 = 
NULL
;

7462 
√w_evít
->
cmd
 = 
Wrôe
;

7463 
√w_evít
->
rs
 = 
NULL
;

7464 
√w_evít
->
•ec_mode
 = 0;

7465 
√w_evít
->
d©a_ª∂y
 = 0;

7466 
√w_vc
 = 0;

7468 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
∑ckë_size
, 
√w_vc
);

7470 
	`dú_evítq_ö£π
(
√w_evít
);

7474 
ª∂
->
ègid
.
èg
 =Åag;

7475 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

7476 
ª∂
->
addr
 = 
evít
->addr;

7477 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7479 
ª∂
->
blkImdtOp
 = 0;

7480 
ª∂
->
blkNextOps
 = 0;

7482 #ifde‡
SERIALIZATION_ACK


7483 if(
evít
->
≥ndögInvAck
)

7484 
numSt‹ePídög
[
ãmpID
]++;

7488 
bofs
 = 
	`CACHE_BLK
(
evít
->
˝
,Évít->
addr
);

7489 i‡((
evít
->
˝
)->
bÆloc
 && (evít->
vp
))

7490 
	`CACHE_BCOPY
(
evít
->
cmd
, 
ª∂
, 
bofs
,Évít->
vp
,Évít->
nbyãs
);

7493 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7494 if(
evít
->
›î©i⁄
 =
READ_META_REPLY_EXCLUSIVE
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_EXCLUSIVE
)

7495 
ª∂
->
°©e
 = 
MESI_EXCLUSIVE
;

7496 if(
evít
->
›î©i⁄
 =
READ_META_REPLY_SHARED
 ||Évít->›î©i⁄ =
READ_DATA_REPLY_SHARED
)

7497 
ª∂
->
°©e
 = 
MESI_SHARED
;

7498 if(
evít
->
›î©i⁄
 =
WRITE_DATA_REPLY
 ||Évít->›î©i⁄ =
WRITE_META_REPLY
)

7500 
ª∂
->
°©e
 = 
MESI_MODIFIED
;

7501 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

7504 (
evít
->
˝
)->
œ°_èg£tid
.
èg
 = 0;

7505 (
evít
->
˝
)->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

7506 (
evít
->
˝
)->
œ°_blk
 = 
ª∂
;

7509 i‡(
evít
->
ud©a
)

7510 *(
evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

7512 
ª∂
->
ªady
 = 
sim_cy˛e
;

7514 i‡((
evít
->
˝
)->
hsize
)

7515 
	`lök_hèb_ít
((
evít
->
˝
), &”vít->˝)->
£ts
[
£t
], 
ª∂
);

7519 if(!
evít
->
•ec_mode
 &&Évít->
rs
)

7521 if((
evít
->
›î©i⁄
 =
READ_DATA_REPLY_SHARED
Ë|| (evít->›î©i⁄ =
READ_META_REPLY_SHARED
Ë|| (evít->›î©i⁄ =
READ_DATA_REPLY_EXCLUSIVE
Ë|| (evít->›î©i⁄ =
READ_META_REPLY_EXCLUSIVE
))

7522 
	`evítq_upd©e
(
evít
->
rs
, 
ª∂
->
ªady
);

7524 
evít
->
rs
->
wrôewaô
 = 2;

7526 
	`mshª¡ry_upd©e
(
evít
, 
ª∂
->
ªady
,Évít->
°¨ãd
);

7528 
	`‰ì_evít
(
evít
);

7531 
WAIT_MEM_READ
 :

7532 
WAIT_MEM_READ_N
 :

7534 
DIRECTORY_EVENT
 *
p_evít
;

7535 
DIRECTORY_EVENT
 *
gp_evít
;

7536 if(
evít
->
›î©i⁄
 =
WAIT_MEM_READ_N
)

7537 
evít
->
›î©i⁄
 =
WAIT_MEM_READ
;

7538 
ªFœg
 = 0;

7539 if(
evít
->
∑ª¡_›î©i⁄
 < 100)

7541 
evít
->
∑ª¡
->
chûdCou¡
 --;

7542 
gp_evít
 = 
evít
->
∑ª¡
;

7543 
	`‰ì_evít
(
evít
);

7544 if(
gp_evít
->
chûdCou¡
 =
ˇche_dl2
->
bsize
/
max_∑ckë_size
-1)

7545 
ªFœg
 = 1;

7547 if(
ªFœg
 || 
evít
->
∑ª¡_›î©i⁄
 >= 100)

7550 if(
ªFœg
)

7552 if(
gp_evít
->
∑ª¡
->
›î©i⁄
 =
WAIT_MEM_READ
)

7554 
p_evít
 = 
gp_evít
->
∑ª¡
;

7558 
p_evít
 = 
gp_evít
;

7560 if(
evít
->
∑ª¡_›î©i⁄
 >= 100)

7562 
p_evít
 = 
evít
;

7563 
p_evít
->
∑ª¡_›î©i⁄
 =Ö_event->parent_operation - 100;

7565 
dˇche2_ac˚ss
++;

7566 
thec⁄ãxts
[(
p_evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+p_evít->
des2
]->
dˇche2_ac˚ss
++;

7567 
p_evít
->
L2miss_com∂ëe
 = 
sim_cy˛e
;

7569 
˝_dú
->
pﬁicy
)

7571 
i
;

7572 
bödex
;

7573 
LRU
:

7574 
FIFO
:

7575 
i
 = 
˝_dú
->
assoc
;

7577 if(
i
 == 0) ;

7578 
i
--;

7579 
ª∂
 = 
˝_dú
->
£ts
[
£t_dú
].
way_èû
;

7580 
	`upd©e_way_li°
 (&
˝_dú
->
£ts
[
£t_dú
], 
ª∂
, 
Hód
);

7582 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
, (
p_evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+p_evít->
des2
,Ñïl->
addr
));

7584 if(
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
, (
p_evít
->
des1
-
MEM_LOC_SHIFT
)*
mesh_size
+p_evít->
des2
,Ñïl->
addr
))

7586 
Êù_cou¡î
 ++;

7587 
p_evít
->
Êù_Êag
 = 1;

7588 
p_evít
->
whí
 = 
sim_cy˛e
 + 
RETRY_TIME
;

7589 
p_evít
->
∑ª¡_›î©i⁄
 += 100;

7590 
	`dú_evítq_ö£π
(
p_evít
);

7594 
R™dom
:

7595 
bödex
 = 
	`myønd
 (Ë& (
˝_dú
->
assoc
 - 1);

7596 
ª∂
 = 
	`CACHE_BINDEX
 (
˝_dú
, cp_dú->
£ts
[
£t_dú
].
blks
, 
bödex
);

7599 
	`∑nic
 ("bogusÑeplacementÖolicy");

7602 
ª∂
->
evî_dúty
 = 0;

7603 
ª∂
->
evî_touch
 = 0;

7604 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

7607 i‡(
cﬁÀ˘_°©s
)

7608 
˝_dú
->
ª∂a˚míts
++;

7610 
√w_vc
 = 0;

7612 
i
=0, 
m
=0, 
ôî©i⁄
 = 1, 
Êag
 = 0, 
sh¨î_num
 = 0;

7613 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

7614 
ôî©i⁄
 = iteration * 2;

7615 
i
=0; i<
ôî©i⁄
; i++)

7616 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
))

7617 
sh¨î_num
 ++;

7619 
p_evít
->
chûdCou¡
 = 0;

7620 
p_evít
->
sh¨î_num
 = 0;

7622 
i
=0; i<
ôî©i⁄
; i++)

7624 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
))

7627 
m
 = 0; m<
ôî©i⁄
; m++)

7628 
ª∂
->
dú_°©e
[
m
] = 
DIR_TRANSITION
;

7629 
ª∂
->
±r_cur_evít
[
i
] = 
p_evít
;

7630 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << 
ˇche_dl2
->
èg_shi·
Ë+ (
£t_dú
 << cache_dl2->
£t_shi·
Ë+ (
i
 << 
ˇche_dl1
[0]->set_shift);

7631 
p_evít
->
ödividuÆ_chûdCou¡
[
i
] = 0;

7632 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

7634 if(((
ª∂
->
dú_sh¨î
[
i
][
Thªadid
/64]) & (()1 << (Threadid%64))) == (()1 << (Threadid%64)))

7636 if(
cﬁÀ˘_°©s
)

7637 
ˇche_dl2
->
övÆid©i⁄s
 ++;

7638 
DIRECTORY_EVENT
 *
√w_evít
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

7639 if(
√w_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

7640 
övﬁve_4_h›s_miss
 ++;

7641 
√w_evít
->
c⁄f_bô
 = -1;

7642 
√w_evít
->
ªq_time
 = 0;

7643 
√w_evít
->
öput_buf„r_fuŒ
 = 0;

7644 
√w_evít
->
≥ndög_Êag
 = 0;

7645 
√w_evít
->
›
 = 
p_evít
->op;

7646 
√w_evít
->
›î©i⁄
 = 
INV_MSG_WRITE
;

7647 
√w_evít
->
isPª„tch
 = 0;

7648 
√w_evít
->
ãmpID
 = 
p_evít
->tempID;

7649 
√w_evít
->
L2miss_Êag
 = 
p_evít
->L2miss_flag;

7650 
√w_evít
->
ª£nd
 = 0;

7651 
√w_evít
->
blk1
 = 
ª∂
;

7652 
√w_evít
->
addr
 = 
ª∂
->addr;

7653 
√w_evít
->
˝
 = 
p_evít
->cp;

7654 
√w_evít
->
vp
 = 
NULL
;

7655 
√w_evít
->
nbyãs
 = 
p_evít
->
˝
->
bsize
;

7656 
√w_evít
->
ud©a
 = 
NULL
;

7657 
√w_evít
->
rs
 = 
NULL
;

7658 
√w_evít
->
•ec_mode
 = 0;

7659 
√w_evít
->
§c1
 = 
p_evít
->
des1
;

7660 
√w_evít
->
§c2
 = 
p_evít
->
des2
;

7661 
√w_evít
->
des1
 = 
Thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

7662 
√w_evít
->
des2
 = 
Thªadid
%
mesh_size
;

7663 
√w_evít
->
¥o˚ssögD⁄e
 = 0;

7664 
√w_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7665 
√w_evít
->
∑ª¡
 = 
p_evít
;

7666 
√w_evít
->
blk_dú
 = 
ª∂
;

7667 
p_evít
->
sh¨î_num
 = sharer_num;

7668 
p_evít
->
blk_dú
 = 
ª∂
;

7669 
p_evít
->
chûdCou¡
++;

7670 
p_evít
->
ödividuÆ_chûdCou¡
[
i
] ++;

7671 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp(network_type, "HYBRID"))

7673 #ifde‡
INV_ACK_CON


7674 
thªad_id
;

7675 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
) > 1)

7677 
√w_evít
->
d©a_ª∂y
 = 0;

7678 if((
√w_evít
->
§c1
*
mesh_size
+√w_evít->
§c2
 !√w_evít->
des1
*mesh_size+√w_evít->
des2
Ë&& ((!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI")Ë|| (!my°ricmp“ëw‹k_ty≥, "HYBRID"Ë&& ((
	`abs
(new_event->src1 -Çew_event->des1) +ábs(new_event->src2 -Çew_event->des2)) > 1))))

7680 
√w_evít
->
d©a_ª∂y
 = 0;

7681 
DIRECTORY_EVENT
 *
√w_evít2
 = 
	`Æloˇã_evít
(
evít
->
isSyncAc˚ss
);

7682 if(
√w_evít2
 =
NULL
Ë
	`∑nic
("Out of Virtual Memory");

7683 
övﬁve_4_h›s_miss
 ++;

7684 
√w_evít2
->
c⁄f_bô
 = -1;

7685 
√w_evít2
->
ªq_time
 = 0;

7686 
√w_evít2
->
öput_buf„r_fuŒ
 = 0;

7687 
√w_evít2
->
≥ndög_Êag
 = 0;

7688 
√w_evít2
->
›
 = 
p_evít
->op;

7689 
√w_evít2
->
›î©i⁄
 = 
ACK_MSG_WRITEUPDATE
;

7690 
√w_evít2
->
isPª„tch
 = 0;

7691 
√w_evít2
->
ãmpID
 = 
p_evít
->tempID;

7692 
√w_evít2
->
L2miss_Êag
 = 
p_evít
->L2miss_flag;

7693 
√w_evít2
->
ª£nd
 = 0;

7694 
√w_evít2
->
blk1
 = 
ª∂
;

7695 
√w_evít2
->
addr
 = 
ª∂
->addr;

7696 
√w_evít2
->
˝
 = 
p_evít
->cp;

7697 
√w_evít2
->
vp
 = 
NULL
;

7698 
√w_evít2
->
nbyãs
 = 
p_evít
->
˝
->
bsize
;

7699 
√w_evít2
->
ud©a
 = 
NULL
;

7700 
√w_evít2
->
rs
 = 
NULL
;

7701 
√w_evít2
->
•ec_mode
 = 0;

7702 
√w_evít2
->
§c1
 = 
√w_evít
->
des1
;

7703 
√w_evít2
->
§c2
 = 
√w_evít
->
des2
;

7704 
√w_evít2
->
des1
 = 
√w_evít
->
§c1
;

7705 
√w_evít2
->
des2
 = 
√w_evít
->
§c2
;

7706 
√w_evít2
->
¥o˚ssögD⁄e
 = 0;

7707 
√w_evít2
->
°¨tCy˛e
 = 
sim_cy˛e
;

7708 
√w_evít2
->
∑ª¡
 = 
p_evít
;

7709 
√w_evít2
->
blk_dú
 = 
ª∂
;

7710 
√w_evít2
->
d©a_ª∂y
 = 0;

7711 
√w_evít2
->
whí
 = 
WAIT_TIME
;

7712 
p›√tMsgNo
 ++;

7713 
√w_evít2
->
p›√tMsgNo
 =ÖopnetMsgNo;

7714 
	`dú_evítq_ö£π
(
√w_evít2
);

7717 
√w_evít
->
d©a_ª∂y
 = 1;

7720 
√w_evít
->
d©a_ª∂y
 = 1;

7722 
√w_evít
->
d©a_ª∂y
 = 1;

7726 
√w_evít
->
d©a_ª∂y
 = 1;

7728 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
√w_vc
);

7730 
	`dú_evítq_ö£π
(
√w_evít
);

7733 
Êag
 = 1;

7734 
sh¨î_di°r
[
p_evít
->
chûdCou¡
] ++;

7735 
	`IsNeighb‹_sh¨î
(
ª∂
->
dú_sh¨î
[
i
], 
ãmpID
);

7738 if(
Êag
 == 1)

7740 if(
cﬁÀ˘_°©s
)

7741 
˝_dú
->
ª∂Inv
++;

7746 if(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

7748 
l
=0;

7749 
l
=0;l<
ˇche_dl2
->
bsize
/
max_∑ckë_size
;l++)

7751 
DIRECTORY_EVENT
 *
√w_evít
;

7752 
√w_evít
 = 
	`Æloˇã_√w_evít
(
p_evít
);

7753 
√w_evít
->
addr
 = 
ª∂
->addr;

7754 
√w_evít
->
›î©i⁄
 = 
MEM_WRITE_BACK
;

7755 
√w_evít
->
cmd
 = 
Wrôe
;

7756 
	`scheduÀThroughNëw‹k
(
√w_evít
, 
sim_cy˛e
, 
d©a_∑ckë_size
, 
√w_vc
);

7757 
	`dú_evítq_ö£π
(
√w_evít
);

7759 
ª∂
->
Iswb_to_mem
 = 1;

7760 if(
cﬁÀ˘_°©s
)

7761 
ˇche_dl2
->
wrôebacks
 ++;

7764 
ª∂
->
Iswb_to_mem
 = 0;

7767 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

7768 #ifde‡
PREFETCH_OPTI


7769 
i
 = 0;

7770 
i
=0;i<
MAXTHREADS
;i++)

7771 
ª∂
->
dú_¥e„tch
[
block_off£t
][
i
] = 0;

7772 
ª∂
->
dú_¥e„tch_num
[
block_off£t
] = 0;

7773 
ª∂
->
¥e„tch_övÆid©e
[
block_off£t
] = 0;

7774 
ª∂
->
¥e„tch_modifõd
[
block_off£t
] = 0;

7776 
ª∂
->
±r_cur_evít
[
block_off£t
] = 
NULL
;

7777 
ª∂
->
ègid
.
èg
 = 
èg_dú
;

7778 
ª∂
->
ègid
.
thªadid
 = 
ãmpID
;

7779 
ª∂
->
addr
 =áddr;

7780 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

7781 
ª∂
->
Iswb_to_mem
 = 0;

7786 i‡(
ª∂
->
way_¥ev
 && 
˝_dú
->
pﬁicy
 =
LRU
)

7787 
	`upd©e_way_li°
(&
˝_dú
->
£ts
[
£t_dú
], 
ª∂
, 
Hód
);

7789 
˝_dú
->
œ°_èg£tid
.
èg
 = 0;

7790 
˝_dú
->
œ°_èg£tid
.
thªadid
 = 
ãmpID
;

7791 
˝_dú
->
œ°_blk
 = 
ª∂
;

7793 
ª∂
->
ex˛usive_time
[
block_off£t
] = 
sim_cy˛e
;

7796 i‡(
p_evít
->
ud©a
)

7797 *(
p_evít
->
ud©a
Ë
ª∂
->
u£r_d©a
;

7799 
ª∂
->
ªady
 = 
sim_cy˛e
;

7801 i‡(
˝_dú
->
hsize
)

7802 
	`lök_hèb_ít
(
˝_dú
, &˝_dú->
£ts
[
£t_dú
], 
ª∂
);

7805 
	`upd©e_L2_mshª¡ry
(
p_evít
->
addr
, 
sim_cy˛e
,Ö_evít->
mshr_time
);

7807 
p_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7808 if(
p_evít
->
∑ª¡_›î©i⁄
 =
L2_PREFETCH
)

7810 
ª∂
->
dú_dúty
[
block_off£t
] = -1;

7811 
ª∂
->
dú_sh¨î
[
block_off£t
][0] = 0;

7812 
ª∂
->
dú_sh¨î
[
block_off£t
][1] = 0;

7813 
ª∂
->
dú_sh¨î
[
block_off£t
][2] = 0;

7814 
ª∂
->
dú_sh¨î
[
block_off£t
][3] = 0;

7815 
	`‰ì_evít
(
p_evít
);

7819 if(
p_evít
->
∑ª¡_›î©i⁄
 =
MISS_IL1
)

7821 
∑ckë_size
 = 
d©a_∑ckë_size
;

7822 
p_evít
->
›î©i⁄
 = 
ACK_DIR_IL1
;

7823 
ª∂
->
dú_dúty
[
block_off£t
] = -1;

7824 
ª∂
->
dú_sh¨î
[
block_off£t
][0] = 0;

7825 
ª∂
->
dú_sh¨î
[
block_off£t
][1] = 0;

7826 
ª∂
->
dú_sh¨î
[
block_off£t
][2] = 0;

7827 
ª∂
->
dú_sh¨î
[
block_off£t
][3] = 0;

7828 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

7829 
p_evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

7831 if(
p_evít
->
∑ª¡_›î©i⁄
 =
MISS_READ


7832 #ifde‡
PREFETCH_OPTI


7833 || 
p_evít
->
∑ª¡_›î©i⁄
 =
L1_PREFETCH


7834 || 
p_evít
->
∑ª¡_›î©i⁄
 =
READ_COHERENCE_UPDATE


7838 
∑ckë_size
 = 
d©a_∑ckë_size
;

7839 
p_evít
->
›î©i⁄
 = 
ACK_DIR_READ_EXCLUSIVE
;

7840 #ifde‡
LOCK_CACHE_REGISTER


7842 if(
p_evít
->
°‹e_c⁄d
 =
MY_LDL_L
)

7843 
	`LockRege°îCheck
(
p_evít
);

7845 
ª∂
->
dú_dúty
[
block_off£t
] = -1;

7846 i‡(!
	`md_ãxt_addr
(
addr
, 
ãmpID
))

7848 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

7849 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

7853 
ª∂
->
dú_sh¨î
[
block_off£t
][0] = 0;

7854 
ª∂
->
dú_sh¨î
[
block_off£t
][1] = 0;

7855 
ª∂
->
dú_sh¨î
[
block_off£t
][2] = 0;

7856 
ª∂
->
dú_sh¨î
[
block_off£t
][3] = 0;

7857 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

7860 if(
p_evít
->
∑ª¡_›î©i⁄
 =
MISS_WRITE


7861 #ifde‡
PREFETCH_OPTI


7862 || 
p_evít
->
∑ª¡_›î©i⁄
 =
WRITE_COHERENCE_UPDATE


7866 
∑ckë_size
 = 
d©a_∑ckë_size
;

7867 
p_evít
->
›î©i⁄
 = 
ACK_DIR_WRITE
;

7868 
ª∂
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

7869 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

7870 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

7874 
∑ckë_size
 = 
mëa_∑ckë_size
;

7875 
p_evít
->
›î©i⁄
 = 
ACK_DIR_WRITEUPDATE
;

7876 
ª∂
->
dú_dúty
[
block_off£t
] = 
ãmpID
;

7877 
ª∂
->
dú_sh¨î
[
block_off£t
][
ãmpID
/64] = ()1<<(tempID%64);

7878 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

7880 
p_evít
->
ªqAckTime
 = 
sim_cy˛e
;

7881 
p_evít
->
§c1
 =Ö_evít->
des1
;

7882 
p_evít
->
§c2
 =Ö_evít->
des2
;

7883 
p_evít
->
des1
 = 
ãmpID
/
mesh_size
+
MEM_LOC_SHIFT
;

7884 
p_evít
->
des2
 = 
ãmpID
%
mesh_size
;

7885 
p_evít
->
¥o˚ssögD⁄e
 = 0;

7886 
p_evít
->
∑ª¡
 = 
NULL
;

7887 
p_evít
->
blk_dú
 = 
ª∂
;

7890 
	`scheduÀThroughNëw‹k
(
p_evít
,Ö_evít->
°¨tCy˛e
, 
∑ckë_size
, 
vc
);

7891 
	`dú_evítq_ö£π
(
p_evít
);

7894 if(
gp_evít
->
chûdCou¡
 == 0)

7900 
	`upd©e_L2_mshª¡ry
(
gp_evít
->
addr
, 
sim_cy˛e
, gp_evít->
mshr_time
);

7901 
	`‰ì_evít
(
gp_evít
);

7906 
	`∑nic
("DIR: undefined directory operation");

7909 
	}
}

7911 
	$ª∂_dú_°©e_check
(*
dú_°©e
, 
id
, 
md_addr_t
 
addr
)

7913 
m
=0, 
ôî©i⁄
 = 1, 
Êag
 = 0;

7914 #ifde‡
EUP_NETWORK


7915 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

7917 if(
	`EUP_íåy_ª∂a˚check
(
id
, 
addr
>>
ˇche_dl2
->
£t_shi·
))

7921 
m
=0; m<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); m++)

7922 
ôî©i⁄
 = iteration * 2;

7923 
m
=0; m<
ôî©i⁄
; m++)

7924 if(
dú_°©e
[
m
] =
DIR_TRANSITION
)

7925 
Êag
 = 1;

7926  
Êag
;

7927 
	}
}

7936 
tŸÆUpgødes
;

7938 
ˇche_ac˚ss
 (
ˇche_t
 *
˝
,

7939 
mem_cmd
 
cmd
,

7940 
md_addr_t
 
addr
,

7941 *
vp
,

7942 
nbyãs
,

7943 
tick_t
 
now
,

7944 
byã_t
 ** 
ud©a
,

7945 
md_addr_t
 * 
ª∂_addr
,

7946 
RUU_°©i⁄
 *
rs
,

7947 
thªadid


7948 #ifde‡
SMD_USE_WRITE_BUF


7949 , 
m_L1WBufE¡ry
 *
l1_wb_íåy


7953 
•rötf
(
dl1«me
, "dl1");

7955 i‡(!
°rcmp
 (
˝
->
«me
, 
dl1«me
Ë&& 
	g˝
->
	gthªadid
 !
thªadid
)

7956 
∑nic
 ("Wrond DL1 cache being called in cacheáccess\n");

7958 if(!
°rcmp
 (
˝
->
«me
, 
dl1«me
Ë&& 
md_ãxt_addr
(
addr
, 
thªadid
))

7959  
	gˇche_dl1_œt
;

7960 if(
	gaddr
 == 5368767520)

7961 
¥ötf
("access here\n");

7962 
byã_t
 *
	gp
 = 
vp
;

7963 
md_addr_t
 
	gèg
 = 
CACHE_TAG
 (
˝
, 
addr
);

7964 
md_addr_t
 
	g£t
 = 
CACHE_SET
 (
˝
, 
addr
);

7965 
md_addr_t
 
	gbofs
 = 
CACHE_BLK
 (
˝
, 
addr
);

7966 
md_addr_t
 
	gaddr_¥e„tch
;

7967 
ˇche_blk_t
 *
	gblk
, *
	gª∂
;

7968 
	gœt
 = 0, 
	g˙t
;

7969 
	gvc
 = -1, 
	ga
 = 0;

7970 
	gisSyncAc˚ss
 = 0;

7971 
RUU_°©i⁄
 *
	gmy_rs
 = 
rs
;

7974 
md_addr_t
 
	gwb_addr
, 
	gª∂Addªss
;

7975 
DIRECTORY_EVENT
 *
	gevít
;

7977 
	gp‹t_œt
 = 0, 
	gnow_œt
 = 0, 
	gp‹t_now
 = 0;

7978 #i‡
PROCESS_MODEL


7979 
	gisSh¨edAddªss
 = 0;

7982 #i‡
PROCESS_MODEL


7984 i‡(!
°rcmp
 (
˝
->
«me
, 
dl1«me
))

7986 
	gisSh¨edAddªss
 = 
checkF‹Sh¨edAddr
 ((Ë
addr
);

7991 i‡(!
°rcmp
 (
˝
->
«me
, 
dl1«me
))

7993 i‡(
	gcmd
 =
Wrôe
)

7995 
˙t
 = 0; 
	g˙t
 < 
	gnumc⁄ãxts
; cnt++)

7997 i‡((
	gquõs˚AddrSåu˘
[
˙t
].
	gaddªss
 =
addr
))

7999 
thec⁄ãxts
[
˙t
]->
‰ìze
 = 0;

8000 
	gthec⁄ãxts
[
˙t
]->
	gru¬ög
 = 1;

8001 
	gquõs˚AddrSåu˘
[
˙t
].
	gaddªss
 = 1;

8002 
	gquõs˚AddrSåu˘
[
˙t
].
	gthªadid
 = -1;

8006 #ifde‡ 
L1_STREAM_PREFETCHER


8008 if(
	grs
)

8010 if(!
	grs
->
	gisSyncIn°
)

8011 
l1œunch_•
 (
addr
, 
thªadid
);

8014 
l1œunch_•
 (
addr
, 
thªadid
);

8019 i‡(
	gª∂_addr
)

8020 *
	gª∂_addr
 = 0;

8022 i‡((
	gnbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (
nbyãs
 - 1)) != 0)

8024 
¥ötf
("nbyã†i†%d\n", 
nbyãs
);

8025 
Áèl
 ("ˇche:ác˚s†îr‹: bad sizê‹álignmít,ádd∏0x%08x", 
addr
);

8028 i‡((
	gaddr
 + 
	gnbyãs
 - 1Ë> (◊dd∏& ~
	g˝
->
	gblk_mask
Ë+ cp->
	gbsize
 - 1))

8029 
∑nic
 ("ˇche:ác˚s†îr‹:ác˚s†•™†block,ádd∏0x%08x", 
addr
);

8031 i‡(
°rcmp
 (
˝
->
«me
, 
dl1«me
))

8033 i‡(
	g˝
->
	ghsize
)

8036 
	ghödex
 = (Ë
CACHE_HASH
 (
˝
, 
èg
);

8038 
	gblk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = 
blk
->
way_√xt
)

8040 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

8041 
ˇche_hô
;

8047 
	gblk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = 
blk
->
way_√xt
)

8049 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

8050 
ˇche_hô
;

8056 if(
	grs
)

8058 if(
	grs
->
	gisSyncIn°
)

8060 
	gSyncIn°CacheAc˚ss
 ++;

8061 if(
	gmy_rs
->
	gö_LSQ
 != 1)

8062 
my_rs
 = &
thec⁄ãxts
[
thªadid
]->
LSQ
[thec⁄ãxts[thªadid]->
LSQ_hód
];

8063 if(!
	gmy_rs
)

8064 
∑nic
("lsq doesÇot haveány data\n");

8065 if(
	gmy_rs
->
	g›
 =
LDL
)

8066 
Te°CacheAc˚ss
 ++;

8067 if(
	gmy_rs
->
	g›
 =
LDL_L
)

8068 
Te°SecCacheAc˚ss
 ++;

8069 if(
	gmy_rs
->
	g›
 =
STL_C
)

8070 
SëCacheAc˚ss
 ++;

8072 #ifde‡
BAR_OPT


8073 if(
	grs
->
	gisSyncIn°B¨Rñ
)

8075 if(
	gmy_rs
->
	gö_LSQ
 != 1)

8076 
my_rs
 = &
thec⁄ãxts
[
thªadid
]->
LSQ
[thec⁄ãxts[thªadid]->
LSQ_hód
];

8077 if(!
	gmy_rs
)

8078 
∑nic
("lsq doesÇot haveány data\n");

8082 #ifde‡
SMD_USE_WRITE_BUF


8083 if(
	gl1_wb_íåy
)

8084 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

8085 
SëCacheAc˚ss
 ++;

8087 
	gcmd
)

8089 
	gRód
:

8090 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; 
	gblk
; blk = blk->
way_√xt
)

8092 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
Ë&& ((blk->
°©e
 =
MESI_SHARED
Ë|| (blk->°©ê=
MESI_MODIFIED
Ë|| (blk->°©ê=
MESI_EXCLUSIVE
)))

8094 
blk
->
addr
 =áddr;

8096 
	gblk
->
	gRódCou¡
 ++;

8097 
	gblk
->
	gW‹dU£Fœg
[(
blk
->
addr
>>2) & 7] = 1;

8098 i‡(
	gcﬁÀ˘_°©s
)

8100 
	gblk
->
	g°©e
)

8102 
	gMESI_SHARED
:

8103 
˝
->
ccLoˇlLﬂdS
++;

8105 
	gMESI_EXCLUSIVE
:

8106 
˝
->
ccLoˇlLﬂdX
++;

8108 
	gMESI_MODIFIED
:

8109 
˝
->
ccLoˇlLﬂdM
++;

8115 #ifde‡
PREFETCH_OPTI


8116 if(
	gblk
->
	gisL1¥e„tch
)

8118 
	gL1_¥e„tch_u£fuŒ
 ++;

8119 
	gRódPª„tchUpd©e
 ++;

8122 
	gblk
->
	gisL1¥e„tch
 = 0;

8123 
	gblk
->
	g¥e„tch_time
 = 0;

8124 
	gblk
->
	g°©us
 = 0;

8126 
	gevít
 = (
DIRECTORY_EVENT
 *Ë
Æloˇã_evít
(
isSyncAc˚ss
);

8127 i‡(!
	gevít
)

8128 
Áèl
("out of virtual memory in calloc dirÉvent");

8130 
	gevít
->
	g›
 = 0;

8131 
	gevít
->
	gisPª„tch
 = 0;

8132 
	gevít
->
	gisSyncAc˚ss
 = 0;

8133 
	gevít
->
	g•ec_mode
 = 0;

8134 
	gevít
->
	g§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

8135 
	gevít
->
	g§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

8136 
	g§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8137 
	gevít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8138 
	gevít
->
	gdes2
 = (
§c
 %
mesh_size
);

8139 
	gevít
->
	g°¨ãd
 = 
now
;

8140 
	gevít
->
	g°¨tCy˛e
 = 
now
;

8141 
	gevít
->
	g≥ndög_Êag
 = 0;

8142 
	gevít
->
	gd©a_ª∂y
 = 0;

8143 
	gevít
->
	gªq_time
 = 0;

8144 
	gmissNo
 ++;

8145 
	gevít
->
	gª£nd
 = 0;

8146 
	gevít
->
	gchûdCou¡
 = 0;

8147 
	gevít
->
	g∑ª¡
 = 
NULL
;

8148 
	gevít
->
	g›î©i⁄
 = 
READ_COHERENCE_UPDATE
;

8149 
	gevít
->
	gãmpID
 = 
thªadid
;

8150 
	gevít
->
	gblk1
 = 
NULL
;

8151 
	gevít
->
	gaddr
 = 
addr
;

8152 
	gevít
->
	g˝
 = 
˝
;

8153 
	gevít
->
	gvp
 = 
p
;

8154 
	gevít
->
	gnbyãs
 = 
nbyãs
;

8155 
	gevít
->
	gud©a
 = 
ud©a
;

8156 
	gevít
->
	gcmd
 = 
cmd
;

8157 
	gevít
->
	grs
 = 
rs
;

8158 #ifde‡
SMD_USE_WRITE_BUF


8159 
	gevít
->
	gl1_wb_íåy
 = 
l1_wb_íåy
;

8161 
	gevít
->
	gmissNo
 = 
missNo
;

8162 
	gevít
->
	gl2Sètus
 = 0;

8163 
	gevít
->
	gl2MissSèπ
 = 0;

8164 
	gevít
->
	gL2miss_Êag
 = 0;

8165 
	gevít
->
	gsh¨î_num
 = 0;

8166 
	gevít
->
	gdúty_Êag
 = 0;

8167 
	gevít
->
	g¨rivÆ_time
 = 0;

8168 
	gevít
->
	gc⁄f_bô
 = -1;

8169 
	gevít
->
	göput_buf„r_fuŒ
 = 0;

8171 
scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8172 
dú_evítq_ö£π
(
evít
);

8173 
	gevít_¸óãd
 = 
evít
;

8174  
	gWAIT_TIME
;

8177 
	gˇche_hô
;

8179 
	gˇche_hô
;

8184 
	gWrôe
:

8185 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; 
	gblk
; blk = blk->
way_√xt
)

8187 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

8189 
blk
->
addr
 =áddr;

8190 
	gblk
->
	g°©e
)

8192 
	gMESI_MODIFIED
:

8193 i‡(
cﬁÀ˘_°©s
)

8194 
˝
->
ccLoˇlSt‹eM
++;

8196 
	gblk
->
	gWrôeCou¡
 ++;

8197 
	gblk
->
	gW‹dU£Fœg
[(
blk
->
addr
>>2) & 7] = 1;

8198 
	gˇche_hô
;

8201 
	gMESI_SHARED
:

8202 i‡(
cﬁÀ˘_°©s
)

8203 
˝
->
ccLoˇlSt‹eS
++;

8204 i‡(
	g•ec_bíchm¨ks
)

8205 
∑nic
 ("The state canÇever be shared \n");

8207 
	gblk
->
	g°©us
 = 0;

8208 if(
	gcﬁÀ˘_°©s
)

8211 if(
	gblk
->
	gblkAlocRós⁄
 =
LINE_PREFETCH
)

8213 if(
blk
->
blkImdtOp
)

8214 
tŸÆL1LöePªfU£
++;

8216 
	gtŸÆL1LöePªfNoU£
++;

8218 if(
	gblk
->
	gblkAlocRós⁄
 =
LINE_READ
)

8220 if(
blk
->
blkImdtOp
)

8221 
tŸÆL1LöeRódU£
++;

8223 
	gtŸÆL1LöeRódNoU£
++;

8225 i‡(
	gblk
->
	gblkAlocRós⁄
 =
LINE_WRITE
)

8227 if(
blk
->
blkImdtOp
)

8228 
tŸÆL1LöeWrôeU£
++;

8230 
	gtŸÆL1LöeWrôeNoU£
++;

8233 if(
	grs
)

8234 
	gisSyncAc˚ss
 = 
rs
->
isSyncIn°
;

8235 #ifde‡
SMD_USE_WRITE_BUF


8236 if(
	gl1_wb_íåy
)

8237 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

8238 
isSyncAc˚ss
 = 1;

8240 
	gevít
 = (
DIRECTORY_EVENT
 *)

8241 
Æloˇã_evít
(
isSyncAc˚ss
);

8242 i‡(!
	gevít
)

8243 
Áèl
("out of virtual memory in calloc dirÉvent");

8245 
	g§c
;

8246 if(
	gmy_rs
)

8248 
	gevít
->
	g›
 = 
my_rs
->
›
;

8249 
	gevít
->
	gisPª„tch
 = !
my_rs
->
issued
;

8250 
	gevít
->
	gisSyncAc˚ss
 = 
isSyncAc˚ss
;

8251 
	gevít
->
	g•ec_mode
 = 
my_rs
->
•ec_mode
;

8252 if(
	gmy_rs
->
	gisSyncIn°
)

8254 if(
	gmy_rs
->
	g›
 =
STL_C
 || 
my_rs
->
›
 =
STQ_C
)

8256 
evít
->
°‹e_c⁄d
 = 
MY_STL_C
;

8257 
	gSyncSt‹eCWrôeUpgøde
 ++;

8259 if(
	gmy_rs
->
	g›
 =
STL
)

8261 
SyncSt‹eWrôeUpgøde
 ++;

8262 
	gevít
->
	g°‹e_c⁄d
 = 
MY_STL
;

8265 #ifde‡
BAR_OPT


8266 if(
	gmy_rs
->
	gisSyncIn°B¨Rñ
 && my_rs->
	g›
 =
STL
)

8268 
B¨St‹eWrôeUpgøde
 ++;

8269 
	gevít
->
	g°‹e_c⁄d
 = 
MY_STL
;

8273 #ifde‡
SMD_USE_WRITE_BUF


8274 if(
	gl1_wb_íåy
)

8276 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

8278 
evít
->
°‹e_c⁄d
 = 
MY_STL_C
;

8279 
	gSyncSt‹eCWrôeUpgøde
 ++;

8285 
	gevít
->
	g›
 = 0;

8286 
	gevít
->
	gisPª„tch
 = 0;

8287 
	gevít
->
	gisSyncAc˚ss
 = 0;

8288 
	gevít
->
	g•ec_mode
 = 0;

8290 
	gevít
->
	g§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

8291 
	gevít
->
	g§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

8292 
	g§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8293 
	gevít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8294 
	gevít
->
	gdes2
 = (
§c
 %
mesh_size
);

8295 
	gevít
->
	g°¨ãd
 = 
now
;

8296 
	gevít
->
	g°¨tCy˛e
 = 
now
;

8297 
	gevít
->
	g≥ndög_Êag
 = 0;

8298 
	gevít
->
	gd©a_ª∂y
 = 0;

8299 
	gevít
->
	gªq_time
 = 0;

8301 if(
	gcﬁÀ˘_°©s
)

8303 
	g˝
->
	gövÆid©i⁄s
++;

8304 if(((
	gevít
->
	gaddr
)>>
	gˇche_dl2
->
	g£t_shi·
)%
	gnumc⁄ãxts
 =
thec⁄ãxts
[
thªadid
]->
a˘uÆid
)

8305 
loˇl_ˇche_ac˚ss
++;

8307 
	gªmŸe_ˇche_ac˚ss
++;

8310 
	gmissNo
 ++;

8311 
	gevít
->
	gª£nd
 = 0;

8312 
	gevít
->
	gchûdCou¡
 = 0;

8313 
	gevít
->
	g∑ª¡
 = 
NULL
;

8314 
	gevít
->
	g›î©i⁄
 = 
WRITE_UPDATE
;

8315 
	gm_upd©e_miss
[
thªadid
] = 1;

8317 if(
	gcﬁÀ˘_°©s
)

8318 
	gtŸÆevítcou¡num
 ++;

8319 if(
	gcﬁÀ˘_°©s
 && 
	gevít
->
	gisSyncAc˚ss
)

8321 
	gtŸÆSyncWrôeup
 ++;

8322 
	gtŸÆSyncEvít
 ++;

8325 
	gtŸÆN‹mÆEvít
 ++;

8326 
	gtŸÆUpgødes
++;

8327 
	gevít
->
	gãmpID
 = 
thªadid
;

8328 
	gevít
->
	gblk1
 = 
NULL
;

8329 
	gevít
->
	gaddr
 = 
addr
;

8330 
	gevít
->
	g˝
 = 
˝
;

8331 
	gevít
->
	gvp
 = 
p
;

8332 
	gevít
->
	gnbyãs
 = 
nbyãs
;

8333 
	gevít
->
	gud©a
 = 
ud©a
;

8334 
	gevít
->
	gcmd
 = 
cmd
;

8335 
	gevít
->
	grs
 = 
rs
;

8336 #ifde‡
SMD_USE_WRITE_BUF


8337 
	gevít
->
	gl1_wb_íåy
 = 
l1_wb_íåy
;

8339 
	gevít
->
	gmissNo
 = 
missNo
;

8340 
	gevít
->
	gl2Sètus
 = 0;

8341 
	gevít
->
	gl2MissSèπ
 = 0;

8342 
	gevít
->
	gL2miss_Êag
 = 0;

8343 
	gevít
->
	gsh¨î_num
 = 0;

8344 
	gevít
->
	gdúty_Êag
 = 0;

8345 
	gevít
->
	g¨rivÆ_time
 = 0;

8346 
	gevít
->
	gc⁄f_bô
 = -1;

8347 
	gevít
->
	göput_buf„r_fuŒ
 = 0;

8349 
scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8350 
dú_evítq_ö£π
(
evít
);

8352 
	gevít_¸óãd
 = 
evít
;

8353 if(
	gblk
->
	gisL1¥e„tch
)

8354 
	gL1_¥e„tch_wrôó·î
 ++;

8356 
	gœt
 = 
œt
 + 
WAIT_TIME
;

8357  
	gœt
;

8360 
	gMESI_EXCLUSIVE
:

8361 i‡(
cﬁÀ˘_°©s
)

8362 
˝
->
e_to_m
++;

8363 
	ge_to_m
 ++;

8364 
	gtŸÆL1LöeExlU£d
++;

8365 
	gblk
->
	g°©e
 = 
MESI_MODIFIED
;

8366 
	gblk
->
	gWrôeCou¡
 ++;

8367 
	gblk
->
	gW‹dU£Fœg
[(
blk
->
addr
>>2) & 7] = 1;

8368 #ifde‡
COHERENCE_MODIFIED


8369 
	gevít
 = (
DIRECTORY_EVENT
 *Ë
Æloˇã_evít
(
isSyncAc˚ss
);

8370 i‡(!
	gevít
)

8371 
Áèl
("out of virtual memory in calloc dirÉvent");

8373 
	gevít
->
	g›
 = 0;

8374 
	gevít
->
	gisPª„tch
 = 0;

8375 
	gevít
->
	gisSyncAc˚ss
 = 0;

8376 
	gevít
->
	g•ec_mode
 = 0;

8377 
	gevít
->
	g§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

8378 
	gevít
->
	g§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

8379 
	g§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8380 
	gevít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8381 
	gevít
->
	gdes2
 = (
§c
 %
mesh_size
);

8382 
	gevít
->
	g°¨ãd
 = 
now
;

8383 
	gevít
->
	g°¨tCy˛e
 = 
now
;

8384 
	gevít
->
	g≥ndög_Êag
 = 0;

8385 
	gevít
->
	gd©a_ª∂y
 = 0;

8386 
	gevít
->
	gªq_time
 = 0;

8387 
	gmissNo
 ++;

8388 
	gevít
->
	gª£nd
 = 0;

8389 
	gevít
->
	gchûdCou¡
 = 0;

8390 
	gevít
->
	g∑ª¡
 = 
NULL
;

8391 
	gevít
->
	g›î©i⁄
 = 
WRITE_INDICATE
;

8393 if(
	gcﬁÀ˘_°©s
)

8394 
	gtŸÆWrôeIndiˇã
 ++;

8395 
	gevít
->
	gãmpID
 = 
thªadid
;

8396 
	gevít
->
	gblk1
 = 
NULL
;

8397 
	gevít
->
	gaddr
 = 
addr
;

8398 
	gevít
->
	g˝
 = 
˝
;

8399 
	gevít
->
	gvp
 = 
p
;

8400 
	gevít
->
	gnbyãs
 = 
nbyãs
;

8401 
	gevít
->
	gud©a
 = 
ud©a
;

8402 
	gevít
->
	gcmd
 = 
cmd
;

8403 
	gevít
->
	grs
 = 
rs
;

8404 #ifde‡
SMD_USE_WRITE_BUF


8405 
	gevít
->
	gl1_wb_íåy
 = 
l1_wb_íåy
;

8407 
	gevít
->
	gmissNo
 = 
missNo
;

8408 
	gevít
->
	gl2Sètus
 = 0;

8409 
	gevít
->
	gl2MissSèπ
 = 0;

8410 
	gevít
->
	gL2miss_Êag
 = 0;

8411 
	gevít
->
	gsh¨î_num
 = 0;

8412 
	gevít
->
	gdúty_Êag
 = 0;

8413 
	gevít
->
	g¨rivÆ_time
 = 0;

8414 
	gevít
->
	gc⁄f_bô
 = -1;

8415 
	gevít
->
	göput_buf„r_fuŒ
 = 0;

8417 
scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8418 
dú_evítq_ö£π
(
evít
);

8419 
	gevít_¸óãd
 = 
evít
;

8421 #ifde‡
PREFETCH_OPTI


8422 if(
	gblk
->
	gisL1¥e„tch
)

8424 
	gL1_¥e„tch_u£fuŒ
 ++;

8425 
	gL1_¥e„tch_wrôó·î
 ++;

8426 
	gWrôePª„tchUpd©e
 ++;

8429 
	gblk
->
	gisL1¥e„tch
 = 0;

8430 
	gblk
->
	g¥e„tch_time
 = 0;

8431 
	gblk
->
	g°©us
 = 0;

8433 
	gevít
 = (
DIRECTORY_EVENT
 *Ë
Æloˇã_evít
(
isSyncAc˚ss
);

8434 i‡(!
	gevít
)

8435 
Áèl
("out of virtual memory in calloc dirÉvent");

8437 
	gevít
->
	g›
 = 0;

8438 
	gevít
->
	gisPª„tch
 = 0;

8439 
	gevít
->
	gisSyncAc˚ss
 = 0;

8440 
	gevít
->
	g•ec_mode
 = 0;

8441 
	gevít
->
	g§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

8442 
	gevít
->
	g§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

8443 
	g§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8444 
	gevít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8445 
	gevít
->
	gdes2
 = (
§c
 %
mesh_size
);

8446 
	gevít
->
	g°¨ãd
 = 
now
;

8447 
	gevít
->
	g°¨tCy˛e
 = 
now
;

8448 
	gevít
->
	g≥ndög_Êag
 = 0;

8449 
	gevít
->
	gd©a_ª∂y
 = 0;

8450 
	gevít
->
	gªq_time
 = 0;

8451 
	gmissNo
 ++;

8452 
	gevít
->
	gª£nd
 = 0;

8453 
	gevít
->
	gchûdCou¡
 = 0;

8454 
	gevít
->
	g∑ª¡
 = 
NULL
;

8455 
	gevít
->
	g›î©i⁄
 = 
WRITE_COHERENCE_UPDATE
;

8456 
	gevít
->
	gãmpID
 = 
thªadid
;

8457 
	gevít
->
	gblk1
 = 
NULL
;

8458 
	gevít
->
	gaddr
 = 
addr
;

8459 
	gevít
->
	g˝
 = 
˝
;

8460 
	gevít
->
	gvp
 = 
p
;

8461 
	gevít
->
	gnbyãs
 = 
nbyãs
;

8462 
	gevít
->
	gud©a
 = 
ud©a
;

8463 
	gevít
->
	gcmd
 = 
cmd
;

8464 
	gevít
->
	grs
 = 
rs
;

8465 #ifde‡
SMD_USE_WRITE_BUF


8466 
	gevít
->
	gl1_wb_íåy
 = 
l1_wb_íåy
;

8468 
	gevít
->
	gmissNo
 = 
missNo
;

8469 
	gevít
->
	gl2Sètus
 = 0;

8470 
	gevít
->
	gl2MissSèπ
 = 0;

8471 
	gevít
->
	gL2miss_Êag
 = 0;

8472 
	gevít
->
	gsh¨î_num
 = 0;

8473 
	gevít
->
	gdúty_Êag
 = 0;

8474 
	gevít
->
	g¨rivÆ_time
 = 0;

8475 
	gevít
->
	gc⁄f_bô
 = -1;

8476 
	gevít
->
	göput_buf„r_fuŒ
 = 0;

8478 
scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8479 
dú_evítq_ö£π
(
evít
);

8480 
	gevít_¸óãd
 = 
evít
;

8481  
	gWAIT_TIME
;

8484 
	gˇche_hô
;

8486 
	gˇche_hô
;

8490 
∑nic
 ("ShouldÇot be invalid");

8497 
∑nic
 ("CacheÅoÅhe command isÇeitherÑeadÇor write");

8502 
	gÊag
 = 0, 
	g√xt_block
 = 0, 
	g¥e_block
 = 0;

8503 if(!
°rcmp
(
˝
->
«me
, 
dl1«me
))

8506 if(
	gcﬁÀ˘_°©s
)

8508 
	gblk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = 
blk
->
way_√xt
)

8510 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 =0)&& (blk->
°©e
 =
MESI_INVALID
))

8512 
˝
->
cohîí˚_mis£s
 ++;

8513 
	gÊag
 = 1;

8516 if(
	gÊag
 != 1)

8517 
˝
->
ˇ∑cô™˚_mis£s
 ++;

8519 #ifde‡
DL1_PREFETCH


8521 if(
	g£t
 == 0)

8523 
blk
 = 
˝
->
£ts
[˝->
n£ts
-1].
way_hód
; 
	gblk
; blk = blk->
way_√xt
)

8525 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

8526 
¥e_block
 = 1;

8531 
	gblk
 = 
˝
->
£ts
[(
£t
-1)%˝->
n£ts
].
way_hód
; blk; blk = 
blk
->
way_√xt
)

8533 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

8534 
¥e_block
 = 1;

8537 
	gblk
 = 
˝
->
£ts
[(
£t
+1)%˝->
n£ts
].
way_hód
; blk; blk = 
blk
->
way_√xt
)

8539 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

8540 
√xt_block
 = 1;

8544 if(
	grs
)

8545 
	gisSyncAc˚ss
 = 
rs
->
isSyncIn°
;

8546 #ifde‡
SMD_USE_WRITE_BUF


8547 if(
	gl1_wb_íåy
)

8548 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

8549 
isSyncAc˚ss
 = 1;

8551 
	gevít
 = (
DIRECTORY_EVENT
 *)

8552 
Æloˇã_evít
(
isSyncAc˚ss
);

8554 i‡(!
	gevít
)

8555 
Áèl
("out of virtual memory in calloc dirÉvent");

8556 i‡(
	gcmd
 =
Ród
)

8558 
evít
->
›î©i⁄
 = 
MISS_READ
;

8559 
	gtŸÆmisscou¡num
 ++;

8560 
	gevít
->
	gisPª„tch
 = 
rs
->
isPª„tch
;

8564 
	gevít
->
	g›î©i⁄
 = 
MISS_WRITE
;

8565 
	gtŸÆªqcou¡num
 ++;

8566 if(
	grs
)

8567 
	gevít
->
	gisPª„tch
 = !
rs
->
issued
;

8569 
	gevít
->
	gisPª„tch
 = 0;

8571 if(
	gcﬁÀ˘_°©s
)

8572 
	gtŸÆevítcou¡num
 ++;

8573 if(
	gcﬁÀ˘_°©s
 && 
	gisSyncAc˚ss
)

8575 
	gtŸÆSyncEvít
 ++;

8576 if(
	gevít
->
	g›î©i⁄
 =
MISS_WRITE
)

8577 
tŸÆSyncWrôeM
 ++;

8579 
	gtŸÆSyncRódM
 ++;

8582 
	gtŸÆN‹mÆEvít
 ++;

8583 
	gmissNo
 ++;

8584 
	g§c
;

8585 
	gevít
->
	g≥ndög_Êag
 = 0;

8586 
	gevít
->
	g›
 = 
LDQ
;

8587 
	gevít
->
	g§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

8588 
	gevít
->
	g§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

8589 
	g§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8590 
	gevít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8591 
	gevít
->
	gdes2
 = (
§c
 %
mesh_size
);

8592 
	gevít
->
	g°¨ãd
 = 
now
;

8593 
	gevít
->
	g°¨tCy˛e
 = 
now
;

8594 if(
	grs
)

8596 
	gevít
->
	gisSyncAc˚ss
 = 
isSyncAc˚ss
;

8597 
	gevít
->
	g•ec_mode
 = 
rs
->
•ec_mode
;

8599 #ifde‡
SMD_USE_WRITE_BUF


8600 if(
	gl1_wb_íåy
)

8602 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

8604 
evít
->
isSyncAc˚ss
 = isSyncAccess;

8605 
	gevít
->
	g•ec_mode
 = 0;

8611 
	gevít
->
	gisSyncAc˚ss
 = 0;

8612 
	gevít
->
	g•ec_mode
 = 0;

8615 if(
	gcﬁÀ˘_°©s
)

8617 
	g˝
->
	gmis£s
 ++;

8618 if((
	gaddr
>>
	gˇche_dl2
->
	g£t_shi·
)%
	gnumc⁄ãxts
 =
thec⁄ãxts
[
thªadid
]->
a˘uÆid
)

8619 
loˇl_ˇche_ac˚ss
++;

8621 
	gªmŸe_ˇche_ac˚ss
++;

8624 
	gevít
->
	gchûdCou¡
 = 0;

8625 
	gevít
->
	g∑ª¡
 = 
NULL
;

8626 
	gevít
->
	gl2Sètus
 = 0;

8627 
	gevít
->
	gl2MissSèπ
 = 0;

8628 
	gevít
->
	gãmpID
 = 
thªadid
;

8629 
	gevít
->
	gª£nd
 = 0;

8630 
	gevít
->
	gblk1
 = 
NULL
;

8631 
	gevít
->
	gaddr
 = 
addr
;

8632 
	gevít
->
	g˝
 = 
˝
;

8633 
	gevít
->
	gvp
 = 
p
;

8634 
	gevít
->
	gnbyãs
 = 
nbyãs
;

8635 
	gevít
->
	gud©a
 = 
ud©a
;

8636 
	gevít
->
	gcmd
 = 
cmd
;

8637 
	gevít
->
	grs
 = 
rs
;

8638 #ifde‡
SMD_USE_WRITE_BUF


8639 
	gevít
->
	gl1_wb_íåy
 = 
l1_wb_íåy
;

8641 
	gevít
->
	gmissNo
 = 
missNo
;

8642 
	gevít
->
	gL2miss_Êag
 = 0;

8643 
	gevít
->
	gsh¨î_num
 = 0;

8644 
	gevít
->
	g¥e„tch_√xt
 = 0;

8645 
	gevít
->
	gdúty_Êag
 = 0;

8646 
	gevít
->
	g¨rivÆ_time
 = 0;

8647 
	gevít
->
	gc⁄f_bô
 = -1;

8648 
	gevít
->
	gd©a_ª∂y
 = 0;

8649 
	gevít
->
	gªq_time
 = 0;

8650 if(
	gmy_rs
)

8652 if(
	gmy_rs
->
	gisSyncIn°
 && my_rs->
	g›
 =
LDL
)

8654 
SyncLﬂdRódMiss
 ++;

8655 
	gevít
->
	g°‹e_c⁄d
 = 
MY_LDL
;

8657 if(
	gmy_rs
->
	g›
 =
LDL_L
)

8659 
SyncLﬂdLRódMiss
 ++;

8660 
	gevít
->
	g°‹e_c⁄d
 = 
MY_LDL_L
;

8662 if(
	gmy_rs
->
	g›
 =
STL_C
)

8664 
SyncSt‹eCWrôeMiss
 ++;

8665 
	gevít
->
	g°‹e_c⁄d
 = 
MY_STL_C
;

8667 if(
	gmy_rs
->
	gisSyncIn°
 && my_rs->
	g›
 =
STL
)

8669 
SyncSt‹eWrôeMiss
 ++;

8670 
	gevít
->
	g°‹e_c⁄d
 = 
MY_STL
;

8672 #ifde‡
BAR_OPT


8673 if(
	gmy_rs
->
	gisSyncIn°B¨Rñ
 && my_rs->
	g›
 =
STL
)

8675 
evít
->
°‹e_c⁄d
 = 
MY_STL
;

8676 
	gB¨St‹eWrôeMiss
 ++;

8680 #ifde‡
SMD_USE_WRITE_BUF


8681 if(
	gl1_wb_íåy
)

8683 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

8685 
SyncSt‹eCWrôeMiss
 ++;

8686 
	gevít
->
	g°‹e_c⁄d
 = 
MY_STL_C
;

8692 #ifde‡ 
L1_STREAM_PREFETCHER


8694 i‡(!
	gdl1_¥e„tch_a˘ive
)

8696 if(
	grs
)

8698 if(!
	grs
->
	gisSyncIn°
)

8699 
l1ö£π_•
 (
addr
, 
thªadid
);

8702 
l1ö£π_•
 (
addr
, 
thªadid
);

8705 #ifde‡
DL1_PREFETCH


8706 if(!
	g√xt_block
 && 
	g¥e_block
)

8708 
	gaddr_¥e„tch
 = (
èg
 << 
˝
->
èg_shi·
Ë+ (((
£t
+1)%˝->
n£ts
Ë<< cp->
£t_shi·
);

8709 
	g§c
 = (
addr_¥e„tch
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8710 
	gtŸÆevítcou¡num
 ++;

8711 
	gtŸÆ_L1_¥e„tch
 ++;

8713 
	gm©chnum
;

8714 
	gm©chnum
 = 
MSHR_block_check
(
˝
->
mshr
, 
addr_¥e„tch
, cp->
£t_shi·
);

8715 if(!
	gm©chnum
 && (
	g˝
->
	gmshr
->
	g‰ìE¡rõs
 > 1))

8717 
DIRECTORY_EVENT
 *
	g√w_evít
 = 
Æloˇã_evít
(0);

8718 if(
	g√w_evít
 =
NULL
Ë
∑nic
("Out of Virtual Memory");

8719 
	g√w_evít
->
	gd©a_ª∂y
 = 0;

8720 
	g√w_evít
->
	gªq_time
 = 0;

8721 
	g√w_evít
->
	g≥ndög_Êag
 = 0;

8722 
	g√w_evít
->
	g›
 = 
evít
->
›
;

8723 
	g√w_evít
->
	gisPª„tch
 = 0;

8724 #ifde‡
PREFETCH_OPTI


8725 
	g√w_evít
->
	g›î©i⁄
 = 
L1_PREFETCH
;

8727 
	g√w_evít
->
	g›î©i⁄
 = 
MISS_READ
;

8729 
	g√w_evít
->
	g§c1
 = 
evít
->
§c1
;

8730 
	g√w_evít
->
	g§c2
 = 
evít
->
§c2
;

8731 
	g√w_evít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8732 
	g√w_evít
->
	gdes2
 = (
§c
 %
mesh_size
);

8733 
	g√w_evít
->
	g¥o˚ssögD⁄e
 = 0;

8734 
	g√w_evít
->
	g°¨tCy˛e
 = 
sim_cy˛e
;

8735 
	g√w_evít
->
	g∑ª¡
 = 
NULL
;

8736 
	g√w_evít
->
	gãmpID
 = 
evít
->
ãmpID
;

8737 
	g√w_evít
->
	gª£nd
 = 0;

8738 
	g√w_evít
->
	gblk_dú
 = 
NULL
;

8739 
	g√w_evít
->
	g˝
 = 
evít
->
˝
;

8740 
	g√w_evít
->
	gaddr
 = 
addr_¥e„tch
;

8741 
	g√w_evít
->
	gvp
 = 
NULL
;

8742 
	g√w_evít
->
	gnbyãs
 = 
evít
->
˝
->
bsize
;

8743 
	g√w_evít
->
	gud©a
 = 
NULL
;

8744 
	g√w_evít
->
	gcmd
 = 
Wrôe
;

8745 
	g√w_evít
->
	grs
 = 
NULL
;

8746 #ifde‡
SMD_USE_WRITE_BUF


8747 
	g√w_evít
->
	gl1_wb_íåy
 = 
NULL
;

8749 
	g√w_evít
->
	g°¨ãd
 = 
evít
->
°¨ãd
;

8750 
	g√w_evít
->
	g•ec_mode
 = 0;

8751 
	g√w_evít
->
	gL2miss_Êag
 = 0;

8752 
	g√w_evít
->
	g¥e„tch_√xt
 = 2;

8753 
	g√w_evít
->
	gc⁄f_bô
 = -1;

8754 
	g√w_evít
->
	göput_buf„r_fuŒ
 = 0;

8756 
scheduÀThroughNëw‹k
(
√w_evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8758 
dú_evítq_ö£π
(
√w_evít
);

8759 
	gevít_¸óãd
 = 
√w_evít
;

8760 
MSHRLookup
(
˝
->
mshr
, 
addr_¥e„tch
, 
WAIT_TIME
, 0, 
rs
);

8765 
	gevít_¸óãd
 = 
evít
;

8766 
	gevít
->
	göput_buf„r_fuŒ
 = 0;

8767 
scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8769 
dú_evítq_ö£π
(
evít
);

8770  
	gWAIT_TIME
;

8772 if(!
°rcmp
 (
˝
->
«me
, "il1"))

8774 
	gevít
 = (
DIRECTORY_EVENT
 *)

8775 
Æloˇã_evít
(0);

8777 i‡(!
	gevít
)

8778 
Áèl
("out of virtual memory in calloc dirÉvent");

8779 if(
	gcmd
 =
Wrôe
)

8780 
∑nic
("Il1áccess could-notÜeadÅo Write command");

8782 
	g§c
;

8783 
	gevít
->
	g›
 = 
LDQ
;

8784 
	gevít
->
	g≥ndög_Êag
 = 0;

8785 
	gevít
->
	g›î©i⁄
 = 
MISS_IL1
;

8786 
	gevít
->
	gisPª„tch
 = 0;

8787 
	gevít
->
	g§c1
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
/
mesh_size
+
MEM_LOC_SHIFT
;

8788 
	gevít
->
	g§c2
 = 
thec⁄ãxts
[
thªadid
]->
a˘uÆid
%
mesh_size
;

8789 
	g§c
 = (
addr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

8790 
	gevít
->
	gdes1
 = (
§c
 /
mesh_size
)+
MEM_LOC_SHIFT
;

8791 
	gevít
->
	gdes2
 = (
§c
 %
mesh_size
);

8792 
	gevít
->
	g°¨ãd
 = 
now
;

8793 
	gevít
->
	g°¨tCy˛e
 = 
now
;

8794 
	gevít
->
	gd©a_ª∂y
 = 0;

8795 
	gevít
->
	gªq_time
 = 0;

8797 if(
	gcﬁÀ˘_°©s
)

8799 
	g˝
->
	gmis£s
 ++;

8800 if((
	gaddr
>>
	gˇche_dl2
->
	g£t_shi·
)%
	gnumc⁄ãxts
 =
thec⁄ãxts
[
thªadid
]->
a˘uÆid
)

8801 
loˇl_ˇche_ac˚ss
++;

8803 
	gªmŸe_ˇche_ac˚ss
++;

8806 
	gevít
->
	gchûdCou¡
 = 0;

8807 
	gevít
->
	g∑ª¡
 = 
NULL
;

8808 
	gevít
->
	gl2Sètus
 = 0;

8809 
	gevít
->
	gl2MissSèπ
 = 0;

8810 
	gevít
->
	gãmpID
 = 
thªadid
;

8811 
	gevít
->
	gª£nd
 = 0;

8812 
	gevít
->
	gblk1
 = 
NULL
;

8813 
	gevít
->
	gaddr
 = 
addr
;

8814 
	gevít
->
	g˝
 = 
˝
;

8815 
	gevít
->
	gvp
 = 
p
;

8816 
	gevít
->
	gnbyãs
 = 
nbyãs
;

8817 
	gevít
->
	gud©a
 = 
ud©a
;

8818 
	gevít
->
	gcmd
 = 
cmd
;

8819 
	gevít
->
	grs
 = 
NULL
;

8820 #ifde‡
SMD_USE_WRITE_BUF


8821 
	gevít
->
	gl1_wb_íåy
 = 
l1_wb_íåy
;

8823 
	gevít
->
	gmissNo
 = 
missNo
;

8824 
	gevít
->
	g•ec_mode
 = 
thec⁄ãxts
[
thªadid
]->
•ec_mode
;

8825 
	gevít
->
	gL2miss_Êag
 = 0;

8826 
	gevít
->
	gsh¨î_num
 = 0;

8827 
	gevít
->
	gdúty_Êag
 = 0;

8828 
	gevít
->
	g¨rivÆ_time
 = 0;

8829 
	gevít
->
	gc⁄f_bô
 = -1;

8830 
	gevít
->
	göput_buf„r_fuŒ
 = 0;

8832 
scheduÀThroughNëw‹k
(
evít
, 
now
, 
mëa_∑ckë_size
, 
vc
);

8834 
dú_evítq_ö£π
(
evít
);

8835 
	gevít_¸óãd
 = 
evít
;

8836 
	gthec⁄ãxts
[
thªadid
]->
	gevít
 = 
evít
;

8837  
	gWAIT_TIME
;

8843 
	g˝
->
	gpﬁicy
)

8845 
	gLRU
:

8846 
FIFO
:

8847 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

8848 
upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
);

8850 
	gR™dom
:

8852 
bödex
 = 
myønd
 (Ë& (
˝
->
assoc
 - 1);

8854 
	gª∂
 = 
CACHE_BINDEX
 (
˝
, cp->
£ts
[
£t
].
blks
, 
bödex
);

8858 
∑nic
 ("bogusÑeplacementÖolicy");

8862 i‡(
°rcmp
 (
˝
->
«me
, 
dl1«me
))

8865 i‡(
	gcﬁÀ˘_°©s
)

8866 
	g˝
->
	gmis£s
++;

8869 i‡(
	g˝
->
	ghsize
)

8870 
u∆ök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

8873 
	g˝
->
	gœ°_èg£tid
.
	gèg
 = 0;

8874 
	g˝
->
	gœ°_èg£tid
.
	gthªadid
 = -1;

8875 
	g˝
->
	gœ°_blk
 = 
NULL
;

8877 
	gœt
 +
˝
->
hô_œãncy
;

8880 i‡(
	gª∂
->
	g°©us
 & 
	gCACHE_BLK_VALID
)

8882 i‡(
	gcﬁÀ˘_°©s
)

8883 
	g˝
->
	gª∂a˚míts
++;

8885 i‡(
	gª∂_addr
)

8886 *
	gª∂_addr
 = 
CACHE_MK_BADDR
 (
˝
, 
ª∂
->
ègid
.
èg
, 
£t
);

8889 
	gœt
 +
BOUND_POS
 (
ª∂
->
ªady
 - 
now
);

8891 i‡((
	gª∂
->
	g°©us
 & 
	gCACHE_BLK_DIRTY
))

8894 i‡(
	gcﬁÀ˘_°©s
)

8896 
	g˝
->
	gwrôebacks
++;

8897 
	g˝
->
	gwrb
++;

8899 
	gœt
 +
˝
->
blk_ac˚ss_‚
 (
Wrôe
, 
CACHE_MK_BADDR
 (˝, 
ª∂
->
ègid
.
èg
, 
£t
), cp->
bsize
,Ñïl, 
now
 + 
œt
,Ñïl->ègid.
thªadid
);

8904 
	gª∂
->
	gègid
.
	gèg
 = 
èg
;

8905 
	gª∂
->
	gègid
.
	gthªadid
 = 
thªadid
;

8906 
	gª∂
->
	g°©us
 = 
CACHE_BLK_VALID
;

8907 
	gª∂
->
	gaddr
 = 
addr
;

8908 
	gª∂
->
	glöeVﬁ©ûe
 = 0;

8909 
	gª∂
->
	gw‹dVﬁ©ûe
 = 0;

8910 
	gª∂
->
	gw‹dInvÆid
 = 0;

8911 
	gª∂
->
	gisSèÀ
 = 0;

8914 
	gœt
 +
˝
->
blk_ac˚ss_‚
 (
Ród
, 
CACHE_BADDR
 (˝, 
addr
), cp->
bsize
, 
ª∂
, 
now
 + 
œt
, 
thªadid
);

8917 i‡(
	g˝
->
	gbÆloc
 && 
	gp
)

8919 
CACHE_BCOPY
 (
cmd
, 
ª∂
, 
bofs
, 
p
, 
nbyãs
);

8923 i‡(
	gcmd
 =
Wrôe
)

8925 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

8928 i‡(!
°rcmp
 (
˝
->
«me
, "ul2"))

8930 i‡(
	gcmd
 =
Wrôe
)

8932 
wm2
++;

8936 
	grm2
++;

8941 i‡(
	gud©a
)

8942 *
	gud©a
 = 
ª∂
->
u£r_d©a
;

8945 
	gª∂
->
	gªady
 = 
now
 + 
œt
;

8947 i‡(
	g˝
->
	ghsize
)

8948 
lök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

8951  
	gœt
;

8955 
∑nic
(" DL1áccess couldÇot ENTERÅhisÖart ofÅhe code ");

8958 
	gˇche_hô
:

8961 i‡(
cﬁÀ˘_°©s
)

8962 
˝
->
hôs
++;

8966 i‡(
	g˝
->
	gbÆloc
 && 
	gp
)

8968 
CACHE_BCOPY
 (
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

8972 i‡(
	gcmd
 =
Wrôe
)

8973 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

8975 
	gblk
->
	gisSèÀ
 = 0;

8978 i‡(!
°rcmp
 (
˝
->
«me
, "dl1"))

8980 i‡(
	gcmd
 =
Wrôe
)

8981 
wh1
++;

8983 
	grh1
++;

8985 if(
	gblk
->
	gblkImdtOp
)

8986 
	gblk
->
	gblkNextOps
 = ((
cmd
 =
Wrôe
Ë? 
LINE_WRITE_OP
 : 
LINE_READ_OP
);

8988 
	gblk
->
	gblkImdtOp
 = (
cmd
 =
Wrôe
Ë? 
LINE_WRITE_OP
 : 
LINE_READ_OP
;

8990 if(
	gblk
->
	gisL1¥e„tch
)

8992 
	gL1_¥e„tch_u£fuŒ
 ++;

8996 
	gblk
->
	gisL1¥e„tch
 = 0;

8997 
	gblk
->
	g¥e„tch_time
 = 0;

8998 if(
	gmy_rs
)

9000 if(
	gmy_rs
->
	gisSyncIn°
 && my_rs->
	g›
 =
LDL
)

9001 
SyncLﬂdHô
 ++;

9002 if(
	gmy_rs
->
	g›
 =
LDL_L
)

9003 
SyncLﬂdLHô
 ++;

9004 if(
	gmy_rs
->
	g›
 =
STL_C
)

9005 
SyncSt‹eCHô
 ++;

9006 if(
	gmy_rs
->
	gisSyncIn°
 && my_rs->
	g›
 =
STL
)

9007 
SyncSt‹eHô
 ++;

9009 #ifde‡
SMD_USE_WRITE_BUF


9010 if(
	gl1_wb_íåy
)

9011 if(
	gl1_wb_íåy
->
	g›
 =
STL_C
)

9012 
SyncSt‹eCHô
 ++;

9015 i‡(!
°rcmp
 (
˝
->
«me
, "ul2"))

9017 i‡(
	gcmd
 =
Wrôe
)

9018 
wh2
++;

9020 
	grh2
++;

9023 i‡(
	gblk
->
	gway_¥ev
 && 
	g˝
->
	gpﬁicy
 =
LRU
)

9025 
upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

9031 
	g˝
->
	gœ°_èg£tid
.
	gèg
 = 
CACHE_TAGSET
 (
˝
, 
addr
);

9032 
	g˝
->
	gœ°_èg£tid
.
	gthªadid
 = 
thªadid
;

9033 
	g˝
->
	gœ°_blk
 = 
blk
;

9036 i‡(
	gud©a
)

9037 *
	gud©a
 = 
blk
->
u£r_d©a
;

9039 if((Ë
max2
 ((
˝
->
hô_œãncy
 + 
œt
), (
blk
->
ªady
 - 
now
)Ë> 
	gWAIT_TIME
)

9040 
∑nic
("Cache HitÜatencyÅooÜarge\n");

9043  (Ë
max2
 ((
˝
->
hô_œãncy
 + 
œt
), (
blk
->
ªady
 - 
now
));

9047 
	$ˇche_w¨mup
 (
ˇche_t
 *
˝
,

9048 
mem_cmd
 
cmd
,

9049 
md_addr_t
 
addr
,

9050 
nbyãs
,

9051 
thªadid
)

9056 
	`•rötf
(
dl1«me
, "dl1");

9058 if(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
Ë&& cp->
thªadid
 !=Åhreadid)

9059 
	`∑nic
 ("Wrond DL1 cache being called in cacheáccess\n");

9060 if(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
Ë&& 
	`md_ãxt_addr
(
addr
, 
thªadid
))

9063 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

9064 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

9066 
ˇche_blk_t
 *
blk
, *
ª∂
, *
ª∂1
;

9068 #i‡
PROCESS_MODEL


9069 
isSh¨edAddªss
 = 0;

9072 #i‡
PROCESS_MODEL


9074 i‡(!
	`°rcmp
 (
˝
->
«me
, 
dl1«me
))

9076 
isSh¨edAddªss
 = 
	`checkF‹Sh¨edAddr
 ((Ë
addr
);

9081 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

9083 
	`¥ötf
("nbyã†i†%d\n", 
nbyãs
);

9084 
	`Áèl
 ("ˇche:ác˚s†îr‹: bad sizê‹álignmít,ádd∏0x%08x", 
addr
);

9088 i‡((
addr
 + 
nbyãs
 - 1Ë> (◊dd∏& ~
˝
->
blk_mask
Ë+ cp->
bsize
 - 1))

9089 
	`∑nic
 ("ˇche:ác˚s†îr‹:ác˚s†•™†block,ádd∏0x%08x", 
addr
);

9091 i‡(
˝
->
hsize
)

9094 
hödex
 = (Ë
	`CACHE_HASH
 (
˝
, 
èg
);

9096 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9098 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9100 i‡(
blk
->
way_¥ev
 && 
˝
->
pﬁicy
 =
LRU
)

9101 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

9109 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9111 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9113 i‡(
blk
->
way_¥ev
 && 
˝
->
pﬁicy
 =
LRU
)

9114 
	`upd©e_way_li°
(&
˝
->
£ts
[
£t
], 
blk
, 
Hód
);

9121 
md_addr_t
 
èg_dú
 = 
	`CACHE_TAG
 (
ˇche_dl2
, 
addr
);

9122 
md_addr_t
 
£t_dú
 = 
	`CACHE_SET
 (
ˇche_dl2
, 
addr
);

9123 
md_addr_t
 
bofs_dú
 = 
	`CACHE_BLK
 (
ˇche_dl2
, 
addr
);

9125 
block_off£t
 = 
	`blockoff£t
(
addr
);

9126 
isL2Hô
 = 0;

9129 
blk
 = 
ˇche_dl2
->
£ts
[
£t_dú
].
way_hód
; blk; blk = blk->
way_√xt
)

9131 i‡((
blk
->
ègid
.
èg
 =
èg_dú
Ë&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9133 
isL2Hô
 = 1;

9134 i‡(
blk
->
way_¥ev
 && 
ˇche_dl2
->
pﬁicy
 =
LRU
)

9135 
	`upd©e_way_li°
(&
ˇche_dl2
->
£ts
[
£t_dú
], 
blk
, 
Hód
);

9140 if(
isL2Hô
)

9142 if(
	`°rcmp
 (
˝
->
«me
, "il1"))

9143 #ifde‡
NEW_WARMUP


9145 if(
cmd
 =
Ród
)

9147 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_INVALID
)

9149 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

9151 if(
blk
->
dú_blk_°©e
[
block_off£t
] =
MESI_MODIFIED
 || blk->dú_blk_°©e[block_off£t] =
MESI_EXCLUSIVE
)

9153 if(
blk
->
dú_sh¨î
[
block_off£t
][
thªadid
/64] & (()1<<(threadid%64)) != (()1<<(threadid%64)))

9154 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

9156 
blk
->
dú_sh¨î
[
block_off£t
][
thªadid
/64] |= (()1<<(threadid%64));

9160 
blk
->
dú_sh¨î
[
block_off£t
][
thªadid
/64] = (()1<<(threadid%64));

9161 
blk
->
dú_dúty
[
block_off£t
] = 
thªadid
;

9162 
blk
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

9165 
ª∂1
 = 
blk
;

9167 
blk
->
dú_sh¨î
[
block_off£t
][
thªadid
/64] |= (()1<<(threadid%64));

9172 
ˇche_dl2
->
pﬁicy
)

9174 
i
;

9175 
bödex
;

9176 
LRU
:

9177 
FIFO
:

9178 
i
 = 
ˇche_dl2
->
assoc
;

9180 if(
i
 == 0) ;

9181 
i
--;

9182 
ª∂
 = 
ˇche_dl2
->
£ts
[
£t_dú
].
way_èû
;

9183 
	`upd©e_way_li°
 (&
ˇche_dl2
->
£ts
[
£t_dú
], 
ª∂
, 
Hód
);

9185 
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
, 
thªadid
,Ñïl->
addr
));

9187 if(
	`ª∂_dú_°©e_check
(
ª∂
->
dú_°©e
, 
thªadid
,Ñïl->
addr
))

9188 
	`∑nic
("CanÇotállocate L2Üine during warmup");

9191 
R™dom
:

9192 
bödex
 = 
	`myønd
 (Ë& (
ˇche_dl2
->
assoc
 - 1);

9193 
ª∂
 = 
	`CACHE_BINDEX
 (
ˇche_dl2
, cache_dl2->
£ts
[
£t_dú
].
blks
, 
bödex
);

9196 
	`∑nic
 ("bogusÑeplacementÖolicy");

9199 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

9202 
i
=0, 
m
=0, 
ôî©i⁄
 = 1, 
Êag
 = 0, 
sh¨î_num
 = 0, 
Thªadid
;

9203 
i
=0; i<(
ˇche_dl2
->
£t_shi·
 - 
ˇche_dl1
[0]->set_shift); i++)

9204 
ôî©i⁄
 = iteration * 2;

9205 
i
=0; i<
ôî©i⁄
; i++)

9206 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
], -1))

9207 
sh¨î_num
 ++;

9209 
i
=0; i<
ôî©i⁄
; i++)

9211 
ª∂
->
dú_°©e
[
i
] = 
DIR_STABLE
;

9212 if(
	`Is_Sh¨ed
(
ª∂
->
dú_sh¨î
[
i
], -1))

9214 
ª∂
->
addr
 = (ª∂->
ègid
.
èg
 << 
ˇche_dl2
->
èg_shi·
Ë+ (
£t_dú
 << cache_dl2->
£t_shi·
Ë+ (
i
 << 
ˇche_dl1
[0]->set_shift);

9215 
Thªadid
 = 0; Thªadid < 
numc⁄ãxts
; Threadid++)

9217 if(((
ª∂
->
dú_sh¨î
[
i
][
Thªadid
/64]) & (()1 << (Threadid%64))) == (()1 << (Threadid%64)))

9219 
md_addr_t
 
ãmp_èg
 = 
	`CACHE_TAG
 (
ˇche_dl1
[
Thªadid
], 
addr
);

9220 
md_addr_t
 
ãmp_£t
 = 
	`CACHE_SET
 (
ˇche_dl1
[
Thªadid
], 
addr
);

9221 
blk
 = 
ˇche_dl1
[
Thªadid
]->
£ts
[
ãmp_£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9223 i‡((
blk
->
ègid
.
èg
 =
ãmp_èg
Ë&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9225 
blk
->
°©e
 = 
MESI_INVALID
;

9226 
blk
->
°©us
 = 0;

9232 
ª∂
->
dú_sh¨î
[
i
][0] = 0;

9233 
ª∂
->
dú_sh¨î
[
i
][1] = 0;

9234 
ª∂
->
dú_sh¨î
[
i
][2] = 0;

9235 
ª∂
->
dú_sh¨î
[
i
][3] = 0;

9241 
ª∂
->
dú_°©e
[
block_off£t
] = 
DIR_STABLE
;

9242 
ª∂
->
ègid
.
èg
 = 
èg_dú
;

9243 
ª∂
->
ègid
.
thªadid
 =Åhreadid;

9244 
ª∂
->
addr
 =áddr;

9245 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

9246 
ª∂
->
ªady
 = 0;

9247 
ª∂
->
dú_dúty
[
block_off£t
] = -1;

9248 #ifde‡
NEW_WARMUP


9249 if(
cmd
 =
Ród
)

9251 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_EXCLUSIVE
;

9252 
ª∂
->
dú_dúty
[
block_off£t
] = -1;

9256 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_MODIFIED
;

9257 if(
	`°rcmp
 (
˝
->
«me
, "il1"))

9258 
ª∂
->
dú_dúty
[
block_off£t
] = 
thªadid
;

9260 
ª∂
->
dú_dúty
[
block_off£t
] = -1;

9263 
ª∂
->
dú_blk_°©e
[
block_off£t
] = 
MESI_SHARED
;

9266 if(
	`°rcmp
 (
˝
->
«me
, "il1"))

9267 
ª∂
->
dú_sh¨î
[
block_off£t
][
thªadid
/64] = ()1<<(threadid%64);

9270 
ª∂
->
dú_sh¨î
[
block_off£t
][0] = 0;

9271 
ª∂
->
dú_sh¨î
[
block_off£t
][1] = 0;

9272 
ª∂
->
dú_sh¨î
[
block_off£t
][2] = 0;

9273 
ª∂
->
dú_sh¨î
[
block_off£t
][3] = 0;

9276 
ˇche_dl2
->
œ°_èg£tid
.
èg
 = 0;

9277 
ˇche_dl2
->
œ°_èg£tid
.
thªadid
 =Åhreadid;

9278 
ˇche_dl2
->
œ°_blk
 = 
ª∂
;

9280 i‡(
ˇche_dl2
->
hsize
)

9281 
	`lök_hèb_ít
(
ˇche_dl2
, &ˇche_dl2->
£ts
[
£t_dú
], 
ª∂
);

9282 #ifde‡
NEW_WARMUP


9283 
ª∂1
 = 
ª∂
;

9288 (
˝
)->
pﬁicy
)

9290 
bödex
;

9291 
LRU
:

9292 
FIFO
:

9293 
ª∂
 = (
˝
)->
£ts
[
£t
].
way_èû
;

9294 
	`upd©e_way_li°
 (&(
˝
)->
£ts
[
£t
], 
ª∂
, 
Hód
);

9296 
R™dom
:

9297 
bödex
 = 
	`myønd
 (Ë& ((
˝
)->
assoc
 - 1);

9298 
ª∂
 = 
	`CACHE_BINDEX
 ((
˝
), (˝)->
£ts
[
£t
].
blks
, 
bödex
);

9301 
	`∑nic
 ("bogusÑeplacementÖolicy");

9304 
ª∂
->
ègid
.
èg
 =Åag;

9305 
ª∂
->
ègid
.
thªadid
 =Åhreadid;

9306 
ª∂
->
addr
 =áddr;

9307 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

9308 #ifde‡
NEW_WARMUP


9309 
ª∂
->
°©e
 = 
ª∂1
->
dú_blk_°©e
[
block_off£t
];

9311 
ª∂
->
°©e
 = 
MESI_SHARED
;

9313 
ª∂
->
ªady
 = 0;

9315 
˝
->
œ°_èg£tid
.
èg
 = 0;

9316 
˝
->
œ°_èg£tid
.
thªadid
 =Åhreadid;

9317 
˝
->
œ°_blk
 = 
ª∂
;

9319 i‡((
˝
)->
hsize
)

9320 
	`lök_hèb_ít
((
˝
), &(˝)->
£ts
[
£t
], 
ª∂
);

9321 
	}
}

9323 
	$isLöeInvÆid©ed
(
md_addr_t
 
addr
, 
thªadid
)

9325 
ˇche_t
 *
˝
 = 
ˇche_dl1
[
thªadid
];

9326 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

9327 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

9328 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

9329 
ˇche_blk_t
 *
blk
;

9331 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9333 i‡((
blk
->
ègid
.
èg
 =ègË&& !(blk->
°©us
 & 
CACHE_BLK_VALID
))

9337 
	}
}

9340 
	$ˇche_¥öt
 (
ˇche_t
 *
˝1
, ˇche_à*
˝2
)

9342 
	`Ârötf
 (
°dîr
, "ZZ L1D stats\n");

9343 
	`Ârötf
 (
°dîr
, "ZZ %ld %ld %ld %ld %lu\n", 
rm1
, 
rh1
, 
wm1
, 
wh1
, (Ë
˝1
->
wrôebacks
);

9344 
	`Ârötf
 (
°dîr
, "ZZ UL2 stats\n");

9345 i‡(
˝2
)

9346 
	`Ârötf
 (
°dîr
, "ZZ %ld %ld %ld %ld %lu\n", 
rm2
, 
rh2
, 
wm2
, 
wh2
, (Ë
˝2
->
wrôebacks
);

9347 
	}
}

9351 
	$sim∂e_ˇche_Êush
 (
ˇche_t
 *
˝
)

9353 
i
, 
numÊush
;

9354 
ˇche_blk_t
 *
blk
;

9356 #ifde‡
TOKENB


9357 
	`Áèl
 ("needÅo updateÅhis funcÅoáccount for TOKENB coherence.");

9360 
numÊush
 = 0;

9361 
i
 = 0; i < 
˝
->
n£ts
; i++)

9363 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

9365 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

9368 
blk
->
°©us
 = 0;

9369 
blk
->
isSèÀ
 = 0;

9371 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

9373 i‡(
cﬁÀ˘_°©s
)

9374 
˝
->
wrôebacks
++;

9375 
numÊush
++;

9381  
numÊush
;

9382 
	}
}

9386 
	$ˇche_Êush
 (
ˇche_t
 *
˝
,

9387 
tick_t
 
now
)

9390 
i
, 
œt
 = 
˝
->
hô_œãncy
;

9391 
ˇche_blk_t
 *
blk
;

9394 
˝
->
œ°_èg£tid
.
èg
 = 0;

9395 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

9396 
˝
->
œ°_blk
 = 
NULL
;

9399 
i
 = 0; i < 
˝
->
n£ts
; i++)

9401 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

9403 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

9407 
blk
->
°©us
 = 0;

9408 
blk
->
isSèÀ
 = 0;

9409 
blk
->
°©e
 = 
MESI_INVALID
;

9410 
blk
->
övCau£
 = 0;

9414  
œt
;

9415 
	}
}

9419 
	$ˇcheBc›y
 (
mem_cmd
 
cmd
, 
ˇche_blk_t
 *
blk
, 
posôi⁄
, 
byã_t
 * 
d©a
, 
nbyãs
)

9421 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
posôi⁄
, 
d©a
, 
nbyãs
);

9422 
	}
}

9424 
	$isCacheHô
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
)

9426 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"Ë&& cp->
thªadid
 !=Åhreadid)

9427 
	`∑nic
 ("Wrond DL1 cache being called in cacheáccess\n");

9429 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

9430 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

9431 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

9432 
ˇche_blk_t
 *
blk
;

9434 i‡(
˝
->
hsize
)

9437 
hödex
 = (Ë
	`CACHE_HASH
 (
˝
, 
èg
);

9439 
blk
 = 
˝
->
£ts
[
£t
].
hash
[
hödex
]; blk; blk = blk->
hash_√xt
)

9441 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9448 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9450 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9455 
	}
}

9457 #i‡ 
deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

9459 
	$busInô
 ()

9461 
i
, 
j
;

9463 
j
 = 
BUSSLOTS
 * 
NUMBEROFBUSES
;

9465 
bs_nd
 *
lök
;

9467 
busNodePoﬁ
 = 
NULL
;

9469 
i
 = 0; i < 
j
; i++)

9471 
lök
 = 
	`ˇŒoc
 (1,  (
bs_nd
));

9472 i‡(!
lök
)

9473 
	`Áèl
 ("out of virtual memory");

9474 
lök
->
√xt
 = 
busNodePoﬁ
;

9475 
busNodePoﬁ
 = 
lök
;

9477 #ifde‡
BUS_INTERCONNECT


9478 
i
 = 0; i < 
NUMBEROFBUSES
; i++)

9479 
busNodesInU£
[
i
] = 
NULL
;

9481 
	}
}

9487 
	$L2ö˛usi⁄Func
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
)

9489 
i
, 
˙t
, 
j
;

9490 
bsize
 = 
˝
->bsize;

9491 
mask
 = ~
˝
->
blk_mask
;

9492 
md_addr_t
 
tAddr
;

9493 
ˇche_t
 *
˝2
;

9494 
md_addr_t
 
èg
;

9495 
md_addr_t
 
£t
;

9496 
ˇche_blk_t
 *
blk
;

9498 
˙t
 = (
˝
->
bsize
 / 
ˇche_dl1
[0]->bsize);

9499 
tAddr
 = (
addr
 & 
mask
);

9500 
i
 = 0; i < 
numc⁄ãxts
; i++)

9502 #ifdef 
EDA


9503 i‡(
thec⁄ãxts
[
i
]->
ma°îid
 != 0)

9506 
˝2
 = 
ˇche_dl1
[
i
];

9507 
j
 = 0; j < 
˙t
; j++)

9509 
addr
 = 
tAddr
 + (
j
 * 
˝2
->
bsize
);

9510 
èg
 = 
	`CACHE_TAG
 (
˝2
, 
addr
);

9511 
£t
 = 
	`CACHE_SET
 (
˝2
, 
addr
);

9513 
blk
 = 
˝2
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

9515 #ifde‡
SMT_SS


9516 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->ègid.
thªadid
 =
i
Ë&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

9518 i‡(
blk
->
èg
 =èg && (blk->
°©us
 & 
CACHE_BLK_VALID
))

9522 i‡(
blk
)

9524 
blk
->
°©us
 = 0;

9525 
blk
->
°©e
 = 
MESI_INVALID
;

9526 
blk
->
övCau£
 = 0;

9527 
	`upd©e_way_li°
 (&
˝2
->
£ts
[
£t
], 
blk
, 
Taû
);

9532  
ˇche_dl1
[0]->
hô_œãncy
;

9533 
	}
}

	@cache_o.h

124 #i‚de‡
CACHE_H


125 
	#CACHE_H


	)

127 
	~<°dio.h
>

129 
	~"ho°.h
"

130 
	~"misc.h
"

131 
	~"machöe.h
"

132 
	~"mem‹y.h
"

133 
	~"°©s.h
"

135 
	~"smt.h
"

136 
	~"öãrc⁄√˘.h
"

137 
	~"sim-out‹dî.h
"

145 
	#SILENT_DROP


	)

149 
	#OPTIMIZED_OPTICAL_NETWORK


	)

151 
	#MESH_NETWORK


	)

154 #ifde‡
MESH_NETWORK


155 
	#POPNET


	)

158 
	#MULTI_VC


	)

162 #ifde‡
BASELINE_OPTICAL_NETWORK


163 
	#OPTICAL_INTERCONNECT


	)

169 #ifde‡
OPTIMIZED_OPTICAL_NETWORK


170 
	#OPTICAL_INTERCONNECT


171 

	)

173 
	#INV_ACK_CON


174 
	#WB_SPLIT_NET


175 

	)

181 
	#TSHR


	)

184 #ifde‡
CACHE_COHERENCE_OPTIMIZATION


185 #ifde‡
RELAXED_CONSISTENCY


186 
	#SERIALIZATION_ACK


	)

187 
	#READ_PERMIT


	)

188 #ifde‡
OPTICAL_INTERCONNECT


189 
	#EUP_NETWORK


	)

196 #ifde‡
POPNET


197 
OrdîBufRemove
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
cou¡î_t
 
msgno
);

198 
OrdîBufIn£π
(
s1
, 
s2
, 
d1
, 
d2
, 
md_addr_t
 
addr
, 
vc
, 
cou¡î_t
 
msgno
);

201 #ifde‡
EUP_NETWORK


202 
	#MAX_EUP_ENTRY
 16

	)

203 
	sEUP_ENTRY
{

204 
md_addr_t
 
	maddr
;

205 
	misVÆid
;

206 
	mow√r
;

209 
	sEUP_ENTRY_QUEUE
{

210 
EUP_ENTRY
 
	mE¡ry
[
MAX_EUP_ENTRY
];

211 
	m‰ì_E¡rõs
;

214 
EUP_ENTRY_QUEUE
 
	gEUP_íåy
[
MAXTHREADS
];

217 #ifde‡
INV_ACK_CON


218 
cou¡î_t
 
	g≥ndög_övÆid©i⁄
[
MAXTHREADS
];

219 
cou¡î_t
 
	g≥ndög_övÆid_°¨t_cy˛es
[
MAXTHREADS
];

220 
cou¡î_t
 
	g≥ndög_övÆid_cy˛es
;

223 
	gd©a_∑ckë_size
;

224 
	gmëa_∑ckë_size
;

225 #ifde‡
POPNETn


226 
	gd©a_∑ckë_size
 = 5;

227 
	gmëa_∑ckë_size
 = 1;

230 
	#DCACHE_MSHR


	)

232 
	#WAIT_TIME
 800000000

	)

233 
	#RETRY_TIME
 1

	)

234 #ifdef 
DCACHE_MSHR


235 
	#MSHR_SIZE
 32

	)

236 
	#L2_MSHR_SIZE
 48

	)

237 
	#MSHR_OC_SIZE
 15

	)

239 #ifde‡
CONF_RES_RESEND


240 
	#QUEUE_SIZE
 100

	)

243 
	smshr_íåy_t


245 
	mid
;

246 
	misVÆid
;

247 
md_addr_t
 
	maddr
;

248 
cou¡î_t
 
	m°¨tCy˛e
;

249 
cou¡î_t
 
	mídCy˛e
;

250 
	mblocknum
;

251 
	misOC
;

252 
RUU_°©i⁄
 *
	mrs
;

253 
DIRECTORY_EVENT
 *
	mevít
;

256 
	smshr_t


258 
	mthªadid
;

259 
mshr_íåy_t
 
	mmshrE¡ry
[
L2_MSHR_SIZE
];

260 
	m‰ìE¡rõs
;

261 
	m‰ìOCE¡rõs
;

262 
	mmshrSIZE
;

265 
md_addr_t
 
	gwb_buf„r
[
MAXTHREADS
][
MSHR_SIZE
];

266 
öôMSHR
(
mshr_t
 *
mshr
, 
Êag
);

267 
‰ìMSHR
(
mshr_t
 *
mshr
);

268 
isMSHRFuŒ
(
mshr_t
 *
mshr
, 
isOC
, 
thªadid
);

269 
MSHRLookup
(
mshr_t
 *
mshr
, 
md_addr_t
 
addr
, 
œt
, 
isOC
, 
RUU_°©i⁄
 *
rs
);

273 #ifde‡
SERIALIZATION_ACK


274 
	#MAX_OWNERS
 2

	)

275 
	#INV_COLLECT_TABLE_SIZE
 8

	)

276 
	sövCﬁÀ˘E¡ry_t


278 
	misVÆid
;

279 
md_addr_t
 
	maddr
;

280 
	m≥ndögInv
;

281 
	mnumOw√rs
;

282 
	mow√rsLi°
[
MAX_OWNERS
];

283 
	mack_c⁄f
[
MAX_OWNERS
];

286 
övCﬁÀ˘E¡ry_t
 
	gövCﬁÀ˘TabÀ
[
MAXTHREADS
][
INV_COLLECT_TABLE_SIZE
];

287 
	gnumSt‹ePídög
[
MAXTHREADS
];

288 #ifde‡
READ_PERMIT


289 
	gnumLﬂdPídög
[
MAXTHREADS
];

295 
	#MEM_MODEL


296 
	#STREAM_PREFETCHER


297 
	#L1_STREAM_PREFETCHER


	)

299 #ifde‡ 
STREAM_PREFETCHER


300 
	#MISS_TABLE_SIZE
 16

	)

301 
	#STREAM_ENTRIES
 8

	)

302 
	#PREFETCH_DISTANCE
 16

	)

303 
	smiss_hi°‹y_èbÀ_t


305 
md_addr_t
 
	mhi°‹y
[
MISS_TABLE_SIZE
];

306 
	mmht_èû
;

307 
	mmht_num
;

310 
	s°ªam_èbÀ_íåy_t


312 
	mvÆid
;

313 
md_addr_t
 
	maddr
;

314 
	m°ride
;

315 
	mªmaöög_¥e„tches
;

316 
cou¡î_t
 
	mœ°_u£
;

319 
miss_hi°‹y_èbÀ_t
 
	gmiss_hi°‹y_èbÀ
;

320 
°ªam_èbÀ_íåy_t
 
	g°ªam_èbÀ
[
STREAM_ENTRIES
];

322 
öô_•
();

323 
ö£π_•
(
md_addr_t
 
addr
, 
thªadid
);

324 
œunch_•
(
md_addr_t
 
addr
, 
thªadid
);

326 #ifde‡
L1_STREAM_PREFETCHER


327 
miss_hi°‹y_èbÀ_t
 
	gl1miss_hi°‹y_èbÀ
[
MAXTHREADS
];

328 
°ªam_èbÀ_íåy_t
 
	gl1°ªam_èbÀ
[
MAXTHREADS
][
STREAM_ENTRIES
];

330 
l1öô_•
();

331 
l1ö£π_•
(
md_addr_t
 
addr
, 
thªadid
);

332 
l1œunch_•
(
md_addr_t
 
addr
, 
thªadid
);

335 #ifde‡
CROSSBAR_INTERCONNECT


336 
	#NUMBEROFBUSES
 8

	)

340 #ifde‡
BUS_INTERCONNECT


341 
	#NUMBEROFBUSES
 1

	)

343 
	#BUSSLOTS
 2048

	)

344 
	sbs_nd


346 
	m°¨tTime
, 
	mídTime
;

347 
	mac˚ssTy≥
, 
	mthªadid
;

348 
bs_nd
 *
	m√xt
;

387 
	#CACHE_HIGHLY_ASSOC
(
˝
Ë((˝)->
assoc
 > 4)

	)

390 
	#CACHE_TAG
(
˝
, 
addr
Ë(◊ddrË>> (˝)->
èg_shi·
)

	)

391 
	#CACHE_SET
(
˝
, 
addr
Ë((◊ddrË>> (˝)->
£t_shi·
Ë& (˝)->
£t_mask
)

	)

392 
	#CACHE_BLK
(
˝
, 
addr
Ë(◊ddrË& (˝)->
blk_mask
)

	)

393 
	#CACHE_TAGSET
(
˝
, 
addr
Ë(◊ddrË& (˝)->
èg£t_mask
)

	)

396 
	eˇche_pﬁicy
 {

397 
	mLRU
,

398 
	mR™dom
,

399 
	mFIFO


403 
	#CACHE_BLK_VALID
 0x00000001

	)

404 
	#CACHE_BLK_DIRTY
 0x00000002

	)

405 
	#CACHE_BLK_WVALID
 0x00000004

	)

406 
	#MESI_INVALID
 1

	)

407 
	#MESI_SHARED
 2

	)

408 
	#MESI_MODIFIED
 3

	)

409 
	#MESI_EXCLUSIVE
 4

	)

411 
	#WRITE_HIT_SHARED
 1

	)

415 
	#IDEAL_CASE
 1

	)

417 
	#MISS_IL1
 2

	)

418 
	#MISS_READ
 3

	)

419 
	#MISS_WRITE
 4

	)

420 
	#WRITE_UPDATE
 5

	)

421 
	#WRITE_BACK
 6

	)

422 
	#WRITE_BACK_HEAD
 7

	)

423 
	#WRITE_BACK_REPLY
 8

	)

424 
	#UPDATE_DIR
 9

	)

426 
	#INV_MSG_READ
 10

	)

427 
	#INV_MSG_WRITE
 11

	)

429 
	#ACK_MSG_READ
 12

	)

430 
	#ACK_MSG_READUPDATE
 13

	)

431 
	#ACK_MSG_WRITE
 14

	)

432 
	#ACK_MSG_WRITEUPDATE
 15

	)

434 
	#ACK_DIR_IL1
 16

	)

435 
	#ACK_DIR_READ_SHARED
 17

	)

436 
	#ACK_DIR_READ_EXCLUSIVE
 18

	)

437 
	#ACK_DIR_WRITE
 19

	)

438 
	#ACK_DIR_WRITE_EARLY
 20

	)

439 
	#ACK_DIR_WRITEUPDATE
 21

	)

441 
	#WAIT_MEM_READ
 22

	)

442 
	#WAIT_MEM_READ_N
 23

	)

443 
	#L2_PREFETCH
 24

	)

445 
	#NACK
 25

	)

446 
	#FAIL
 26

	)

447 
	#FINAL_INV_ACK
 27

	)

448 
	#MEM_READ_REQ
 28

	)

449 
	#MEM_READ_REPLY
 29

	)

450 
	#WAIT_MEM_READ_NBLK
 30

	)

451 
	#MEM_WRITE_BACK
 31

	)

452 
	#MEM_PACK_HEAD
 32

	)

453 
	#MEM_PACK_REPLY
 33

	)

454 
	#FINAL_READ_ACK
 34

	)

456 
	#ACK_MSG_UPDATE
 35

	)

457 
	#INV_MSG_UPDATE
 36

	)

458 #ifde‡
COHERENCE_MODIFIED


459 
	#WRITE_INDICATE
 37

	)

461 #ifde‡
PREFETCH_OPTI


462 
	#L1_PREFETCH
 38

	)

463 
	#READ_COHERENCE_UPDATE
 39

	)

464 
	#WRITE_COHERENCE_UPDATE
 40

	)

465 
	#READ_DATA_REPLY_EXCLUSIVE
 41

	)

466 
	#READ_DATA_REPLY_SHARED
 42

	)

467 
	#READ_META_REPLY_EXCLUSIVE
 43

	)

468 
	#READ_META_REPLY_SHARED
 44

	)

469 
	#WRITE_DATA_REPLY
 45

	)

470 
	#WRITE_META_REPLY
 46

	)

474 
	#DIR_STABLE
 1

	)

475 
	#DIR_TRANSITION
 2

	)

476 
	#INV_TYPE
 3

	)

477 
	#REPL_TYPE
 4

	)

479 
	#REQ_PACKET
 1

	)

480 
	#DATA_PACKET
 4

	)

483 
	#LINE_PREFETCH
 1

	)

484 
	#LINE_READ
 2

	)

485 
	#LINE_WRITE
 3

	)

488 
	#LINE_READ_OP
 1

	)

489 
	#LINE_WRITE_OP
 2

	)

492 
	#MY_NORMAL
 0

	)

493 
	#MY_LDL
 1

	)

494 
	#MY_LDL_L
 2

	)

495 
	#MY_STL_C
 3

	)

496 
	#MY_STL
 4

	)

499 #ifde‡
SMT_SS


500 
	sèg_id_t


502 
	mthªadid
;

503 
md_addr_t
 
	mèg
;

507 #ifde‡
EVENT_CACHE_UPDATE


508 
	smshrq
 {

510 
	mwhí
;

511 
	mrd_wt
;

512 
md_addr_t
 
	maddr
;

513 
mshrq
 *
	m√xt
;

514 
mshrq
 *
	m¥ev
;

523 
	sˇche_blk_t


525 
ˇche_blk_t
 *
	mway_√xt
;

527 
ˇche_blk_t
 *
	mway_¥ev
;

528 
ˇche_blk_t
 *
	mhash_√xt
;

532 #ifde‡
SMT_SS


533 
èg_id_t
 
	mègid
;

535 
md_addr_t
 
	mèg
;

537 
	m°©us
;

538 
tick_t
 
	mªady
;

541 
	m°©e
;

542 
	misSèÀ
;

543 
md_addr_t
 
	maddr
;

545 
	mœ°Thrd
;

546 
	mvÆue
;

547 
	mlöeVﬁ©ûe
;

548 
	mw‹dVﬁ©ûe
, 
	mw‹dInvÆid
;

549 
	mïochModifõd
;

550 
	misL1¥e„tch
;

551 
cou¡î_t
 
	m¥e„tch_time
;

552 #ifde‡
PREFETCH_OPTI


553 
	mdú_¥e„tch
[8][
MAXTHREADS
];

554 
	mdú_¥e„tch_num
[8];

555 
	m¥e„tch_övÆid©e
[8];

556 
	m¥e„tch_modifõd
[8];

558 
	mdú_°©e
[8];

559 
	mdú_sh¨î
[8][8];

560 
cou¡î_t
 
	mex˛usive_time
[8];

561 
	mdú_dúty
[8];

562 
	mdú_blk_°©e
[8];

563 
	mevî_wb
;

566 
	mevî_dúty
;

567 
	mevî_touch
;

568 
	mIswb_to_mem
;

569 
	mRódCou¡
;

570 
	mWrôeCou¡
;

571 
	mW‹dCou¡
;

572 
	mTy≥
;

573 
	mW‹dU£Fœg
[8];

574 
DIRECTORY_EVENT
 *
	m±r_cur_evít
[8];

575 #ifde‡
SERIALIZATION_ACK


576 
	m≥ndögInvAck
[8];

577 
	mRódPídög
[8];

578 
DIRECTORY_EVENT
 *
	mRódPídög_evít
[8];

580 #ifde‡
EUP_NETWORK


581 
	móæy_nŸifiˇti⁄
;

583 
	mblkAlocRós⁄
;

584 
	mblkImdtOp
;

585 
	mblkNextOps
;

587 
byã_t
 *
	mu£r_d©a
;

592 
byã_t
 
	md©a
[1];

595 
	mœ°Modifõd
, 
	mœ°Ac˚s£d
;

596 
	mmodifõdThisEpoch
;

597 
	mmodifõdByMe
;

598 
	mövCau£
;

602 
	sˇche_£t_t


604 
ˇche_blk_t
 **
	mhash
;

606 
ˇche_blk_t
 *
	mway_hód
;

607 
ˇche_blk_t
 *
	mway_èû
;

608 
ˇche_blk_t
 *
	mblks
;

614 
	sˇche_t


617 *
	m«me
;

618 
	mn£ts
;

619 
	mbsize
;

620 
	mbÆloc
;

621 
	musize
;

622 
	massoc
;

623 
ˇche_pﬁicy
 
	mpﬁicy
;

624 
	mhô_œãncy
;

636 (*
	mblk_ac˚ss_‚
)(
mem_cmd
 
	mcmd
,

637 
md_addr_t
 
	mbaddr
,

638 
	mbsize
,

639 
ˇche_blk_t
 *
	mblk
,

640 #ifde‡
SMT_SS


641 
tick_t
 
	mnow
,

642 
	mthªadid


643 #i‡
deföed
–
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

644 , 
	m˛u°î


648 
tick_t
 
	mnow
);

652 
	mhsize
;

653 
md_addr_t
 
	mblk_mask
;

654 
	m£t_shi·
;

655 
md_addr_t
 
	m£t_mask
;

656 
	mèg_shi·
;

657 
md_addr_t
 
	mèg_mask
;

658 
md_addr_t
 
	mèg£t_mask
;

661 
tick_t
 
	mbus_‰ì
;

671 
cou¡î_t
 
	mhôs
;

672 
cou¡î_t
 
	mdhôs
;

673 
cou¡î_t
 
	mmis£s
;

674 
cou¡î_t
 
	mdmis£s
;

675 
cou¡î_t
 
	mcohîí˚_mis£s
;

676 
cou¡î_t
 
	mˇ∑cô™˚_mis£s
;

677 
cou¡î_t
 
	mª∂a˚míts
;

678 
cou¡î_t
 
	mª∂Inv
;

679 
cou¡î_t
 
	mwrôebacks
;

680 
cou¡î_t
 
	mwb_cohîí˚_w
;

681 
cou¡î_t
 
	mwb_cohîí˚_r
;

682 
cou¡î_t
 
	mövÆid©i⁄s
;

683 
cou¡î_t
 
	mcohîícyMis£s
;

684 
cou¡î_t
 
	mcohîícyMis£sOC
;

687 
cou¡î_t
 
	mö_mshr
;

688 
cou¡î_t
 
	mdö_mshr
;

689 
cou¡î_t
 
	mdú_nŸifiˇti⁄
;

690 
cou¡î_t
 
	mInvÆid_Ród_ª˚ived
;

691 
cou¡î_t
 
	mInvÆid_wrôe_ª˚ived
;

692 
cou¡î_t
 
	mInvÆid_Ród_ª˚ived_hôs
;

693 
cou¡î_t
 
	mInvÆid_wrôe_ª˚ived_hôs
;

694 
cou¡î_t
 
	me_to_i
;

695 
cou¡î_t
 
	me_to_m
;

696 
cou¡î_t
 
	ms_to_i
;

698 
cou¡î_t
 
	mack_ª˚ived
;

699 
cou¡î_t
 
	mL2_ac˚ss
;

700 
cou¡î_t
 
	mdú_ac˚ss
;

701 
cou¡î_t
 
	md©a_ac˚ss
;

702 
cou¡î_t
 
	mloˇldúe˘‹y
;

703 
cou¡î_t
 
	mªmŸedúe˘‹y
;

704 
cou¡î_t
 
	m£ndInvÆid
, 
	mövÆidD⁄e
, 
	mwasInvÆid©ed
;

706 
cou¡î_t
 
	mÊushCou¡
, 
	mlöeFlushCou¡
;

709 
	mrdb
;

710 
	mwrb
;

711 
	mpùedñay
;

712 
	mwrbufsize
;

713 
	mœ°u£
;

715 #ifde‡
EVENT_CACHE_UPDATE


716 
mshrq
 *
	mmshr_queue
;

720 #ifde‡
SMT_SS


721 
èg_id_t
 
	mœ°_èg£tid
;

723 
md_addr_t
 
	mœ°_èg£t
;

725 
ˇche_blk_t
 *
	mœ°_blk
;

727 #ifdef 
DCACHE_MSHR


728 
mshr_t
 *
	mmshr
;

732 
byã_t
 *
	md©a
;

734 
cou¡î_t
 
	mnumDiffThrds
;

738 
	mœ°InvÆid©e
;

739 
	mInvld
;

742 
	möåaThrdC⁄Êi˘
;

743 
	möãrThrdC⁄Êi˘
;

744 
	mC⁄£cutiveAc˚ss
;

747 
	mccLoˇlLﬂdS
;

748 
	mccLoˇlLﬂdX
;

749 
	mccLoˇlLﬂdM
;

750 
	mccLoˇlSt‹eS
;

751 
	mccLoˇlSt‹eX
;

752 
	mccLoˇlSt‹eM
;

753 
	mccRemŸeLﬂdS
;

754 
	mccRemŸeLﬂdX
;

755 
	mccRemŸeLﬂdM
;

756 
	mccRemŸeSt‹eS
;

757 
	mccRemŸeSt‹eX
;

758 
	mccRemŸeSt‹eM
;

761 
	mSRLoˇlLﬂdS
;

762 
	mSRLoˇlLﬂdX
;

763 
	mSRLoˇlLﬂdM
;

764 
	mSRLoˇlSt‹eS
;

765 
	mSRLoˇlSt‹eX
;

766 
	mSRLoˇlSt‹eM
;

767 
	mSRRemŸeLﬂdS
;

768 
	mSRRemŸeLﬂdX
;

769 
	mSRRemŸeLﬂdM
;

770 
	mSRRemŸeSt‹eS
;

771 
	mSRRemŸeSt‹eX
;

772 
	mSRRemŸeSt‹eM
;

774 
	mglLoˇlHô
;

775 
	mglRemŸeHô
;

777 
	mNumAc˚s£s
;

779 
	mthªadid
;

783 
ˇche_£t_t
 
	m£ts
[1];

787 
ˇche_t
 *

788 
ˇche_¸óã
(*
«me
,

789 
n£ts
,

790 
bsize
,

791 
bÆloc
,

792 
usize
,

793 
assoc
,

794 
ˇche_pﬁicy
 
pﬁicy
,

796 (*
blk_ac˚ss_‚
)(
mem_cmd
 
cmd
,

797 
md_addr_t
 
baddr
, 
bsize
,

798 
ˇche_blk_t
 *
blk
,

799 #ifde‡
SMT_SS


800 
tick_t
 
now
,

802 
thªadid


803 #i‡
	`deföed
–
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

804 , 
˛u°î


808 
tick_t
 
now
),

810 
hô_œãncy
,

811 
thªadid
);

814 
ˇche_pﬁicy


815 
	`ˇche_ch¨2pﬁicy
(
c
);

819 
	`ˇche_c⁄fig
(
ˇche_t
 *
˝
,

820 
FILE
 *
°ªam
);

823 
	`ˇche_ªg_°©s
(
ˇche_t
 *
˝
, 
°©_sdb_t
 *
sdb
, 
id
);

829 
	`ˇche_°©s
(
ˇche_t
 *
˝
,

830 
FILE
 *
°ªam
);

840 #ifde‡
SMT_SS


853 
	`ˇche_ac˚ss
(
ˇche_t
 *
˝
,

854 
mem_cmd
 
cmd
,

855 
md_addr_t
 
addr
,

856 *
vp
,

857 
nbyãs
,

858 
tick_t
 
now
,

859 
byã_t
 **
ud©a
,

860 
md_addr_t
 *
ª∂_addr


861 
RUU_°©i⁄
 *
rs
,

862 
thªadid
,

863 #ifde‡
SMD_USE_WRITE_BUF


864 
m_L1WBufE¡ry
 *
l1_wb_íåy


869 
	`ˇche_w¨mup
 (
ˇche_t
 *
˝
,

870 
mem_cmd
 
cmd
,

871 
md_addr_t
 
addr
,

872 
nbyãs
,

873 
thªadid
);

874 
	`isLöeInvÆid©ed
(
md_addr_t
 
addr
, 
thªadid
);

878 #i‡
	`deföed
–
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

879 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

880 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

881 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

882 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

883 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

884 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

885 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

886 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

887 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

888 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

889 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
, 
˛
Ë\

	)

890 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
, 
˛
)

892 
	#ˇche_doubÀ
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

893 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

894 
	#ˇche_Êﬂt
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

895 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

896 
	#ˇche_dw‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

897 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

898 
	#ˇche_w‹d
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

899 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

900 
	#ˇche_hÆf
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

901 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

902 
	#ˇche_byã
(
˝
, 
cmd
, 
addr
, 
p
, 
now
, 
ud©a
Ë\

	)

903 
	`ˇche_ac˚ss
(
˝
, 
cmd
, 
addr
, 
p
, (), 
now
, 
ud©a
)

908 
	`m¨kCacheNewEpoch
(
ˇche_t
 *
˝
, );

910 
	`busFªe
();

911 
	`busInô
();

912 
	`m¨kCacheLöe
(
ˇche_t
 *, 
md_addr_t
, );

914 
	`ˇche_m¨k_vﬁ©ûe
(
ˇche_t
 *
˝
,

915 
md_addr_t
 
addr
,

916 
tick_t
 
now
,

917 
thªadid
, );

920 
	`ˇche_Êush_vﬁ©ûe
(
ˇche_t
 *
˝
,

921 
tick_t
 
now
,

922 
thªadid
, );

925 
	`check_f‹_l1_miss
(
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
);

927 
	`upd©eBlockL©
(
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
, 
œt
);

929 
	`checkRïœ˚mítSètus
(
id
, 
md_addr_t
 
addr
);

935 
	`ˇche_¥obe
(
ˇche_t
 *
˝
,

936 
md_addr_t
 
addr
);

940 
	`ˇche_Êush
(
ˇche_t
 *
˝
,

941 
tick_t
 
now
);

945 #ifde‡
SMT_SS


947 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

948 
md_addr_t
 
addr
,

949 
tick_t
 
now
,

950 
thªadid
);

953 
	`ˇche_Êush_addr
(
ˇche_t
 *
˝
,

954 
md_addr_t
 
addr
,

955 
tick_t
 
now
);

957 #ifde‡
EVENT_CACHE_UPDATE


958 
	`ö£π_mshr
(
ˇche_t
 *,,,
md_addr_t
,);

962 
	`ˇcheBc›y
(
mem_cmd
 
cmd
, 
ˇche_blk_t
 *
blk
, 
posôi⁄
, 
byã_t
 *
d©a
, 
nbyãs
);

963 
	`L2ö˛usi⁄Func
(
ˇche_t
 *
˝
, 
md_addr_t
 
addr
);

964 
	`isCacheHô
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
thªadid
);

966 #ifdef 
EDA


967 
	`ˇcheBlockSórch
(
ˇche_t
 * 
˝
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, 
byã_t
 *
d©a
, 
nbyãs
);

968 
	`ÊushSñe˘ive
(
ˇche_t
 *
˝
, 
id
);

971 
	sDIRECTORY_EVENT


973 
md_›code
 
›
;

974 
isPª„tch
;

975 
l2Sètus
;

976 
cou¡î_t
 
l2MissSèπ
;

977 
DIRECTORY_EVENT
 *
√xt
;

978 
tick_t
 
whí
;

979 
tick_t
 
°¨ãd
;

980 
tick_t
 
mshr_time
;

981 
tick_t
 
å™s„r_time
;

982 
tick_t
 
ªq_time
;

983 
°‹e_c⁄d
;

984 
Êù_Êag
;

985 #ifde‡
EXCLUSIVE_OPT


986 
ex˛usive_a·î_wb
;

988 #ifde‡
EUP_NETWORK


989 
óæy_Êag
;

992 
öput_buf„r_fuŒ
;

993 
≥ndög_Êag
;

994 
L2miss_Êag
;

995 
L2miss_°©ed
;

996 
L2miss_com∂ëe
;

997 
dúty_Êag
;

998 
cou¡î_t
 
¨rivÆ_time
;

999 
dñay
;

1000 
d©a_ª∂y
;

1001 
c⁄f_bô
;

1002 
cou¡î_t
 
missNo
;

1003 
cou¡î_t
 
tŸÆevítcou¡
;

1004 
ª£nd
;

1005 
›î©i⁄
;

1006 
ãmpID
;

1007 
md_addr_t
 
addr
;

1008 
ˇche_blk_t
 *
blk1
, *
blk_dú
;

1010 
RS_lök
 *
±r_evít
;

1011 
ˇche_t
 *
˝
;

1012 *
vp
;

1013 
nbyãs
;

1014 
byã_t
 **
ud©a
;

1015 
mem_cmd
 
cmd
;

1016 
RUU_°©i⁄
 *
rs
;

1017 #ifde‡
SMD_USE_WRITE_BUF


1018 
m_L1WBufE¡ry
 *
l1_wb_íåy
;

1020 
§c1
, 
§c2
, 
des1
, 
des2
, 
°¨tCy˛e
;

1021 
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
;

1022 
DIRECTORY_EVENT
 *
∑ª¡
;

1023 
∑ª¡_›î©i⁄
;

1024 
chûdCou¡
, 
¥o˚ssögD⁄e
, 
•ec_mode
, 
‹igöÆChûdCou¡
;

1025 
cou¡î_t
 
p›√tMsgNo
;

1026 
evítTy≥
;

1027 
ªc_busy
;

1028 
sh¨î_num
;

1029 
ödividuÆ_chûdCou¡
[8];

1030 
¥e„tch_√xt
;

1031 
≥ndögInvAck
;

1032 
isEx˛usiveOrDúty
;

1033 
l1LöeU£Sètus
;

1034 
isReqL2Hô
;

1035 
isReqL2SecMiss
;

1036 
isReqL2Inv
;

1037 
isReqL2Tøns
;

1038 
cou¡î_t
 
ªqNëTime
;

1039 
cou¡î_t
 
ªqAtDúTime
;

1040 
cou¡î_t
 
ªqAckTime
;

1041 
isSyncAc˚ss
;

1044 
	#EUP_NETWORKn


	)

1045 #ifde‡
EUP_NETWORKn


1046 
DIRECTORY_EVENT
 *
‰ì_evít_li°
;

1047 
	#maxEvít
 30000

	)

1048 
	`Æloˇã_‰ì_evít_li°
();

1050 #ifde‡
CONF_RES_RESEND


1051 
	sQUEUE_EVENT_ENTRY


1053 
DIRECTORY_EVENT
 *
evít
;

1054 
isvÆid
;

1057 
	sQUEUE_EVENT


1059 
QUEUE_EVENT_ENTRY
 
Queue_íåy
[
QUEUE_SIZE
];

1060 
‰ì_E¡rõs
;

1065 
	#MEM_LOC_SHIFT
 1

	)

1067 
	#DIR_FIFO_PORTS
 2

	)

1068 
	#DIR_FIFO_SIZE
 4096

	)

1069 
	#dú_fifo_size
 64

	)

1070 
	#DIR_FIFO_FULL


	)

1071 
	#MAXSIZE
 250

	)

1072 
dú_fifo_fuŒ
[
MAXSIZE
];

1074 
DIRECTORY_EVENT
 *
dú_fifo
[
MAXSIZE
][
DIR_FIFO_SIZE
];

1075 
dú_fifo_hód
[
MAXSIZE
];

1076 
dú_fifo_èû
[
MAXSIZE
];

1077 
dú_fifo_num
[
MAXSIZE
];

1078 
dú_fifo_p‹tu£
[
MAXSIZE
];

1079 
	#TSHR_FIFO_SIZE
 1024

	)

1080 
	#tshr_fifo_size
 64

	)

1081 
DIRECTORY_EVENT
 *
tshr_fifo
[
MAXSIZE
][
TSHR_FIFO_SIZE
];

1082 
tshr_fifo_hód
[
MAXSIZE
];

1083 
tshr_fifo_èû
[
MAXSIZE
];

1084 
tshr_fifo_num
[
MAXSIZE
];

1085 
tshr_fifo_p‹tu£
[
MAXSIZE
];

1088 
DIRECTORY_EVENT
 *
l1_fifo
[
MAXSIZE
][
DIR_FIFO_SIZE
];

1089 
l1_fifo_hód
[
MAXSIZE
];

1090 
l1_fifo_èû
[
MAXSIZE
];

1091 
l1_fifo_num
[
MAXSIZE
];

1092 
l1_fifo_p‹tu£
[
MAXSIZE
];

1094 
	`ª£t_p‹ts
();

1095 
	`dú_fifo_íqueue
(
DIRECTORY_EVENT
 *
evít
, 
ty≥
);

1096 
	`dú_fifo_dequeue
();

1097 
	`£ndLSQInv
(
md_addr_t
 
addr
, 
thªadid
);

	@cache_update.c

115 
	~<°dio.h
>

116 
	~<°dlib.h
>

117 
	~<as£π.h
>

118 
	~<m©h.h
>

120 
	~"ho°.h
"

121 
	~"misc.h
"

122 
	~"machöe.h
"

123 
	~"ˇche.h
"

125 
	~"smt.h
"

126 
	~"c⁄ãxt.h
"

128 #ifde‡
HOTLEAKAGE


130 
	~"ˇche_Àak_˘æ.h
"

131 
	~"powî.h
"

135 
tŸo
;

139 
	gglobÆ_tick
 = 0;

140 
	gn_ª£ts
 = 0;

141 
	gloˇl_width
;

142 
	gglobÆ_width
;

143 
	gn_löes
;

144 
	gèg_size
;

145 
	gèg_¨øy_size
;

146 
	gv_addr_size
;

147 
	gˇche_size
;

149 
	gglobÆ_ac˚ss_powî
;

150 
	gglobÆ_af
;

151 
	gloˇl_ac˚ss_powî
;

152 
	gloˇl_af
;

153 
	gloˇl_ª£t_powî
;

157 
ßm∂e_öãrvÆ
;

158 
b_deˇy_íabÀd
;

159 
b_deˇy_¥ofûe_íabÀd
;

162 
cou¡î_t
 
	gsum_ªÆ_miss
;

163 
cou¡î_t
 
	gsum_deˇy_ˇu£d_miss
;

164 
cou¡î_t
 
	gsum_ªÆ_deˇy_ˇu£d_miss
;

165 
cou¡î_t
 
	gsum_Ál£_deˇy_ˇu£d_miss
;

166 
cou¡î_t
 
	gödu˚d_deˇy_mis£s
;

167 
cou¡î_t
 
	gödu˚d_wbacks
;

168 
cou¡î_t
 
	gªÆ_deˇy_mis£s
;

170 #i‚def 
CACHE_CLEANUP


174 #ifde‡ 
CACHE_CLEANUP


175 
yg°RobId
;

176 
yg°RobExId
;

179 #i‡
deföed
(
ˇche_deˇy
)

180 
	#MAX_LIFE
 100

	)

181 
	#MAX_USAGE
 100

	)

182 
	#MAX_INTERVAL
 100

	)

183 
	#MAX_INTERVAL_FINE
 400

	)

186 
md_addr_t
 
cur_pc
;

189 
°©_°©_t
 *
	gn_ªad_¥of
;

190 
°©_°©_t
 *
	gn_ac˚ss_¥of
;

192 
cou¡î_t
 
	gn_¥ofûed_blocks
;

194 
cou¡î_t
 
	gsum_ac˚ss
;

195 
cou¡î_t
 
	gsum_live_time
;

196 
cou¡î_t
 
	gsum_dód_time
;

198 
cou¡î_t
 
	gn_deˇy
, 
	gn_vÆid_deˇy
, 
	gn_övÆid_deˇy
;

200 #i‡(
deˇyed_ˇche
 =
ˇche_dl2
)

201 
	#ACCESS_INTERVAL_STEP_FINE
 1000

	)

202 
	#ACCESS_INTERVAL_STEP
 10000

	)

203 
	#ACCESS_INTERVAL_STEP_COARSE
 100000

	)

204 
	#DEAD_TIME_STEP
 10000

	)

205 
	#DEAD_TIME_STEP_COARSE
 100000

	)

207 
	#ACCESS_INTERVAL_STEP_FINE
 10

	)

208 
	#ACCESS_INTERVAL_STEP
 100

	)

209 
	#ACCESS_INTERVAL_STEP_COARSE
 1000

	)

210 
	#DEAD_TIME_STEP
 100

	)

211 
	#DEAD_TIME_STEP_COARSE
 1000

	)

214 
°©_°©_t
 *
	gac˚ss_öãrvÆ_¥of
;

215 
°©_°©_t
 *
	gac˚ss_öãrvÆ_¥of_cﬂr£
;

216 
°©_°©_t
 *
	gac˚ss_öãrvÆ_¥of_föe
;

217 
cou¡î_t
 
	gsum_ac˚ss_öãrvÆ
;

218 
cou¡î_t
 
	gnum_ac˚ss_öãrvÆ
;

221 
°©_°©_t
 *
	gvÆid_øtio_¥of
;

222 
°©_°©_t
 *
	gdúty_øtio_¥of
;

225 
°©_°©_t
 *
	gwhﬁe_li„_¥of
;

227 
	#WHOLE_LIFE_STEP
 100000

	)

229 
°©_°©_t
 *
	glive_time_¥of
;

231 
	#LIVE_TIME_STEP
 50000

	)

233 
°©_°©_t
 *
	gdód_time_¥of
;

234 
°©_°©_t
 *
	gdód_time_¥of_cﬂr£
;

236 
°©_°©_t
 *
	gdúty_time_¥of
;

238 
	#DIRTY_time_STEP
 100

	)

240 
cou¡î_t
 
	gsum_dúty_time
;

242 
	#MAX_WRITEBACK
 100

	)

243 
°©_°©_t
 *
	gn_wrôeback_¥of
;

245 
globÆ_cou¡î_max
;

246 
loˇl_cou¡î_max
;

247 
Á°_cou¡î
;

248 
¶ow_cou¡î
;

250 
cou¡î_t
 
	gcou¡î_upd©e
;

253 
ˇche_t
 *
ˇche_û1
;

256 
ˇche_t
 *
ˇche_û2
;

259 
ˇche_t
 *
ôlb
;

262 
ˇche_t
 *
déb
;

265 
ˇche_t
 *
ˇche_dl0
;

271 
ˇche_t
 *
ˇche_dl1
;

272 
ˇche_t
 *
ˇche_dl2
;

273 
ˇche_t
 *
ˇche_dl0
;

275 
	gl0HôFœg
;

276 
	gl1HôFœg
;

277 
	gû1HôFœg
;

278 
	gl2HôFœg
;

279 
	gébHôFœg
;

280 
md_addr_t
 
	gl2Rïœ˚Addr
;

282 
	gdl2_¥e„tch_a˘ive
 = 0;

283 
	gdl2_¥e„tch_id
 = 0;

284 
cou¡î_t
 
pÊ2Hô
;

285 
cou¡î_t
 
pÊ2SecMiss
;

286 
cou¡î_t
 
pÊ2PrimMiss
;

288 
cou¡î_t
 
sim_cy˛e
[8];

289 
c‹e_•ìd
[8];

290 
Á°e°_c‹e
;

291 
Á°e°_c‹e_•ìd
;

293 
cou¡î_t
 
tŸÆRecSt‹eLﬂdComm
;

294 
cou¡î_t
 
tŸÆIn°DñaySt‹eLﬂdComm
;

295 
m_nLSQIdx
;

296 
RUU_°©i⁄
 *
LSQ
[];

297 #ifde‡
CFJ


298 
sbdLódThªad
;

299 
maöLódThªad
;

304 
	#CACHE_BADDR
(
˝
, 
addr
Ë(◊ddrË& ~(˝)->
blk_mask
)

	)

305 
	#CACHE_MK_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

306 (((
	gèg
Ë<< (
	g˝
)->
	gèg_shi·
)|((
	g£t
Ë<< (˝)->
	g£t_shi·
))

308 
	#CACHE_MK1_BADDR
(
˝
, 
èg
, 
£t
Ë\

	)

309 ((((
	gèg
Ë<< (
	g˝
)->
	gèg_shi·
)/
	gBANKS
)|((
	g£t
Ë<< (˝)->
	g£t_shi·
))

312 
	#CACHE_BINDEX
(
˝
, 
blks
, 
i
Ë\

	)

313 ((
	gˇche_blk_t
 *)(((*)(
	gblks
)) + \

314 (
	gi
)*((
	gˇche_blk_t
) + \

315 ((
	g˝
)->
	gbÆloc
 \

316 ? (
	g˝
)->
bsize
*(
byã_t
) : 0))))

321 
	#CACHE_HASH
(
˝
, 
key
Ë\

	)

322 (((
key
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
˝
)->
hsize
-1))

325 
	#__CACHE_ACCESS
(
ty≥
, 
d©a
, 
bofs
Ë\

	)

326 (*((
ty≥
 *)(((*)
d©a
Ë+ (
bofs
))))

329 
	#CACHE_DOUBLE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

330 
	#CACHE_FLOAT
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

331 
	#CACHE_WORD
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

332 
	#CACHE_HALF
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

333 
	#CACHE_BYTE
(
d©a
, 
bofs
Ë
	`__CACHE_ACCESS
(, d©a, bofs)

	)

337 
	#CACHE_BCOPY
(
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
Ë\

	)

338 i‡(
cmd
 =
Ród
) \

340 
nbyãs
) { \

342 *((
byã_t
 *)
p
Ë
	`CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
); ; \

344 *((
hÆf_t
 *)
p
Ë
	`CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
); ; \

346 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); ; \

349 
w‹ds
 = 
nbyãs
 >> 2; \

350 
w‹ds
-- > 0) \

352 *((
w‹d_t
 *)
p
Ë
	`CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
); \

353 
p
 +4; 
bofs
 += 4; \

357 
	}
}\

360 
	gnbyãs
) { \

362 
CACHE_BYTE
(&
blk
->
d©a
[0], 
bofs
Ë*((
byã_t
 *)
p
); ; \

364 
CACHE_HALF
(&
blk
->
d©a
[0], 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

366 
CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

369 
w‹ds
 = 
nbyãs
 >> 2; \

370 
	gw‹ds
-- > 0) \

372 
CACHE_WORD
(&
blk
->
d©a
[0], 
bofs
Ë*((
w‹d_t
 *)
p
); \

373 
	gp
 +4; 
	gbofs
 += 4; \

380 
	#CACHE_SCOPY
(
cmd
, 
d©a
, 
bofs
, 
p
, 
nbyãs
Ë\

	)

381 i‡(
	gcmd
 =
Ród
) \

383 
nbyãs
) { \

385 *((
byã_t
 *)
p
Ë
CACHE_BYTE
(
d©a
, 
bofs
); ; \

387 *((
hÆf_t
 *)
p
Ë
CACHE_HALF
(
d©a
, 
bofs
); ; \

389 *((
w‹d_t
 *)
p
Ë
CACHE_WORD
(
d©a
, 
bofs
); ; \

392 
w‹ds
 = 
nbyãs
 >> 2; \

393 
	gw‹ds
-- > 0) \

395 *((
	gw‹d_t
 *)
	gp
Ë
CACHE_WORD
(
d©a
, 
bofs
); \

396 
	gp
 +4; 
	gbofs
 += 4; \

403 
	gnbyãs
) { \

405 
CACHE_BYTE
(
d©a
, 
bofs
Ë*((
byã_t
 *)
p
); ; \

407 
CACHE_HALF
(
d©a
, 
bofs
Ë*((
hÆf_t
 *)
p
); ; \

409 
CACHE_WORD
(
d©a
, 
bofs
Ë*((
w‹d_t
 *)
p
); ; \

412 
w‹ds
 = 
nbyãs
 >> 2; \

413 
	gw‹ds
-- > 0) \

415 
CACHE_WORD
(
d©a
, 
bofs
Ë*((
w‹d_t
 *)
p
); \

416 
	gp
 +4; 
	gbofs
 += 4; \

424 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

428 
	#BANKS
 16

	)

433 
	gœãn
[
BANKS
];

436 
	grm1
 = 0;

437 
	gwm1
 = 0;

438 
	grh1
 = 0;

439 
	gwh1
 = 0;

440 
	grm2
 = 0;

441 
	gwm2
 = 0;

442 
	grh2
 = 0;

443 
	gwh2
 = 0;

445 
a˘ivec⁄ãxts
;

446 
ªs_memb™k
;

447 
n_ˇche_limô_thrd
[];

448 
n_ˇche_°¨t_thrd
[];

450 #ifde‡ 
LOAD_PREDICTOR


451 
ˇche_miss
;

454 #ifde‡
CACHE_THRD_STAT


455 
n_ˇche_miss_thrd
[];

456 
n_ˇche_ac˚ss_thrd
[];

457 
n_ˇche_miss_thøsh_thrd
[];

460 
ö£π_fûlq
 (, 
md_addr_t
, );

462 
numc⁄ãxts
;

466 
	$u∆ök_hèb_ít
 (
ˇche_t
 *
˝
,

467 
ˇche_£t_t
 *
£t
,

468 
ˇche_blk_t
 *
blk
)

470 
ˇche_blk_t
 *
¥ev
, *
ít
;

471 
ödex
 = 
	`CACHE_HASH
 (
˝
, 
blk
->
ègid
.
èg
);

474 
¥ev
 = 
NULL
, 
ít
 = 
£t
->
hash
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
hash_√xt
)

476 i‡(
ít
 =
blk
)

479 
	`as£π
 (
ít
);

482 i‡(!
¥ev
)

485 
£t
->
hash
[
ödex
] = 
ít
->
hash_√xt
;

490 
¥ev
->
hash_√xt
 = 
ít
->hash_next;

492 
ít
->
hash_√xt
 = 
NULL
;

493 
	}
}

497 
	$lök_hèb_ít
 (
ˇche_t
 *
˝
,

498 
ˇche_£t_t
 *
£t
,

499 
ˇche_blk_t
 *
blk
)

501 
ödex
 = 
	`CACHE_HASH
 (
˝
, 
blk
->
ègid
.
èg
);

504 
blk
->
hash_√xt
 = 
£t
->
hash
[
ödex
];

505 
£t
->
hash
[
ödex
] = 
blk
;

506 
	}
}

510 
	$upd©e_way_li°
 (
ˇche_£t_t
 *
£t
,

511 
ˇche_blk_t
 *
blk
,

512 
li°_loc_t
 
whîe
, 
assoc
)

515 i‡(!
blk
->
way_¥ev
 && !blk->
way_√xt
)

518 
	`as£π
 (
£t
->
way_hód
 =
blk
 && së->
way_èû
 == blk);

523 i‡(!
blk
->
way_¥ev
)

525 
	`as£π
 (
£t
->
way_hód
 =
blk
 && së->
way_èû
 != blk);

526 i‡(
whîe
 =
Hód
)

532 
£t
->
way_hód
 = 
blk
->
way_√xt
;

533 
blk
->
way_√xt
->
way_¥ev
 = 
NULL
;

535 i‡(!
blk
->
way_√xt
)

538 
	`as£π
 (
£t
->
way_hód
 !
blk
 && së->
way_èû
 == blk);

539 i‡(
whîe
 =
Taû
)

544 
£t
->
way_èû
 = 
blk
->
way_¥ev
;

545 
blk
->
way_¥ev
->
way_√xt
 = 
NULL
;

550 
	`as£π
 (
£t
->
way_hód
 !
blk
 && së->
way_èû
 != blk);

551 
blk
->
way_¥ev
->
way_√xt
 = blk->way_next;

552 
blk
->
way_√xt
->
way_¥ev
 = blk->way_prev;

556 i‡(
whîe
 =
Hód
)

559 
blk
->
way_√xt
 = 
£t
->
way_hód
;

560 
blk
->
way_¥ev
 = 
NULL
;

561 
£t
->
way_hód
->
way_¥ev
 = 
blk
;

562 
£t
->
way_hód
 = 
blk
;

564 i‡(
whîe
 =
Taû
)

567 
blk
->
way_¥ev
 = 
£t
->
way_èû
;

568 
blk
->
way_√xt
 = 
NULL
;

569 
£t
->
way_èû
->
way_√xt
 = 
blk
;

570 
£t
->
way_èû
 = 
blk
;

572 #ifde‡
ALT_CACHE_MNG_POLICY


573 i‡(
whîe
 =
Mid
)

575 
i
;

576 
ˇche_blk_t
 *
ösblk
 = 
£t
->
way_hód
;

577 
i
 = 0; i < (
assoc
/2-1); i++)

578 
ösblk
 = insblk->
way_√xt
;

579 
blk
->
way_¥ev
 = 
ösblk
;

580 
blk
->
way_√xt
 = 
ösblk
->way_next;

581 
ösblk
->
way_√xt
->
way_¥ev
 = 
blk
;

582 
ösblk
->
way_√xt
 = 
blk
;

586 
	`∑nic
 ("bogus WHERE designator");

587 
	}
}

589 #ifde‡
HOTLEAKAGE


591 
	$˛ór_ˇche_°©s
 (
ˇche_t
 *
˝
)

594 
i
;

596 
i
 = 0; i < 
MAXTHREADS
; i++)

598 
˝
->
hôs
[
i
] = 0;

599 
˝
->
mis£s
[
i
] = 0;

600 
˝
->
ªad_mis£s
[
i
] = 0;

601 
˝
->
wrôe_mis£s
[
i
] = 0;

602 
˝
->
ª∂a˚míts
[
i
] = 0;

603 
˝
->
wrôebacks
[
i
] = 0;

604 
˝
->
övÆid©i⁄s
[
i
] = 0;

606 
	}
}

610 
ˇche_t
 *

611 
ˇche_¸óã
 (*
«me
,

612 
n£ts
,

613 
bsize
,

614 
bÆloc
,

615 
usize
,

616 
assoc
,

617 
ˇche_pﬁicy
 
pﬁicy
,

619 (*
blk_ac˚ss_‚
Ë(
mem_cmd
 
cmd
, 
md_addr_t
 
baddr
, 
bsize
, 
ˇche_blk_t
 * 
blk
, 
tick_t
 
now
, 
thªadid
), 
hô_œãncy
)

621 
ˇche_t
 *
˝
;

622 
ˇche_blk_t
 *
blk
;

623 
i
, 
j
, 
bödex
;

626 i‡(
n£ts
 <= 0)

627 
	`Áèl
 ("ˇchêsizê(ö sësË`%d' mu° bên⁄-zîo", 
n£ts
);

628 i‡((
n£ts
 & (nsets - 1)) != 0)

629 
	`Áèl
 ("ˇchêsizê(ö sësË`%d' i†nŸáÖowî o‡two", 
n£ts
);

631 i‡(
bsize
 < 8)

632 
	`Áèl
 ("ˇchêblock sizê(ö byãsË`%d' mu° bê8 o∏gª©î", 
bsize
);

633 i‡((
bsize
 & (bsize - 1)) != 0)

634 
	`Áèl
 ("ˇchêblock sizê(ö byãsË`%d' mu° bê®powî o‡two", 
bsize
);

635 i‡(
usize
 < 0)

636 
	`Áèl
 ("u£∏d©®sizê(ö byãsË`%d' mu° bê®posôivêvÆue", 
usize
);

637 i‡(
assoc
 <= 0)

638 
	`Áèl
 ("ˇchêassocütivôy `%d' mu° bên⁄-zîÿ™dÖosôive", 
assoc
);

640 i‡(!
blk_ac˚ss_‚
)

641 
	`Áèl
 ("must specify miss/replacement functions");

644 
˝
 = (
ˇche_t
 *Ë
	`ˇŒoc
 (1,  (ˇche_tË+ (
n£ts
 - 1Ë*  (
ˇche_£t_t
));

645 i‡(!
˝
)

646 
	`Áèl
 ("out of virtual memory");

649 
˝
->
«me
 = 
	`my°rdup
 (name);

650 
˝
->
n£ts
 =Çsets;

651 
˝
->
bsize
 = bsize;

652 
˝
->
bÆloc
 = balloc;

653 
˝
->
usize
 = usize;

654 
˝
->
assoc
 =ássoc;

655 
˝
->
pﬁicy
 =Öolicy;

656 
˝
->
hô_œãncy
 = hit_latency;

659 
˝
->
blk_ac˚ss_‚
 = blk_access_fn;

662 
˝
->
hsize
 = 
	`CACHE_HIGHLY_ASSOC
 (˝Ë? (
assoc
 >> 2) : 0;

663 
˝
->
blk_mask
 = 
bsize
 - 1;

664 
˝
->
£t_shi·
 = 
	`log_ba£2
 (
bsize
);

665 
˝
->
£t_mask
 = 
n£ts
 - 1;

666 
˝
->
èg_shi·
 = cp->
£t_shi·
 + 
	`log_ba£2
 (
n£ts
);

667 
˝
->
èg_mask
 = (1 << (32 - cp->
èg_shi·
)) - 1;

668 
˝
->
èg£t_mask
 = ~˝->
blk_mask
;

669 
˝
->
bus_‰ì
 = 0;

670 #ifde‡
FINE_GRAIN_INV


671 
˝
->
w‹d_num
 = cp->
bsize
/
GRANULARITY
;

672 
˝
->
w‹d_shi·
 = 
	`log_ba£2
(
GRANULARITY
);

673 
˝
->
w‹d_mask
 = cp->
w‹d_num
-1;

676 #ifde‡
HOTLEAKAGE


678 
	`debug
 ("%s: cp->hsizê = %d", 
˝
->
«me
, cp->
hsize
);

679 
	`debug
 ("%s: cp->blk_mask = 0x%08x", 
˝
->
«me
, cp->
blk_mask
);

680 
	`debug
 ("%s: cp->£t_shi· = %d", 
˝
->
«me
, cp->
£t_shi·
);

681 
	`debug
 ("%s: cp->£t_mask = 0x%08x", 
˝
->
«me
, cp->
£t_mask
);

682 
	`debug
 ("%s: cp->èg_shi· = %d", 
˝
->
«me
, cp->
èg_shi·
);

683 
	`debug
 ("%s: cp->èg_mask = 0x%08x", 
˝
->
«me
, cp->
èg_mask
);

686 
	`debug
 ("%s: cp->hsizê = %d", 
˝
->
hsize
);

687 
	`debug
 ("%s: cp->blk_mask = 0x%08x", 
˝
->
blk_mask
);

688 
	`debug
 ("%s: cp->£t_shi· = %d", 
˝
->
£t_shi·
);

689 
	`debug
 ("%s: cp->£t_mask = 0x%08x", 
˝
->
£t_mask
);

690 
	`debug
 ("%s: cp->èg_shi· = %d", 
˝
->
èg_shi·
);

691 
	`debug
 ("%s: cp->èg_mask = 0x%08x", 
˝
->
èg_mask
);

695 
i
 = 0; i < 
MAXTHREADS
; i++)

697 
˝
->
hôs
[
i
] = 0;

698 
˝
->
mis£s
[
i
] = 0;

699 #ifde‡
HOTLEAKAGE


700 
˝
->
ªad_mis£s
[
i
] = 0;

701 
˝
->
wrôe_mis£s
[
i
] = 0;

703 
˝
->
ª∂a˚míts
[
i
] = 0;

704 
˝
->
wrôebacks
[
i
] = 0;

705 
˝
->
övÆid©i⁄s
[
i
] = 0;

707 
˝
->
rdb
 = 0;

708 
˝
->
wrb
 = 0;

709 
˝
->
œ°u£
 = 0;

712 
˝
->
œ°_èg£tid
.
èg
 = 0;

713 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

714 
˝
->
œ°_blk
 = 
NULL
;

717 
˝
->
d©a
 = (
byã_t
 *Ë
	`ˇŒoc
 (
n£ts
 * 
assoc
,  (
ˇche_blk_t
Ë+ (˝->
bÆloc
 ? (
bsize
 *  (byte_t)) : 0));

718 i‡(!
˝
->
d©a
)

719 
	`Áèl
 ("out of virtual memory");

722 
bödex
 = 0, 
i
 = 0; i < 
n£ts
; i++)

724 
˝
->
£ts
[
i
].
way_hód
 = 
NULL
;

725 
˝
->
£ts
[
i
].
way_èû
 = 
NULL
;

726 #ifde‡
ALT_CACHE_MNG_POLICY


727 
˝
->
£ts
[
i
].
ö£πi⁄Pﬁicy
 = 
Hód
;

728 
˝
->
£ts
[
i
].
waôrcCou¡î
 = 0;

729 
˝
->
£ts
[
i
].
rcVÆid
 = 0;

732 i‡(
˝
->
hsize
)

734 
˝
->
£ts
[
i
].
hash
 = (
ˇche_blk_t
 **Ë
	`ˇŒoc
 (˝->
hsize
,  (cache_blk_t *));

735 i‡(!
˝
->
£ts
[
i
].
hash
)

736 
	`Áèl
 ("out of virtual memory");

741 
˝
->
£ts
[
i
].
blks
 = 
	`CACHE_BINDEX
 (˝, cp->
d©a
, 
bödex
);

745 
j
 = 0; j < 
assoc
; j++)

748 
blk
 = 
	`CACHE_BINDEX
 (
˝
, cp->
d©a
, 
bödex
);

749 
bödex
++;

752 
blk
->
°©us
 = 0;

753 
blk
->
ègid
.
èg
 = 0;

754 
blk
->
ègid
.
thªadid
 = -1;

755 
blk
->
ªady
 = 0;

756 
blk
->
u£r_d©a
 = (
usize
 !0 ? (
byã_t
 *Ë
	`ˇŒoc
 (usize,  (byã_t)Ë: 
NULL
);

757 
blk
->
isByãDúty
 = 
	`¸óã_byã_mask
(
˝
->
bsize
);

759 
blk
->
œ°_ac˚ss_time
 = 0;

760 
blk
->
isSèÀ
 = 0;

761 
blk
->
œ°_ac˚ss_ö¢
 = 0;

762 
blk
->
°‹e_nŸ_execuãd
 = 0;

763 
blk
->
wr⁄gLﬂdCau£s
 = 0;

764 
blk
->
pois⁄
 = 0;

765 #ifde‡
CACHE_CLEANUP


766 
blk
->
robId
 = 0;

767 
blk
->
robExId
 = 3;

769 #ifde‡
FINE_GRAIN_INV


770 if(!
	`°rcmp
(
˝
->
«me
,"dl0"))

772 
blk
->
w‹dSètus
 = (*Ë
	`ˇŒoc
 (
˝
->
w‹d_num
, ());

773 
k
;

774 
k
 = 0; k < 
˝
->
w‹d_num
; k++)

775 
blk
->
w‹dSètus
[
k
] = 0;

778 
blk
->
w‹dSètus
 = 
NULL
;

780 #ifde‡
HOTLEAKAGE


782 #i‡
	`deföed
(
ˇche_deˇy
)

783 
blk
->
time_fú°_ac˚ss
 = 0;

784 
blk
->
time_œ°_ac˚ss
 = 0;

785 
blk
->
time_dúty
 = 0;

786 
blk
->
n_ac˚ss
 = 0;

787 
blk
->
n_tŸÆ_ac˚ss
 = 0;

788 
blk
->
n_tŸÆ_miss
 = 0;

789 
blk
->
n_ªad
 = 0;

790 
blk
->
n_wrôe
 = 0;

791 
blk
->
‰equícy
 = 0;

792 
blk
->
loˇl_cou¡î_max
 =Üocal_counter_max;

793 
blk
->
loˇl_cou¡î
 = blk->
loˇl_cou¡î_max
;

798 i‡(
˝
->
hsize
)

799 
	`lök_hèb_ít
 (
˝
, &˝->
£ts
[
i
], 
blk
);

802 
blk
->
way_√xt
 = 
˝
->
£ts
[
i
].
way_hód
;

803 
blk
->
way_¥ev
 = 
NULL
;

804 i‡(
˝
->
£ts
[
i
].
way_hód
)

805 
˝
->
£ts
[
i
].
way_hód
->
way_¥ev
 = 
blk
;

806 
˝
->
£ts
[
i
].
way_hód
 = 
blk
;

807 i‡(!
˝
->
£ts
[
i
].
way_èû
)

808 
˝
->
£ts
[
i
].
way_èû
 = 
blk
;

811  
˝
;

812 
	}
}

815 
ˇche_pﬁicy


816 
	$ˇche_ch¨2pﬁicy
 (
c
)

818 
c
)

821  
LRU
;

823  
R™dom
;

825  
FIFO
;

827 
	`Áèl
 ("bogu†ª∂a˚míàpﬁicy, `%c'", 
c
);

829 
	}
}

833 
	$ˇche_c⁄fig
 (
ˇche_t
 *
˝
,

834 
FILE
 * 
°ªam
)

836 
	`Ârötf
 (
°ªam
, "ˇche: %s: %d sës, %d byã blocks, %d byã†u£∏d©a/block\n", 
˝
->
«me
, cp->
n£ts
, cp->
bsize
, cp->
usize
);

837 
	`Ârötf
 (
°ªam
, "ˇche: %s: %d-way, `%s'Ñïœ˚míàpﬁicy, wrôe-back\n", 
˝
->
«me
, cp->
assoc
, cp->
pﬁicy
 =
LRU
 ? "LRU" : cp->pﬁicy =
R™dom
 ? "R™dom" : cp->pﬁicy =
FIFO
 ? "FIFO" : (
	`ab‹t
 (), ""));

838 
	}
}

842 
	$ˇche_ªg_°©s
 (
ˇche_t
 *
˝
,

843 
°©_sdb_t
 *
sdb
)

845 
i
;

847 
i
 = 0; i < 
numc⁄ãxts
; i++)

849 
buf
[512], 
buf1
[512], *
«me
;

852 i‡(!
˝
->
«me
 || !cp->name[0])

853 
«me
 = "<unknown>";

855 
«me
 = 
˝
->name;

857 
	`•rötf
 (
buf
, "%s.hôs[%d]", 
«me
, 
i
);

858 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡hôs", &
˝
->
hôs
[
i
], 0, 
NULL
);

859 
	`•rötf
 (
buf
, "%s.mis£s[%d]", 
«me
, 
i
);

860 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡mis£s", &
˝
->
mis£s
[
i
], 0, 
NULL
);

861 #ifde‡
HOTLEAKAGE


862 
	`•rötf
 (
buf
, "%s.ªad_mis£s[%d]", 
«me
, 
i
);

863 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ªad mis£s", &
˝
->
ªad_mis£s
[
i
], 0, 
NULL
);

864 
	`•rötf
 (
buf
, "%s.wrôe_mis£s[%d]", 
«me
, 
i
);

865 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôêmis£s", &
˝
->
wrôe_mis£s
[
i
], 0, 
NULL
);

867 
	`•rötf
 (
buf
, "%s.ª∂a˚míts[%d]", 
«me
, 
i
);

868 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡ª∂a˚míts", &
˝
->
ª∂a˚míts
[
i
], 0, 
NULL
);

869 
	`•rötf
 (
buf
, "%s.wrôebacks[%d]", 
«me
, 
i
);

870 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡wrôebacks", &
˝
->
wrôebacks
[
i
], 0, 
NULL
);

871 
	`•rötf
 (
buf
, "%s.övÆid©i⁄s[%d]", 
«me
, 
i
);

872 
	`°©_ªg_cou¡î
 (
sdb
, 
buf
, "tŸÆÇumbî o‡övÆid©i⁄s", &
˝
->
övÆid©i⁄s
[
i
], 0, 
NULL
);

874 
	}
}

876 #ifde‡
HOTLEAKAGE


879 
	$upd©e_ˇche_°©s
 ()

881 #i‡
	`deföed
(
ˇche_deˇy
)

882 
i
, 
bödex
;

883 
ˇche_blk_t
 *
blk
;

884 
n_vÆid
, 
n_dúty
, 
n_tŸÆ
;

885 
ˇche_t
 *
˝
 = 
deˇyed_ˇche
;

887 
n_vÆid
 = 0;

888 
n_dúty
 = 0;

889 
n_tŸÆ
 = 
˝
->
assoc
 * cp->
n£ts
;

893 
i
 = 0; i < 
˝
->
n£ts
; i++)

895 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

897 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

899 
n_vÆid
++;

900 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

901 
n_dúty
++;

907 
	}
}

910 
	$¥öt_tŸÆ_ac˚ss
 ()

912 
i
, 
bödex
;

913 
ˇche_blk_t
 *
blk
;

914 
ˇche_t
 *
˝
 = 
deˇyed_ˇche
;

916 
	`Ârötf
 (
°dîr
, " cacheÅotaláccess\n");

918 
i
 = 0; i < 
˝
->
n£ts
; i++)

920 
bödex
 = 0; bödex < 
˝
->
assoc
; bindex++)

922 
blk
 = 
	`CACHE_BINDEX
 (
˝
, cp->
£ts
[
i
].
blks
, 
bödex
);

923 
	`Ârötf
 (
°dîr
, " %ld %ld", (Ë
blk
->
n_tŸÆ_ac˚ss
, (Ëblk->
n_tŸÆ_miss
);

926 
	`Ârötf
 (
°dîr
, " \n");

929 
	`Ârötf
 (
°dîr
, " \n\n\n");

932 
	}
}

936 
	$upd©e_ˇche_deˇy
 ()

938 #i‡
	`deföed
(
ˇche_deˇy
)

939 
ˇche_blk_t
 *
blk
;

940 
ˇche_t
 *
˝
 = 
deˇyed_ˇche
;

941 
n_wrôeback
 = 0;

942 
i
;

945 
cou¡î_t
 
ö¸_cou¡
 = 0;

948 i‡(!
	`ˇche_Àak_is_˘æÀd
 ())

950 
globÆ_tick
 = 1;

953 
i
 = 0; i < 
˝
->
n£ts
; i++)

955 
k
;

957 
blk
 = 
˝
->
£ts
[
i
].
blks
, 
k
 = 0; k < cp->
assoc
; blk++, k++)

960 i‡(!(
blk
->
°©us
 & 
CACHE_BLK_DECAYED
))

962 
cou¡î_upd©e
++;

963 
blk
->
loˇl_cou¡î
--;

966 i‡(
blk
->
loˇl_cou¡î
 < 0)

972 i‡(
	`ˇche_Àak_˘æ_is_°©e_losög
 ())

973 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

974 
blk
->
°©us
 |
CACHE_BLK_DECAYED
;

975 
blk
->
time_deˇyed
 = 
sim_cy˛e
[
Á°e°_c‹e
];

976 
n_deˇy
++;

980 
	`mode_swôch_h2l_ö¸
 ();

981 
ö¸_cou¡
++;

984 #i‡
	`deföed
(
cou¡î_ba£d_ad≠tive
Ë|| deföed(
comböed_ad≠tive
)

985 
blk
->
loˇl_cou¡î
 = blk->
loˇl_cou¡î_max
;

990 i‡((
blk
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& 
	`ˇche_Àak_˘æ_is_°©e_losög
 ())

992 
˝
->
wrôebacks
[
blk
->
ègid
.
thªadid
]++;

993 
n_wrôeback
++;

994 
ödu˚d_wbacks
++;

996 
˝
->
	`blk_ac˚ss_‚
 (
Wrôe
, 
	`CACHE_MK_BADDR
 (˝, 
blk
->
ègid
.
èg
, 
i
 ), cp->
bsize
, blk, 
sim_cy˛e
[
Á°e°_c‹e
], blk->ègid.
thªadid
);

1014 
	`low_Àak_øtio_ö¸
 ((Ë
ö¸_cou¡
 / (
˝
->
n£ts
 * cp->
assoc
), 
	`gë_swôch_cy˛es_h2l
 () / 2);

1018 
	}
}

1022 
	$upd©e_ˇche_block_°©s_whí_hô
 (
ˇche_t
 *
˝
, 
ˇche_blk_t
 *
blk
, 
mem_cmd
 
cmd
)

1024 
i
;

1025 
ac˚ss_öãrvÆ
;

1027 #i‡
	`deföed
(
ˇche_deˇy
)

1028 i‡(
˝
 =
deˇyed_ˇche
)

1030 i‡(
blk
->
time_fú°_ac˚ss
 > 0)

1032 
ac˚ss_öãrvÆ
 = 
sim_cy˛e
[
Á°e°_c‹e
] - 
blk
->
time_œ°_ac˚ss
 + 1;

1035 
sum_ac˚ss_öãrvÆ
 +
ac˚ss_öãrvÆ
;

1036 
num_ac˚ss_öãrvÆ
 += 1;

1038 
blk
->
time_œ°_ac˚ss
 = 
sim_cy˛e
[
Á°e°_c‹e
];

1039 
blk
->
pc_œ°_ac˚ss
 = 
cur_pc
;

1040 
blk
->
n_ac˚ss
++;

1041 
blk
->
n_tŸÆ_ac˚ss
++;

1042 
blk
->
œ°_cmd
 = 
cmd
;

1043 i‡(
cmd
 =
Ród
)

1044 
blk
->
n_ªad
++;

1046 
blk
->
n_wrôe
++;

1050 i‡(
blk
->
loˇl_cou¡î
 !blk->
loˇl_cou¡î_max
)

1052 
blk
->
loˇl_cou¡î
 = blk->
loˇl_cou¡î_max
;

1053 
cou¡î_upd©e
++;

1055 
n_ª£ts
++;

1060 
i
 = 0;

1065 
	}
}

1069 
	$upd©e_ˇche_block_°©s_whí_miss
 (
ˇche_t
 *
˝
, 
ˇche_blk_t
 *
ª∂
, 
mem_cmd
 
cmd
, 
deˇy_ˇu£d_miss
)

1071 #i‡
	`deföed
(
ˇche_deˇy
)

1072 i‡(
˝
 =
deˇyed_ˇche
)

1075 i‡(
ª∂
->
time_fú°_ac˚ss
 > 0)

1077 
n_¥ofûed_blocks
++;

1079 
sum_ac˚ss
 +
ª∂
->
n_ac˚ss
;

1080 
sum_live_time
 +
ª∂
->
time_œ°_ac˚ss
 -Ñïl->
time_fú°_ac˚ss
;

1081 
sum_dód_time
 +
sim_cy˛e
[
Á°e°_c‹e
] - 
ª∂
->
time_œ°_ac˚ss
;

1084 i‡(
ª∂
->
time_deˇyed
)

1086 
n_övÆid_deˇy
 +
deˇy_ˇu£d_miss
;

1087 
n_vÆid_deˇy
 +1 - 
deˇy_ˇu£d_miss
;

1093 
ª∂
->
time_fú°_ac˚ss
 = 
sim_cy˛e
[
Á°e°_c‹e
];

1094 
ª∂
->
fú°_cmd
 = 
cmd
;

1096 
ª∂
->
pc_œ°_ac˚ss
 = 
cur_pc
;

1097 
ª∂
->
time_œ°_ac˚ss
 = 
sim_cy˛e
[
Á°e°_c‹e
];

1098 
ª∂
->
œ°_cmd
 = 
cmd
;

1100 
ª∂
->
time_deˇyed
 = 0;

1101 
ª∂
->
n_tŸÆ_miss
++;

1103 
ª∂
->
n_ac˚ss
 = 1;

1104 
ª∂
->
n_tŸÆ_ac˚ss
++;

1105 
ª∂
->
n_ªad
 = (
cmd
 =
Ród
 ? 1 : 0);

1106 
ª∂
->
n_wrôe
 = (
cmd
 =
Wrôe
 ? 1 : 0);

1110 i‡(
ª∂
->
loˇl_cou¡î
 !ª∂->
loˇl_cou¡î_max
)

1112 
ª∂
->
loˇl_cou¡î
 =Ñïl->
loˇl_cou¡î_max
;

1113 
cou¡î_upd©e
++;

1115 
n_ª£ts
++;

1120 
	}
}

1125 
	$ˇche_°©s
 (
ˇche_t
 *
˝
,

1126 
FILE
 * 
°ªam
,

1127 
thªadid
)

1129 
sum
 = (Ë(
˝
->
hôs
[
thªadid
] + cp->
mis£s
[threadid]);

1131 
	`Ârötf
 (
°ªam
, "ˇche: %s: %.0‡hô†%.0‡mis£†%.0‡ª∂†%.0‡övÆid©i⁄s\n", 
˝
->
«me
, (Ë˝->
hôs
[
thªadid
], (Ë˝->
mis£s
[thªadid], (Ë˝->
ª∂a˚míts
[thªadid], (Ë˝->
övÆid©i⁄s
[threadid]);

1132 
	`Ârötf
 (
°ªam
, "ˇche: %s: mis†øã=%‡Ñï»øã=%‡ invÆid©i⁄Ñ©e=%f\n", 
˝
->
«me
, (Ë˝->
mis£s
[
thªadid
] / 
sum
, (Ë(Ë˝->
ª∂a˚míts
[thªadid] / sum, (Ë˝->
övÆid©i⁄s
[threadid] / sum);

1133 
	}
}

1135 #ifde‡
HOTLEAKAGE


1136 
b_ö_di•©ch
;

1140 
	$b™k_check
 (
md_addr_t
 
addr
, 
ˇche_t
 *
˝
)

1156 
	}
}

1158 
cou¡î_t
 
	g√w_°‹e_nŸ_exec
 = 0;

1159 
cou¡î_t
 
	g¥ev_°‹e_nŸ_exec
 = 0;

1160 
cou¡î_t
 
	g√w_sim_num_ö¢
 = 0;

1161 
cou¡î_t
 
	g¥ev_sim_num_ö¢
 = 0;

1162 
cou¡î_t
 
	g¥ev_sim_cy˛e
 = 0;

1163 
ˇche_blk_t
 *
	gcuºít_blk
 = 
NULL
;

1171 
	$ˇche_ac˚ss
 (
ˇche_t
 *
˝
,

1172 
mem_cmd
 
cmd
,

1173 
md_addr_t
 
addr
,

1174 *
vp
,

1175 
nbyãs
,

1176 
tick_t
 
now
,

1177 
byã_t
 ** 
ud©a
,

1178 
md_addr_t
 * 
ª∂_addr
,

1179 
thªadid
)

1181 
byã_t
 *
p
 = 
vp
;

1182 
md_addr_t
 
èg
;

1183 
md_addr_t
 
£t
;

1184 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

1185 
ˇche_blk_t
 *
blk
, *
ª∂
;

1186 
œt
 = 0;

1188 
ª∂_°©us
 = 0;

1189 
tick_t
 
ª∂_ªady
 = 0;

1190 
byã_t
 
ª∂_d©a
[
˝
->
bsize
];

1191 
p‹t_œt
 = 0, 
now_œt
 = 0, 
p‹t_now
 = 0;

1193 
md_addr_t
 
b™k_≥r_thªad
, 
thrd_b™k_°¨t
, 
thrd_w‹d_b™k
;

1194 
md_addr_t
 
£t_b™k
;

1195 
md_addr_t
 
wb_addr
;

1196 
md_addr_t
 
èg_b™k
, 
ª∂_thªad
, 
ª∂_b™k
, 
ª∂_thrd_b™k
, 
ª∂_£t_b™k
, 
ª∂_èg
;

1198 #ifde‡
CFJ


1199 
dup
 = 0;

1200 
byã_t
 
dup_d©a
[
˝
->
bsize
];

1201 
dup_d⁄e
 = 0;

1203 #ifde‡
HOTLEAKAGE


1204 
possibÀ_ªÆ_miss
 = 0;

1205 
low_Àak_≥«…y_Êag
 = 0;

1206 
ãmp
;

1207 
deˇy_ˇu£d_miss
 = 
FALSE
;

1209 i‡(
b_ö_di•©ch
)

1210 
b_ö_di•©ch
 = 
TRUE
;

1213 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"))

1214 
l0HôFœg
 = 0;

1215 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1216 
l1HôFœg
 = 0;

1217 i‡(!
	`°rcmp
 (
˝
->
«me
, "il1") || !strcmp (cp->name, "il0"))

1218 
û1HôFœg
 = 0;

1219 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

1220 
l2HôFœg
 = 0;

1221 i‡(!
	`°rcmp
 (
˝
->
«me
, "dtlb"))

1222 
ébHôFœg
 = 0;

1224 
l2Rïœ˚Addr
 = 0;

1226 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

1227 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

1229 #ifde‡ 
ICACHE_BANK_CLUSTER


1239 i‡(
ª∂_addr
)

1240 *
ª∂_addr
 = 0;

1243 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

1244 
	`Áèl
 ("ˇche:ác˚s†îr‹: bad sizê‹álignmít,ádd∏0x%08x", 
addr
);

1247 i‡((
addr
 + 
nbyãs
 - 1Ë> (◊dd∏& ~
˝
->
blk_mask
Ë+ cp->
bsize
 - 1))

1248 
	`Áèl
 ("ˇche:ác˚s†îr‹:ác˚s†•™†block,ádd∏0x%08x", 
addr
);

1252 i‡(
˝
->
hsize
)

1255 
hödex
 = 
	`CACHE_HASH
 (
˝
, 
èg
);

1257 
blk
 = 
˝
->
£ts
[
£t
].
hash
[
hödex
]; blk; blk = blk->
hash_√xt
)

1259 #ifde‡
HOTLEAKAGE


1260 i‡((
blk
->
°©us
 & 
CACHE_BLK_DECAYED
Ë&& 
	`ˇche_Àak_is_˘æÀd
 ())

1261 
low_Àak_≥«…y_Êag
 = 1;

1263 i‡((
blk
->
ègid
.
èg
 ==Åag) )

1266 i‡((
blk
->
°©us
 & 
CACHE_BLK_DECAYED
Ë&& 
	`ˇche_Àak_˘æ_is_°©e_losög
 ())

1268 
deˇy_ˇu£d_miss
 = 
TRUE
;

1269 
ödu˚d_deˇy_mis£s
++;

1272 i‡((
blk
->
°©us
 & 
CACHE_BLK_DECAYED
Ë&& (blk->°©u†& 
CACHE_BLK_VALID
Ë&& 
	`ˇche_Àak_is_˘æÀd
 ())

1280 
	`mode_swôch_l2h_ö¸
 ();

1287 
	`low_Àak_øtio_d¸
 (1.0 / (
˝
->
n£ts
 * cp->
assoc
), 
	`gë_swôch_cy˛es_l2h
 () / 2);

1289 #ifde‡ 
CACHE_CLEANUP


1290 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
blk
->
robExId
 !3 && ((blk->robExId =
yg°RobExId
 && blk->
robId
 > 
yg°RobId
) || (blk->robExId == (ygstRobExId+1)%3)))

1292 
ª∂
 = 
blk
;

1293 
∑πül_ˇche_miss
;

1296 
ˇche_hô
;

1298 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

1300 #ifde‡ 
CACHE_CLEANUP


1301 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
blk
->
robExId
 !3 && ((blk->robExId =
yg°RobExId
 && blk->
robId
 > 
yg°RobId
) || (blk->robExId == (ygstRobExId+1)%3)))

1303 
ª∂
 = 
blk
;

1304 
∑πül_ˇche_miss
;

1307 
ˇche_hô
;

1310 i‡(
blk
->
°©us
 & 
CACHE_BLK_DECAYED
)

1311 
possibÀ_ªÆ_miss
 = 1;

1314 i‡((
blk
->
ègid
.
èg
 ==Åag) &&

1315 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

1317 #ifde‡
CFJ


1318 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
thec⁄ãxts
[
sbdLódThªad
]->
ru¬ög
 && 
thªadid
 =
maöLódThªad
 && (
blk
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& (blk->
ègid
.threadid !=Åhreadid))

1320 
dup
 = 1;

1323 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
thec⁄ãxts
[
sbdLódThªad
]->
ru¬ög
 && 
thªadid
 =sbdLódThªad && (
blk
->
ègid
.thªadid !thªadidË&& (blk->
dup
 || 
cmd
 =
Wrôe
))

1325 i‡(
˝
->
bÆloc
)

1327 
byã_t
 *
rd
 = &
dup_d©a
[0];

1328 
md_addr_t
 
rofs
 = 0;

1329 
	`CACHE_BCOPY
 (
Ród
, 
blk
, 
rofs
, 
rd
, 
˝
->
bsize
);

1330 
dup_d⁄e
 = 1;

1332 
blk
->
dup
 = 1;

1336 #ifde‡ 
CACHE_CLEANUP


1337 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
blk
->
robExId
 !3 && ((blk->robExId =
yg°RobExId
 && blk->
robId
 > 
yg°RobId
) || (blk->robExId == (ygstRobExId+1)%3)))

1339 
ª∂
 = 
blk
;

1340 
∑πül_ˇche_miss
;

1343 
ˇche_hô
;

1351 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

1353 #ifde‡
HOTLEAKAGE


1354 i‡((
blk
->
°©us
 & 
CACHE_BLK_DECAYED
Ë&& 
	`ˇche_Àak_is_˘æÀd
 ())

1355 
low_Àak_≥«…y_Êag
 = 1;

1357 i‡((
blk
->
ègid
.
èg
 ==Åag) )

1360 i‡((
blk
->
°©us
 & 
CACHE_BLK_DECAYED
Ë&& 
	`ˇche_Àak_˘æ_is_°©e_losög
 ())

1362 
deˇy_ˇu£d_miss
 = 
TRUE
;

1364 i‡(
˝
 =
deˇyed_ˇche
)

1366 
ödu˚d_deˇy_mis£s
++;

1370 i‡((
blk
->
°©us
 & 
CACHE_BLK_DECAYED
Ë&& (blk->°©u†& 
CACHE_BLK_VALID
Ë&& 
	`ˇche_Àak_is_˘æÀd
 ())

1378 
	`mode_swôch_l2h_ö¸
 ();

1385 
	`low_Àak_øtio_d¸
 (1.0 / (
˝
->
n£ts
 * cp->
assoc
), 
	`gë_swôch_cy˛es_l2h
 () / 2);

1387 #ifde‡ 
CACHE_CLEANUP


1388 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
blk
->
robExId
 !3 && ((blk->robExId =
yg°RobExId
 && blk->
robId
 > 
yg°RobId
) || (blk->robExId == (ygstRobExId+1)%3)))

1390 
ª∂
 = 
blk
;

1391 
∑πül_ˇche_miss
;

1394 
ˇche_hô
;

1396 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

1398 #ifde‡ 
CACHE_CLEANUP


1399 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
blk
->
robExId
 !3 && ((blk->robExId =
yg°RobExId
 && blk->
robId
 > 
yg°RobId
) || (blk->robExId == (ygstRobExId+1)%3)))

1401 
ª∂
 = 
blk
;

1402 
∑πül_ˇche_miss
;

1405 
ˇche_hô
;

1408 i‡(
blk
->
°©us
 & 
CACHE_BLK_DECAYED
)

1409 
possibÀ_ªÆ_miss
 = 1;

1412 i‡((
blk
->
ègid
.
èg
 ==Åag) &&

1413 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

1415 #ifde‡
CFJ


1416 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
thec⁄ãxts
[
sbdLódThªad
]->
ru¬ög
 && 
thªadid
 =
maöLódThªad
 && (
blk
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& (blk->
ègid
.threadid !=Åhreadid))

1418 
dup
 = 1;

1421 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
thec⁄ãxts
[
sbdLódThªad
]->
ru¬ög
 && 
thªadid
 =sbdLódThªad && (
blk
->
ègid
.thªadid !thªadidË&& (blk->
dup
 || 
cmd
 =
Wrôe
))

1423 i‡(
˝
->
bÆloc
)

1425 
byã_t
 *
rd
 = &
dup_d©a
[0];

1426 
md_addr_t
 
rofs
 = 0;

1427 
	`CACHE_BCOPY
 (
Ród
, 
blk
, 
rofs
, 
rd
, 
˝
->
bsize
);

1428 
dup_d⁄e
 = 1;

1430 
blk
->
dup
 = 1;

1434 #ifde‡ 
CACHE_CLEANUP


1435 if(!
	`°rcmp
(
˝
->
«me
,"dl0"Ë&& 
blk
->
robExId
 !3 && ((blk->robExId =
yg°RobExId
 && blk->
robId
 > 
yg°RobId
) || (blk->robExId == (ygstRobExId+1)%3)))

1437 
ª∂
 = 
blk
;

1438 
∑πül_ˇche_miss
;

1441 
ˇche_hô
;

1447 #ifde‡
ACCURATE_CACHE_MISS_IMP


1449 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

1451 
ª∂_live_t
 *
ãmp
 = 
	`£¨ch_ª∂_live
(
	`CACHE_MK_BADDR
 (
˝
, 
èg
, 
£t
));

1452 if(
ãmp
)

1454 
l2HôFœg
 = 1;

1455 
˝
->
hôs
[
thªadid
]++;

1457 i‡(
˝
->
bÆloc
)

1459 
	`CACHE_SCOPY
 (
cmd
, 
ãmp
->
d©a
, 
bofs
, 
p
, 
nbyãs
);

1462 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

1464 i‡(
cmd
 =
Wrôe
)

1465 
wh2
++;

1467 
rh2
++;

1471  (Ë
	`max2
 (
˝
->
hô_œãncy
, (
ãmp
->
ªady
 - 
now
));

1478 
FILE
 *
åa˚_fûe
;

1479 
isCacheAc˚ssS≥c
;

1480 
˝
->
mis£s
[
thªadid
]++;

1483 #ifde‡
HOTLEAKAGE


1484 i‡(
cmd
 =
Wrôe
)

1485 
˝
->
wrôe_mis£s
[
thªadid
]++;

1487 
˝
->
ªad_mis£s
[
thªadid
]++;

1489 i‡(
˝
 =
deˇyed_ˇche
 && !
deˇy_ˇu£d_miss
 && 
possibÀ_ªÆ_miss
)

1490 
ªÆ_deˇy_mis£s
++;

1493 #ifde‡
LOAD_PREDICTOR


1494 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1495 
ˇche_miss
 = 1;

1498 #ifde‡
CACHE_THRD_STAT


1499 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1501 
n_ˇche_miss_thrd
[
thªadid
]++;

1502 
n_ˇche_ac˚ss_thrd
[
thªadid
]++;

1508 
˝
->
pﬁicy
)

1510 
LRU
:

1511 
FIFO
:

1512 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

1513 #ifde‡
HOTLEAKAGE


1515 #i‡
	`deföed
(
ˇche_deˇy
)

1516 i‡(
b_deˇy_íabÀd
)

1518 
k
, 
found
 = 0;

1520 
blk
 = 
˝
->
£ts
[
£t
].
blks
, 
k
 = 0; k < cp->
assoc
; blk++, k++)

1523 i‡(!(
blk
->
°©us
 & 
CACHE_BLK_VALID
))

1525 
ª∂
 = 
blk
;

1526 
found
 = 1;

1531 i‡(!
found
 && 
	`ˇche_Àak_˘æ_is_°©e_losög
 ())

1532 
blk
 = 
˝
->
£ts
[
£t
].
blks
, 
k
 = 0; k < cp->
assoc
; blk++, k++)

1535 i‡(
blk
->
°©us
 & 
CACHE_BLK_DECAYED
)

1537 
ª∂
 = 
blk
;

1544 #ifde‡
ALT_CACHE_MNG_POLICY


1545 if(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1547 if(
˝
->
£ts
[
£t
].
rcVÆid
)

1549 if(
˝
->
£ts
[
£t
].
rcTag
 =
èg
)

1551 
˝
->
£ts
[
£t
].
waôrcCou¡î
 = cp->£ts[£t].
rcCou¡î
;

1552 if(
˝
->
£ts
[
£t
].
rcCou¡î
 < cp->
assoc
/2)

1553 
˝
->
£ts
[
£t
].
ö£πi⁄Pﬁicy
 = 
Mid
;

1554 if(
˝
->
£ts
[
£t
].
rcCou¡î
 <˝->
assoc
)

1555 
˝
->
£ts
[
£t
].
ö£πi⁄Pﬁicy
 = 
Hód
;

1558 
˝
->
£ts
[
£t
].
ö£πi⁄Pﬁicy
 = 
Taû
;

1559 
˝
->
£ts
[
£t
].
waôrcCou¡î
 = 0;

1562 
˝
->
£ts
[
£t
].
rcCou¡î
 = 0;

1563 
˝
->
£ts
[
£t
].
rcVÆid
 = 0;

1566 
˝
->
£ts
[
£t
].
rcCou¡î
++;

1568 if(
˝
->
£ts
[
£t
].
rcCou¡î
 > 8)

1570 
˝
->
£ts
[
£t
].
ö£πi⁄Pﬁicy
 = 
Taû
;

1571 
˝
->
£ts
[
£t
].
rcVÆid
 = 0;

1576 
˝
->
£ts
[
£t
].
waôrcCou¡î
--;

1577 if(
˝
->
£ts
[
£t
].
waôrcCou¡î
 == 0)

1579 
˝
->
£ts
[
£t
].
rcVÆid
 = 1;

1580 
˝
->
£ts
[
£t
].
rcTag
 = 
èg
;

1581 
˝
->
£ts
[
£t
].
rcCou¡î
 = 1;

1584 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
ª∂
, cp->£ts[£t].
ö£πi⁄Pﬁicy
, cp->
assoc
);

1585 if(
£t
 == 0)

1587 
	`Ârötf
(
åa˚_fûe
,"Mi†- %d\t", 
£t
);

1588 
	`Ârötf
(
åa˚_fûe
,"%d\n", 
èg
);

1593 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
, cp->
assoc
);

1595 
R™dom
:

1597 
bödex
 = 
	`myønd
 (Ë& (
˝
->
assoc
 - 1);

1599 
ª∂
 = 
	`CACHE_BINDEX
 (
˝
, cp->
£ts
[
£t
].
blks
, 
bödex
);

1603 
	`∑nic
 ("bogusÑeplacementÖolicy");

1607 i‡(
˝
->
hsize
)

1608 
	`u∆ök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

1611 #ifde‡
CACHE_THRD_STAT


1612 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1614 i‡((
ª∂
->
ègid
.
thªadid
 !-1Ë&& (ª∂->ègid.thªadid !thªadidË&& (ª∂->
°©us
 & 
CACHE_BLK_VALID
))

1615 
n_ˇche_miss_thøsh_thrd
[
thªadid
]++;

1621 
˝
->
œ°_èg£tid
.
èg
 = 0;

1622 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

1623 
˝
->
œ°_blk
 = 
NULL
;

1625 #ifde‡
HOTLEAKAGE


1626 i‡(
low_Àak_≥«…y_Êag
 =1 && 
	`ˇche_Àak_is_˘æÀd
 ())

1628 
ãmp
 = 
	`gë_low_Àak_≥«…y
 ();

1630 
œt
 +
	`gë_low_Àak_≥«…y
 ();

1636 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DECAYED
)

1638 
	`mode_swôch_l2h_ö¸
 ();

1645 
	`low_Àak_øtio_d¸
 (1.0 / (
˝
->
n£ts
 * cp->
assoc
), 
	`gë_swôch_cy˛es_l2h
 () / 2);

1649 
œt
 +
˝
->
hô_œãncy
;

1652 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"))

1654 
œ°Th0CommôãdIn¢
;

1655 
cou¡î_t
 
˙tCacheEvi˘i⁄
;

1656 
cou¡î_t
 
˙tCESèÀ
;

1657 
cou¡î_t
 
˙tCESèÀDGd
;

1658 
cou¡î_t
 
˙tCEC‹rDBd
;

1660 
˙tCacheEvi˘i⁄
++;

1661 i‡(
ª∂
->
°‹e_nŸ_execuãd
 >Ñïl->
œ°_ac˚ss_ö¢
)

1663 
˙tCESèÀ
++;

1664 i‡(
œ°Th0CommôãdIn¢
 >
ª∂
->
°‹e_nŸ_execuãd
)

1665 
˙tCESèÀDGd
++;

1669 i‡(
œ°Th0CommôãdIn¢
 < 
ª∂
->
œ°_ac˚ss_ö¢
)

1670 
˙tCEC‹rDBd
++;

1673 
cou¡î_t
 
ãmp_sim_num_ö¢
 = 
√w_sim_num_ö¢
;

1674 
cou¡î_t
 
ãmp_°‹e_nŸ_exec
 = 
√w_°‹e_nŸ_exec
;

1676 
√w_sim_num_ö¢
 = 
ª∂
->
œ°_ac˚ss_ö¢
;

1677 
√w_°‹e_nŸ_exec
 = 
ª∂
->
°‹e_nŸ_execuãd
;

1678 
ª∂
->
wr⁄gLﬂdCau£s
 = 0;

1679 
ª∂
->
pois⁄
 = 0;

1680 
ª∂
->
isSèÀ
 = 0;

1681 i‡(
cmd
 =
Wrôe
)

1683 
ª∂
->
œ°_ac˚ss_time
 = 
now
;

1684 
ª∂
->
œ°_ac˚ss_ö¢
 = 
ãmp_sim_num_ö¢
;

1685 
ª∂
->
°‹e_nŸ_execuãd
 = 
ãmp_°‹e_nŸ_exec
;

1690 i‡((
	`°rcmp
 (
˝
->
«me
, "dl0"Ë!0Ë&& 
ª∂
->
°©us
 & 
CACHE_BLK_VALID
)

1692 
˝
->
ª∂a˚míts
[
thªadid
]++;

1694 i‡(
ª∂_addr
)

1695 *
ª∂_addr
 = 
	`CACHE_MK_BADDR
 (
˝
, 
ª∂
->
ègid
.
èg
, 
£t
);

1697 if(
	`°rcmp
 (
˝
->
«me
, "ul2") == 0)

1698 
l2Rïœ˚Addr
 = 
	`CACHE_MK_BADDR
 (
˝
, 
ª∂
->
ègid
.
èg
, 
£t
);

1700 #i‚de‡
ACCURATE_CACHE_MISS_IMP


1702 
œt
 +
	`BOUND_POS
 (
ª∂
->
ªady
 - (
now
 +Üat));

1705 #ifde‡
HOTLEAKAGE


1707 
œt
 +
	`BOUND_POS
 (
˝
->
bus_‰ì
 - (
now
 +Üat));

1710 
˝
->
bus_‰ì
 = 
	`MAX
 (˝->bus_‰ì, (
now
 + 
œt
)) + 1;

1713 i‡((
	`°rcmp
 (
˝
->
«me
, "ul2") == 0))

1714 
	`ö£π_vCache
 (
	`CACHE_MK_BADDR
 (
˝
, 
ª∂
->
ègid
.
èg
, 
£t
), cp->
bsize
,Ñepl);

1716 i‡(
ª∂
->
°©us
 & 
CACHE_BLK_DIRTY
)

1719 
˝
->
wrôebacks
[
thªadid
]++;

1721 
˝
->
wrb
++;

1722 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
Wrôe
, 
	`CACHE_MK_BADDR
 (˝, 
ª∂
->
ègid
.
èg
, 
£t
), cp->
bsize
,Ñïl, 
now
 +Ü©,Ñïl->ègid.
thªadid
);

1729 #ifde‡ 
NO_BUS_CONTENTION


1730 
p‹t_œt
 = 0;

1732 
p‹t_œt
 = (
	`BOUND_POS
 (
˝
->
wrb
 - cp->
wrbufsize
Ë+ (˝->
rdb
)Ë* cp->
pùedñay
;

1734 #ifde‡ 
SIM_CYCLE_CAST_BUG


1735 
now_œt
 = (Ë(
now
 - (
tick_t
Ë
sim_cy˛e
[
Á°e°_c‹e
]);

1737 
now_œt
 = 
now
 - 
sim_cy˛e
[
Á°e°_c‹e
];

1739 
p‹t_now
 = 
	`BOUND_POS
 (
p‹t_œt
 - 
now_œt
);

1740 
œt
 +
	`BOUND_POS
 (
p‹t_now
 + BOUND_POS (
˝
->
œ°u£
 + cp->
pùedñay
 - 
now
) -Üat);

1741 
˝
->
rdb
++;

1743 #ifde‡
HOTLEAKAGE


1744 i‡(
b_deˇy_¥ofûe_íabÀd
)

1745 
	`upd©e_ˇche_block_°©s_whí_miss
 (
˝
, 
ª∂
, 
cmd
, 
deˇy_ˇu£d_miss
);

1749 
ª∂_°©us
 = 
ª∂
->
°©us
;

1750 
ª∂_ªady
 = 
ª∂
->
ªady
;

1751 i‡(
˝
->
bÆloc
)

1753 
byã_t
 *
rd
 = &
ª∂_d©a
[0];

1754 
md_addr_t
 
rofs
 = 0;

1755 
	`CACHE_BCOPY
 (
Ród
, 
ª∂
, 
rofs
, 
rd
, 
˝
->
bsize
);

1759 
ª∂
->
ègid
.
èg
 =Åag;

1760 
ª∂
->
ègid
.
thªadid
 =Åhreadid;

1761 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

1762 
ª∂
->
addr
 =áddr;

1763 #ifde‡
CFJ


1764 
ª∂
->
dup
 = dup;

1766 #ifde‡
STREAM_PREFETCHER


1767 
ª∂
->
•Tag
 = 0;

1768 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"Ë&& 
dl2_¥e„tch_a˘ive
)

1770 
ª∂
->
•Tag
 = 
dl2_¥e„tch_id
+1;

1773 #ifde‡
ALT_CACHE_MNG_POLICY


1774 
i
;

1775 
i
 = 0; i < 32; i++)

1776 
ª∂
->
œ°Touch
[
i
] = 0;

1778 #ifde‡
FINE_GRAIN_INV


1779 if(
ª∂
->
w‹dSètus
)

1781 
k
;

1782 
k
 = 0; k < 
˝
->
w‹d_num
; k++)

1783 
ª∂
->
w‹dSètus
[
k
] = 1;

1787 #ifde‡
HOTLEAKAGE


1788 
ª∂
->
°©us
 &~
CACHE_BLK_DECAYED
;

1791 #ifde‡
CACHE_CLEANUP


1792 
∑πül_ˇche_miss
:

1794 
ª∂
->
robId
 = 
LSQ
[
m_nLSQIdx
]->robId;

1795 
ª∂
->
robExId
 = 
LSQ
[
m_nLSQIdx
]->robExId;

1798 #i‚de‡
NO_L2CACHE_ACCESS


1800 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
Ród
, 
	`CACHE_TAGSET
 (˝, 
addr
), cp->
bsize
, 
ª∂
, 
now
 +Ü©, 
thªadid
);

1805 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1807 
	`ö£π_fûlq
 ((Ë(
now
 + 
œt
), 
addr
, 
thªadid
);

1809 #ifde‡
CFJ


1810 i‡(
˝
->
bÆloc
 && 
dup_d⁄e
)

1812 
byã_t
 *
rd
 = &
dup_d©a
[0];

1813 
md_addr_t
 
rofs
 = 0;

1814 
	`CACHE_BCOPY
 (
Wrôe
, 
ª∂
, 
rofs
, 
rd
, 
˝
->
bsize
);

1816 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"Ë&& 
cmd
 =
Wrôe
 && 
thªadid
 =
maöLódThªad
)

1817 
	`sbd_löe_wrôe
(
˝
, 
addr
, 
vp
, 
nbyãs
, 
sbdLódThªad
);

1821 i‡(
˝
->
bÆloc
)

1823 
	`CACHE_BCOPY
 (
cmd
, 
ª∂
, 
bofs
, 
p
, 
nbyãs
);

1827 #ifde‡
HOTLEAKAGE


1828 i‡(
cmd
 =
Wrôe
)

1830 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

1831 
blk
->
time_dúty
 = 
sim_cy˛e
[
Á°e°_c‹e
];

1834 i‡(
cmd
 =
Wrôe
)

1836 
ª∂
->
°©us
 |
CACHE_BLK_DIRTY
;

1837 
	`˛ór_mask
(
ª∂
->
isByãDúty
, 
˝
->
bsize
);

1838 
	`add_mask
(
ª∂
->
isByãDúty
, 
	`CACHE_BLK
 (
˝
, 
addr
), 
nbyãs
, cp->
bsize
);

1841 i‡(
cmd
 =
Ród
)

1843 
ª∂
->
œ°_ac˚ss_time
 = 
¥ev_sim_cy˛e
;

1844 
ª∂
->
œ°_ac˚ss_ö¢
 = 
¥ev_sim_num_ö¢
;

1845 
ª∂
->
°‹e_nŸ_execuãd
 = 
¥ev_°‹e_nŸ_exec
;

1847 
cuºít_blk
 = 
ª∂
;

1850 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1852 i‡(
cmd
 =
Wrôe
)

1854 
wm1
++;

1858 
rm1
++;

1861 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

1863 i‡(
cmd
 =
Wrôe
)

1865 
wm2
++;

1869 
rm2
++;

1874 i‡(
ud©a
)

1875 *
ud©a
 = 
ª∂
->
u£r_d©a
;

1877 #ifde‡
ACCURATE_CACHE_MISS_IMP


1878 if(
ª∂_°©us
 & 
CACHE_BLK_VALID
)

1880 
œt
 +
	`BOUND_POS
 (
ª∂_ªady
 - (
now
 +Üat));

1881 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"Ë&& 
ª∂_addr
)

1882 
	`ö£π_ª∂_live
(*
ª∂_addr
, 
ª∂_ªady
, 
now
 + 
œt
,Çow, &
ª∂_d©a
);

1886 
ª∂
->
ªady
 = 
now
 + 
œt
;

1889 i‡(
˝
->
hsize
)

1890 
	`lök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

1893  
œt
;

1896 
ˇche_hô
:

1898 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"))

1899 
l0HôFœg
 = 1;

1900 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1901 
l1HôFœg
 = 1;

1902 i‡(!
	`°rcmp
 (
˝
->
«me
, "il1") || !strcmp (cp->name, "il0"))

1903 
û1HôFœg
 = 1;

1904 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

1905 
l2HôFœg
 = 1;

1906 i‡(!
	`°rcmp
 (
˝
->
«me
, "dtlb"))

1907 
ébHôFœg
 = 1;

1908 #ifde‡
HOTLEAKAGE


1911 i‡(
blk
->
°©us
 & 
CACHE_BLK_DECAYED
 && 
	`ˇche_Àak_is_˘æÀd
 ())

1913 
blk
->
°©us
 &~
CACHE_BLK_DECAYED
;

1914 
ãmp
 = 
	`gë_low_Àak_≥«…y
 ();

1916 i‡(
blk
->
ªady
 < 
now
 + 
	`gë_low_Àak_≥«…y
 ())

1917 
blk
->
ªady
 = 
now
 + 
	`gë_low_Àak_≥«…y
 (Ë+ 
˝
->
hô_œãncy
;

1920 i‡(
b_deˇy_¥ofûe_íabÀd
)

1921 
	`upd©e_ˇche_block_°©s_whí_hô
 (
˝
, 
blk
, 
cmd
);

1924 
˝
->
hôs
[
thªadid
]++;

1925 #ifde‡
CACHE_THRD_STAT


1926 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1928 
n_ˇche_ac˚ss_thrd
[
thªadid
]++;

1932 #ifde‡
FINE_GRAIN_INV


1933 if(
blk
->
w‹dSètus
 && !
	`°rcmp
(
˝
->
«me
,"dl0"))

1935 
föeGøöHô
;

1936 
w‹d_blk
 = 
	`CACHE_WORD_BLK
(
˝
, 
addr
);

1937 if(
blk
->
w‹dSètus
[
w‹d_blk
] == 0)

1939 
byã_t
 *
löe_hﬁdî
 = 
	`ˇŒoc
 (
˝
->
bsize
,  (byte_t));

1940 
byã_t
 *
l0ˇche_löe
 = 
löe_hﬁdî
;

1941 
md_addr_t
 
l0ˇche_ofs
 = 0;

1942 
	`CACHE_BCOPY
 (
Ród
, 
blk
, 
l0ˇche_ofs
, 
l0ˇche_löe
, 
˝
->
bsize
);

1943 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
Ród
, 
	`CACHE_TAGSET
 (˝, 
addr
), cp->
bsize
, 
blk
, 
now
 +Ü©, 
thªadid
);

1944 
l0ˇche_ofs
 = 
bofs
 & ~(
GRANULARITY
-1);

1945 
l0ˇche_löe
 = 
löe_hﬁdî
 + 
l0ˇche_ofs
;

1946 
	`CACHE_BCOPY
 (
Ród
, 
blk
, 
l0ˇche_ofs
, 
l0ˇche_löe
, 
GRANULARITY
);

1947 
l0ˇche_ofs
 = 0;

1948 
l0ˇche_löe
 = 
löe_hﬁdî
;

1949 
	`CACHE_BCOPY
 (
Wrôe
, 
blk
, 
l0ˇche_ofs
, 
l0ˇche_löe
, 
˝
->
bsize
);

1950 
blk
->
w‹dSètus
[
w‹d_blk
] = 1;

1951 
	`‰ì
 (
löe_hﬁdî
);

1955 
comb_°©us
 = 1;

1956 
k
 = 0;

1957 
k
 = 0; k < 
˝
->
w‹d_num
; k++)

1958 
comb_°©us
 = comb_°©u†& 
blk
->
w‹dSètus
[
k
];

1959 if(
comb_°©us
)

1960 
föeGøöHô
 = 1;

1966 i‡(
˝
->
bÆloc
)

1968 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

1971 #ifde‡
CFJ


1972 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"Ë&& 
cmd
 =
Wrôe
 && 
thªadid
 =
maöLódThªad
)

1973 
	`sbd_löe_wrôe
(
˝
, 
addr
, 
vp
, 
nbyãs
, 
sbdLódThªad
);

1977 i‡(
cmd
 =
Wrôe
)

1979 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

1980 
	`add_mask
(
blk
->
isByãDúty
, 
	`CACHE_BLK
 (
˝
, 
addr
), 
nbyãs
, cp->
bsize
);

1981 #ifde‡
HOTLEAKAGE


1982 
blk
->
time_dúty
 = 
sim_cy˛e
[
Á°e°_c‹e
];

1987 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

1989 i‡(
cmd
 =
Wrôe
)

1991 
wh1
++;

1995 
rh1
++;

1998 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

2000 i‡(
cmd
 =
Wrôe
)

2002 
wh2
++;

2006 
rh2
++;

2010 #ifde‡
ALT_CACHE_MNG_POLICY


2011 if(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

2013 if(
£t
 == 0)

2015 
	`Ârötf
(
åa˚_fûe
,"Hô - %d\t", 
£t
);

2016 
	`Ârötf
(
åa˚_fûe
,"%d\n", 
èg
);

2022 i‡–
˝
->
pﬁicy
 =
LRU
)

2024 
qofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
)/8;

2025 if(
qofs
 >= 32)

2026 
qofs
 = 0;

2028 #ifde‡
ALT_CACHE_MNG_POLICY


2029 if(
	`°rcmp
 (
˝
->
«me
, "dl1"Ë|| 
blk
->
œ°Touch
[
qofs
])

2032 #ifde‡
ALT_CACHE_MNG_POLICY


2035 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
blk
, 
Hód
, cp->
assoc
);

2037 #ifde‡
ALT_CACHE_MNG_POLICY


2039 
blk
->
œ°Touch
[
qofs
] = 1;

2043 i‡(
cmd
 =
Wrôe
)

2045 
blk
->
œ°_ac˚ss_time
 = 
now
;

2046 
blk
->
œ°_ac˚ss_ö¢
 = 
√w_sim_num_ö¢
;

2047 
blk
->
°‹e_nŸ_execuãd
 = 
√w_°‹e_nŸ_exec
;

2048 
blk
->
wr⁄gLﬂdCau£s
 = 0;

2049 
blk
->
pois⁄
 = 0;

2050 #ifde‡
CACHE_CLEANUP


2051 
blk
->
robId
 = 
LSQ
[
m_nLSQIdx
]->robId;

2052 
blk
->
robExId
 = 
LSQ
[
m_nLSQIdx
]->robExId;

2055 
blk
->
isSèÀ
 = 0;

2056 
¥ev_sim_cy˛e
 = 
blk
->
œ°_ac˚ss_time
;

2057 
¥ev_sim_num_ö¢
 = 
blk
->
œ°_ac˚ss_ö¢
;

2058 
¥ev_°‹e_nŸ_exec
 = 
blk
->
°‹e_nŸ_execuãd
;

2059 
cuºít_blk
 = 
blk
;

2060 #ifde‡
STREAM_PREFETCHER


2061 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"Ë&& 
blk
->
•Tag
 && !
dl2_¥e„tch_a˘ive
)

2063 
	`œunch_•
(
blk
->
•Tag
-1);

2065 
blk
->
•Tag
 = 0;

2071 
˝
->
œ°_èg£tid
.
èg
 = 
	`CACHE_TAGSET
 (˝, 
addr
);

2072 
˝
->
œ°_èg£tid
.
thªadid
 =Åhreadid;

2073 
˝
->
œ°_blk
 = 
blk
;

2076 i‡(
ud©a
)

2077 *
ud©a
 = 
blk
->
u£r_d©a
;

2080  (Ë
	`max2
 (
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

2082 
ˇche_Á°_hô
:

2084 #ifde‡
HOTLEAKAGE


2087 i‡(
blk
->
°©us
 & 
CACHE_BLK_DECAYED
)

2088 
	`Áèl
 ("can't have decayed block in fast_hit");

2090 i‡(
b_deˇy_¥ofûe_íabÀd
)

2091 
	`upd©e_ˇche_block_°©s_whí_hô
 (
˝
, 
blk
, 
cmd
);

2095 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"))

2096 
l0HôFœg
 = 1;

2097 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

2098 
l1HôFœg
 = 1;

2099 i‡(!
	`°rcmp
 (
˝
->
«me
, "il1") || !strcmp (cp->name, "il0"))

2100 
û1HôFœg
 = 1;

2101 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

2102 
l2HôFœg
 = 1;

2103 i‡(!
	`°rcmp
 (
˝
->
«me
, "dtlb"))

2104 
ébHôFœg
 = 1;

2106 
˝
->
hôs
[
thªadid
]++;

2107 #ifde‡
CACHE_THRD_STAT


2108 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

2110 
n_ˇche_ac˚ss_thrd
[
thªadid
]++;

2115 i‡(
˝
->
bÆloc
)

2117 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

2120 #ifde‡
CFJ


2121 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl0"Ë&& 
cmd
 =
Wrôe
 && 
thªadid
 =
maöLódThªad
)

2122 
	`sbd_löe_wrôe
(
˝
, 
addr
, 
vp
, 
nbyãs
, 
sbdLódThªad
);

2126 i‡(
cmd
 =
Wrôe
)

2128 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

2129 
	`add_mask
(
blk
->
isByãDúty
, 
	`CACHE_BLK
 (
˝
, 
addr
), 
nbyãs
, cp->
bsize
);

2130 #ifde‡
HOTLEAKAGE


2131 
blk
->
time_dúty
 = 
sim_cy˛e
[
Á°e°_c‹e
];

2135 i‡(
cmd
 =
Wrôe
)

2137 
blk
->
œ°_ac˚ss_time
 = 
now
;

2138 
blk
->
œ°_ac˚ss_ö¢
 = 
√w_sim_num_ö¢
;

2139 
blk
->
°‹e_nŸ_execuãd
 = 
√w_°‹e_nŸ_exec
;

2140 
blk
->
wr⁄gLﬂdCau£s
 = 
LSQ
[
m_nLSQIdx
]->
ªcCau£s
;

2141 
blk
->
pois⁄
 = 0;

2142 #ifde‡
CACHE_CLEANUP


2143 
blk
->
robId
 = 
LSQ
[
m_nLSQIdx
]->robId;

2144 
blk
->
robExId
 = 
LSQ
[
m_nLSQIdx
]->robExId;

2147 if(
cmd
 =
Ród
 && !
	`°rcmp
 (
˝
->
«me
, "dl0"Ë&& 
blk
->
wr⁄gLﬂdCau£s
 && !
LSQ
[
m_nLSQIdx
]->
isWr⁄gP©h
 && !LSQ[m_nLSQIdx]->
•ec_mode
)

2149 
tŸÆRecSt‹eLﬂdComm
++;

2150 
tŸÆIn°DñaySt‹eLﬂdComm
 +
√w_sim_num_ö¢
 - 
blk
->
œ°_ac˚ss_ö¢
;

2152 
blk
->
isSèÀ
 = 0;

2153 
¥ev_sim_cy˛e
 = 
blk
->
œ°_ac˚ss_time
;

2154 
¥ev_sim_num_ö¢
 = 
blk
->
œ°_ac˚ss_ö¢
;

2155 
¥ev_°‹e_nŸ_exec
 = 
blk
->
°‹e_nŸ_execuãd
;

2156 
cuºít_blk
 = 
blk
;

2159 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

2161 i‡(
cmd
 =
Wrôe
)

2163 
wh1
++;

2167 
rh1
++;

2170 i‡(!
	`°rcmp
 (
˝
->
«me
, "ul2"))

2172 i‡(
cmd
 =
Wrôe
)

2174 
wh2
++;

2178 
rh2
++;

2187 i‡(
ud©a
)

2188 *
ud©a
 = 
blk
->
u£r_d©a
;

2191 
˝
->
œ°_èg£tid
.
èg
 = 
	`CACHE_TAGSET
 (˝, 
addr
);

2192 
˝
->
œ°_èg£tid
.
thªadid
 =Åhreadid;

2193 
˝
->
œ°_blk
 = 
blk
;

2198  (Ë
	`max2
 (
˝
->
hô_œãncy
, (
blk
->
ªady
 - 
now
));

2199 
	}
}

2201 #ifde‡
CFJ


2202 
	$sbd_löe_wrôe
 (
ˇche_t
 *
˝
,

2203 
md_addr_t
 
addr
,

2204 *
vp
,

2205 
nbyãs
,

2206 
thªadid
)

2208 
byã_t
 *
p
 = 
vp
;

2209 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

2210 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

2211 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

2212 
ˇche_blk_t
 *
blk
;

2214 i‡(
˝
->
hsize
)

2217 
hödex
 = 
	`CACHE_HASH
 (
˝
, 
èg
);

2219 
blk
 = 
˝
->
£ts
[
£t
].
hash
[
hödex
]; blk; blk = blk->
hash_√xt
)

2221 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->ègid.
thªadid
 ==Åhreadid) &&

2222 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

2229 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2231 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->ègid.
thªadid
 ==Åhreadid) &&

2232 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

2237 i‡(
blk
 && 
˝
->
bÆloc
 && !
	`is_mask_£t
(blk, 
vp
, blk->
isByãDúty
, 
bofs
, 
nbyãs
, cp->
bsize
))

2239 
blk
->
°©us
 |
CACHE_BLK_DIRTY
;

2240 
	`CACHE_BCOPY
 (
Wrôe
, 
blk
, 
bofs
, 
p
, 
nbyãs
);

2242 
	}
}

2246 
	$ˇche_¥öt
 (
ˇche_t
 *
˝1
, ˇche_à*
˝2
)

2248 
	`Ârötf
 (
°dîr
, "ZZ L1D stats\n");

2249 
	`Ârötf
 (
°dîr
, "ZZ %ld %ld %ld %ld %lu\n", 
rm1
, 
rh1
, 
wm1
, 
wh1
, (Ë
˝1
->
wrôebacks
[0]);

2250 
	`Ârötf
 (
°dîr
, "ZZ UL2 stats\n");

2251 i‡(
˝2
)

2252 
	`Ârötf
 (
°dîr
, "ZZ %ld %ld %ld %ld %lu\n", 
rm2
, 
rh2
, 
wm2
, 
wh2
, (Ë
˝2
->
wrôebacks
[0]);

2253 
	}
}

2257 
	$sim∂e_ˇche_Êush
 (
ˇche_t
 *
˝
, 
thªadid
)

2259 
i
, 
numÊush
;

2260 
ˇche_blk_t
 *
blk
;

2262 
numÊush
 = 0;

2263 
i
 = 0; i < 
˝
->
n£ts
; i++)

2265 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

2267 #ifde‡
CFJ


2268 i‡(
blk
->
ègid
.
thªadid
 =thªadid && (blk->
°©us
 & 
CACHE_BLK_VALID
))

2270 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

2273 
˝
->
övÆid©i⁄s
[
blk
->
ègid
.
thªadid
]++;

2274 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

2275 #ifde‡
CFJ


2276 
blk
->
dup
 = 0;

2278 
blk
->
œ°_ac˚ss_time
 = 0;

2279 
blk
->
œ°_ac˚ss_ö¢
 = 0;

2280 
blk
->
°‹e_nŸ_execuãd
 = 0;

2281 
blk
->
wr⁄gLﬂdCau£s
 = 0;

2282 
blk
->
isSèÀ
 = 0;

2283 
blk
->
pois⁄
 = 0;

2284 
	`˛ór_mask
(
blk
->
isByãDúty
, 
˝
->
bsize
);

2285 #ifde‡
CACHE_CLEANUP


2286 
blk
->
robId
 = 0;

2287 
blk
->
robExId
 = 3;

2289 #ifde‡
FINE_GRAIN_INV


2290 if(
blk
->
w‹dSètus
)

2292 
k
;

2293 
k
 = 0; k < 
˝
->
w‹d_num
; k++)

2294 
blk
->
w‹dSètus
[
k
] = 0;

2298 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

2300 
˝
->
wrôebacks
[
blk
->
ègid
.
thªadid
]++;

2301 
blk
->
°©us
 &~
CACHE_BLK_DIRTY
;

2302 
numÊush
++;

2308  
numÊush
;

2309 
	}
}

2313 
	$ˇche_Êush
 (
ˇche_t
 *
˝
,

2314 
tick_t
 
now
)

2319 
i
, 
œt
 = 
˝
->
hô_œãncy
;

2320 
ˇche_blk_t
 *
blk
;

2323 
˝
->
œ°_èg£tid
.
èg
 = 0;

2324 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2325 
˝
->
œ°_blk
 = 
NULL
;

2328 
i
 = 0; i < 
˝
->
n£ts
; i++)

2330 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

2332 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

2334 
˝
->
övÆid©i⁄s
[
blk
->
ègid
.
thªadid
]++;

2335 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

2336 
blk
->
œ°_ac˚ss_time
 = 0;

2337 
blk
->
œ°_ac˚ss_ö¢
 = 0;

2338 
blk
->
°‹e_nŸ_execuãd
 = 0;

2339 
blk
->
wr⁄gLﬂdCau£s
 = 0;

2340 
blk
->
pois⁄
 = 0;

2341 
blk
->
isSèÀ
 = 0;

2342 
	`˛ór_mask
(
blk
->
isByãDúty
, 
˝
->
bsize
);

2343 #ifde‡
CACHE_CLEANUP


2344 
blk
->
robId
 = 0;

2345 
blk
->
robExId
 = 3;

2348 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

2351 
˝
->
wrôebacks
[
blk
->
ègid
.
thªadid
]++;

2352 
˝
->
wrb
++;

2353 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

2354 
	`∑nic
 ("flush implementation should be modified for THRD_WAY_CACHE");

2355 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
Wrôe
, 
	`CACHE_MK_BADDR
 (˝, 
blk
->
ègid
.
èg
, 
i
), cp->
bsize
, blk, 
now
 +Ü©, blk->ègid.
thªadid
);

2362  
œt
;

2363 
	}
}

2368 
	$ˇche_Êush_addr
 (
ˇche_t
 *
˝
,

2369 
md_addr_t
 
addr
,

2370 
tick_t
 
now
,

2371 
thªadid
)

2373 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

2374 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

2375 
ˇche_blk_t
 *
blk
;

2376 
œt
 = 
˝
->
hô_œãncy
;

2378 i‡(
˝
->
hsize
)

2381 
hödex
 = 
	`CACHE_HASH
 (
˝
, 
èg
);

2383 
blk
 = 
˝
->
£ts
[
£t
].
hash
[
hödex
]; blk; blk = blk->
hash_√xt
)

2385 i‡((
blk
->
ègid
.
èg
 ==Åag) &&

2386 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

2393 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2395 i‡((
blk
->
ègid
.
èg
 ==Åag) &&

2396 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

2401 i‡(
blk
)

2403 
˝
->
övÆid©i⁄s
[
blk
->
ègid
.
thªadid
]++;

2404 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

2405 
blk
->
œ°_ac˚ss_time
 = 0;

2406 
blk
->
isSèÀ
 = 0;

2407 
blk
->
œ°_ac˚ss_ö¢
 = 0;

2408 
blk
->
°‹e_nŸ_execuãd
 = 0;

2409 
blk
->
wr⁄gLﬂdCau£s
 = 0;

2410 
blk
->
pois⁄
 = 0;

2411 
	`˛ór_mask
(
blk
->
isByãDúty
, 
˝
->
bsize
);

2412 #ifde‡
CACHE_CLEANUP


2413 
blk
->
robId
 = 0;

2414 
blk
->
robExId
 = 3;

2416 #ifde‡
FINE_GRAIN_INV


2417 if(
blk
->
w‹dSètus
)

2419 
k
;

2420 
k
 = 0; k < 
˝
->
w‹d_num
; k++)

2421 
blk
->
w‹dSètus
[
k
] = 0;

2427 
˝
->
œ°_èg£tid
.
èg
 = 0;

2428 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2429 
˝
->
œ°_blk
 = 
NULL
;

2431 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

2433 i‡(
	`°rcmp
 (
˝
->
«me
, "dl0"))

2436 
˝
->
wrôebacks
[
blk
->
ègid
.
thªadid
]++;

2437 i‡(!
	`°rcmp
 (
˝
->
«me
, "dl1"))

2438 
	`∑nic
 ("flush_addr implementation should be modified for THRD_WAY_CACHE");

2439 
œt
 +
˝
->
	`blk_ac˚ss_‚
 (
Wrôe
, 
	`CACHE_MK_BADDR
 (˝, 
blk
->
ègid
.
èg
, 
£t
), cp->
bsize
, blk, 
now
 +Ü©, blk->ègid.
thªadid
);

2441 
blk
->
°©us
 &~
CACHE_BLK_DIRTY
;

2444 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
blk
, 
Taû
, cp->
assoc
);

2448  
œt
;

2449 
	}
}

2452 
	$sim∂e_ˇche_Êush_addr
 (
ˇche_t
 *
˝
,

2453 
md_addr_t
 
addr
)

2455 
md_addr_t
 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

2456 
md_addr_t
 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

2457 
ˇche_blk_t
 *
blk
;

2459 i‡(
˝
->
hsize
)

2462 
hödex
 = 
	`CACHE_HASH
 (
˝
, 
èg
);

2464 
blk
 = 
˝
->
£ts
[
£t
].
hash
[
hödex
]; blk; blk = blk->
hash_√xt
)

2466 i‡((
blk
->
ègid
.
èg
 ==Åag) &&

2467 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

2474 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2476 i‡((
blk
->
ègid
.
èg
 ==Åag) &&

2477 (
blk
->
°©us
 & 
CACHE_BLK_VALID
))

2483 i‡(
blk


2484 #ifdef 
CONV_PREF_STORES


2485 && 
blk
->
isSèÀ


2489 #ifdef 
CONV_PREF_STORES


2490 
tŸÆRñCE
++;

2491 i‡(
blk
->
°‹e_nŸ_execuãd
 > blk->
œ°_ac˚ss_ö¢
)

2492 
tŸÆRñCESèÀD
++;

2495 i‡(
œ°Th0CommôãdIn¢
 < 
blk
->
œ°_ac˚ss_ö¢
)

2496 
tŸÆRñCEC‹rDBd
++;

2499 
comb_°©us
 = 0;

2500 #ifde‡
FINE_GRAIN_INV


2501 if(
blk
->
w‹dSètus
)

2503 
w‹d_blk
 = 
	`CACHE_WORD_BLK
(
˝
, 
addr
);

2504 
blk
->
w‹dSètus
[
w‹d_blk
] = 0;

2505 
k
 = 0;

2506 
k
 = 0; k < 
˝
->
w‹d_num
; k++)

2507 
comb_°©us
 = comb_°©u†| 
blk
->
w‹dSètus
[
k
];

2510 if(
comb_°©us
 == 0)

2512 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

2513 
blk
->
œ°_ac˚ss_time
 = 0;

2514 
blk
->
isSèÀ
 = 0;

2515 
blk
->
œ°_ac˚ss_ö¢
 = 0;

2516 
blk
->
°‹e_nŸ_execuãd
 = 0;

2517 
blk
->
wr⁄gLﬂdCau£s
 = 0;

2518 
blk
->
pois⁄
 = 0;

2519 
	`˛ór_mask
(
blk
->
isByãDúty
, 
˝
->
bsize
);

2520 #ifde‡
CACHE_CLEANUP


2521 
blk
->
robId
 = 0;

2522 
blk
->
robExId
 = 3;

2524 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

2525 
blk
->
°©us
 &~
CACHE_BLK_DIRTY
;

2528 
˝
->
œ°_èg£tid
.
èg
 = 0;

2529 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2530 
˝
->
œ°_blk
 = 
NULL
;

2533 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
blk
, 
Taû
, cp->
assoc
);

2536 
	}
}

2539 
	$ˇche_Êush_∑ge
 (
md_addr_t
 
addr
,

2540 
nbyãs
)

2542 
ˇche_t
 *
˝
;

2543 
ˇche_t
 *
ˇche_li°
[5];

2544 
i
;

2547 
ˇche_li°
[0] = 
ˇche_dl2
;

2548 
ˇche_li°
[1] = 
ˇche_dl1
;

2549 
ˇche_li°
[2] = 
ˇche_dl0
;

2550 
ˇche_li°
[3] = 
NULL
;

2552 
˝
 = 
ˇche_li°
[0], 
i
 = 0; c∞!
NULL
; cp = cache_list[i])

2554 
md_addr_t
 
memAddr
 = 
addr
;

2556 
memAddr
 = memAdd∏& (~
˝
->
blk_mask
);

2557 
memAddr
 < (
addr
 + 
nbyãs
))

2559 
	`sim∂e_ˇche_Êush_addr
 (
˝
, 
memAddr
);

2560 
memAddr
 = memAdd∏+ 
˝
->
bsize
;

2562 
i
++;

2564 
	}
}

2566 #ifde‡
CFJ


2567 
cou¡î_t
 
	gmaöDútySbdDúty
 = 0;

2568 
cou¡î_t
 
	gmaöDútySbdCÀ™
 = 0;

2569 
cou¡î_t
 
	gmaöCÀ™
 = 0;

2571 
	$ˇche_ª£t_id
 (
ˇche_t
 *
˝
, 
thªadid
)

2573 
i
, 
œt
 = 
˝
->
hô_œãncy
;

2574 
ˇche_blk_t
 *
blk
;

2577 
˝
->
œ°_èg£tid
.
èg
 = 0;

2578 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2579 
˝
->
œ°_blk
 = 
NULL
;

2582 
i
 = 0; i < 
˝
->
n£ts
; i++)

2584 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

2586 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

2588 
ˇche_blk_t
 *
blk1
, *
blk_Êush
;

2589 
m©ch
 = 0;

2590 
blk1
 = 
˝
->
£ts
[
i
].
way_hód
; blk1; blk1 = blk1->
way_√xt
)

2592 i‡(
blk1
->
°©us
 & 
CACHE_BLK_VALID
)

2594 if(
blk1
->
ègid
.
èg
 =
blk
->ègid.èg && blk1->ègid.
thªadid
 == blk->tagid.threadid)

2596 if(
blk1
->
ègid
.
èg
 =
blk
->tagid.tag)

2598 if(
m©ch
)

2599 
	`∑nic
("MoreÅhan one match iná single way of L0 cache.");

2600 
m©ch
 = 1;

2601 if(
blk1
->
ègid
.
thªadid
 !=Åhreadid)

2603 
blk_Êush
 = 
blk1
;

2604 
blk1
 = 
blk
;

2607 
blk_Êush
 = 
blk
;

2609 if((
blk_Êush
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& (
blk1
->status & CACHE_BLK_DIRTY))

2610 
maöDútySbdDúty
++;

2611 if((
blk_Êush
->
°©us
 & 
CACHE_BLK_DIRTY
Ë&& !(
blk1
->status & CACHE_BLK_DIRTY))

2613 
	`mem˝y
(
blk1
->
d©a
, 
blk_Êush
->d©a, 
˝
->
bsize
);

2614 
maöDútySbdCÀ™
++;

2617 
maöCÀ™
++;

2619 
blk_Êush
->
°©us
 = 0;

2620 
blk_Êush
->
œ°_ac˚ss_time
 = 0;

2621 
blk_Êush
->
isSèÀ
 = 0;

2622 
blk_Êush
->
œ°_ac˚ss_ö¢
 = 0;

2623 
blk_Êush
->
°‹e_nŸ_execuãd
 = 0;

2624 
blk_Êush
->
wr⁄gLﬂdCau£s
 = 0;

2625 
blk_Êush
->
pois⁄
 = 0;

2626 #ifde‡
CACHE_CLEANUP


2627 
blk_Êush
->
robId
 = 0;

2628 
blk_Êush
->
robExId
 = 3;

2630 
˝
->
œ°_èg£tid
.
èg
 = 0;

2631 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2632 
˝
->
œ°_blk
 = 
NULL
;

2633 
	`˛ór_mask
(
blk_Êush
->
isByãDúty
, 
˝
->
bsize
);

2634 
	`upd©e_way_li°
 (&
˝
->
£ts
[
i
], 
blk_Êush
, 
Taû
, cp->
assoc
);

2638 
blk
->
ègid
.
thªadid
 =Åhreadid;

2639 
blk
->
dup
 = 0;

2643 
	}
}

2645 
	$ˇche_ª£t_dúty
 (
ˇche_t
 *
˝
)

2647 
i
, 
œt
 = 
˝
->
hô_œãncy
;

2648 
ˇche_blk_t
 *
blk
;

2651 
i
 = 0; i < 
˝
->
n£ts
; i++)

2653 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

2655 i‡((
blk
->
°©us
 & 
CACHE_BLK_VALID
Ë&& (blk->°©u†& 
CACHE_BLK_DIRTY
))

2657 
blk
->
°©us
 &~
CACHE_BLK_DIRTY
;

2658 
	`˛ór_mask
(
blk
->
isByãDúty
, 
˝
->
bsize
);

2662 
	}
}

2665 #ifde‡
HOTLEAKAGE


2669 
	$ 2
 (
x
)

2671  
	`log10
 (
x
) /Üog10 (2.0);

2672 
	}
}

2675 
	$ˇche_Àak_öô
 ()

2678 
n_löes
 = 
deˇyed_ˇche
->
n£ts
 * deˇyed_ˇche->
assoc
;

2679 
ˇche_size
 = 
n_löes
 * 
deˇyed_ˇche
->
bsize
;

2682 
loˇl_width
 = 
	` 2
 (
loˇl_cou¡î_max
 + 1);

2685 
globÆ_width
 = 
	` 2
 (
globÆ_cou¡î_max
 + 1);

2688 
v_addr_size
 =  (
md_addr_t
) * 8;

2689 
èg_size
 = 
v_addr_size
 - (
	` 2
 (
deˇyed_ˇche
->
n£ts
Ë+Ün2 (deˇyed_ˇche->
bsize
)Ë+ 
CACHE_BLK_NFLAGS
;

2690 
èg_¨øy_size
 = (
èg_size
 * 
n_löes
) / 8;

2695 
globÆ_af
 = 1.0 / 
globÆ_width
;

2696 
loˇl_af
 = 0.5;

2699 
globÆ_ac˚ss_powî
 = 
	`sim∂e_¨øy_w‹dlöe_powî
 (1, 
globÆ_width
, 1, 1, 0);

2701 
globÆ_ac˚ss_powî
 +
globÆ_af
 * 
	`sim∂e_¨øy_bôlöe_powî
 (1, 
globÆ_width
, 1, 1, 0);

2704 
loˇl_ac˚ss_powî
 = 
	`sim∂e_¨øy_w‹dlöe_powî
 (
n_löes
, 
loˇl_width
, 1, 1, 0);

2706 
loˇl_ac˚ss_powî
 +
loˇl_af
 * 
	`sim∂e_¨øy_bôlöe_powî
 (
n_löes
, 
loˇl_width
, 1, 1, 0);

2709 
loˇl_ª£t_powî
 = 
	`sim∂e_¨øy_w‹dlöe_powî
 (1, 
loˇl_width
, 1, 1, 0);

2711 
loˇl_ª£t_powî
 +
loˇl_af
 * 
	`sim∂e_¨øy_bôlöe_powî
 (1, 
loˇl_width
, 1, 1, 0);

2712 
	}
}

2723 
	$ˇche_gë_˘æ_ovhd_øtio
 (
Àak_˘æ_ty≥_t
 
ty≥
)

2725 
xåa2‹ig_øtio
;

2727 
ty≥
)

2730 
G©edVss
:

2731 
Drowsy
:

2732 
RBB
:

2734 
xåa2‹ig_øtio
 = ((Ë
loˇl_width
Ë/ (
deˇyed_ˇche
->
bsize
 * 8 + 
èg_size
);

2735 
xåa2‹ig_øtio
 +((Ë
globÆ_width
Ë/ (8 * (
ˇche_size
 + 
èg_¨øy_size
));

2737 
N⁄e
:

2739 
xåa2‹ig_øtio
 = 0;

2743  
xåa2‹ig_øtio
;

2744 
	}
}

2754 
	$ˇche_gë_xåa_powî
 (
Àak_˘æ_ty≥_t
 
ty≥
)

2756 
xåa_powî
 = 0;

2758 
ty≥
)

2761 
G©edVss
:

2762 
Drowsy
:

2763 
RBB
:

2766 
xåa_powî
 +
globÆ_ac˚ss_powî
;

2769 
xåa_powî
 +
n_ª£ts
 * 
loˇl_ª£t_powî
;

2772 i‡(
globÆ_tick
)

2773 
xåa_powî
 +
loˇl_ac˚ss_powî
;

2777 
N⁄e
:

2783 
globÆ_tick
 = 0;

2784 
n_ª£ts
 = 0;

2786  
xåa_powî
;

2787 
	}
}

2793 
	$ˇcheBc›y
 (
mem_cmd
 
cmd
, 
ˇche_blk_t
 *
blk
, 
posôi⁄
, 
byã_t
 * 
d©a
, 
nbyãs
)

2795 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
posôi⁄
, 
d©a
, 
nbyãs
);

2796 
	}
}

2800 
	$ˇcheBlockSórch
 (
ˇche_t
 *
˝
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, 
byã_t
 * 
d©a
, 
nbyãs
, 
thªadid
)

2802 
md_addr_t
 
èg
;

2803 
md_addr_t
 
£t
;

2804 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

2805 
ˇche_blk_t
 *
blk
 = 
NULL
;

2806 
md_addr_t
 
b™k_≥r_thªad
, 
thrd_b™k_°¨t
, 
thrd_w‹d_b™k
;

2807 
md_addr_t
 
£t_b™k
;

2808 
md_addr_t
 
wb_addr
;

2809 
hô
 = 0;

2811 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

2812 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

2816 i‡(
addr
 =0x140002bf0 && !
	`°rcmp
 (
˝
->
«me
, "dl0"))

2818 
	`Ârötf
 (
°dîr
, "Debug here\n");

2823 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2826 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
)

2827 #ifde‡
CFJ


2828 && (
	`°rcmp
(
˝
->
«me
,"dl0"Ë|| (!
thec⁄ãxts
[
sbdLódThªad
]->
ru¬ög
 || 
blk
->
ègid
.
thªadid
 =thªadid || (thªadid =sbdLódThªad && !blk->
dup
Ë|| (thªadid =
maöLódThªad
 && !(blk->
°©us
 & 
CACHE_BLK_DIRTY
))))

2832 
hô
 = 1;

2833 
cuºít_blk
 = 
blk
;

2838 #ifde‡
FINE_GRAIN_INV


2839 if(
hô
 && 
blk
->
w‹dSètus
)

2841 
w‹d_blk
 = 
	`CACHE_WORD_BLK
(
˝
, 
addr
);

2842 if(
blk
->
w‹dSètus
[
w‹d_blk
] =0Ë
hô
 = 0;

2845 i‡((
hô
 =1Ë&& (
˝
->
bÆloc
))

2847 #ifde‡ 
IDEAL_LONGDIST_CE


2848 
cou¡î_t
 
tŸÆRñCE
;

2849 
cuºítGór
;

2853 i‡(
cuºítGór
 =1 && (
blk
->
°‹e_nŸ_execuãd
 > blk->
œ°_ac˚ss_ö¢
Ë&& (
√w_sim_num_ö¢
 - blk->store_not_executed) > 100)

2855 
tŸÆRñCE
++;

2856 
blk
->
°©us
 &~
CACHE_BLK_VALID
;

2857 
blk
->
œ°_ac˚ss_time
 = 0;

2858 
blk
->
isSèÀ
 = 0;

2859 
blk
->
œ°_ac˚ss_ö¢
 = 0;

2860 
blk
->
°‹e_nŸ_execuãd
 = 0;

2861 
blk
->
wr⁄gLﬂdCau£s
 = 0;

2862 
blk
->
pois⁄
 = 0;

2863 #ifde‡
CACHE_CLEANUP


2864 
blk
->
robId
 = 0;

2865 
blk
->
robExId
 = 3;

2867 i‡(
blk
->
°©us
 & 
CACHE_BLK_DIRTY
)

2868 
blk
->
°©us
 &~
CACHE_BLK_DIRTY
;

2871 
˝
->
œ°_èg£tid
.
èg
 = 0;

2872 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2873 
˝
->
œ°_blk
 = 
NULL
;

2876 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
blk
, 
Taû
, cp->
assoc
);

2882 
	`CACHE_BCOPY
 (
cmd
, 
blk
, 
bofs
, 
d©a
, 
nbyãs
);

2884 #ifde‡ 
IDEAL_LONGDIST_CE


2889 
	}
}

2892 
	$ˇcheAŒocBlock
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
byã_t
 * 
d©a
, 
nbyãs
)

2894 
md_addr_t
 
èg
;

2895 
md_addr_t
 
£t
;

2896 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

2897 
ˇche_blk_t
 *
ª∂
 = 
NULL
;

2898 
md_addr_t
 
b™k_≥r_thªad
, 
thrd_b™k_°¨t
, 
thrd_w‹d_b™k
;

2899 
md_addr_t
 
£t_b™k
;

2900 
thªadid
 = 0;

2902 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

2903 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

2907 
ª∂
 = 
˝
->
£ts
[
£t
].
way_èû
;

2908 
	`upd©e_way_li°
 (&
˝
->
£ts
[
£t
], 
ª∂
, 
Hód
, cp->
assoc
);

2911 i‡(
˝
->
hsize
)

2912 
	`u∆ök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

2915 
˝
->
œ°_èg£tid
.
èg
 = 0;

2916 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

2917 
˝
->
œ°_blk
 = 
NULL
;

2919 
ª∂
->
ègid
.
èg
 =Åag;

2920 
ª∂
->
ègid
.
thªadid
 =Åhreadid;

2921 
ª∂
->
°©us
 = 
CACHE_BLK_VALID
;

2922 
ª∂
->
ªady
 = 0;

2924 
	`CACHE_BCOPY
 (
Wrôe
, 
ª∂
, 
bofs
, 
d©a
, 
nbyãs
);

2927 i‡(
˝
->
hsize
)

2928 
	`lök_hèb_ít
 (
˝
, &˝->
£ts
[
£t
], 
ª∂
);

2929 
	}
}

2932 
	$°‹eSórch
 (
ˇche_t
 *
˝
, 
md_addr_t
 
addr
, 
cou¡î_t
 
sim_num_ö¢
)

2934 
md_addr_t
 
èg
;

2935 
md_addr_t
 
£t
;

2936 
md_addr_t
 
bofs
 = 
	`CACHE_BLK
 (
˝
, 
addr
);

2937 
ˇche_blk_t
 *
blk
 = 
NULL
;

2938 
md_addr_t
 
b™k_≥r_thªad
, 
thrd_b™k_°¨t
, 
thrd_w‹d_b™k
;

2939 
md_addr_t
 
£t_b™k
;

2940 
md_addr_t
 
wb_addr
;

2941 
hô
 = 0;

2942 
thªadid
 = 0;

2944 
èg
 = 
	`CACHE_TAG
 (
˝
, 
addr
);

2945 
£t
 = 
	`CACHE_SET
 (
˝
, 
addr
);

2948 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2951 i‡((
blk
->
ègid
.
èg
 =ègË&& (blk->
°©us
 & 
CACHE_BLK_VALID
))

2953 
hô
 = 1;

2958 i‡(
hô
 == 1)

2960 
blk
->
°‹e_nŸ_execuãd
 = 
sim_num_ö¢
;

2964 
	}
}

2967 
	$ˇchePﬁluti⁄
 (
ˇche_t
 *
˝
)

2969 
md_addr_t
 
£t
;

2970 
ˇche_blk_t
 *
blk
 = 
NULL
;

2971 
numPﬁluãd
 = 0;

2974 
£t
 = 0; së < 
˝
->
n£ts
; set++)

2976 
blk
 = 
˝
->
£ts
[
£t
].
way_hód
; blk; blk = blk->
way_√xt
)

2979 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
 && (blk->
pois⁄
 || blk->
wr⁄gLﬂdCau£s
))

2980 
numPﬁluãd
++;

2983  
numPﬁluãd
;

2984 
	}
}

2986 #ifde‡
STREAM_PREFETCHER


2988 
	$öô_•
 ()

2990 
i
;

2992 
i
 = 0; i < 
MISS_TABLE_SIZE
; i++)

2993 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
] = 0;

2994 
miss_hi°‹y_èbÀ
.
mht_èû
 = 0;

2995 
miss_hi°‹y_èbÀ
.
mht_num
 = 0;

2997 
i
 = 0; i < 
STREAM_ENTRIES
; i++)

2999 
°ªam_èbÀ
[
i
].
vÆid
 = 0;

3000 
°ªam_èbÀ
[
i
].
addr
 = 0;

3001 
°ªam_èbÀ
[
i
].
°ride
 = 0;

3002 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
 = 0;

3003 
°ªam_èbÀ
[
i
].
œ°_u£
 = 0;

3005 
	}
}

3008 
	$ö£π_•
 (
md_addr_t
 
addr
)

3010 
i
, 
num
;

3011 
di°
;

3012 
mö_íåy
;

3013 
md_addr_t
 
°ride_addr
;

3014 
cou¡
 = 0;

3016 i‡(
miss_hi°‹y_èbÀ
.
mht_num
 == 0)

3018 
miss_hi°‹y_èbÀ
.
hi°‹y
[miss_hi°‹y_èbÀ.
mht_èû
] = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1));

3019 
miss_hi°‹y_èbÀ
.
mht_èû
 = (miss_hi°‹y_èbÀ.mht_èû + 1Ë% 
MISS_TABLE_SIZE
;

3020 
miss_hi°‹y_èbÀ
.
mht_num
++;

3024 
di°
 = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[(miss_hi°‹y_èbÀ.
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE];

3025 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[(miss_hi°‹y_èbÀ.
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE];

3026 
mö_íåy
 = (
miss_hi°‹y_èbÀ
.
mht_èû
 + 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE;

3029 
num
 = 1, 
i
 = (
miss_hi°‹y_èbÀ
.
mht_èû
 + 
MISS_TABLE_SIZE
 - 2Ë% MISS_TABLE_SIZE;Çum < miss_hi°‹y_èbÀ.
mht_num
; i = (i + MISS_TABLE_SIZE - 1) % MISS_TABLE_SIZE,Çum++)

3031 
cuº_di°
 = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

3033 i‡(
	`abs
 (
cuº_di°
Ë<áb†(
di°
))

3035 
di°
 = 
cuº_di°
;

3036 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

3037 
mö_íåy
 = 
i
;

3041 
i
 = 
mö_íåy
;

3044 
i
 = (ò+ 
MISS_TABLE_SIZE
 - 1) % MISS_TABLE_SIZE;

3045 
cuº_di°
 = (
°ride_addr
 & ~(
ˇche_dl2
->
bsize
 - 1)Ë- 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

3047 i‡(
cuº_di°
 =
di°
)

3049 
cou¡
++;

3050 
°ride_addr
 = 
miss_hi°‹y_èbÀ
.
hi°‹y
[
i
];

3053 
i
 !
miss_hi°‹y_èbÀ
.
mht_èû
);

3056 
miss_hi°‹y_èbÀ
.
hi°‹y
[miss_hi°‹y_èbÀ.
mht_èû
] = (
addr
 & ~(
ˇche_dl2
->
bsize
 - 1));

3057 
miss_hi°‹y_èbÀ
.
mht_èû
 = (miss_hi°‹y_èbÀ.mht_èû + 1Ë% 
MISS_TABLE_SIZE
;

3058 i‡(
miss_hi°‹y_èbÀ
.
mht_num
 < 
MISS_TABLE_SIZE
)

3059 
miss_hi°‹y_èbÀ
.
mht_num
++;

3061 i‡(
cou¡
 > 1)

3064 
id
 = 0;

3066 i‡(
°ªam_èbÀ
[0].
vÆid
 == 1)

3068 
œ°_u£
 = 
°ªam_èbÀ
[0].last_use;

3070 
id
 = 0;

3071 
i
 = 1; i < 
STREAM_ENTRIES
; i++)

3073 i‡(
°ªam_èbÀ
[
i
].
vÆid
 == 1)

3075 i‡(
œ°_u£
 < 
°ªam_èbÀ
[
i
].last_use)

3077 
œ°_u£
 = 
°ªam_èbÀ
[
i
].last_use;

3078 
id
 = 
i
;

3083 
id
 = 
i
;

3090 
°ªam_èbÀ
[
id
].
vÆid
 = 1;

3091 
°ªam_èbÀ
[
id
].
addr
 =ádd∏& ~(
ˇche_dl2
->
bsize
 - 1);

3092 
°ªam_èbÀ
[
id
].
°ride
 = 
di°
;

3093 
°ªam_èbÀ
[
id
].
ªmaöög_¥e„tches
 = 
PREFETCH_DISTANCE
;

3094 
°ªam_èbÀ
[
id
].
œ°_u£
 = 2000000000;

3097 
	`œunch_•
 (
id
);

3099 
	}
}

3102 
	$œunch_•
 (
id
)

3104 
i
 = 
id
;

3106 i‡(
°ªam_èbÀ
[
i
].
vÆid
 == 1)

3108 ; 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
; stream_table[i].remaining_prefetches--)

3110 
lﬂd_œt
 = 0;

3111 
byã_t
 *
l1ˇche_löe
 = 
	`ˇŒoc
 (
ˇche_dl2
->
bsize
,  (byte_t));

3113 
°ªam_èbÀ
[
i
].
addr
 = såóm_èbÀ[i].add∏+ såóm_èbÀ[i].
°ride
;

3114 
°ªam_èbÀ
[
i
].
œ°_u£
 = 
sim_cy˛e
[
Á°e°_c‹e
];

3118 
dl2_¥e„tch_a˘ive
 = 1;

3119 
dl2_¥e„tch_id
 = 
i
;

3120 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl2
, 
Ród
, (
°ªam_èbÀ
[
i
].
addr
 & ~(ˇche_dl2->
bsize
 - 1)), 
l1ˇche_löe
, cache_dl2->bsize,

3121  
sim_cy˛e
[
Á°e°_c‹e
], 
NULL
, NULL, 0);

3122 i‡(
l2HôFœg
)

3124 i‡(
lﬂd_œt
 <
ˇche_dl2
->
hô_œãncy
)

3125 
pÊ2Hô
++;

3127 
pÊ2SecMiss
++;

3130 
pÊ2PrimMiss
++;

3132 
dl2_¥e„tch_a˘ive
 = 0;

3133 
	`‰ì
 (
l1ˇche_löe
);

3136 
°ªam_èbÀ
[
i
].
ªmaöög_¥e„tches
 = 1;

3137 
	}
}

3141 #ifde‡ 
REALISTIC_LONGDIST_CE


3142 
cou¡î_t
 
tŸÆRñCE
;

3143 
cou¡î_t
 
tŸÆRñCESèÀD
;

3144 
cou¡î_t
 
tŸÆRñCEC‹rDBd
;

3146 
	$ÊushSñe˘ive
 (
ˇche_t
 *
˝
)

3148 
i
, 
œt
 = 
˝
->
hô_œãncy
;

3149 
ˇche_blk_t
 *
blk
;

3150 
œ°Th0CommôãdIn¢
;

3153 
˝
->
œ°_èg£tid
.
èg
 = 0;

3154 
˝
->
œ°_èg£tid
.
thªadid
 = -1;

3155 
˝
->
œ°_blk
 = 
NULL
;

3160 
i
 = 0; i < 
˝
->
n£ts
; i++)

3162 
blk
 = 
˝
->
£ts
[
i
].
way_hód
; blk; blk = blk->
way_√xt
)

3164 i‡(
blk
->
°©us
 & 
CACHE_BLK_VALID
)

3166 #i‚de‡
STORE_DELAY_CE


3167 i‡(
blk
->
isSèÀ
)

3169 
tŸÆRñCE
++;

3170 i‡(
blk
->
°‹e_nŸ_execuãd
 > blk->
œ°_ac˚ss_ö¢
)

3171 
tŸÆRñCESèÀD
++;

3174 i‡(
œ°Th0CommôãdIn¢
 < 
blk
->
œ°_ac˚ss_ö¢
)

3175 
tŸÆRñCEC‹rDBd
++;

3177 
blk
->
°©us
 = 0;

3178 
blk
->
œ°_ac˚ss_time
 = 0;

3179 
blk
->
œ°_ac˚ss_ö¢
 = 0;

3180 
blk
->
°‹e_nŸ_execuãd
 = 0;

3181 
blk
->
wr⁄gLﬂdCau£s
 = 0;

3182 
blk
->
pois⁄
 = 0;

3183 
blk
->
isSèÀ
 = 0;

3184 #ifde‡
CACHE_CLEANUP


3185 
blk
->
robId
 = 0;

3186 
blk
->
robExId
 = 3;

3191 
blk
->
isSèÀ
 = 1;

3195 
	}
}

3197 
	$m¨kCacheOld
(
ˇche_t
 *
˝
, 
robExId
)

3199 
ˇche_blk_t
 *
blk
;

3200 
i
;

3202 
i
=0; i<
˝
->
n£ts
; i++)

3204 
blk
=
˝
->
£ts
[
i
].
way_hód
; blk; blk=blk->
way_√xt
)

3206 i‡(
blk
->
robExId
 ==ÑobExId)

3207 
blk
->
robExId
 = 3;

3210 
	}
}

3212 #ifde‡
ACCURATE_CACHE_MISS_IMP


3213 
ª∂_live_t
 *
	gª∂_live
 = 
NULL
;

3214 
	$ö£π_ª∂_live
(
md_addr_t
 
addr
, 
tick_t
 
ªady
,Åick_à
ªcy˛e
,Åick_à
now
, 
byã_t
 *
d©a
)

3216 if(
ªcy˛e
 <
now
) ;

3217 if(
ªady
 > 
ªcy˛e
) ;

3218 
byã_t
 *
p
 = 
d©a
;

3219 
md_addr_t
 
rofs
 = 0;

3221 
ª∂_live_t
 *
ãmp
 = (ª∂_live_à*Ë
	`ˇŒoc
(1, (repl_live_t));

3222 
ãmp
->
addr
 =áddr;

3223 
ãmp
->
ªady
 =Ñeady;

3224 
ãmp
->
ªcy˛e
 =Ñecycle;

3225 
ãmp
->
d©a
 = 
	`ˇŒoc
(
ˇche_dl2
->
bsize
, (
byã_t
));

3226 
	`CACHE_SCOPY
(
Wrôe
, 
ãmp
->
d©a
, 
rofs
, 
p
, 
ˇche_dl2
->
bsize
);

3227 
ãmp
->
√xt
 = 
NULL
;

3228 
ª∂_live_t
 *
åavî£
;

3229 
ª∂_live_t
 *
¥evious
;

3231 if(
ª∂_live
 =
NULL
)

3233 
ª∂_live
 = 
ãmp
;

3236 if(
ªcy˛e
 < 
ª∂_live
->recycle)

3238 
ãmp
->
√xt
 = 
ª∂_live
;

3239 
ª∂_live
 = 
ãmp
;

3242 
¥evious
 = 
ª∂_live
;

3243 
åavî£
 = 
ª∂_live
->
√xt
;

3244 
åavî£
)

3246 if(
ªcy˛e
 < 
åavî£
->recycle)

3248 
ãmp
->
√xt
 = 
¥evious
->next;

3249 
¥evious
->
√xt
 = 
ãmp
;

3252 
åavî£
 =Åøvî£->
√xt
;

3253 
¥evious
 =Öªvious->
√xt
;

3255 
¥evious
->
√xt
 = 
ãmp
;

3256 
	}
}

3258 
	$ªmove_ª∂_live
(
cou¡î_t
 
now
)

3260 
ª∂_live
 &&Ñïl_live->
ªcy˛e
 < 
now
)

3262 
ª∂_live_t
 *
ãmp
 = 
ª∂_live
;

3263 
ª∂_live
 =Ñïl_live->
√xt
;

3264 
	`‰ì
(
ãmp
->
d©a
);

3265 
	`‰ì
(
ãmp
);

3267 
	}
}

3269 
ª∂_live_t
 * 
	$£¨ch_ª∂_live
(
md_addr_t
 
addr
)

3271 
ª∂_live_t
 *
åavî£
 = 
ª∂_live
;

3272 
åavî£
)

3274 if(
åavî£
->
addr
 ==áddr)

3275  
åavî£
;

3276 
åavî£
 =Åøvî£->
√xt
;

3278  
NULL
;

3279 
	}
}

3282 * 
	$¸óã_byã_mask
(
bsize
)

3284 
num
 = 1, 
i
;

3285 * 
ãmp
;

3286 if(
bsize
 > (()*8))

3287 
num
 +(
bsize
-1)/(()*8);

3289 
ãmp
 = (*Ë
	`ˇŒoc
(
num
, ());

3290 
i
 = 0; i < 
num
; i++)

3291 
ãmp
[
i
] = 0;

3292  
ãmp
;

3293 
	}
}

3295 
	$˛ór_mask
(*
mask
, 
bsize
)

3297 
num
 = 1, 
i
;

3298 if(
bsize
 > (()*8))

3299 
num
 +(
bsize
-1)/(()*8);

3300 
i
 = 0; i < 
num
; i++)

3301 
mask
[
i
] = 0;

3302 
	}
}

3304 
	$add_mask
(*
mask
, 
bofs
, 
nbyãs
, 
bsize
)

3306 
ödex
, 
i
;

3307 if(
bofs
 >
bsize
)

3308 
	`∑nic
("Wrong byte offset sent\n");

3310 
ödex
 = 
bofs
 / (()*8);

3311 
bofs
 = bofs % (()*8);

3312 
i
 = 0; i < 
nbyãs
; i++)

3314 
mask
[
ödex
] |(1<<
bofs
);

3315 
bofs
++;

3317 
	}
}

3319 
cou¡î_t
 
	gbyãDúty
 = 0;

3320 
	$is_mask_£t
(
ˇche_blk_t
 *
blk
, 
byã_t
 *
vp
, *
mask
, 
bofs
, 
nbyãs
, 
bsize
)

3322 
ödex
, 
i
;

3323 
bofs_√w
;

3324 if(
bofs
 >
bsize
)

3325 
	`∑nic
("Wrong byte offset sent\n");

3327 
ödex
 = 
bofs
 / (()*8);

3328 
bofs_√w
 = 
bofs
 % (()*8);

3329 
i
 = 0; i < 
nbyãs
; i++)

3331 if(
mask
[
ödex
] & (1<<
bofs_√w
))

3333 
byãDúty
++;

3335 
byã
 = 1;

3336 
bof
 = 
bofs
+
i
;

3337 
byã_t
 *
p
 = &
vp
[
i
];

3338 
	`CACHE_BCOPY
 (
Ród
, 
blk
, 
bof
, 
p
, 
byã
);

3340 
bofs_√w
++;

3343 
	}
}

	@cluster-opts.c

1 
	~"hódîs.h
"

4 * 
	glök_deföôi⁄s
[
MAX_IC_INDEX
];

5 
	glök_deföôi⁄s_¨gc
;

6 * 
	glök_cu°om_de°ö©i⁄s
[
MAX_IC_INDEX
];

7 
	glök_cu°om_de°ö©i⁄s_¨gc
;

11 
	gn_way
;

12 
	gn_way_ˇche
;

14 
	gn_way_adja˚¡
;

16 
	guni_œt_comm
;

17 
	gtwo_œt_comm
;

18 #i‚de‡
CONFIG_BASED_ICS


19 
	glök_width
;

20 
	gh›_time
;

22 *
	g›tiˇl_ty≥
;

24 
	g›tiˇl_ty≥_ch¨
;

26 
	g›tiˇl_comm
;

27 
	g›tiˇl_lök_width
;

28 
	g›tiˇl_h›_time
;

30 #ifde‡
CONFIG_BASED_ICS


31 
	g„_lök_time
;

33 #ifde‡
TOKENB


34 
	gtokíB
;

38 
cou¡î_t
 *
	g›tiˇl_lök_width_di°
;

39 
cou¡î_t
 
	gcomm_›t_qøm_ac˚ss_˛
[
CLUSTERS
];

41 
cou¡î_t
 
	gtŸÆ_¶ù_cy˛es
;

42 
cou¡î_t
 
	gmax_¶ù_cy˛es
;

43 
cou¡î_t
 
	gtŸÆ_issue_¶ù_cy˛es
;

44 
cou¡î_t
 
	gmax_issue_¶ù_cy˛es
;

49 *
	gdñay_di°_°r
[
DELAY_DIST_NUMBER
] = {

62 
cou¡î_t
 
	gtŸÆ_dñay
;

64 
cou¡î_t
 
	gtŸÆ_numbî_dñay
;

65 
°©_°©_t
 *
	gdñay_di°
 = 
NULL
;

67 
cou¡î_t
 
	g°_tŸÆ_dñay
;

68 
°©_°©_t
 *
	g°_dñay_di°
 = 
NULL
;

71 
cou¡î_t
 
	gtŸÆ_h›
;

72 
°©_°©_t
 *
	gh›_di°
 = 
NULL
;

74 
°©_°©_t
 *
	gcommô_width_°©
;

77 
	$˛u°î_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

79 
	`›t_ªg_öt
(
odb
, "-n_way",

81 &
n_way
, 
N_WAY
,

82  
TRUE
, 
NULL
);

85 
	`›t_ªg_öt
(
odb
, "-n_way_cache",

87 &
n_way_ˇche
, 
N_WAY_CACHE
,

88  
TRUE
, 
NULL
);

91 
	`›t_ªg_Êag
(
odb
, "-n_way_adjacent",

93 &
n_way_adja˚¡
, 
FALSE
,

94  
TRUE
, 
NULL
);

97 
	`›t_ªg_Êag
(
odb
, "-uni-lat-comm", "All communicationsÅake 1 cycle if from 2 differentÇodes",

98 &
uni_œt_comm
, 
FALSE
, 
TRUE
, 
NULL
);

99 
	`›t_ªg_Êag
(
odb
, "-two-lat-comm", "All communicationsÅake 2 cycle if from 2 differentÇodes (1 cycle forádjacent)",

100 &
two_œt_comm
, 
FALSE
, 
TRUE
, 
NULL
);

101 #i‚de‡
CONFIG_BASED_ICS


102 
	`›t_ªg_°rög
(
odb
, "-optical:type",

104 &
›tiˇl_ty≥
, "none",

105  
TRUE
, 
NULL
);

106 
	`›t_ªg_öt
(
odb
, "-link:width",

108 &
lök_width
, 
LINK_WIDTH
,

109  
TRUE
, 
NULL
);

110 
	`›t_ªg_öt
(
odb
, "-hop_time",

112 &
h›_time
, 
HOPTIME
,

113  
TRUE
, 
NULL
);

114 #ifde‡
OPTICAL_TENT


115 
	`›t_ªg_Êag
(
odb
, "-opticaltent", "Performs communication mimickingán opticalÅent",

116 &
›tiˇl_comm
, 
FALSE
, 
TRUE
, 
NULL
);

117 
	`›t_ªg_öt
(
odb
, "-optical:width",

119 &
›tiˇl_lök_width
, 
OPTICAL_LINK_WIDTH
,

120  
TRUE
, 
NULL
);

121 
	`›t_ªg_öt
(
odb
, "-optical:hop_time",

123 &
›tiˇl_h›_time
, 
OPTICAL_HOP_TIME
,

124  
TRUE
, 
NULL
);

129 
	`›t_ªg_°rög_li°
(
odb
,"-link:type","TheÜink definitions, 'name:type:width:hoptime:physics' withÅypeÜike 'ER'ándÖhysics of 'electrical' or 'optical'",

130 
lök_deföôi⁄s
, 
MAX_IC_INDEX
, &
lök_deföôi⁄s_¨gc
, 
NULL
,

131  
TRUE
, 
NULL
,

132  
TRUE
);

134 
	`›t_ªg_°rög_li°
(
odb
,"-link:custom","CustomÜink destination definition, 'name:to0,to1,...' withÅoi = -1 forÇoÜink, specifyig whereÅheÜink goes fromÉach core.",

135 
lök_cu°om_de°ö©i⁄s
, 
MAX_IC_INDEX
, &
lök_cu°om_de°ö©i⁄s_¨gc
, 
NULL
,

136  
TRUE
, 
NULL
,

137  
TRUE
);

140 #ifde‡
CONFIG_BASED_ICS


141 
	`›t_ªg_öt
(
odb
, "-fe_link_time",

143 &
„_lök_time
, -1,

144  
TRUE
, 
NULL
);

146 #ifde‡
TOKENB


147 
	`›t_ªg_Êag
(
odb
, "-tc",

149 &
tokíB
, 
FALSE
,

150 
TRUE
, 
NULL
);

153 
	}
}

155 
	$˛u°î_check_›ti⁄s
()

157 #i‚de‡
CONFIG_BASED_ICS


158 
›tiˇl_ty≥_ch¨
 = 
	`touµî
(
›tiˇl_ty≥
[0]);

160 
ma°î_lök_width
[
OR_INDEX
] = 
›tiˇl_lök_width
;

161 
ma°î_lök_width
[
OL_INDEX
] = 
›tiˇl_lök_width
;

162 
ma°î_lök_width
[
ER_INDEX
] = 
lök_width
;

163 
ma°î_lök_width
[
EL_INDEX
] = 
lök_width
;

164 
ma°î_lök_width
[
AC_INDEX
] = 
›tiˇl_lök_width
;

165 
ma°î_lök_width
[
OT_INDEX
] = 
›tiˇl_lök_width
;

166 
ma°î_lök_width
[
EU_INDEX
] = 
lök_width
;

167 
ma°î_lök_width
[
ED_INDEX
] = 
lök_width
;

169 
ma°î_h›_time
[
OR_INDEX
] = 
›tiˇl_h›_time
;

170 
ma°î_h›_time
[
OL_INDEX
] = 
›tiˇl_h›_time
;

171 
ma°î_h›_time
[
ER_INDEX
] = 
h›_time
;

172 
ma°î_h›_time
[
EL_INDEX
] = 
h›_time
;

173 
ma°î_h›_time
[
AC_INDEX
] = 
›tiˇl_h›_time
;

174 
ma°î_h›_time
[
OT_INDEX
] = 
›tiˇl_h›_time
;

175 
ma°î_h›_time
[
EU_INDEX
] = 
h›_time
;

176 
ma°î_h›_time
[
ED_INDEX
] = 
h›_time
;

178 
	}
}

180 
	$˛u°î_ªg_°©s
(
°©_sdb_t
 *
sdb
)

182 
	`°©_ªg_cou¡î
(
sdb
, "total_number_delay",

184 &
tŸÆ_numbî_dñay
, 0, 
NULL
);

186 
	`°©_ªg_cou¡î
(
sdb
, "total_delay",

188 &
tŸÆ_dñay
, 0, 
NULL
);

189 
	`°©_ªg_f‹muœ
(
sdb
, "lat_delay_avg",

191 "tŸÆ_dñay /ÅŸÆ_numbî_dñay", 
NULL
);

192 
	`°©_ªg_f‹muœ
(
sdb
, "lat_delay_cycle",

194 "tŸÆ_dñay / sim_cy˛e", 
NULL
);

197 
	`°©_ªg_cou¡î
(
sdb
, "total_hop",

199 &
tŸÆ_h›
, 0, 
NULL
);

200 
	`°©_ªg_f‹muœ
(
sdb
, "hops_avg",

202 "tŸÆ_h› /ÅŸÆ_numbî_dñay", 
NULL
);

203 
	`°©_ªg_f‹muœ
(
sdb
, "hop_cycle",

205 "tŸÆ_h› / sim_cy˛e", 
NULL
);

207 
	`°©_ªg_cou¡î
(
sdb
, "total_slip_cycles",

209 &
tŸÆ_¶ù_cy˛es
, 0 , 
NULL
 );

210 
	`°©_ªg_f‹muœ
(
sdb
, "avg_slip_cycle",

212 "tŸÆ_¶ù_cy˛e†/ sim_num_ö¢", 
NULL
 );

213 
	`°©_ªg_cou¡î
(
sdb
, "max_slip_cycles",

215 &
max_¶ù_cy˛es
, 0 , 
NULL
 );

217 
	`°©_ªg_cou¡î
(
sdb
, "total_issue_slip_cycles",

219 &
tŸÆ_issue_¶ù_cy˛es
, 0 , 
NULL
 );

220 
	`°©_ªg_f‹muœ
(
sdb
, "avg_issue_slip_cycle",

222 "tŸÆ_issue_¶ù_cy˛e†/ sim_num_ö¢", 
NULL
 );

223 
	`°©_ªg_cou¡î
(
sdb
, "max_issue_slip_cycles",

225 &
max_issue_¶ù_cy˛es
, 0 , 
NULL
 );

228 
dñay_di°
 = 
	`°©_ªg_di°
(
sdb
, "delay_dist",

232  
TIMEWINDOW
/
DELAY_DIST_NUMBER
,

233  (
PF_COUNT
|
PF_PDF
),

234  
NULL
,

235  
dñay_di°_°r
,

236  
NULL
);

238 
°_dñay_di°
 = 
	`°©_ªg_di°
(
sdb
, "st_delay_dist",

242  
TIMEWINDOW
/
DELAY_DIST_NUMBER
,

243  (
PF_COUNT
|
PF_PDF
),

244  
NULL
,

245  
dñay_di°_°r
,

246  
NULL
);

248 
h›_di°
 = 
	`°©_ªg_di°
(
sdb
, "hop_dist",

251  
CLUSTERS
,

253  (
PF_COUNT
|
PF_PDF
),

254  
NULL
,

255  
NULL
,

256  
NULL
);

257 
commô_width_°©
 = 
	`°©_ªg_di°
(
sdb
, "commit_width_stat", "This showsÅhe commit width usage, in buckets of 4",

258 0, 1 + 64*8/4, 4, 
PF_ALL
, 
NULL
, NULL, NULL);

259 
	}
}

	@cluster-opts.h

1 
	#DELAY_DIST_NUMBER
 10

	)

4 
n_way
;

5 
n_way_ˇche
;

6 
n_way_adja˚¡
;

7 
uni_œt_comm
;

8 
two_œt_comm
;

9 
lök_width
;

10 
h›_time
;

12 
tokíB
;

14 *
›tiˇl_ty≥
;

15 
›tiˇl_ty≥_ch¨
;

16 
›tiˇl_lök_width
;

17 
›tiˇl_comm
;

18 
›tiˇl_h›_time
;

21 
cou¡î_t
 *
›tiˇl_lök_width_di°
;

22 
cou¡î_t
 
comm_›t_qøm_ac˚ss_˛
[
CLUSTERS
];

23 
cou¡î_t
 
tŸÆ_¶ù_cy˛es
;

24 
cou¡î_t
 
max_¶ù_cy˛es
;

25 
cou¡î_t
 
tŸÆ_issue_¶ù_cy˛es
;

26 
cou¡î_t
 
max_issue_¶ù_cy˛es
;

32 
cou¡î_t
 
tŸÆ_dñay
;

33 
cou¡î_t
 
tŸÆ_numbî_dñay
;

34 
cou¡î_t
 
°_tŸÆ_dñay
;

35 
°©_°©_t
 *
dñay_di°
;

36 
°©_°©_t
 *
°_dñay_di°
;

37 
°©_°©_t
 *
commô_width_°©
;

39 
cou¡î_t
 
tŸÆ_h›
;

40 
°©_°©_t
 *
h›_di°
;

43 
˛u°î_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

44 
˛u°î_ªg_°©s
(
°©_sdb_t
 *
sdb
);

45 
˛u°î_check_›ti⁄s
();

49 * 
lök_deföôi⁄s
[
MAX_IC_INDEX
];

50 
lök_deföôi⁄s_¨gc
;

51 * 
lök_cu°om_de°ö©i⁄s
[
MAX_IC_INDEX
];

52 
lök_cu°om_de°ö©i⁄s_¨gc
;

	@cluster.c

1 
	~"hódîs.h
"

4 
cou¡î_t
 
sim_cy˛e
;

7 
RUU_size
;

10 
LSQ_size
;

13 
ªs_poﬁ
 *
fu_poﬁ
;

16 
ˇche_dl1_œt
;

19 
ˇche_t
 *
ˇche_û1
;

22 
ˇche_t
 *
ˇche_û2
;

25 
ˇche_t
 *
ˇche_dl1
;

28 
ˇche_t
 *
ˇche_dl2
;

31 
ªs_memp‹t
;

33 
mö_addr
;

34 
max_addr
;

36 
°ddev
;

37 
b™0
;

38 
b™1
;

39 
b™2
;

40 
b™3
;

41 
bö_acc_tŸ
;

42 
bö_mis_tŸ
;

43 
bö_acc
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

44 
bö_lds
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

45 
bö_tﬁ
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

46 
bö_mis
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

48 
addr0
, 
addr1
, 
addr2
;

50 
ö¢16
;

51 
ö¢4
;

53 
n⁄_¸ô
;

54 
¸ô
;

55 
èb2_c‹r
;

56 
èb2_öc‹r
;

57 
èb2_miss
;

58 
èb_c‹r
;

59 
èb_öc‹r
;

60 
èb_miss
;

61 
èbÀ_ègs
[
MAXTHREADS
][
TABLESIZE
];

62 
èbÀ_num
[
MAXTHREADS
][
TABLESIZE
];

63 
èbÀ2_ègs
[
MAXTHREADS
][
TABLE2SIZE
];

64 
èbÀ2_num
[
MAXTHREADS
][
TABLE2SIZE
];

67 
‹igöÆ_bsize
;

69 
õxåa
;

70 
„xåa
;

71 
ivÆid
;

72 
fvÆid
;

74 
tŸ_úeg
;

75 
tŸ_‰eg
;

76 
tŸ_õxt
;

77 
tŸ_„xt
;

78 
tŸ_ö⁄dup
;

79 
tŸ_‚⁄dup
;

81 
comm_dñay
;

82 
num_sögÀ
;

83 
iss_°Æl
;

84 
„_°Æl
;

85 
n_ªady
;

86 
num_£mi_f
;

87 
num_qw°Æl
;

88 
ö_this
;

89 
num_‰ìd
;

90 
tŸ_dñ
;

91 
tŸ_dñ_bw
;

92 
num_bw_of
;

93 
ºobö
;

95 
öt_di°û±hªsh
;

96 
di°û±abÀ
[
ITABLESIZE
];

97 
èg_id_t
 
di°û±abÀègid
[
ITABLESIZE
];

98 
di°ûpcou¡î
[
ITABLESIZE
];

99 
di°ûpßm∂es
[
ITABLESIZE
];

100 
di°ûpcou¡
;

101 
öt_di°ûp
;

104 #ifde‡ 
MSHR


105 
mshr_size
;

106 
mshr_fuŒ
;

107 
mshr_cou¡
;

108 
mshr_size_di°
[];

109 
mshr_fuŒ_cou¡
;

115 #ifde‡ 
FETCH_QUEUE_CLUSTER


116 
„tch_num_˛
[
CLUSTERS
];

119 #ifde‡
DISPATCH_CLUSTER


120 
di•©ch_˛
[
CLUSTERS
];

129 
IISSUEQ_cou¡
;

130 
IISSUEQ_fcou¡
;

131 
FISSUEQ_cou¡
;

132 
FISSUEQ_fcou¡
;

133 
IPREG_cou¡
;

134 
Iexåa_cou¡
;

135 
IPREG_fcou¡
;

136 
FPREG_cou¡
;

137 
Fexåa_cou¡
;

138 
FPREG_fcou¡
;

140 
úegfûe_˛_cou¡
[];

141 
õxåa_˛_cou¡
[];

142 
‰egfûe_˛_cou¡
[];

143 
„xåa_˛_cou¡
[];

144 
iissueq_˛_cou¡
[];

145 
fissueq_˛_cou¡
[];

147 #ifde‡ 
SPLIT_LSQ


148 
lsq_˛_cou¡
[];

151 
no_di•_˛u°î
;

152 
di•_di°
[];

154 #ifde‡
RAW


155 
øwq_cou¡
;

156 
øwq_fcou¡
;

157 
øwq_˛_cou¡
[];

158 
øwq_di°
[];

161 
Ãeg_id_t
 
±ﬁm≠
[];

162 
Ãeg_id_t
 
c⁄sumîs
[];

163 
Ãeg_id_t
 
±ﬁm≠_chk
[];

164 
p_tŸÆ_ªgs
;

166 #ifde‡
RABMAP


167 
ö°_u£_exåa
[];

168 
…›m≠_exåa
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

169 
…›m≠_¥eg
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

172 #ifde‡
RAW


173 
øwq
;

174 
øwq_˛
[];

175 
øwqªady
;

176 
øwqªady_˛
[];

177 
øwq_fuŒ
;

178 
øwq_°Æl
;

180 
iissueq
;

181 
fissueq
;

183 #ifde‡
PWR_WAKE


184 
úódy
;

185 
‰ódy
;

186 
lsqªady
;

187 
iuƒódy
;

188 
fuƒódy
;

189 
lsquƒódy
;

190 
IREADY_cou¡
;

191 
FREADY_cou¡
;

192 
LSQREADY_cou¡
;

193 
úódy_˛
[];

194 
‰ódy_˛
[];

195 
lsqªady_˛
[];

196 
iuƒódy_˛
[];

197 
fuƒódy_˛
[];

200 #ifde‡ 
SPLIT_LSQ


201 
lsq_˛
[];

202 
lsquƒódy_˛
[];

205 
úegfûe
;

206 
‰egfûe
;

207 
úegfûe_˛
[];

208 
õxåa_˛
[];

209 
‰egfûe_˛
[];

210 
„xåa_˛
[];

211 
iissueq_˛
[];

212 
fissueq_˛
[];

213 
num_°‹eq
[];

214 
max_°‹eq
[];

215 
di•_dñay
;

217 #ifde‡ 
PWR_CLUSTER


218 
cou¡î_t
 
iqøm_ac˚ss_˛
[];

219 
cou¡î_t
 
fqøm_ac˚ss_˛
[];

220 
cou¡î_t
 
iwakeup_ac˚ss_˛
[];

221 
cou¡î_t
 
fwakeup_ac˚ss_˛
[];

222 
cou¡î_t
 
i£À˘i⁄_ac˚ss_˛
[];

223 
cou¡î_t
 
f£À˘i⁄_ac˚ss_˛
[];

224 
cou¡î_t
 
úegfûe_ac˚ss_˛
[];

225 
cou¡î_t
 
‰egfûe_ac˚ss_˛
[];

226 
cou¡î_t
 
ülu1_ac˚ss_˛
[];

227 
cou¡î_t
 
ülu2_ac˚ss_˛
[];

228 
cou¡î_t
 
Álu1_ac˚ss_˛
[];

229 
cou¡î_t
 
Álu2_ac˚ss_˛
[];

230 
cou¡î_t
 
úesu…bus_ac˚ss_˛
[];

231 
cou¡î_t
 
‰esu…bus_ac˚ss_˛
[];

233 
cou¡î_t
 
iqøm_ac˚ss
;

234 
cou¡î_t
 
fqøm_ac˚ss
;

235 
cou¡î_t
 
iwakeup_ac˚ss
;

236 
cou¡î_t
 
fwakeup_ac˚ss
;

237 
cou¡î_t
 
i£À˘i⁄_ac˚ss
;

238 
cou¡î_t
 
f£À˘i⁄_ac˚ss
;

239 
cou¡î_t
 
úegfûe_ac˚ss
;

240 
cou¡î_t
 
‰egfûe_ac˚ss
;

241 
cou¡î_t
 
ülu1_ac˚ss
;

242 
cou¡î_t
 
ülu2_ac˚ss
;

243 
cou¡î_t
 
Álu1_ac˚ss
;

244 
cou¡î_t
 
Álu2_ac˚ss
;

245 
cou¡î_t
 
úesu…bus_ac˚ss
;

246 
cou¡î_t
 
‰esu…bus_ac˚ss
;

249 #ifde‡ 
RAW


250 
cou¡î_t
 
øwqøm_ac˚ss_˛
[];

251 
cou¡î_t
 
øwqwakeup_ac˚ss_˛
[];

253 #i‚de‡
NEW_INTERCONNECT


254 #ifde‡ 
COMM_BUFF


255 
cou¡î_t
 
comm1qøm_ac˚ss_˛
[];

256 
cou¡î_t
 
comm2qøm_ac˚ss_˛
[];

258 #ifde‡ 
COMM_LINK_PWR


259 
cou¡î_t
 
comm1lök_ac˚ss_˛
[];

260 
cou¡î_t
 
comm2lök_ac˚ss_˛
[];

264 #ifde‡
CACHE_MISS_STAT


265 
•ec_rdb_miss
;

266 
•ec_wrb_miss
;

267 
cou¡_îr‹
;

271 #ifde‡
IFREELIST_FREELIST


272 
li°ñt
 *
	gi‰ìli°_‰ìli°
;

274 
	#IFREELIST_FREE
(
ãmp
Ë\

	)

275 
	gãmp
->
	g√xt
 = 
i‰ìli°_‰ìli°
; \

276 
	gi‰ìli°_‰ìli°
 = 
ãmp
;

277 
	#IFREELIST_GET
(
DST
Ë\

	)

278 { 
li°ñt
 *
	gi‰ì_l
; \

279 i‡(!
	gi‰ìli°_‰ìli°
) \

281 
	gw
; \

282 
	gi‰ìli°_‰ìli°
 = 
mÆloc
(10*(
li°ñt
)); \

283  
	gw
 = 0; w<9; w++) \

284 
	gi‰ìli°_‰ìli°
[
w
].
	g√xt
 = &
i‰ìli°_‰ìli°
[w+1]; \

285 
	gi‰ìli°_‰ìli°
[9].
	g√xt
 = 
NULL
; \

287 
	gi‰ì_l
 = 
i‰ìli°_‰ìli°
; \

288 
	gi‰ìli°_‰ìli°
 = 
i‰ìli°_‰ìli°
->
√xt
; \

289 
	gi‰ì_l
->
	g√xt
 = 
NULL
; \

290 (
	gDST
Ë
i‰ì_l
; \

295 
shi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

296 
•ecshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

297 
shi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

298 
•ecshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

299 
shi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

300 
•ecshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

301 
shi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

302 
•ecshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

303 
shi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

304 
•ecshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

305 
Àv2¥ed1
[];

306 
Àv2¥ed2
[];

307 
Àv2¥ed3
[];

308 
Àv2¥ed4
[];

309 
Àv2¥ed5
[];

312 
RUU_°©i⁄
 *
LSQ
[];

313 
LSQ_hód
, 
LSQ_èû
;

314 
LSQ_num
;

316 #ifde‡ 
COUNT_LSQ


317 
n⁄_issue_LSQ_num
;

320 
IIQ_size
;

321 
FIQ_size
;

322 
IPREG_size
;

323 
FPREG_size
;

325 
rög1
[
CLUSTERS
][
TIMEWINDOW
];

326 
rög2
[
CLUSTERS
][
TIMEWINDOW
];

327 
rög3
[
CLUSTERS
][
TIMEWINDOW
];

328 
rög4
[
CLUSTERS
][
TIMEWINDOW
];

331 
a˘uÆ_˛u°îs
;

333 #ifde‡
PORT_PER_BANK


334 
CACHEPORTS
;

335 
RES_CACHEPORTS
;

336 
RES_CACHE_PORTS
;

337 
a˘uÆ_ˇchï‹ts
;

339 
a˘uÆ_ˇchï‹ts
;

342 #ifde‡
RAW


343 
øwq_size
;

345 #ifde‡ 
COMM_BUFF


346 
timewödow
;

350 
key
[];

352 #ifde‡
INTERVAL_BASED


353 
öãrvÆ_key
[
MAXTHREADS
];

358 
Êushes
;

359 
num_Êushes
;

360 
‰ì_˛u°î
;

363 #ifde‡
N_WAY_STEER


364 
°ìr_˛u°î_thrd
[
MAXTHREADS
][
CLUSTERS
];

365 
n_limô_thrd
[];

366 
n_°¨t_thrd
[];

369 #ifde‡ 
THRD_WAY_CACHE


370 
n_ˇche_°¨t_thrd
[];

371 
n_ˇche_limô_thrd
[];

374 #ifde‡
IC_STAT


375 
	g„tch_num_thrd_cou¡
[
MAXTHREADS
];

376 
	giissueq_thrd_cou¡
[
MAXTHREADS
];

377 
	gfissueq_thrd_cou¡
[
MAXTHREADS
];

378 
	glsq_thrd_cou¡
[
MAXTHREADS
];

379 
	gn⁄_issue_lsq_thrd_cou¡
[
MAXTHREADS
];

380 
	gicou¡_thrd_cou¡
[
MAXTHREADS
];

387 #ifde‡ 
PARTITIONED_LSQ


388 
lsq_∑π_b™k
;

389 
lsq_∑π_˛
;

390 
lsq_∑π_thrd
;

399 
a˘ivec⁄ãxts
;

400 
ªs_memb™k
;

403 
ˇlcuœã_¥i‹ôy
 ();

404 
gë_˛u°î
 (, , , 
RUU_°©i⁄
 *, );

405 
sim∂e_ˇche_Êush
 (
ˇche_t
 *);

407 
dl1_ac˚ss_‚
 (
mem_cmd
,

408 
md_addr_t
,

410 
ˇche_blk_t
 *,

411 
tick_t
,

413 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

414 , 
˛u°î


420 
	$˛u°î_check
 (
md_addr_t
 
addr
)

422 i‡((Ë
addr
 < 
addr0
)

426 i‡((Ë
addr
 < 
addr1
)

430 i‡((Ë
addr
 < 
addr2
)

438 
	}
}

442 
	sfûlq


445 
	mwhí
;

446 
md_addr_t
 
	maddr
;

447 #ifde‡ 
THRD_WAY_CACHE


448 
	mthªadid
;

450 
fûlq
 *
	m√xt
;

451 
fûlq
 *
	m¥ev
;

454 
fûlq
 *
	gèûfûl
;

455 
fûlq
 *
	gt›fûl
;

456 
	gfûlqsize
;

459 
	$fûlq_öô
 ()

461 
èûfûl
 = 
NULL
;

463 
t›fûl
 = 
NULL
;

464 
fûlqsize
 = 0;

465 
	}
}

467 #ifde‡ 
THRD_WAY_CACHE


469 
	$ö£π_fûlq
 (
whí
, 
md_addr_t
 
addr
, 
thªadid
)

472 
	$ö£π_fûlq
 (
whí
, 
md_addr_t
 
addr
)

480 
fûlq
 *
p
, *
q
;

481 
found
;

483 
fûlqsize
++;

484 
p
 = (
fûlq
 *Ë
	`mÆloc
 ( (fillq));

485 
p
->
whí
 = when;

486 
p
->
addr
 =áddr;

487 #ifde‡ 
THRD_WAY_CACHE


488 
p
->
thªadid
 =Åhreadid;

490 i‡(!
t›fûl
)

492 
t›fûl
 = 
p
;

493 
p
->
√xt
 = 
NULL
;

494 
p
->
¥ev
 = 
NULL
;

495 
èûfûl
 = 
p
;

499 
q
 = 
èûfûl
;

500 
found
 = 0;

502 !
found
)

504 i‡(
q
->
whí
 < when)

506 
found
 = 1;

509 i‡(!
q
->
¥ev
)

511 
found
 = 1;

514 
q
 = q->
¥ev
;

517 i‡(
q
->
whí
 < when)

519 i‡(
q
->
√xt
)

521 
q
->
√xt
->
¥ev
 = 
p
;

522 
p
->
√xt
 = 
q
->next;

523 
p
->
¥ev
 = 
q
;

524 
q
->
√xt
 = 
p
;

528 
èûfûl
 = 
p
;

529 
q
->
√xt
 = 
p
;

530 
p
->
¥ev
 = 
q
;

531 
p
->
√xt
 = 
NULL
;

536 
q
->
¥ev
 = 
p
;

537 
p
->
√xt
 = 
q
;

538 
p
->
¥ev
 = 
NULL
;

539 
t›fûl
 = 
p
;

543 
	}
}

546 
	$bö_öô
 ()

548 
i
;

550 
i
 = 0; i < (
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
; i++)

552 
bö_acc
[
i
] = 0;

553 
bö_lds
[
i
] = 0;

554 
bö_tﬁ
[
i
] = 0;

555 
bö_mis
[
i
] = 0;

557 
bö_acc_tŸ
 = 0;

558 
bö_mis_tŸ
 = 0;

559 
	}
}

562 
	$ˇche_öô
 ()

565 
ˇche_dl1
->
wrbufsize
 = 
DL1WRB
;

566 
ˇche_dl1
->
pùedñay
 = 
DL1PIPE
;

567 
ˇche_û1
->
wrbufsize
 = 
IL1WRB
;

568 
ˇche_û1
->
pùedñay
 = 
IL1PIPE
;

569 
ˇche_dl2
->
wrbufsize
 = 
DL2WRB
;

570 
ˇche_dl2
->
pùedñay
 = 
DL2PIPE
;

571 
	`fûlq_öô
 ();

572 #ifde‡
EVENT_CACHE_UPDATE


573 
	`mshr_öô
 ();

575 
	}
}

577 #ifde‡
INST_TRANS_RATE


578 #i‚de‡
NEW_INTERCONNECT


579 *
	glök_width_di°
;

582 #i‚de‡
NEW_INTERCONNECT


583 
	grög1
[
CLUSTERS
][
TIMEWINDOW
];

584 
	grög2
[
CLUSTERS
][
TIMEWINDOW
];

585 
	grög3
[
CLUSTERS
][
TIMEWINDOW
];

586 
	grög4
[
CLUSTERS
][
TIMEWINDOW
];

588 #ifde‡
TRACE_REG


589 *
	gªg1
[
CLUSTERS
][
TIMEWINDOW
];

590 *
	gªg2
[
CLUSTERS
][
TIMEWINDOW
];

592 
	gªg1
[
CLUSTERS
][
TIMEWINDOW
];

593 
	gªg2
[
CLUSTERS
][
TIMEWINDOW
];

595 
	gªg3
[
CLUSTERS
][
TIMEWINDOW
];

596 
	gªg4
[
CLUSTERS
][
TIMEWINDOW
];

599 
	$˛u°î_öô
 ()

601 
i
, 
j
;

603 #ifde‡
INST_TRANS_RATE


604 #i‚de‡
NEW_INTERCONNECT


605 
lök_width_di°
 = 
	`mÆloc
 ( (Ë* 
lök_width
);

608 #ifde‡
TRACE_REG


609 
i
 = 0; i < 
CLUSTERS
; i++)

611 
j
 = 0; j < 
TIMEWINDOW
; j++)

613 
ªg1
[
i
][
j
] = 
	`mÆloc
 (
lök_width
 *  ());

614 
ªg2
[
i
][
j
] = 
	`mÆloc
 (
lök_width
 *  ());

619 
	}
}

622 
	$˛u°î_unöô
 ()

624 
i
, 
j
;

626 #ifde‡
INST_TRANS_RATE


627 #i‚de‡
NEW_INTERCONNECT


628 
	`‰ì
 (
lök_width_di°
);

631 #ifde‡
TRACE_REG


632 
i
 = 0; i < 
CLUSTERS
; i++)

634 
j
 = 0; j < 
TIMEWINDOW
; j++)

636 
	`‰ì
 (
ªg1
[
i
][
j
]);

637 
	`‰ì
 (
ªg2
[
i
][
j
]);

641 
	}
}

643 #ifde‡
EVENT_CACHE_UPDATE


646 
	$mshr_öô
 ()

648 
ˇche_dl1
->
mshr_queue
 = 
NULL
;

649 
ˇche_û1
->
mshr_queue
 = 
NULL
;

650 
ˇche_dl2
->
mshr_queue
 = 
NULL
;

651 
	}
}

654 
	$ö£π_mshr
 (
ˇche_t
 *
˝
, 
rd_wt
, 
whí
, 
md_addr_t
 
addr
, 
pùedñay
)

661 
mshrq
 *
p
, *
q
;

662 
found
;

663 
‹dî
 = 0;

664 
‹dî_c⁄t
 = 0;

665 
fú°_c⁄t_whí
 = 
whí
;

667 
p
 = (
mshrq
 *Ë
	`mÆloc
 ( (mshrq));

668 
p
->
whí
 = when;

669 
p
->
rd_wt
 =Ñd_wt;

670 
p
->
addr
 =áddr;

671 i‡(!
˝
->
mshr_queue
)

673 
˝
->
mshr_queue
 = 
p
;

674 
p
->
√xt
 = 
NULL
;

675 
p
->
¥ev
 = 
NULL
;

676  
‹dî
;

678 
q
 = 
˝
->
mshr_queue
;

679 
found
 = 0;

680 !
found
)

682 i‡(
q
->
whí
 > when)

684 
found
 = 1;

687 i‡(!
q
->
√xt
)

689 
found
 = 1;

690 
‹dî
++;

691 i‡(
q
->
whí
 + 
pùedñay
 >= when)

693 i‡(!
‹dî_c⁄t
)

694 
fú°_c⁄t_whí
 = 
q
->
whí
;

695 
‹dî_c⁄t
++;

699 i‡(
q
->
whí
 + 
pùedñay
 >= when)

701 i‡(!
‹dî_c⁄t
)

702 
fú°_c⁄t_whí
 = 
q
->
whí
;

703 
‹dî_c⁄t
++;

705 
q
 = q->
√xt
;

706 
‹dî
++;

708 i‡(
q
->
whí
 > when)

710 i‡(
q
->
¥ev
)

712 
q
->
¥ev
->
√xt
 = 
p
;

713 
p
->
¥ev
 = 
q
->prev;

714 
p
->
√xt
 = 
q
;

715 
q
->
¥ev
 = 
p
;

719 
˝
->
mshr_queue
 = 
p
;

720 
q
->
¥ev
 = 
p
;

721 
p
->
√xt
 = 
q
;

722 
p
->
¥ev
 = 
NULL
;

727 
q
->
√xt
 = 
p
;

728 
p
->
¥ev
 = 
q
;

729 
p
->
√xt
 = 
NULL
;

731 #ifde‡ 
APPROXIMATE_LAT


732  
‹dî
;

734 #ifde‡ 
ACURATE_LAT


735  
‹dî_c⁄t
;

737 #ifde‡ 
MOST_ACURATE_LAT


738  
‹dî_c⁄t
 * 
pùedñay
 - (
whí
 - 
fú°_c⁄t_whí
);

740 
	}
}

744 #ifde‡
EVENT_CACHE_UPDATE


747 
	$ˇche_upd©e
 ()

752 
mshrq
 *
mp
, *
mq
;

754 
fûlq
 *
p
, *
q
;

755 
i
;

757 #ifde‡ 
THRD_WAY_CACHE


758 
b™k_≥r_thªad
, 
thrd_b™k_°¨t
, 
thrd_w‹d_b™k
, 
thªadid
;

762 
p
 = 
t›fûl
;

763 
p
 && (p->
whí
 < 
sim_cy˛e
))

765 
q
 = 
p
;

766 
p
 =Ö->
√xt
;

767 i‡(
p
)

768 
p
->
¥ev
 = 
NULL
;

769 
fûlqsize
--;

770 
t›fûl
 = 
p
;

771 #i‚de‡ 
NO_QFILL_CONTENTION


772 #ifde‡ 
LINE_INTERLEAVED


773 #ifde‡ 
THRD_WAY_CACHE


774 
thªadid
 = 
q
->threadid;

775 
b™k_≥r_thªad
 = 
ªs_memb™k
 / 
a˘ivec⁄ãxts
 + (res_membank %áctivecontexts ? 1 : 0);

776 
thrd_b™k_°¨t
 = 
b™k_≥r_thªad
 * 
thªadid
;

777 
thrd_w‹d_b™k
 = (
	`CACHE_SET
 (
ˇche_dl1
, 
q
->
addr
Ë% 
n_ˇche_limô_thrd
[
thªadid
] + 
n_ˇche_°¨t_thrd
[thªadid]Ë% 
ªs_memb™k
;

778 
i
 = 
thrd_w‹d_b™k
;

780 
i
 = (
q
->
addr
 >> 
ˇche_dl1
->
£t_shi·
Ë& (
ªs_memb™k
 - 1);

782 
fu_poﬁ
->
èbÀ
[10][
i
]->
ma°î
->
busy
 +fu_poﬁ->èbÀ[10][i]->
issuñ©
;

785 i‡(
WORD_INTERLEAVED
)

787 
i
 = 0; i < 
ªs_memp‹t
; i++)

788 
fu_poﬁ
->
èbÀ
[10][
i
]->
ma°î
->
busy
 +fu_poﬁ->èbÀ[10][i]->
issuñ©
;

792 
i
 = 
	`˛u°î_check
 (
q
->
addr
);

793 
fu_poﬁ
->
èbÀ
[10][
i
]->
ma°î
->
busy
 +fu_poﬁ->èbÀ[10][i]->
issuñ©
;

797 
	`‰ì
 (
q
);

801 
mp
 = 
ˇche_dl1
->
mshr_queue
;

802 
mp
 && (mp->
whí
 < 
sim_cy˛e
Ë&& ((sim_cy˛ê- 
ˇche_dl1
->
œ°u£
Ë>
DL1PIPE
))

804 
ˇche_dl1
->
œ°u£
 = 
sim_cy˛e
;

805 i‡(
mp
->
rd_wt
 == 1)

806 
ˇche_dl1
->
rdb
--;

807 i‡(
mp
->
rd_wt
 == 2)

808 
ˇche_dl1
->
wrb
--;

809 
mq
 = 
mp
;

810 
mp
 = mp->
√xt
;

811 i‡(
mp
)

812 
mp
->
¥ev
 = 
NULL
;

813 
ˇche_dl1
->
mshr_queue
 = 
mp
;

814 
	`‰ì
 (
mq
);

817 
mp
 = 
ˇche_û1
->
mshr_queue
;

818 
mp
 && (mp->
whí
 < 
sim_cy˛e
Ë&& ((sim_cy˛ê- 
ˇche_û1
->
œ°u£
Ë>
IL1PIPE
))

820 
ˇche_û1
->
œ°u£
 = 
sim_cy˛e
;

821 i‡(
mp
->
rd_wt
 == 1)

822 
ˇche_û1
->
rdb
--;

823 i‡(
mp
->
rd_wt
 == 2)

824 
ˇche_û1
->
wrb
--;

825 
mq
 = 
mp
;

826 
mp
 = mp->
√xt
;

827 i‡(
mp
)

828 
mp
->
¥ev
 = 
NULL
;

829 
ˇche_û1
->
mshr_queue
 = 
mp
;

830 
	`‰ì
 (
mq
);

833 
mp
 = 
ˇche_dl2
->
mshr_queue
;

834 
mp
 && (mp->
whí
 < 
sim_cy˛e
Ë&& ((sim_cy˛ê- 
ˇche_dl2
->
œ°u£
Ë>
DL2PIPE
))

836 
ˇche_dl2
->
œ°u£
 = 
sim_cy˛e
;

837 i‡(
mp
->
rd_wt
 == 1)

838 
ˇche_dl2
->
rdb
--;

839 i‡(
mp
->
rd_wt
 == 2)

840 
ˇche_dl2
->
wrb
--;

841 
mq
 = 
mp
;

842 
mp
 = mp->
√xt
;

843 i‡(
mp
)

844 
mp
->
¥ev
 = 
NULL
;

845 
ˇche_dl2
->
mshr_queue
 = 
mp
;

846 
	`‰ì
 (
mq
);

849 #ifde‡ 
MSHR


850 
mshr_size
 = 
ˇche_dl1
->
rdb
 + 
ˇche_dl2
->rdb;

851 i‡(
mshr_size
 >
MSHRSIZE
)

852 
mshr_fuŒ
 = 1;

854 
mshr_fuŒ
 = 0;

855 
mshr_cou¡
 +
mshr_size
;

856 i‡(
mshr_fuŒ
)

858 #ifde‡ 
MSHR_DIST


859 
mshr_size_di°
[
MSHRSIZE
 - 1]++;

861 
mshr_fuŒ_cou¡
++;

863 #ifde‡ 
MSHR_DIST


865 
mshr_size_di°
[
mshr_size
]++;

870 
	}
}

875 
	$ˇche_upd©e
 ()

880 
fûlq
 *
p
, *
q
;

881 
i
;

882 
	`¥ötf
("Iám coming here!\n");

883 #ifde‡ 
THRD_WAY_CACHE


884 
b™k_≥r_thªad
, 
thrd_b™k_°¨t
, 
thrd_w‹d_b™k
, 
thªadid
;

887 
p
 = 
t›fûl
;

888 
p
 && (p->
whí
 < 
sim_cy˛e
))

890 
q
 = 
p
;

891 
p
 =Ö->
√xt
;

892 i‡(
p
)

893 
p
->
¥ev
 = 
NULL
;

894 
fûlqsize
--;

895 
t›fûl
 = 
p
;

896 #i‚de‡ 
NO_QFILL_CONTENTION


897 #ifde‡ 
LINE_INTERLEAVED


898 #ifde‡ 
THRD_WAY_CACHE


899 
thªadid
 = 
q
->threadid;

900 
b™k_≥r_thªad
 = 
ªs_memb™k
 / 
a˘ivec⁄ãxts
 + (res_membank %áctivecontexts ? 1 : 0);

901 
thrd_b™k_°¨t
 = 
b™k_≥r_thªad
 * 
thªadid
;

902 
thrd_w‹d_b™k
 = (
	`CACHE_SET
 (
ˇche_dl1
, 
q
->
addr
Ë% 
n_ˇche_limô_thrd
[
thªadid
] + 
n_ˇche_°¨t_thrd
[thªadid]Ë% 
ªs_memb™k
;

903 
i
 = 
thrd_w‹d_b™k
;

905 
i
 = (
q
->
addr
 >> 
ˇche_dl1
->
£t_shi·
Ë& (
ªs_memb™k
 - 1);

907 
fu_poﬁ
->
èbÀ
[10][
i
]->
ma°î
->
busy
 +fu_poﬁ->èbÀ[10][i]->
issuñ©
;

910 i‡(
WORD_INTERLEAVED
)

912 
i
 = 0; i < 
ªs_memp‹t
; i++)

913 
fu_poﬁ
->
èbÀ
[10][
i
]->
ma°î
->
busy
 +fu_poﬁ->èbÀ[10][i]->
issuñ©
;

917 
i
 = 
	`˛u°î_check
 (
q
->
addr
);

918 
fu_poﬁ
->
èbÀ
[10][
i
]->
ma°î
->
busy
 +fu_poﬁ->èbÀ[10][i]->
issuñ©
;

922 
	`‰ì
 (
q
);

928 i‡((
sim_cy˛e
 - 
ˇche_dl1
->
œ°u£
Ë>
DL1PIPE
)

930 i‡((
ˇche_dl1
->
wrb
 - cache_dl1->
wrbufsize
Ë> 
DL1WRB
)

934 
ˇche_dl1
->
wrb
--;

935 
ˇche_dl1
->
œ°u£
 = 
sim_cy˛e
;

937 i‡(
ˇche_dl1
->
rdb
)

940 
ˇche_dl1
->
rdb
--;

941 
ˇche_dl1
->
œ°u£
 = 
sim_cy˛e
;

943 i‡(
ˇche_dl1
->
wrb
)

946 
ˇche_dl1
->
wrb
--;

947 
ˇche_dl1
->
œ°u£
 = 
sim_cy˛e
;

952 i‡((
sim_cy˛e
 - 
ˇche_û1
->
œ°u£
Ë>
IL1PIPE
)

954 i‡((
ˇche_û1
->
wrb
 - cache_û1->
wrbufsize
Ë> 
IL1WRB
)

957 
ˇche_û1
->
wrb
--;

958 
ˇche_û1
->
œ°u£
 = 
sim_cy˛e
;

960 i‡(
ˇche_û1
->
rdb
)

963 
ˇche_û1
->
rdb
--;

964 
ˇche_û1
->
œ°u£
 = 
sim_cy˛e
;

966 i‡(
ˇche_û1
->
wrb
)

969 
ˇche_û1
->
wrb
--;

970 
ˇche_û1
->
œ°u£
 = 
sim_cy˛e
;

975 i‡((
sim_cy˛e
 - 
ˇche_dl2
->
œ°u£
Ë>
DL2PIPE
)

977 i‡((
ˇche_dl2
->
wrb
 - cache_dl2->
wrbufsize
Ë> 
DL2WRB
)

980 
ˇche_dl2
->
wrb
--;

981 
ˇche_dl2
->
œ°u£
 = 
sim_cy˛e
;

982 #ifde‡
CACHE_MISS_STAT


983 i‡(
thec⁄ãxts
[0]->
n⁄_•ec_wrb_miss_cou¡
 > 0)

984 
thec⁄ãxts
[0]->
n⁄_•ec_wrb_miss_cou¡
--;

985 i‡(
thec⁄ãxts
[0]->
•ec_wrb_miss_cou¡
 > 0)

986 
thec⁄ãxts
[0]->
•ec_wrb_miss_cou¡
--;

989 i‡(
ˇche_dl2
->
rdb
)

992 
ˇche_dl2
->
rdb
--;

993 
ˇche_dl2
->
œ°u£
 = 
sim_cy˛e
;

994 #ifde‡
CACHE_MISS_STAT


995 i‡(
thec⁄ãxts
[0]->
n⁄_•ec_rdb_miss_cou¡
 > 0)

996 
thec⁄ãxts
[0]->
n⁄_•ec_rdb_miss_cou¡
--;

997 i‡(
thec⁄ãxts
[0]->
•ec_rdb_miss_cou¡
 > 0)

998 
thec⁄ãxts
[0]->
•ec_rdb_miss_cou¡
--;

1000 i‡(
thec⁄ãxts
[0]->
ö°_miss_cou¡
 > 0)

1001 
thec⁄ãxts
[0]->
ö°_miss_cou¡
--;

1002 i‡(
thec⁄ãxts
[0]->
lﬂd_miss_cou¡
 > 0)

1003 
thec⁄ãxts
[0]->
lﬂd_miss_cou¡
--;

1004 i‡(
thec⁄ãxts
[0]->
°‹e_miss_cou¡
 > 0)

1005 
thec⁄ãxts
[0]->
°‹e_miss_cou¡
--;

1008 i‡(
ˇche_dl2
->
wrb
)

1011 
ˇche_dl2
->
wrb
--;

1012 
ˇche_dl2
->
œ°u£
 = 
sim_cy˛e
;

1013 #ifde‡
CACHE_MISS_STAT


1014 i‡(
thec⁄ãxts
[0]->
n⁄_•ec_wrb_miss_cou¡
 > 0)

1015 
thec⁄ãxts
[0]->
n⁄_•ec_wrb_miss_cou¡
--;

1016 i‡(
thec⁄ãxts
[0]->
•ec_wrb_miss_cou¡
 > 0)

1017 
thec⁄ãxts
[0]->
•ec_wrb_miss_cou¡
--;

1021 #ifde‡
CACHE_MISS_STAT


1022 i‡(!
cou¡_îr‹
)

1024 
cou¡_îr‹
 = 1;

1025 i‡((
thec⁄ãxts
[0]->
n⁄_•ec_rdb_miss_cou¡
 +Åhec⁄ãxts[0]->
•ec_rdb_miss_cou¡
Ë!
ˇche_dl2
->
rdb
)

1026 
	`Ârötf
 (
°dîr
, "Eº‹ cache_dl2rdb mism©ch s≥c-n⁄•e¯⁄ cy˛ê%lu\n", (Ë
sim_cy˛e
);

1027 i‡((
thec⁄ãxts
[0]->
ö°_miss_cou¡
 +Åhec⁄ãxts[0]->
lﬂd_miss_cou¡
 +Åhec⁄ãxts[0]->
°‹e_miss_cou¡
Ë!
ˇche_dl2
->
rdb
)

1028 
	`Ârötf
 (
°dîr
, "Eº‹ cache_dl2rdb mism©ch in°/ld/° o¿cy˛ê%lu\n", (Ë
sim_cy˛e
);

1029 i‡((
thec⁄ãxts
[0]->
n⁄_•ec_wrb_miss_cou¡
 +Åhec⁄ãxts[0]->
•ec_wrb_miss_cou¡
Ë!
ˇche_dl2
->
wrb
)

1030 
	`Ârötf
 (
°dîr
, "Eº‹ cache_dl2wrb mism©ch o¿cy˛ê%lu\n", (Ë
sim_cy˛e
);

1034 #ifde‡ 
MSHR


1035 
mshr_size
 = 
ˇche_dl1
->
rdb
 + 
ˇche_dl2
->rdb;

1036 i‡(
mshr_size
 >
MSHRSIZE
)

1037 
mshr_fuŒ
 = 1;

1039 
mshr_fuŒ
 = 0;

1040 
mshr_cou¡
 +
mshr_size
;

1041 i‡(
mshr_fuŒ
)

1043 #ifde‡ 
MSHR_DIST


1044 
mshr_size_di°
[
MSHRSIZE
 - 1]++;

1046 
mshr_fuŒ_cou¡
++;

1048 #ifde‡ 
MSHR_DIST


1050 
mshr_size_di°
[
mshr_size
]++;

1053 
	}
}

1058 
	$compuã_queue
 (
thªadid
)

1061 
	}
}

1065 
	$b™k_lookup
 (
md_addr_t
 
pc
, 
•ec
, 
thªadid
)

1067 
ödex
, 
x‹bôs
, 
Àv2ödex1
, 
Àv2ödex2
, 
Àv2ödex3
, 
Àv2ödex4
, 
Àv2ödex5
, 
bnk
;

1069 i‡(
•ec
)

1071 
ödex
 = (
pc
 >> 2Ë% 
LEV1SIZE
;

1072 
x‹bôs
 = (
pc
 >> 2Ë- (’¯>> (2 + 
XORSIZE
)) << XORSIZE);

1074 
Àv2ödex1
 = (
•ecshi·ªg1
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1075 
Àv2ödex2
 = (
•ecshi·ªg2
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1076 
Àv2ödex3
 = (
•ecshi·ªg3
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1077 
Àv2ödex4
 = (
•ecshi·ªg4
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1078 
Àv2ödex5
 = (
•ecshi·ªg5
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1079 
bnk
 = 0;

1080 i‡((
CACHEPORTS
 > 1Ë&& (
Àv2¥ed1
[
Àv2ödex1
] >= 2))

1081 
bnk
++;

1082 i‡((
CACHEPORTS
 > 2Ë&& (
Àv2¥ed2
[
Àv2ödex2
] >= 2))

1083 
bnk
 += 2;

1084 i‡((
CACHEPORTS
 > 4Ë&& (
Àv2¥ed3
[
Àv2ödex3
] >= 2))

1085 
bnk
 += 4;

1086 i‡((
CACHEPORTS
 > 8Ë&& (
Àv2¥ed4
[
Àv2ödex4
] >= 2))

1087 
bnk
 += 8;

1088 i‡((
CACHEPORTS
 > 16Ë&& (
Àv2¥ed5
[
Àv2ödex5
] >= 2))

1089 
bnk
 += 16;

1091 
•ecshi·ªg1
[
thªadid
][
ödex
] = (•ecshi·ªg1[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1092 
•ecshi·ªg2
[
thªadid
][
ödex
] = (•ecshi·ªg2[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1093 
•ecshi·ªg3
[
thªadid
][
ödex
] = (•ecshi·ªg3[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1094 
•ecshi·ªg4
[
thªadid
][
ödex
] = (•ecshi·ªg4[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1095 
•ecshi·ªg5
[
thªadid
][
ödex
] = (•ecshi·ªg5[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1096 i‡(
bnk
 % 2)

1098 
•ecshi·ªg1
[
thªadid
][
ödex
] = (•ecshi·ªg1[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1100 i‡((
bnk
 / 2) % 2)

1102 
•ecshi·ªg2
[
thªadid
][
ödex
] = (•ecshi·ªg2[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1104 i‡((
bnk
 / 4) % 2)

1106 
•ecshi·ªg3
[
thªadid
][
ödex
] = (•ecshi·ªg3[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1108 i‡((
bnk
 / 8) % 2)

1110 
•ecshi·ªg4
[
thªadid
][
ödex
] = (•ecshi·ªg4[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1112 i‡((
bnk
 / 16) % 2)

1114 
•ecshi·ªg5
[
thªadid
][
ödex
] = (•ecshi·ªg5[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1117  
bnk
;

1121 
ödex
 = (
pc
 >> 2Ë% 
LEV1SIZE
;

1122 
x‹bôs
 = (
pc
 >> 2Ë- (’¯>> (2 + 
XORSIZE
)) << XORSIZE);

1124 
Àv2ödex1
 = (
shi·ªg1
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1125 
Àv2ödex2
 = (
shi·ªg2
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1126 
Àv2ödex3
 = (
shi·ªg3
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1127 
Àv2ödex4
 = (
shi·ªg4
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1128 
Àv2ödex5
 = (
shi·ªg5
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1130 
bnk
 = 0;

1131 i‡((
CACHEPORTS
 > 1Ë&& (
Àv2¥ed1
[
Àv2ödex1
] >= 2))

1132 
bnk
++;

1133 i‡((
CACHEPORTS
 > 2Ë&& (
Àv2¥ed2
[
Àv2ödex2
] >= 2))

1134 
bnk
 += 2;

1135 i‡((
CACHEPORTS
 > 4Ë&& (
Àv2¥ed3
[
Àv2ödex3
] >= 2))

1136 
bnk
 += 4;

1137 i‡((
CACHEPORTS
 > 8Ë&& (
Àv2¥ed4
[
Àv2ödex4
] >= 2))

1138 
bnk
 += 8;

1139 i‡((
CACHEPORTS
 > 16Ë&& (
Àv2¥ed5
[
Àv2ödex5
] >= 2))

1140 
bnk
 += 16;

1141  
bnk
;

1143 
	}
}

1146 
	$b™k_upd©e
 (
md_addr_t
 
pc
, 
bnk
, 
thªadid
)

1148 
ödex
, 
x‹bôs
, 
Àv2ödex1
, 
Àv2ödex2
, 
Àv2ödex3
, 
Àv2ödex4
, 
Àv2ödex5
;

1150 
ödex
 = (
pc
 >> 2Ë% 
LEV1SIZE
;

1151 
x‹bôs
 = (
pc
 >> 2Ë- (’¯>> (2 + 
XORSIZE
)) << XORSIZE);

1152 
Àv2ödex1
 = (
shi·ªg1
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1153 
Àv2ödex2
 = (
shi·ªg2
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1154 
Àv2ödex3
 = (
shi·ªg3
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1155 
Àv2ödex4
 = (
shi·ªg4
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1156 
Àv2ödex5
 = (
shi·ªg5
[
thªadid
][
ödex
] ^ 
x‹bôs
Ë% 
LEV2SIZE
;

1158 
shi·ªg1
[
thªadid
][
ödex
] = (shi·ªg1[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1159 
shi·ªg2
[
thªadid
][
ödex
] = (shi·ªg2[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1160 
shi·ªg3
[
thªadid
][
ödex
] = (shi·ªg3[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1161 
shi·ªg4
[
thªadid
][
ödex
] = (shi·ªg4[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1162 
shi·ªg5
[
thªadid
][
ödex
] = (shi·ªg5[thªadid][ödex] << 1Ë% 
LEV2SIZE
;

1163 i‡((
CACHEPORTS
 > 1Ë&& (
bnk
 % 2))

1165 
Àv2¥ed1
[
Àv2ödex1
]++;

1166 
Àv2¥ed1
[
Àv2ödex1
] = 
	`mö2
 (3,Üev2pred1[lev2index1]);

1167 
shi·ªg1
[
thªadid
][
ödex
] = (shi·ªg1[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1171 
Àv2¥ed1
[
Àv2ödex1
]--;

1172 
Àv2¥ed1
[
Àv2ödex1
] = 
	`max2
 (0,Üev2pred1[lev2index1]);

1174 i‡((
CACHEPORTS
 > 2Ë&& ((
bnk
 / 2) % 2))

1176 
Àv2¥ed2
[
Àv2ödex2
]++;

1177 
Àv2¥ed2
[
Àv2ödex2
] = 
	`mö2
 (3,Üev2pred2[lev2index2]);

1178 
shi·ªg2
[
thªadid
][
ödex
] = (shi·ªg2[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1182 
Àv2¥ed2
[
Àv2ödex2
]--;

1183 
Àv2¥ed2
[
Àv2ödex2
] = 
	`max2
 (0,Üev2pred2[lev2index2]);

1185 i‡((
CACHEPORTS
 > 4Ë&& ((
bnk
 / 4) % 2))

1187 
Àv2¥ed3
[
Àv2ödex3
]++;

1188 
Àv2¥ed3
[
Àv2ödex3
] = 
	`mö2
 (3,Üev2pred3[lev2index3]);

1189 
shi·ªg3
[
thªadid
][
ödex
] = (shi·ªg3[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1193 
Àv2¥ed3
[
Àv2ödex3
]--;

1194 
Àv2¥ed3
[
Àv2ödex3
] = 
	`max2
 (0,Üev2pred3[lev2index3]);

1196 i‡((
CACHEPORTS
 > 8Ë&& ((
bnk
 / 8) % 2))

1198 
Àv2¥ed4
[
Àv2ödex4
]++;

1199 
Àv2¥ed4
[
Àv2ödex4
] = 
	`mö2
 (3,Üev2pred4[lev2index4]);

1200 
shi·ªg4
[
thªadid
][
ödex
] = (shi·ªg4[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1204 
Àv2¥ed4
[
Àv2ödex4
]--;

1205 
Àv2¥ed4
[
Àv2ödex4
] = 
	`max2
 (0,Üev2pred4[lev2index4]);

1207 i‡((
CACHEPORTS
 > 16Ë&& ((
bnk
 / 16) % 2))

1209 
Àv2¥ed5
[
Àv2ödex5
]++;

1210 
Àv2¥ed5
[
Àv2ödex5
] = 
	`mö2
 (3,Üev2pred5[lev2index5]);

1211 
shi·ªg5
[
thªadid
][
ödex
] = (shi·ªg5[thªadid][ödex] + 1Ë% 
LEV2SIZE
;

1215 
Àv2¥ed5
[
Àv2ödex5
]--;

1216 
Àv2¥ed5
[
Àv2ödex5
] = 
	`max2
 (0,Üev2pred5[lev2index5]);

1218 
	}
}

1221 
	$b™k¥ed_öô
 ()

1223 
i
;

1225 
i
 = 0; i < 
LEV2SIZE
; i++)

1227 i‡((
i
 % 4) == 0)

1229 
Àv2¥ed1
[
i
] = 1;

1230 
Àv2¥ed2
[
i
] = 1;

1232 i‡((
i
 % 4) == 1)

1234 
Àv2¥ed1
[
i
] = 2;

1235 
Àv2¥ed2
[
i
] = 1;

1237 i‡((
i
 % 4) == 2)

1239 
Àv2¥ed1
[
i
] = 1;

1240 
Àv2¥ed2
[
i
] = 2;

1244 
Àv2¥ed1
[
i
] = 2;

1245 
Àv2¥ed2
[
i
] = 2;

1248 
	}
}

1251 
	$ûp_öô
 ()

1253 
i
, 
j
;

1254 
c⁄ãxt
 *
cuºít
;

1256 
i
 = 0; i < 
ITABLESIZE
; i++)

1258 
di°û±abÀ
[
i
] = 1;

1259 
di°û±abÀègid
[
i
].
èg
 = 0;

1260 
di°û±abÀègid
[
i
].
thªadid
 = -1;

1261 
di°ûpcou¡î
[
i
] = 0;

1262 
di°ûpßm∂es
[
i
] = 0;

1264 
j
 = 0; j < 
numc⁄ãxts
; j++)

1266 
cuºít
 = 
thec⁄ãxts
[
j
];

1267 
i
 = 0; i < 
OWINDOWSIZE
; i++)

1269 
cuºít
->
ﬁdwödowûp
[
i
] = 0;

1270 
cuºít
->
ﬁdwödowbr
[
i
] = 0;

1271 
cuºít
->
ﬁdwödowpc
[
i
] = 0;

1273 
cuºít
->
owödow_hód
 = 0;

1275 
di°ûpcou¡
 = 0;

1276 
	}
}

1279 
	$°d_dev
 (
a
, 
b
, 
c
, 
d
)

1281 
sum
, 
avg
;

1282 
Ø
, 
bb
, 
cc
, 
dd
;

1284 
Ø
 = (Ë
a
;

1285 
bb
 = (Ë
b
;

1286 
cc
 = (Ë
c
;

1287 
dd
 = (Ë
d
;

1289 
avg
 = (
Ø
 + 
bb
 + 
cc
 + 
dd
) / 4.0;

1290 
sum
 = (
Ø
 - 
avg
Ë* (Ø -ávgË+ (
bb
 -ávgË* (bb -ávgË+ (
cc
 -ávgË* (c¯-ávgË+ (
dd
 -ávg) * (dd -ávg);

1291 
sum
 = sum / 4.0;

1292 
sum
 = 
	`sqπ
 (sum);

1293  
sum
;

1294 
	}
}

1296 #i‚de‡
NEW_INTERCONNECT


1298 
	$°_rög_œt
 (
RUU_°©i⁄
 *
rs
)

1300 
myªg
, 
ãmpv
, 
‰om
, 
i
, 
j
, 
rowf
;

1301 
cou¡î_t
 
now
, 
nowc
;

1302 
found
, 
k
;

1304 #ifde‡
N_WAY_STEER


1305 
limô_˛u°î
;

1308 #ifde‡ 
PARTITIONED_LSQ


1309 
lsq_∑π_thrd
;

1312 #ifde‡ 
IGNORE_MEM_COMM_LATENCY


1319 #ifde‡ 
THRD_WAY_CACHE


1320 #ifde‡ 
PARTITIONED_LSQ


1321 
lsq_∑π_thrd
 = (
n_ˇche_limô_thrd
[
rs
->
thªadid
] / 
lsq_∑π_b™k
) + ((n_cache_limit_thrd[rs->threadid] %Üsq_part_bank == 0) ? 0 : 1);

1322 i‡(
lsq_∑π_thrd
 < 2)

1325 i‡(
n_ˇche_limô_thrd
[
rs
->
thªadid
] < 2)

1330 i‡(
uni_œt_comm
)

1332 
i
 = 0; i < 
CLUSTERS
; i++)

1333 
rs
->
°_ªach
[
i
] = 
sim_cy˛e
 + 1;

1334 
rs
->
°_ªach
[rs->
˛u°î
] = 
sim_cy˛e
;

1337 i‡(
two_œt_comm
)

1339 
i
 = 0; i < 
CLUSTERS
; i++)

1340 
rs
->
°_ªach
[
i
] = 
sim_cy˛e
 + 2;

1341 
rs
->
°_ªach
[rs->
˛u°î
] = 
sim_cy˛e
;

1342 
rs
->
°_ªach
[
	`CL_ADD
 (rs->
˛u°î
, 1)] = 
sim_cy˛e
 + 1;

1343 
rs
->
°_ªach
[
	`CL_SUB
 (rs->
˛u°î
, 1)] = 
sim_cy˛e
 + 1;

1347 i‡(
GRID
)

1349 
myªg
 = 0;

1350 
rs
->
°_ªach
[rs->
˛u°î
] = 
sim_cy˛e
;

1352 i‡(
ST_RING_BW
)

1354 
‰om
 = 
rs
->
˛u°î
;

1355 
rowf
 = 
‰om
 / 
ROWCOUNT
;

1357 
now
 = 
sim_cy˛e
;

1358 
i
 = 
‰om
; i < (
rowf
 + 1Ë* 
ROWCOUNT
; i++)

1360 i‡(
i
 < (
rowf
 + 1Ë* 
ROWCOUNT
 - 1)

1362 #ifde‡ 
TRACE_REG


1363 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)][0] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1365 
now
++;

1367 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1368 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)][0] = 
myªg
;

1370 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1372 
now
++;

1374 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1375 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1377 
now
 =Çow + 
h›_time
;

1378 
rs
->
°_ªach
[(
i
 + 1Ë% 
CLUSTERS
] = 
now
;

1379 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1381 
num_bw_of
++;

1386 
nowc
 = 
now
;

1387 
j
 = 
i
; j < (
CLUSTERS
 - 
ROWCOUNT
); j = j + ROWCOUNT)

1389 
rög3
[
j
][(
nowc
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg3
[j][“ow¯% TIMEWINDOW)] !myªg)Ë&& (“ow¯- 
sim_cy˛e
) < TIMEWINDOW))

1391 
nowc
++;

1393 
rög3
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 1;

1394 
ªg3
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 
myªg
;

1395 
nowc
 =Çow¯+ 
h›_time
;

1396 
rs
->
°_ªach
[(
j
 + 
ROWCOUNT
Ë% 
CLUSTERS
] = 
nowc
;

1397 i‡((
nowc
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1399 
num_bw_of
++;

1403 
nowc
 = 
now
;

1404 
j
 = 
i
; j >
ROWCOUNT
; j = j - ROWCOUNT)

1406 
rög4
[
j
][(
nowc
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg4
[j][“ow¯% TIMEWINDOW)] !myªg)Ë&& (“ow¯- 
sim_cy˛e
) < TIMEWINDOW))

1408 
nowc
++;

1410 
rög4
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 1;

1411 
ªg4
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 
myªg
;

1412 
nowc
 =Çow¯+ 
h›_time
;

1413 
rs
->
°_ªach
[(
j
 - 
ROWCOUNT
)] = 
nowc
;

1414 i‡((
nowc
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1416 
num_bw_of
++;

1422 
now
 = 
sim_cy˛e
;

1423 
i
 = 
‰om
; i >
rowf
 * 
ROWCOUNT
; i--)

1425 i‡(
i
 > 
rowf
 * 
ROWCOUNT
)

1427 #ifde‡ 
TRACE_REG


1428 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)][0] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1430 
now
++;

1432 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1433 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)][0] = 
myªg
;

1435 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1437 
now
++;

1439 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1440 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1442 
now
 =Çow + 
h›_time
;

1443 
rs
->
°_ªach
[(
i
 - 1Ë% 
CLUSTERS
] = 
now
;

1444 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1446 
num_bw_of
++;

1451 
nowc
 = 
now
;

1452 
j
 = 
i
; j < (
CLUSTERS
 - 
ROWCOUNT
); j = j + ROWCOUNT)

1454 
rög3
[
j
][(
nowc
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg3
[j][“ow¯% TIMEWINDOW)] !myªg)Ë&& (“ow¯- 
sim_cy˛e
) < TIMEWINDOW))

1456 
nowc
++;

1458 
rög3
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 1;

1459 
ªg3
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 
myªg
;

1460 
nowc
 =Çow¯+ 
h›_time
;

1461 
rs
->
°_ªach
[(
j
 + 
ROWCOUNT
Ë% 
CLUSTERS
] = 
nowc
;

1462 i‡((
nowc
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1464 
num_bw_of
++;

1468 
nowc
 = 
now
;

1469 
j
 = 
i
; j >
ROWCOUNT
; j = j - ROWCOUNT)

1471 
rög4
[
j
][(
nowc
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg4
[j][“ow¯% TIMEWINDOW)] !myªg)Ë&& (“ow¯- 
sim_cy˛e
) < TIMEWINDOW))

1473 
nowc
++;

1475 
rög4
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 1;

1476 
ªg4
[
j
][(
nowc
 % 
TIMEWINDOW
)] = 
myªg
;

1477 
nowc
 =Çow¯+ 
h›_time
;

1478 
rs
->
°_ªach
[(
j
 - 
ROWCOUNT
)] = 
nowc
;

1479 i‡((
nowc
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1481 
num_bw_of
++;

1489 
‰om
 = 
rs
->
˛u°î
;

1490 
rowf
 = 
‰om
 / 
ROWCOUNT
;

1492 
now
 = 
sim_cy˛e
;

1493 
i
 = 
‰om
; i < (
rowf
 + 1Ë* 
ROWCOUNT
; i++)

1495 i‡(
i
 < (
rowf
 + 1Ë* 
ROWCOUNT
 - 1)

1497 
now
 =Çow + 
h›_time
;

1498 
rs
->
°_ªach
[(
i
 + 1Ë% 
CLUSTERS
] = 
now
;

1501 
nowc
 = 
now
;

1502 
j
 = 
i
; j < (
CLUSTERS
 - 
ROWCOUNT
); j = j + ROWCOUNT)

1504 
nowc
 =Çow¯+ 
h›_time
;

1505 
rs
->
°_ªach
[(
j
 + 
ROWCOUNT
Ë% 
CLUSTERS
] = 
nowc
;

1507 
nowc
 = 
now
;

1508 
j
 = 
i
; j >
ROWCOUNT
; j = j - ROWCOUNT)

1510 
nowc
 =Çow¯+ 
h›_time
;

1511 
rs
->
°_ªach
[(
j
 - 
ROWCOUNT
)] = 
nowc
;

1515 
now
 = 
sim_cy˛e
;

1516 
i
 = 
‰om
; i >
rowf
 * 
ROWCOUNT
; i--)

1518 i‡(
i
 > 
rowf
 * 
ROWCOUNT
)

1520 
now
 =Çow + 
h›_time
;

1521 
rs
->
°_ªach
[(
i
 - 1Ë% 
CLUSTERS
] = 
now
;

1524 
nowc
 = 
now
;

1525 
j
 = 
i
; j < (
CLUSTERS
 - 
ROWCOUNT
); j = j + ROWCOUNT)

1527 
nowc
 =Çow¯+ 
h›_time
;

1528 
rs
->
°_ªach
[(
j
 + 
ROWCOUNT
Ë% 
CLUSTERS
] = 
nowc
;

1530 
nowc
 = 
now
;

1531 
j
 = 
i
; j >
ROWCOUNT
; j = j - ROWCOUNT)

1533 
nowc
 =Çow¯+ 
h›_time
;

1534 
rs
->
°_ªach
[(
j
 - 
ROWCOUNT
)] = 
nowc
;

1542 
myªg
 = 0;

1543 
rs
->
°_ªach
[rs->
˛u°î
] = 
sim_cy˛e
;

1544 #ifde‡ 
COMM_BUFF


1545 
comm1qøm_ac˚ss_˛
[
rs
->
˛u°î
] = 1;

1546 
comm2qøm_ac˚ss_˛
[
rs
->
˛u°î
] = 1;

1549 i‡(
ST_RING_BW
)

1552 
ãmpv
 = (
CLUSTERS
 / 2) - 1;

1553 
now
 = 
sim_cy˛e
;

1554 
‰om
 = 
rs
->
˛u°î
;

1555 #ifde‡
THRD_WAY_CACHE


1556 i‡(
n_ˇche_limô_thrd
[
rs
->
thªadid
] <
CLUSTERS
 / 2)

1557 
limô_˛u°î
 = (
n_ˇche_°¨t_thrd
[
rs
->
thªadid
] + 
n_ˇche_limô_thrd
[rs->thªadid] + 1Ë% 
CLUSTERS
;

1559 
limô_˛u°î
 = -1;

1560 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
 && i !
limô_˛u°î
; j++, i = (ò+ 1Ë% 
CLUSTERS
)

1563 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (ò+ 1Ë% 
CLUSTERS
)

1566 #ifde‡
INST_TRANS_RATE


1567 #ifde‡ 
TRACE_REG


1568 i‡(!
myªg
)

1570 
found
 = 0;

1571 (
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1572 
now
++;

1576 
found
 = 0;

1577 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] > 0)

1579 
k
 = 0; k < 
rög1
[
i
][
now
 % 
TIMEWINDOW
]; k++)

1581 i‡(
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)][
k
] =
myªg
)

1583 
found
 = 1;

1587 i‡(
found
 || (
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
))

1590 
now
++;

1593 i‡(!
found
)

1595 i‡(
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

1597 
lök_width_di°
[
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

1598 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)][
rög1
[i][“ow % TIMEWINDOW)]] = 
myªg
;

1599 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]++;

1603 
	`Ârötf
 (
°dîr
, "DE_CENTÑög1Éx˚ed it†limô i¿cy¯%lu\n", (Ë
sim_cy˛e
);

1604 
	`exô
 (1);

1608 (
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1609 
now
++;

1610 i‡(
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

1612 
lök_width_di°
[
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

1613 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]++;

1614 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1618 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1620 
now
++;

1622 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1623 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1625 
now
 =Çow + 
h›_time
;

1626 
rs
->
°_ªach
[(
i
 + 1Ë% 
CLUSTERS
] = 
now
;

1627 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1629 
num_bw_of
++;

1634 
ãmpv
 = (
CLUSTERS
 / 2) - 2;

1635 
now
 = 
sim_cy˛e
;

1636 
‰om
 = 
rs
->
˛u°î
;

1637 #ifde‡
THRD_WAY_CACHE


1638 i‡(
n_ˇche_limô_thrd
[
rs
->
thªadid
] <
CLUSTERS
 / 2)

1639 
limô_˛u°î
 = (
n_ˇche_°¨t_thrd
[
rs
->
thªadid
] + 
CLUSTERS
 - 1) % CLUSTERS;

1641 
limô_˛u°î
 = -1;

1642 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
 && i !
limô_˛u°î
; j++, i = (
CLUSTERS
 + i - 1) % CLUSTERS)

1645 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (
CLUSTERS
 + i - 1) % CLUSTERS)

1648 #ifde‡
INST_TRANS_RATE


1649 #ifde‡ 
TRACE_REG


1650 i‡(!
myªg
)

1652 
found
 = 0;

1653 (
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1654 
now
++;

1658 
found
 = 0;

1659 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] > 0)

1661 
k
 = 0; k < 
rög2
[
i
][
now
 % 
TIMEWINDOW
]; k++)

1663 i‡(
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)][
k
] =
myªg
)

1665 
found
 = 1;

1669 i‡(
found
 || (
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
))

1672 
now
++;

1675 i‡(!
found
)

1677 i‡(
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

1679 
lök_width_di°
[
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

1680 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)][
rög2
[i][“ow % TIMEWINDOW)]] = 
myªg
;

1681 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]++;

1685 
	`Ârötf
 (
°dîr
, "rög2Éx˚ed it†limô i¿cy¯%lu\n", (Ë
sim_cy˛e
);

1686 
	`exô
 (1);

1690 (
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1691 
now
++;

1692 i‡(
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

1694 
lök_width_di°
[
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

1695 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]++;

1696 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1700 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1702 
now
++;

1704 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1705 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1707 
now
 =Çow + 
h›_time
;

1708 
rs
->
°_ªach
[(
CLUSTERS
 + 
i
 - 1Ë% CLUSTERS] = 
now
;

1709 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1711 
num_bw_of
++;

1719 
ãmpv
 = (
CLUSTERS
 / 2) - 1;

1720 
now
 = 
sim_cy˛e
;

1721 
‰om
 = 
rs
->
˛u°î
;

1722 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (ò+ 1Ë% 
CLUSTERS
)

1724 
now
 =Çow + 
h›_time
;

1725 
rs
->
°_ªach
[(
i
 + 1Ë% 
CLUSTERS
] = 
now
;

1728 
ãmpv
 = (
CLUSTERS
 / 2) - 2;

1729 
now
 = 
sim_cy˛e
;

1730 
‰om
 = 
rs
->
˛u°î
;

1731 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (
CLUSTERS
 + i - 1) % CLUSTERS)

1733 
now
 =Çow + 
h›_time
;

1734 
rs
->
°_ªach
[(
CLUSTERS
 + 
i
 - 1Ë% CLUSTERS] = 
now
;

1740 
	}
}

1743 
	$rög_œt
 (
‰om
, 
to
, 
myªg
, 
off£t
)

1745 
ãmpv
, 
dñay
, 
i
, 
dú
, 
j
, 
rowf
, 
rowt
, 
cﬁf
, 
cﬁt
;

1746 
cou¡î_t
 
now
;

1747 
found
, 
k
;

1749 #ifde‡ 
IGNORE_ALL_COMM_LATENCY


1752 i‡(
‰om
 =
to
)

1754 i‡(
uni_œt_comm
)

1756 i‡(
two_œt_comm
)

1758 i‡((
	`CL_ADD
 (
‰om
, 1Ë=
to
Ë|| (
	`CL_SUB
 (from, 1) ==Åo))

1764 i‡(
GRID
)

1771 
rowf
 = 
‰om
 / 
ROWCOUNT
;

1772 
cﬁf
 = 
‰om
 % 
ROWCOUNT
;

1773 
rowt
 = 
to
 / 
ROWCOUNT
;

1774 
cﬁt
 = 
to
 % 
ROWCOUNT
;

1778 
ãmpv
 = 
	`abs
 (
cﬁf
 - 
cﬁt
);

1779 i‡((
cﬁf
 - 
cﬁt
) < 0)

1781 
dú
 = 1;

1785 
dú
 = 2;

1787 i‡(
a˘uÆ_˛u°îs
 == 4)

1789 i‡((
cﬁf
 - 
cﬁt
) == -3)

1791 
ãmpv
 = 1;

1792 
dú
 = 2;

1794 i‡((
cﬁf
 - 
cﬁt
) == 3)

1796 
ãmpv
 = 1;

1797 
dú
 = 1;

1801 
ãmpv
 =Åempv - 1;

1802 
dñay
 = (
ãmpv
 * 2 * 
COMM_LATENCY
Ë/ 
CLUSTERS
 + 
h›_time
;

1804 i‡(
RING_BW
)

1806 i‡(
dú
 == 1)

1808 
now
 = 
sim_cy˛e
 + 
off£t
;

1809 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (ò+ 1Ë% 
CLUSTERS
)

1811 #ifde‡
TRACE_REG


1812 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)][0] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1814 
now
++;

1816 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1817 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)][0] = 
myªg
;

1819 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1821 
now
++;

1823 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1824 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1826 
now
 =Çow + 
h›_time
;

1827 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1829 
num_bw_of
++;

1836 
now
 = 
sim_cy˛e
 + 
off£t
;

1837 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (
CLUSTERS
 + i - 1) % CLUSTERS)

1839 #ifde‡
TRACE_REG


1840 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)][0] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1842 
now
++;

1844 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1845 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)][0] = 
myªg
;

1847 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1849 
now
++;

1851 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1852 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1854 
now
 =Çow + 
h›_time
;

1855 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1857 
num_bw_of
++;

1864 
ãmpv
 = 
	`abs
 (
rowf
 - 
rowt
);

1865 i‡((
rowf
 - 
rowt
) < 0)

1867 
dú
 = 1;

1871 
dú
 = 2;

1873 
ãmpv
 =Åempv - 1;

1874 
dñay
 +(
ãmpv
 * 2 * 
COMM_LATENCY
Ë/ 
CLUSTERS
 + 
h›_time
;

1875 
tŸ_dñ
 +
dñay
;

1877 i‡(
RING_BW
)

1879 i‡(
dú
 == 1)

1881 
i
 = (
rowf
 * 
ROWCOUNT
Ë+ 
cﬁt
, 
j
 = 0; j <
ãmpv
; j++, i = (ò+ ROWCOUNTË% 
CLUSTERS
)

1883 
rög3
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg3
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1885 
now
++;

1887 
rög3
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1888 
ªg3
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1889 
now
 =Çow + 
h›_time
;

1890 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1892 
num_bw_of
++;

1899 
i
 = (
rowf
 * 
ROWCOUNT
Ë+ 
cﬁt
, 
j
 = 0; j <
ãmpv
; j++, i = (
CLUSTERS
 + i - ROWCOUNT) % CLUSTERS)

1901 
rög4
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg4
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1903 
now
++;

1905 
rög4
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

1906 
ªg4
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

1907 
now
 =Çow + 
h›_time
;

1908 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

1910 
num_bw_of
++;

1915 
dñay
 = 
now
 - 
sim_cy˛e
 - 
off£t
;

1918 
tŸ_dñ_bw
 +
dñay
;

1920 i‡(
dñay
 < 1)

1921 
	`Áèl
 ("dñay i†%ld", 
dñay
);

1923  
dñay
;

1931 
ãmpv
 = 
	`abs
 (
‰om
 - 
to
);

1932 i‡(
ãmpv
 > (
CLUSTERS
 / 2))

1934 
ãmpv
 = 
CLUSTERS
 -Åempv;

1935 i‡((
‰om
 - 
to
) < 0)

1937 
dú
 = 2;

1941 
dú
 = 1;

1946 i‡((
‰om
 - 
to
) < 0)

1948 
dú
 = 1;

1952 
dú
 = 2;

1955 
tŸÆ_h›
 +
ãmpv
;

1956 
	`°©_add_ßm∂e
 (
h›_di°
, 
ãmpv
);

1957 
now
 = 
sim_cy˛e
 + 
off£t
;

1958 #ifde‡
OPTICAL_TENT


1959 i‡(
›tiˇl_comm
 && (
ãmpv
 > (
CLUSTERS
 / 4)))

1961 
comm_›t_qøm_ac˚ss_˛
[
‰om
] = 1;

1962 
ãmpv
 =Åempv - 
CLUSTERS
 / 4;

1963 
found
 = 0;

1964 i‡(!
myªg
)

1966 (
›tiˇl_lök
[
‰om
][(
now
 % 
TIMEWINDOW
)] >
›tiˇl_lök_width
Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

1967 
now
++;

1971 
›tiˇl_lök
[
‰om
][(
now
 % 
TIMEWINDOW
)] > 0)

1973 
k
 = 0; k < 
›tiˇl_lök
[
‰om
][
now
 % 
TIMEWINDOW
]; k++)

1975 i‡(
›t_ªg
[
‰om
][(
now
 % 
TIMEWINDOW
)][
k
] =
myªg
)

1977 
found
 = 1;

1981 i‡(
found
 || (
›tiˇl_lök
[
‰om
][(
now
 % 
TIMEWINDOW
)] < 
›tiˇl_lök_width
))

1984 
now
++;

1987 i‡(!
found
)

1989 i‡(
›tiˇl_lök
[
‰om
][(
now
 % 
TIMEWINDOW
)] < 
›tiˇl_lök_width
)

1991 
›tiˇl_lök_width_di°
[
›tiˇl_lök
[
‰om
][(
now
 % 
TIMEWINDOW
)]]++;

1994 
›t_ªg
[
‰om
][(
now
 % 
TIMEWINDOW
)][
›tiˇl_lök
[‰om][“ow % TIMEWINDOW)]] = 
myªg
;

1995 
›tiˇl_lök
[
‰om
][(
now
 % 
TIMEWINDOW
)]++;

1999 
	`Ârötf
 (
°dîr
, "›tiˇl_lökÉx˚eded it†limô i¿cy˛ê%Œu\n", 
sim_cy˛e
);

2000 
	`Áèl
 ("bad opticalÜimit");

2004 
‰om
 = (‰om + (
CLUSTERS
 / 2)) % CLUSTERS;

2005 
dú
 = dir == 1 ? 2 : 1;

2006 
now
 +
›tiˇl_h›_time
;

2009 
ãmpv
 =Åempv - 1;

2010 
dñay
 = (
ãmpv
 * 2 * 
COMM_LATENCY
Ë/ 
CLUSTERS
 + 
h›_time
;

2011 
tŸ_dñ
 +
dñay
;

2013 i‡(
RING_BW
)

2015 i‡(
dú
 == 1)

2017 #ifde‡ 
COMM_BUFF


2018 
comm1qøm_ac˚ss_˛
[
‰om
] = 1;

2020 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (ò+ 1Ë% 
CLUSTERS
)

2022 #ifde‡
INST_TRANS_RATE


2023 #ifde‡ 
TRACE_REG


2024 
found
 = 0;

2025 i‡(!
myªg
)

2027 (
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

2028 
now
++;

2032 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] > 0)

2034 
k
 = 0; k < 
rög1
[
i
][
now
 % 
TIMEWINDOW
]; k++)

2036 i‡(
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)][
k
] =
myªg
)

2038 
found
 = 1;

2042 i‡(
found
 || (
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
))

2045 
now
++;

2048 i‡(!
found
)

2050 i‡(
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

2052 
lök_width_di°
[
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

2053 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)][
rög1
[i][“ow % TIMEWINDOW)]] = 
myªg
;

2054 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]++;

2058 
	`Ârötf
 (
°dîr
, "rög1Éx˚ed it†limô i¿cy¯%lu\n", (Ë
sim_cy˛e
);

2059 
	`exô
 (1);

2063 (
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

2064 
now
++;

2065 i‡(
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

2067 
lök_width_di°
[
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

2068 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)]++;

2069 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

2073 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg1
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

2075 
now
++;

2077 
rög1
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

2078 
ªg1
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

2080 
now
 =Çow + 
h›_time
;

2081 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

2083 
num_bw_of
++;

2090 #ifde‡ 
COMM_BUFF


2091 
comm2qøm_ac˚ss_˛
[
‰om
] = 1;

2093 
i
 = 
‰om
, 
j
 = 0; j <
ãmpv
; j++, i = (
CLUSTERS
 + i - 1) % CLUSTERS)

2095 #ifde‡
INST_TRANS_RATE


2096 #ifde‡ 
TRACE_REG


2097 
found
 = 0;

2098 i‡(!
myªg
)

2100 (
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

2101 
now
++;

2105 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] > 0)

2107 
k
 = 0; k < 
rög2
[
i
][
now
 % 
TIMEWINDOW
]; k++)

2109 i‡(
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)][
k
] =
myªg
)

2111 
found
 = 1;

2115 i‡(
found
 || (
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
))

2118 
now
++;

2121 i‡(!
found
)

2123 i‡(
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

2125 
lök_width_di°
[
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

2126 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)][
rög2
[i][“ow % TIMEWINDOW)]] = 
myªg
;

2127 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]++;

2131 
	`Ârötf
 (
°dîr
, "rög2Éx˚ed it†limô i¿cy¯%lu\n", (Ë
sim_cy˛e
);

2132 
	`exô
 (1);

2136 (
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] >
lök_width
Ë&& (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

2137 
now
++;

2138 i‡(
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] < 
lök_width
)

2140 
lök_width_di°
[
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]]++;

2141 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)]++;

2142 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

2146 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] && (!
myªg
 || (
ªg2
[i][“ow % TIMEWINDOW)] !myªg)Ë&& (“ow - 
sim_cy˛e
) < TIMEWINDOW))

2148 
now
++;

2150 
rög2
[
i
][(
now
 % 
TIMEWINDOW
)] = 1;

2151 
ªg2
[
i
][(
now
 % 
TIMEWINDOW
)] = 
myªg
;

2153 
now
 =Çow + 
h›_time
;

2154 i‡((
now
 - 
sim_cy˛e
Ë>
TIMEWINDOW
)

2156 
num_bw_of
++;

2161 
dñay
 = 
now
 - 
sim_cy˛e
 - 
off£t
;

2174 
tŸ_dñ_bw
 +
dñay
;

2176 i‡(
dñay
 < 1)

2177 
	`Áèl
 ("dñay i†%ld", 
dñay
);

2178 
	`°©_add_ßm∂e
 (
dñay_di°
, 
dñay
);

2179 
tŸÆ_dñay
 +
dñay
;

2180 
tŸÆ_numbî_dñay
++;

2181  
dñay
;

2183 
	}
}

2185 
	$rög_‰ì
 ()

2187 
i
, 
j
;

2189 
i
 = 0; i < 
CLUSTERS
; i++)

2191 #ifde‡ 
COMM_BUFF


2192 #ifde‡ 
PWR_ACCESS


2193 i‡(
rög1
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)])

2194 
comm1qøm_ac˚ss_˛
[
i
] = 2 * 
rög1
[i][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)];

2195 i‡(
rög2
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)])

2196 
comm2qøm_ac˚ss_˛
[
i
] = 2 * 
rög2
[i][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)];

2198 i‡(
rög1
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)])

2199 
comm1qøm_ac˚ss_˛
[
i
] = 1;

2200 i‡(
rög2
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)])

2201 
comm2qøm_ac˚ss_˛
[
i
] = 1;

2204 #ifde‡ 
COMM_LINK_PWR


2205 i‡(
rög1
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)])

2206 
comm1lök_ac˚ss_˛
[
i
] = 1;

2207 i‡(
rög2
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)])

2208 
comm2lök_ac˚ss_˛
[
i
] = 1;

2210 
rög1
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2211 
rög2
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2212 
rög3
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2213 
rög4
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2214 #ifde‡ 
TRACE_REG


2215 
j
 = 0; j < 
lök_width
; j++)

2217 
ªg1
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)][
j
] = 0;

2218 
ªg2
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)][
j
] = 0;

2221 
ªg1
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2222 
ªg2
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2224 
ªg3
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2225 
ªg4
[
i
][((Ë
sim_cy˛e
 % 
TIMEWINDOW
)] = 0;

2226 #ifde‡
OPTICAL_TENT


2227 
	`›tiˇl_‰ì
 ();

2230 
	}
}

2233 
	$ˇche_ch™ge_c⁄fig
 (
√wsize
)

2235 
ˇche_t
 *
ãmpˇche
;

2237 i‡(
√wsize
 =
a˘uÆ_˛u°îs
)

2240 
	`Ârötf
 (
°dîr
, "Ch™gög c⁄fig from %dÅÿ%d\n", 
a˘uÆ_˛u°îs
, 
√wsize
);

2241 
Êushes
 +(Ë
	`sim∂e_ˇche_Êush
 (
ˇche_dl1
);

2242 
num_Êushes
++;

2244 
ãmpˇche
 = 
ˇche_dl1
;

2245 
ˇche_dl1
 = 
	`ˇche_¸óã
 (
ãmpˇche
->
«me
,Åempˇche->
n£ts
, (
‹igöÆ_bsize
 * 
√wsize
Ë/ 
CLUSTERS
,

2246  
FALSE
, 0, 
ãmpˇche
->
assoc
,

2247 
ãmpˇche
->
pﬁicy
, 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
, 0);

2248 
ˇche_dl1
->
bus_‰ì
 = 
ãmpˇche
->bus_free;

2249 
ˇche_dl1
->
hôs
 = 
ãmpˇche
->hits;

2250 
ˇche_dl1
->
mis£s
 = 
ãmpˇche
->misses;

2251 
ˇche_dl1
->
ª∂a˚míts
 = 
ãmpˇche
->replacements;

2252 
ˇche_dl1
->
wrôebacks
 = 
ãmpˇche
->writebacks;

2253 
ˇche_dl1
->
övÆid©i⁄s
 = 
ãmpˇche
->invalidations;

2254 
ˇche_dl1
->
rdb
 = 
ãmpˇche
->rdb;

2255 
ˇche_dl1
->
wrb
 = 
ãmpˇche
->wrb;

2256 
ˇche_dl1
->
pùedñay
 = 
ãmpˇche
->pipedelay;

2257 
ˇche_dl1
->
wrbufsize
 = 
ãmpˇche
->wrbufsize;

2258 
ˇche_dl1
->
œ°u£
 = 
ãmpˇche
->lastuse;

2260 
a˘uÆ_ˇchï‹ts
 = (
CACHEPORTS
 * 
√wsize
Ë/ 
CLUSTERS
;

2262 
	}
}

	@cluster.h

46 
	~"smt.h
"

49 
	#FETCHLIMIT
 1024

	)

51 
	#FBLOCKMASK
 ~63

	)

52 
	#THREADFETCHLIMIT
 8

	)

54 
	#TOTALFETCHLIMIT
 1024

	)

57 
	#ICACHEBANKS
 8

	)

59 
	#IQSIZE
 1048

61 
	#FQSIZE
 1048

62 

	)

63 #ifde‡
RAW


64 
	#RAWSIZE
 
IQSIZE


	)

67 
	#IPREGSIZE
 4000

68 
	#FPREGSIZE
 4000

69 
	#EXTRA_REG_RENAME
 30

	)

71 #ifde‡
PORT_PER_BANK


72 
	#MAXCACHEPORTS
 512

	)

74 
	#CACHEPORTS
 32

	)

75 
	#RES_CACHEPORTS
 32

	)

80 #ifde‡ 
PARTITIONED_LSQ


81 
	#MAXLSQPARTS
 32

	)

84 
	#WARMUP
 0

	)

87 #ifde‡ 
CENTRALIZED_LSQ


88 
	#CENTRAL_CACHE
 1

	)

89 
	#CENTRALCACHELAT
 1

	)

90 
	#CACHELOC
 0

	)

92 
	#CENTRAL_CACHE
 0

	)

93 
	#CENTRALCACHELAT
 0

	)

94 
	#CACHELOC
 0

	)

97 
	#GRID
 0

	)

99 
	#DL1WRB
 16

	)

100 
	#IL1WRB
 16

	)

101 
	#DL2WRB
 16

	)

102 
	#DL1PIPE
 4

	)

103 
	#IL1PIPE
 4

	)

104 
	#DL2PIPE
 16

	)

106 
	#TIMEWINDOW
 5000

	)

108 
	#LEV1SIZE
 1024

	)

109 
	#LEV2SIZE
 4096

	)

114 
	#MINADDR
 4799987712ULL

	)

115 
	#MAXADDR
 5400000000ULL

	)

116 
	#BINSIZE
 16384

	)

118 
	#TABLE2SIZE
 4096

	)

119 
	#TABLESIZE
 4096

	)

121 
	#ITABLESIZE
 16384

	)

123 
	#XORSIZE
 12

	)

125 
	#SORT
 0

	)

127 
	#FREE_REG_THRESH
 (
IPREGSIZE
)

	)

130 
	#ROWCOUNT
 4

	)

133 #ifde‡
DE_CENTRALIZED_LSQ


134 
	#STOREDELAY
 1

	)

135 
	#BANKPRED
 1

	)

136 
	#BANKMISPREDLAT
 1

	)

137 
	#BANKP_SPEC
 0

	)

138 
	#ST_ADDR_COMM
 1

	)

139 
	#ST_RING_BW
 1

	)

141 
	#STOREDELAY
 0

	)

142 
	#BANKPRED
 0

	)

143 
	#BANKMISPREDLAT
 0

	)

144 
	#BANKP_SPEC
 0

	)

145 
	#ST_ADDR_COMM
 0

	)

146 
	#ST_RING_BW
 0

	)

149 
	#IFACTOR
 4

	)

151 
	#RFACTOR
 1

	)

153 #i‚de‡ 
STEER_FU


154 
	#DEP_FACTOR
 
CLUSTERS


	)

157 
	#DEP_FACTOR
 0

	)

160 #ifde‡
DE_CENTRALIZED_LSQ


162 #i‚de‡
NO_COMMUNICATION


163 
	#LD_FACTOR
 (4*
DEP_FACTOR
)

	)

167 #i‚de‡
NO_COMMUNICATION


168 
	#LD_FACTOR
 (0*
DEP_FACTOR
)

	)

172 #ifde‡ 
STEER_MEM_NEIGHBOR


173 
	#LD_PROXIMITY
 1

	)

175 
	#LD_PROXIMITY
 0

	)

177 
	#LDPROX_FACTOR
 256

	)

179 #ifde‡
CENTRALIZED_CACHE_BANK


180 #i‚de‡
PARTITIONED_LSQ


181 
	#LD_FACTOR
 0

	)

182 
	#LD_PROXIMITY
 0

	)

183 
	#LDPROX_FACTOR
 0

	)

187 #ifde‡
IGNORE_MEM_COMM_LATENCY


188 
	#LD_FACTOR
 0

	)

189 
	#LD_PROXIMITY
 0

	)

192 #ifde‡
IGNORE_ALL_COMM_LATENCY


193 
	#STEER_2NONREADY
 0

	)

194 
	#STEER_CRITICAL
 0

	)

195 
	#LD_FACTOR
 0

	)

196 
	#LD_PROXIMITY
 0

	)

199 #ifde‡ 
UNIFORM_COMM


200 
	#RING_IC
 0

	)

201 
	#RING_BW
 0

	)

203 
	#RING_IC
 1

	)

204 
	#RING_BW
 1

	)

207 #ifde‡ 
IGNORE_ALL_COMM_LATENCY


208 
	#IGNORE_COMM_LATENCY
 1

	)

211 
	#IGNORE_COMM_LATENCY
 0

	)

214 
	#MAGICN
 2000

	)

216 
	#NUMPHASES
 
CLUSTERS


	)

217 
	#MIN_INSN_INT
 10000

	)

218 
	#STOP_EXPL_THRESH
 -5

	)

220 
	#ILPTAGCHECK
 1

	)

221 
	#DISTILP
 120

	)

222 
	#DISTILPTHRESH
 30

	)

223 
	#SAMPLETHRESH
 10

	)

224 
	#BR_INT
 8

	)

225 
	#ILPCLEARINT
 10000000

	)

227 
	#STATPRINT
 0

	)

229 
	#IQBUF
 0

	)

232 
	#CHATTER
 0

	)

233 
	#TOL_COUNT
 0

	)

235 
	#REGFREE
 0

	)

236 
	#FREE_CURR_REGS
 0

	)

237 
	#FREE_INTERVAL
 1

	)

238 
	#DISPDELAY
 0

	)

241 
	#READY_COMM
 1

242 
	#HOLY_REGS
 0

	)

243 
	#NUM_H_REGS
 3

	)

244 
	#COPY_THRESH
 50

	)

246 
	#FIRST_FIT
 0

	)

247 
	#FIRST_FIT_ENFORCE
 0

	)

248 
	#FIRST_VAL
 10000

	)

250 
	#STEER_ENFORCE
 0

	)

251 
	#MOD_N
 0

	)

252 
	#MOD_N_N
 8

	)

254 
	#FIRST_MOD
 0

	)

255 
	#GROUPSIZE
 4

	)

256 
	#MOD_N_T
 2

	)

258 
	#ANYWILLDO
 1

	)

261 
	#NEIGHBOR_SEEK
 (
CLUSTERS
/2)

	)

263 
	#PICKMIDDLE
 0

	)

265 
	#MIDTHRESH
 16

	)

272 
	#FE_LAT
 ((
CLUSTERS
*
HOPTIME
)/2)

	)

273 #ifde‡ 
IGNORE_ALL_COMM_LATENCY


274 
	#MPRED_COMM_LAT
 0

	)

275 
	#CACHE_REFILL_LAT
 0

	)

277 #ifde‡ 
IGNORE_MEM_COMM_LATENCY


278 
	#CACHE_REFILL_LAT
 0

	)

280 
	#CACHE_REFILL_LAT
 1

	)

282 
	#MPRED_COMM_LAT
 1

	)

293 #i‚de‡
NO_COMMUNICATION


294 #i‚de‡
STEER_FU


295 #i‚de‡
STEER_OPRANDS


297 
	#STEER_2NONREADY
 1

	)

298 
	#STEER_CRITICAL
 1

	)

301 
	#STEER_2NONREADY
 0

	)

302 
	#STEER_CRITICAL
 0

	)

305 #ifde‡ 
STEER_OPRANDS


306 
	#STEER_2NONREADY
 0

	)

307 
	#STEER_CRITICAL
 0

	)

311 #ifde‡ 
STEER_RES1


312 
	#ILOAD_MIN
 1

	)

313 
	#RLOAD_MIN
 1

	)

315 
	#ILOAD_MIN
 0

	)

316 
	#RLOAD_MIN
 0

	)

319 
	sli°ñt
 {

320 
	m¥eg
;

321 
li°ñt
 *
	m√xt
;

322 
li°ñt
 *
	m¥ev
;

326 #ifde‡
INST_TRANS_RATE


327 *
lök_width_di°
;

329 
rög1
[
CLUSTERS
][
TIMEWINDOW
];

330 
rög2
[
CLUSTERS
][
TIMEWINDOW
];

331 
rög3
[
CLUSTERS
][
TIMEWINDOW
];

332 
rög4
[
CLUSTERS
][
TIMEWINDOW
];

333 #ifde‡
TRACE_REG


334 *
ªg1
[
CLUSTERS
][
TIMEWINDOW
];

335 *
ªg2
[
CLUSTERS
][
TIMEWINDOW
];

337 
ªg1
[
CLUSTERS
][
TIMEWINDOW
];

338 
ªg2
[
CLUSTERS
][
TIMEWINDOW
];

340 
ªg3
[
CLUSTERS
][
TIMEWINDOW
];

341 
ªg4
[
CLUSTERS
][
TIMEWINDOW
];

	@cmt.c

41 
	~"hódîs.h
"

43 
c⁄ãxt
* 
	$gë_√xt_thªad
()

45 
	}
}

46 
	$ˇlcuœã_¥i‹ôy
()

48 
	}
}

49 
	$ˇlcuœã_öãrvÆ_¥i‹ôy
()

51 
	}
}

52 
	$upd©e_examö_n_limô
()

54 
	}
}

55 
	$n_way_ˇche_ad≠t
()

57 
	}
}

59 
	$MTA_¥ötInfo
(
id
)

61 
	}
}

63 
	$upd©e_n_limô
()

65 
	}
}

66 
	$gíîÆ_°©
()

69 
	}
}

70 
	$°ìr_öô
()

72 
	}
}

74 
	$upd©e_°ìr_li°
()

76 
	}
}

78 
	$gë_˛u°î
(
ö1
, 
ö2
, 
ö3
, 
RUU_°©i⁄
 *
rs
, 
thªadid
)

80 
	}
}

82 
	$check_RUU_LSQ_m©ch
()

84 
	}
}

86 
	$check_ªg
()

88 
	}
}

	@cmt.h

25 
°ìr_öô
();

	@config.h

80 #i‚de‡
CONFIG_H


81 
	#CONFIG_H


	)

	@context.c

1 
	~<°dlib.h
>

2 
	~<°rög.h
>

4 
	~<f˙é.h
>

5 
	~<sys/°©.h
>

6 
	~<sys/ty≥s.h
>

9 
	~"c⁄ãxt.h
"

10 
	~"ªgs.h
"

11 
	~"mem‹y.h
"

13 
	~"smt.h
"

15 
	~"hódîs.h
"

17 #ifde‡
SMT_SS


19 
	gnumc⁄ãxts
 = 0;

20 
c⁄ãxt
 *
	gthec⁄ãxts
[
MAXTHREADS
];

21 
	gMTAc⁄ãxts
 = 0;

23 #ifde‡
PROG_OUT_FROM_SIM_OUT


24 * 
sim_simout
;

28 * 
	$gë_¥og_out_fûe
(c⁄° * 
bnc_vÆue
) {

29 * 
fûíame
;

30 * 
¥og_out_fûe
;

31 * 
simout_íd
;

33 
fûíame
 = 
	`°ºchr
(
bnc_vÆue
, '/');

34 i‡(
fûíame
)

35 ++
fûíame
;

37 
fûíame
=(*Ë
bnc_vÆue
;

41 
¥og_out_fûe
 = 
	`ˇŒoc
(
	`°æí
(
sim_simout
)+°æí(
fûíame
)+1,());

45 
simout_íd
 = 
	`°r°r
(
sim_simout
,".sim_out");

47 i‡(
simout_íd
) {

48 
simouéí
 = 
simout_íd
 - 
sim_simout
 + 1;

49 
	`°∫˝y
(
¥og_out_fûe
,
sim_simout
,
simouéí
);

50 
	`°r˝y
(
¥og_out_fûe
 + 
simouéí
,
fûíame
);

52 
	`•rötf
(
¥og_out_fûe
,"%s.%s",
sim_simout
,
fûíame
);

55  
¥og_out_fûe
;

56 
	}
}

63 
	$ªad_thªad_¨gs
(*
ív
[], *
fûíame
, *
curc⁄ãxt
)

66 
FILE
 *
¨gfûe
;

67 
ªtcode
,
j
,
numthªads
;

68 
loˇrgc
 = 0;

69 
fú°°rög
[256];

70 
c⁄ãxt
 *
cuºít
;

72 if(*
curc⁄ãxt
<0 || *curc⁄ãxt>=
MAXTHREADS
)

74 
	`Ârötf
(
°dîr
,"Eº‹: simuœt‹ suµ‹t†%dÅhªad†⁄ly\n",
MAXTHREADS
);

75 
	`exô
(1);

77 
cuºít
 = 
thec⁄ãxts
[*
curc⁄ãxt
] = (
c⁄ãxt
 *Ë
	`ˇŒoc
(1,(context));

78 if(
cuºít
 =
NULL
)

80 
	`Ârötf
(
°dîr
,"allocation fail inÑead_thread_args\n");

81 
	`exô
(1);

83 
cuºít
->
¨gv
 = (**Ë
	`mÆloc
(30*(*));

84 if(
cuºít
->
¨gv
 =
NULL
)

86 
	`Ârötf
(
°dîr
,"allocation fail inÑead_thread_args\n");

87 
	`exô
(1);

89 
j
=0;j<30;j++)

91 
cuºít
->
¨gv
[
j
] = 
NULL
;

92 
cuºít
->
¨gv
[
j
] = (*Ë
	`mÆloc
(240*());

93 if(
cuºít
->
¨gv
[
j
] =
NULL
)

95 
	`Ârötf
(
°dîr
,"allocation fail inÑead_thread_args\n");

96 
	`exô
(1);

99 
cuºít
->
¨gfûe
 =árgfûê
	`f›í
(
fûíame
, "r");

100 if(
cuºít
->
¨gfûe
 =
NULL
)

102 
	`Ârötf
(
°dîr
,"Eº‹ i¿'c⁄ãxt.c:ªad_thªad_¨gs':- Nÿsuchá bíchm¨k c⁄figuøti⁄ fûe: '%s' \n",
fûíame
);

103 
	`exô
(1);

106 
cuºít
->
¨gv
[0] = (*Ë
	`mÆloc
(240);

107 if(
cuºít
->
¨gv
[0] =
NULL
)

109 
	`Ârötf
(
°dîr
,"allocation fail inÑead_thread_args\n");

110 
	`exô
(1);

113 
cuºít
->
sim_¥ogout
 = (*Ë
	`mÆloc
(240);

114 if(
cuºít
->
sim_¥ogout
 =
NULL
)

116 
	`Ârötf
(
°dîr
,"allocation fail inÑead_thread_args\n");

117 
	`exô
(1);

119 
cuºít
->
sim_¥ogö
 = (*Ë
	`mÆloc
(240);

120 if(
cuºít
->
sim_¥ogö
 =
NULL
)

122 
	`Ârötf
(
°dîr
,"allocation fail inÑead_thread_args\n");

123 
	`exô
(1);

125 
cuºít
->
¨gc
 = 0;

126 
cuºít
->
sim_öputfd
 = 0;

127 
cuºít
->
sim_¥ogfd
 = 
NULL
;

128 
cuºít
->
Á°fwd_cou¡
 = 0;

136 
ªtcode
 = 
	`fsˇnf
(
¨gfûe
, "%s", 
fú°°rög
);

137 i‡(
fú°°rög
[0] != '#') {

138 
cuºít
->
Á°fwd_cou¡
 = 
	`©ﬁl
(
fú°°rög
);

139 
	`fsˇnf
(
¨gfûe
, "%s", 
fú°°rög
);

143 
	`Ârötf
(
°dîr
,"Eº‹ %†fûêfú°Ö¨amëî mu° bêÁ°f‹w¨d di°™˚ \n",
fûíame
);

144 
	`exô
(1);

146 
	`fsˇnf
(
¨gfûe
, "%d", &
numthªads
);

147 if–
numthªads
 < 1 ||Çumthªad†> 
MAXTHREADS
 )

149 
	`Ârötf
(
°dîr
,"Eº‹ %d i†övÆidÇumthªad†ö %s\n",
numthªads
,
fûíame
);

150 
	`exô
(1);

159 
ªtcode
 = 
	`fsˇnf
(
¨gfûe
, "%s", 
cuºít
->
¨gv
[
loˇrgc
]);

160 i‡(
ªtcode
 =
EOF
 || 
cuºít
->
¨gv
[
loˇrgc
][0] == '#')

163 
cuºít
->
‚ame
 = cuºít->
¨gv
[0];

164 if(!
cuºít
->
¨gc
)

165 
cuºít
->
¨gc
 = 
loˇrgc
;

167 
cuºít
->
id
 = cuºít->
ma°îid
 = *
curc⁄ãxt
;

171 
	`ªgs_öô
(&(
cuºít
->
ªgs
));

172 
cuºít
->
ªgs
.
thªadid
 = cuºít->
id
;

174 
cuºít
->
mem
 = 
	`mem_¸óã
("mem");

175 
	`mem_öô
(
cuºít
->
mem
);

176 
cuºít
->
mem
->
thªadid
 = cuºít->
ma°îid
;

180 
cuºít
->
ld_ãxt_ba£
 = 0;

183 
cuºít
->
ld_ãxt_size
 = 0;

186 
cuºít
->
ld_d©a_ba£
 = 0;

189 
cuºít
->
ld_brk_poöt
 = 0;

192 
cuºít
->
ld_d©a_size
 = 0;

195 
cuºít
->
ld_°ack_ba£
 = 0;

198 
cuºít
->
ld_°ack_size
 = 0;

201 
cuºít
->
ld_°ack_mö
 = -1;

204 
cuºít
->
ld_¥og_‚ame
 = 
NULL
;

207 
cuºít
->
ld_¥og_íåy
 = 0;

210 
cuºít
->
ld_ívú⁄_ba£
 = 0;

213 
cuºít
->
ld_èrgë_big_ídün
 = 0;

217 
cuºít
->
sim_eio_‚ame
 = 
NULL
;

218 
cuºít
->
sim_chk±_‚ame
 = 
NULL
;

219 
cuºít
->
sim_eio_fd
 = 
NULL
;

225 
cuºít
->
owödow_hód
 = 0;

228 
cuºít
->
sim_num_ö¢
 = 0;

230 
cuºít
->
sim_tŸÆ_ö¢
 = 0;

232 
cuºít
->
„tch_num_ö¢
 = 0;

234 
cuºít
->
„tch_tŸÆ_ö¢
 = 0;

236 
cuºít
->
sim_num_ªfs
 = 0;

238 
cuºít
->
sim_tŸÆ_ªfs
 = 0;

240 
cuºít
->
sim_num_lﬂds
 = 0;

242 
cuºít
->
sim_tŸÆ_lﬂds
 = 0;

244 
cuºít
->
sim_num_bønches
 = 0;

246 
cuºít
->
sim_tŸÆ_bønches
 = 0;

252 
cuºít
->
ö°_£q
 = 0;

254 
cuºít
->
±ø˚_£q
 = 0;

259 
cuºít
->
•ec_mode
 = 
FALSE
;

261 
cuºít
->
ruu_„tch_issue_dñay
 = 0;

262 
cuºít
->
waô_f‹_„tch
 = 0;

264 #ifde‡
CACHE_MISS_STAT


265 
cuºít
->
•ec_rdb_miss_cou¡
 = 0;

266 
cuºít
->
•ec_wrb_miss_cou¡
 = 0;

267 
cuºít
->
n⁄_•ec_rdb_miss_cou¡
 = 0;

268 
cuºít
->
n⁄_•ec_wrb_miss_cou¡
 = 0;

269 
cuºít
->
ö°_miss_cou¡
 = 0;

270 
cuºít
->
lﬂd_miss_cou¡
 = 0;

271 
cuºít
->
°‹e_miss_cou¡
 = 0;

274 
cuºít
->
„tch_num_thrd
 = 0;

275 
cuºít
->
iissueq_thrd
 = 0;

276 
cuºít
->
fissueq_thrd
 = 0;

277 
cuºít
->
icou¡_thrd
 = 0;

281 
cuºít
->
œ°_›
.
√xt
 = 
NULL
;

282 
cuºít
->
œ°_›
.
rs
 = 
NULL
;

283 
cuºít
->
œ°_›
.
èg
 = 0;

284 
cuºít
->
„tch_ªdúe˘ed
 = 
FALSE
;

285 
cuºít
->
buckë_‰ì_li°
 = 
NULL
;

287 
	`Ârötf
(
°dîr
, "thªad %d %s\n", *
curc⁄ãxt
, 
cuºít
->
¨gv
[0]);

288 
loˇrgc
 = 0;

289 
cuºít
->
ru¬ög
 = 1;

290 
cuºít
->
föish_cy˛e
 = 0;

291 
cuºít
->
∑ª¡
 = -1;

292 
cuºít
->
num_chûd
 = 0;

294 
cuºít
->
isFFd⁄e
 = 0;

296 #ifde‡ 
COLLECT_STAT_STARTUP


297 
cuºít
->
Á°fwd_d⁄e
 = 0;

298 
cuºít
->
b¨rõrRóched
 = 0;

299 
cuºít
->
°¨tRóched
 = 0;

301 #ifdef 
EDA


302 
cuºít
->
¥edQueue
 = 
NULL
;

303 
cuºít
->
lockSètus
 = 0;

304 
cuºít
->
boqIndex
 = -1;

307 (*
curc⁄ãxt
)++;

310 i‡(
cuºít
->
¨gv
[
loˇrgc
][0] == '<')

312 if(!
cuºít
->
¨gc
)

313 
cuºít
->
¨gc
 = 
loˇrgc
;

314 
	`fsˇnf
(
¨gfûe
, "%s", 
cuºít
->
sim_¥ogö
);

315 
cuºít
->
sim_öputfd
 = 
	`›í
(cuºít->
sim_¥ogö
,
O_RDONLY
,0666);

316 i‡(
cuºít
->
sim_öputfd
 < 0 )

318 
	`Áèl
("thªad %d, u«bÀÅÿªdúe˘Örogøm i≈uàtÿfûê`%s'", 
cuºít
->
id
, cuºít->
sim_¥ogö
);

319 
	`exô
(1);

323 i‡(
cuºít
->
¨gv
[
loˇrgc
][0] == '>')

325 if(!
cuºít
->
¨gc
)

326 
cuºít
->
¨gc
 = 
loˇrgc
;

327 
	`fsˇnf
(
¨gfûe
, "%s", 
cuºít
->
sim_¥ogout
);

328 #ifde‡
PROG_OUT_FROM_SIM_OUT


329 
cuºít
->
sim_¥ogout
 = 
	`gë_¥og_out_fûe
(current->sim_progout);

331 
cuºít
->
sim_¥ogfd
 = 
	`f›í
(cuºít->
sim_¥ogout
, "w");

332 i‡(!
cuºít
->
sim_¥ogfd
)

334 
	`Áèl
("thªad %d, u«bÀÅÿªdúe˘Örogøm ouçuàtÿfûê`%s'", 
cuºít
->
id
, cuºít->
sim_¥ogout
);

335 
	`exô
(1);

339 
loˇrgc
++;

342 
	}
}

	@context.h

1 #i‚de‡
CONTEXT_H


3 
	#CONTEXT_H


	)

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<°dio.h
>

9 
	~"ho°.h
"

10 
	~"misc.h
"

11 
	~"machöe.h
"

12 
	~"ídün.h
"

13 
	~"ªgs.h
"

14 
	~"mem‹y.h
"

15 
	~"sim.h
"

16 
	~"eio.h
"

17 
	~"lﬂdî.h
"

18 
	~"b¥ed.h
"

19 
	~"bôm≠.h
"

21 
	~"powî.h
"

22 
	~"smt.h
"

23 
	~"bønchC‹r.h
"

30 
	#COLLECT_STAT_STARTUP


	)

37 
	#STATUS_NUM
 50

	)

38 
	#THREADS_PER_JOB
 
MAXTHREADS


	)

39 #ifdef 
COLLECT_STAT_STARTUP


40 
	gthrdPîJobC¡
;

43 #ifdef 
EDA


44 
	sp¢_°ru˘


46 
	mdúty
;

47 
qw‹d_t
 
	md©a
;

50 
	#TYPE_INST_REMOVED
 0

	)

51 
	#TYPE_INST_INCLUDED
 1

	)

52 
	#TYPE_BR_NOTTAKEN
 2

	)

53 
	#TYPE_BR_TAKEN
 3

	)

54 
	#TYPE_LOCK_ACQUIRE
 4

	)

55 
	#TYPE_INST_PREFETCH
 5

	)

56 
	#TYPE_INST_BARRIER
 6

	)

57 
	#TYPE_INST_BARRIER_END
 7

	)

60 
	#DL0_CLEAUP_INTERVAL
 4096

	)

64 
	s‹a˛e_°‹e_queue


66 
md_addr_t
 
	mPC
;

67 
	mmemWidth
;

68 
md_addr_t
 
	mmemAddr
;

69 
qw‹d_t
 
	mmemD©a
;

70 
cou¡î_t
 
	msim_num_ö¢
;

71 
cou¡î_t
 
	msim_cy˛e
;

72 
	misExecuãd
;

75 
	#OSQ_size
 5000

	)

77 #ifde‡
DECOUPLED_PREFETCH


78 
	#PREFETCH_QUEUE_SIZE
 128

	)

79 
	#PREFETCH_DELAY_GUARD
 20

82 

	)

85 
	#PROG_OUT_FROM_SIM_OUT


	)

87 #ifde‡
SMT_SS


88 
	#STACKSIZE
 0x90000

	)

89 
MTAc⁄ãxts
;

90 
	sÃeg_id_t


92 
	mthªadid
;

93 
	mÃeg
;

97 
	#OWINDOWSIZE
 360

	)

98 
	#HOPTIME
 1

	)

99 
	#COMM_LATENCY
 ((
CLUSTERS
*
HOPTIME
)/2)

	)

105 
	tINST_TAG_TYPE
;

110 
	tINST_SEQ_TYPE
;

113 
	#MAX_IDEPS
 3

	)

116 
	#MAX_ODEPS
 2

	)

118 
	#SèŒRUUFuŒ
 1

	)

119 
	#SèŒLQFuŒ
 2

	)

120 
	#SèŒSQFuŒ
 3

	)

121 
	#SèŒRegFuŒ
 4

	)

122 
	#SèŒIssueFuŒ
 5

	)

123 
	#SèŒFëchEm±y
 6

	)

124 
	#SèŒSTLC
 8

	)

125 
	#SèŒTøp
 10

	)

140 
	sRUU_°©i⁄


143 
	mödex
;

144 
	mthªadid
;

145 
md_ö°_t
 
	mIR
;

146 
md_›code
 
	m›
;

147 
md_addr_t
 
	mPC
, 
	m√xt_PC
, 
	m¥ed_PC
;

148 
	mö_LSQ
;

149 
	mó_comp
;

150 
	mªcovî_ö°
;

151 
	m°ack_ªcovî_idx
;

152 
b¥ed_upd©e_t
 
	mdú_upd©e
;

153 
	m•ec_mode
;

154 
md_addr_t
 
	maddr
;

155 
	mmiss_Êag
;

156 
INST_TAG_TYPE
 
	mèg
;

158 
INST_SEQ_TYPE
 
	m£q
;

160 
	m±ø˚_£q
;

162 
	mdu∂iˇã
;

163 
	m¥ef_Êag
;

166 
	mqueued
;

167 
	missued
;

168 
	mcom∂ëed
;

171 
quad_t
 
	mvÆ_ø
, 
	mvÆ_rb
, 
	mvÆ_rc
, 
	mvÆ_ø_ªsu…
;

176 
	m⁄ames
[
MAX_ODEPS
];

177 
RS_lök
 *
	modï_li°
[
MAX_ODEPS
];

185 
	midï_ªady
[
MAX_IDEPS
];

186 
	mwhí_idï_ªady
[
MAX_IDEPS
];

187 
	midï_«me
[
MAX_IDEPS
];

189 
RUU_°©i⁄
 *
	m¥od
[
MAX_IDEPS
];

190 
cou¡î_t
 
	mdi•_time
;

191 
cou¡î_t
 
	mföish_time
;

192 
	mˇche_ªady
;

193 
cou¡î_t
 
	m„tch_time
;

194 
cou¡î_t
 
	mcommô_time
;

195 
cou¡î_t
 
	missue_time
;

196 
	mövÆid©i⁄Re˚ived
;

198 
	mout1
, 
	mö1
, 
	mö2
, 
	mö3
;

200 
	mﬁd¥eg
;

201 
	m›ªg
;

203 
	m˛u°î
;

204 
	mwhí_ªady
[
MAX_IDEPS
];

205 
	mwhí_öq
;

206 
	mpb™k
;

207 
	mab™k
;

208 
	mö_qwaô
;

209 
	m‰ìd
;

210 
	mùªg
[
MAX_IDEPS
];

212 
	m°_ªach
[
CLUSTERS
];

213 
	mö°num
;

214 
	mdi°issue
;

216 
	mcou¡ed_iissueq
;

217 
	mcou¡ed_fissueq
;

218 #ifde‡
PWR_WAKE


219 
	mcou¡ed_úódy
;

220 
	mcou¡ed_‰ódy
;

221 
	mcou¡ed_lsqªady
;

223 #ifde‡
COUNT_LSQ


224 
	mcou¡ed_n⁄_issue_lsq
;

227 #ifde‡
RAW


228 
	mcou¡ed_øwq
[
CLUSTERS
];

231 #ifde‡
CACHE_MISS_STAT


232 
	m•ec_rdb_miss
;

233 
	m•ec_wrb_miss
;

236 #ifde‡
LOAD_PREDICTOR


237 
	mcou¡ed_miss
;

238 
	mlﬂd_hô
;

239 
	mld¥ed_hô
;

242 #ifde‡
SELECTIVE_DISPATCH_GATE


243 
	m˛u°î_assig√d
;

244 
	mouçut1
, 
	mout2
;

247 #ifde‡
N_WAY_CACHE_ADAPT


248 
	mn_ˇche_limô_ö°
;

251 #ifde‡
UNREADY_DISPATCH_STAT


252 
	mcou¡ed_uƒódy_di•©ch
;

254 
	mÁu…ög_ö°r
;

255 
	mwr⁄gCy˛e
;

256 
	mdl2_mis£d
;

257 
cou¡î_t
 
	msim_num_ö¢
;

258 
	moutReg
;

259 
qw‹d_t
 
	m¥evRegVÆ
;

260 
ªgs_t
 
	m¥evReg
;

262 
cou¡î_t
 
	msqSt‹eF‹w¨dT
;

266 
hÆf_t
 
	mushFœg
;

268 
hÆf_t
 
	mushS≥cLdDñay
;

272 
	mª∂ayThisE¡ry
, 
	míåyRïœyed
;

274 
	mldAc˚ssFœg
;

275 
ªgs_t
 
	mbackupReg
;

276 
	mrobE¡ry
;

277 
	mlsqE¡ry
;

278 
	misPª„tch
;

279 
	misL1Miss
;

280 
	mwrôewaô
;

281 
	mRódSh¨eDú
;

282 
	mwrôemiss
;

283 
	mªadA·îWrôe
;

284 
	mSTL_C_Áû
;

286 #ifdef 
EDA


287 
quad_t
 
	mo_vÆ_ø
, 
	mo_vÆ_rb
, 
	mo_vÆ_rc
;

288 
p¢_°ru˘
 
	mpois⁄
[3];

289 
	mboqIndex
;

290 
	mlockSètus
;

291 
	mö°Ty≥
;

292 
	misWr⁄gP©h
;

293 
md_addr_t
 
	mÆtPC
;

294 
	mch™geS≥cMode
;

296 
	misSyncIn°
;

297 
	misSyncIn°B¨
;

298 
	misSyncIn°B¨Rñ
;

302 
	#PHY_TOTAL_REGS
 1024

	)

316 
	sRS_lök
 {

317 
RS_lök
 *
	m√xt
;

318 
RUU_°©i⁄
 *
	mrs
;

319 
INST_TAG_TYPE
 
	mèg
;

321 
tick_t
 
	mwhí
;

322 
INST_SEQ_TYPE
 
	m£q
;

323 
	m›num
;

324 } 
	mx
;

325 
cou¡î_t
 
	mœ°_u£
;

326 
cou¡î_t
 
	mrs_lök_id
;

328 
	#RSLINK_NULL_DATA
 { 
NULL
, NULL, 0 }

	)

331 
	sCV_lök
 {

332 
RUU_°©i⁄
 *
	mrs
;

333 
	modï_num
;

336 
	sRS_li°
 {

337 
RS_li°
 *
	m√xt
;

338 
RUU_°©i⁄
 *
	mrs
;

339 
tick_t
 
	mwhí
;

340 
	m•ec_mode
;

341 
	m¥ef_mode
;

345 
	swb_mem_ít
 {

346 
wb_mem_ít
 *
	m√xt
;

347 
md_addr_t
 
	mö°r
;

348 
md_addr_t
 
	mPC
;

349 
md_addr_t
 
	maddr
;

350 
	md©a
[2];

351 
	mnbyãs
;

352 
cou¡î_t
 
	msim_num_ö¢
;

353 
cou¡î_t
 
	mdi•_time
;

354 
	mlsqId
;

355 
cou¡î_t
 
	mcom∂ëeCy˛e
;

356 
wb_mem_ít
 *
	m¥ev
;

357 
	mis_STL_C
;

358 
	m√edBusAc˚ss
;

359 
	mac˚s£d
;

360 
	mwrôeAÃódyD⁄e
;

364 
	#STORE_HASH_SIZE
 32

	)

369 
	s•ec_mem_ít
 {

370 
•ec_mem_ít
 *
	m√xt
;

371 
md_addr_t
 
	maddr
;

372 
	md©a
[2];

378 
	s„tch_ªc


380 
	mödex
;

381 
	mthªadid
;

382 
	m„tch_time
;

383 
md_ö°_t
 
	mIR
;

384 
md_addr_t
 
	mªgs_PC
, 
	m¥ed_PC
;

385 
b¥ed_upd©e_t
 
	mdú_upd©e
;

386 
	m°ack_ªcovî_idx
;

387 
	m±ø˚_£q
;

389 
	mis_˘æ2
 : 1;

390 
	mis_dup
;

391 #ifdef 
EDA


392 
	mboqIndex
;

393 
	mlockSètus
;

397 
	sc⁄ãxt_t


399 
	mru¬ög
;

400 
	mföish_cy˛e
;

401 
	m°¨t_cy˛e
;

402 
	mid
;

408 
	mma°îid
;

409 
	m∑ª¡
;

410 
	mnum_chûd
;

411 
	mnum_chûd_a˘ive
;

412 
	mÁ°fwd_cou¡
;

413 #ifdef 
COLLECT_STAT_STARTUP


414 
	mÁ°fwd_d⁄e
;

415 
	mb¨rõrRóched
;

416 
	m°¨tRóched
;

417 
	mjobThdId
;

418 
	mhñpThdId
;

419 
	m‹a˛eId
;

421 
FILE
 *
	m¨gfûe
;

422 *
	msim_¥ogout
;

423 *
	msim_¥ogö
;

424 
FILE
 *
	msim_¥ogfd
;

425 
	msim_öputfd
;

428 *
	m‚ame
;

429 **
	m¨gv
;

430 
	m¨gc
;

433 
ªgs_t
 
	mªgs
;

436 
mem_t
 *
	mmem
;

441 
md_addr_t
 
	mld_ãxt_ba£
 ;

444 
	mld_ãxt_size
 ;

447 
md_addr_t
 
	mld_d©a_ba£
 ;

450 
md_addr_t
 
	mld_brk_poöt
 ;

453 
	mld_d©a_size
 ;

456 
md_addr_t
 
	mld_°ack_ba£
 ;

459 
	mld_°ack_size
 ;

462 
md_addr_t
 
	mld_°ack_mö
 ;

465 *
	mld_¥og_‚ame
 ;

468 
md_addr_t
 
	mld_¥og_íåy
;

471 
md_addr_t
 
	mld_ívú⁄_ba£
 ;

474 
	mld_èrgë_big_ídün
;

478 *
	msim_eio_‚ame
;

479 *
	msim_chk±_‚ame
;

480 
FILE
 *
	msim_eio_fd
;

483 
	msim_sw≠_byãs
;

484 
	msim_sw≠_w‹ds
;

491 
	mﬁdwödowûp
[
OWINDOWSIZE
];

492 
	mﬁdwödowbr
[
OWINDOWSIZE
];

493 
	mﬁdwödowpc
[
OWINDOWSIZE
];

494 
	mowödow_hód
;

496 
	m…›m≠
[
MD_TOTAL_REGS
];

497 
	m…›m≠_ﬁd
[
MD_TOTAL_REGS
][
CLUSTERS
][
COMM_LATENCY
];

498 
	mÕrod
[
MD_TOTAL_REGS
];

499 
	mÕrod_rd
[
MD_TOTAL_REGS
];

500 
	m…›m≠_chk
[
MD_TOTAL_REGS
];

501 
	mÕrod_chk
[
MD_TOTAL_REGS
];

502 
	mÕrod_rd_chk
[
MD_TOTAL_REGS
];

504 
Ãeg_id_t
 
	m±ﬁm≠
[
PHY_TOTAL_REGS
];

505 
Ãeg_id_t
 
	mc⁄sumîs
[
PHY_TOTAL_REGS
];

506 
Ãeg_id_t
 
	m±ﬁm≠_chk
[
PHY_TOTAL_REGS
];

509 
cou¡î_t
 
	msim_num_ö¢
;

512 
cou¡î_t
 
	msim_tŸÆ_ö¢
;

515 
cou¡î_t
 
	m„tch_num_ö¢
;

518 
cou¡î_t
 
	m„tch_tŸÆ_ö¢
;

521 
cou¡î_t
 
	msim_num_ªfs
;

524 
cou¡î_t
 
	msim_tŸÆ_ªfs
;

527 
cou¡î_t
 
	msim_num_lﬂds
;

530 
cou¡î_t
 
	msim_tŸÆ_lﬂds
;

533 
cou¡î_t
 
	msim_num_bønches
;

536 
cou¡î_t
 
	msim_tŸÆ_bønches
;

539 
cou¡î_t
 
	msim_övÆid_addrs
;

546 
	mö°_£q
;

549 
	m±ø˚_£q
;

555 
	m•ec_mode
;

557 
	m¥ef_mode
;

561 
	mÁu…_mode
;

564 
	mruu_„tch_issue_dñay
;

565 
	mwaô_f‹_„tch
;

569 
RUU_°©i⁄
 *
	mRUU
;

570 
	mRUU_hód
, 
	mRUU_èû
;

571 
	mRUU_num
;

572 
cou¡î_t
 
	mRUU_cou¡_thrd
;

573 
cou¡î_t
 
	mRUU_fcou¡_thrd
;

576 
RUU_°©i⁄
 *
	mLSQ
;

577 
	mLSQ_hód
, 
	mLSQ_èû
;

578 
	mLSQ_num
;

579 
	mLSQ_cou¡
;

580 
	mLSQ_fcou¡
;

581 
	mm_shLQNum
;

582 
	mm_shSQNum
;

585 
	m„tch_num_thrd
;

586 
	miissueq_thrd
;

587 
	mfissueq_thrd
;

588 #ifde‡
COUNT_LSQ


589 
	mn⁄_issue_lsq_thrd
;

590 
	mlsq_thrd
;

592 
	micou¡_thrd
;

597 #i‚de‡
TEST_BUG


598 
BITMAP_TYPE
(
MD_TOTAL_REGS
, 
u£_•ec_cv
);

599 
BITMAP_TYPE
(
MD_NUM_IREGS
, 
u£_•ec_R
);

600 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_F
);

601 
BITMAP_TYPE
(
MD_NUM_FREGS
, 
u£_•ec_C
);

603 
CV_lök
 
	m¸óã_ve˘‹
[
MD_TOTAL_REGS
];

604 
CV_lök
 
	m•ec_¸óã_ve˘‹
[
MD_TOTAL_REGS
];

608 
tick_t
 
	m¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

609 
tick_t
 
	m•ec_¸óã_ve˘‹_π
[
MD_TOTAL_REGS
];

612 
md_g¥_t
 
	m•ec_ªgs_R
;

615 
md_Âr_t
 
	m•ec_ªgs_F
;

618 
md_˘æ_t
 
	m•ec_ªgs_C
;

621 
md_addr_t
 
	m¥ed_PC
;

622 
md_addr_t
 
	mªcovî_PC
;

625 
md_addr_t
 
	m„tch_ªgs_PC
;

626 
md_addr_t
 
	m„tch_¥ed_PC
;

630 
RS_lök
 
	mœ°_›
;

633 
•ec_mem_ít
 *
	m°‹e_hèbÀ
[
STORE_HASH_SIZE
];

635 
•ec_mem_ít
 *
	mbuckë_‰ì_li°
;

638 
wb_mem_ít
 *
	mWBèbÀHód
;

639 
wb_mem_ít
 *
	mWBèbÀTaû
;

641 
wb_mem_ít
 *
	mWBbuckë_‰ì_li°
;

645 
	m„tch_ªdúe˘ed
;

648 #ifde‡ 
DELAY_STAT


649 
	m„tch_dñay_°©
;

650 
	mmax_„tch_dñay_°©
;

653 #ifde‡
CACHE_MISS_STAT


654 
	m•ec_rdb_miss_cou¡
;

655 
	m•ec_wrb_miss_cou¡
;

656 
	mn⁄_•ec_rdb_miss_cou¡
;

657 
	mn⁄_•ec_wrb_miss_cou¡
;

658 
	mö°_miss_cou¡
;

659 
	mlﬂd_miss_cou¡
;

660 
	m°‹e_miss_cou¡
;

663 #ifde‡
LOAD_PREDICTOR


664 
	mld_miss
;

665 
	ma˘ive
;

668 #ifde‡
SELECTIVE_DISPATCH_GATE


669 
	mdi•©ch_blocked
;

670 
cou¡î_t
 
	mdi•_block_time
;

673 #ifde‡
UNREADY_DISPATCH_STAT


674 
	muƒódy_di•©ch
;

676 
md_addr_t
 
	m°ack_ba£
;

679 
	mnumDL1CacheAc˚ss
;

680 
	mnumLoˇlHôs
;

681 
	mnumRemŸeHôs
;

682 
	mnumMemAc˚ss
;

683 
	mnumRódCacheAc˚ss
;

684 
	mnumWrôeCacheAc˚ss
;

685 
	mnumInvÆid©i⁄s
;

686 
	mnumDL1Hôs
;

687 
	mnumDL1Mis£s
;

688 
	mnumIn¢
;

693 *
	mbønch_addªss2
;

694 
	mbønch_hód2
, 
	mbønch_èû2
;

695 
	mmy_œ°_èg
;

696 
	mcy˛e_mask
;

697 
	mœãncy_Á˘‹
;

698 
	ma˘ive_this_cy˛e
;

699 
	mpcb_≥«…y
;

700 
	mmaö_thªad
;

701 
powî_ªsu…_ty≥
 
	mpowî
;

704 
cou¡î_t
 
	mª«me_ac˚ss
;

705 
cou¡î_t
 
	miqøm_ac˚ss
;

706 
cou¡î_t
 
	mfqøm_ac˚ss
;

707 
cou¡î_t
 
	mrob1_ac˚ss
;

708 
cou¡î_t
 
	mrob2_ac˚ss
;

709 
cou¡î_t
 
	mb¥ed_ac˚ss
;

710 
cou¡î_t
 
	miwakeup_ac˚ss
;

711 
cou¡î_t
 
	mfwakeup_ac˚ss
;

712 
cou¡î_t
 
	mi£À˘i⁄_ac˚ss
;

713 
cou¡î_t
 
	mf£À˘i⁄_ac˚ss
;

714 
cou¡î_t
 
	múegfûe_ac˚ss
;

715 
cou¡î_t
 
	m‰egfûe_ac˚ss
;

717 
cou¡î_t
 
	mlsq_ac˚ss
;

718 
cou¡î_t
 
	miˇche_ac˚ss
;

719 
cou¡î_t
 
	mdˇche_ac˚ss
;

720 
cou¡î_t
 
	mdˇche2_ac˚ss
;

721 
cou¡î_t
 
	möput_buf_ac˚ss
;

722 
cou¡î_t
 
	mouçut_buf_ac˚ss
;

723 
cou¡î_t
 
	miˇche2_ac˚ss
;

725 
cou¡î_t
 
	mülu1_ac˚ss
;

726 
cou¡î_t
 
	mülu2_ac˚ss
;

727 
cou¡î_t
 
	mÁlu1_ac˚ss
;

728 
cou¡î_t
 
	mÁlu2_ac˚ss
;

729 
cou¡î_t
 
	múesu…bus_ac˚ss
;

730 
cou¡î_t
 
	m‰esu…bus_ac˚ss
;

731 
cou¡î_t
 
	mlsq_¥eg_ac˚ss
;

732 
cou¡î_t
 
	mlsq_wakeup_ac˚ss
;

734 
	misFFd⁄e
;

737 
b¥ed_t
 *
	m¥ed
;

738 
„tch_ªc
 *
	m„tch_d©a
[128];

739 
	m„tch_num
;

740 
	m„tch_èû
, 
	m„tch_hód
;

743 
	mTŸÆnumDL1CacheAc˚ss
;

744 
	mTŸÆnumLoˇlHôs
;

745 
	mTŸÆnumRemŸeHôs
;

746 
	mTŸÆnumMemAc˚ss
;

747 
	mTŸÆnumRódCacheAc˚ss
;

748 
	mTŸÆnumWrôeCacheAc˚ss
;

749 
	mTŸÆnumInvÆid©i⁄s
;

750 
	mTŸÆnumDL1Hôs
;

751 
	mTŸÆnumDL1Mis£s
;

752 
	mTŸÆnumIn¢
;

753 
	mNRLoˇlHôsLﬂd
;

754 
	mNRRemŸeHôsLﬂd
;

755 
	mNRMissLﬂd
;

756 
	mNRLoˇlHôsSt‹e
;

757 
	mNRRemŸeHôsSt‹e
;

758 
	mNRMissSt‹e
;

759 
	m¥e£¡
;

762 
	mnumIn°rB¨rõr
;

763 
	mnumCy˛eB¨rõr
;

764 
	mtŸÆB¨rõrIn°r
;

765 
	mtŸÆB¨rõrCy˛e
;

767 
	mnumIn°rLock
;

768 
	mnumCy˛eLock
;

769 
	mtŸÆLockIn°r
;

770 
	mtŸÆLockCy˛e
;

772 
	mL0Buf„rHôs
;

773 
	mTŸÆLﬂds
;

775 
	mD©aLoˇt‹Hô
;

776 
	mD©aLoˇt‹Miss
;

778 
	m¶ïtAt
;

779 
	m‰ìze
;

780 
	m°ÆlThªad
;

781 
	mwaôF‹
;

782 
	m©MB
;

783 
	mwaôF‹STLC
;

784 
	mnumOfWBE¡ry
;

785 
	mWBFuŒ
;

786 
	mwaôF‹BønchResﬁve
;

787 
	mwaôF‹Pª„tchInfo
;

788 
	mlﬂdL©ícy
;

789 
	mnumLﬂds
;

790 
	m°›Thªad
;

791 
	ma˘uÆid
;

792 
	mffSèŒ
;

793 
	mloˇlSubEpoch
;

794 
	mœ°SubEpochSìn
[32];

795 #ifdef 
EDA


796 
bønchC‹r
 *
	m¥edQueue
;

797 
quad_t
 
	mo_vÆ_ø
, 
	mo_vÆ_rb
, 
	mo_vÆ_rc
;

798 
	mboqIndex
;

799 
	mlockSètus
;

800 
md_addr_t
 
	mlockExôPC
;

802 
DIRECTORY_EVENT
 *
	mevít
;

803 } 
	tc⁄ãxt
;

805 
numc⁄ãxts
;

806 
c⁄ãxt
 *
thec⁄ãxts
[
MAXTHREADS
];

809 
	ssh¨edAddªssLi°_s
 {

810 
	maddªss
;

811 
	msize
;

812 
sh¨edAddªssLi°_s
 * 
	m√xt
;

815 
sh¨edAddªssLi°_s
 *
	gsh¨edAddªssLi°
[512];

822 
ªad_thªad_¨gs
(*
ív
[], *
fûíame
, *
curc⁄ãxt
);

824 
upd©e_powî_°©s
(
powî_ªsu…_ty≥
, , 
c⁄ãxt
*);

	@def.h

57 
	#LONG
 1

	)

58 
	#SHORT
 2

	)

60 
	#OUTPUTTYPE
 
LONG


	)

66 
	#ADDRESS_BITS
 32

	)

67 
	#BITOUT
 64

	)

72 
	#MAXN
 8

	)

73 
	#MAXSUBARRAYS
 8

	)

74 
	#MAXSPD
 8

	)

83 
	#FUDGEFACTOR
 4.4

	)

99 
	#Cw‹dmëÆ
 1.8e-15

	)

100 
	#CbômëÆ
 4.4e-15

	)

101 
	#CndifÁªa
 0.137e-15

	)

102 
	#CpdifÁªa
 0.343e-15

	)

103 
	#Cndiffside
 0.275e-15

	)

104 
	#Cpdiffside
 0.275e-15

	)

105 
	#CndiffovÕ
 0.138e-15

	)

106 
	#CpdiffovÕ
 0.138e-15

	)

107 
	#CnoxideovÕ
 0.263e-15

	)

108 
	#CpoxideovÕ
 0.338e-15

	)

109 
	#Leff
 0.8

	)

110 
	#Cg©e
 (1.95e-15Ë

	)

111 
	#Cg©ïass
 1.45e-15

	)

115 
	#Cpﬁywúe
 0.25e-15

	)

116 
	#Rnch™√l°©ic
 25800

	)

117 
	#Rpch™√l°©ic
 61200

	)

118 
	#Rnch™√l⁄
 9723

	)

119 
	#Rpch™√l⁄
 22400

	)

120 
	#RbômëÆ
 0.320

	)

121 
	#Rw‹dmëÆ
 0.080

	)

122 
	#Vdd
 5

	)

127 
	#VSINV
 0.456

	)

128 
	#VTHINV100x60
 0.438

	)

129 
	#VTHNAND60x90
 0.561

	)

130 
	#VTHNOR12x4x1
 0.503

	)

131 
	#VTHNOR12x4x2
 0.452

	)

132 
	#VTHNOR12x4x3
 0.417

	)

133 
	#VTHNOR12x4x4
 0.390

	)

134 
	#VTHOUTDRINV
 0.437

	)

135 
	#VTHOUTDRNOR
 0.431

	)

136 
	#VTHOUTDRNAND
 0.441

	)

137 
	#VTHOUTDRIVE
 0.425

	)

138 
	#VTHCOMPINV
 0.437

	)

139 
	#VTHMUXDRV1
 0.437

	)

140 
	#VTHMUXDRV2
 0.486

	)

141 
	#VTHMUXDRV3
 0.437

	)

142 
	#VTHEVALINV
 0.267

	)

146 
	#Wdecdrivï
 100.0

	)

147 
	#Wdecdriví
 60.0

	)

148 
	#Wdec3to8n
 90.0

	)

149 
	#Wdec3to8p
 60.0

	)

150 
	#WdecNORn
 2.4

	)

151 
	#WdecNORp
 12.0

	)

152 
	#Wdecövn
 5.0

	)

153 
	#Wdecövp
 10.0

	)

154 
	#Ww‹ddrivemax
 100.0

	)

155 
	#Wmem˚Œa
 2.4

	)

156 
	#Wmem˚ŒbsˇÀ
 2

	)

157 
	#Wbô¥ìqu
 80.0

	)

158 
	#Wbômuxn
 10.0

	)

159 
	#W£n£Q1to4
 4.0

	)

160 
	#Wcompövp1
 10.0

	)

161 
	#Wcompövn1
 6.0

	)

162 
	#Wcompövp2
 20.0

	)

163 
	#Wcompövn2
 12.0

	)

164 
	#Wcompövp3
 40.0

	)

165 
	#Wcompövn3
 24.0

	)

166 
	#WevÆövp
 20.0

	)

167 
	#WevÆövn
 80.0

	)

169 
	#Wcom≤
 10.0

	)

170 
	#Wcomµ
 30.0

	)

171 
	#Wmuxdrv12n
 30.0

	)

172 
	#Wmuxdrv12p
 50.0

	)

173 
	#WmuxdrvNORn
 20.0

	)

174 
	#WmuxdrvNORp
 80.0

	)

175 
	#Wmuxdrv3n
 120.0

	)

176 
	#Wmuxdrv3p
 200.0

	)

177 
	#Woutdrv£ 
 12.0

	)

178 
	#Woutdrv£Õ
 20.0

	)

179 
	#Woutdrv«ndn
 24.0

	)

180 
	#Woutdrv«ndp
 10.0

	)

181 
	#Woutdrvn‹n
 6.0

	)

182 
	#Woutdrvn‹p
 40.0

	)

183 
	#Woutdrivîn
 48.0

	)

184 
	#Woutdrivîp
 80.0

	)

188 
	#kri£
 0.4e-9

	)

189 
	#t£n£d©a
 5.8e-10

	)

190 
	#t£n£èg
 2.6e-10

	)

191 
	#tÁŒd©a
 7e-10

	)

192 
	#tÁŒèg
 7e-10

	)

193 
	#Vbô¥e
 3.3

	)

194 
	#Vt
 1.09

	)

195 
	#Vbô£n£
 0.10

	)

196 
	#BôWidth
 8.0

	)

197 
	#BôHeight
 16.0

	)

198 
	#Cout
 0.5e-12

	)

207 
	#TRUE
 1

	)

208 
	#FALSE
 0

	)

209 
	#NULL
 0

	)

210 
	#OK
 1

	)

211 
	#ERROR
 0

	)

212 
	#BIGNUM
 1e30

	)

213 
	#DIVIDE
(
a
,
b
Ë((b)==0)? 0:◊)/(b)

	)

214 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

218 
	#RISE
 1

	)

219 
	#FALL
 0

	)

220 
	#NCH
 1

	)

221 
	#PCH
 0

	)

227 
	mˇche_size
;

228 
	mnumbî_of_£ts
;

229 
	massocütivôy
;

230 
	mblock_size
;

231 } 
	t∑ømëî_ty≥
;

234 
	mac˚ss_time
,
	mcy˛e_time
;

235 
	mbe°_Ndwl
,
	mbe°_Ndbl
;

236 
	mbe°_N•d
;

237 
	mbe°_Ntwl
,
	mbe°_Ntbl
;

238 
	mbe°_Nt•d
;

239 
	mdecodî_dñay_d©a
,
	mdecodî_dñay_èg
;

240 
	mdec_d©a_drivî
,
	mdec_d©a_3to8
,
	mdec_d©a_öv
;

241 
	mdec_èg_drivî
,
	mdec_èg_3to8
,
	mdec_èg_öv
;

242 
	mw‹dlöe_dñay_d©a
,
	mw‹dlöe_dñay_èg
;

243 
	mbôlöe_dñay_d©a
,
	mbôlöe_dñay_èg
;

244 
	m£n£_amp_dñay_d©a
,
	m£n£_amp_dñay_èg
;

245 
	mcom∑ª_∑π_dñay
;

246 
	mdrive_mux_dñay
;

247 
	m£lb_dñay
;

248 
	md©a_ouçut_dñay
;

249 
	mdrive_vÆid_dñay
;

250 
	m¥ech¨ge_dñay
;

252 } 
	tªsu…_ty≥
;

	@dlite.c

100 
	~<°dio.h
>

101 
	~<°dlib.h
>

102 
	~<°rög.h
>

103 
	~<˘y≥.h
>

104 #i‡
deföed
(
__CYGWIN32__
)

105 
	~<î∫o.h
>

108 
	~"ho°.h
"

109 
	~"misc.h
"

110 
	~"machöe.h
"

111 
	~"vîsi⁄.h
"

112 
	~"evÆ.h
"

113 
	~"ªgs.h
"

114 
	~"mem‹y.h
"

115 
	~"sim.h
"

116 
	~"symbﬁ.h
"

117 
	~"lﬂdî.h
"

118 
	~"›ti⁄s.h
"

119 
	~"°©s.h
"

120 
	~"ønge.h
"

121 
	~"dlôe.h
"

124 
	~"smt.h
"

126 #ifde‡
SMT_SS


127 
	~"c⁄ãxt.h
"

132 
dlôe_ªg_obj_t
 
	gf_dlôe_ªg_obj
 = 
NULL
;

133 
dlôe_mem_obj_t
 
	gf_dlôe_mem_obj
 = 
NULL
;

134 
dlôe_m°©e_obj_t
 
	gf_dlôe_m°©e_obj
 = 
NULL
;

137 
	gdlôe_a˘ive
 = 
FALSE
;

140 
	gdlôe_check
 = 
FALSE
;

143 
	gdlôe_ªtu∫
 = 
FALSE
;

146 
	#MOD_BYTE
 0x0001

	)

147 
	#MOD_HALF
 0x0002

	)

148 
	#MOD_WORD
 0x0004

	)

149 
	#MOD_QWORD
 0x0008

	)

150 
	#MOD_FLOAT
 0x0010

	)

151 
	#MOD_DOUBLE
 0x0020

	)

152 
	#MOD_CHAR
 0x0040

	)

153 
	#MOD_STRING
 0x0080

	)

155 
	#MOD_SIZES
 \

	)

156 (
	gMOD_BYTE
|
	gMOD_HALF
|
	gMOD_WORD
|
	gMOD_QWORD
 \

157 |
	gMOD_FLOAT
|
	gMOD_DOUBLE
|
	gMOD_CHAR
|
	gMOD_STRING
)

160 
	#MOD_DECIMAL
 0x0100

	)

161 
	#MOD_UNSIGNED
 0x0200

	)

162 
	#MOD_OCTAL
 0x0400

	)

163 
	#MOD_HEX
 0x0800

	)

164 
	#MOD_BINARY
 0x1000

	)

166 
	#MOD_FORMATS
 \

	)

167 (
	gMOD_DECIMAL
|
	gMOD_UNSIGNED
|
	gMOD_OCTAL
|
	gMOD_HEX
|
	gMOD_BINARY
)

172 
	$modifõr_∑r£r
(*
p
,

173 **
ídp
,

174 *
pmod
)

176 
modifõrs
 = 0;

179 *
pmod
 = 0;

182 i‡(*
p
 == '/')

184 
p
++;

186 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

188 *
p
)

191 
modifõrs
 |
MOD_BYTE
;

194 
modifõrs
 |
MOD_HALF
;

197 
modifõrs
 |
MOD_WORD
;

200 
modifõrs
 |
MOD_QWORD
;

203 
modifõrs
 |
MOD_DECIMAL
;

206 
modifõrs
 |
MOD_UNSIGNED
;

209 
modifõrs
 |
MOD_OCTAL
;

212 
modifõrs
 |
MOD_HEX
;

215 
modifõrs
 |
MOD_BINARY
;

218 
modifõrs
 |
MOD_FLOAT
;

221 
modifõrs
 |
MOD_DOUBLE
;

224 
modifõrs
 |
MOD_CHAR
;

227 
modifõrs
 |
MOD_STRING
;

232 
p
++;

237 *
ídp
 = 
p
;

238 *
pmod
 = 
modifõrs
;

239  
NULL
;

240 
	}
}

243 
evÆ_°©e_t
 *
	gdlôe_evÆu©‹
 = 
NULL
;

244 
ªgs_t
 *
	gloˇl_ªgs
 = 
NULL
;

246 #ifde‡
SMT_SS


250 
evÆ_vÆue_t


251 
	$idít_evÆu©‹
(
evÆ_°©e_t
 *
es
)

253 
i
;

254 *
îr_°r
;

255 
evÆ_vÆue_t
 
vÆ
;

256 
°©_°©_t
 *
°©
;

257 
sym_sym_t
 *
sym
;

258 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

260 
thªadid
 = 0;

261 
c⁄ãxt
 *
cuºít
;

262 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

266 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

268 i‡(!
	`my°ricmp
(
es
->
tok_buf
, 
md_ªg_«mes
[
i
].
°r
))

270 
îr_°r
 =

271 
	`f_dlôe_ªg_obj
(
loˇl_ªgs
, 
FALSE
,

272 
md_ªg_«mes
[
i
].
fûe
, md_ªg_«mes[i].
ªg
, &
vÆ
);

273 i‡(
îr_°r
)

275 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

276 
evÆ_îr_exåa_öfo
 = 
es
->
tok_buf
;

277 
vÆ
 = 
îr_vÆue
;

279  
vÆ
;

284 
	`sym_lﬂdsyms
(
cuºít
->
ld_¥og_‚ame
, 
TRUE
,cuºít->
id
);

285 
sym
 = 
	`sym_böd_«me
(
es
->
tok_buf
, 
NULL
, 
sdb_™y
);

286 i‡(
sym
)

289 
vÆ
.
ty≥
 = 
ë_addr
;

290 
vÆ
.
vÆue
.
as_addr
 = 
sym
->
addr
;

291  
vÆ
;

295 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
es
->
tok_buf
);

296 i‡(
°©
)

299 
°©
->
sc
)

301 
sc_öt
:

302 
vÆ
.
ty≥
 = 
ë_öt
;

303 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

305 
sc_uöt
:

306 
vÆ
.
ty≥
 = 
ë_uöt
;

307 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

309 #ifde‡
HOST_HAS_QWORD


310 
sc_qw‹d
:

311 
vÆ
.
ty≥
 = 
ë_qw‹d
;

312 
vÆ
.
vÆue
.
as_qw‹d
 = *
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

315 
sc_Êﬂt
:

316 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

317 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

319 
sc_doubÀ
:

320 
vÆ
.
ty≥
 = 
ë_doubÀ
;

321 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

323 
sc_di°
:

324 
sc_sdi°
:

325 
evÆ_îr‹
 = 
ERR_BADEXPR
;

326 
vÆ
 = 
îr_vÆue
;

328 
sc_f‹muœ
:

331 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
sim_sdb
);

332 *
ídp
;

334 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

335 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

338 
vÆ
 = 
îr_vÆue
;

341 
	`evÆ_dñëe
(
es
);

345 
	`∑nic
("bogus stat class");

347  
vÆ
;

352 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

353 
evÆ_îr_exåa_öfo
 = 
es
->
tok_buf
;

354 
vÆ
 = 
îr_vÆue
;

355  
vÆ
;

356 
	}
}

363 
evÆ_vÆue_t


364 
	$idít_evÆu©‹
(
evÆ_°©e_t
 *
es
)

366 
i
;

367 *
îr_°r
;

368 
evÆ_vÆue_t
 
vÆ
;

369 
°©_°©_t
 *
°©
;

370 
sym_sym_t
 *
sym
;

371 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

374 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

376 i‡(!
	`my°ricmp
(
es
->
tok_buf
, 
md_ªg_«mes
[
i
].
°r
))

378 
îr_°r
 =

379 
	`f_dlôe_ªg_obj
(
loˇl_ªgs
, 
FALSE
,

380 
md_ªg_«mes
[
i
].
fûe
, md_ªg_«mes[i].
ªg
, &
vÆ
);

381 i‡(
îr_°r
)

383 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

384 
evÆ_îr_exåa_öfo
 = 
es
->
tok_buf
;

385 
vÆ
 = 
îr_vÆue
;

387  
vÆ
;

392 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
TRUE
);

393 
sym
 = 
	`sym_böd_«me
(
es
->
tok_buf
, 
NULL
, 
sdb_™y
);

394 i‡(
sym
)

397 
vÆ
.
ty≥
 = 
ë_addr
;

398 
vÆ
.
vÆue
.
as_addr
 = 
sym
->
addr
;

399  
vÆ
;

403 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
es
->
tok_buf
);

404 i‡(
°©
)

407 
°©
->
sc
)

409 
sc_öt
:

410 
vÆ
.
ty≥
 = 
ë_öt
;

411 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

413 
sc_uöt
:

414 
vÆ
.
ty≥
 = 
ë_uöt
;

415 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

417 #ifde‡
HOST_HAS_QWORD


418 
sc_qw‹d
:

419 
vÆ
.
ty≥
 = 
ë_qw‹d
;

420 
vÆ
.
vÆue
.
as_qw‹d
 = *
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

423 
sc_Êﬂt
:

424 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

425 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

427 
sc_doubÀ
:

428 
vÆ
.
ty≥
 = 
ë_doubÀ
;

429 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

431 
sc_di°
:

432 
sc_sdi°
:

433 
evÆ_îr‹
 = 
ERR_BADEXPR
;

434 
vÆ
 = 
îr_vÆue
;

436 
sc_f‹muœ
:

439 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
sim_sdb
);

440 *
ídp
;

442 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

443 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

446 
vÆ
 = 
îr_vÆue
;

449 
	`evÆ_dñëe
(
es
);

453 
	`∑nic
("bogus stat class");

455  
vÆ
;

460 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

461 
evÆ_îr_exåa_öfo
 = 
es
->
tok_buf
;

462 
vÆ
 = 
îr_vÆue
;

463  
vÆ
;

464 
	}
}

470 
	#MAX_ARGS
 4

	)

473 
	#MAX_STR
 128

	)

476 
	u¨g_vÆ_t
 {

477 
	mas_modifõr
;

478 
evÆ_vÆue_t
 
	mas_vÆue
;

479 
	mas_ac˚ss
;

480 
	mas_°r
[
MAX_STR
];

485 (*
	tcmd_‚_t
)(
	t«rgs
,

486 
	t¨g_vÆ_t
 
	t¨gs
[],

487 
	tªgs_t
 *
	tªgs
,

488 
	tmem_t
 *
	tmem
);

492 
	sdlôe_cmd_t
 {

493 *
	mcmd_°r
;

494 *
	m¨g_°rs
[
MAX_ARGS
];

502 
cmd_‚_t
 
	mcmd_‚
;

503 *
	mhñp_°r
;

508 
dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

509 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

511 
dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

512 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

514 
dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

515 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

517 
dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

518 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

520 
dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

521 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

523 
dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

524 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

526 
dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

527 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

529 
dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

530 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

532 
dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

533 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

535 
dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

536 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

538 
dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

539 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

541 
dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

542 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

544 
dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

545 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

547 
dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

548 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

550 
dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

551 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

553 
dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

554 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

556 
dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

557 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

559 
dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

560 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

562 
dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

563 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

565 
dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

566 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

568 
dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

569 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

571 
dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

572 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

574 
dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

575 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

577 
dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

578 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

580 
dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

581 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

583 
dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

584 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

586 
dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

587 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

589 
dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

590 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

592 
dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

593 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

595 
dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

596 
ªgs_t
 *
ªgs
, 
mem_t
 *
mem
);

601 
dlôe_cmd_t
 
	gcmd_db
[] =

603 { "hñp", { "s?", 
NULL
 }, 
dlôe_hñp
,

605 { "vîsi⁄", { 
NULL
 }, 
dlôe_vîsi⁄
,

607 { "ãrmö©e", { 
NULL
 }, 
dlôe_ãrmö©e
,

609 { "quô", { 
NULL
 }, 
dlôe_quô
,

611 { "c⁄t", { "a?", 
NULL
 }, 
dlôe_c⁄t
,

613 { "°ï", { 
NULL
 }, 
dlôe_°ï
,

616 { "√xt", { 
NULL
 }, 
dlôe_√xt
,

619 { "¥öt", { "m?", "e", 
NULL
 }, 
dlôe_¥öt
,

621 { "›ti⁄s", { 
NULL
 }, 
dlôe_›ti⁄s
,

623 { "›ti⁄", { "s", 
NULL
 }, 
dlôe_›ti⁄
,

625 { "°©s", { 
NULL
 }, 
dlôe_°©s
,

627 { "°©", { "s", 
NULL
 }, 
dlôe_°©
,

629 { "wh©is", { "e", 
NULL
 }, 
dlôe_wh©is
,

631 { "---", { 
NULL
 }, NULL, NULL },

632 { "ªgs", { 
NULL
 }, 
dlôe_ªgs
,

634 { "úegs", { 
NULL
 }, 
dlôe_úegs
,

636 { "Âªgs", { 
NULL
 }, 
dlôe_Âªgs
,

638 { "¸egs", { 
NULL
 }, 
dlôe_¸egs
,

640 { "m°©e", { "s?", 
NULL
 }, 
dlôe_m°©e
,

642 { "di•œy", { "m?", "a", 
NULL
 }, 
dlôe_di•œy
,

644 { "dump", { "a?", "c?", 
NULL
 }, 
dlôe_dump
,

646 { "dis", { "a?", "c?", 
NULL
 }, 
dlôe_dis
,

648 { "bªak", { "a", 
NULL
 }, 
dlôe_bªak
,

650 { "dbªak", { "a", "t?", 
NULL
 }, 
dlôe_dbªak
,

653 { "rbªak", { "s", "t?", 
NULL
 }, 
dlôe_rbªak
,

656 { "bªaks", { 
NULL
 }, 
dlôe_bªaks
,

658 { "dñëe", { "i", 
NULL
 }, 
dlôe_dñëe
,

660 { "˛ór", { 
NULL
 }, 
dlôe_˛ór
,

662 { "---", { 
NULL
 }, NULL, NULL },

663 { "symbﬁs", { 
NULL
 }, 
dlôe_symbﬁs
,

665 { "tsymbﬁs", { 
NULL
 }, 
dlôe_tsymbﬁs
,

667 { "dsymbﬁs", { 
NULL
 }, 
dlôe_dsymbﬁs
,

669 { "symbﬁ", { "s", 
NULL
 }, 
dlôe_symbﬁ
,

671 { "---", { 
NULL
 }, NULL, NULL },

673 { 
NULL
, { NULL }, NULL, NULL }

677 *
	gdlôe_hñp_èû
 =

692 #ifde‡
HOST_HAS_QWORD


708 
	$dlôe_exec
(*
cmd_°r
,

709 
ªgs_t
 *
ªgs
,

710 
mem_t
 *
mem
)

712 
i
, 
¨g_˙t
;

713 
dlôe_cmd_t
 *
cmd
;

714 
cmd_buf
[512], *
p
, *
q
, *
ídp
;

715 
¨g_vÆ_t
 
¨gs
[
MAX_ARGS
];

717 
p
 = 
cmd_°r
;

718 
q
 = 
cmd_buf
;

721 *
p
 == ' ' || *p == '\t' || *p == '\n')

722 
p
++;

725 i‡(*
p
 == '\0')

728  
NULL
;

732 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t' && *p != '/')

733 *
q
++ = *
p
++;

734 *
q
 = '\0';

737 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

739 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
cmd_buf
))

742 i‡(
cmd
->
cmd_°r
 =
NULL
)

746 
i
=0, 
¨g_˙t
=0; i<
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++,árg_cnt++)

748 
›ti⁄Æ
, 
ac˚ss
, 
modifõrs
;

749 *
¨g
, 
¨g_ty≥
, *
îr_°r
;

750 
evÆ_vÆue_t
 
vÆ
;

753 *
p
 == ' ' || *p == '\t' || *p == '\n')

754 
p
++;

756 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

757 
¨g_ty≥
 = 
¨g
[0];

758 
›ti⁄Æ
 = (
¨g
[1] == '?');

760 i‡(*
p
 == '\0')

762 i‡(
›ti⁄Æ
)

771 
ídp
 = 
p
;

772 
¨g_ty≥
)

775 
îr_°r
 = 
	`modifõr_∑r£r
(
p
, &
ídp
, &
modifõrs
);

776 i‡(
îr_°r
)

777  
îr_°r
;

778 
¨gs
[
¨g_˙t
].
as_modifõr
 = 
modifõrs
;

781 
loˇl_ªgs
 = 
ªgs
;

782 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

783 i‡(
evÆ_îr‹
)

784  
evÆ_îr_°r
[
evÆ_îr‹
];

785 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

788 
loˇl_ªgs
 = 
ªgs
;

789 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

790 i‡(
evÆ_îr‹
)

791  
evÆ_îr_°r
[
evÆ_îr‹
];

792 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

795 
loˇl_ªgs
 = 
ªgs
;

796 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

797 i‡(
evÆ_îr‹
)

798  
evÆ_îr_°r
[
evÆ_îr‹
];

799 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

802 
ac˚ss
 = 0;

803 *
p
 != '\0' && *p != '\n' && *p != ' ' && *p != '\t')

805 *
p
)

808 
ac˚ss
 |
ACCESS_READ
;

811 
ac˚ss
 |
ACCESS_WRITE
;

814 
ac˚ss
 |
ACCESS_EXEC
;

819 
p
++;

821 
ídp
 = 
p
;

822 
¨gs
[
¨g_˙t
].
as_ac˚ss
 = 
ac˚ss
;

825 
loˇl_ªgs
 = 
ªgs
;

826 
vÆ
 = 
	`evÆ_ex¥
(
dlôe_evÆu©‹
, 
p
, &
ídp
);

827 i‡(
evÆ_îr‹
)

828  
evÆ_îr_°r
[
evÆ_îr‹
];

829 
¨gs
[
¨g_˙t
].
as_vÆue
 = 
vÆ
;

832 
q
 = 
¨gs
[
¨g_˙t
].
as_°r
;

833 *
p
 != ' ' && *p != '\t' && *p != '\0')

834 *
q
++ = *
p
++;

835 *
q
 = '\0';

836 
ídp
 = 
p
;

839 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

841 
p
 = 
ídp
;

846 *
p
 == ' ' || *p == '\t' || *p == '\n')

847 
p
++;

850 i‡(*
p
 != '\0')

854  
cmd
->
	`cmd_‚
(
¨g_˙t
, 
¨gs
, 
ªgs
, 
mem
);

855 
	}
}

859 
	$¥öt_vÆ
(
modifõrs
,

860 
evÆ_vÆue_t
 
vÆ
)

862 *
f‹m©
 = "", *
¥efix
 = "", 
ødix
, 
buf
[512];

865 i‡((
modifõrs
 & 
MOD_SIZES
) == 0)

868 
vÆ
.
ty≥
)

870 
ë_öt
: 
modifõrs
 |
MOD_WORD
; ;

871 
ë_uöt
: 
modifõrs
 |
MOD_WORD
; ;

872 
ë_addr
:

873 #ifde‡
HOST_HAS_QWORD


874 
modifõrs
 |(((
md_addr_t
Ë> 4Ë? 
MOD_QWORD
 : 
MOD_WORD
);

876 
modifõrs
 |
MOD_WORD
;

879 #ifde‡
HOST_HAS_QWORD


880 
ë_qw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

881 
ë_sqw‹d
: 
modifõrs
 |
MOD_QWORD
; ;

883 
ë_Êﬂt
: 
modifõrs
 |
MOD_FLOAT
; ;

884 
ë_doubÀ
: 
modifõrs
 |
MOD_DOUBLE
; ;

885 
ë_symbﬁ
:

889 i‡(((
modifõrs
 & 
MOD_SIZES
) & ((modifiers & MOD_SIZES) - 1)) != 0)

893 i‡((
modifõrs
 & 
MOD_FORMATS
) == 0)

896 
vÆ
.
ty≥
)

898 
ë_öt
: 
modifõrs
 |
MOD_DECIMAL
; ;

899 
ë_uöt
: 
modifõrs
 |
MOD_UNSIGNED
; ;

900 
ë_addr
: 
modifõrs
 |
MOD_HEX
; ;

901 #ifde‡
HOST_HAS_QWORD


902 
ë_qw‹d
: 
modifõrs
 |
MOD_UNSIGNED
; ;

903 
ë_sqw‹d
: 
modifõrs
 |
MOD_DECIMAL
; ;

905 
ë_Êﬂt
: ;

906 
ë_doubÀ
: ;

907 
ë_symbﬁ
:

911 i‡(((
modifõrs
 & 
MOD_FORMATS
) & ((modifiers & MOD_FORMATS) - 1)) != 0)

915 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_HALF
|
MOD_WORD
|
MOD_QWORD
))

917 i‡(
modifõrs
 & 
MOD_DECIMAL
)

918 
ødix
 = 'd';

919 i‡(
modifõrs
 & 
MOD_UNSIGNED
)

920 
ødix
 = 'u';

921 i‡(
modifõrs
 & 
MOD_OCTAL
)

922 
ødix
 = 'o';

923 i‡(
modifõrs
 & 
MOD_HEX
)

924 
ødix
 = 'x';

925 i‡(
modifõrs
 & 
MOD_BINARY
)

928 
	`∑nic
("no default integer format");

930 i‡(
modifõrs
 & 
MOD_BYTE
)

932 i‡(
modifõrs
 & 
MOD_OCTAL
)

934 
¥efix
 = "0";

935 
f‹m©
 = "03";

937 i‡(
modifõrs
 & 
MOD_HEX
)

939 
¥efix
 = "0x";

940 
f‹m©
 = "02";

944 
¥efix
 = "";

945 
f‹m©
 = "";

948 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

949 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

951 i‡(
modifõrs
 & 
MOD_HALF
)

953 i‡(
modifõrs
 & 
MOD_OCTAL
)

955 
¥efix
 = "0";

956 
f‹m©
 = "06";

958 i‡(
modifõrs
 & 
MOD_HEX
)

960 
¥efix
 = "0x";

961 
f‹m©
 = "04";

965 
¥efix
 = "";

966 
f‹m©
 = "";

969 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

970 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

972 i‡(
modifõrs
 & 
MOD_WORD
)

974 i‡(
modifõrs
 & 
MOD_OCTAL
)

976 
¥efix
 = "0";

977 
f‹m©
 = "011";

979 i‡(
modifõrs
 & 
MOD_HEX
)

981 
¥efix
 = "0x";

982 
f‹m©
 = "08";

986 
¥efix
 = "";

987 
f‹m©
 = "";

990 
	`•rötf
(
buf
, "%s%%%s%c", 
¥efix
, 
f‹m©
, 
ødix
);

991 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_uöt
(
vÆ
));

993 #ifde‡
HOST_HAS_QWORD


994 i‡(
modifõrs
 & 
MOD_QWORD
)

996 i‡(
modifõrs
 & 
MOD_OCTAL
)

998 
¥efix
 = "0";

999 
f‹m©
 = "022";

1001 i‡(
modifõrs
 & 
MOD_HEX
)

1003 
¥efix
 = "0x";

1004 
f‹m©
 = "016";

1008 
¥efix
 = "";

1009 
f‹m©
 = "";

1012 
	`•rötf
(
buf
, "%s%%%¶%c", 
¥efix
, 
f‹m©
, 
ødix
);

1013 
	`myÂrötf
(
°dout
, 
buf
, 
	`evÆ_as_qw‹d
(
vÆ
));

1017 i‡(
modifõrs
 & 
MOD_FLOAT
)

1018 
	`Ârötf
(
°dout
, "%f", ()
	`evÆ_as_Êﬂt
(
vÆ
));

1019 i‡(
modifõrs
 & 
MOD_DOUBLE
)

1020 
	`Ârötf
(
°dout
, "%f", 
	`evÆ_as_doubÀ
(
vÆ
));

1021 i‡(
modifõrs
 & 
MOD_CHAR
)

1022 
	`Ârötf
(
°dout
, "`%c'", 
	`evÆ_as_uöt
(
vÆ
));

1023 i‡(
modifõrs
 & 
MOD_STRING
)

1026 
	`∑nic
("no default format");

1029  
NULL
;

1030 
	}
}

1034 
	$dlôe_mem_obj
(
mem_t
 *
mem
,

1035 
is_wrôe
,

1036 
md_addr_t
 
addr
,

1037 *
p
,

1038 
nbyãs
)

1040 
mem_cmd
 
cmd
;

1042 i‡(!
is_wrôe
)

1043 
cmd
 = 
Ród
;

1045 
cmd
 = 
Wrôe
;

1048 *
îr°r
;

1049 
îr°r
 = 
	`mem_vÆid
(
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

1050 i‡(
îr°r
)

1051  
îr°r
;

1055 
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, mem->
thªadid
);

1058  
NULL
;

1059 
	}
}

1063 
	$dlôe_m°©e_obj
(
FILE
 *
°ªam
,

1064 *
cmd
,

1065 
ªgs_t
 *
ªgs
,

1066 
mem_t
 *
mem
)

1069 
	`Ârötf
(
°ªam
, "No machine state.\n");

1072  
NULL
;

1073 
	}
}

1077 
	$dlôe_∑u£
()

1079 
buf
[512];

1080 
	`Ârötf
(
°dout
, "Press <return>Åo continue...");

1081 
	`fÊush
(
°dout
);

1082 
	`fgës
(
buf
, 512, 
°dö
);

1083 
	}
}

1087 
	$¥öt_hñp
(
dlôe_cmd_t
 *
cmd
)

1089 
i
;

1092 
	`Ârötf
(
°dout
, " %†", 
cmd
->
cmd_°r
);

1095 
i
=0; i < 
MAX_ARGS
 && 
cmd
->
¨g_°rs
[i] !
NULL
; i++)

1097 
›ti⁄Æ
;

1098 *
¨g
, 
¨g_ty≥
;

1100 
¨g
 = 
cmd
->
¨g_°rs
[
i
];

1101 
¨g_ty≥
 = 
¨g
[0];

1102 
›ti⁄Æ
 = (
¨g
[1] == '?');

1104 i‡(
›ti⁄Æ
)

1105 
	`Ârötf
(
°dout
, "{");

1107 
	`Ârötf
(
°dout
, "<");

1109 
¨g_ty≥
)

1112 
	`Ârötf
(
°dout
, "/modifiers");

1115 
	`Ârötf
(
°dout
, "addr");

1118 
	`Ârötf
(
°dout
, "count");

1121 
	`Ârötf
(
°dout
, "expr");

1124 
	`Ârötf
(
°dout
, "r|w|x");

1127 
	`Ârötf
(
°dout
, "id");

1130 
	`Ârötf
(
°dout
, "string");

1133 
	`∑nic
("bogu†¨gumíàty≥: `%c'", 
¨g_ty≥
);

1136 i‡(
›ti⁄Æ
)

1137 
	`Ârötf
(
°dout
, "}");

1139 
	`Ârötf
(
°dout
, ">");

1141 
	`Ârötf
(
°dout
, " ");

1143 
	`Ârötf
(
°dout
, "\n");

1146 
	`Ârötf
(
°dout
, " %s\n", 
cmd
->
hñp_°r
);

1147 
	}
}

1151 
	$dlôe_hñp
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1152 
ªgs_t
 *
ªgs
,

1153 
mem_t
 *
mem
)

1155 
dlôe_cmd_t
 *
cmd
;

1157 i‡(
«rgs
 != 0 &&Çargs != 1)

1160 i‡(
«rgs
 == 1)

1163 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

1165 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, 
¨gs
[0].
as_°r
))

1168 i‡(!
cmd
->
cmd_°r
)

1171 
	`¥öt_hñp
(
cmd
);

1176 
cmd
=
cmd_db
; cmd->
cmd_°r
 !
NULL
; cmd++)

1179 i‡(!
	`°rcmp
(
cmd
->
cmd_°r
, "---"))

1180 
	`dlôe_∑u£
();

1182 
	`¥öt_hñp
(
cmd
);

1185 
	`Ârötf
 (
°dout
, "\n");

1186 i‡(
dlôe_hñp_èû
)

1187 
	`Ârötf
 (
°dout
, "%s\n", 
dlôe_hñp_èû
);

1191  
NULL
;

1192 
	}
}

1196 
	$dlôe_vîsi⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1197 
ªgs_t
 *
ªgs
,

1198 
mem_t
 *
mem
)

1200 i‡(
«rgs
 != 0)

1204 
	`Ârötf
(
°dout
, "The SimpleScalar/%s Tool Set, version %d.%d of %s.\n",

1205 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

1206 
	`Ârötf
(
°dout
,

1210  
NULL
;

1211 
	}
}

1215 
	$dlôe_ãrmö©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1216 
ªgs_t
 *
ªgs
,

1217 
mem_t
 *
mem
)

1219 i‡(
«rgs
 != 0)

1222 
	`Ârötf
(
°dout
, "DLite:Åerminating simulation...\n");

1223 
	`l⁄gjmp
(
sim_exô_buf
, 1);

1226  
NULL
;

1227 
	}
}

1231 
	$dlôe_quô
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1232 
ªgs_t
 *
ªgs
,

1233 
mem_t
 *
mem
)

1235 i‡(
«rgs
 != 0)

1238 
	`Ârötf
(
°dout
, "DLite:Éxiting simulator...\n");

1239 
	`exô
(1);

1240 #ifde‡
__GNUC__


1242  
NULL
;

1244 
	}
}

1248 
	$dlôe_c⁄t
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1249 
ªgs_t
 *
ªgs
,

1250 
mem_t
 *
mem
)

1252 
evÆ_vÆue_t
 
vÆ
;

1254 i‡(!
f_dlôe_ªg_obj
 || !
f_dlôe_mem_obj
)

1255 
	`∑nic
("DLite isÇot configured");

1257 i‡(
«rgs
 != 0 &&Çargs != 1)

1260 i‡(
«rgs
 == 1)

1263 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1267 
vÆ
.
ty≥
 = 
ë_addr
;

1268 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1269 
	`f_dlôe_ªg_obj
(
ªgs
, 
TRUE
, 
π_PC
, 0, &
vÆ
);

1271 
	`myÂrötf
(
°dout
, "DLite: continuingÉxecution @ 0x%08p...\n",

1272 
vÆ
.
vÆue
.
as_addr
);

1276 
dlôe_a˘ive
 = 
FALSE
;

1277 
dlôe_ªtu∫
 = 
TRUE
;

1280  
NULL
;

1281 
	}
}

1285 
	$dlôe_°ï
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1286 
ªgs_t
 *
ªgs
,

1287 
mem_t
 *
mem
)

1289 i‡(
«rgs
 != 0)

1293 
dlôe_a˘ive
 = 
TRUE
;

1294 
dlôe_ªtu∫
 = 
TRUE
;

1297  
NULL
;

1298 
	}
}

1303 
	$dlôe_√xt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[])

1305 i‡(
«rgs
 != 0)

1309 
dlôe_°ï_˙t
 = 1;

1310 
dlôe_°ï_öto
 = 
FALSE
;

1313  
NULL
;

1314 
	}
}

1319 
	$dlôe_¥öt
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1320 
ªgs_t
 *
ªgs
,

1321 
mem_t
 *
mem
)

1323 
modifõrs
 = 0;

1324 *
îr_°r
;

1325 
evÆ_vÆue_t
 
vÆ
;

1327 i‡(
«rgs
 != 1 &&Çargs != 2)

1330 i‡(
«rgs
 == 2)

1333 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1334 
vÆ
 = 
¨gs
[1].
as_vÆue
;

1339 
vÆ
 = 
¨gs
[0].
as_vÆue
;

1343 
îr_°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1344 i‡(
îr_°r
)

1345  
îr_°r
;

1346 
	`Ârötf
(
°dout
, "\n");

1349  
NULL
;

1350 
	}
}

1354 
	$dlôe_›ti⁄s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1355 
ªgs_t
 *
ªgs
,

1356 
mem_t
 *
mem
)

1358 i‡(
«rgs
 != 0)

1362 
	`›t_¥öt_›ti⁄s
(
sim_odb
, 
°dout
, 
TRUE
, 
FALSE
);

1365  
NULL
;

1366 
	}
}

1370 
	$dlôe_›ti⁄
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1371 
ªgs_t
 *
ªgs
,

1372 
mem_t
 *
mem
)

1374 
›t_›t_t
 *
›t
;

1376 i‡(
«rgs
 != 1)

1380 
›t
 = 
	`›t_föd_›ti⁄
(
sim_odb
, 
¨gs
[0].
as_°r
);

1381 i‡(!
›t
)

1385 
	`Ârötf
(
°dout
, "%-16† ", 
›t
->
«me
);

1386 
	`›t_¥öt_›ti⁄
(
›t
, 
°dout
);

1387 i‡(
›t
->
desc
)

1388 
	`Ârötf
(
°dout
, " # %s", 
›t
->
desc
);

1389 
	`Ârötf
(
°dout
, "\n");

1392  
NULL
;

1393 
	}
}

1397 
	$dlôe_°©s
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1398 
ªgs_t
 *
ªgs
,

1399 
mem_t
 *
mem
)

1401 i‡(
«rgs
 != 0)

1405 
	`°©_¥öt_°©s
(
sim_sdb
, 
°dout
);

1406 
	`sim_aux_°©s
(
°dout
);

1409  
NULL
;

1410 
	}
}

1414 
	$dlôe_°©
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1415 
ªgs_t
 *
ªgs
,

1416 
mem_t
 *
mem
)

1418 
°©_°©_t
 *
°©
;

1420 i‡(
«rgs
 != 1)

1424 
°©
 = 
	`°©_föd_°©
(
sim_sdb
, 
¨gs
[0].
as_°r
);

1425 i‡(!
°©
)

1429 
	`°©_¥öt_°©
(
sim_sdb
, 
°©
, 
°dout
);

1432  
NULL
;

1433 
	}
}

1437 
	$dlôe_wh©is
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1438 
ªgs_t
 *
ªgs
,

1439 
mem_t
 *
mem
)

1441 i‡(
«rgs
 != 1)

1444 
	`Ârötf
(
°dout
, "ty≥ =`%s'\n", 
evÆ_ty≥_°r
[
¨gs
[0].
as_vÆue
.
ty≥
]);

1447  
NULL
;

1448 
	}
}

1452 
	$dlôe_úegs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1453 
ªgs_t
 *
ªgs
,

1454 
mem_t
 *
mem
)

1456 *
îr_°r
;

1458 i‡(
«rgs
 != 0)

1462 
	`myÂrötf
(
°dout
, "PC: 0x%08p NPC: 0x%08p\n",

1463 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_NPC
);

1464 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1465  
îr_°r
;

1466 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1469  
NULL
;

1470 
	}
}

1474 
	$dlôe_Âªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1475 
ªgs_t
 *
ªgs
,

1476 
mem_t
 *
mem
)

1479 
	`md_¥öt_Âªgs
(
ªgs
->
ªgs_F
, 
°dout
);

1482  
NULL
;

1483 
	}
}

1487 
	$dlôe_¸egs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1488 
ªgs_t
 *
ªgs
,

1489 
mem_t
 *
mem
)

1492 
	`md_¥öt_¸egs
(
ªgs
->
ªgs_C
, 
°dout
);

1495  
NULL
;

1496 
	}
}

1500 
	$dlôe_ªgs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1501 
ªgs_t
 *
ªgs
,

1502 
mem_t
 *
mem
)

1504 *
îr_°r
;

1506 
	`myÂrötf
(
°dout
, "PC: 0x%08p NPC: 0x%08p\n",

1507 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_NPC
);

1508 i‡((
îr_°r
 = 
	`dlôe_¸egs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1509  
îr_°r
;

1510 
	`md_¥öt_úegs
(
ªgs
->
ªgs_R
, 
°dout
);

1511 
	`dlôe_∑u£
();

1512 i‡((
îr_°r
 = 
	`dlôe_Âªgs
(
«rgs
, 
¨gs
, 
ªgs
, 
mem
)Ë!
NULL
)

1513  
îr_°r
;

1516  
NULL
;

1517 
	}
}

1521 
	$dlôe_m°©e
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1522 
ªgs_t
 *
ªgs
,

1523 
mem_t
 *
mem
)

1525 *
îr°r
;

1527 i‡(
«rgs
 != 0 &&Çargs != 1)

1530 i‡(
f_dlôe_m°©e_obj
)

1532 i‡(
«rgs
 == 0)

1534 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
NULL
, 
ªgs
, 
mem
);

1535 i‡(
îr°r
)

1536  
îr°r
;

1540 
îr°r
 = 
	`f_dlôe_m°©e_obj
(
°dout
, 
¨gs
[0].
as_°r
, 
ªgs
, 
mem
);

1541 i‡(
îr°r
)

1542  
îr°r
;

1547  
NULL
;

1548 
	}
}

1552 
	$dlôe_di•œy
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1553 
ªgs_t
 *
ªgs
,

1554 
mem_t
 *
mem
)

1556 
modifõrs
 = 0, 
size
;

1557 
md_addr_t
 
addr
 = 0;

1558 
buf
[512];

1559 
evÆ_vÆue_t
 
vÆ
;

1560 *
îr°r
;

1562 i‡(
«rgs
 != 1 &&Çargs != 2)

1565 i‡(
«rgs
 == 1)

1568 
modifõrs
 = 0;

1571 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1575 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1577 i‡(
«rgs
 == 2)

1579 
modifõrs
 = 
¨gs
[0].
as_modifõr
;

1582 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1586 
addr
 = 
	`evÆ_as_addr
(
¨gs
[1].
as_vÆue
);

1590 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1591 
size
 = 1;

1592 i‡(
modifõrs
 & 
MOD_HALF
)

1593 
size
 = 2;

1594 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1595 
size
 = 8;

1597 
size
 = 4;

1600 
îr°r
 = 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
, 
addr
, (*)
buf
, 
size
);

1601 i‡(
îr°r
)

1602  
îr°r
;

1605 i‡(
modifõrs
 & (
MOD_BYTE
|
MOD_CHAR
))

1608 
vÆ
.
ty≥
 = 
ë_öt
;

1609 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1611 i‡(
modifõrs
 & 
MOD_HALF
)

1614 
vÆ
.
ty≥
 = 
ë_öt
;

1615 
vÆ
.
vÆue
.
as_öt
 = ()*(*)
buf
;

1617 i‡(
modifõrs
 & (
MOD_QWORD
|
MOD_DOUBLE
))

1620 
vÆ
.
ty≥
 = 
ë_doubÀ
;

1621 
vÆ
.
vÆue
.
as_doubÀ
 = *(*)
buf
;

1626 
vÆ
.
ty≥
 = 
ë_uöt
;

1627 
vÆ
.
vÆue
.
as_uöt
 = *(*)
buf
;

1631 
îr°r
 = 
	`¥öt_vÆ
(
modifõrs
, 
vÆ
);

1632 i‡(
îr°r
)

1633  
îr°r
;

1634 
	`Ârötf
(
°dout
, "\n");

1637  
NULL
;

1638 
	}
}

1641 
	#BYTES_PER_LINE
 16

	)

1642 
	#LINES_PER_SCREEN
 4

	)

1646 
	$dlôe_dump
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1647 
ªgs_t
 *
ªgs
,

1648 
mem_t
 *
mem
)

1650 
i
, 
j
;

1651 
cou¡
 = 
LINES_PER_SCREEN
 * 
BYTES_PER_LINE
, 
i_cou¡
, 
fmt_cou¡
, 
fmt_löes
;

1652 
md_addr_t
 
fmt_addr
, 
i_addr
;

1653 
md_addr_t
 
addr
 = 0;

1654 
byã
;

1655 
buf
[512];

1656 *
îr°r
;

1658 i‡(
«rgs
 < 0 ||Çargs > 2)

1661 i‡(
«rgs
 == 1)

1664 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1668 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1670 i‡(
«rgs
 == 2)

1673 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1677 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1680 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[1].
as_vÆue
.
ty≥
))

1683 i‡(
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
) > 1024)

1687 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1692 
fmt_addr
 = 
addr
 & ~(
BYTES_PER_LINE
 - 1);

1693 
fmt_cou¡
 = (
cou¡
 + (
BYTES_PER_LINE
 - 1)) & ~(BYTES_PER_LINE - 1);

1694 
fmt_löes
 = 
fmt_cou¡
 / 
BYTES_PER_LINE
;

1696 i‡(
fmt_löes
 < 1)

1697 
	`∑nic
("no outputÜines");

1700 i‡(
fmt_löes
 == 1)

1703 
i_addr
 = 
fmt_addr
;

1704 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1705 
i
=0; i < 
cou¡
; i++)

1707 
îr°r
 =

1708 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1709 
i_addr
, (*)&
byã
, 1);

1710 i‡(
îr°r
)

1711  
îr°r
;

1712 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1713 i‡(
	`i•röt
(
byã
))

1714 
buf
[
i
] = 
byã
;

1716 
buf
[
i
] = '.';

1717 
i_addr
++;

1718 
addr
++;

1720 
buf
[
i
] = '\0';

1723 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1727 
i_cou¡
 = 0;

1728 
i_addr
 = 
fmt_addr
;

1729 
i
=0; i < 
fmt_löes
; i++)

1731 
	`myÂrötf
(
°dout
, "0x%08p: ", 
i_addr
);

1734 
j
=0; j < 
BYTES_PER_LINE
; j++)

1736 i‡(
i_addr
 >
addr
 && 
i_cou¡
 <
cou¡
)

1738 
îr°r
 =

1739 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1740 
i_addr
, (*)&
byã
, 1);

1741 i‡(
îr°r
)

1742  
îr°r
;

1743 
	`Ârötf
(
°dout
, "%02x ", 
byã
);

1744 i‡(
	`i•röt
(
byã
))

1745 
buf
[
j
] = 
byã
;

1747 
buf
[
j
] = '.';

1748 
i_cou¡
++;

1749 
addr
++;

1753 
	`Ârötf
(
°dout
, " ");

1754 
buf
[
j
] = ' ';

1756 
i_addr
++;

1758 
buf
[
j
] = '\0';

1761 
	`Ârötf
(
°dout
, "[%s]\n", 
buf
);

1766  
NULL
;

1767 
	}
}

1770 
	#INSTS_PER_SCREEN
 16

	)

1774 
	$dlôe_dis
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

1775 
ªgs_t
 *
ªgs
,

1776 
mem_t
 *
mem
)

1778 
i
;

1779 
cou¡
 = 
INSTS_PER_SCREEN
;

1780 
md_addr_t
 
addr
 = 0;

1781 
md_ö°_t
 
ö°
;

1782 *
îr°r
;

1784 i‡(
«rgs
 < 0 ||Çargs > 2)

1787 i‡(
«rgs
 == 1)

1790 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1794 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1796 i‡(
«rgs
 == 2)

1799 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1803 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

1806 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

1810 
cou¡
 = 
	`evÆ_as_uöt
(
¨gs
[1].
as_vÆue
);

1812 i‡(
cou¡
 < 0 || count > 1024)

1817 i‡((
addr
 % (
md_ö°_t
)) != 0)

1821 
i
=0; i<
cou¡
; i++)

1824 
	`myÂrötf
(
°dout
, " 0x%08p: ", 
addr
);

1825 
îr°r
 =

1826 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

1827 
addr
, (*)&
ö°
, (inst));

1829 
ö°
 = 
	`MD_SWAPI
(inst);

1831 
	`MD_SWAPI
(
ö°
);

1833 i‡(
îr°r
)

1834  
îr°r
;

1835 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
°dout
);

1836 
	`Ârötf
(
°dout
, "\n");

1839 
addr
 +(
md_ö°_t
);

1843  
NULL
;

1844 
	}
}

1847 
	sdlôe_bªak_t
 {

1848 
dlôe_bªak_t
 *
	m√xt
;

1849 
	mid
;

1850 
	m˛ass
;

1851 
ønge_ønge_t
 
	mønge
;

1855 
dlôe_bªak_t
 *
	gdlôe_bps
 = 
NULL
;

1858 
	gbªak_id
 = 1;

1862 
	$bp_˛ass_°r
(
˛ass
)

1864 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
))

1866 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_WRITE
))

1868 i‡(
˛ass
 =(
ACCESS_WRITE
|
ACCESS_EXEC
))

1870 i‡(
˛ass
 =(
ACCESS_READ
|
ACCESS_EXEC
))

1872 i‡(
˛ass
 =
ACCESS_READ
)

1874 i‡(
˛ass
 =
ACCESS_WRITE
)

1876 i‡(
˛ass
 =
ACCESS_EXEC
)

1879 
	`∑nic
("bogusáccess class");

1880 
	}
}

1884 
	$£t_bªak
(
˛ass
,

1885 
ønge_ønge_t
 *
ønge
)

1887 
dlôe_bªak_t
 *
bp
;

1890 
bp
 = 
	`ˇŒoc
(1, (
dlôe_bªak_t
));

1891 i‡(!
bp
)

1892 
	`Áèl
("out of virtual memory");

1894 
bp
->
id
 = 
bªak_id
++;

1895 
bp
->
ønge
 = *range;

1896 
bp
->
˛ass
 = class;

1898 
bp
->
√xt
 = 
dlôe_bps
;

1899 
dlôe_bps
 = 
bp
;

1901 
	`Ârötf
(
°dout
, "bªakpoöà#%d së @ ", 
bp
->
id
);

1902 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1903 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
˛ass
));

1906 
dlôe_check
 = 
TRUE
;

1909  
NULL
;

1910 
	}
}

1914 
	$dñëe_bªak
(
id
)

1916 
dlôe_bªak_t
 *
bp
, *
¥ev
;

1918 i‡(!
dlôe_bps
)

1921 
bp
=
dlôe_bps
,
¥ev
=
NULL
; b∞!NULL;Öªv=bp,bp=bp->
√xt
)

1923 i‡(
bp
->
id
 == id)

1926 i‡(!
bp
)

1929 i‡(!
¥ev
)

1932 
dlôe_bps
 = 
bp
->
√xt
;

1937 
¥ev
->
√xt
 = 
bp
->next;

1940 
	`Ârötf
(
°dout
, "bªakpoöà#%d dñëed @ ", 
bp
->
id
);

1941 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

1942 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
bp
->
˛ass
));

1944 
bp
->
√xt
 = 
NULL
;

1945 
	`‰ì
(
bp
);

1947 i‡(!
dlôe_bps
)

1950 
dlôe_check
 = 
FALSE
;

1955 
dlôe_check
 = 
TRUE
;

1959  
NULL
;

1960 
	}
}

1963 
	gbªak_ac˚ss
 = 0;

1967 
	$__check_bªak
(
md_addr_t
 
√xt_PC
,

1968 
ac˚ss
,

1969 
md_addr_t
 
addr
,

1970 
cou¡î_t
 
icou¡
,

1971 
cou¡î_t
 
cy˛e
)

1973 
dlôe_bªak_t
 *
bp
;

1975 i‡(
dlôe_a˘ive
)

1978 
bªak_ac˚ss
 = 0;

1979  
TRUE
;

1983 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

1985 
bp
->
ønge
.
°¨t
.
±y≥
)

1987 
±_addr
:

1988 i‡((
bp
->
˛ass
 & 
ACCESS_EXEC
)

1989 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
√xt_PC
))

1992 
	`myÂrötf
(
°dout
,

1994 
bp
->
id
, 
√xt_PC
);

1995 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

1996  
TRUE
;

1998 i‡((
bp
->
˛ass
 & 
ACCESS_READ
)

1999 && ((
ac˚ss
 & 
ACCESS_READ
)

2000 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

2003 
	`myÂrötf
(
°dout
,

2005 
bp
->
id
, 
addr
);

2006 
bªak_ac˚ss
 = 
ACCESS_READ
;

2007  
TRUE
;

2009 i‡((
bp
->
˛ass
 & 
ACCESS_WRITE
)

2010 && ((
ac˚ss
 & 
ACCESS_WRITE
)

2011 && !
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
addr
)))

2014 
	`myÂrötf
(
°dout
,

2016 
bp
->
id
, 
addr
);

2017 
bªak_ac˚ss
 = 
ACCESS_WRITE
;

2018  
TRUE
;

2022 
±_ö°
:

2023 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
icou¡
))

2026 
	`Ârötf
(
°dout
,

2028 
bp
->
id
, ()
icou¡
);

2029 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

2030  
TRUE
;

2034 
±_cy˛e
:

2035 i‡(!
	`ønge_cmp_ønge
(&
bp
->
ønge
, 
cy˛e
))

2038 
	`Ârötf
(
°dout
,

2040 
bp
->
id
, ()
cy˛e
);

2041 
bªak_ac˚ss
 = 
ACCESS_EXEC
;

2042  
TRUE
;

2047 
	`∑nic
("bogusÑangeÅype");

2054 
bªak_ac˚ss
 = 0;

2055  
FALSE
;

2056 
	}
}

2060 
	$dlôe_bªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2061 
ªgs_t
 *
ªgs
,

2062 
mem_t
 *
mem
)

2064 
md_addr_t
 
addr
;

2065 
ønge_ønge_t
 
ønge
;

2067 i‡(
«rgs
 != 1)

2071 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2075 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

2078 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

2079 
ønge
.
°¨t
.
pos
 = 
addr
;

2080 
ønge
.
íd
.
±y≥
 = 
±_addr
;

2081 #ifde‡
TARGET_ALPHA


2084 
ønge
.
íd
.
pos
 = 
addr
 + 9;

2086 
ønge
.
íd
.
pos
 = 
addr
 + 1;

2090  
	`£t_bªak
(
ACCESS_EXEC
, &
ønge
);

2091 
	}
}

2095 
	$dlôe_dbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2096 
ªgs_t
 *
ªgs
,

2097 
mem_t
 *
mem
)

2099 
ac˚ss
 = 0;

2100 
md_addr_t
 
addr
 = 0;

2101 
ønge_ønge_t
 
ønge
;

2103 i‡(
«rgs
 != 1 &&Çargs != 2)

2106 i‡(
«rgs
 == 1)

2109 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2113 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

2116 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
;

2118 i‡(
«rgs
 == 2)

2121 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2125 
addr
 = 
	`evÆ_as_addr
(
¨gs
[0].
as_vÆue
);

2128 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

2132 
ønge
.
°¨t
.
±y≥
 = 
±_addr
;

2133 
ønge
.
°¨t
.
pos
 = 
addr
;

2134 
ønge
.
íd
.
±y≥
 = 
±_addr
;

2135 
ønge
.
íd
.
pos
 = 
addr
 + 1;

2138  
	`£t_bªak
(
ac˚ss
, &
ønge
);

2139 
	}
}

2143 
	$dlôe_rbªak
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2144 
ªgs_t
 *
ªgs
,

2145 
mem_t
 *
mem
)

2147 
ac˚ss
;

2148 *
îr°r
;

2149 
ønge_ønge_t
 
ønge
;

2151 i‡(
«rgs
 != 1 &&Çargs != 2)

2154 i‡(
«rgs
 == 2)

2157 
ac˚ss
 = 
¨gs
[1].
as_ac˚ss
;

2162 
ac˚ss
 = 
ACCESS_READ
|
ACCESS_WRITE
|
ACCESS_EXEC
;

2166 
îr°r
 = 
	`ønge_∑r£_ønge
(
¨gs
[0].
as_°r
, &
ønge
);

2167 i‡(
îr°r
)

2168  
îr°r
;

2171 i‡(
ønge
.
°¨t
.
±y≥
 !ønge.
íd
.ptype)

2173 i‡(
ønge
.
°¨t
.
pos
 >Ñ™ge.
íd
.pos)

2177  
	`£t_bªak
(
ac˚ss
, &
ønge
);

2178 
	}
}

2182 
	$dlôe_bªaks
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2183 
ªgs_t
 *
ªgs
,

2184 
mem_t
 *
mem
)

2186 
dlôe_bªak_t
 *
bp
;

2188 i‡(!
dlôe_bps
)

2190 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2193  
NULL
;

2196 
	`Ârötf
(
°dout
, "Active breakpoints:\n");

2197 
bp
=
dlôe_bps
; b∞!
NULL
; bp=bp->
√xt
)

2199 
	`Ârötf
(
°dout
, " bªakpoöà#%d @ ", 
bp
->
id
);

2200 
	`ønge_¥öt_ønge
(&
bp
->
ønge
, 
°dout
);

2201 
	`Ârötf
(
°dout
, ", cœss: %s\n", 
	`bp_˛ass_°r
(
bp
->
˛ass
));

2205  
NULL
;

2206 
	}
}

2210 
	$dlôe_dñëe
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2211 
ªgs_t
 *
ªgs
,

2212 
mem_t
 *
mem
)

2214 
id
;

2216 i‡(
«rgs
 != 1)

2220 i‡(!
	`EVAL_INTEGRAL
(
¨gs
[0].
as_vÆue
.
ty≥
))

2223 
id
 = 
	`evÆ_as_uöt
(
¨gs
[0].
as_vÆue
);

2224  
	`dñëe_bªak
(
id
);

2225 
	}
}

2229 
	$dlôe_˛ór
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2230 
ªgs_t
 *
ªgs
,

2231 
mem_t
 *
mem
)

2233 i‡(!
dlôe_bps
)

2235 
	`Ârötf
(
°dout
, "Noáctive breakpoints.\n");

2238  
NULL
;

2241 
dlôe_bps
 !
NULL
)

2244 
	`dñëe_bªak
(
dlôe_bps
->
id
);

2246 
	`Ârötf
(
°dout
, "All breakpoints cleared.\n");

2249  
NULL
;

2250 
	}
}

2254 
	$dlôe_symbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2255 
ªgs_t
 *
ªgs
,

2256 
mem_t
 *
mem
)

2258 
i
;

2260 #ifde‡
SMT_SS


2261 
thªadid
 = 
mem
->threadid;

2262 
c⁄ãxt
 *
cuºít
;

2263 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

2266 i‡(
«rgs
 != 0)

2270 #ifde‡
SMT_SS


2271 
	`sym_lﬂdsyms
(
cuºít
->
ld_¥og_‚ame
, 
FALSE
,cuºít->
id
);

2273 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2277 
i
=0; i<
sym_nsyms
; i++)

2278 
	`sym_dumpsym
(
sym_syms
[
i
], 
°dout
);

2281  
NULL
;

2282 
	}
}

2286 
	$dlôe_tsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2287 
ªgs_t
 *
ªgs
,

2288 
mem_t
 *
mem
)

2290 
i
;

2292 #ifde‡
SMT_SS


2293 
thªadid
 = 
mem
->threadid;

2294 
c⁄ãxt
 *
cuºít
;

2295 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

2298 i‡(
«rgs
 != 0)

2302 #ifde‡
SMT_SS


2303 
	`sym_lﬂdsyms
(
cuºít
->
ld_¥og_‚ame
, 
FALSE
,cuºít->
id
);

2305 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2309 
i
=0; i<
sym_¡extsyms
; i++)

2310 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
°dout
);

2313  
NULL
;

2314 
	}
}

2318 
	$dlôe_dsymbﬁs
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2319 
ªgs_t
 *
ªgs
,

2320 
mem_t
 *
mem
)

2322 
i
;

2324 #ifde‡
SMT_SS


2325 
thªadid
 = 
mem
->threadid;

2326 
c⁄ãxt
 *
cuºít
;

2327 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

2330 i‡(
«rgs
 != 0)

2334 #ifde‡
SMT_SS


2335 
	`sym_lﬂdsyms
(
cuºít
->
ld_¥og_‚ame
, 
FALSE
,cuºít->
id
);

2337 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2341 
i
=0; i<
sym_nd©asyms
; i++)

2342 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
°dout
);

2345  
NULL
;

2346 
	}
}

2350 
	$dlôe_symbﬁ
(
«rgs
, 
¨g_vÆ_t
 
¨gs
[],

2351 
ªgs_t
 *
ªgs
,

2352 
mem_t
 *
mem
)

2354 
ödex
;

2355 
sym_sym_t
 *
sym
;

2357 #ifde‡
SMT_SS


2358 
thªadid
 = 
mem
->threadid;

2359 
c⁄ãxt
 *
cuºít
;

2360 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

2363 i‡(
«rgs
 != 1)

2367 #ifde‡
SMT_SS


2368 
	`sym_lﬂdsyms
(
cuºít
->
ld_¥og_‚ame
, 
FALSE
,cuºít->
id
);

2370 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

2374 
sym
 = 
	`sym_böd_«me
(
¨gs
[0].
as_°r
, &
ödex
, 
sdb_™y
);

2375 i‡(!
sym
)

2379 
	`sym_dumpsym
(
sym_syms_by_«me
[
ödex
], 
°dout
);

2382  
NULL
;

2383 
	}
}

2387 
	$dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

2388 
dlôe_mem_obj_t
 
mem_obj
,

2389 
dlôe_m°©e_obj_t
 
m°©e_obj
)

2392 
f_dlôe_ªg_obj
 = 
ªg_obj
;

2393 
f_dlôe_mem_obj
 = 
mem_obj
;

2394 
f_dlôe_m°©e_obj
 = 
m°©e_obj
;

2397 
dlôe_evÆu©‹
 = 
	`evÆ_√w
(
idít_evÆu©‹
, 
NULL
);

2398 
	}
}

2402 
	$dlôe_°©us
(
md_addr_t
 
ªgs_PC
,

2403 
md_addr_t
 
√xt_PC
,

2404 
cou¡î_t
 
cy˛e
,

2405 
dbªak
,

2406 
ªgs_t
 *
ªgs
,

2407 
mem_t
 *
mem
)

2409 
md_ö°_t
 
ö°
;

2410 *
îr°r
;

2412 i‡(
dbªak
)

2414 
	`Ârötf
(
°dout
, "\n");

2415 
	`Ârötf
(
°dout
, "Instruction (now finished)Åhat caused data break:\n");

2416 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
ªgs_PC
);

2417 
îr°r
 =

2418 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2419 
ªgs_PC
, (*)&
ö°
, (inst));

2421 
ö°
 = 
	`MD_SWAPI
(inst);

2423 
	`MD_SWAPI
(
ö°
);

2425 i‡(
îr°r
)

2426 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2428 
	`md_¥öt_ö¢
(
ö°
, 
ªgs_PC
, 
°dout
);

2429 
	`Ârötf
(
°dout
, "\n");

2430 
	`Ârötf
(
°dout
, "\n");

2434 
	`myÂrötf
(
°dout
, "[%10n] 0x%08p: ", 
cy˛e
, 
√xt_PC
);

2435 
îr°r
 =

2436 
	`f_dlôe_mem_obj
(
mem
, 
FALSE
,

2437 
√xt_PC
, (*)&
ö°
, (inst));

2439 
ö°
 = 
	`MD_SWAPI
(inst);

2441 
	`MD_SWAPI
(
ö°
);

2443 i‡(
îr°r
)

2444 
	`Ârötf
(
°dout
, "<övÆid mem‹y>: %s", 
îr°r
);

2446 
	`md_¥öt_ö¢
(
ö°
, 
√xt_PC
, 
°dout
);

2447 
	`Ârötf
(
°dout
, "\n");

2448 
	}
}

2451 
	#DLITE_PROMPT
 "DLôe! > "

	)

2455 
	$dlôe_maö
(
md_addr_t
 
ªgs_PC
,

2456 
md_addr_t
 
√xt_PC
,

2457 
cou¡î_t
 
cy˛e
,

2458 
ªgs_t
 *
ªgs
,

2459 
mem_t
 *
mem
)

2461 
buf
[512], *
îr_°r
;

2462 
dbªak
 = (
bªak_ac˚ss
 & (
ACCESS_READ
|
ACCESS_WRITE
)) != 0;

2463 
cmd
[512] = "";

2465 
dlôe_a˘ive
 = 
TRUE
;

2466 
dlôe_ªtu∫
 = 
FALSE
;

2467 
	`dlôe_°©us
(
ªgs_PC
, 
√xt_PC
, 
cy˛e
, 
dbªak
, 
ªgs
, 
mem
);

2469 
dlôe_a˘ive
 && !
dlôe_ªtu∫
)

2471 
	`Ârötf
(
°dout
, 
DLITE_PROMPT
);

2472 
	`fÊush
(
°dout
);

2473 
	`fgës
(
buf
, 512, 
°dö
);

2476 i‡(
buf
[
	`°æí
(buf)-1] == '\n')

2477 
buf
[
	`°æí
(buf)-1] = '\0';

2479 i‡(
buf
[0] != '\0')

2482 
	`°r˝y
(
cmd
, 
buf
);

2486 
îr_°r
 = 
	`dlôe_exec
(
cmd
, 
ªgs
, 
mem
);

2487 i‡(
îr_°r
)

2488 
	`Ârötf
(
°dout
, "Dlôe:Éº‹: %s\n", 
îr_°r
);

2490 
	}
}

	@dlite.h

142 #i‚de‡
DLITE_H


143 
	#DLITE_H


	)

145 
	~<°dio.h
>

147 
	~"ho°.h
"

148 
	~"misc.h
"

149 
	~"machöe.h
"

150 
	~"ªgs.h
"

151 
	~"mem‹y.h
"

152 
	~"evÆ.h
"

157 (*
	tdlôe_ªg_obj_t
)(
	tªgs_t
 *
	tªgs
,

158 
	tis_wrôe
,

159 
	tmd_ªg_ty≥
 
	tπ
,

160 
	tªg
,

161 
	tevÆ_vÆue_t
 *
	tvÆ
);

166 (*
	tdlôe_mem_obj_t
)(
	tmem_t
 *
	tmem
,

167 
	tis_wrôe
,

168 
	tmd_addr_t
 
	taddr
,

169 *
	tp
,

170 
	tnbyãs
);

175 (*
	tdlôe_m°©e_obj_t
)(
	tFILE
 *
	t°ªam
,

176 *
	tcmd
,

177 
	tªgs_t
 *
	tªgs
,

178 
	tmem_t
 *
	tmem
);

182 
dlôe_öô
(
dlôe_ªg_obj_t
 
ªg_obj
,

183 
dlôe_mem_obj_t
 
mem_obj
,

184 
dlôe_m°©e_obj_t
 
m°©e_obj
);

192 
dlôe_mem_obj
(
mem_t
 *
mem
,

193 
is_wrôe
,

194 
md_addr_t
 
addr
,

195 *
p
,

196 
nbyãs
);

200 
dlôe_m°©e_obj
(
FILE
 *
°ªam
,

201 *
cmd
,

202 
ªgs_t
 *
ªgs
,

203 
mem_t
 *
mem
);

206 
	#ACCESS_READ
 0x01

	)

207 
	#ACCESS_WRITE
 0x02

	)

208 
	#ACCESS_EXEC
 0x04

	)

211 
md_addr_t
 
dlôe_Á°bªak
 ;

214 
dlôe_a˘ive
 ;

217 
dlôe_check
 ;

221 
__check_bªak
(
md_addr_t
 
√xt_PC
,

222 
ac˚ss
,

223 
md_addr_t
 
addr
,

224 
cou¡î_t
 
icou¡
,

225 
cou¡î_t
 
cy˛e
);

228 
	#dlôe_check_bªak
(
NPC
, 
ACCESS
, 
ADDR
, 
ICNT
, 
CYCLE
Ë\

	)

229 ((
	gdlôe_check
 || 
	gdlôe_a˘ive
) \

230 ? 
__check_bªak
((
NPC
), (
ACCESS
), (
ADDR
), (
ICNT
), (
CYCLE
)) \

231 : 
FALSE
)

235 
dlôe_maö
(
md_addr_t
 
ªgs_PC
,

236 
md_addr_t
 
√xt_PC
,

237 
cou¡î_t
 
cy˛e
,

238 
ªgs_t
 *
ªgs
,

239 
mem_t
 *
mem
);

	@eio.c

95 
	~<°dio.h
>

96 
	~<°dlib.h
>

97 #ifde‡
_MSC_VER


98 
	~<io.h
>

100 
	~<uni°d.h
>

103 
	~"ho°.h
"

104 
	~"misc.h
"

105 
	~"machöe.h
"

106 
	~"ªgs.h
"

107 
	~"mem‹y.h
"

108 
	~"lﬂdî.h
"

109 
	~"libexo/libexo.h
"

110 
	~"sysˇŒ.h
"

111 
	~"sim.h
"

112 
	~"ídün.h
"

113 
	~"eio.h
"

115 
	~"smt.h
"

117 #ifde‡
SMT_SS


118 
	~"c⁄ãxt.h
"

121 #ifde‡
_MSC_VER


122 
	#wrôe
 
_wrôe


	)

125 
	#EIO_FILE_HEADER
 \

	)

143 
cou¡î_t
 
	geio_å™s_i˙t
 = -1;

145 
FILE
 *

146 
	$eio_¸óã
(*
‚ame
)

148 
FILE
 *
fd
;

149 
exo_ãrm_t
 *
exo
;

150 
èrgë_big_ídün
;

152 #ifde‡
SMT_SS


153 
thªadid
 = 0;

154 
c⁄ãxt
 *
cuºít
;

155 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

159 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

161 
fd
 = 
	`gz›í
(
‚ame
, "w");

162 i‡(!
fd
)

163 
	`Áèl
("u«bÀÅÿ¸óã EIO fûê`%s'", 
‚ame
);

166 
	`Ârötf
(
fd
, "%s\n", 
EIO_FILE_HEADER
);

167 #ifde‡
SMT_SS


168 
	`Ârötf
(
fd
, "/*thªad %d, fûe_f‹m©: %d, fûe_vîsi⁄: %d, big_ídün: %d */\n",
thªadid
,

169 
MD_EIO_FILE_FORMAT
, 
EIO_FILE_VERSION
, 
cuºít
->
ld_èrgë_big_ídün
);

171 
	`Ârötf
(
fd
, "/* file_format: %d, file_version: %d, big_endian: %d */\n",

172 
MD_EIO_FILE_FORMAT
, 
EIO_FILE_VERSION
, 
ld_èrgë_big_ídün
);

174 
exo
 = 
	`exo_√w
(
ec_li°
,

175 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
MD_EIO_FILE_FORMAT
),

176 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
EIO_FILE_VERSION
),

177 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
èrgë_big_ídün
),

178 
NULL
);

179 
	`exo_¥öt
(
exo
, 
fd
);

180 
	`exo_dñëe
(
exo
);

181 
	`Ârötf
(
fd
, "\n\n");

183  
fd
;

184 
	}
}

186 
FILE
 *

187 
	$eio_›í
(*
‚ame
)

189 
FILE
 *
fd
;

190 
exo_ãrm_t
 *
exo
;

191 
fûe_f‹m©
, 
fûe_vîsi⁄
, 
big_ídün
, 
èrgë_big_ídün
;

193 
èrgë_big_ídün
 = (
	`ídün_ho°_byã_‹dî
(Ë=
ídün_big
);

195 
fd
 = 
	`gz›í
(
‚ame
, "r");

196 i‡(!
fd
)

197 
	`Áèl
("u«bÀÅÿ›í EIO fûê`%s'", 
‚ame
);

200 
exo
 = 
	`exo_ªad
(
fd
);

201 i‡(!
exo


202 || 
exo
->
ec
 !
ec_li°


203 || !
exo
->
as_li°
.
hód


204 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


205 || !
exo
->
as_li°
.
hód
->
√xt


206 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


207 || !
exo
->
as_li°
.
hód
->
√xt
->next

208 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_öãgî


209 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

210 
	`Áèl
("couldÇotÑead EIO file header");

212 
fûe_f‹m©
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

213 
fûe_vîsi⁄
 = 
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

214 
big_ídün
 = 
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
;

215 
	`exo_dñëe
(
exo
);

217 i‡(
fûe_f‹m©
 !
MD_EIO_FILE_FORMAT
)

218 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ f‹m©", 
‚ame
);

220 i‡(
fûe_vîsi⁄
 !
EIO_FILE_VERSION
)

221 
	`Áèl
("EIO fûê`%s' ha†öcom∑tibÀ vîsi⁄", 
‚ame
);

223 i‡(!!
big_ídün
 !!!
èrgë_big_ídün
)

225 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

226 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

227 
	`w¨n
("****************************************");

228 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

229 
	`w¨n
("****************************************");

232  
fd
;

233 
	}
}

237 
	$eio_vÆid
(*
‚ame
)

239 
FILE
 *
fd
;

240 
buf
[512];

243 
fd
 = 
	`gz›í
(
‚ame
, "r");

244 i‡(!
fd
)

245  
FALSE
;

248 
	`fgës
(
buf
, 512, 
fd
);

251 i‡(
	`°rcmp
(
buf
, 
EIO_FILE_HEADER
))

252  
FALSE
;

255 
	`gz˛o£
(
fd
);

258  
TRUE
;

259 
	}
}

262 
	$eio_˛o£
(
FILE
 *
fd
)

264 
	`gz˛o£
(
fd
);

265 
	}
}

269 
cou¡î_t


270 
	$eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

271 
mem_t
 *
mem
,

272 
FILE
 *
fd
)

274 
i
;

275 
exo_ãrm_t
 *
exo
;

276 
mem_±e_t
 *
±e
;

278 #ifde‡
SMT_SS


279 
thªadid
 = 
mem
->threadid;

280 
c⁄ãxt
 *
cuºít
;

281 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

284 
	`myÂrötf
(
fd
, "/* ** sèπ checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

286 
	`myÂrötf
(
fd
, "/* EIO fûêpoöãr: %n... */\n", 
eio_å™s_i˙t
);

287 
exo
 = 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
eio_å™s_i˙t
);

288 
	`exo_¥öt
(
exo
, 
fd
);

289 
	`Ârötf
(
fd
, "\n\n");

290 
	`exo_dñëe
(
exo
);

293 
	`Ârötf
(
fd
, "/* miscÑegs icnt, PC, NPC,Étc... */\n");

294 
exo
 = 
	`MD_MISC_REGS_TO_EXO
(
ªgs
);

295 
	`exo_¥öt
(
exo
, 
fd
);

296 
	`Ârötf
(
fd
, "\n\n");

297 
	`exo_dñëe
(
exo
);

300 
	`Ârötf
(
fd
, "/* integerÑegs */\n");

301 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

302 
i
=0; i < 
MD_NUM_IREGS
; i++)

303 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

304 
	`exo_¥öt
(
exo
, 
fd
);

305 
	`Ârötf
(
fd
, "\n\n");

306 
	`exo_dñëe
(
exo
);

309 
	`Ârötf
(
fd
, "/* FPÑegs (integer format) */\n");

310 
exo
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

311 
i
=0; i < 
MD_NUM_FREGS
; i++)

312 
exo
->
as_li°
.
hód
 = 
	`exo_chaö
”xo->as_li°.hód, 
	`MD_FREG_TO_EXO
(
ªgs
, 
i
));

313 
	`exo_¥öt
(
exo
, 
fd
);

314 
	`Ârötf
(
fd
, "\n\n");

315 
	`exo_dñëe
(
exo
);

317 
	`Ârötf
(
fd
, "/* wrôög `%d' mem‹yÖages... */\n", ()
mem
->
∑ge_cou¡
);

318 #ifde‡
SMT_SS


319 
exo
 = 
	`exo_√w
(
ec_li°
,

320 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
mem
->
∑ge_cou¡
),

321 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
cuºít
->
ld_brk_poöt
),

322 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
cuºít
->
ld_°ack_mö
),

323 
NULL
);

324 
	`exo_¥öt
(
exo
, 
fd
);

325 
	`Ârötf
(
fd
, "\n\n");

326 
	`exo_dñëe
(
exo
);

328 
	`Ârötf
(
fd
, "/*Åext segment specifiers (base & size) */\n");

329 
exo
 = 
	`exo_√w
(
ec_li°
,

330 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
cuºít
->
ld_ãxt_ba£
),

331 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
cuºít
->
ld_ãxt_size
),

332 
NULL
);

333 
	`exo_¥öt
(
exo
, 
fd
);

334 
	`Ârötf
(
fd
, "\n\n");

335 
	`exo_dñëe
(
exo
);

337 
	`Ârötf
(
fd
, "/* data segment specifiers (base & size) */\n");

338 
exo
 = 
	`exo_√w
(
ec_li°
,

339 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
cuºít
->
ld_d©a_ba£
),

340 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
cuºít
->
ld_d©a_size
),

341 
NULL
);

342 
	`exo_¥öt
(
exo
, 
fd
);

343 
	`Ârötf
(
fd
, "\n\n");

344 
	`exo_dñëe
(
exo
);

346 
	`Ârötf
(
fd
, "/* stack segment specifiers (base & size) */\n");

347 
exo
 = 
	`exo_√w
(
ec_li°
,

348 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
cuºít
->
ld_°ack_ba£
),

349 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
cuºít
->
ld_°ack_size
),

350 
NULL
);

352 
exo
 = 
	`exo_√w
(
ec_li°
,

353 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
mem
->
∑ge_cou¡
),

354 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
),

355 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_mö
),

356 
NULL
);

357 
	`exo_¥öt
(
exo
, 
fd
);

358 
	`Ârötf
(
fd
, "\n\n");

359 
	`exo_dñëe
(
exo
);

361 
	`Ârötf
(
fd
, "/*Åext segment specifiers (base & size) */\n");

362 
exo
 = 
	`exo_√w
(
ec_li°
,

363 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_ãxt_ba£
),

364 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_ãxt_size
),

365 
NULL
);

366 
	`exo_¥öt
(
exo
, 
fd
);

367 
	`Ârötf
(
fd
, "\n\n");

368 
	`exo_dñëe
(
exo
);

370 
	`Ârötf
(
fd
, "/* data segment specifiers (base & size) */\n");

371 
exo
 = 
	`exo_√w
(
ec_li°
,

372 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_d©a_ba£
),

373 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_d©a_size
),

374 
NULL
);

375 
	`exo_¥öt
(
exo
, 
fd
);

376 
	`Ârötf
(
fd
, "\n\n");

377 
	`exo_dñëe
(
exo
);

379 
	`Ârötf
(
fd
, "/* stack segment specifiers (base & size) */\n");

380 
exo
 = 
	`exo_√w
(
ec_li°
,

381 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_°ack_ba£
),

382 
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
ld_°ack_size
),

383 
NULL
);

385 
	`exo_¥öt
(
exo
, 
fd
);

386 
	`Ârötf
(
fd
, "\n\n");

387 
	`exo_dñëe
(
exo
);

390 
	`MEM_FORALL
(
mem
, 
i
, 
±e
)

393 
exo
 = 
	`exo_√w
(
ec_li°
,

394 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
	`MEM_PTE_ADDR
(
±e
, 
i
)),

395 
	`exo_√w
(
ec_blob
, 
MD_PAGE_SIZE
, 
±e
->
∑ge
),

396 
NULL
);

397 
	`exo_¥öt
(
exo
, 
fd
);

398 
	`Ârötf
(
fd
, "\n\n");

399 
	`exo_dñëe
(
exo
);

402 
	`myÂrötf
(
fd
, "/* **Énd checkpoöà@ %n... */\n\n", 
eio_å™s_i˙t
);

404  
eio_å™s_i˙t
;

405 
	}
}

409 
cou¡î_t


410 
	$eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

411 
mem_t
 *
mem
,

412 
FILE
 *
fd
)

414 
i
, 
∑ge_cou¡
;

415 
cou¡î_t
 
å™s_i˙t
;

416 
exo_ãrm_t
 *
exo
, *
ñt
;

418 #ifde‡
SMT_SS


419 
thªadid
 = 
mem
->threadid;

420 
c⁄ãxt
 *
cuºít
;

421 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

425 
exo
 = 
	`exo_ªad
(
fd
);

426 i‡(!
exo


427 || 
exo
->
ec
 !
ec_öãgî
)

428 
	`Áèl
("couldÇotÑead EIO fileÖointer");

429 
å™s_i˙t
 = 
exo
->
as_öãgî
.
vÆ
;

430 
	`exo_dñëe
(
exo
);

433 
exo
 = 
	`exo_ªad
(
fd
);

434 
	`MD_EXO_TO_MISC_REGS
(
exo
, 
sim_num_ö¢
, 
ªgs
);

435 
	`exo_dñëe
(
exo
);

438 
exo
 = 
	`exo_ªad
(
fd
);

439 i‡(!
exo


440 || 
exo
->
ec
 !
ec_li°
)

441 
	`Áèl
("couldÇotÑead EIO integerÑegs");

442 
ñt
 = 
exo
->
as_li°
.
hód
;

443 
i
=0; i < 
MD_NUM_IREGS
; i++)

445 i‡(!
ñt
)

446 
	`Áèl
("couldÇotÑead EIO integerÑegs (too few)");

448 i‡(
ñt
->
ec
 !
ec_addªss
)

449 
	`Áèl
("couldÇotÑead EIO integerÑegs (bad value)");

451 
	`MD_EXO_TO_IREG
(
ñt
, 
ªgs
, 
i
);

452 
ñt
 =É…->
√xt
;

454 i‡(
ñt
 !
NULL
)

455 
	`Áèl
("couldÇotÑead EIO integerÑegs (too many)");

456 
	`exo_dñëe
(
exo
);

459 
exo
 = 
	`exo_ªad
(
fd
);

460 i‡(!
exo


461 || 
exo
->
ec
 !
ec_li°
)

462 
	`Áèl
("couldÇotÑead EIO FPÑegs");

463 
ñt
 = 
exo
->
as_li°
.
hód
;

464 
i
=0; i < 
MD_NUM_FREGS
; i++)

466 i‡(!
ñt
)

467 
	`Áèl
("couldÇotÑead EIO FPÑegs (too few)");

469 i‡(
ñt
->
ec
 !
ec_addªss
)

470 
	`Áèl
("couldÇotÑead EIO FPÑegs (bad value)");

472 
	`MD_EXO_TO_FREG
(
ñt
, 
ªgs
, 
i
);

473 
ñt
 =É…->
√xt
;

475 i‡(
ñt
 !
NULL
)

476 
	`Áèl
("couldÇotÑead EIO FPÑegs (too many)");

477 
	`exo_dñëe
(
exo
);

479 #ifde‡
SMT_SS


481 
exo
 = 
	`exo_ªad
(
fd
);

482 i‡(!
exo


483 || 
exo
->
ec
 !
ec_li°


484 || !
exo
->
as_li°
.
hód


485 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


486 || !
exo
->
as_li°
.
hód
->
√xt


487 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss


488 || !
exo
->
as_li°
.
hód
->
√xt
->next

489 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss


490 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

491 
	`Áèl
("couldÇotÑead EIO memoryÖage count");

492 
∑ge_cou¡
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

493 
cuºít
->
ld_brk_poöt
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
;

494 
cuºít
->
ld_°ack_mö
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
;

495 
	`exo_dñëe
(
exo
);

498 
exo
 = 
	`exo_ªad
(
fd
);

499 i‡(!
exo


500 || 
exo
->
ec
 !
ec_li°


501 || !
exo
->
as_li°
.
hód


502 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


503 || !
exo
->
as_li°
.
hód
->
√xt


504 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


505 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

506 
	`Áèl
("countÇotÑead EIOÅext segment specifiers");

507 
cuºít
->
ld_ãxt_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

508 
cuºít
->
ld_ãxt_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

509 
	`exo_dñëe
(
exo
);

512 
exo
 = 
	`exo_ªad
(
fd
);

513 i‡(!
exo


514 || 
exo
->
ec
 !
ec_li°


515 || !
exo
->
as_li°
.
hód


516 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


517 || !
exo
->
as_li°
.
hód
->
√xt


518 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


519 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

520 
	`Áèl
("countÇotÑead EIO data segment specifiers");

521 
cuºít
->
ld_d©a_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

522 
cuºít
->
ld_d©a_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

523 
	`exo_dñëe
(
exo
);

526 
exo
 = 
	`exo_ªad
(
fd
);

527 i‡(!
exo


528 || 
exo
->
ec
 !
ec_li°


529 || !
exo
->
as_li°
.
hód


530 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


531 || !
exo
->
as_li°
.
hód
->
√xt


532 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


533 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

534 
	`Áèl
("countÇotÑead EIO stack segment specifiers");

535 
cuºít
->
ld_°ack_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

536 
cuºít
->
ld_°ack_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

537 
	`exo_dñëe
(
exo
);

540 
exo
 = 
	`exo_ªad
(
fd
);

541 i‡(!
exo


542 || 
exo
->
ec
 !
ec_li°


543 || !
exo
->
as_li°
.
hód


544 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî


545 || !
exo
->
as_li°
.
hód
->
√xt


546 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss


547 || !
exo
->
as_li°
.
hód
->
√xt
->next

548 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss


549 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xà!
NULL
)

550 
	`Áèl
("couldÇotÑead EIO memoryÖage count");

551 
∑ge_cou¡
 = 
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
;

552 
ld_brk_poöt
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_addªss
.
vÆ
;

553 
ld_°ack_mö
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_addªss
.
vÆ
;

554 
	`exo_dñëe
(
exo
);

557 
exo
 = 
	`exo_ªad
(
fd
);

558 i‡(!
exo


559 || 
exo
->
ec
 !
ec_li°


560 || !
exo
->
as_li°
.
hód


561 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


562 || !
exo
->
as_li°
.
hód
->
√xt


563 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


564 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

565 
	`Áèl
("countÇotÑead EIOÅext segment specifiers");

566 
ld_ãxt_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

567 
ld_ãxt_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

568 
	`exo_dñëe
(
exo
);

571 
exo
 = 
	`exo_ªad
(
fd
);

572 i‡(!
exo


573 || 
exo
->
ec
 !
ec_li°


574 || !
exo
->
as_li°
.
hód


575 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


576 || !
exo
->
as_li°
.
hód
->
√xt


577 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


578 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

579 
	`Áèl
("countÇotÑead EIO data segment specifiers");

580 
ld_d©a_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

581 
ld_d©a_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

582 
	`exo_dñëe
(
exo
);

585 
exo
 = 
	`exo_ªad
(
fd
);

586 i‡(!
exo


587 || 
exo
->
ec
 !
ec_li°


588 || !
exo
->
as_li°
.
hód


589 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


590 || !
exo
->
as_li°
.
hód
->
√xt


591 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_öãgî


592 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

593 
	`Áèl
("countÇotÑead EIO stack segment specifiers");

594 
ld_°ack_ba£
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

595 
ld_°ack_size
 = ()
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
;

596 
	`exo_dñëe
(
exo
);

599 
i
=0; i < 
∑ge_cou¡
; i++)

601 
j
;

602 
md_addr_t
 
∑ge_addr
;

603 
exo_ãrm_t
 *
blob
;

606 
exo
 = 
	`exo_ªad
(
fd
);

607 i‡(!
exo


608 || 
exo
->
ec
 !
ec_li°


609 || !
exo
->
as_li°
.
hód


610 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_addªss


611 || !
exo
->
as_li°
.
hód
->
√xt


612 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_blob


613 || 
exo
->
as_li°
.
hód
->
√xt
->√xà!
NULL
)

614 
	`Áèl
("couldÇotÑead EIO memoryÖage");

615 
∑ge_addr
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
as_addªss
.
vÆ
;

616 
blob
 = 
exo
->
as_li°
.
hód
->
√xt
;

619 
j
=0; j < 
blob
->
as_blob
.
size
; j++)

621 
byã_t
 
vÆ
;

623 
vÆ
 = 
blob
->
as_blob
.
d©a
[
j
];

625 
	`MEM_WRITE_BYTE
(
mem
, 
∑ge_addr
, 
vÆ
);

626 
∑ge_addr
++;

628 
	`exo_dñëe
(
exo
);

631  
å™s_i˙t
;

632 
	}
}

634 
	smem_ªc_t
 {

635 
md_addr_t
 
	maddr
;

636 
	msize
, 
	mmaxsize
;

637 
exo_ãrm_t
 *
	mexo
;

638 
exo_ãrm_t
 *
	mblob
;

642 
exo_ãrm_t
 *
	göput_ªgs
;

643 
exo_ãrm_t
 *
	gouçut_ªgs
;

646 
exo_ãrm_t
 *
	göput_mem
;

647 
mem_ªc_t
 
	göput_mem_ªc
;

650 
exo_ãrm_t
 *
	gouçut_mem
;

651 
mem_ªc_t
 
	gouçut_mem_ªc
;

653 
	g£í_wrôe
;

654 
mem_ac˚ss_‚
 
	gloˇl_mem_‚
;

657 
	#BLOB_TAIL_SIZE
 256

	)

660 
md_Áu…_ty≥


661 
	$my_mem_‚
(
mem_t
 *
mem
,

662 
mem_cmd
 
cmd
,

663 
md_addr_t
 
addr
,

664 *
vp
,

665 
nbyãs
)

667 
i
;

668 *
p
 = 
vp
;

669 
mem_ªc_t
 *
mem_ªc
 = 
NULL
;

670 
exo_ãrm_t
 *
mem_li°
 = 
NULL
;

671 
md_Áu…_ty≥
 
Áu…
 = 
md_Áu…_n⁄e
;

673 i‡(
cmd
 =
Ród
 && 
£í_wrôe
)

674 
	`Áèl
("Readáfter Write inÉio_syscall()");

676 i‡(
cmd
 =
Wrôe
)

677 
£í_wrôe
 = 
TRUE
;

680 i‡(
cmd
 =
Ród
)

682 
mem_ªc
 = &
öput_mem_ªc
;

683 
mem_li°
 = 
öput_mem
;

685 i‡(
cmd
 =
Wrôe
)

687 
mem_ªc
 = &
ouçut_mem_ªc
;

688 
mem_li°
 = 
ouçut_mem
;

691 
	`∑nic
("bogus memoryáccess command");

694 i‡(
cmd
 =
Ród
 )

695 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, mem->
thªadid
);

700 i‡(
mem_ªc
->
exo
 !
NULL


701 && (
mem_ªc
->
addr
 + mem_ªc->
size
 ==áddr)

702 && (
mem_ªc
->
size
 + 
nbyãs
 < mem_ªc->
maxsize
))

705 
i
=0; i < 
nbyãs
; i++)

706 
mem_ªc
->
blob
->
as_blob
.
d©a
[mem_ªc->
size
 + 
i
] = 
p
[i];

707 
mem_ªc
->
size
 +
nbyãs
;

708 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

713 
mem_li°
->
as_li°
.
hód
 =

714 
	`exo_chaö
(
mem_li°
->
as_li°
.
hód
,

715 (
mem_ªc
->
exo
 =

716 
	`exo_√w
(
ec_li°
,

717 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
addr
),

718 (
mem_ªc
->
blob
 =

719 
	`exo_√w
(
ec_blob
, 
nbyãs
 + 
BLOB_TAIL_SIZE
, 
NULL
)),

720 
NULL
)));

721 
i
=0; i < 
nbyãs
; i++)

722 
mem_ªc
->
blob
->
as_blob
.
d©a
[
i
] = 
p
[i];

723 
mem_ªc
->
addr
 =áddr;

724 
mem_ªc
->
size
 = 
nbyãs
;

725 
mem_ªc
->
maxsize
 = 
nbyãs
 + 
BLOB_TAIL_SIZE
;

726 
mem_ªc
->
blob
->
as_blob
.
size
 = mem_rec->size;

730 i‡(
cmd
 =
Wrôe
 )

731 
Áu…
 = (*
loˇl_mem_‚
)(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, mem->
thªadid
);

733  
Áu…
;

734 
	}
}

740 
	$eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

741 
cou¡î_t
 
i˙t
,

742 
ªgs_t
 *
ªgs
,

743 
mem_ac˚ss_‚
 
mem_‚
,

744 
mem_t
 *
mem
,

745 
md_ö°_t
 
ö°
)

747 
i
;

748 
exo_ãrm_t
 *
exo
;

750 #ifde‡
SMT_SS


751 
thªadid
 = 
mem
->threadid;

752 
c⁄ãxt
 *
cuºít
;

753 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

757 
öput_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

758 
i
=
MD_FIRST_IN_REG
; i <
MD_LAST_IN_REG
; i++)

760 
öput_ªgs
->
as_li°
.
hód
 =

761 
	`exo_chaö
(
öput_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

765 
öput_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
öput_mem_ªc
.
exo
 = NULL;

766 
ouçut_mem
 = 
	`exo_√w
(
ec_li°
, 
NULL
); 
ouçut_mem_ªc
.
exo
 = NULL;

769 
£í_wrôe
 = 
FALSE
;

770 
loˇl_mem_‚
 = 
mem_‚
;

772 #ifde‡
SMT_SS


773 i‡(
cuºít
->
sim_eio_fd
 !
NULL
)

774 
	`eio_ªad_åa˚
(
cuºít
->
sim_eio_fd
, 
i˙t
, 
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
);

776 i‡(
sim_eio_fd
 !
NULL
)

777 
	`eio_ªad_åa˚
(
sim_eio_fd
, 
i˙t
, 
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
);

781 
	`sys_sysˇŒ
(
ªgs
, 
my_mem_‚
, 
mem
, 
ö°
, 
FALSE
);

785 
ouçut_ªgs
 = 
	`exo_√w
(
ec_li°
, 
NULL
);

786 #ifde‡
SMT_SS


787 
ouçut_ªgs
->
as_li°
.
hód
 =

788 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
,

789 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
cuºít
->
ld_brk_poöt
));

791 
ouçut_ªgs
->
as_li°
.
hód
 =

792 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
,

793 
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ld_brk_poöt
));

795 
i
=
MD_FIRST_OUT_REG
; i <
MD_LAST_OUT_REG
; i++)

797 
ouçut_ªgs
->
as_li°
.
hód
 =

798 
	`exo_chaö
(
ouçut_ªgs
->
as_li°
.
hód
, 
	`MD_IREG_TO_EXO
(
ªgs
, 
i
));

802 
exo
 = 
	`exo_√w
(
ec_li°
,

803  
	`exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
i˙t
),

804  
	`exo_√w
(
ec_addªss
, (
exo_öãgî_t
)
ªgs
->
ªgs_PC
),

805 
öput_ªgs
, 
öput_mem
,

806 
ouçut_ªgs
, 
ouçut_mem
,

807 
NULL
);

808 
	`exo_¥öt
(
exo
, 
eio_fd
);

809 
	`Ârötf
(
eio_fd
, "\n\n");

812 
	`exo_dñëe
(
exo
);

815 
eio_å™s_i˙t
 = 
i˙t
;

816 
	}
}

822 
	$eio_ªad_åa˚
(
FILE
 *
eio_fd
,

823 
cou¡î_t
 
i˙t
,

824 
ªgs_t
 *
ªgs
,

825 
mem_ac˚ss_‚
 
mem_‚
,

826 
mem_t
 *
mem
,

827 
md_ö°_t
 
ö°
)

829 
i
;

830 
exo_ãrm_t
 *
exo
, *
exo_i˙t
, *
exo_pc
;

831 
exo_ãrm_t
 *
exo_öªgs
, *
exo_ömem
, *
exo_ouåegs
, *
exo_outmem
;

832 
exo_ãrm_t
 *
brkªc
, *
ªgªc
, *
memªc
;

834 #ifde‡
SMT_SS


835 
thªadid
 = 
mem
->threadid;

836 
c⁄ãxt
 *
cuºít
;

837 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

841 i‡(
	`MD_EXIT_SYSCALL
(
ªgs
))

843 
¥ogøm_com∂ëe
 = 1;

844 
	`fÊush
(
°dout
);

845 
	`¥ötf
("exiting\n");

847 
	`sys_sysˇŒ
(
ªgs
, 
mem_‚
, 
mem
, 
ö°
, 
FALSE
);

848 
	`∑nic
("returned fromÉxit() system call");

852 
exo
 = 
	`exo_ªad
(
eio_fd
);

855 
eio_å™s_i˙t
 = 
i˙t
;

858 i‡(!
exo


859 || 
exo
->
ec
 !
ec_li°


860 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

861 || 
exo_i˙t
->
ec
 !
ec_öãgî


862 || !(
exo_pc
 = 
exo_i˙t
->
√xt
)

863 || 
exo_pc
->
ec
 !
ec_addªss


864 || !(
exo_öªgs
 = 
exo_pc
->
√xt
)

865 || 
exo_öªgs
->
ec
 !
ec_li°


866 || !(
exo_ömem
 = 
exo_öªgs
->
√xt
)

867 || 
exo_ömem
->
ec
 !
ec_li°


868 || !(
exo_ouåegs
 = 
exo_ömem
->
√xt
)

869 || 
exo_ouåegs
->
ec
 !
ec_li°


870 || !(
exo_outmem
 = 
exo_ouåegs
->
√xt
)

871 || 
exo_outmem
->
ec
 !
ec_li°


872 || 
exo_outmem
->
√xt
 !
NULL
)

873 
	`Áèl
("cannotÑead EIOÅransaction");

880 i‡(
i˙t
 !(
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
)

881 
	`Áèl
("EIOÅrace inconsistency: ICNT mismatch");

884 i‡(
ªgs
->
ªgs_PC
 !(
md_addr_t
)
exo_pc
->
as_öãgî
.
vÆ
)

885 
	`Áèl
("EIOÅrace inconsistency: PC mismatch");

888 
i
=
MD_FIRST_IN_REG
, 
ªgªc
=
exo_öªgs
->
as_li°
.
hód
;

889 
i
 <
MD_LAST_IN_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

891 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

892 
	`Áèl
("EIOÅrace inconsistency: missing inputÑeg");

894 i‡(
	`MD_EXO_CMP_IREG
(
ªgªc
, 
ªgs
, 
i
))

895 
	`Áèl
("EIOÅø˚ inc⁄si°ícy: R[%d] i≈uàmism©ch", 
i
);

896 #ifde‡
VERBOSE


897 
	`Ârötf
(
°dîr
, "** R[%d] check†out...\n", 
i
);

900 i‡(
ªgªc
 !
NULL
)

901 
	`Áèl
("EIOÅrace inconsistency:Åoo many inputÑegs");

904 
memªc
=
exo_ömem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

906 
md_addr_t
 
loc
;

907 
exo_ãrm_t
 *
addr
, *
blob
;

910 i‡(!
memªc


911 || 
memªc
->
ec
 !
ec_li°


912 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

913 || 
addr
->
ec
 !
ec_addªss


914 || !(
blob
 = 
addr
->
√xt
)

915 || 
blob
->
ec
 !
ec_blob


916 || 
blob
->
√xt
 !
NULL
)

917 
	`Áèl
("EIOÅrace inconsistency: bad memoryÅransaction");

919 
loc
=
addr
->
as_öãgî
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

921 
vÆ
;

924 (*
mem_‚
)(
mem
, 
Ród
, 
loc
, &
vÆ
, (), mem->
thªadid
);

926 i‡(
vÆ
 !
blob
->
as_blob
.
d©a
[
i
])

927 
	`Áèl
("EIOÅø˚ inc⁄si°ícy:ádd∏0x%08∞öpuàmism©ch", 
loc
);

929 #ifde‡
VERBOSE


930 
	`myÂrötf
(
°dîr
, "** 0x%08∞check†out...\n", 
loc
);

935 i‡(
	`MD_OUTPUT_SYSCALL
(
ªgs
))

937 #ifde‡
SMT_SS


938 i‡(
cuºít
->
sim_¥ogfd
)

941 
	`fwrôe
(
blob
->
as_blob
.
d©a
, 1, blob->as_blob.
size
, 
cuºít
->
sim_¥ogfd
);

944 i‡(
sim_¥ogfd
)

947 
	`fwrôe
(
blob
->
as_blob
.
d©a
, 1, blob->as_blob.
size
, 
sim_¥ogfd
);

953 
	`wrôe
(
	`MD_STREAM_FILENO
(
ªgs
),

954 
blob
->
as_blob
.
d©a
, blob->as_blob.
size
);

964 
brkªc
 = 
exo_ouåegs
->
as_li°
.
hód
;

965 i‡(!
brkªc
 || brkªc->
ec
 !
ec_addªss
)

966 
	`Áèl
("EIOÅrace inconsistency: missing memory breakpoint");

967 #ifde‡
SMT_SS


968 
cuºít
->
ld_brk_poöt
 = (
md_addr_t
)
brkªc
->
as_öãgî
.
vÆ
;

970 
ld_brk_poöt
 = (
md_addr_t
)
brkªc
->
as_öãgî
.
vÆ
;

974 
i
=
MD_FIRST_OUT_REG
, 
ªgªc
=
exo_ouåegs
->
as_li°
.
hód
->
√xt
;

975 
i
 <
MD_LAST_OUT_REG
; i++, 
ªgªc
Ùegªc->
√xt
)

977 i‡(!
ªgªc
 ||Ñegªc->
ec
 !
ec_addªss
)

978 
	`Áèl
("EIOÅrace inconsistency: missing outputÑeg");

980 
	`MD_EXO_TO_IREG
(
ªgªc
, 
ªgs
, 
i
);

982 #ifde‡
VERBOSE


983 
	`Ârötf
(
°dîr
, "** R[%d] wrôãn...\n", 
i
);

986 i‡(
ªgªc
 !
NULL
)

987 
	`Áèl
("EIOÅrace inconsistency:Åoo many outputÑegs");

990 
memªc
=
exo_outmem
->
as_li°
.
hód
; memª¯!
NULL
; memªc=memªc->
√xt
)

992 
md_addr_t
 
loc
;

993 
exo_ãrm_t
 *
addr
, *
blob
;

996 i‡(!
memªc


997 || 
memªc
->
ec
 !
ec_li°


998 || !(
addr
 = 
memªc
->
as_li°
.
hód
)

999 || 
addr
->
ec
 !
ec_addªss


1000 || !(
blob
 = 
addr
->
√xt
)

1001 || 
blob
->
ec
 !
ec_blob


1002 || 
blob
->
√xt
 !
NULL
)

1003 
	`Áèl
("EIOÅrace icnonsistency: bad memoryÅransaction");

1005 
loc
=
addr
->
as_öãgî
.
vÆ
, 
i
=0; i < 
blob
->
as_blob
.
size
;Üoc++,i++)

1008 (*
mem_‚
)(
mem
, 
Wrôe
, 
loc
, &
blob
->
as_blob
.
d©a
[
i
], (), mem->
thªadid
);

1010 #ifde‡
VERBOSE


1011 
	`Ârötf
(
°dîr
, "** 0x%08∞wrôãn...\n", 
loc
);

1017 
	`exo_dñëe
(
exo
);

1018 
	}
}

1022 
	$eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
)

1024 
exo_ãrm_t
 *
exo
, *
exo_i˙t
;

1029 
exo
 = 
	`exo_ªad
(
eio_fd
);

1031 i‡(!
exo
)

1032 
	`Áèl
("couldÇot fast forwardÅo EIO checkpoint");

1035 
eio_å™s_i˙t
 = 
i˙t
;

1038 i‡(!
exo


1039 || 
exo
->
ec
 !
ec_li°


1040 || !(
exo_i˙t
 = 
exo
->
as_li°
.
hód
)

1041 || 
exo_i˙t
->
ec
 !
ec_öãgî
)

1042 
	`Áèl
("cannotÑead EIOÅransaction (during fast forward)");

1044 (
cou¡î_t
)
exo_i˙t
->
as_öãgî
.
vÆ
 !
i˙t
);

1047 
	}
}

	@eio.h

80 #i‚de‡
EIO_H


81 
	#EIO_H


	)

83 
	~<°dio.h
>

86 
	#EIO_PISA_FORMAT
 1

	)

87 
	#EIO_ALPHA_FORMAT
 2

	)

90 
	#EIO_FILE_VERSION
 3

	)

92 
FILE
 *
eio_¸óã
(*
‚ame
);

94 
FILE
 *
eio_›í
(*
‚ame
);

97 
eio_vÆid
(*
‚ame
);

99 
eio_˛o£
(
FILE
 *
fd
);

103 
cou¡î_t


104 
eio_wrôe_chk±
(
ªgs_t
 *
ªgs
,

105 
mem_t
 *
mem
,

106 
FILE
 *
fd
);

110 
cou¡î_t


111 
eio_ªad_chk±
(
ªgs_t
 *
ªgs
,

112 
mem_t
 *
mem
,

113 
FILE
 *
fd
);

119 
eio_wrôe_åa˚
(
FILE
 *
eio_fd
,

120 
cou¡î_t
 
i˙t
,

121 
ªgs_t
 *
ªgs
,

122 
mem_ac˚ss_‚
 
mem_‚
,

123 
mem_t
 *
mem
,

124 
md_ö°_t
 
ö°
);

130 
eio_ªad_åa˚
(
FILE
 *
eio_fd
,

131 
cou¡î_t
 
i˙t
,

132 
ªgs_t
 *
ªgs
,

133 
mem_ac˚ss_‚
 
mem_‚
,

134 
mem_t
 *
mem
,

135 
md_ö°_t
 
ö°
);

138 
eio_Á°_f‹w¨d
(
FILE
 *
eio_fd
, 
cou¡î_t
 
i˙t
);

	@endian.c

88 
	~"ídün.h
"

89 #i‚de‡
HOST_ONLY


90 
	~"lﬂdî.h
"

93 
	~"smt.h
"

95 #ifde‡
SMT_SS


96 
	~"c⁄ãxt.h
"

101 
ídün_t


102 
	$ídün_ho°_byã_‹dî
()

104 
i
 = 1, *
p
;

106 
p
 = &
i
;

107 i‡(*((*)
p
) == 1)

108  
ídün_lôée
;

109 i‡(*((*)
p
) == 0)

110  
ídün_big
;

112  
ídün_unknown
;

113 
	}
}

116 
ídün_t


117 
	$ídün_ho°_w‹d_‹dî
()

119 *
p
;

120 
x
 = 1.0;

123 
p
 = (*)&
x
;

124 i‡(*
p
 == 0)

125  
ídün_lôée
;

126 i‡(*
p
 == 0x3ff00000)

127  
ídün_big
;

129  
ídün_unknown
;

130 
	}
}

132 #i‚de‡
HOST_ONLY


134 #ifde‡
SMT_SS


137 
ídün_t


138 
	$ídün_èrgë_byã_‹dî
(
thªadid
)

140 
c⁄ãxt
 *
cuºít
;

141 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

142  
cuºít
->
ld_èrgë_big_ídün
 ? 
ídün_big
 : 
ídün_lôée
;

143 
	}
}

147 
ídün_t


148 
	$ídün_èrgë_w‹d_‹dî
(
thªadid
)

151  
	`ídün_èrgë_byã_‹dî
(
thªadid
);

152 
	}
}

157 
ídün_t


158 
	$ídün_èrgë_byã_‹dî
()

160  
ld_èrgë_big_ídün
 ? 
ídün_big
 : 
ídün_lôée
;

161 
	}
}

165 
ídün_t


166 
	$ídün_èrgë_w‹d_‹dî
()

169  
	`ídün_èrgë_byã_‹dî
();

170 
	}
}

	@endian.h

100 
	~"smt.h
"

103 #i‚de‡
ENDIAN_H


104 
	#ENDIAN_H


	)

107 
	#SWAP_HALF
(
X
Ë\

	)

108 (((((
	ghÆf_t
)(
	gX
)) & 0xff) << 8) | ((((half_t)(X)) & 0xff00) >> 8))

109 
	#SWAP_WORD
(
X
Ë(((
w‹d_t
)(XË<< 24Ë| \

	)

110 (((
	gw‹d_t
)(
	gX
) << 8) & 0x00ff0000) | \

111 (((
	gw‹d_t
)(
	gX
) >> 8) & 0x0000ff00) | \

112 (((
	gw‹d_t
)(
	gX
) >> 24) & 0x000000ff))

113 
	#SWAP_QWORD
(
X
Ë(((
qw‹d_t
)(XË<< 56Ë| \

	)

114 (((
	gqw‹d_t
)(
	gX
Ë<< 40Ë& 
ULL
(0x00ff000000000000)) |\

115 (((
	gqw‹d_t
)(
	gX
Ë<< 24Ë& 
ULL
(0x0000ff0000000000)) |\

116 (((
	gqw‹d_t
)(
	gX
Ë<< 8Ë& 
ULL
(0x000000ff00000000)) |\

117 (((
	gqw‹d_t
)(
	gX
Ë>> 8Ë& 
ULL
(0x00000000ff000000)) |\

118 (((
	gqw‹d_t
)(
	gX
Ë>> 24Ë& 
ULL
(0x0000000000ff0000)) |\

119 (((
	gqw‹d_t
)(
	gX
Ë>> 40Ë& 
ULL
(0x000000000000ff00)) |\

120 (((
	gqw‹d_t
)(
	gX
Ë>> 56Ë& 
	$ULL
(0x00000000000000ff)))

123 
	eídün_t
 { 
ídün_big
=0, 
ídün_lôée
=1, 
ídün_unknown
=2};

125 
ídün_t


126 
	`ídün_ho°_byã_‹dî
();

129 
ídün_t


130 
	`ídün_ho°_w‹d_‹dî
();

132 #i‚de‡
HOST_ONLY


134 #ifde‡
SMT_SS


137 
ídün_t


138 
	`ídün_èrgë_byã_‹dî
(
thªadid
);

142 
ídün_t


143 
	`ídün_èrgë_w‹d_‹dî
(
thªdid
);

148 
ídün_t


149 
	`ídün_èrgë_byã_‹dî
();

153 
ídün_t


154 
	`ídün_èrgë_w‹d_‹dî
();

	@eval.c

100 
	~<°dio.h
>

101 
	~<°dlib.h
>

102 
	~<˘y≥.h
>

103 
	~<î∫o.h
>

105 
	~"ho°.h
"

106 
	~"misc.h
"

107 
	~"evÆ.h
"

109 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

110 
	#°πoul
 
°πﬁ


	)

114 
evÆ_îr_t
 
	gevÆ_îr‹
 = 
ERR_NOERR
;

117 *
	gevÆ_îr_°r
[
ERR_NUM
] = {

129 * 
	gevÆ_îr_exåa_öfo
 = 
NULL
;

132 
evÆ_tokí_t
 
	gtok_m≠
[256];

133 
	gtok_m≠_öôülized
 = 
FALSE
;

137 
	$öô_tok_m≠
()

139 
i
;

141 
i
=0; i<256; i++)

142 
tok_m≠
[
i
] = 
tok_övÆid
;

145 
i
='a'; i<='z'; i++)

146 
tok_m≠
[
i
] = 
tok_idít
;

147 
i
='A'; i<='Z'; i++)

148 
tok_m≠
[
i
] = 
tok_idít
;

149 
tok_m≠
[()'_'] = 
tok_idít
;

150 
tok_m≠
[()'$'] = 
tok_idít
;

153 
i
='0'; i<='9'; i++)

154 
tok_m≠
[
i
] = 
tok_c⁄°
;

155 
tok_m≠
[()'.'] = 
tok_c⁄°
;

158 
tok_m≠
[()'+'] = 
tok_∂us
;

159 
tok_m≠
[()'-'] = 
tok_möus
;

160 
tok_m≠
[()'*'] = 
tok_mu…
;

161 
tok_m≠
[()'/'] = 
tok_div
;

162 
tok_m≠
[()'('] = 
tok_›¨í
;

163 
tok_m≠
[()')'] = 
tok_˝¨í
;

166 
tok_m≠
[()' '] = 
tok_whôe•a˚
;

167 
tok_m≠
[()'\t'] = 
tok_whôe•a˚
;

168 
	}
}

171 
evÆ_tokí_t


172 
	$gë_√xt_tokí
(
evÆ_°©e_t
 *
es
)

174 
Ælow_hex
;

175 
evÆ_tokí_t
 
tok
;

176 *
±ok_buf
, 
œ°_ch¨
;

179 i‡(!
tok_m≠_öôülized
)

181 
	`öô_tok_m≠
();

182 
tok_m≠_öôülized
 = 
TRUE
;

186 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

188 
tok
 = 
es
->
≥ek_tok
;

189 
es
->
≥ek_tok
 = 
tok_övÆid
;

190  
tok
;

194 
±ok_buf
 = 
es
->
tok_buf
;

195 *
±ok_buf
 = '\0';

198 *
es
->
p
 && 
tok_m≠
[()*es->p] =
tok_whôe•a˚
)

199 
es
->
p
++;

202 i‡(*
es
->
p
 == '\0')

203  
tok_eof
;

205 *
±ok_buf
++ = *
es
->
p
;

206 
tok
 = 
tok_m≠
[()*
es
->
p
++];

207 
tok
)

209 
tok_idít
:

211 *
es
->
p


212 && (
tok_m≠
[()*
es
->
p
] =
tok_idít


213 || 
tok_m≠
[()*
es
->
p
] =
tok_c⁄°
))

215 *
±ok_buf
++ = *
es
->
p
++;

218 
tok_c⁄°
:

220 
œ°_ch¨
 = '\0';

221 
Ælow_hex
 = 
FALSE
;

222 *
es
->
p
 &&

223 (
tok_m≠
[()*
es
->
p
] =
tok_c⁄°


224 || (*
es
->
p
 ='-' && 
œ°_ch¨
 == 'e')

225 || (*
es
->
p
 ='+' && 
œ°_ch¨
 == 'e')

226 || 
	`tﬁowî
(()(*
es
->
p
)) == 'e'

227 || 
	`tﬁowî
(()(*
es
->
p
)) == 'x'

228 || (
	`tﬁowî
(()(*
es
->
p
)Ë='a' && 
Ælow_hex
)

229 || (
	`tﬁowî
(()(*
es
->
p
)Ë='b' && 
Ælow_hex
)

230 || (
	`tﬁowî
(()(*
es
->
p
)Ë='c' && 
Ælow_hex
)

231 || (
	`tﬁowî
(()(*
es
->
p
)Ë='d' && 
Ælow_hex
)

232 || (
	`tﬁowî
(()(*
es
->
p
)Ë='e' && 
Ælow_hex
)

233 || (
	`tﬁowî
(()(*
es
->
p
)Ë='f' && 
Ælow_hex
)))

235 
œ°_ch¨
 = 
	`tﬁowî
(()(*
es
->
p
));

236 i‡(*
es
->
p
 == 'x' || *es->p == 'X')

237 
Ælow_hex
 = 
TRUE
;

238 *
±ok_buf
++ = *
es
->
p
++;

241 
tok_∂us
:

242 
tok_möus
:

243 
tok_mu…
:

244 
tok_div
:

245 
tok_›¨í
:

246 
tok_˝¨í
:

250 
tok
 = 
tok_övÆid
;

255 *
±ok_buf
 = '\0';

257  
tok
;

258 
	}
}

262 
evÆ_tokí_t


263 
	$≥ek_√xt_tokí
(
evÆ_°©e_t
 *
es
)

266 i‡(
es
->
≥ek_tok
 =
tok_övÆid
)

268 
es
->
œ°p
 =És->
p
;

269 
es
->
≥ek_tok
 = 
	`gë_√xt_tokí
(es);

273  
es
->
≥ek_tok
;

274 
	}
}

277 
evÆ_vÆue_t
 
ex¥
(
evÆ_°©e_t
 *
es
);

280 
evÆ_vÆue_t
 
	gîr_vÆue
 = { 
ë_öt
, { 0 } };

283 *
	gevÆ_ty≥_°r
[
ë_NUM
] = {

287 #ifde‡
HOST_HAS_QWORD


297 
evÆ_ty≥_t


298 
	$ªsu…_ty≥
(
evÆ_ty≥_t
 
t1
,

299 
evÆ_ty≥_t
 
t2
)

302 i‡(
t1
 =
ë_symbﬁ
 || 
t2
 ==Ét_symbol)

303 
	`∑nic
("symbol used inÉxpression");

306 i‡(
t1
 =
ë_doubÀ
 || 
t2
 ==Ét_double)

307  
ë_doubÀ
;

308 i‡(
t1
 =
ë_Êﬂt
 || 
t2
 ==Ét_float)

309  
ë_Êﬂt
;

310 #ifde‡
HOST_HAS_QWORD


311 i‡(
t1
 =
ë_qw‹d
 || 
t2
 ==Ét_qword)

312  
ë_qw‹d
;

313 i‡(
t1
 =
ë_sqw‹d
 || 
t2
 ==Ét_sqword)

314  
ë_sqw‹d
;

316 i‡(
t1
 =
ë_addr
 || 
t2
 ==Ét_addr)

317  
ë_addr
;

318 i‡(
t1
 =
ë_uöt
 || 
t2
 ==Ét_uint)

319  
ë_uöt
;

321  
ë_öt
;

322 
	}
}

330 
	$evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
)

332 
vÆ
.
ty≥
)

334 
ë_doubÀ
:

335  
vÆ
.
vÆue
.
as_doubÀ
;

336 
ë_Êﬂt
:

337  ()
vÆ
.
vÆue
.
as_Êﬂt
;

338 #ifde‡
HOST_HAS_QWORD


339 
ë_qw‹d
:

340 #ifde‡
_MSC_VER


341  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

343  ()
vÆ
.
vÆue
.
as_qw‹d
;

345 
ë_sqw‹d
:

346  ()
vÆ
.
vÆue
.
as_sqw‹d
;

348 
ë_addr
:

349 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

351  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

353  ()
vÆ
.
vÆue
.
as_addr
;

355 
ë_uöt
:

356  ()
vÆ
.
vÆue
.
as_uöt
;

357 
ë_öt
:

358  ()
vÆ
.
vÆue
.
as_öt
;

359 
ë_symbﬁ
:

360 
	`∑nic
("symbol used inÉxpression");

362 
	`∑nic
("illegalárithmeticÉxpression conversion");

364 
	}
}

368 
	$evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
)

370 
vÆ
.
ty≥
)

372 
ë_doubÀ
:

373  ()
vÆ
.
vÆue
.
as_doubÀ
;

374 
ë_Êﬂt
:

375  
vÆ
.
vÆue
.
as_Êﬂt
;

376 #ifde‡
HOST_HAS_QWORD


377 
ë_qw‹d
:

378 #ifde‡
_MSC_VER


379  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

381  ()
vÆ
.
vÆue
.
as_qw‹d
;

383 
ë_sqw‹d
:

384  ()
vÆ
.
vÆue
.
as_sqw‹d
;

386 
ë_addr
:

387 #i‡
	`deföed
(
_MSC_VER
Ë&& deföed(
TARGET_ALPHA
)

389  ()(
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

391  ()
vÆ
.
vÆue
.
as_addr
;

393 
ë_uöt
:

394  ()
vÆ
.
vÆue
.
as_uöt
;

395 
ë_öt
:

396  ()
vÆ
.
vÆue
.
as_öt
;

397 
ë_symbﬁ
:

398 
	`∑nic
("symbol used inÉxpression");

400 
	`∑nic
("illegalárithmeticÉxpression conversion");

402 
	}
}

404 #ifde‡
HOST_HAS_QWORD


406 
qw‹d_t


407 
	$evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
)

409 
vÆ
.
ty≥
)

411 
ë_doubÀ
:

412  (
qw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

413 
ë_Êﬂt
:

414  (
qw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

415 
ë_qw‹d
:

416  
vÆ
.
vÆue
.
as_qw‹d
;

417 
ë_sqw‹d
:

418  (
qw‹d_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

419 
ë_addr
:

420  (
qw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

421 
ë_uöt
:

422  (
qw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

423 
ë_öt
:

424  (
qw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

425 
ë_symbﬁ
:

426 
	`∑nic
("symbol used inÉxpression");

428 
	`∑nic
("illegalárithmeticÉxpression conversion");

430 
	}
}

433 
sqw‹d_t


434 
	$evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
)

436 
vÆ
.
ty≥
)

438 
ë_doubÀ
:

439  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_doubÀ
;

440 
ë_Êﬂt
:

441  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

442 
ë_qw‹d
:

443  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_qw‹d
;

444 
ë_sqw‹d
:

445  
vÆ
.
vÆue
.
as_sqw‹d
;

446 
ë_addr
:

447  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_addr
;

448 
ë_uöt
:

449  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_uöt
;

450 
ë_öt
:

451  (
sqw‹d_t
)
vÆ
.
vÆue
.
as_öt
;

452 
ë_symbﬁ
:

453 
	`∑nic
("symbol used inÉxpression");

455 
	`∑nic
("illegalárithmeticÉxpression conversion");

457 
	}
}

461 
md_addr_t


462 
	$evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
)

464 
vÆ
.
ty≥
)

466 
ë_doubÀ
:

467  (
md_addr_t
)
vÆ
.
vÆue
.
as_doubÀ
;

468 
ë_Êﬂt
:

469  (
md_addr_t
)
vÆ
.
vÆue
.
as_Êﬂt
;

470 #ifde‡
HOST_HAS_QWORD


471 
ë_qw‹d
:

472  (
md_addr_t
)
vÆ
.
vÆue
.
as_qw‹d
;

473 
ë_sqw‹d
:

474  (
md_addr_t
)
vÆ
.
vÆue
.
as_sqw‹d
;

476 
ë_addr
:

477  
vÆ
.
vÆue
.
as_addr
;

478 
ë_uöt
:

479  (
md_addr_t
)
vÆ
.
vÆue
.
as_uöt
;

480 
ë_öt
:

481  (
md_addr_t
)
vÆ
.
vÆue
.
as_öt
;

482 
ë_symbﬁ
:

483 
	`∑nic
("symbol used inÉxpression");

485 
	`∑nic
("illegalárithmeticÉxpression conversion");

487 
	}
}

491 
	$evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
)

493 
vÆ
.
ty≥
)

495 
ë_doubÀ
:

496  ()
vÆ
.
vÆue
.
as_doubÀ
;

497 
ë_Êﬂt
:

498  ()
vÆ
.
vÆue
.
as_Êﬂt
;

499 #ifde‡
HOST_HAS_QWORD


500 
ë_qw‹d
:

501  ()
vÆ
.
vÆue
.
as_qw‹d
;

502 
ë_sqw‹d
:

503  ()
vÆ
.
vÆue
.
as_sqw‹d
;

505 
ë_addr
:

506  ()
vÆ
.
vÆue
.
as_addr
;

507 
ë_uöt
:

508  
vÆ
.
vÆue
.
as_uöt
;

509 
ë_öt
:

510  ()
vÆ
.
vÆue
.
as_öt
;

511 
ë_symbﬁ
:

512 
	`∑nic
("symbol used inÉxpression");

514 
	`∑nic
("illegalárithmeticÉxpression conversion");

516 
	}
}

520 
	$evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
)

522 
vÆ
.
ty≥
)

524 
ë_doubÀ
:

525  ()
vÆ
.
vÆue
.
as_doubÀ
;

526 
ë_Êﬂt
:

527  ()
vÆ
.
vÆue
.
as_Êﬂt
;

528 #ifde‡
HOST_HAS_QWORD


529 
ë_qw‹d
:

530  ()
vÆ
.
vÆue
.
as_qw‹d
;

531 
ë_sqw‹d
:

532  ()
vÆ
.
vÆue
.
as_sqw‹d
;

534 
ë_addr
:

535  ()
vÆ
.
vÆue
.
as_addr
;

536 
ë_uöt
:

537  ()
vÆ
.
vÆue
.
as_uöt
;

538 
ë_öt
:

539  
vÆ
.
vÆue
.
as_öt
;

540 
ë_symbﬁ
:

541 
	`∑nic
("symbol used inÉxpression");

543 
	`∑nic
("illegalárithmeticÉxpression conversion");

545 
	}
}

552 
evÆ_vÆue_t


553 
	$f_add
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

555 
evÆ_ty≥_t
 
ë
;

556 
evÆ_vÆue_t
 
vÆ
;

559 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

561 
evÆ_îr‹
 = 
ERR_BADEXPR
;

562  
îr_vÆue
;

566 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

567 
ë
)

569 
ë_doubÀ
:

570 
vÆ
.
ty≥
 = 
ë_doubÀ
;

571 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë+ÉvÆ_as_doubÀ(
vÆ2
);

573 
ë_Êﬂt
:

574 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

575 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë+ÉvÆ_as_Êﬂt(
vÆ2
);

577 #ifde‡
HOST_HAS_QWORD


578 
ë_qw‹d
:

579 
vÆ
.
ty≥
 = 
ë_qw‹d
;

580 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë+ÉvÆ_as_qw‹d(
vÆ2
);

582 
ë_sqw‹d
:

583 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

584 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë+ÉvÆ_as_sqw‹d(
vÆ2
);

587 
ë_addr
:

588 
vÆ
.
ty≥
 = 
ë_addr
;

589 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë+ÉvÆ_as_addr(
vÆ2
);

591 
ë_uöt
:

592 
vÆ
.
ty≥
 = 
ë_uöt
;

593 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë+ÉvÆ_as_uöt(
vÆ2
);

595 
ë_öt
:

596 
vÆ
.
ty≥
 = 
ë_öt
;

597 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë+ÉvÆ_as_öt(
vÆ2
);

600 
	`∑nic
("bogusÉxpressionÅype");

603  
vÆ
;

604 
	}
}

607 
evÆ_vÆue_t


608 
	$f_sub
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

610 
evÆ_ty≥_t
 
ë
;

611 
evÆ_vÆue_t
 
vÆ
;

614 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

616 
evÆ_îr‹
 = 
ERR_BADEXPR
;

617  
îr_vÆue
;

621 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

622 
ë
)

624 
ë_doubÀ
:

625 
vÆ
.
ty≥
 = 
ë_doubÀ
;

626 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë-ÉvÆ_as_doubÀ(
vÆ2
);

628 
ë_Êﬂt
:

629 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

630 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë-ÉvÆ_as_Êﬂt(
vÆ2
);

632 #ifde‡
HOST_HAS_QWORD


633 
ë_qw‹d
:

634 
vÆ
.
ty≥
 = 
ë_qw‹d
;

635 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë-ÉvÆ_as_qw‹d(
vÆ2
);

637 
ë_sqw‹d
:

638 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

639 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë-ÉvÆ_as_sqw‹d(
vÆ2
);

642 
ë_addr
:

643 
vÆ
.
ty≥
 = 
ë_addr
;

644 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë-ÉvÆ_as_addr(
vÆ2
);

646 
ë_uöt
:

647 
vÆ
.
ty≥
 = 
ë_uöt
;

648 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë-ÉvÆ_as_uöt(
vÆ2
);

650 
ë_öt
:

651 
vÆ
.
ty≥
 = 
ë_öt
;

652 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë-ÉvÆ_as_öt(
vÆ2
);

655 
	`∑nic
("bogusÉxpressionÅype");

658  
vÆ
;

659 
	}
}

662 
evÆ_vÆue_t


663 
	$f_mu…
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

665 
evÆ_ty≥_t
 
ë
;

666 
evÆ_vÆue_t
 
vÆ
;

669 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

671 
evÆ_îr‹
 = 
ERR_BADEXPR
;

672  
îr_vÆue
;

676 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

677 
ë
)

679 
ë_doubÀ
:

680 
vÆ
.
ty≥
 = 
ë_doubÀ
;

681 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë*ÉvÆ_as_doubÀ(
vÆ2
);

683 
ë_Êﬂt
:

684 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

685 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë*ÉvÆ_as_Êﬂt(
vÆ2
);

687 #ifde‡
HOST_HAS_QWORD


688 
ë_qw‹d
:

689 
vÆ
.
ty≥
 = 
ë_qw‹d
;

690 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë*ÉvÆ_as_qw‹d(
vÆ2
);

692 
ë_sqw‹d
:

693 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

694 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë*ÉvÆ_as_sqw‹d(
vÆ2
);

697 
ë_addr
:

698 
vÆ
.
ty≥
 = 
ë_addr
;

699 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë*ÉvÆ_as_addr(
vÆ2
);

701 
ë_uöt
:

702 
vÆ
.
ty≥
 = 
ë_uöt
;

703 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë*ÉvÆ_as_uöt(
vÆ2
);

705 
ë_öt
:

706 
vÆ
.
ty≥
 = 
ë_öt
;

707 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë*ÉvÆ_as_öt(
vÆ2
);

710 
	`∑nic
("bogusÉxpressionÅype");

713  
vÆ
;

714 
	}
}

717 
evÆ_vÆue_t


718 
	$f_div
(
evÆ_vÆue_t
 
vÆ1
, evÆ_vÆue_à
vÆ2
)

720 
evÆ_ty≥_t
 
ë
;

721 
evÆ_vÆue_t
 
vÆ
;

724 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
 || 
vÆ2
.type ==Ét_symbol)

726 
evÆ_îr‹
 = 
ERR_BADEXPR
;

727  
îr_vÆue
;

731 
ë
 = 
	`ªsu…_ty≥
(
vÆ1
.
ty≥
, 
vÆ2
.type);

732 
ë
)

734 
ë_doubÀ
:

735 
vÆ
.
ty≥
 = 
ë_doubÀ
;

736 
vÆ
.
vÆue
.
as_doubÀ
 = 
	`evÆ_as_doubÀ
(
vÆ1
Ë/ÉvÆ_as_doubÀ(
vÆ2
);

738 
ë_Êﬂt
:

739 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

740 
vÆ
.
vÆue
.
as_Êﬂt
 = 
	`evÆ_as_Êﬂt
(
vÆ1
Ë/ÉvÆ_as_Êﬂt(
vÆ2
);

742 #ifde‡
HOST_HAS_QWORD


743 
ë_qw‹d
:

744 
vÆ
.
ty≥
 = 
ë_qw‹d
;

745 
vÆ
.
vÆue
.
as_qw‹d
 = 
	`evÆ_as_qw‹d
(
vÆ1
Ë/ÉvÆ_as_qw‹d(
vÆ2
);

747 
ë_sqw‹d
:

748 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

749 
vÆ
.
vÆue
.
as_sqw‹d
 = 
	`evÆ_as_sqw‹d
(
vÆ1
Ë/ÉvÆ_as_sqw‹d(
vÆ2
);

752 
ë_addr
:

753 
vÆ
.
ty≥
 = 
ë_addr
;

754 
vÆ
.
vÆue
.
as_addr
 = 
	`evÆ_as_addr
(
vÆ1
Ë/ÉvÆ_as_addr(
vÆ2
);

756 
ë_uöt
:

757 
vÆ
.
ty≥
 = 
ë_uöt
;

758 
vÆ
.
vÆue
.
as_uöt
 = 
	`evÆ_as_uöt
(
vÆ1
Ë/ÉvÆ_as_uöt(
vÆ2
);

760 
ë_öt
:

761 
vÆ
.
ty≥
 = 
ë_öt
;

762 
vÆ
.
vÆue
.
as_öt
 = 
	`evÆ_as_öt
(
vÆ1
Ë/ÉvÆ_as_öt(
vÆ2
);

765 
	`∑nic
("bogusÉxpressionÅype");

768  
vÆ
;

769 
	}
}

772 
evÆ_vÆue_t


773 
	$f_√g
(
evÆ_vÆue_t
 
vÆ1
)

775 
evÆ_vÆue_t
 
vÆ
;

778 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

780 
evÆ_îr‹
 = 
ERR_BADEXPR
;

781  
îr_vÆue
;

785 
vÆ1
.
ty≥
)

787 
ë_doubÀ
:

788 
vÆ
.
ty≥
 = 
ë_doubÀ
;

789 
vÆ
.
vÆue
.
as_doubÀ
 = - 
vÆ1
.value.as_double;

791 
ë_Êﬂt
:

792 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

793 
vÆ
.
vÆue
.
as_Êﬂt
 = - 
vÆ1
.value.as_float;

795 #ifde‡
HOST_HAS_QWORD


796 
ë_qw‹d
:

797 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

798 
vÆ
.
vÆue
.
as_qw‹d
 = - (
sqw‹d_t
)
vÆ1
.value.as_qword;

800 
ë_sqw‹d
:

801 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

802 
vÆ
.
vÆue
.
as_sqw‹d
 = - 
vÆ1
.value.as_sqword;

805 
ë_addr
:

806 
vÆ
.
ty≥
 = 
ë_addr
;

807 
vÆ
.
vÆue
.
as_addr
 = - 
vÆ1
.value.as_addr;

809 
ë_uöt
:

810 i‡(()
vÆ1
.
vÆue
.
as_uöt
 > 2147483648U)

813 #ifde‡
HOST_HAS_QWORD


814 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

815 
vÆ
.
vÆue
.
as_sqw‹d
 = - ((
sqw‹d_t
)
vÆ1
.vÆue.
as_uöt
);

817 
vÆ
.
ty≥
 = 
ë_doubÀ
;

818 
vÆ
.
vÆue
.
as_doubÀ
 = - (()
vÆ1
.vÆue.
as_uöt
);

824 
vÆ
.
ty≥
 = 
ë_öt
;

825 
vÆ
.
vÆue
.
as_öt
 = - (()
vÆ1
.vÆue.
as_uöt
);

828 
ë_öt
:

829 i‡(()
vÆ1
.
vÆue
.
as_öt
 == 0x80000000U)

832 
vÆ
.
ty≥
 = 
ë_uöt
;

833 
vÆ
.
vÆue
.
as_uöt
 = 2147483648U;

838 
vÆ
.
ty≥
 = 
ë_öt
;

839 
vÆ
.
vÆue
.
as_öt
 = - 
vÆ1
.value.as_int;

843 
	`∑nic
("bogusÉxpressionÅype");

846  
vÆ
;

847 
	}
}

851 
	$f_eq_zîo
(
evÆ_vÆue_t
 
vÆ1
)

853 
vÆ
;

856 i‡(
vÆ1
.
ty≥
 =
ë_symbﬁ
)

858 
evÆ_îr‹
 = 
ERR_BADEXPR
;

859  
FALSE
;

862 
vÆ1
.
ty≥
)

864 
ë_doubÀ
:

865 
vÆ
 = 
vÆ1
.
vÆue
.
as_doubÀ
 == 0.0;

867 
ë_Êﬂt
:

868 
vÆ
 = 
vÆ1
.
vÆue
.
as_Êﬂt
 == 0.0;

870 #ifde‡
HOST_HAS_QWORD


871 
ë_qw‹d
:

872 
vÆ
 = 
vÆ1
.
vÆue
.
as_qw‹d
 == 0;

874 
ë_sqw‹d
:

875 
vÆ
 = 
vÆ1
.
vÆue
.
as_sqw‹d
 == 0;

878 
ë_addr
:

879 
vÆ
 = 
vÆ1
.
vÆue
.
as_addr
 == 0;

881 
ë_uöt
:

882 
vÆ
 = 
vÆ1
.
vÆue
.
as_uöt
 == 0;

884 
ë_öt
:

885 
vÆ
 = 
vÆ1
.
vÆue
.
as_öt
 == 0;

888 
	`∑nic
("bogusÉxpressionÅype");

891  
vÆ
;

892 
	}
}

897 
evÆ_vÆue_t


898 
	$c⁄°™t
(
evÆ_°©e_t
 *
es
)

900 
evÆ_vÆue_t
 
vÆ
;

901 
öt_vÆ
;

902 
uöt_vÆ
;

903 
doubÀ_vÆ
;

904 *
ídp
;

905 #ifde‡
HOST_HAS_QWORD


906 
sqw‹d_t
 
sqw‹d_vÆ
;

907 
qw‹d_t
 
qw‹d_vÆ
;

911 #i‡
	`deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

912 
	`°πﬁ
(*, **, );

913 
	`°πod
(*, **);

923 
î∫o
 = 0;

924 
öt_vÆ
 = 
	`°πﬁ
(
es
->
tok_buf
, &
ídp
, 0);

925 i‡(!
î∫o
 && !*
ídp
)

928 
vÆ
.
ty≥
 = 
ë_öt
;

929 
vÆ
.
vÆue
.
as_öt
 = 
öt_vÆ
;

930  
vÆ
;

934 
î∫o
 = 0;

935 
uöt_vÆ
 = 
	`°πoul
(
es
->
tok_buf
, &
ídp
, 0);

936 i‡(!
î∫o
 && !*
ídp
)

939 
vÆ
.
ty≥
 = 
ë_uöt
;

940 
vÆ
.
vÆue
.
as_uöt
 = 
uöt_vÆ
;

941  
vÆ
;

944 #ifde‡
HOST_HAS_QWORD


946 
î∫o
 = 0;

947 
sqw‹d_vÆ
 = 
	`my©osq
(
es
->
tok_buf
, &
ídp
, 0);

948 i‡(!
î∫o
 && !*
ídp
)

951 
vÆ
.
ty≥
 = 
ë_sqw‹d
;

952 
vÆ
.
vÆue
.
as_sqw‹d
 = 
sqw‹d_vÆ
;

953  
vÆ
;

957 
î∫o
 = 0;

958 
qw‹d_vÆ
 = 
	`my©oq
(
es
->
tok_buf
, &
ídp
, 0);

959 i‡(!
î∫o
 && !*
ídp
)

962 
vÆ
.
ty≥
 = 
ë_qw‹d
;

963 
vÆ
.
vÆue
.
as_qw‹d
 = 
qw‹d_vÆ
;

964  
vÆ
;

970 
î∫o
 = 0;

971 
doubÀ_vÆ
 = 
	`°πod
(
es
->
tok_buf
, &
ídp
);

972 i‡(!
î∫o
 && !*
ídp
)

975 
vÆ
.
ty≥
 = 
ë_doubÀ
;

976 
vÆ
.
vÆue
.
as_doubÀ
 = 
doubÀ_vÆ
;

977  
vÆ
;

982 
evÆ_îr‹
 = 
ERR_BADCONST
;

983  
îr_vÆue
;

984 
	}
}

988 
evÆ_vÆue_t


989 
	$Á˘‹
(
evÆ_°©e_t
 *
es
)

991 
evÆ_tokí_t
 
tok
;

992 
evÆ_vÆue_t
 
vÆ
;

994 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

995 
tok
)

997 
tok_›¨í
:

998 ()
	`gë_√xt_tokí
(
es
);

999 
vÆ
 = 
	`ex¥
(
es
);

1000 i‡(
evÆ_îr‹
)

1001  
îr_vÆue
;

1003 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1004 i‡(
tok
 !
tok_˝¨í
)

1006 
evÆ_îr‹
 = 
ERR_UPAREN
;

1007  
îr_vÆue
;

1009 ()
	`gë_√xt_tokí
(
es
);

1012 
tok_möus
:

1014 ()
	`gë_√xt_tokí
(
es
);

1015 
vÆ
 = 
	`Á˘‹
(
es
);

1016 i‡(
evÆ_îr‹
)

1017  
îr_vÆue
;

1018 
vÆ
 = 
	`f_√g
(val);

1021 
tok_idít
:

1022 ()
	`gë_√xt_tokí
(
es
);

1024 
vÆ
 = 
es
->
	`f_evÆ_idít
(es);

1025 i‡(
evÆ_îr‹
)

1026  
îr_vÆue
;

1029 
tok_c⁄°
:

1030 ()
	`gë_√xt_tokí
(
es
);

1031 
vÆ
 = 
	`c⁄°™t
(
es
);

1032 i‡(
evÆ_îr‹
)

1033  
îr_vÆue
;

1037 
evÆ_îr‹
 = 
ERR_NOTERM
;

1038  
îr_vÆue
;

1041  
vÆ
;

1042 
	}
}

1046 
evÆ_vÆue_t


1047 
	$ãrm
(
evÆ_°©e_t
 *
es
)

1049 
evÆ_tokí_t
 
tok
;

1050 
evÆ_vÆue_t
 
vÆ
, 
vÆ1
;

1052 
vÆ
 = 
	`Á˘‹
(
es
);

1053 i‡(
evÆ_îr‹
)

1054  
îr_vÆue
;

1056 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1057 
tok
)

1059 
tok_mu…
:

1060 ()
	`gë_√xt_tokí
(
es
);

1061 
vÆ
 = 
	`f_mu…
(vÆ, 
	`ãrm
(
es
));

1062 i‡(
evÆ_îr‹
)

1063  
îr_vÆue
;

1066 
tok_div
:

1067 ()
	`gë_√xt_tokí
(
es
);

1068 
vÆ1
 = 
	`ãrm
(
es
);

1069 i‡(
evÆ_îr‹
)

1070  
îr_vÆue
;

1071 i‡(
	`f_eq_zîo
(
vÆ1
))

1073 
evÆ_îr‹
 = 
ERR_DIV0
;

1074  
îr_vÆue
;

1076 
vÆ
 = 
	`f_div
(vÆ, 
vÆ1
);

1082  
vÆ
;

1083 
	}
}

1087 
evÆ_vÆue_t


1088 
	$ex¥
(
evÆ_°©e_t
 *
es
)

1090 
evÆ_tokí_t
 
tok
;

1091 
evÆ_vÆue_t
 
vÆ
;

1093 
vÆ
 = 
	`ãrm
(
es
);

1094 i‡(
evÆ_îr‹
)

1095  
îr_vÆue
;

1097 
tok
 = 
	`≥ek_√xt_tokí
(
es
);

1098 
tok
)

1100 
tok_∂us
:

1101 ()
	`gë_√xt_tokí
(
es
);

1102 
vÆ
 = 
	`f_add
(vÆ, 
	`ex¥
(
es
));

1103 i‡(
evÆ_îr‹
)

1104  
îr_vÆue
;

1107 
tok_möus
:

1108 ()
	`gë_√xt_tokí
(
es
);

1109 
vÆ
 = 
	`f_sub
(vÆ, 
	`ex¥
(
es
));

1110 i‡(
evÆ_îr‹
)

1111  
îr_vÆue
;

1117  
vÆ
;

1118 
	}
}

1121 
evÆ_°©e_t
 *

1122 
	$evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

1123 *
u£r_±r
)

1125 
evÆ_°©e_t
 *
es
;

1127 
es
 = 
	`ˇŒoc
(1, (
evÆ_°©e_t
));

1128 i‡(!
es
)

1129 
	`Áèl
("out of virtual memory");

1131 
es
->
f_evÆ_idít
 = f_eval_ident;

1132 
es
->
u£r_±r
 = user_ptr;

1134  
es
;

1135 
	}
}

1139 
	$evÆ_dñëe
(
evÆ_°©e_t
 *
es
)

1141 
	`‰ì
(
es
);

1142 
	}
}

1146 
evÆ_vÆue_t


1147 
	$evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

1148 *
p
,

1149 **
ídp
)

1151 
evÆ_vÆue_t
 
vÆ
;

1154 
evÆ_îr‹
 = 
ERR_NOERR
;

1155 
es
->
p
 =Ö;

1156 *
es
->
tok_buf
 = '\0';

1157 
es
->
≥ek_tok
 = 
tok_övÆid
;

1160 
vÆ
 = 
	`ex¥
(
es
);

1163 i‡(
ídp
)

1165 i‡(
es
->
≥ek_tok
 !
tok_övÆid
)

1168 *
ídp
 = 
es
->
œ°p
;

1171 *
ídp
 = 
es
->
p
;

1174  
vÆ
;

1175 
	}
}

1179 
	$evÆ_¥öt
(
FILE
 *
°ªam
,

1180 
evÆ_vÆue_t
 
vÆ
)

1182 
vÆ
.
ty≥
)

1184 
ë_doubÀ
:

1185 
	`Ârötf
(
°ªam
, "%‡[doubÀ]", 
vÆ
.
vÆue
.
as_doubÀ
);

1187 
ë_Êﬂt
:

1188 
	`Ârötf
(
°ªam
, "%‡[Êﬂt]", ()
vÆ
.
vÆue
.
as_Êﬂt
);

1190 #ifde‡
HOST_HAS_QWORD


1191 
ë_qw‹d
:

1192 
	`myÂrötf
(
°ªam
, "%lu [qw‹d_t]", 
vÆ
.
vÆue
.
as_qw‹d
);

1194 
ë_sqw‹d
:

1195 
	`myÂrötf
(
°ªam
, "%ld [sqw‹d_t]", 
vÆ
.
vÆue
.
as_sqw‹d
);

1198 
ë_addr
:

1199 
	`myÂrötf
(
°ªam
, "0x%∞[md_addr_t]", 
vÆ
.
vÆue
.
as_addr
);

1201 
ë_uöt
:

1202 
	`Ârötf
(
°ªam
, "%u [uöt]", 
vÆ
.
vÆue
.
as_uöt
);

1204 
ë_öt
:

1205 
	`Ârötf
(
°ªam
, "%d [öt]", 
vÆ
.
vÆue
.
as_öt
);

1207 
ë_symbﬁ
:

1208 
	`Ârötf
(
°ªam
, "\"%s\" [symbﬁ]", 
vÆ
.
vÆue
.
as_symbﬁ
);

1211 
	`∑nic
("bogusÉxpressionÅype");

1213 
	}
}

1216 #ifde‡
TEST


1218 
evÆ_vÆue_t
 
	g™_öt
;

1219 
evÆ_vÆue_t
 
	ga_uöt
;

1220 
evÆ_vÆue_t
 
	ga_Êﬂt
;

1221 
evÆ_vÆue_t
 
	ga_doubÀ
;

1222 
evÆ_vÆue_t
 
	ga_symbﬁ
;

1224 
	ssym_m≠_t
 {

1225 *
	msymbﬁ
;

1226 
evÆ_vÆue_t
 *
	mvÆue
;

1229 
sym_m≠_t
 
	gsym_m≠
[] = {

1230 { "™_öt", &
™_öt
 },

1231 { "a_uöt", &
a_uöt
 },

1232 { "a_Êﬂt", &
a_Êﬂt
 },

1233 { "a_doubÀ", &
a_doubÀ
 },

1234 { "a_symbﬁ", &
a_symbﬁ
 },

1235 { 
NULL
, NULL },

1238 
evÆ_vÆue_t


1239 
	$my_evÆ_idít
(
evÆ_°©e_t
 *
es
)

1241 
sym_m≠_t
 *
sym
;

1243 
sym
=
sym_m≠
; sym->
symbﬁ
 !
NULL
; sym++)

1245 i‡(!
	`°rcmp
(
sym
->
symbﬁ
, 
es
->
tok_buf
))

1246  *
sym
->
vÆue
;

1249 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

1250 
evÆ_îr_exåa_öfo
 = 
es
->
tok_buf
;

1251  
îr_vÆue
;

1252 
	}
}

1255 
	$maö
()

1257 
evÆ_°©e_t
 *
es
;

1260 
™_öt
.
ty≥
 = 
ë_öt
;án_öt.
vÆue
.
as_öt
 = 1;

1261 
a_uöt
.
ty≥
 = 
ë_uöt
;á_uöt.
vÆue
.
as_uöt
 = 2;

1262 
a_Êﬂt
.
ty≥
 = 
ë_Êﬂt
;á_Êﬂt.
vÆue
.
as_Êﬂt
 = 3.0f;

1263 
a_doubÀ
.
ty≥
 = 
ë_doubÀ
;á_doubÀ.
vÆue
.
as_doubÀ
 = 4.0;

1264 
a_symbﬁ
.
ty≥
 = 
ë_symbﬁ
;á_symbﬁ.
vÆue
.
as_symbﬁ
 = "testing 1 2 3...";

1267 
es
 = 
	`evÆ_√w
(
my_evÆ_idít
, 
NULL
);

1271 
evÆ_vÆue_t
 
vÆ
;

1272 
ex¥_buf
[1024];

1274 
	`fgës
(
ex¥_buf
, 1024, 
°dö
);

1277 i‡(
ex¥_buf
[
	`°æí
(expr_buf)-1] == '\n')

1278 
ex¥_buf
[
	`°æí
(expr_buf)-1] = '\0';

1280 i‡(
ex¥_buf
[0] == '\0')

1281 
	`exô
(0);

1283 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
ex¥_buf
, 
NULL
);

1284 i‡(
evÆ_îr‹
)

1286 i‡(
evÆ_îr_exåa_öfo
)

1287 
	`Ârötf
(
°dout
, "evÆÉº‹: %s: %s\n", 
evÆ_îr_°r
[
evÆ_îr‹
],
evÆ_îr_exåa_öfo
);

1289 
	`Ârötf
(
°dout
, "evÆÉº‹: %s\n", 
evÆ_îr_°r
[
evÆ_îr‹
]);

1293 
	`Ârötf
(
°dout
, "%†=", 
ex¥_buf
);

1294 
	`evÆ_¥öt
(
°dout
, 
vÆ
);

1295 
	`Ârötf
(
°dout
, "\n");

1298 
	}
}

	@eval.h

94 #i‚de‡
EVAL_H


95 
	#EVAL_H


	)

97 
	~<°dio.h
>

98 
	~"ho°.h
"

99 
	~"misc.h
"

100 
	~"machöe.h
"

103 
	gevÆ_°©e_t
;

104 
	gevÆ_vÆue_t
;

109 
	gevÆ_vÆue_t


110 (*
	tevÆ_idít_t
)(
	tevÆ_°©e_t
 *
	tes
);

113 
	eevÆ_tokí_t
 {

114 
	mtok_idít
,

115 
	mtok_c⁄°
,

116 
	mtok_∂us
,

117 
	mtok_möus
,

118 
	mtok_mu…
,

119 
	mtok_div
,

120 
	mtok_›¨í
,

121 
	mtok_˝¨í
,

122 
	mtok_eof
,

123 
	mtok_whôe•a˚
,

124 
	mtok_övÆid


128 
	sevÆ_°©e_t
 {

129 *
	mp
;

130 *
	mœ°p
;

131 
evÆ_idít_t
 
	mf_evÆ_idít
;

132 *
	mu£r_±r
;

133 
	mtok_buf
[512];

134 
evÆ_tokí_t
 
	m≥ek_tok
;

138 
	eevÆ_îr_t
 {

139 
	mERR_NOERR
,

140 
	mERR_UPAREN
,

141 
	mERR_NOTERM
,

142 
	mERR_DIV0
,

143 
	mERR_BADCONST
,

144 
	mERR_BADEXPR
,

145 
	mERR_UNDEFVAR
,

146 
	mERR_EXTRA
,

147 
	mERR_NUM


152 * 
evÆ_îr_exåa_öfo
;

155 
evÆ_îr_t
 
evÆ_îr‹
 ;

158 *
evÆ_îr_°r
[
ERR_NUM
];

161 
	eevÆ_ty≥_t
 {

162 
	më_öt
,

163 
	më_uöt
,

164 
	më_addr
,

165 #ifde‡
HOST_HAS_QWORD


166 
	më_qw‹d
,

167 
	më_sqw‹d
,

169 
	më_Êﬂt
,

170 
	më_doubÀ
,

171 
	më_symbﬁ
,

172 
	më_NUM


176 #ifde‡
HOST_HAS_QWORD


177 
	#EVAL_INTEGRAL
(
TYPE
Ë\

	)

178 ((
	gTYPE
Ë=
ë_öt
 || (
TYPE
Ë=
ë_uöt
 || (TYPEË=
ë_addr
 \

179 || (
TYPE
Ë=
ë_qw‹d
 || (TYPEË=
ë_sqw‹d
)

181 
	#EVAL_INTEGRAL
(
TYPE
Ë\

	)

182 ((
TYPE
Ë=
ë_öt
 || (TYPEË=
ë_uöt
 || (TYPEË=
ë_addr
)

186 *
evÆ_ty≥_°r
[
ë_NUM
];

189 
	sevÆ_vÆue_t
 {

190 
evÆ_ty≥_t
 
	mty≥
;

192 
	mas_öt
;

193 
	mas_uöt
;

194 
md_addr_t
 
	mas_addr
;

195 #ifde‡
HOST_HAS_QWORD


196 
qw‹d_t
 
	mas_qw‹d
;

197 
sqw‹d_t
 
	mas_sqw‹d
;

199 
	mas_Êﬂt
;

200 
	mas_doubÀ
;

201 *
	mas_symbﬁ
;

202 } 
	mvÆue
;

210 
evÆ_as_doubÀ
(
evÆ_vÆue_t
 
vÆ
);

213 
evÆ_as_Êﬂt
(
evÆ_vÆue_t
 
vÆ
);

215 #ifde‡
HOST_HAS_QWORD


217 
qw‹d_t
 
evÆ_as_qw‹d
(
evÆ_vÆue_t
 
vÆ
);

220 
sqw‹d_t
 
evÆ_as_sqw‹d
(
evÆ_vÆue_t
 
vÆ
);

224 
md_addr_t
 
evÆ_as_addr
(
evÆ_vÆue_t
 
vÆ
);

227 
evÆ_as_uöt
(
evÆ_vÆue_t
 
vÆ
);

230 
evÆ_as_öt
(
evÆ_vÆue_t
 
vÆ
);

233 
evÆ_°©e_t
 *

234 
evÆ_√w
(
evÆ_idít_t
 
f_evÆ_idít
,

235 *
u£r_±r
);

239 
evÆ_dñëe
(
evÆ_°©e_t
 *
es
);

243 
evÆ_vÆue_t


244 
evÆ_ex¥
(
evÆ_°©e_t
 *
es
,

245 *
p
,

246 **
ídp
);

250 
evÆ_¥öt
(
FILE
 *
°ªam
,

251 
evÆ_vÆue_t
 
vÆ
);

	@eventq.c

86 
	~<°dio.h
>

87 
	~<°dlib.h
>

89 
	~"ho°.h
"

90 
	~"misc.h
"

91 
	~"machöe.h
"

92 
	~"evítq.h
"

94 
	gevítq_max_evíts
;

95 
	gevítq_evít_cou¡
;

96 
evítq_desc
 *
	gevítq_≥ndög
;

97 
evítq_desc
 *
	gevítq_‰ì
;

99 
EVENTQ_ID_TYPE
 
	g√xt_ID
 = 1;

102 
	$evítq_öô
(
max_evíts
)

104 
evítq_max_evíts
 = 
max_evíts
;

105 
evítq_evít_cou¡
 = 0;

106 
evítq_≥ndög
 = 
NULL
;

107 
evítq_‰ì
 = 
NULL
;

108 
	}
}

110 
	#__QUEUE_EVENT
(
WHEN
, 
ID
, 
ACTION
Ë\

	)

111 
evítq_desc
 *
	g¥ev
, *
	gev
, *
	g√w
; \

113 i‡(!
	gevítq_‰ì
) \

115 i‡(
	gevítq_max_evíts
 && 
	gevítq_evít_cou¡
 >
evítq_max_evíts
) \

116 
∑nic
("too manyÉvents"); \

117 
	gevítq_‰ì
 = 
ˇŒoc
(1, (
evítq_desc
)); \

119 
	g√w
 = 
evítq_‰ì
; \

120 
	gevítq_‰ì
 = 
evítq_‰ì
->
√xt
; \

122 
	g√w
->
	gwhí
 = (
WHEN
); (
	gID
Ë
√w
->
id
 = 
√xt_ID
++; 
	gACTION
; \

124 
	g¥ev
=
NULL
,
	gev
=
evítq_≥ndög
; \

125 
	gev
 &&Év->
	gwhí
 < when; \

126 
	g¥ev
=
ev
, 
	gev
Ûv->
√xt
); \

128 i‡(
	g¥ev
) \

131 
	g√w
->
	g√xt
 = 
¥ev
->
√xt
; \

132 
	g¥ev
->
	g√xt
 = 
√w
; \

137 
	g√w
->
	g√xt
 = 
evítq_≥ndög
; \

138 
	gevítq_≥ndög
 = 
√w
; \

141 
EVENTQ_ID_TYPE


142 
	$evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

143 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

145 
EVENTQ_ID_TYPE
 
id
;

146 
	`__QUEUE_EVENT
(
whí
, 
id
, \

147 
√w
->
a˘i⁄
 = 
EvítSëBô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

148 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

149  
id
;

150 
	}
}

152 
EVENTQ_ID_TYPE


153 
	$evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
,

154 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
)

156 
EVENTQ_ID_TYPE
 
id
;

157 
	`__QUEUE_EVENT
(
whí
, 
id
, \

158 
√w
->
a˘i⁄
 = 
EvítCÀ¨Bô
;Çew->
d©a
.
bô
.
bm≠
 = bmap; \

159 
√w
->
d©a
.
bô
.
sz
 = sz;Çew->d©a.bô.
bônum
 = bitnum);

160  
id
;

161 
	}
}

163 
EVENTQ_ID_TYPE


164 
	$evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
, *
pÊag
, 
vÆue
)

166 
EVENTQ_ID_TYPE
 
id
;

167 
	`__QUEUE_EVENT
(
whí
, 
id
, \

168 
√w
->
a˘i⁄
 = 
EvítSëFœg
; \

169 
√w
->
d©a
.
Êag
.
pÊag
 =ÖÊag;Çew->d©a.Êag.
vÆue
 = value);

170  
id
;

171 
	}
}

173 
EVENTQ_ID_TYPE


174 
	$evítq_queue_add›
(
SS_TIME_TYPE
 
whí
, *
summ™d
, 
addíd
)

176 
EVENTQ_ID_TYPE
 
id
;

177 
	`__QUEUE_EVENT
(
whí
, 
id
, \

178 
√w
->
a˘i⁄
 = 
EvítAddOp
; \

179 
√w
->
d©a
.
add›
.
summ™d
 = summand; \

180 
√w
->
d©a
.
add›
.
addíd
 =áddend);

181  
id
;

182 
	}
}

184 
EVENTQ_ID_TYPE


185 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

186 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
), arg)

188 
EVENTQ_ID_TYPE
 
id
;

189 
	`__QUEUE_EVENT
(
whí
, 
id
, \

190 
√w
->
a˘i⁄
 = 
EvítCÆlback
;Çew->
d©a
.
ˇŒback
.
‚
 = fn;\

191 
√w
->
d©a
.
ˇŒback
.
¨g
 =árg);

192  
id
;

193 
	}
}

195 
	#EXECUTE_ACTION
(
ev
, 
now
Ë\

	)

197 
	gev
->
	ga˘i⁄
) { \

198 
	gEvítSëBô
: \

199 
BITMAP_SET
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

201 
	gEvítCÀ¨Bô
: \

202 
BITMAP_CLEAR
(
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);\

204 
	gEvítSëFœg
: \

205 *
ev
->
d©a
.
Êag
.
pÊag
 =Év->d©a.Êag.
vÆue
; \

207 
	gEvítAddOp
: \

208 *
ev
->
d©a
.
add›
.
summ™d
 +ev->d©a.add›.
addíd
; \

210 
	gEvítCÆlback
: \

211 (*
ev
->
d©a
.
ˇŒback
.
‚
)(
now
, 
	gev
->
	gd©a
.
	gˇŒback
.
	g¨g
); \

214 
∑nic
("bogusÉventáction"); \

220 
	$evítq_execuã
(
EVENTQ_ID_TYPE
 
id
)

222 
evítq_desc
 *
¥ev
, *
ev
;

224 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

226 i‡(
ev
->
id
 == id)

228 i‡(
¥ev
)

231 
¥ev
->
√xt
 = 
ev
->next;

236 
evítq_≥ndög
 = 
ev
->
√xt
;

240 
	`EXECUTE_ACTION
(
ev
, 0);

243 
ev
->
√xt
 = 
evítq_‰ì
;

244 
evítq_‰ì
 = 
ev
;

247  
TRUE
;

251  
FALSE
;

252 
	}
}

257 
	$evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
)

259 
evítq_desc
 *
¥ev
, *
ev
;

261 
¥ev
=
NULL
,
ev
=
evítq_≥ndög
;Év;ÖªvÛv,evÛv->
√xt
)

263 i‡(
ev
->
id
 == id)

265 i‡(
¥ev
)

268 
¥ev
->
√xt
 = 
ev
->next;

273 
evítq_≥ndög
 = 
ev
->
√xt
;

277 
ev
->
√xt
 = 
evítq_‰ì
;

278 
evítq_‰ì
 = 
ev
;

281  
TRUE
;

285  
FALSE
;

286 
	}
}

289 
	$evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
)

291 
evítq_≥ndög
 &&Évítq_≥ndög->
whí
 <
now
)

293 
evítq_desc
 *
ev
 = 
evítq_≥ndög
;

296 
	`EXECUTE_ACTION
(
ev
, 
now
);

299 
evítq_≥ndög
 = 
ev
->
√xt
;

300 
ev
->
√xt
 = 
evítq_‰ì
;

301 
evítq_‰ì
 = 
ev
;

303 
	}
}

306 
	$evítq_dump
(
FILE
 *
°ªam
)

308 
evítq_desc
 *
ev
;

310 i‡(!
°ªam
)

311 
°ªam
 = 
°dîr
;

313 
	`Ârötf
(
°ªam
, "Pending Events: ");

314 
ev
=
evítq_≥ndög
;Év;ÉvÛv->
√xt
)

316 
	`Ârötf
(
°ªam
, "@ %.0f:%s:",

317 ()
ev
->
whí
,

318 
ev
->
a˘i⁄
 =
EvítSëBô
 ? "set bit"

319 : 
ev
->
a˘i⁄
 =
EvítCÀ¨Bô
 ? "clear bit"

320 : 
ev
->
a˘i⁄
 =
EvítSëFœg
 ? "set flag"

321 : 
ev
->
a˘i⁄
 =
EvítAddOp
 ? "add operation"

322 : 
ev
->
a˘i⁄
 =
EvítCÆlback
 ? "call back"

323 : (
	`ab‹t
(), ""));

324 
ev
->
a˘i⁄
) {

325 
EvítSëBô
:

326 
EvítCÀ¨Bô
:

327 
	`Ârötf
(
°ªam
, "0x%p, %d, %d",

328 
ev
->
d©a
.
bô
.
bm≠
,Év->d©a.bô.
sz
,Év->d©a.bô.
bônum
);

330 
EvítSëFœg
:

331 
	`Ârötf
(
°ªam
, "0x%p, %d", 
ev
->
d©a
.
Êag
.
pÊag
,Év->d©a.Êag.
vÆue
);

333 
EvítAddOp
:

334 
	`Ârötf
(
°ªam
, "0x%p, %d",

335 
ev
->
d©a
.
add›
.
summ™d
,Év->d©a.add›.
addíd
);

337 
EvítCÆlback
:

338 
	`Ârötf
(
°ªam
, "0x%p, %d",

339 
ev
->
d©a
.
ˇŒback
.
‚
,Év->d©a.ˇŒback.
¨g
);

342 
	`∑nic
("bogusÉventáction");

344 
	`Ârötf
(
°ªam
, " ");

346 
	}
}

	@eventq.h

87 #i‚de‡
EVENTQ_H


88 
	#EVENTQ_H


	)

90 
	~<°dio.h
>

92 
	~"ho°.h
"

93 
	~"misc.h
"

94 
	~"bôm≠.h
"

101 
	eevítq_a˘i⁄
 {

102 
	mEvítSëBô
,

103 
	mEvítCÀ¨Bô
,

104 
	mEvítSëFœg
,

105 
	mEvítAddOp
,

106 
	mEvítCÆlback
,

110 
	tEVENTQ_ID_TYPE
;

113 
	sevítq_desc
 {

114 
evítq_desc
 *
	m√xt
;

115 
SS_TIME_TYPE
 
	mwhí
;

116 
EVENTQ_ID_TYPE
 
	mid
;

117 
evítq_a˘i⁄
 
	ma˘i⁄
;

118 
	uevítq_d©a
 {

120 
BITMAP_ENT_TYPE
 *
	mbm≠
;

121 
	msz
;

122 
	mbônum
;

123 } 
	mbô
;

125 *
	mpÊag
;

126 
	mvÆue
;

127 } 
	mÊag
;

129 *
	msumm™d
;

130 
	maddíd
;

131 } 
	madd›
;

133 (*
	m‚
)(
SS_TIME_TYPE
 
	mtime
, 
	m¨g
);

134 
	m¨g
;

135 } 
	mˇŒback
;

136 } 
	md©a
;

141 
evítq_öô
(
max_evíts
);

145 
EVENTQ_ID_TYPE
 
evítq_queue_£tbô
(
SS_TIME_TYPE
 
whí
,

146 
BITMAP_ENT_TYPE
 *
bm≠
, 
sz
, 
bônum
);

147 
EVENTQ_ID_TYPE
 
evítq_queue_˛órbô
(
SS_TIME_TYPE
 
whí
, 
BITMAP_ENT_TYPE
 *
bm≠
,

148 
sz
, 
bônum
);

149 
EVENTQ_ID_TYPE
 
evítq_queue_£tÊag
(
SS_TIME_TYPE
 
whí
,

150 *
pÊag
, 
vÆue
);

151 
EVENTQ_ID_TYPE
 
evítq_queue_add›
(
SS_TIME_TYPE
 
whí
,

152 *
summ™d
, 
addíd
);

153 
EVENTQ_ID_TYPE
 
evítq_queue_ˇŒback
(
SS_TIME_TYPE
 
whí
,

154 (*
‚
)(
SS_TIME_TYPE
 
time
, 
¨g
),

155 
¨g
);

159 
	`evítq_execuã
(
EVENTQ_ID_TYPE
 
id
);

163 
	`evítq_ªmove
(
EVENTQ_ID_TYPE
 
id
);

166 
	`evítq_£rvi˚_evíts
(
SS_TIME_TYPE
 
now
);

168 
	`evítq_dump
(
FILE
 *
°ªam
);

	@flp.c

27 
	~"Êp.h
"

28 
	~"utû.h
"

30 
	~<°dio.h
>

31 
	~<°rögs.h
>

32 
	~<°rög.h
>

33 
	~<°dlib.h
>

34 
	~"hódîs.h
"

36 
	$¥öt_Êp_fig
 (
Êp_t
 *
Êp
, 
FILE
 *
outfûe
)

38 
i
;

39 
unô_t
 *
unô
;

41 
	`Ârötf
(
outfûe
, "FIG starts\n");

42 
i
=0; i< 
Êp
->
n_unôs
; i++) {

43 
unô
 = &
Êp
->
unôs
[
i
];

44 
	`Ârötf
(
outfûe
, "%.7‡%.7‡%.7‡%.7‡%.7‡%.7‡%.7‡%.7‡%.7‡%.7f\n", 
unô
->
À·x
, unô->
bŸtomy
, \

45 
unô
->
À·x
, unô->
bŸtomy
 + unô->
height
, unô->À·x + unô->
width
, unit->bottomy + \

46 
unô
->
height
, unô->
À·x
 + unô->
width
, unô->
bŸtomy
, unit->leftx, unit->bottomy);

47 
	`Ârötf
(
outfûe
, "%s\n", 
unô
->
«me
);

49 
	`Ârötf
(
outfûe
, "FIGÉnds\n");

50 
	}
}

53 
Êp_t
 *
	$ªad_Êp
(*
fûe
)

55 
°r
[
STR_SIZE
], 
c›y
[STR_SIZE];

56 
FILE
 *
Â
 = 
	`f›í
(
fûe
, "r");

57 
Êp_t
 *
Êp
;

58 
i
=0, 
cou¡
 = 0;

59 *
±r
;

61 i‡(!
Â
) {

62 
	`•rötf
(
°r
, "îr‹ o≥nög fûê%s", 
fûe
);

63 
	`Áèl
(
°r
);

66 !
	`„of
(
Â
))

68 
	`fgës
(
°r
, 
STR_SIZE
, 
Â
);

69 i‡(
	`„of
(
Â
))

71 
±r
 = 
	`°πok
(
°r
, " \t\n");

72 i‡–
±r
 &&Ötr[0] != '#')

73 
cou¡
++;

76 if(!
cou¡
)

77 
	`Áèl
("no units specified inÅhe floorplan file");

79 
Êp
 = (
Êp_t
 *Ë
	`ˇŒoc
 (1, (flp_t));

80 if(!
Êp
)

81 
	`Áèl
("memoryállocationÉrror");

82 
Êp
->
unôs
 = (
unô_t
 *Ë
	`ˇŒoc
 (
cou¡
, (unit_t));

83 i‡(!
Êp
->
unôs
)

84 
	`Áèl
("memoryállocationÉrror");

85 
Êp
->
n_unôs
 = 
cou¡
;

87 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

88 !
	`„of
(
Â
))

90 
	`fgës
(
°r
, 
STR_SIZE
, 
Â
);

91 i‡(
	`„of
(
Â
))

93 
	`°r˝y
(
c›y
, 
°r
);

94 
±r
 = 
	`°πok
(
°r
, " \t\n");

95 i‡–
±r
 &&Ötr[0] != '#') {

96 i‡(
	`ssˇnf
(
c›y
, "%s%lf%lf%lf%lf", 
Êp
->
unôs
[
i
].
«me
, &Êp->unôs[i].
width
, \

97 &
Êp
->
unôs
[
i
].
height
, &Êp->unôs[i].
À·x
, &Êp->unôs[i].
bŸtomy
) != 5)

98 
	`Áèl
("invalid floorplan file format");

99 
i
++;

103 
	`f˛o£
(
Â
);

105  
Êp
;

106 
	}
}

108 
	$‰ì_Êp
(
Êp_t
 *
Êp
)

110 
	`‰ì
(
Êp
->
unôs
);

111 
	`‰ì
(
Êp
);

112 
	}
}

114 
	$gë_blk_ödex
(
Êp_t
 *
Êp
, *
«me
)

116 
i
;

117 
msg
[
STR_SIZE
];

119 i‡(!
Êp
)

120 
	`Áèl
("nullÖointer in get_blk_index");

122 
i
 = 0; i < 
Êp
->
n_unôs
; i++) {

123 i‡(!
	`°rˇ£cmp
(
«me
, 
Êp
->
unôs
[
i
].name)) {

124  
i
;

128 
	`•rötf
(
msg
, "block %†nŸ found", 
«me
);

129 
	`Áèl
(
msg
);

131 
	}
}

133 
	$exi°s_blk_ödex
(
Êp_t
 *
Êp
, *
«me
)

135 
i
;

136 i‡(!
Êp
)

137 
	`Áèl
("nullÖointer in get_blk_index");

139 
i
 = 0; i < 
Êp
->
n_unôs
; i++) {

140 i‡(!
	`°rˇ£cmp
(
«me
, 
Êp
->
unôs
[
i
].name)) {

145 
	}
}

147 
	$is_h‹iz_adj
(
Êp_t
 *
Êp
, 
i
, 
j
)

149 
x1
, 
x2
, 
x3
, 
x4
;

150 
y1
, 
y2
, 
y3
, 
y4
;

152 i‡(
i
 =
j
)

155 
x1
 = 
Êp
->
unôs
[
i
].
À·x
;

156 
x2
 = 
x1
 + 
Êp
->
unôs
[
i
].
width
;

157 
x3
 = 
Êp
->
unôs
[
j
].
À·x
;

158 
x4
 = 
x3
 + 
Êp
->
unôs
[
j
].
width
;

160 
y1
 = 
Êp
->
unôs
[
i
].
bŸtomy
;

161 
y2
 = 
y1
 + 
Êp
->
unôs
[
i
].
height
;

162 
y3
 = 
Êp
->
unôs
[
j
].
bŸtomy
;

163 
y4
 = 
y3
 + 
Êp
->
unôs
[
j
].
height
;

166 i‡(
	`eq
(
x2
,
x3
Ë&&Éq(
y2
,
y3
))

168 i‡(
	`eq
(
x1
,
x4
Ë&&Éq(
y1
,
y4
))

170 i‡(
	`eq
(
x2
,
x3
Ë&&Éq(
y1
,
y4
))

172 i‡(
	`eq
(
x1
,
x4
Ë&&Éq(
y2
,
y3
))

175 i‡(
	`eq
(
x1
,
x4
Ë||Éq(
x2
,
x3
))

176 i‡((
y3
 >
y1
 && y3 <
y2
Ë|| (
y4
 >= y1 && y4 <= y2) ||

177 (
y1
 >
y3
 && y1 <
y4
Ë|| (
y2
 >= y3 && y2 <= y4))

181 
	}
}

183 
	$is_vît_adj
 (
Êp_t
 *
Êp
, 
i
, 
j
)

185 
x1
, 
x2
, 
x3
, 
x4
;

186 
y1
, 
y2
, 
y3
, 
y4
;

188 i‡(
i
 =
j
)

191 
x1
 = 
Êp
->
unôs
[
i
].
À·x
;

192 
x2
 = 
x1
 + 
Êp
->
unôs
[
i
].
width
;

193 
x3
 = 
Êp
->
unôs
[
j
].
À·x
;

194 
x4
 = 
x3
 + 
Êp
->
unôs
[
j
].
width
;

196 
y1
 = 
Êp
->
unôs
[
i
].
bŸtomy
;

197 
y2
 = 
y1
 + 
Êp
->
unôs
[
i
].
height
;

198 
y3
 = 
Êp
->
unôs
[
j
].
bŸtomy
;

199 
y4
 = 
y3
 + 
Êp
->
unôs
[
j
].
height
;

202 i‡(
	`eq
(
x2
,
x3
Ë&&Éq(
y2
,
y3
))

204 i‡(
	`eq
(
x1
,
x4
Ë&&Éq(
y1
,
y4
))

206 i‡(
	`eq
(
x2
,
x3
Ë&&Éq(
y1
,
y4
))

208 i‡(
	`eq
(
x1
,
x4
Ë&&Éq(
y2
,
y3
))

211 i‡(
	`eq
(
y1
,
y4
Ë||Éq(
y2
,
y3
))

212 i‡((
x3
 >
x1
 && x3 <
x2
Ë|| (
x4
 >= x1 && x4 <= x2) ||

213 (
x1
 >
x3
 && x1 <
x4
Ë|| (
x2
 >= x3 && x2 <= x4))

217 
	}
}

219 
	$gë_sh¨ed_Àn
(
Êp_t
 *
Êp
, 
i
, 
j
)

221 
p11
, 
p12
, 
p21
, 
p22
;

222 
p11
 = 
p12
 = 
p21
 = 
p22
 = 0.0;

224 i‡(
i
==
j
)

227 i‡(
	`is_h‹iz_adj
(
Êp
, 
i
, 
j
)) {

228 
p11
 = 
Êp
->
unôs
[
i
].
bŸtomy
;

229 
p12
 = 
p11
 + 
Êp
->
unôs
[
i
].
height
;

230 
p21
 = 
Êp
->
unôs
[
j
].
bŸtomy
;

231 
p22
 = 
p21
 + 
Êp
->
unôs
[
j
].
height
;

234 i‡(
	`is_vît_adj
(
Êp
, 
i
, 
j
)) {

235 
p11
 = 
Êp
->
unôs
[
i
].
À·x
;

236 
p12
 = 
p11
 + 
Êp
->
unôs
[
i
].
width
;

237 
p21
 = 
Êp
->
unôs
[
j
].
À·x
;

238 
p22
 = 
p21
 + 
Êp
->
unôs
[
j
].
width
;

241  (
	`MIN
(
p12
, 
p22
Ë- 
	`MAX
(
p11
, 
p21
));

242 
	}
}

244 
	$gë_tŸÆ_width
(
Êp_t
 *
Êp
)

246 
i
;

247 
mö_x
 = 
Êp
->
unôs
[0].
À·x
;

248 
max_x
 = 
Êp
->
unôs
[0].
À·x
 + fÕ->unôs[0].
width
;

250 
i
=1; i < 
Êp
->
n_unôs
; i++) {

251 i‡(
Êp
->
unôs
[
i
].
À·x
 < 
mö_x
)

252 
mö_x
 = 
Êp
->
unôs
[
i
].
À·x
;

253 i‡(
Êp
->
unôs
[
i
].
À·x
 + fÕ->unôs[i].
width
 > 
max_x
)

254 
max_x
 = 
Êp
->
unôs
[
i
].
À·x
 + fÕ->unôs[i].
width
;

257  (
max_x
 - 
mö_x
);

258 
	}
}

260 
	$gë_tŸÆ_height
(
Êp_t
 *
Êp
)

262 
i
;

263 
mö_y
 = 
Êp
->
unôs
[0].
bŸtomy
;

264 
max_y
 = 
Êp
->
unôs
[0].
bŸtomy
 + fÕ->unôs[0].
height
;

266 
i
=1; i < 
Êp
->
n_unôs
; i++) {

267 i‡(
Êp
->
unôs
[
i
].
bŸtomy
 < 
mö_y
)

268 
mö_y
 = 
Êp
->
unôs
[
i
].
bŸtomy
;

269 i‡(
Êp
->
unôs
[
i
].
bŸtomy
 + fÕ->unôs[i].
height
 > 
max_y
)

270 
max_y
 = 
Êp
->
unôs
[
i
].
bŸtomy
 + fÕ->unôs[i].
height
;

273  (
max_y
 - 
mö_y
);

274 
	}
}

	@flp.h

23 #i‚de‡
__FLP_H_


24 
	#__FLP_H_


	)

27 
	~<°dio.h
>

29 
	#STR_SIZE
 256

	)

31 
	#MAX_UNITS
 520

	)

34 
	sunô_t_°


36 
	m«me
[
STR_SIZE
];

37 
	mwidth
;

38 
	mheight
;

39 
	mÀ·x
;

40 
	mbŸtomy
;

41 }
	tunô_t
;

44 
	sÊp_t_°


46 
unô_t
 *
	munôs
;

47 
	mn_unôs
;

48 } 
	tÊp_t
;

57 
¥öt_Êp_fig
 (
Êp_t
 *
Êp
, 
FILE
 *
outfûe
);

60 
Êp_t
 *
ªad_Êp
(*
fûe
);

63 
‰ì_Êp
(
Êp_t
 *
Êp
);

66 
gë_blk_ödex
(
Êp_t
 *
Êp
, *
«me
);

69 
exi°s_blk_ödex
(
Êp_t
 *
Êp
, *
«me
);

72 
is_h‹iz_adj
(
Êp_t
 *
Êp
, 
i
, 
j
);

75 
is_vît_adj
 (
Êp_t
 *
Êp
, 
i
, 
j
);

78 
gë_sh¨ed_Àn
(
Êp_t
 *
Êp
, 
i
, 
j
);

81 
gë_tŸÆ_width
(
Êp_t
 *
Êp
);

84 
gë_tŸÆ_height
(
Êp_t
 *
Êp
);

	@headers.h

1 #i‚de‡
HEADER_H_


3 
	#HEADER_H_


	)

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<m©h.h
>

8 
	~<as£π.h
>

9 
	~<sig«l.h
>

10 
	~<°rög.h
>

12 
	~"ho°.h
"

13 
	~"misc.h
"

14 
	~"machöe.h
"

15 
	~"ªgs.h
"

16 
	~"mem‹y.h
"

17 
	~"ˇche.h
"

18 
	~"lﬂdî.h
"

19 
	~"sysˇŒ.h
"

20 
	~"b¥ed.h
"

21 
	~"ªsour˚.h
"

22 
	~"bôm≠.h
"

23 
	~"›ti⁄s.h
"

24 
	~"evÆ.h
"

25 
	~"°©s.h
"

26 
	~"±ø˚.h
"

27 
	~"dlôe.h
"

28 
	~"sim.h
"

29 
	~"√tw‹k.h
"

30 
	~"my°©s.h
"

33 
	~"›tiˇlF‹Sim∂esˇœr/poöt-poöt.h
"

36 
	~"smt.h
"

38 
	~"öãrc⁄√˘.h
"

41 
	~"c⁄ãxt.h
"

46 
	~"˛u°î.h
"

48 
	~"˛u°î-›ts.h
"

50 
	~"hŸ•Ÿ.h
"

52 
	~"cmt.h
"

55 
	~"MTA.h
"

57 
	~"tokícohîí˚.h
"

65 
	#PCB_LINE_SIZE
 16

	)

66 
cou¡î_t
 
sim_cy˛e
;

67 
a˘uÆ_˛u°îs
;

68 
tŸ_dñ
;

69 
tŸ_dñ_bw
;

70 
num_bw_of
;

71 
RUU_size
;

72 #ifde‡ 
COMM_BUFF


73 
cou¡î_t
 
comm1qøm_ac˚ss_˛
[];

74 
cou¡î_t
 
comm2qøm_ac˚ss_˛
[];

76 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
;

80 #ifde‡
GHB


82 
	#GHB_Size
 512

	)

83 
	#DELTA_INDEX_TABLE_Size
 8

	)

84 
	#TAG_INDEX_TABLE_Size
 128

	)

	@host.h

94 #i‚de‡
HOST_H


95 
	#HOST_H


	)

98 #i‚de‡
__STDC__


99 #îr‹ 
The
 
Sim∂eSˇœr
 
simuœt‹s
 
mu°
 
be
 
compûed
 
wôh
 
™
 
ANSI
 
C
 
compûî
.

103 #unde‡
INLINE


104 #i‡
deföed
(
__GNUC__
)

105 
	#INLINE
 
ölöe


	)

107 
	#INLINE


	)

111 #ifde‡
__GNUC__


113 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

114 
	#ANSI_SYMCAT


	)

116 #ifde‡
OLD_SYMCAT


117 
	#SYMCAT
(
X
,
Y
ËX 
	)
Y

119 
	#SYMCAT
(
X
,
Y
ËX##
	)
Y

120 
	#ANSI_SYMCAT


	)

125 
	tboﬁ_t
;

126 
	tbyã_t
;

127 sig√d 
	tsbyã_t
;

128 
	thÆf_t
;

129 sig√d 
	tshÆf_t
;

130 
	tw‹d_t
;

131 sig√d 
	tsw‹d_t
;

132 
	tsÊﬂt_t
;

133 
	tdÊﬂt_t
;

136 #i‡
deföed
(
__GNUC__
Ë|| deföed(
__SUNPRO_C
Ë|| deföed(
__CC_C89
Ë|| deföed(
__CC_XLC
)

137 
	#HOST_HAS_QWORD


	)

138 
	tqw‹d_t
;

139 sig√d 
	tsqw‹d_t
;

140 #ifde‡
ANSI_SYMCAT


141 
	#ULL
(
N
ËN##
ULL


	)

142 
	#LL
(
N
ËN##
LL


	)

144 
	#ULL
(
N
ËN 
ULL


	)

145 
	#LL
(
N
ËN 
LL


	)

147 #ñi‡
deföed
(
__Æpha
)

148 
	#HOST_HAS_QWORD


	)

149 
	tqw‹d_t
;

150 sig√d 
	tsqw‹d_t
;

151 #ifde‡
ANSI_SYMCAT


152 
	#ULL
(
N
ËN##
UL


	)

153 
	#LL
(
N
ËN##
L


	)

155 
	#ULL
(
N
ËN 
UL


	)

156 
	#LL
(
N
ËN 
L


	)

158 #ñi‡
deföed
(
_MSC_VER
)

159 
	#HOST_HAS_QWORD


	)

160 
	t__öt64
 
	tqw‹d_t
;

161 sig√d 
	t__öt64
 
	tsqw‹d_t
;

162 
	#ULL
(
N
Ë((
qw‹d_t
)(N))

	)

163 
	#LL
(
N
Ë((
sqw‹d_t
)(N))

	)

165 #unde‡
HOST_HAS_QWORD


169 #ifde‡
HOST_HAS_QWORD


170 
sqw‹d_t
 
	tcou¡î_t
;

172 
cou¡î_t
 
	ttick_t
;

175 
dÊﬂt_t
 
	tcou¡î_t
;

176 
dÊﬂt_t
 
	ttick_t
;

180 #i‚de‡
INF_COUNTER


181 
	#INF_COUNTER
 9223372036854775807LL

	)

184 #ifde‡
__svr4__


185 
	#£tjmp
 
_£tjmp


	)

186 
	#l⁄gjmp
 
_l⁄gjmp


	)

	@hotspot.c

188 
	~"RC.h
"

189 
	~"Êp.h
"

190 
	~"utû.h
"

191 
	~<°dio.h
>

192 
	~<°rög.h
>

193 
	~<˘y≥.h
>

194 
	~"hódîs.h
"

198 
	#FT_CMP


	)

200 
	#CORE_ELEMENTS
 30

	)

203 
	gomô_œãøl
 = 0;

204 
	göô_ãmp
 = 60 + 273.15;

206 
cou¡î_t
 
	gœ°_hŸ•Ÿ_cy˛e
;

207 
	gba£_¥oc_‰eq
;

208 
	gdtm_u£d
 = 0;

210 *
	gÊp_cfg
 = 
NULL
;

211 *
	göô_fûe
 = 
NULL
;

212 *
	g°ódy_fûe
 = 
NULL
;

216 
	gt_chù
 = 0.0005;

217 
	gthîmÆ_thªshﬁd
 = 111.8 + 273.15;

220 
	gc_c⁄vec
 = 140.4;

222 
	gr_c⁄vec
 = 0.02;

223 
	gs_sök
 = 0.06;

224 
	gt_sök
 = 0.0069;

228 
	gs_•ªadî
 = 0.03;

229 
	gt_•ªadî
 = 0.001;

232 
	gt_öãrÁ˚
;

233 
	gt_öãrÁ˚_um
;

237 
	gambõ¡
 = 45 + 273.15;

239 *
	gãmp
, *
	ghŸ•Ÿ_powî
, *
	govîÆl_powî
, *
	g°ódy_ãmp
, *
	gmid_powî
,

240 *
	gmid_ãmp
, *
	gtŸÆ_Àakage_powî
, *
	g˛u°î_tŸÆ_Àakage_powî
,

241 *
	g˛u°î_avîage_Àakage
;

242 
Êp_t
 *
	gÊp
;

243 
cou¡î_t
 
	gtŸÆ_ñ≠£d_cy˛es
;

245 
	ghŸ•Ÿ_ˇŒs
 = 0;

248 
	ghŸ•Ÿ_dump_‰eq
;

250 
hŸ•Ÿ_powî_¨øy_t
 
	ghŸ•Ÿ_≥Ωîiod
[
CLUSTERS
];

253 
FILE
 *
	gsim_hŸ•Ÿout_fd
;

256 
	$hŸ•Ÿ_ªg_›ti⁄s
 (
›t_odb_t
 *
odb
)

258 
	`›t_ªg_°rög
(
odb
, "-hŸ•Ÿ:Êp", "Êo‹∂™ fûê(.Êp))", &
Êp_cfg
,

259  
NULL
, 
FALSE
, NULL);

260 
	`›t_ªg_°rög
(
odb
, "-hotspot:init",

261 "hŸ•ŸÅem≥øtuª inôüliz©i⁄ fûe", &
öô_fûe
,

262  
NULL
, 
FALSE
,

263 
NULL
);

264 
	`›t_ªg_°rög
 (
odb
, "-hotspot:steady",

266 &
°ódy_fûe
,

267  "hŸ•Ÿ.out", 
FALSE
, 
NULL
);

268 
	`›t_ªg_doubÀ
 (
odb
, "-hotspot:t_interface",

270 &
t_öãrÁ˚_um
,

271  30, 
FALSE
, 
NULL
);

272 
	`›t_ªg_öt
 (
odb
, "-hotspot:dump_freq",

274 &
hŸ•Ÿ_dump_‰eq
,

275  30, 
FALSE
, 
NULL
);

276 
	`›t_ªg_doubÀ
 (
sim_odb
, "-hotspot:base_proc_freq",

277 "ba£Öro˚ss‹ fªquícy i¿Hz", &
ba£_¥oc_‰eq
,

278  2.5e9, 
FALSE
, 
NULL
);

279 
	`›t_ªg_Êag
(
sim_odb
, "-hotspot:active",

280 "Tu∫†HŸSpŸ on", &
hŸ•Ÿ_a˘ive
, 
FALSE
, FALSE, 
NULL
);

281 
	}
}

283 
	#FLPGETAREA
(
unô
Ë(
Êp
->
unôs
[
	`gë_blk_ödex
(Êp, unô)].
width
 * fÕ->unôs[gë_blk_ödex(Êp, unô)].
height
)

	)

285 
	gÀakage_powî_Á˘‹
[
MAX_UNITS
];

290 
	$öô_Àakage_powî
 ()

292 
i
;

293 
tŸÆpowî
 = 0;

294 
tŸÆ_§am_¨ó
 = 0;

295 
tŸÆ_logic_¨ó
 = 0;

298 #i‚de‡
FT_CMP


299 
tŸÆ_bus_¨ó
 = 0;

302 i‡(
Êp
->
n_unôs
 > 
MAX_UNITS
)

303 
Áèl


305 
Êp
->
n_unôs
, 
MAX_UNITS
);

307 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

309 i‡(
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "cache") ||

310 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "qram") ||

311 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "IntQ") ||

312 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "FPQ") ||

313 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "LdStQ") ||

314 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "TB") ||

315 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "bpred") ||

316 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "Reg") ||

317 
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "L2SysInterface")

323 
Àakage_powî_Á˘‹
[
i
] =

324 
SRAMPOWERPERUM2PERTEMP_LEAD
 * 1e12 * 
Êp
->
unôs
[
i
].
width
 *

325 
Êp
->
unôs
[
i
].
height
;

326 
tŸÆ_§am_¨ó
 +
Êp
->
unôs
[
i
].
width
 * fÕ->unôs[i].
height
;

331 
Àakage_powî_Á˘‹
[
i
] =

332 
LOGICPOWERPERUM2PERTEMP_LEAD
 * 1e12 * 
Êp
->
unôs
[
i
].
width
 *

333 
Êp
->
unôs
[
i
].
height
;

334 
tŸÆ_logic_¨ó
 +
Êp
->
unôs
[
i
].
width
 * fÕ->unôs[i].
height
;

340 i‡(!
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "c0"))

342 
Àakage_powî_Á˘‹
[
i
] *=

343 (
SRAMPOWERPERUM2PERTEMP_CHK
 / 
SRAMPOWERPERUM2PERTEMP_LEAD
);

345 
tŸÆpowî
 +
Àakage_powî_Á˘‹
[
i
];

348 
	`Ârötf
 (
°dîr
, "EstimatedÅotalÇumber ofÜogicÅransistors: %g\n",

349 (Ë(
tŸÆ_logic_¨ó
 * 
LOGICDENSITY
 * 1e12));

350 
	`Ârötf
 (
°dîr
, "EstimatedÅotalÇumber of SRAMÅransistors: %g\n",

351 (Ë(
tŸÆ_§am_¨ó
 * 
SRAMDENSITY
 * 1e12));

353 #i‚de‡
FT_CMP


354 
	`Ârötf
 (
°dîr
, "EstimatedÅotal busárea: %g um^2\n",

355 (Ë(
tŸÆ_bus_¨ó
 * 1e12));

358 
	`Ârötf
 (
°dîr
, "At 80 C,ÅheÅotalÜeakageÖower would be %g Watts\n",

359 (Ë
	`LEAKAGEPOWERFROMTEMP
 (
tŸÆpowî
, 273.15 + 80));

360 
	}
}

362 
	#MAX_L2CACHES
 80

363 
l2ˇche_blk_ödex
[
MAX_L2CACHES
];

	)

364 
	gl2ˇche_cou¡
 = 0;

365 
	gl2ˇche_¨ós
[
MAX_L2CACHES
];

369 
	$loˇã_l2ˇche
 ()

372 
i
;

373 
tŸÆ¨ó
 = 0;

374 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

376 i‡(
	`°r°r
 (
Êp
->
unôs
[
i
].
«me
, "L2cache"))

378 i‡(
l2ˇche_cou¡
 >
MAX_L2CACHES
)

379 
	`Áèl
 ("Your MAX_L2CACHES isÅoo small. Recompile.");

381 
l2ˇche_blk_ödex
[
l2ˇche_cou¡
] = 
i
;

382 
l2ˇche_¨ós
[
l2ˇche_cou¡
] =

383 
Êp
->
unôs
[
i
].
width
 * fÕ->unôs[i].
height
;

384 
tŸÆ¨ó
 +
l2ˇche_¨ós
[
l2ˇche_cou¡
];

385 ++
l2ˇche_cou¡
;

388 
	`Ârötf
 (
°dîr
, "Added %dÖieces of L2cache, havingáÅotalárea of %g\n",

389 
l2ˇche_cou¡
, 
tŸÆ¨ó
);

390 
i
 = 0; i < 
l2ˇche_cou¡
; i++)

392 
l2ˇche_¨ós
[
i
] /
tŸÆ¨ó
;

394 
	}
}

398 
	#FRACTION_DECLARE
(
unô
,
vÆues
...Ë\

	)

399 c⁄° *
	gunô
##
	g_‰a˘_«mes
[] = {
vÆues
}; \

400 c⁄° 
	gunô
##
	g_‰a˘_size
 = (
unô
##
_‰a˘_«mes
)/(unit##_fract_names[0]); \

401 
	gunô
##
	g_‰a˘
[(
unô
##
_‰a˘_«mes
)/(unit##_fract_names[0])];

403 
	#FRACTION_INIT
(
unô
,
¥efix
,
divis‹
Ë\

	)

405 
	gunô
##
	g_tŸÆ
 = 0; \

406 
	gôr
; \

407 
	gtmp
[100]; \

408 
	gôr
=0;ôr<
	gunô
##
	g_‰a˘_size
;itr++) { \

409 
•rötf
(
tmp
,
¥efix
 "%s",
unô
##
_‰a˘_«mes
[
ôr
]); \

410 
	gunô
##
	g_tŸÆ
 +
FLPGETAREA
(
tmp
); \

412 
	gôr
=0;ôr<
	gunô
##
	g_‰a˘_size
;itr++) { \

413 
•rötf
(
tmp
,
¥efix
 "%s",
unô
##
_‰a˘_«mes
[
ôr
]); \

414 
	gunô
##
	g_‰a˘
[
ôr
] = 
FLPGETAREA
(
tmp
)/(
unô
##
_tŸÆ
*
divis‹
); \

418 
	#FRACTION_INIT_CORE
(
unô
,
num
,
divis‹
Ë\

	)

420 
unô
##
_tŸÆ
 = 0; \

421 
ôr
; \

422 
tmp
[100]; \

423 
ôr
=0;ôr<
unô
##
_‰a˘_size
;itr++) { \

424 
	`•rötf
(
tmp
,"c%d_%s",
num
, 
unô
##
_‰a˘_«mes
[
ôr
]); \

425 
unô
##
_tŸÆ
 +
	`FLPGETAREA
(
tmp
); \

427 
ôr
=0;ôr<
unô
##
_‰a˘_size
;itr++) { \

428 
	`•rötf
(
tmp
,"c%d_%s",
num
, 
unô
##
_‰a˘_«mes
[
ôr
]); \

429 
unô
##
_‰a˘
[
ôr
] = 
	`FLPGETAREA
(
tmp
)/(unô##
_tŸÆ
*
divis‹
); \

431 
	}
} 0)

433 
	#FRACTION_UPDATEHSSTAT
(
unô
,
j
,
•rötff‹m©
...Ë\

	)

435 
ôr
; \

436 
ôr
=0;ôr<
unô
##
_‰a˘_size
;itr++) { \

437 
	`•rötf
(
func_unô
,
•rötff‹m©
); \

438 
hŸ•Ÿ_powî
[
	`gë_blk_ödex
(
Êp
, 
func_unô
)] +
hŸ•Ÿ_≥Ωîiod
[
j
].
unô
*unô##
_‰a˘
[
ôr
]; \

440 
	}
} 0)

442 
	#FRACTION_UPDATESDONE
(
unô
,
i
Ë
hŸ•Ÿ_≥Ωîiod
[i].unô=0

	)

445 
	#FRACTION_UPDATEHSSTAT_CL
(
unô
,
i
Ë
	`FRACTION_UPDATEHSSTAT
(unô,i,"c%d_%s",i,unô##
_‰a˘_«mes
[
ôr
]); \

	)

446 
hŸ•Ÿ_≥Ωîiod
[
i
].
unô
=0

448 
	#FRACTION_UPDATEHSSTAT_ALLCL
(
unô
,
i
Ë
	`FRACTION_UPDATEHSSTAT
(unô,0,"c%d_%s",i,unô##
_‰a˘_«mes
[
ôr
])

	)

450 
	#FRACTION_UPDATEHSSTAT_ALL
(
unô
,
i
Ë
	`FRACTION_UPDATEHSSTAT
(unô,i,"%s",unô##
_‰a˘_«mes
[
ôr
])

	)

452 
	`FRACTION_DECLARE
 (
úesu…bus
, "IntAlu0", "IntAlu1", "IntAlu2",

454 
	`FRACTION_DECLARE
 (
‰esu…bus
, "FPAdd", "FPMult", "FPReg");

455 
	`FRACTION_DECLARE
 (
˛ock1
,

536 
	`FRACTION_DECLARE
 (
˛ock2
, "IntQ", "IntReg0", "IntReg1",

538 
	`FRACTION_DECLARE
 (
˛ock3
, "FPQ", "FPReg", "FPAdd", "FPMult");

541 
	$hŸ•Ÿ_öô
 ()

543 
i
;

544 *
sim_°r_dump
;

545 *
sim_dump
 = 
sim_°r_dump
;

546 
°rFûeName
[256];

548 i‡(!
sim_dump
)

550 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

551 
	`exô
 (1);

554 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

555 
	`°rˇt
 (
°rFûeName
, ".hsp");

557 i‡((
sim_hŸ•Ÿout_fd
 = 
	`f›í
 (
°rFûeName
, "w")Ë=
NULL
)

559 
Áèl


561 
°rFûeName
);

562 
	`exô
 (0);

566 
t_öãrÁ˚
 = 0.000001 * 
t_öãrÁ˚_um
;

569 
Êp
 = 
	`ªad_Êp
 (
Êp_cfg
);

572 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "TŸÆÇumbî o‡˛u°î†¨ê%i.\n", 
numc⁄ãxts
);

575 
	`¥öt_Êp_fig
 (
Êp
, 
sim_hŸ•Ÿout_fd
);

578 
	`loˇã_l2ˇche
 ();

581 
	`FRACTION_INIT
 (
˛ock1
, "", 1);

582 
i
 = 0; i < 
CLUSTERS
; i++)

584 
	`FRACTION_INIT_CORE
 (
úesu…bus
, 
i
, 1);

585 
	`FRACTION_INIT_CORE
 (
‰esu…bus
, 
i
, 1);

586 
	`FRACTION_INIT_CORE
 (
˛ock2
, 
i
, 1);

587 
	`FRACTION_INIT_CORE
 (
˛ock3
, 
i
, 1);

591 
	`öô_Àakage_powî
 ();

594 
	`¸óã_RC_m©ri˚s
 (
Êp
, 
omô_œãøl
);

599 
ãmp
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

600 
hŸ•Ÿ_powî
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

601 
°ódy_ãmp
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

602 
ovîÆl_powî
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

604 
mid_ãmp
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

605 
mid_powî
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

607 
tŸÆ_Àakage_powî
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

608 
˛u°î_tŸÆ_Àakage_powî
 = 
	`hŸ•Ÿ_ve˘‹
 (
Êp
->
n_unôs
);

609 
˛u°î_avîage_Àakage
 = 
	`hŸ•Ÿ_ve˘‹
 (
numc⁄ãxts
);

612 i‡(
öô_fûe
)

614 i‡(!
dtm_u£d
)

615 
	`ªad_ãmp
 (
Êp
, 
ãmp
, 
öô_fûe
, 0);

617 
	`ªad_ãmp
 (
Êp
, 
ãmp
, 
öô_fûe
, 1);

620 
	`£t_ãmp
 (
ãmp
, 
Êp
->
n_unôs
, 
öô_ãmp
);

621 
œ°_hŸ•Ÿ_cy˛e
 = 0;

622 
tŸÆ_ñ≠£d_cy˛es
 = 0;

623 
	}
}

625 
	#HOTSPOTDUMPSTAT
(
ni˚«me
,
˙ame
Ë
	`Ârötf
(
sim_hŸ•Ÿout_fd
,"%† \t%.2f\t%.2f\n",Çi˚«me, 
mid_ãmp
[˙ame]-273.15, 
ãmp
[˙ame])

	)

627 
	$hŸ•Ÿ_dump°©s
 ()

629 
n
, 
i
;

630 
Àakage_tŸÆ
;

632 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

634 
mid_powî
[
i
] = 
ovîÆl_powî
[i];

635 
mid_powî
[
i
] /
tŸÆ_ñ≠£d_cy˛es
;

637 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "totalÉlapsed cycles %lld \n",

638 
tŸÆ_ñ≠£d_cy˛es
);

640 
	`°ódy_°©e_ãmp
 (
mid_powî
, 
mid_ãmp
, 
Êp
->
n_unôs
);

642 
n
 = 
Êp
->
n_unôs
;

643 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "Unit \tSteady \tTransient\n");

644 
i
 = 0; i < 
n
; i++)

645 
	`HOTSPOTDUMPSTAT
 (
Êp
->
unôs
[
i
].
«me
, i);

647 
	`HOTSPOTDUMPSTAT
 ("•ªadî_we°", 
SP_W
);

648 
	`HOTSPOTDUMPSTAT
 ("•ªadî_ó°", 
SP_E
);

649 
	`HOTSPOTDUMPSTAT
 ("•ªadî_n‹th", 
SP_N
);

650 
	`HOTSPOTDUMPSTAT
 ("•ªadî_south", 
SP_S
);

651 
	`HOTSPOTDUMPSTAT
 ("•ªadî_bŸtom", 
SP_B
);

652 
	`HOTSPOTDUMPSTAT
 ("sök_we°", 
SINK_W
);

653 
	`HOTSPOTDUMPSTAT
 ("sök_ó°", 
SINK_E
);

654 
	`HOTSPOTDUMPSTAT
 ("sök_n‹th", 
SINK_N
);

655 
	`HOTSPOTDUMPSTAT
 ("sök_south", 
SINK_S
);

656 
	`HOTSPOTDUMPSTAT
 ("sök_bŸtom", 
SINK_B
);

659 
Àakage_tŸÆ
 = 0;

660 
i
 = 0; i < 
n
; i++)

662 
Àakage_tŸÆ
 +=

663 
	`LEAKAGEPOWERFROMTEMP
 (
Àakage_powî_Á˘‹
[
i
], 
mid_ãmp
[i]);

665 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "CurrentÜeakageÖower of %s is %g W.\n",

666 
Êp
->
unôs
[
i
].
«me
,

667 
	`LEAKAGEPOWERFROMTEMP
 (
Àakage_powî_Á˘‹
[
i
], 
mid_ãmp
[i]));

670 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "CurrentÅotalÜeakageÖower is %g W.\n",

671 
Àakage_tŸÆ
);

672 
	`fÊush
(
sim_hŸ•Ÿout_fd
);

673 
	}
}

676 
	$hŸ•Ÿ_unöô
 ()

678 
i
, 
j
, 
k
, 
hŸ•Ÿ_cy˛es
;

680 
tŸÆ_avîage_Àakage
 = 0;

683 
hŸ•Ÿ_cy˛es
 = 
sim_cy˛e
 - (sim_cy˛ê% 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

685 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "TotalÉlasped cycles is %lld.\n",

686 
tŸÆ_ñ≠£d_cy˛es
);

690 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

692 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "AverageÜeakageÖower of %s is %g W.\n",

693 
Êp
->
unôs
[
i
].
«me
,

694 
tŸÆ_Àakage_powî
[
i
] / (
tŸÆ_ñ≠£d_cy˛es
 /

695 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
));

696 
tŸÆ_avîage_Àakage
 +=

697 
tŸÆ_Àakage_powî
[
i
] / (
tŸÆ_ñ≠£d_cy˛es
 /

698 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

703 #ifde‡
FT_CMP


706 
j
 = 0; j < 
numc⁄ãxts
; j++)

709 
˛u°î_avîage_Àakage
[
j
] = 0;

712 
k
 = (
j
 * 
CORE_ELEMENTS
); k < ((j * CORE_ELEMENTS) + CORE_ELEMENTS);

713 
k
++)

715 
˛u°î_avîage_Àakage
[
j
] +=

716 
˛u°î_tŸÆ_Àakage_powî
[
k
] / (
tŸÆ_ñ≠£d_cy˛es
 /

717 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

719 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
,

720 "TŸÆávîagêÀakagêpowî f‹ clu°î %òi†%g W.\n", 
j
,

721 
˛u°î_avîage_Àakage
[
j
]);

725 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
,

727 
numc⁄ãxts
, 
tŸÆ_avîage_Àakage
);

728 
	`Ârötf
 (
°dîr
, "avg_Àakage_powî: %gÉ√rgy: %g\n", 
tŸÆ_avîage_Àakage
,ÅŸÆ_avîage_Àakage*
sim_cy˛e
);

732 #ifde‡
FT_CMP


733 
j
 = 0; j < 
numc⁄ãxts
; j++)

735 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
,

736 "TŸÆÜókagêíîgy f‹ clu°î %òi†%g W.\n", 
j
,

737 
˛u°î_avîage_Àakage
[
j
] * 
tŸÆ_ñ≠£d_cy˛es
);

741 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
,

742 "TŸÆÇumbî o‡ñemít†öÖro˚ss‹árchôe˘uªáª: %i\n", 
i
);

744 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "AverageÜeakageÖowerÖer cluster is %g W.\n",

745 
tŸÆ_avîage_Àakage
 / 
numc⁄ãxts
);

748 i‡(
°ódy_fûe
)

749 
	`dump_ãmp
 (
Êp
, 
°ódy_ãmp
, 
°ódy_fûe
);

752 
	`˛ónup_hŸ•Ÿ
 (
Êp
->
n_unôs
);

753 
	`‰ì_Êp
 (
Êp
);

754 
	`‰ì_ve˘‹
 (
ãmp
);

755 
	`‰ì_ve˘‹
 (
hŸ•Ÿ_powî
);

756 
	`‰ì_ve˘‹
 (
°ódy_ãmp
);

757 
	`‰ì_ve˘‹
 (
ovîÆl_powî
);

759 
	`‰ì_ve˘‹
 (
mid_ãmp
);

760 
	`‰ì_ve˘‹
 (
mid_powî
);

762 
	`‰ì_ve˘‹
 (
tŸÆ_Àakage_powî
);

763 
	`‰ì_ve˘‹
 (
˛u°î_tŸÆ_Àakage_powî
);

764 
	`‰ì_ve˘‹
 (
˛u°î_avîage_Àakage
);

765 
	}
}

768 
	$upd©e_hŸ•Ÿ_°©s
 (
ñ≠£d_cy˛es
)

770 
i
;

774 #i‚de‡
FT_CMP


775 
l
;

778 
ñ≠£d_time
;

779 
l2ˇche_powî
 = 0;

780 
func_unô
[80];

781 #ifde‡
GET_BLK_INDEX


782 
	`GET_BLK_INDEX_CACHE_OPEN
 ();

785 #i‚de‡
GET_BLK_INDEX


786 
	#UPDATEHSSTAT
(
«me
,
membî
Ë
	`•rötf
(
func_unô
,"c%d_%s",
i
,«me); \

	)

787 
hŸ•Ÿ_powî
[
	`gë_blk_ödex
(
Êp
, 
func_unô
)] +
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
; \

788 
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
=0

790 
	#UPDATEHSSTAT
(
«me
,
membî
Ë
	`GET_BLK_INDEX_CACHE
“ame); \

	)

791 
hŸ•Ÿ_powî
[
	`GET_BLK_INDEX
()] +
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
; \

792 
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
=0

797 
	#UPDATEHSSTATFE
(
«me
,
membî
Ë
hŸ•Ÿ_powî
[
	`gë_blk_ödex
(
Êp
,Çame)] +
hŸ•Ÿ_≥Ωîiod
[
i
].membî; \

	)

798 
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
=0

800 
	#UPDATEHSSTATFE8
(
«me
,
membî
Ë
	`•rötf
(
func_unô
,"„8_%s_%d",«me,
i
+1); \

	)

801 
hŸ•Ÿ_powî
[
	`gë_blk_ödex
(
Êp
, 
func_unô
)] +
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
; \

802 
hŸ•Ÿ_≥Ωîiod
[
i
].
membî
=0

803 
i
 = 0;

809 
i
 = 0; i < 
numc⁄ãxts
; i++)

811 
	`UPDATEHSSTAT
 ("b¥ed", 
b¥ed
);

812 
	`UPDATEHSSTAT
 ("L2SysI¡îÁ˚", 
sysötf
);

813 
	`UPDATEHSSTAT
 ("Iˇche", 
iˇche
);

814 
	`UPDATEHSSTAT
 ("ITB", 
ôlb
);

815 
	`UPDATEHSSTAT
 ("Fëch", 
„tch
);

816 
	`UPDATEHSSTAT
 ("ROB", 
rob
);

817 
	`UPDATEHSSTAT
 ("FPRíame", 
‰íame
);

818 
	`UPDATEHSSTAT
 ("I¡Ríame", 
úíame
);

820 
	`FRACTION_UPDATEHSSTAT_ALL
 (
˛ock1
, 
i
);

825 
i
 = 0; i < 
numc⁄ãxts
; i++)

827 
	`UPDATEHSSTAT
 ("FPMu…", 
fmul
);

828 
	`UPDATEHSSTAT
 ("FPReg", 
‰eg
);

829 
	`UPDATEHSSTAT
 ("FPAdd", 
Ádd
);

831 
	`FRACTION_UPDATEHSSTAT_CL
 (
‰esu…bus
, 
i
);

833 
	`UPDATEHSSTAT
 ("DTB0", 
dtb0
);

834 
	`UPDATEHSSTAT
 ("FPQ", 
fqueue
);

835 
	`UPDATEHSSTAT
 ("I¡Q", 
iqueue
);

836 
	`UPDATEHSSTAT
 ("LdStQ", 
lsq
);

837 
	`UPDATEHSSTAT
 ("I¡Reg0", 
úeg0
);

838 
	`UPDATEHSSTAT
 ("I¡Alu0", 
ülu0
);

839 
	`UPDATEHSSTAT
 ("I¡Mu…", 
ülu2
);

840 
	`UPDATEHSSTAT
 ("DTB1", 
dtb1
);

841 
	`UPDATEHSSTAT
 ("I¡Reg1", 
úeg1
);

842 
	`UPDATEHSSTAT
 ("I¡Alu1", 
ülu1
);

843 
	`UPDATEHSSTAT
 ("I¡Alu2", 
ülu3
);

845 
	`FRACTION_UPDATEHSSTAT_CL
 (
úesu…bus
, 
i
);

848 
	`UPDATEHSSTAT
 ("Dˇche", 
dl1ˇche
);

850 
	`FRACTION_UPDATEHSSTAT_ALLCL
 (
˛ock2
, 
i
);

851 
	`FRACTION_UPDATEHSSTAT_ALLCL
 (
˛ock3
, 
i
);

853 
l2ˇche_powî
 +
hŸ•Ÿ_≥Ωîiod
[
i
].
ul2ˇche
;

854 
hŸ•Ÿ_≥Ωîiod
[
i
].
ul2ˇche
 = 0;

859 
i
 = 0; i < 
l2ˇche_cou¡
; i++)

861 
hŸ•Ÿ_powî
[
l2ˇche_blk_ödex
[
i
]] +
l2ˇche_powî
 * 
l2ˇche_¨ós
[i];

864 
i
 = 0; i < 
numc⁄ãxts
; i++)

866 
	`FRACTION_UPDATESDONE
 (
úesu…bus
,
i
);

867 
	`FRACTION_UPDATESDONE
 (
‰esu…bus
,
i
);

868 
	`FRACTION_UPDATESDONE
 (
˛ock1
,
i
);

869 
	`FRACTION_UPDATESDONE
 (
˛ock2
,
i
);

870 
	`FRACTION_UPDATESDONE
 (
˛ock3
,
i
);

873 
ñ≠£d_time
 = 
ñ≠£d_cy˛es
 / 
ba£_¥oc_‰eq
;

876 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

879 
hŸ•Ÿ_powî
[
i
] +=

880 
ñ≠£d_cy˛es
 * 
	`LEAKAGEPOWERFROMTEMP
 (
Àakage_powî_Á˘‹
[
i
],

881 
mid_ãmp
[
i
]);

882 
tŸÆ_Àakage_powî
[
i
] +=

883 
	`LEAKAGEPOWERFROMTEMP
 (
Àakage_powî_Á˘‹
[
i
], 
mid_ãmp
[i]);

884 
˛u°î_tŸÆ_Àakage_powî
[
i
] +=

885 
	`LEAKAGEPOWERFROMTEMP
 (
Àakage_powî_Á˘‹
[
i
], 
mid_ãmp
[i]);

889 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

891 
ovîÆl_powî
[
i
] +
hŸ•Ÿ_powî
[i];

896 
hŸ•Ÿ_powî
[
i
] /(
ñ≠£d_cy˛es
);

902 
	`compuã_ãmp
 (
hŸ•Ÿ_powî
, 
ãmp
, 
Êp
->
n_unôs
, 
ñ≠£d_time
);

903 
tŸÆ_ñ≠£d_cy˛es
 +
ñ≠£d_cy˛es
;

906 
i
 = 0; i < 
Êp
->
n_unôs
; i++)

907 
hŸ•Ÿ_powî
[
i
] = 0;

908 #ifde‡
GET_BLK_INDEX


909 
	`GET_BLK_INDEX_CACHE_CLOSE
 ();

911 
hŸ•Ÿ_ˇŒs
++;

912 i‡(
hŸ•Ÿ_ˇŒs
 > 
hŸ•Ÿ_dump_‰eq
)

914 
hŸ•Ÿ_ˇŒs
 = 0;

915 
	`hŸ•Ÿ_dump°©s
 ();

917 
	}
}

922 
	$Àakage_powî_vÆue
 (
FILE
 * 
Â
)

924 
j
, 
k
;

925 
ˇche_avîage_Àakage
 = 0;

927 
j
 = 0; j < 
numc⁄ãxts
; j++)

930 
˛u°î_avîage_Àakage
[
j
] = 0;

933 
k
 = (
j
 * 
CORE_ELEMENTS
); k < ((j * CORE_ELEMENTS) + CORE_ELEMENTS);

934 
k
++)

936 
˛u°î_avîage_Àakage
[
j
] +=

937 
˛u°î_tŸÆ_Àakage_powî
[
k
] / (
tŸÆ_ñ≠£d_cy˛es
 /

938 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

941 
˛u°î_avîage_Àakage
[
j
] -=

942 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

943 10] / (
tŸÆ_ñ≠£d_cy˛es
 /

944 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

945 
˛u°î_avîage_Àakage
[
j
] -=

946 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

947 12] / (
tŸÆ_ñ≠£d_cy˛es
 /

948 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

949 
˛u°î_avîage_Àakage
[
j
] -=

950 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

951 17] / (
tŸÆ_ñ≠£d_cy˛es
 /

952 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

953 
˛u°î_avîage_Àakage
[
j
] -=

954 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

955 21] / (
tŸÆ_ñ≠£d_cy˛es
 /

956 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

958 i‡(!
j
)

960 
ˇche_avîage_Àakage
 +=

961 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

962 10] / (
tŸÆ_ñ≠£d_cy˛es
 /

963 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

964 
ˇche_avîage_Àakage
 +=

965 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

966 12] / (
tŸÆ_ñ≠£d_cy˛es
 /

967 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

968 
ˇche_avîage_Àakage
 +=

969 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

970 17] / (
tŸÆ_ñ≠£d_cy˛es
 /

971 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

972 
ˇche_avîage_Àakage
 +=

973 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 +

974 21] / (
tŸÆ_ñ≠£d_cy˛es
 /

975 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
);

981 
	`Ârötf
 (
Â
, "%.2f\t%.2f\t%.2f\t%.2f\t",

982 
˛u°î_avîage_Àakage
[0] * 
tŸÆ_ñ≠£d_cy˛es
,

983 
˛u°î_avîage_Àakage
[1] * 
tŸÆ_ñ≠£d_cy˛es
,

984 
˛u°î_avîage_Àakage
[2] * 
tŸÆ_ñ≠£d_cy˛es
,

985 
ˇche_avîage_Àakage
 * 
tŸÆ_ñ≠£d_cy˛es
);

986 
	}
}

991 
	$Àakage_powî_˛ór
 ()

994 
j
, 
k
;

996 
j
 = 0; j < 
numc⁄ãxts
; j++)

998 
k
 = (
j
 * 
CORE_ELEMENTS
); k < ((j * CORE_ELEMENTS) + CORE_ELEMENTS);

999 
k
++)

1001 
˛u°î_tŸÆ_Àakage_powî
[
k
] = 0;

1004 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 10] = 0;

1005 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 12] = 0;

1006 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 17] = 0;

1007 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 21] = 0;

1009 i‡(!
j
)

1011 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 10] = 0;

1012 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 12] = 0;

1013 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 17] = 0;

1014 
˛u°î_tŸÆ_Àakage_powî
[
j
 * 
CORE_ELEMENTS
 + 21] = 0;

1017 
	}
}

	@hotspot.h

51 
	~<°dio.h
>

54 
	ghŸ•Ÿ_a˘ive
;

56 
FILE
 *
	gsim_hŸ•Ÿout_fd
;

63 
ba£_¥oc_‰eq
;

65 
	shŸ•Ÿ_powî_t_°


68 
	mfmul
;

69 
	m‰eg
;

70 
	mÁdd
;

71 
	mdtb0
;

72 
	mfqueue
;

73 
	miqueue
;

74 
	mlsq
;

75 
	múeg0
;

76 
	mülu0
;

77 
	mülu1
;

78 #i‚de‡
CONFIG_BASED_ICS


79 
	mñ
;

80 
	mî
;

81 
	m›tiˇl_mod_l
;

82 
	m›tiˇl_ªc_l
;

83 
	m›tiˇl_qøm_l
;

84 
	m›tiˇl_mod_r
;

85 
	m›tiˇl_ªc_r
;

86 
	m›tiˇl_qøm_r
;

88 
	mcomm_lök_tx
[
MAX_IC_INDEX
];

89 
	mcomm_lök_rx
[
MAX_IC_INDEX
];

90 
	mcomm_qøm
[
MAX_IC_INDEX
];

92 
	mdl1ˇche
;

93 
	mul2ˇche
;

94 
	møq
;

95 
	múesu…bus
;

96 
	m‰esu…bus
;

97 
	m˛ock1
;

98 
	m˛ock2
;

99 
	m˛ock3
;

105 
	mb¥ed
;

106 
	miˇche
;

107 
	mrob
;

108 
	múíame
;

109 
	môlb
;

110 
	m„tch
;

115 
	m˝buf
;

116 
	mbroutq
;

117 
	mpcbuf
;

119 
	mbus0
;

120 
	mbus1
;

123 
	msysötf
;

125 
	mülu2
;

126 
	m‰íame
;

128 
	mülu3
;

129 
	mdtb1
;

130 
	múeg1
;

132 }
	thŸ•Ÿ_powî_¨øy_t
;

133 
hŸ•Ÿ_powî_¨øy_t
 
hŸ•Ÿ_≥Ωîiod
[
CLUSTERS
];

135 
cou¡î_t
 
œ°_hŸ•Ÿ_cy˛e
;

141 
hŸ•Ÿ_öô
();

142 
hŸ•Ÿ_unöô
();

143 
hŸ•Ÿ_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

144 
upd©e_hŸ•Ÿ_°©s
(
ñ≠£d_cy˛es
);

145 
hŸ•Ÿ_dump°©s
();

149 
Àakage_powî_vÆue
(
FILE
 *
Â
);

150 
Àakage_powî_˛ór
();

	@indirectjump.cpp

1 
	~<°dio.h
>

2 
	~<io°ªam
>

3 
	~<°rög.h
>

4 
	~"ho°.h
"

5 
	~"machöe.h
"

6 
usög
 
«me•a˚
 
	g°d
;

8 "C" 
pushJump
 (
md_addr_t
 
pc
, md_addr_à
√xt_pc
);

9 "C" 
¥ötJumpSèts
 ();

11 
	#TABLE_LENGTH
 2048

	)

12 
	#SHIFT_LENGTH
 0

	)

13 
	#ASSOC
 4

	)

14 ˛as†
	cíåy


16 
	mpublic
:

17 
md_addr_t
 
pc
;

18 
cou¡î_t
 
	mcou¡
;

19 
íåy
 *
	m√xt
;

22 
	$íåy
 ()

24 
pc
 = 0;

25 
cou¡
 = 0;

26 
√xt
 = 
NULL
;

28 
	$íåy
 (
md_addr_t
 
√xt_pc
)

30 
pc
 = 
√xt_pc
;

31 
cou¡
 = 1;

32 
√xt
 = 
NULL
;

33 
	}
}

36 ~
	$íåy
 ()

38 
	}
}

40 
	$ö£πJump
 (
md_addr_t
 
√xt_pc
)

42 i‡(
pc
 =
√xt_pc
)

44 
cou¡
++;

48 i‡(
√xt
 =
NULL
)

50 
√xt
 = 
√w
 
	`íåy
 (
√xt_pc
);

54 
√xt
->
	`ö£πJump
 (
√xt_pc
);

55 
	}
}

57 
íåy
 *
	$s‹tIn£π
 (
íåy
 * 
√w_íåy
)

59 i‡(
√w_íåy
->
cou¡
 > count)

61 
√w_íåy
->
√xt
 = 
this
;

62  
√w_íåy
;

65 i‡(
√xt
 =
NULL
)

67 
√xt
 = 
√w_íåy
;

68  
this
;

71 
√xt
 =Çext->
	`s‹tIn£π
 (
√w_íåy
);

72 
	}
}

74 
	$¥öt_fûe
 (
FILE
 * 
Â
)

76 
	`Ârötf
 (
Â
, "\tPC: 0x%Œx\tCou¡: %Œd", 
pc
, 
cou¡
);

77 i‡(
√xt
 !
NULL
)

79 
√xt
->
	`¥öt_fûe
 (
Â
);

81 
	}
}

84 ˛as†
	chashTabÀ


86 
	mpublic
:

87 
íåy
 * 
èbÀ
[
TABLE_LENGTH
][
ASSOC
];

88 
md_addr_t
 
	mpc
[
TABLE_LENGTH
][
ASSOC
];

91 
	$hashTabÀ
 ()

93 
i
, 
j
;

94 
i
 = 0; i < 
TABLE_LENGTH
; i++)

96 
j
 = 0; j < 
ASSOC
; j++)

98 
èbÀ
[
i
][
j
] = 
NULL
;

99 
pc
[
i
][
j
] = 0;

105 ~
	$hashTabÀ
 ()

107 
	}
}

111 
hashTabÀ
 
	gjumpBuf„r
;

114 
	$pushJump
 (
md_addr_t
 
pc
, md_addr_à
√xt_pc
)

116 
ödex
;

117 
i
;

119 i‡(
pc
 =0 || 
√xt_pc
 == 0)

121 
ödex
 = (
pc
 >> 
SHIFT_LENGTH
Ë% 
TABLE_LENGTH
;

124 
i
 = 0; i < 
ASSOC
; i++)

126 i‡(
jumpBuf„r
.
pc
[
ödex
][
i
] ==Öc)

128 
jumpBuf„r
.
èbÀ
[
ödex
][
i
]->
	`ö£πJump
 (
√xt_pc
);

134 
i
 = 0; i < 
ASSOC
; i++)

136 i‡(
jumpBuf„r
.
pc
[
ödex
][
i
] == 0)

138 
jumpBuf„r
.
pc
[
ödex
][
i
] =Öc;

139 
jumpBuf„r
.
èbÀ
[
ödex
][
i
] = 
√w
 
	`íåy
 (
√xt_pc
);

145 
	}
}

148 
	$s‹tJumps
 ()

150 
i
, 
j
;

152 
i
 = 0; i < 
TABLE_LENGTH
; i++)

154 
j
 = 0; j < 
ASSOC
; j++)

156 i‡(
jumpBuf„r
.
pc
[
i
][
j
] != 0)

158 
íåy
 *
ãmp
;

160 
ãmp
 = 
jumpBuf„r
.
èbÀ
[
i
][
j
];

161 
jumpBuf„r
.
èbÀ
[
i
][
j
] = jumpBuf„r.èbÀ[i][j]->
√xt
;

162 
ãmp
->
√xt
 = 
NULL
;

163 
jumpBuf„r
.
èbÀ
[
i
][
j
] !
NULL
)

165 
íåy
 *
ãmp_√xt
;

167 
ãmp_√xt
 = 
jumpBuf„r
.
èbÀ
[
i
][
j
]->
√xt
;

168 
jumpBuf„r
.
èbÀ
[
i
][
j
]->
√xt
 = 
NULL
;

169 
ãmp
 =Åemp->
	`s‹tIn£π
 (
jumpBuf„r
.
èbÀ
[
i
][
j
]);

170 
jumpBuf„r
.
èbÀ
[
i
][
j
] = 
ãmp_√xt
;

173 
jumpBuf„r
.
èbÀ
[
i
][
j
] = 
ãmp
;

177 
	}
}

180 
	$¥ötJumpSèts
 ()

182 
FILE
 *
Â
;

183 *
sim_°r_dump
;

184 *
sim_dump
 = 
sim_°r_dump
;

185 
°rFûeName
[256];

187 i‡(!
sim_dump
)

189 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

190 
	`exô
 (1);

193 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

194 
	`°rˇt
 (
°rFûeName
, ".jpf");

195 i‡((
Â
 = 
	`f›í
 (
°rFûeName
, "w")Ë=
NULL
)

197 
	`Ârötf
 (
°dîr
, "Error opening file\n");

198 
	`exô
 (1);

204 
i
 = 0; i < 
TABLE_LENGTH
; i++)

206 
j
 = 0; j < 
ASSOC
; j++)

208 i‡(
jumpBuf„r
.
pc
[
i
][
j
] !0 && jumpBuf„r.
èbÀ
[i][j] !
NULL
)

210 
	`Ârötf
 (
Â
, "PC: 0x%Œx", 
jumpBuf„r
.
pc
[
i
][
j
]);

211 
jumpBuf„r
.
èbÀ
[
i
][
j
]->
	`¥öt_fûe
 (
Â
);

212 
	`Ârötf
 (
Â
, "\n");

217 
	`f˛o£
 (
Â
);

218 
	}
}

	@instManip.c

2 
	~<sys/ty≥s.h
>

3 
	~<uni°d.h
>

4 
	~<waô.h
>

5 
	~<î∫o.h
>

6 
	~<°dlib.h
>

8 
	~"ho°.h
"

9 
	~"machöe.h
"

10 
	~"ªsour˚.h
"

11 
	~"ˇche.h
"

12 
	~"c⁄ãxt.h
"

13 
	~"±ø˚.h
"

14 
	~"b¥ed.h
"

15 
	~"ªsour˚.h
"

16 
	~"sysˇŒ.h
"

17 
	~"ö°M™ù.h
"

19 
	#WORDSIZE
 8

	)

25 
	$GëMemAccWidth
(
md_›code
 
›
)

27 
›
) {

29 
LDBU
:

30 
STB
:

34 
LDWU
:

35 
STW
:

39 
LDL
:

40 
LDL_L
:

41 
STL
:

42 
STL_C
:

43 
LDF
:

44 
LDS
:

45 
STF
:

46 
STS
:

50 
LDQ
:

51 
LDQ_L
:

52 
LDQ_U
:

53 
STQ
:

54 
STQ_C
:

55 
STQ_U
:

56 
LDG
:

57 
LDT
:

58 
STG
:

59 
STT
:

64 
	`¥ötf
("F©Æ: GëMemAccWidth c™nŸ dó»wôh o∞: %d!\n", 
›
);

65 
	`∑nic
("GëMemAccWidth c™nŸ dó»wôh o∞: %d!\n", 
›
);

68 
	}
}

73 
boﬁ_t
 
	$isFPMemAcc
(
md_›code
 
›
)

75 
›
) {

76 
LDF
:

77 
LDG
:

78 
LDS
:

79 
LDT
:

80 
STF
:

81 
STG
:

82 
STS
:

83 
STT
:

84  
TRUE
;

86  
FALSE
;

88 
	}
}

94 
	$f‹m©D©aM2R
(
md_›code
 
›
, 
qw‹d_t
 
memD©a
, qw‹d_à*
ªgD©a
)

96 
›
) {

98 
LDBU
:

99 
LDWU
:

100 
LDQ
:

101 
LDQ_L
:

102 
LDQ_U
:

103 
LDT
:

104 
STB
:

105 
STW
:

106 
STQ
:

107 
STQ_C
:

108 
STQ_U
:

109 
STT
:

110 *
ªgD©a
 = 
memD©a
;

114 
LDL
:

115 
LDL_L
:

116 
STL
:

117 
STL_C
:

119 
sw‹d_t
 
ãmpD©a
 = (sw‹d_tË
memD©a
;

120 *
ªgD©a
 = (
qw‹d_t
Ë((
sqw‹d_t
Ë
ãmpD©a
);

125 
LDS
:

126 
STS
:

128 
sqw‹d_t
 
l⁄ghﬁd
, 
e1
, 
e2
;

129 
l⁄ghﬁd
 = (
w‹d_t
Ë
memD©a
;

131 
e1
 = 
l⁄ghﬁd
 & 0x40000000;

132 
e2
 = (
l⁄ghﬁd
 >> 23Ë& 
	`ULL
(0x7f);

133 i‡(
e1
) {

134 i‡(
e2
 =
	`ULL
(0x3f800000))

135 
e2
 = 
	`ULL
(0x7ff);

137 
e2
 |
	`ULL
(0x400);

140 i‡(
e2
 == 0)

141 
e2
 = 0;

143 
e2
 |
	`ULL
(0x380);

146 *
ªgD©a
 = (
qw‹d_t
Ë((
l⁄ghﬁd
 & 
	`ULL
(0x80000000)Ë<< 32 | 
e2
 << 52 | (longhold & ULL(0x7fffff)) << 29);

151 
LDF
:

152 
LDG
:

153 
STF
:

154 
STG
:

155 
	`¥ötf
("F©Æ: f‹m©D©aM2R c™nŸ dó»wôh o∞- LDFánd LDG: %d!\n", 
›
);

156 
	`∑nic
("f‹m©D©aM2R c™nŸ dó»wôh o∞- LDFánd LDG: %d!\n", 
›
);

157 *
ªgD©a
 = 
memD©a
;

162 
	`¥ötf
("F©Æ: f‹m©D©aM2R c™nŸ dó»wôh o∞: %d!\n", 
›
);

163 
	`∑nic
("f‹m©D©aM2R c™nŸ dó»wôh o∞: %d!\n", 
›
);

164 *
ªgD©a
 = 
memD©a
;

167 
	}
}

173 
	$f‹m©D©aR2M
(
md_›code
 
›
, 
qw‹d_t
 
ªgD©a
, qw‹d_à*
memD©a
)

175 
›
) {

177 
LDBU
:

178 
LDWU
:

179 
LDQ
:

180 
LDQ_L
:

181 
LDQ_U
:

182 
LDT
:

183 
STB
:

184 
STW
:

185 
STQ
:

186 
STQ_C
:

187 
STQ_U
:

188 
STT
:

189 *
memD©a
 = 
ªgD©a
;

193 
LDS
:

194 
STS
:

196 
sqw‹d_t
 
l⁄ghﬁd
;

197 
sw‹d_t
 
öthﬁd
;

199 
l⁄ghﬁd
 = 
ªgD©a
;

201 
öthﬁd
 = (((
l⁄ghﬁd
 >> 32Ë& 
	`ULL
(0xc0000000)) | ((longhold >> 29) & ULL(0x3fffffff)));

203 *
memD©a
 = (
qw‹d_t
Ë
öthﬁd
;

208 
LDL
:

209 
LDL_L
:

210 
STL
:

211 
STL_C
:

213 
w‹d_t
 
§c
;

214 
§c
 = (
w‹d_t
)(
ªgD©a
 & 
	`ULL
(0xffffffff));

215 *
memD©a
 = (
qw‹d_t
Ë
§c
;

221 
LDF
:

222 
LDG
:

223 
STF
:

224 
STG
:

225 
	`¥ötf
("F©Æ: f‹m©D©aR2M c™nŸ dó»wôh STFánd STG o∞: %d!\n", 
›
);

226 
	`∑nic
("f‹m©D©aR2M c™nŸ dó»wôh STFánd STG o∞: %d!\n", 
›
);

227 *
memD©a
 = 
ªgD©a
;

232 
	`¥ötf
("F©Æ: f‹m©D©aR2M c™nŸ dó»wôh o∞: %d!\n", 
›
);

233 
	`∑nic
("f‹m©D©aR2M c™nŸ dó»wôh o∞: %d!\n", 
›
);

234 *
memD©a
 = 
ªgD©a
;

237 
	}
}

242 
	$gëRegVÆue
(
md_›code
 
›
, 
c⁄ãxt
 *
cuºít
, 
ø
, 
qw‹d_t
 *
d©a
)

244 
›
) {

245 
LDBU
:

246 
STB
:

247 
LDWU
:

248 
STW
:

249 
LDL
:

250 
LDL_L
:

251 
STL
:

252 
STL_C
:

253 
LDQ
:

254 
LDQ_U
:

255 
LDQ_L
:

256 
STQ
:

257 
STQ_C
:

258 
STQ_U
:

259 if(
cuºít
->
•ec_mode
)

260 *
d©a
 = 
cuºít
->
•ec_ªgs_R
[
ø
];

262 *
d©a
 = 
cuºít
->
ªgs
.
ªgs_R
[
ø
];

265 
LDS
:

266 
STS
:

267 
LDT
:

268 
STT
:

269 if(
cuºít
->
•ec_mode
)

270 *
d©a
 = 
cuºít
->
•ec_ªgs_F
.
q
[
ø
];

272 *
d©a
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ø
];

275 
LDG
:

276 
STG
:

277 
LDF
:

278 
STF
:

279 
	`¥ötf
("F©Æ: gëRegVÆuêˇ¬Ÿ dó»wôh o∞: %d!\n", 
›
);

280 
	`∑nic
("gëRegVÆuêˇ¬Ÿ dó»wôh o∞: %d!\n", 
›
);

285 
	`¥ötf
("F©Æ: gëRegVÆuêˇ¬Ÿ dó»wôh o∞: %d!\n", 
›
);

286 
	`∑nic
("gëRegVÆuêˇ¬Ÿ dó»wôh o∞: %d!\n", 
›
);

289 
	}
}

	@instManip.h

1 #i‚de‡
__INSTMANIP_H__


2 
	#__INSTMANIP_H__


	)

3 
	~"ho°.h
"

5 
GëMemAccWidth
(
md_›code
 
›
);

6 
boﬁ_t
 
isFPMemAcc
(
md_›code
 
›
);

7 
f‹m©D©aM2R
(
md_›code
 
›
, 
qw‹d_t
 
memD©a
, qw‹d_à*
ªgD©a
);

8 
f‹m©D©aR2M
(
md_›code
 
›
, 
qw‹d_t
 
ªgD©a
, qw‹d_à*
memD©a
);

9 
gëRegVÆue
(
md_›code
 
›
, 
c⁄ãxt
 *
cuºít
, 
ø
, 
qw‹d_t
 *
d©a
);

	@interconnect.c

2 
	~"hódîs.h
"

3 
dump_rouã_èbÀ
();

108 
	gma°î_qøm_ac˚ss_˛
[
MAX_IC_INDEX
][
CLUSTERS
];

109 
	gma°î_lök_rx_ac˚ss_˛
[
MAX_IC_INDEX
][
CLUSTERS
];

110 
	gma°î_lök_tx_ac˚ss_˛
[
MAX_IC_INDEX
][
CLUSTERS
];

111 #ifde‡
TRACK_COMM_USE_TYPES


112 
	gma°î_lök_tx_u£_ty≥_ac˚ss
[
MAX_IC_INDEX
][
LENGTHOF_comm_u£_ty≥_íum
];

113 * 
	gcomm_u£_ty≥_íum_«mes
[] = {"sendregister", "l2comm", "flood", "bare_token", "data_token", "other"};

121 #ifde‡
CONFIG_BASED_ICS


122 
	gma°î_å™svî£_lök_èbÀ
[
MAX_IC_INDEX
][
CLUSTERS
];

123 
lök_öfo_t
 
	glök_öfo
[
MAX_IC_INDEX
];

124 
	gtŸÆ_n⁄c⁄ge°ed_comm_dñay
[
CLUSTERS
][CLUSTERS];

127 
	gac_èbÀ
[16] = {-1,11,10,9, -1,15,14,13, -1,3,2,1, -1,7,6,5};

128 #i‡
CLUSTERS
 != 16

129 #w¨nög 
O±iˇl
 
AC
 
löks
 
wûl
 
nŸ
 
be
 
suµ‹ãd
 
ö
 
this
 
buûd
 
beˇu£
 
the
 
numbî
 
of
 
˛u°îs
 != 16

134 
	ggrid_èbÀ_16
[4][16] = { {1,14,3,12, 5,10,7,8, 9,-1,11,-1, 13,-1,15,-1},

139 #i‡
CLUSTERS
 != 16

140 #w¨nög 
EÀ˘riˇl
 
grid
-
¨ønged
 
löks
 
wûl
 
nŸ
 
be
 
suµ‹ãd
 
ö
 
this
 
buûd
 
beˇu£
 
the
 
numbî
 
of
 
˛u°îs
 != 16

144 
	gma°î_lök_width
[
MAX_IC_INDEX
];

145 
	gma°î_h›_time
[
MAX_IC_INDEX
];

146 #i‚de‡
CONFIG_BASED_ICS


147 
	gªvî£_lök
[
MAX_IC_INDEX
];

150 #ifde‡
THRD_WAY_CACHE


151 
n_ˇche_°¨t_thrd
[];

152 
n_ˇche_limô_thrd
[];

157 #ifde‡
COMM_LINK_PWR


158 
DECLARE_POWER_STATS
(
qøm
);

159 
DECLARE_POWER_STATS
(
lök_rx
);

160 
DECLARE_POWER_STATS
(
lök_tx
);

163 
	$˛ór_öãrc⁄√˘_ac˚ss_°©s
()

165 
lök_num
,
i
;

166 #ifde‡
CONFIG_BASED_ICS


167 
lök_num
=0;lök_num<
lök_deföôi⁄s_¨gc
;link_num++)

169 
lök_num
=0;lök_num<
MAX_IC_INDEX
;link_num++)

172 
i
=0;i<
CLUSTERS
;i++)

174 
ma°î_qøm_ac˚ss_˛
[
lök_num
][
i
] = 0;

175 
ma°î_lök_tx_ac˚ss_˛
[
lök_num
][
i
] = 0;

176 
ma°î_lök_rx_ac˚ss_˛
[
lök_num
][
i
] = 0;

178 #ifde‡
TRACK_COMM_USE_TYPES


179 
i
=0; i < 
LENGTHOF_comm_u£_ty≥_íum
; i++)

181 
ma°î_lök_tx_u£_ty≥_ac˚ss
[
lök_num
][
i
] = 0;

185 
	}
}

186 
	$tŸÆ_öãrc⁄√˘_powî_°©s
()

188 
l
,
i
;

189 
l
=0;l<
MAX_IC_INDEX
;l++)

191 
	#RESET_POWER_TOTALS
(
èrg
Ëdÿ{\

	)

192 
ma°î_
##
èrg
##
_powî_cc1
[
l
][
CLUSTER_TOTAL
] = 0; \

193 
ma°î_
##
èrg
##
_powî_cc2
[
l
][
CLUSTER_TOTAL
] = 0; \

194 
ma°î_
##
èrg
##
_powî_cc3
[
l
][
CLUSTER_TOTAL
] = 0; } 0)

196 
	#ADD_POWER_TOTAL
(
èrg
Ëdÿ{\

	)

197 
ma°î_
##
èrg
##
_powî_cc1
[
l
][
CLUSTER_TOTAL
] +ma°î_##èrg##_powî_cc1[l][
i
]; \

198 
ma°î_
##
èrg
##
_powî_cc2
[
l
][
CLUSTER_TOTAL
] +ma°î_##èrg##_powî_cc2[l][
i
]; \

199 
ma°î_
##
èrg
##
_powî_cc3
[
l
][
CLUSTER_TOTAL
] +ma°î_##èrg##_powî_cc3[l][
i
]; } 0)

200 
	`RESET_POWER_TOTALS
(
qøm
);

201 
	`RESET_POWER_TOTALS
(
lök_rx
);

202 
	`RESET_POWER_TOTALS
(
lök_tx
);

204 
i
=0;i<
CLUSTERS
;i++)

206 
	`ADD_POWER_TOTAL
(
qøm
);

207 
	`ADD_POWER_TOTAL
(
lök_tx
);

208 
	`ADD_POWER_TOTAL
(
lök_rx
);

211 #unde‡
RESET_POWER_TOTAL


212 #unde‡
ADD_POWER_TOTAL


213 
	}
}

215 #ifde‡
CONFIG_BASED_ICS


221 
	$öô_lök_des¸_èbÀs
()

223 
i
,
‰om
,
j
;

225 
i
=0;i<
lök_deföôi⁄s_¨gc
;i++)

227 * 
lök_des¸
 = 
lök_deföôi⁄s
[
i
];

228 * 
∑r£±r
;

229 * 
lök_ty≥_«me
;

230 * 
lök_ty≥_physics
;

231 
lök_öfo
[
i
].
l⁄g«me
 = 
	`°πok_r
(
lök_des¸
,":",&
∑r£±r
);

232 
lök_ty≥_«me
 = 
	`°πok_r
(
NULL
,":",&
∑r£±r
);

233 
ma°î_lök_width
[
i
] = 
	`°πﬁ
(
	`°πok_r
(
NULL
,":",&
∑r£±r
),NULL,0);

234 
ma°î_h›_time
[
i
] = 
	`°πﬁ
(
	`°πok_r
(
NULL
,":",&
∑r£±r
),NULL,0);

235 
lök_ty≥_physics
 = 
	`°πok_r
(
NULL
,":",&
∑r£±r
);

237 
lök_öfo
[
i
].
ty≥
 = 
lök_ty≥_«me
;

239 i‡(!
	`my°ricmp
(
lök_ty≥_physics
,"optical"))

240 
lök_öfo
[
i
].
physics
=
›tiˇl
;

241 i‡(!
	`my°ricmp
(
lök_ty≥_physics
,"electrical"))

242 
lök_öfo
[
i
].
physics
=
ñe˘riˇl
;

244 
	`Áèl
("ThêlökÖhysic†mu° bê'›tiˇl' o∏'ñe˘riˇl', buàyou gavê'%s'.",
lök_ty≥_physics
);

246 i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"custom")) {

247 
found
 = 0;

248 
j
 = 0; j < 
lök_cu°om_de°ö©i⁄s_¨gc
; j++)

250 * 
lök_ty≥_«me_cu°om
;

251 * 
lök_de°ö©i⁄s
;

252 
lök_ty≥_«me_cu°om
 = 
	`°πok_r
(
lök_cu°om_de°ö©i⁄s
[
j
],":",&
∑r£±r
);

253 
lök_de°ö©i⁄s
 = 
	`°πok_r
(
NULL
,":",&
∑r£±r
);

254 i‡(!
	`my°ricmp
(
lök_ty≥_«me_cu°om
,
lök_öfo
[
i
].
l⁄g«me
)){

256 ++
found
;

258 
lök_öfo
[
i
].
ty≥
 =Üök_öfo[i].
l⁄g«me
;

260 
ma°î_å™svî£_lök_èbÀ
[
i
][0]=
	`°πﬁ
(
	`°πok_r
(
lök_de°ö©i⁄s
,",",&
∑r£±r
),
NULL
,0);

261 
‰om
=1;‰om<
CLUSTERS
;from++) {

262 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
]=
	`°πﬁ
(
	`°πok_r
(
NULL
,",",&
∑r£±r
),NULL,0);

267 *(
lök_de°ö©i⁄s
 - 1) = ':';

269 i‡(
found
 != 1) {

270 
	`Áèl
("Found %d deföôi⁄†f‹ cu°omÜök %s",
found
,
lök_öfo
[
i
].
l⁄g«me
);

272 } 
‰om
=0;‰om<
CLUSTERS
;from++)

275 
	#CHECK_GRID_VALID
 \

	)

276 i‡((
grid_èbÀ_16
)/(grid_èbÀ_16[0][0])/4 !
CLUSTERS
) \

277 
	`Áèl
("öô_lök_des¸_èbÀs: You∏grid_èbÀ i†f‹ %d clu°îs, buàyouáª usög %d clu°îs.",(
grid_èbÀ_16
)/(grid_èbÀ_16[0][0])/4,
CLUSTERS
)

280 i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"ER_grid")) {

281 
CHECK_GRID_VALID
;

282 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
grid_èbÀ_16
[0][from];

283 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"EL_grid")) {

284 
CHECK_GRID_VALID
;

285 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
grid_èbÀ_16
[1][from];

286 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"EU_grid")) {

287 
CHECK_GRID_VALID
;

288 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
grid_èbÀ_16
[2][from];

289 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"ED_grid")) {

290 
CHECK_GRID_VALID
;

291 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
grid_èbÀ_16
[3][from];

294 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"ER")) {

295 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
	`CL_ADD
(from,1);

296 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"EL")) {

297 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
	`CL_SUB
(from,1);

304 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"AC")) {

305 i‡((
ac_èbÀ
)/◊c_èbÀ[0]Ë!
CLUSTERS
)

306 
	`Áèl
("öô_lök_des¸_èbÀs: You∏ac_èbÀ i†f‹ %d clu°îs, buàyouáª usög %d clu°îs.",(
ac_èbÀ
)/◊c_èbÀ[0]),
CLUSTERS
);

307 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
ac_èbÀ
[from];

308 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"OT")) {

309 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = 
	`CL_ADD
(‰om,(
CLUSTERS
/2));

310 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"OL")) {

311 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = (‰om % 4Ë=0 ? 
	`CL_SUB
(‰om,(
CLUSTERS
/4)) : -1;

312 } i‡(!
	`my°ricmp
(
lök_ty≥_«me
,"OR")) {

313 
ma°î_å™svî£_lök_èbÀ
[
i
][
‰om
] = (‰om % 4Ë=0 ? 
	`CL_ADD
(‰om,(
CLUSTERS
/4)) : -1;

320 
	`Áèl
("linkÅype '%s' ('%s') isÇot known by init_link_descr_tables().",

321 
lök_ty≥_«me
,

322 
lök_öfo
[
i
].
l⁄g«me
);

325 
	`Ârötf
(
°dîr
,"AddedÜink %s: %s,Åype %s, width %d,ánd hopÅime %d.\n",

326 
lök_öfo
[
i
].
l⁄g«me
,
lök_ty≥_physics
,lök_öfo[i].
ty≥
,
ma°î_lök_width
[i],
ma°î_h›_time
[i]);

328 
	}
}

330 
	$å™vî£_lök
(
lök_ty≥
, 
‰om
)

332  
ma°î_å™svî£_lök_èbÀ
[
lök_ty≥
][
‰om
];

333 
	}
}

335 
	$öô_lök_des¸_èbÀs
(Ë{
	}
}

337 
	$å™vî£_lök
(
lök_ty≥
, 
‰om
)

340 
to
;

343 if(
›tiˇl_ty≥_ch¨
=='G')

344 
to
 = 
grid_èbÀ_16
[
lök_ty≥
][
‰om
];

346 
lök_ty≥
)

349 
	`Áèl
("badÜökÅy≥ %d",
lök_ty≥
);

352 
OR_INDEX
:

353 
to
 = 
	`CL_ADD
(
‰om
,4);

356 
OL_INDEX
:

357 
to
 = 
	`CL_SUB
(
‰om
,4);

360 
ER_INDEX
:

361 
to
 = 
	`CL_ADD
(
‰om
,1);

364 
EL_INDEX
:

365 
to
 = 
	`CL_SUB
(
‰om
,1);

368 
AC_INDEX
:

369 
to
 = 
ac_èbÀ
[
‰om
];

372 
OT_INDEX
:

373 
to
 = 
	`CL_ADD
(
‰om
,(
CLUSTERS
/2));

376 
EU_INDEX
:

377 
to
 = 
‰om
 + 4;

380 
ED_INDEX
:

381 
to
 = 
‰om
 - 4;

387 if(
to
 > 
CLUSTERS
)

388 
	`Áèl
("tÿ(%dËi†ovî (‰om %dË÷ök %d)",
to
,
‰om
,
lök_ty≥
);

389  
to
;

390 
	}
}

393 #i‚de‡
CONFIG_BASED_ICS


394 *
	gIC_ödex2°rög
[
MAX_IC_INDEX
] = {

406 
	gnh_èbÀ_Êowî_o2_e1
[4][16] =

408 {{0,
ER
,ER,
OR
|ER, OR,OR,OR,OR|
OL
, OR|OL,OR|OL,OL,OL, OL,OL|
EL
,EL,EL},

409 {0,
ER
,ER,
EL
|ER, EL|ER,EL|ER,EL|ER,EL|ER, EL|ER,EL,EL,EL, EL,EL,EL,EL},

410 {0,
ER
,ER,ER, ER,ER,ER,ER, ER|
EL
,EL,EL,EL, EL,EL,EL,EL},

411 {0,
ER
,ER,ER, ER,ER,ER,ER, 
EL
|ER,ER|EL,ER|EL,ER|EL, ER|EL,ER|EL,EL,EL}};

413 
	gnh_èbÀ_mesh_o2_e1
[4][16] =

415 {{0,
ER
,ER,
OR
|ER, OR,
EL
|OR,EL|OR,EL|
OL
|OR, OL|OR,OL|OR|ER,OL|ER,OL|ER, OL,OL|EL,EL,EL},

416 {0,
ER
,ER,ER, ER|ER,
EL
|ER,EL|ER|
AC
,EL|ER|AC, ER|AC,ER|AC,AC,EL|AC, EL|AC,EL,EL,EL},

417 {0,
ER
,ER,ER, ER,ER|
AC
,ER|AC,ER|AC, AC,AC|
EL
,AC|EL,AC|EL, EL,EL,EL,EL},

418 {0,
ER
,ER,ER, ER|
AC
,ER|AC,AC,
EL
|AC, EL|AC,EL|ER|AC,EL|ER|AC,EL|ER, ER|EL,EL,EL,EL}};

420 
	gnh_èbÀ_ã¡_o2_e1
[4][16] =

422 {{0,
ER
,ER,ER, ER,ER|
OT
,OT,OT, OT,OT,OT,OT|
EL
, EL,EL,EL,EL},

423 {0,
ER
,ER,ER, ER,ER|
OT
,OT,OT, OT,OT,OT,OT|
EL
, EL,EL,EL,EL},

424 {0,
ER
,ER,ER, ER,ER|
OT
,OT,OT, OT,OT,OT,OT|
EL
, EL,EL,EL,EL},

425 {0,
ER
,ER,ER, ER,ER|
OT
,OT,OT, OT,OT,OT,OT|
EL
, EL,EL,EL,EL}};

427 
	#O1_E1
 0

	)

428 
	#O2_E1
 1

	)

429 
	#O3_E1
 2

	)

431 #i‚de‡
CONFIG_BASED_ICS


432 
	ggrid_nh_èbÀ_ma°î_n‹mÆ
[16] = {
ER_BM
|
EU_BM
, ER_BM|
EL_BM
|EU_BM, ER_BM|EL_BM|EU_BM, EL_BM|EU_BM,

433 
ER_BM
|
EU_BM
|
ED_BM
, ER_BM|
EL_BM
|EU_BM|ED_BM, ER_BM|EL_BM|EU_BM|ED_BM, EL_BM|EU_BM|ED_BM,

434 
ER_BM
|
EU_BM
|
ED_BM
, ER_BM|
EL_BM
|EU_BM|ED_BM, ER_BM|EL_BM|EU_BM|ED_BM, EL_BM|EU_BM|ED_BM,

435 
ER_BM
|
ED_BM
, ER_BM|
EL_BM
|ED_BM, ER_BM|EL_BM|ED_BM, EL_BM|ED_BM

437 
	ggrid_nh_èbÀ_ma°î
[16] = {
ER_BM
|
EU_BM
, ER_BM|
EL_BM
|EU_BM, 
ED_BM
|ER_BM|EU_BM, EL_BM|EU_BM|ED_BM|ER_BM,

438 
ER_BM
|
EU_BM
|
ED_BM
, ER_BM|
EL_BM
|EU_BM|ED_BM, ER_BM|ED_BM, EL_BM|ED_BM|ER_BM,

439 
ER_BM
|
ED_BM
|
EL_BM
, EL_BM|ED_BM, ER_BM|EL_BM|
EU_BM
|ED_BM, EL_BM|EU_BM|ED_BM,

440 
ER_BM
|
EU_BM
|
ED_BM
|
EL_BM
, EL_BM|EU_BM|ED_BM, ER_BM|EL_BM|EU_BM, EL_BM|EU_BM,

442 
	gduÆ_øû_nh_èbÀ_ma°î
[16] = {
ER_BM
|
OT_BM
, ER_BM|
EL_BM
|
AC_BM
, ER_BM|EL_BM, EL_BM|AC_BM|ER_BM,

443 
ER_BM
|
EL_BM
, ER_BM|EL_BM|
AC_BM
, ER_BM|EL_BM, 
OT_BM
|ER_BM,

444 
ER_BM
|
ED_BM
|
EL_BM
, EL_BM|ED_BM, ER_BM|EL_BM|
EU_BM
|ED_BM, EL_BM|EU_BM|ED_BM,

445 
ER_BM
|
EU_BM
|
ED_BM
|
EL_BM
, EL_BM|EU_BM|ED_BM, ER_BM|EL_BM|EU_BM, EL_BM|EU_BM,

448 
	gÊowî_nh_èbÀ_ma°î
[3][4][16] =

452 {{
ER_BM
|
EL_BM
|
OR_BM
|
OL_BM
,ER_BM,ER_BM,OR_BM|ER_BM, OR_BM,OR_BM,OR_BM,OR_BM|OL_BM, OR_BM|OL_BM,OR_BM|OL_BM,OL_BM,OL_BM, OL_BM,OL_BM|EL_BM,EL_BM,EL_BM},

453 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,EL_BM|ER_BM, EL_BM|ER_BM,EL_BM|ER_BM,EL_BM|ER_BM,EL_BM|ER_BM, EL_BM|ER_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

454 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

455 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, EL_BM|ER_BM,ER_BM|EL_BM,ER_BM|EL_BM,ER_BM|EL_BM, ER_BM|EL_BM,ER_BM|EL_BM,EL_BM,EL_BM}},

459 
	gã¡_nh_èbÀ_ma°î
[3][4][16] =

463 {{
ER_BM
|
EL_BM
|
OT_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM|OT_BM,OT_BM|EL_BM,OT_BM|EL_BM, OT_BM,OT_BM|ER_BM,OT_BM|ER_BM,OT_BM|EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

464 {
ER_BM
|
EL_BM
|
OT_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM|OT_BM,OT_BM,OT_BM, OT_BM,OT_BM,OT_BM,OT_BM|EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

465 {
ER_BM
|
EL_BM
|
OT_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM|OT_BM,OT_BM,OT_BM, OT_BM,OT_BM,OT_BM,OT_BM|EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

466 {
ER_BM
|
EL_BM
|
OT_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM|OT_BM,OT_BM,OT_BM, OT_BM,OT_BM,OT_BM,OT_BM|EL_BM, EL_BM,EL_BM,EL_BM,EL_BM}},

470 
	gmesh_nh_èbÀ_ma°î
[3][4][16] =

474 {{
ER_BM
|
EL_BM
|
OR_BM
|
OL_BM
,ER_BM,ER_BM,OR_BM|ER_BM, OR_BM,EL_BM|OR_BM,EL_BM|OR_BM,EL_BM|OL_BM|OR_BM, OL_BM|OR_BM,OL_BM|OR_BM|ER_BM,OL_BM|ER_BM,OL_BM|ER_BM, OL_BM,OL_BM|EL_BM,EL_BM,EL_BM},

475 {
ER_BM
|
EL_BM
|
AC_BM
,ER_BM,ER_BM,ER_BM, ER_BM|ER_BM,EL_BM|ER_BM,EL_BM|ER_BM|AC_BM,EL_BM|ER_BM|AC_BM, ER_BM|AC_BM,ER_BM|AC_BM,AC_BM,EL_BM|AC_BM, EL_BM|AC_BM,EL_BM,EL_BM,EL_BM},

476 {
ER_BM
|
EL_BM
|
AC_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM|AC_BM,ER_BM|AC_BM,ER_BM|AC_BM, AC_BM,AC_BM|EL_BM,AC_BM|EL_BM,AC_BM|EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

477 {
ER_BM
|
EL_BM
|
AC_BM
,ER_BM,ER_BM,ER_BM, ER_BM|AC_BM,ER_BM|AC_BM,AC_BM,EL_BM|AC_BM, EL_BM|AC_BM,EL_BM|ER_BM|AC_BM,EL_BM|ER_BM|AC_BM,EL_BM|ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM}},

484 
	gnh_èbÀ
[16][16] =

486 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

488 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

489 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

490 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

491 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

492 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

493 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

494 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

495 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

496 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

497 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

498 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

499 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

500 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

501 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM},

502 {
ER_BM
|
EL_BM
,ER_BM,ER_BM,ER_BM, ER_BM,ER_BM,ER_BM,ER_BM, ER_BM|EL_BM,EL_BM,EL_BM,EL_BM, EL_BM,EL_BM,EL_BM,EL_BM}};

504 
	gnh_èbÀ
[
CLUSTERS
][CLUSTERS];

506 
	$öô_nh_èbÀ
() {

507 
i
,
l
;

509 i‡(
lök_deföôi⁄s_¨gc
 > ((
nh_èbÀ
[0][0])*8))

510 
	`Áèl
("Thîê¨êm‹êlökÅy≥†th™Åhîê¨êbô†öÅhênh_èbÀ bôm≠ (%d > %d)!",
lök_deföôi⁄s_¨gc
,(
nh_èbÀ
[0][0])*8);

512 
i
=0;i<
CLUSTERS
;i++)

514 
nh_èbÀ
[
i
][0]=0;

515 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

517 i‡(
ma°î_å™svî£_lök_èbÀ
[
l
][
i
] >= 0)

518 
nh_èbÀ
[
i
][0] |
l_BM
;

521 
	}
}

525 
	$›tiˇl_öô
()

527 
i
,
j
,
mm
;

529 
›tiˇl_lök_width_di°
 = (
cou¡î_t
 *)
	`mÆloc
((cou¡î_t)*
›tiˇl_lök_width
);

530 
i
=0;i<
›tiˇl_lök_width
;i++)

531 
›tiˇl_lök_width_di°
[
i
] = 0;

533 
i
=0;i<
CLUSTERS
;i++) {

534 
›tiˇl_lök
[
i
] = 
	`mÆloc
((Ë* 
TIMEWINDOW
);

535 
›t_ªg
[
i
] = 
	`mÆloc
((*Ë* 
TIMEWINDOW
);

536 
mm
=0;mm<
TIMEWINDOW
;mm++) {

537 
›tiˇl_lök
[
i
][
mm
]=0;

538 
›t_ªg
[
i
][
mm
] = 
	`mÆloc
((Ë* 
›tiˇl_lök_width
);

539 
j
=0;j<
›tiˇl_lök_width
;j++)

540 
›t_ªg
[
i
][
mm
][
j
]=0;

543 
	}
}

545 *
	gma°î_lök
[
MAX_IC_INDEX
][
CLUSTERS
];

546 **
	gma°î_ªg
[
MAX_IC_INDEX
][
CLUSTERS
];

547 
cou¡î_t
 *
	gma°î_lök_width_di°
[
MAX_IC_INDEX
];

548 #ifde‡
TRACK_COMM_USE_TYPES


549 
comm_u£_ty≥_íum
 *
	gma°î_lök_u£_ty≥
[
MAX_IC_INDEX
][
CLUSTERS
];

553 #ifde‡
NEW_INTERCONNECT


554 
	$öãrc⁄√˘_öô
()

556 
i
,
j
,
k
,
mm
;

557 
l_width
;

558 
k
=0;k<
MAX_IC_INDEX
;k++)

560 
l_width
 = 
ma°î_lök_width
[
k
];

561 #ifde‡
INST_TRANS_RATE


562 
ma°î_lök_width_di°
[
k
] = 
	`mÆloc
((
cou¡î_t
Ë* 
l_width
);

563 
i
=0;i<
l_width
;i++)

564 
ma°î_lök_width_di°
[
k
][
i
] = 0;

567 #ifde‡
TRACE_REG


568 
i
=0;i<
CLUSTERS
;i++)

570 
ma°î_lök
[
k
][
i
] = 
	`mÆloc
((Ë* 
TIMEWINDOW
);

571 
ma°î_ªg
[
k
][
i
] = 
	`mÆloc
((*Ë* 
TIMEWINDOW
);

572 #ifde‡
TRACK_COMM_USE_TYPES


573 
ma°î_lök_u£_ty≥
[
k
][
i
] = 
	`mÆloc
((
comm_u£_ty≥_íum
Ë* 
TIMEWINDOW
);

576 
mm
=0;mm<
TIMEWINDOW
;mm++)

578 
ma°î_lök
[
k
][
i
][
mm
] = 0;

579 
ma°î_ªg
[
k
][
i
][
mm
] = 
	`mÆloc
((Ë* 
l_width
);

580 
j
=0;j<
l_width
;j++)

581 
ma°î_ªg
[
k
][
i
][
mm
][
j
] = 0;

587 
	}
}

588 
	$rög_‰ì
()

590 
i
,
j
,
lök_num
;

591 #ifde‡
CONFIG_BASED_ICS


592 
lök_num
 = 0;Üök_num < 
lök_deföôi⁄s_¨gc
;Üink_num++)

594 
lök_num
 = 0;Üök_num < 
MAX_IC_INDEX
;Üink_num++)

597 
i
=0;i<
CLUSTERS
;i++)

599 if(
ma°î_lök
[
lök_num
][
i
][(()
sim_cy˛e
%
TIMEWINDOW
)]) {

600 
ma°î_qøm_ac˚ss_˛
[
lök_num
][
i
]++;

601 
ma°î_lök_tx_ac˚ss_˛
[
lök_num
][
i
]++;

608 
ma°î_lök_rx_ac˚ss_˛
[
lök_num
][
	`å™vî£_lök
÷ök_num,
i
)]++;

610 #ifde‡
TRACK_COMM_USE_TYPES


611 
ma°î_lök_tx_u£_ty≥_ac˚ss
[
lök_num
][ 
ma°î_lök_u£_ty≥
[lök_num][
i
][(()
sim_cy˛e
%
TIMEWINDOW
)] ]++;

614 
ma°î_lök
[
lök_num
][
i
][(()(
sim_cy˛e
%
TIMEWINDOW
))]=0;

616 
j
=0;j<
ma°î_lök_width
[
lök_num
];j++)

617 
ma°î_ªg
[
lök_num
][
i
][(()(
sim_cy˛e
%
TIMEWINDOW
))][
j
]=0;

621 
	}
}

622 
	$¨bôøry_routög_èbÀ_öô
()

624 
i
,
‰om
, 
num_¨rived
,
l
;

625 
to
, 
rouã
, 
dñay
;

626 
cou¡î_t
 
now
;

627 
cou¡î_t
 
°_a
[
CLUSTERS
];

628 
°_how
[
CLUSTERS
];

630 #ifde‡
CONFIG_BASED_ICS


631 i‡(!
lök_deföôi⁄s_¨gc
)

632 
	`Áèl
("arbitrary_routing_table_init: You didÇot specifyány communicationÜinksátáll, but IÇeedátÜeast one.");

634 
	`öô_nh_èbÀ
();

638 #ifde‡ 
IGNORE_MEM_COMM_LATENCY


641 if(
uni_œt_comm
)

643 if(
two_œt_comm
)

653 
‰om
=0;‰om<
CLUSTERS
;from++)

655 
i
=0;i<
CLUSTERS
;i++)

657 
°_a
[
i
] = 0;

658 
°_how
[
i
] = 0;

660 
num_¨rived
 = 0;

661 
now
 = 1;

662 
°_a
[
‰om
] = 
now
;

663 
rouã
 = 
nh_èbÀ
[
‰om
][0];

664 #ifde‡
THRD_WAY_CACHE


671 #ifde‡
CONFIG_BASED_ICS


673 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

676 i‡(
rouã
&
l_BM
)

678 
to
 = 
	`å™vî£_lök
(
l
,
‰om
);

679 
dñay
 = 
ma°î_h›_time
[
l
];

680 if(
dñay
+
now
 =
°_a
[
to
])

681 
°_how
[
to
] |
l_BM
;

682 if(((
dñay
+
now
Ë< 
°_a
[
to
]) || (st_a[to] == 0))

684 
°_a
[
to
] = 
dñay
 + 
now
; \

685 
°_how
[
to
] = 
l_BM
; \

693 
	#FLOOD_INIT
(
LINK_POS
Ë\

	)

695 i‡(
rouã
&
LINK_POS
##
_BM
) \

697 
to
 = 
	`å™vî£_lök
(
LINK_POS
##
_INDEX
,
‰om
); \

698 
dñay
 = 
ma°î_h›_time
[
LINK_POS
##
_INDEX
]; \

699 if(
dñay
+
now
 =
°_a
[
to
]) \

700 
°_how
[
to
] |
LINK_POS
##
_BM
; \

701 if(((
dñay
+
now
Ë< 
°_a
[
to
]) || (st_a[to] == 0)) \

703 
°_a
[
to
] = 
dñay
 + 
now
; \

704 
°_how
[
to
] = 
LINK_POS
##
_BM
; \

709 
	`FLOOD_INIT
(
OL
);

710 
	`FLOOD_INIT
(
OR
);

711 
	`FLOOD_INIT
(
EL
);

712 
	`FLOOD_INIT
(
ER
);

713 
	`FLOOD_INIT
(
AC
);

714 
	`FLOOD_INIT
(
OT
);

715 
	`FLOOD_INIT
(
EU
);

716 
	`FLOOD_INIT
(
ED
);

719 
num_¨rived
 < 
CLUSTERS
)

721 
i
=0;i<
CLUSTERS
;i++)

723 if(
°_a
[
i
] =
now
)

725 
num_¨rived
++;

728 #ifde‡
CONFIG_BASED_ICS


729 
tŸÆ_n⁄c⁄ge°ed_comm_dñay
[
‰om
][
i
]=
now
-1;

732 if(
‰om
==
i
)

739 
nh_èbÀ
[
‰om
][
	`CL_SUB
(
i
,‰om)] = 
°_how
[i];

742 
rouã
 = 
nh_èbÀ
[
i
][0];

743 #ifde‡
CONFIG_BASED_ICS


744 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

747 i‡(
rouã
&
l_BM
) \

749 
to
 = 
	`å™vî£_lök
(
l
,
i
);

750 
dñay
 = 
ma°î_h›_time
[
l
];

751 if(
dñay
+
now
 =
°_a
[
to
])

752 
°_how
[
to
] |°_how[
i
];

753 if(((
dñay
+
now
Ë< 
°_a
[
to
]) || (st_a[to] == 0))

755 
°_a
[
to
] = 
dñay
 + 
now
;

756 
°_how
[
to
] = st_how[
i
];

762 
	#FLOOD_REC
(
LINK_POS
Ë\

	)

764 i‡(
rouã
&
LINK_POS
##
_BM
) \

766 
to
 = 
	`å™vî£_lök
(
LINK_POS
##
_INDEX
,
i
); \

767 
dñay
 = 
ma°î_h›_time
[
LINK_POS
##
_INDEX
]; \

768 if(
dñay
+
now
 =
°_a
[
to
]) \

769 
°_how
[
to
] |°_how[
i
]; \

770 if(((
dñay
+
now
Ë< 
°_a
[
to
]) || (st_a[to] == 0)) \

772 
°_a
[
to
] = 
dñay
 + 
now
; \

773 
°_how
[
to
] = st_how[
i
]; \

778 
	`FLOOD_REC
(
OL
);

779 
	`FLOOD_REC
(
OR
);

780 
	`FLOOD_REC
(
EL
);

781 
	`FLOOD_REC
(
ER
);

782 
	`FLOOD_REC
(
AC
);

783 
	`FLOOD_REC
(
OT
);

784 
	`FLOOD_REC
(
EU
);

785 
	`FLOOD_REC
(
ED
);

789 
now
++;

792 
	}
}

794 #i‚de‡
CONFIG_BASED_ICS


796 
	$öô_øû_routög_èbÀ
()

798 
rouã
,
‰om
,
to
, 
‰omr
, 
‰omc
, 
t‹
, 
toc
,
to_s
;

799 
‰om
 = 0; from<
CLUSTERS
; from++)

801 
‰omr
 = 
‰om
/(
CLUSTERS
/2);

802 
‰omc
 = 
‰om
%(
CLUSTERS
/2);

804 
to
=0;Åo<
CLUSTERS
;Åo++)

806 
to_s
 = 
	`CL_SUB
(
to
,
‰om
);

808 
rouã
 = 0;

810 
t‹
 = 
to
/(
CLUSTERS
/2);

811 
toc
 = 
to
%(
CLUSTERS
/2);

813 if(
‰omr
 > 
t‹
)

814 
rouã
|=
OT_BM
;

815 if(
‰omr
 < 
t‹
)

816 
rouã
|=
OT_BM
;

818 if(
‰omc
 > 
toc
)

819 
rouã
|=
EL_BM
;

820 if(
‰omc
 < 
toc
)

821 
rouã
|=
ER_BM
;

823 
nh_èbÀ
[
‰om
][
to_s
] = 
rouã
;

826 
nh_èbÀ
[
‰om
][0] = 
OT_BM
;

828 if(
‰omc
 != 0)

829 
nh_èbÀ
[
‰om
][0] |
EL_BM
;

830 if(
‰omc
 !((
CLUSTERS
/2)-1))

831 
nh_èbÀ
[
‰om
][0] |
ER_BM
;

833 
	}
}

836 
	$öô_grid_routög_èbÀ
()

838 
rouã
,
‰om
,
to
, 
‰omr
, 
‰omc
, 
t‹
, 
toc
,
to_s
;

839 
‰om
 = 0; from<
CLUSTERS
; from++)

841 
‰omr
 = 
‰om
/
GRIDCOLS
;

842 
‰omc
 = 
‰om
%
GRIDROWS
;

844 
to
=0;Åo<
CLUSTERS
;Åo++)

846 
to_s
 = 
	`CL_SUB
(
to
,
‰om
);

848 
rouã
 = 0;

850 
t‹
 = 
to
/
GRIDCOLS
;

851 
toc
 = 
to
%
GRIDROWS
;

853 if(
‰omr
 > 
t‹
)

854 
rouã
|=
ED_BM
;

855 if(
‰omr
 < 
t‹
)

856 
rouã
|=
EU_BM
;

858 if(
‰omc
 > 
toc
)

859 
rouã
|=
EL_BM
;

860 if(
‰omc
 < 
toc
)

861 
rouã
|=
ER_BM
;

863 
nh_èbÀ
[
‰om
][
to_s
] = 
rouã
;

866 if(
‰omr
 != 0)

867 
nh_èbÀ
[
‰om
][0] |
ED_BM
;

868 if(
‰omr
 !(
GRIDROWS
-1))

869 
nh_èbÀ
[
‰om
][0] |
EU_BM
;

871 if(
‰omc
 != 0)

872 
nh_èbÀ
[
‰om
][0] |
EL_BM
;

873 if(
‰omc
 !(
GRIDCOLS
-1))

874 
nh_èbÀ
[
‰om
][0] |
ER_BM
;

876 
	}
}

878 
	#REG_LINK
(
ty≥
Ë\

	)

880 if(!
my°ricmp
(
›tiˇl_ty≥
,#type)) \

882 
	gi
=0;i<4;i++) \

883 
	gj
=0;j<16;j++) \

884 
	gnh_èbÀ
[
i
+4][
j
]=
nh_èbÀ
[i+8][j]Úh_èbÀ[i+12][j]Úh_èbÀ[i][j] = 
SYMCAT
(
ty≥
,
_nh_èbÀ_ma°î
[
eo_øtio
][i][j]); \

889 
	#NEW_REG_LINK
(
ty≥
Ëdÿ{\

	)

890 if(!
	`my°ricmp
(
›tiˇl_ty≥
,#type)) {\

891 
i
=0;i<
CLUSTERS
;i++) \

892 
nh_èbÀ
[
i
][0] = 
ty≥
##
_nh_èbÀ_ma°î
[i]; \

893 ; } 
	}

	$}whûe
(0)

896 
	$öô_routög_èbÀ
()

898 #ifde‡
CONFIG_BASED_ICS


903 
eo_øtio
;

904 
øtio
;

905 
i
,
j
;

906 
ªvî£_lök
[
OR_INDEX
] = 
OL_BM
;

907 
ªvî£_lök
[
OL_INDEX
] = 
OR_BM
;

908 
ªvî£_lök
[
ER_INDEX
] = 
EL_BM
;

909 
ªvî£_lök
[
EL_INDEX
] = 
ER_BM
;

910 
ªvî£_lök
[
AC_INDEX
] = 
AC_BM
;

911 
ªvî£_lök
[
OT_INDEX
] = 
OT_BM
;

912 
ªvî£_lök
[
EU_INDEX
] = 
ED_BM
;

913 
ªvî£_lök
[
ED_INDEX
] = 
EU_BM
;

915 if(!
	`my°ricmp
(
›tiˇl_ty≥
,"none"))

931 
	`NEW_REG_LINK
(
grid
);

933 
øtio
 = ()
›tiˇl_h›_time
/
h›_time
;

934 if(
øtio
==2.0)

935 
eo_øtio
 = 
O2_E1
;

936 if(
øtio
 == 1.0)

937 
eo_øtio
 = 
O1_E1
;

938 if(
øtio
 == 3.0)

939 
eo_øtio
 = 
O3_E1
;

941 
	`Áèl
("R©iÿ%‡%d %dÇŸ vÆid",
øtio
,
›tiˇl_h›_time
,
h›_time
);

944 #i‚de‡
CONFIG_BASED_ICS


945 
	`REG_LINK
(
ã¡
);

946 
	`REG_LINK
(
mesh
);

947 
	`REG_LINK
(
Êowî
);

948 
	`Áèl
("optical_type %s undefined");

950 
	`¨bôøry_routög_èbÀ_öô
();

967 
	}
}

1013 
	#DIVIDE_POSITIVE_BY_8_ROUNDING_UP
(
x
Ë((x+7)>>3)

	)

1014 
	$˛_comm_œt
(
‰om
, 
to
, 
off£t
, 
byãsize
, 
comm_u£_ty≥_íum
 
u£_ty≥
) {

1015 
numbî_∑ckës
 = 
	`DIVIDE_POSITIVE_BY_8_ROUNDING_UP
(
byãsize
);

1017 
maxœt
 = 0;

1018 
numbî_∑ckës
) {

1019 #ifde‡ 
TRACK_COMM_USE_TYPES


1020 
œt
 = 
	`rög_œt_ty≥d
(
‰om
,
to
,0,
off£t
,
u£_ty≥
);

1022 
œt
 = 
	`rög_œt
(
‰om
,
to
,0,
off£t
);

1024 i‡(
œt
 > 
maxœt
)

1025 
maxœt
 = 
œt
;

1026 
numbî_∑ckës
--;

1028  
maxœt
;

1029 
	}
}

1040 
	$rög_œt
(
‰om
, 
to
, 
myªg
, 
off£t
)

1041 #ifde‡
TRACK_COMM_USE_TYPES


1043 #ifde‡ 
IGNORE_ALL_COMM_LATENCY


1046 i‡(
myªg
) {

1047  
	`rög_œt_ty≥d
(
‰om
, 
to
, 
myªg
, 
off£t
, 
£ndªgi°î
);

1049  
	`rög_œt_ty≥d
(
‰om
, 
to
, 
myªg
, 
off£t
, 
Ÿhî
);

1051 
	}
}

1052 
	$rög_œt_ty≥d
(
‰om
, 
to
, 
myªg
, 
off£t
, 
comm_u£_ty≥_íum
 
u£_ty≥
)

1055 
rouã
, 
found
, 
dñay
, 
ãmpv
;

1056 
possibÀ_löks
[
MAX_IC_INDEX
];

1057 
num_possibÀ_löks
;

1058 
to_s
;

1059 
wönög_lök
;

1060 
k
,
l
;

1061 
fú°_time
 = 1;

1062 
cou¡î_t
 
now
;

1064 
ãmpv
 = 
	`abs
(
‰om
 - 
to
);

1065 i‡(
ãmpv
 > (
CLUSTERS
/2))

1066 
ãmpv
 = 
CLUSTERS
-tempv;

1067 
tŸÆ_h›
 +
ãmpv
;

1068 
	`°©_add_ßm∂e
(
h›_di°
, 
ãmpv
);

1069 
now
 = 
sim_cy˛e
+
off£t
;

1071 
‰om
 !
to
 && (
now
 - 
sim_cy˛e
Ë< 
TIMEWINDOW
 )

1081 
num_possibÀ_löks
 = 0;

1082 
found
 = 
FALSE
;

1084 
to_s
 = 
	`CL_SUB
(
to
,
‰om
);

1085 
	#CHECK_VALID
(
LINK_POS
Ë\

	)

1086 if(
rouã
&
LINK_POS
##
_BM
) \

1087 if–
ma°î_lök
[
LINK_POS
##
_INDEX
][
‰om
][(
now
%
TIMEWINDOW
)]<
ma°î_lök_width
[LINK_POS##_INDEX]) \

1088 
possibÀ_löks
[
num_possibÀ_löks
++] = 
LINK_POS
##
_INDEX


1090 
	#CHECK_MYREG_VALID
(
LINK_POS
Ë\

	)

1091 if(
rouã
&
LINK_POS
##
_BM
) \

1093 
k
 = 0; k < 
ma°î_lök
[
LINK_POS
##
_INDEX
][
‰om
][(
now
%
TIMEWINDOW
)]; k++) \

1094 if(
ma°î_ªg
[
LINK_POS
##
_INDEX
][
‰om
][(
now
%
TIMEWINDOW
)][
k
] =
myªg
) \

1096 
found
 = 
TRUE
; \

1097 
possibÀ_löks
[
num_possibÀ_löks
++] = 
LINK_POS
##
_INDEX
; \

1100 if–
ma°î_lök
[
LINK_POS
##
_INDEX
][
‰om
][(
now
%
TIMEWINDOW
)]<
ma°î_lök_width
[LINK_POS##_INDEX]) \

1101 
possibÀ_löks
[
num_possibÀ_löks
++] = 
LINK_POS
##
_INDEX
; \

1103 
rouã
 = 
nh_èbÀ
[
‰om
][
to_s
];

1109 if(!
myªg
)

1111 #ifde‡
CONFIG_BASED_ICS


1112 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

1113 
	`CHECK_VALID
(
l
);

1116 
	`CHECK_VALID
(
OR
);

1117 
	`CHECK_VALID
(
OL
);

1118 
	`CHECK_VALID
(
ER
);

1119 
	`CHECK_VALID
(
EL
);

1120 
	`CHECK_VALID
(
AC
);

1121 
	`CHECK_VALID
(
OT
);

1122 
	`CHECK_VALID
(
EU
);

1123 
	`CHECK_VALID
(
ED
);

1128 #ifde‡
CONFIG_BASED_ICS


1129 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

1130 
	`CHECK_MYREG_VALID
(
l
)

1133 
	`CHECK_MYREG_VALID
(
OR
)

1134 
	`CHECK_MYREG_VALID
(
OL
)

1135 
	`CHECK_MYREG_VALID
(
ER
)

1136 
	`CHECK_MYREG_VALID
(
EL
)

1137 
	`CHECK_MYREG_VALID
(
AC
)

1138 
	`CHECK_MYREG_VALID
(
OT
)

1139 
	`CHECK_MYREG_VALID
(
EU
)

1140 
	`CHECK_MYREG_VALID
(
ED
)

1143 if(
num_possibÀ_löks
 < 1)

1144 
now
++;

1147 i‡(
num_possibÀ_löks
 == 1)

1148 
wönög_lök
 = 
possibÀ_löks
[0];

1150 
wönög_lök
 = 
possibÀ_löks
[
	`myønd
()%
num_possibÀ_löks
];

1152 if(
fú°_time
)

1154 
ma°î_qøm_ac˚ss_˛
[
wönög_lök
][
‰om
]++;

1155 
fú°_time
 = 0;

1158 if(!
found
)

1161 
ma°î_ªg
[
wönög_lök
][
‰om
][(
now
%
TIMEWINDOW
)][ 
ma°î_lök
[wönög_lök][‰om][“ow%TIMEWINDOW)] ] = 
myªg
;

1162 
ma°î_lök_width_di°
[
wönög_lök
][ 
ma°î_lök
[wönög_lök][
‰om
][(
now
%
TIMEWINDOW
)]++ ]++;

1163 #ifde‡
TRACK_COMM_USE_TYPES


1164 
ma°î_lök_u£_ty≥
[
wönög_lök
][
‰om
][(
now
%
TIMEWINDOW
)]=
u£_ty≥
;

1167 
now
 +
ma°î_h›_time
[
wönög_lök
];

1168 
‰om
 = 
	`å™vî£_lök
(
wönög_lök
,from);

1174 if(
TIMEWINDOW
 < (
now
 - 
sim_cy˛e
) )

1175 
	`∑nic
("lökÉx˚eded it†limô i¿cy¯%Œd\n", 
sim_cy˛e
);

1177 
dñay
 = 
now
 - 
sim_cy˛e
 - 
off£t
;

1178 
	`°©_add_ßm∂e
(
dñay_di°
, 
dñay
);

1179 
tŸÆ_dñay
 +
dñay
;

1180 
tŸÆ_numbî_dñay
++;

1181  
dñay
;

1182 
	}
}

1184 
	$Êood_œt
(
cou¡î_t
 * 
ªsu…s
, 
‰om
, cou¡î_à
£ndtime
)

1186 
num_¨rived
,
i
,
l
,
to
,
rouã
;

1187 
myªg
=0;

1188 
cou¡î_t
 
°_a
[
CLUSTERS
];

1189 
°_how
[
CLUSTERS
];

1190 
cou¡î_t
 
now
, 
dñay
;

1192 
i
=0;i<
CLUSTERS
;i++)

1194 
°_a
[
i
] = -1;

1195 
°_how
[
i
] = 0;

1198 
num_¨rived
 = 0;

1199 
°_a
[
‰om
] = 
£ndtime
;

1200 
now
 = 
£ndtime
;

1205 
num_¨rived
 < 
CLUSTERS
)

1207 
i
=0;i<
CLUSTERS
;i++)

1209 if(
°_a
[
i
] =
now
)

1211 
num_¨rived
++;

1213 
ªsu…s
[
i
] = 
now
;

1215 
rouã
 = 
nh_èbÀ
[
i
][0];

1216 
	#CHECK_ST_VALID
(
LINK_POS
Ë\

	)

1218 if((
rouã
&
LINK_POS
##
_BM
Ë&& !(LINK_POS##_BM&
°_how
[
i
]))\

1220 
to
 = 
	`å™vî£_lök
(
LINK_POS
##
_INDEX
,
i
); \

1221 
dñay
 = 
	`rög_œt_ty≥d
(
i
,
to
,
myªg
,
now
-
sim_cy˛e
,
Êood
); \

1222 if(
dñay
+
now
 =
°_a
[
to
]) \

1224 if(((
dñay
+
now
Ë< 
°_a
[
to
]) || (st_a[to] == -1)) \

1226 
°_a
[
to
] = 
dñay
 + 
now
; \

1231 #ifde‡
CONFIG_BASED_ICS


1232 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

1233 
	`CHECK_ST_VALID
(
l
);

1235 
	`CHECK_ST_VALID
(
OL
);

1236 
	`CHECK_ST_VALID
(
OR
);

1237 
	`CHECK_ST_VALID
(
EL
);

1238 
	`CHECK_ST_VALID
(
ER
);

1239 
	`CHECK_ST_VALID
(
AC
);

1240 
	`CHECK_ST_VALID
(
OT
);

1241 
	`CHECK_ST_VALID
(
EU
);

1242 
	`CHECK_ST_VALID
(
ED
);

1246 
now
++;

1249 
	}
}

1252 
	$°_rög_œt
(
RUU_°©i⁄
 *
rs
)

1257 
myªg
, 
i
, 
dñay
;

1259 
num_¨rived
,
l
;

1260 
to
, 
rouã
;

1261 
cou¡î_t
 
now
;

1262 
cou¡î_t
 
°_a
[
CLUSTERS
];

1263 
°_how
[
CLUSTERS
];

1266 #ifde‡ 
IGNORE_MEM_COMM_LATENCY


1269 if(
uni_œt_comm
)

1271 
i
=0;i<
CLUSTERS
;i++)

1272 
rs
->
°_ªach
[
i
] = 
sim_cy˛e
 + 1;

1273 
rs
->
°_ªach
[rs->
˛u°î
] = 
sim_cy˛e
;

1276 if(
two_œt_comm
)

1278 
i
=0;i<
CLUSTERS
;i++)

1279 
rs
->
°_ªach
[
i
] = 
sim_cy˛e
 + 2;

1280 
rs
->
°_ªach
[rs->
˛u°î
] = 
sim_cy˛e
;

1281 
rs
->
°_ªach
[
	`CL_ADD
‘s->
˛u°î
,1)] = 
sim_cy˛e
 + 1;

1282 
rs
->
°_ªach
[
	`CL_SUB
‘s->
˛u°î
,1)] = 
sim_cy˛e
 + 1;

1287 
i
=0;i<
CLUSTERS
;i++)

1289 
°_a
[
i
] = 0;

1290 
°_how
[
i
] = 0;

1293 
myªg
=0;

1294 
num_¨rived
 = 0;

1295 
°_a
[
rs
->
˛u°î
] = 
sim_cy˛e
;

1296 
now
 = 
sim_cy˛e
;

1297 #ifde‡
THRD_WAY_CACHE


1303 
num_¨rived
 < 
CLUSTERS
)

1305 
i
=0;i<
CLUSTERS
;i++)

1307 if(
°_a
[
i
] =
now
)

1309 
num_¨rived
++;

1311 
rs
->
°_ªach
[
i
] = 
now
;

1313 
rouã
 = 
nh_èbÀ
[
i
][0];

1314 
	#CHECK_ST_VALID
(
LINK_POS
Ë\

	)

1316 if((
rouã
&
LINK_POS
##
_BM
Ë&& !(LINK_POS##_BM&
°_how
[
i
]))\

1318 
to
 = 
	`å™vî£_lök
(
LINK_POS
##
_INDEX
,
i
); \

1319 
dñay
 = 
	`rög_œt
(
i
,
to
,
myªg
,
now
-
sim_cy˛e
); \

1320 if(
dñay
+
now
 =
°_a
[
to
]) \

1321 
°_how
[
to
] |
ªvî£_lök
[
LINK_POS
##
_INDEX
]; \

1322 if(((
dñay
+
now
Ë< 
°_a
[
to
]) || (st_a[to] == 0)) \

1324 
°_a
[
to
] = 
dñay
 + 
now
; \

1325 
°_how
[
to
] = 
ªvî£_lök
[
LINK_POS
##
_INDEX
]; \

1329 #ifde‡
CONFIG_BASED_ICS


1330 
l
=0;l<
lök_deföôi⁄s_¨gc
;l++)

1331 
	`CHECK_ST_VALID
(
l
);

1333 
	`CHECK_ST_VALID
(
OL
);

1334 
	`CHECK_ST_VALID
(
OR
);

1335 
	`CHECK_ST_VALID
(
EL
);

1336 
	`CHECK_ST_VALID
(
ER
);

1337 
	`CHECK_ST_VALID
(
AC
);

1338 
	`CHECK_ST_VALID
(
OT
);

1339 
	`CHECK_ST_VALID
(
EU
);

1340 
	`CHECK_ST_VALID
(
ED
);

1344 
now
++;

1351 
myªg
=0;

1352 #ifde‡
THRD_WAY_CACHE


1353 
i
=
n_ˇche_°¨t_thrd
[
rs
->
thªadid
];

1354 
i
<(
n_ˇche_°¨t_thrd
[
rs
->
thªadid
] + 
n_ˇche_limô_thrd
[rs->threadid]);

1355 
i
++)

1357 
i
=0;i<
CLUSTERS
;i++)

1360 
dñay
 = 
	`rög_œt
(
rs
->
˛u°î
,
i
,
myªg
,0);

1361 
rs
->
°_ªach
[
i
] = 
dñay
 + 
sim_cy˛e
;

1365 
	}
}

1367 #ifde‡
TOKENB


1368 
cou¡î_t
 
	$¥edi˘_commô
(
RUU_°©i⁄
 *
rs
)

1371 
i
;

1372 
tick_t
 
œã°
 = 0;

1373 
RUU_°©i⁄
 *
wrs
,*
our_ROB
,*
wlsq
;

1375 
our_hód
, 
our_num
;

1378 
our_ROB
 = 
thec⁄ãxts
[
rs
->
thªadid
]->
RUU
;

1379 
our_hód
 = 
thec⁄ãxts
[
rs
->
thªadid
]->
RUU_hód
;

1380 
our_num
 = 
thec⁄ãxts
[
rs
->
thªadid
]->
RUU_num
;

1386 if(
rs
->
ö_LSQ
)

1389 
wlsq
 = &
our_ROB
[
rs
->
ödex
];

1393 
wlsq
 = 
rs
;

1396  
i
 = 0; i < 
our_num
 ; i++ )

1398 
wrs
 = &
our_ROB
[(
our_hód
 + 
i
Ë% 
RUU_size
 ];

1399 
œã°
 = 
	`MAX
÷©e°, 
wrs
->
föish_time
);

1400 
œã°
 = 
	`MAX
÷©e°, 
wrs
->
commô_time
);

1401 if(
i
==
our_num
)

1402 
	`Áèl
("This shouldn't have gottenÅhis high.");

1403 if(
wrs
 =
wlsq
)

1414 if(
œã°
 < 
rs
->
föish_time
)

1416 
œã°
 = 
rs
->
föish_time
;

1417  
œã°
;

1418 
	}
}

1421 
	$dump_rouã_èbÀ
()

1423 
i
,
j
;

1424 
i
=0;i<
CLUSTERS
;i++)

1426 
j
=0;j<
CLUSTERS
;j++)

1428 
	`Ârötf
(
°dîr
,"%x ", 
nh_èbÀ
[
i
][
j
]);

1430 
	`Ârötf
(
°dîr
,"\n");

1432 
	}
}

	@interconnect.h

104 #i‚de‡
__INTERCONNECT_H


105 
	#__INTERCONNECT_H


	)

111 
	#TRACK_COMM_USE_TYPES


	)

113 #ifde‡
TRACK_COMM_USE_TYPES


114 
	ecomm_u£_ty≥_íum
 {
	m£ndªgi°î
, 
	ml2comm
, 
	mÊood
, 
	mb¨e_tokí
, 
	md©a_tokí
, 
	mŸhî
};

115 * 
comm_u£_ty≥_íum_«mes
[];

116 
	#LENGTHOF_comm_u£_ty≥_íum
 6

	)

124 #i‡
deföed
(
L2_COMM_LAT
Ë|| deföed(
TOKENB
)

125 
	#IF_L2_COMM_LAT_CL
(
˛u°î
Ë,
	)
cluster

127 
	#IF_L2_COMM_LAT_CL
(
˛u°î
)

	)

132 
	#CONFIG_BASED_ICS


	)

134 
	#NEW_INTERCONNECT


	)

136 
	#CLUSTER_TOTAL
 
CLUSTERS


	)

138 
	#GRIDROWS
 4

	)

139 
	#GRIDCOLS
 (
CLUSTERS
/
GRIDROWS
)

	)

141 
	#°r
(
s
Ë#s

	)

142 
	#x°r
(
s
Ë
	`°r
(s)

	)

144 
	#CNORM
(
x
Ë(x+
CLUSTERS
)%
	)
CLUSTERS

146 #ifde‡
CL_MOD


147 
	#CL_SUB
(
a
,
b
Ë
	`CL_MOD
(◊)-(b)+
CLUSTERS
)

	)

148 
	#CL_ADD
(
a
,
b
Ë
	`CL_MOD
(◊)+(b))

	)

150 
	#CL_SUB
(
a
,
b
Ë((◊)-(b)+
CLUSTERS
)%CLUSTERS)

	)

151 
	#CL_ADD
(
a
,
b
Ë((◊)+(b))%
CLUSTERS
)

	)

154 
	#NODE_TYPE
(
x
Ë(x&0x3)

	)

156 #i‚de‡
CONFIG_BASED_ICS


158 
	#ER_BM
 0x01

	)

159 
	#EL_BM
 0x02

	)

160 
	#EU_BM
 0x04

	)

161 
	#ED_BM
 0x08

	)

162 
	#OR_BM
 0x10

	)

163 
	#OL_BM
 0x20

	)

164 
	#AC_BM
 0x40

	)

165 
	#OT_BM
 0x80

	)

168 
	#ER_INDEX
 0

	)

169 
	#EL_INDEX
 1

	)

170 
	#EU_INDEX
 2

	)

171 
	#ED_INDEX
 3

	)

172 
	#OR_INDEX
 4

	)

173 
	#OL_INDEX
 5

	)

174 
	#AC_INDEX
 6

	)

175 
	#OT_INDEX
 7

	)

178 
	#l_INDEX
 
l


	)

179 
	#l_BM
 (1 << 
l
)

	)

182 
	#MAX_IC_INDEX
 8

	)

186 
ma°î_lök_width
[
MAX_IC_INDEX
];

187 
ma°î_h›_time
[
MAX_IC_INDEX
];

188 *
IC_ödex2°rög
[
MAX_IC_INDEX
];

189 
	elök_physics_íum
 {
	mn⁄e
, 
	mñe˘riˇl
, 
	m›tiˇl
};

190 
	slök_öfo_t_°


192 * 
	mty≥
;

193 * 
	ml⁄g«me
;

194 
lök_physics_íum
 
	mphysics
;

195 } 
	tlök_öfo_t
;

196 
lök_öfo_t
 
lök_öfo
[
MAX_IC_INDEX
];

198 #ifde‡
CONFIG_BASED_ICS


199 
„_lök_time
;

200 
tŸÆ_n⁄c⁄ge°ed_comm_dñay
[
CLUSTERS
][CLUSTERS];

204 #ifde‡
IGNORE_DISPATCH_COMM_LATENCY


205 
	#GENERIC_COMM_FE_LAT_DELAYED
(
‰om
,
to
,
dñay
Ë0

	)

209 #ifde‡
UNIFORM_COMM_LATENCY


210 
	#GENERIC_COMM_FE_LAT_DELAYED
(
‰om
,
to
,
dñay
Ë1

	)

214 #i‚de‡
IGNORE_DISPATCH_COMM_LATENCY


215 #i‚de‡
UNIFORM_COMM_LATENCY


216 
	#GENERIC_COMM_FE_LAT_DELAYED
(
‰om
,
to
,
dñay
Ë(
„_lök_time
 < 0 ? 
	`œt_n⁄c⁄ge°ed
(‰om,toË+ 
HOPTIME
 : (÷©_n⁄c⁄ge°ed(‰om,toË+ HOPTIME)<„_lök_time)?Ü©_n⁄c⁄ge°ed(‰om,toË+ HOPTIME : fe_lök_timê)

	)

220 
	#COMM_FE_TO_CL_LAT_DELAYED
(
to
,
dñay
Ë
	`GENERIC_COMM_FE_LAT_DELAYED
(0,to,dñay)

	)

221 
	#COMM_CL_TO_FE_LAT_DELAYED
(
‰om
,
dñay
Ë
	`GENERIC_COMM_FE_LAT_DELAYED
(‰om,0,dñay)

	)

222 
	#COMM_CL_TO_FE_LAT
(
‰om
Ë
	`COMM_CL_TO_FE_LAT_DELAYED
(‰om,0)

	)

223 
	#COMM_FE_TO_CL_LAT
(
to
Ë
	`COMM_FE_TO_CL_LAT_DELAYED
—o,0)

	)

231 
	#œt_n⁄c⁄ge°ed
(
‰om
,
to
Ë
tŸÆ_n⁄c⁄ge°ed_comm_dñay
[‰om][to]

	)

235 
ma°î_qøm_ac˚ss_˛
[
MAX_IC_INDEX
][
CLUSTERS
];

236 
ma°î_lök_rx_ac˚ss_˛
[
MAX_IC_INDEX
][
CLUSTERS
];

237 
ma°î_lök_tx_ac˚ss_˛
[
MAX_IC_INDEX
][
CLUSTERS
];

238 #ifde‡
TRACK_COMM_USE_TYPES


239 
ma°î_lök_tx_u£_ty≥_ac˚ss
[
MAX_IC_INDEX
][
LENGTHOF_comm_u£_ty≥_íum
];

242 
cou¡î_t
 *
ma°î_lök_width_di°
[
MAX_IC_INDEX
];

244 
	#DECLARE_POWER_STATS
(
èrg
Ë\

	)

245 
cou¡î_t
 
	gtŸÆ_ma°î_
##
	gèrg
##
	g_ac˚ss
[
MAX_IC_INDEX
]; \

246 
cou¡î_t
 
	gmax_ma°î_
##
	gèrg
##
	g_ac˚ss
[
MAX_IC_INDEX
]; \

247 
	gma°î_
##
	gèrg
##
	g_powî
[
MAX_IC_INDEX
]; \

248 
	gma°î_
##
	gèrg
##
	g_powî_cc1
[
MAX_IC_INDEX
][
CLUSTERS
+1]; \

249 
	gma°î_
##
	gèrg
##
	g_powî_cc2
[
MAX_IC_INDEX
][
CLUSTERS
+1]; \

250 
	gma°î_
##
	gèrg
##
	g_powî_cc3
[
MAX_IC_INDEX
][
CLUSTERS
+1]

252 
	#CLEAR_AGGREGATE_POWER_STATS
(
èrg
,
l
Ë\

	)

253 
	gtŸÆ_ma°î_
##
	gèrg
##
	g_ac˚ss
[
l
] = 0; \

254 
	gmax_ma°î_
##
	gèrg
##
	g_ac˚ss
[
l
] = 0; \

256 
	#CLEAR_POWER_STATS
(
èrg
,
l
,
i
Ë\

	)

257 
	gma°î_
##
	gèrg
##
	g_powî
[
l
] = 0; \

258 
	gma°î_
##
	gèrg
##
	g_powî_cc1
[
l
][
i
] = 0; \

259 
	gma°î_
##
	gèrg
##
	g_powî_cc2
[
l
][
i
] = 0; \

260 
	gma°î_
##
	gèrg
##
	g_powî_cc3
[
l
][
i
] = 0

262 
DECLARE_POWER_STATS
(
qøm
);

263 
DECLARE_POWER_STATS
(
lök_rx
);

264 
DECLARE_POWER_STATS
(
lök_tx
);

266 
	#ACCESS_TOTAL_POWER_STAT_B
(
èrg
,
l
,
i
,
˛ockî
Ë
ma°î_
##èrg##
_powî
##˛ockî[l][i]

	)

267 
	#ACCESS_TOTAL_POWER_STAT
(
èrg
,
l
Ë
ma°î_
##èrg##
_powî
[l]

	)

269 
	#ACCESS_TOTAL_POWER_STAT_CC1
(
èrg
,
l
,
i
Ë
	`ACCESS_TOTAL_POWER_STAT_B
—¨g,l,i,
_cc1
)

	)

270 
	#ACCESS_TOTAL_POWER_STAT_CC2
(
èrg
,
l
,
i
Ë
	`ACCESS_TOTAL_POWER_STAT_B
—¨g,l,i,
_cc2
)

	)

271 
	#ACCESS_TOTAL_POWER_STAT_CC3
(
èrg
,
l
,
i
Ë
	`ACCESS_TOTAL_POWER_STAT_B
—¨g,l,i,
_cc3
)

	)

275 
öô_routög_èbÀ
();

276 
öãrc⁄√˘_öô
();

277 
öãrc⁄√˘_‰ì
();

278 
˛ór_öãrc⁄√˘_ac˚ss_°©s
();

279 
tŸÆ_öãrc⁄√˘_powî_°©s
();

280 
tŸÆ_öãrc⁄√˘_ac˚ss_°©s
();

281 
¨bôøry_routög_èbÀ_öô
();

282 
öô_lök_des¸_èbÀs
();

283 
˛_comm_œt
(
‰om
, 
to
, 
off£t
, 
byãsize
, 
comm_u£_ty≥_íum
 
u£_ty≥
);

284 #ifde‡
TRACK_COMM_USE_TYPES


285 
rög_œt_ty≥d
(
‰om
, 
to
, 
myªg
, 
off£t
, 
comm_u£_ty≥_íum
 
u£_ty≥
);

287 
rög_œt
(
‰om
, 
to
, 
myªg
, 
off£t
);

289 
Êood_œt
(
cou¡î_t
 * 
ªsu…s
, 
‰om
, cou¡î_à
£ndtime
);

	@loader.c

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

55 
	~"ho°.h
"

56 
	~"misc.h
"

57 
	~"machöe.h
"

58 
	~"ídün.h
"

59 
	~"ªgs.h
"

60 
	~"mem‹y.h
"

61 
	~"sim.h
"

62 
	~"eio.h
"

63 
	~"lﬂdî.h
"

65 #ifde‡
SMT_SS


66 
	~"c⁄ãxt.h
"

68 #ifde‡
BFD_LOADER


69 
	~<bfd.h
>

71 
	~"èrgë-Æpha-löux/ecoff.h
"

72 
	~"èrgë-Æpha-löux/ñf64.h
"

76 
	#TEXT_TAIL_PADDING
 0

	)

78 
AÕhaSy°emSèã
 
	g_sy°em
;

81 
md_addr_t
 
	gld_bss_ba£
 = 0;

84 
	gld_bss_size
 = 0;

87 
md_addr_t
 
	gld_brk_poöt
 = 0;

89 
uöt64_t
 
	gaddr
, 
	gzîo
=0;

93 
	$öôülize_sy°em_°©e
()

97 
_sy°em
.
brk_poöt
 = (
ld_bss_ba£
 + 
ld_bss_size
 + 0xffffLL) & 0xffffffffffff0000LL;

99 
_sy°em
.
mm≠_íd
 = 0x180000000;

100 
	}
}

105 
	$ld_ªg_°©s
(
°©_sdb_t
 *
sdb
, 
thªadid
)

107 
c⁄ãxt
 *
cuºít
;

108 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

110 
	`°©_ªg_uöt
(
sdb
, "threadid",

112 &
cuºít
->
id
, current->id, "0x%010p");

113 
	`°©_ªg_addr
(
sdb
, "ld_text_base",

115 &
cuºít
->
ld_ãxt_ba£
, current->ld_text_base, "0x%010p");

116 
	`°©_ªg_uöt
(
sdb
, "ld_text_size",

118 &
cuºít
->
ld_ãxt_size
, cuºít->ld_ãxt_size, 
NULL
);

119 
	`°©_ªg_addr
(
sdb
, "ld_data_base",

121 &
cuºít
->
ld_d©a_ba£
, current->ld_data_base, "0x%010p");

122 
	`°©_ªg_uöt
(
sdb
, "ld_data_size",

124 &
cuºít
->
ld_d©a_size
, cuºít->ld_d©a_size, 
NULL
);

125 
	`°©_ªg_addr
(
sdb
, "ld_stack_base",

127 &
cuºít
->
ld_°ack_ba£
, current->ld_stack_base, "0x%010p");

128 
	`°©_ªg_uöt
(
sdb
, "ld_stack_size",

130 &
cuºít
->
ld_°ack_size
, cuºít->ld_°ack_size, 
NULL
);

131 
	`°©_ªg_addr
(
sdb
, "ld_prog_entry",

133 &
cuºít
->
ld_¥og_íåy
, current->ld_prog_entry, "0x%010p");

134 
	`°©_ªg_addr
(
sdb
, "ld_environ_base",

136 &
cuºít
->
ld_ívú⁄_ba£
, current->ld_environ_base, "0x%010p");

137 
	`°©_ªg_öt
(
sdb
, "ld_target_big_endian",

139 &
cuºít
->
ld_èrgë_big_ídün
, cuºít->ld_èrgë_big_ídün, 
NULL
);

140 
	}
}

146 
	$ld_lﬂd_¥og
(*
‚ame
,

147 
¨gc
, **
¨gv
,

148 **
ívp
,

149 
ªgs_t
 *
ªgs
,

150 
mem_t
 *
mem
,

151 
zîo_bss_£gs
,

152 
thªadid
)

154 
i
;

155 
qw‹d_t
 
ãmp
;

156 
md_addr_t
 
•
, 
d©a_bªak
 = 0, 
nuŒ_±r
 = 0, 
¨gv_addr
, 
ívp_addr
;

158 
c⁄ãxt
 *
cuºít
;

159 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

161 i‡(
	`eio_vÆid
(
‚ame
))

163 i‡(
¨gc
 != 1)

165 
	`Ârötf
(
°dîr
, "Åhªad %dÉº‹: EIO fûêha†¨gumíts\n",
thªadid
);

166 
	`exô
(1);

169 
	`Ârötf
(
°dîr
, "Åhªad %d sim:Üﬂdög EIO fûe: %s\n",
thªadid
, 
‚ame
);

171 
cuºít
->
sim_eio_‚ame
 = 
	`my°rdup
(
‚ame
);

174 
cuºít
->
sim_eio_fd
 = 
	`eio_›í
(
‚ame
);

177 i‡(
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
cuºít
->
sim_eio_fd
) != -1)

178 
	`Áèl
("Åhªad %d bad inôü»checkpoöàö EIO fûe",
thªadid
);

181 i‡(
cuºít
->
sim_chk±_‚ame
 !
NULL
)

183 
cou¡î_t
 
ª°‹e_i˙t
;

185 
FILE
 *
chk±_fd
;

187 
	`Ârötf
(
°dîr
, "sim:Åhªad %dÜﬂdög checkpoöàfûe: %s\n",
thªadid
,

188 
cuºít
->
sim_chk±_‚ame
);

190 i‡(!
	`eio_vÆid
(
cuºít
->
sim_chk±_‚ame
))

191 
	`Áèl
("Åhªad %d fûê`%s' d€†nŸáµó∏tÿbê®checkpoöàfûe",
thªadid
,

192 
cuºít
->
sim_chk±_‚ame
);

195 
chk±_fd
 = 
	`eio_›í
(
cuºít
->
sim_chk±_‚ame
);

198 
ª°‹e_i˙t
 = 
	`eio_ªad_chk±
(
ªgs
, 
mem
, 
chk±_fd
);

201 
	`myÂrötf
(
°dîr
, "sim:Åhªad %d fa° f‹w¨dögÅÿö°ru˘i⁄ %n\n",
thªadid
,

202 
ª°‹e_i˙t
);

203 
	`eio_Á°_f‹w¨d
(
cuºít
->
sim_eio_fd
, 
ª°‹e_i˙t
);

207 
cuºít
->
ld_ívú⁄_ba£
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

208 
cuºít
->
ld_¥og_íåy
 = 
ªgs
->
ªgs_PC
;

213 #ifde‡
MD_CROSS_ENDIAN


216 
	`w¨n
("ídü¿o‡`%s' d€†nŸ m©ch ho°", 
‚ame
);

217 
	`w¨n
("running withÉxperimental cross-endianÉxecution support");

218 
	`w¨n
("****************************************");

219 
	`w¨n
("**>>Ölease checkÑesults carefully <<**");

220 
	`w¨n
("****************************************");

225 i‡(
cuºít
->
sim_chk±_‚ame
 !
NULL
)

226 
	`Áèl
("Åhªad %d checkpoöt†⁄ly suµ‹ãd whûêEIOÅøcög",
thªadid
);

231 
FILE
 *
fobj
;

232 
Êoc
;

233 
Elf64_Ehdr
 
fhdr
;

234 
Elf64_Phdr
 
phdr
;

235 
Elf64_Shdr
 
shdr
;

236 *
shdr_°rs
;

237 
ecoff_aouthdr
 
ahdr
;

240 *
p
;

243 
cuºít
->
ld_¥og_‚ame
 = 
¨gv
[0];

246 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

247 
fobj
 = 
	`f›í
(
¨gv
[0], "rb");

249 
fobj
 = 
	`f›í
(
¨gv
[0], "r");

251 i‡(!
fobj
)

252 
	`Áèl
("Åhªad %d c™nŸ o≥¿execuèbÀ `%s'",
thªadid
, 
¨gv
[0]);

255 i‡(
	`‰ód
(&
fhdr
, (
Elf64_Ehdr
), 1, 
fobj
) < 1)

256 
	`Áèl
("Åhªad %d c™nŸÑód hódî fromÉxecuèbÀ `%s'",
thªadid
, 
¨gv
[0]);

259 i‡((
fhdr
.
e_idít
[0] != '\x7f') ||

260 (
fhdr
.
e_idít
[1] != 'E') ||

261 (
fhdr
.
e_idít
[2] != 'L') ||

262 (
fhdr
.
e_idít
[3] != 'F'))

263 
	`Áèl
("ArchLib: %†didÇŸ c⁄èöá vÆid magi¯numbî", 
¨gv
[0]);

264 i‡(
fhdr
.
e_idít
[4] !
ELFCLASS64
)

265 
	`Áèl
("ArchLib: %†wa†nŸá 64-bô ELF bö¨y", 
¨gv
[0]);

266 i‡(
fhdr
.
e_idít
[5] !
ELFDATA2LSB
)

267 
	`Áèl
("ArchLib: %s didÇot containÜittle-endian object file strutcs",

268 
¨gv
[0]);

269 i‡(
fhdr
.
e_ty≥
 !
ET_EXEC
)

270 
	`Áèl
("ArchLib: %†i†nŸá¿execuèbÀ fûe", 
¨gv
[0]);

285 
i
 = 0; i < 
fhdr
.
e_phnum
; i++)

287 i‡(
	`f£ek
(
fobj
, 
fhdr
.
e_phoff
 + (
i
*fhdr.
e_phítsize
), 
SEEK_SET
) == -1)

288 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

289 
size_t
 
Àn
 = 
	`‰ód
(&
phdr
, 1, ’hdr), 
fobj
);

290 i‡(
Àn
 !(
phdr
))

291 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

293 
phdr
.
p_ty≥
)

295 
PT_NULL
:

298 
PT_NOTE
:

301 
PT_SHLIB
:

304 
PT_LOOS
:

307 
PT_HIOS
:

310 
PT_LOPROC
:

313 
PT_HIPROC
:

317 
PT_LOAD
:

318 
PT_DYNAMIC
:

319 
PT_INTERP
:

320 
PT_PHDR
:

322 i‡(
	`f£ek
(
fobj
, 
phdr
.
p_off£t
, 
SEEK_SET
) == -1)

323 
	`Áèl
("ArchLib:Érror seekingÅoÖrogram seg %i from %s",

324 
i
, 
¨gv
[0]);

326 
p
 = (*)
	`ˇŒoc
(
phdr
.
p_fûesz
, ());

327 i‡(!
p
)

328 
	`Áèl
("ArchLib: out of virtual memory");

329 i‡(
	`‰ód
(
p
, 
phdr
.
p_fûesz
, 1, 
fobj
) < 1)

330 
	`Áèl
("ArchLib:ÉrrorÑeadingÖrogram segment %i from %s",

331 
i
, 
¨gv
[0]);

333 
	`mem_bc›y
(
mem_ac˚ss
, 
cuºít
->
mem
, 
Wrôe
, 
	`MD_SWAPQ
(
phdr
.
p_vaddr
), 
p
, MD_SWAPQ’hdr.
p_fûesz
), cuºít->
id
);

334 
	`‰ì
(
p
);

344 i‡(
	`f£ek
(
fobj
,

345 
fhdr
.
e_shoff
 + (fhdr.
e_sh°∫dx
*fhdr.
e_shítsize
),

346 
SEEK_SET
) == -1)

347 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

348 
size_t
 
Àn
 = 
	`‰ód
(&
shdr
, 1, (shdr), 
fobj
);

349 i‡(
Àn
 !(
shdr
))

350 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

351 i‡(
shdr
.
sh_ty≥
 !
SHT_STRTAB
)

352 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

353 i‡(
	`f£ek
(
fobj
, 
shdr
.
sh_off£t
, 
SEEK_SET
) == -1)

354 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

355 
shdr_°rs
 = (*)
	`ˇŒoc
(
shdr
.
sh_size
, ());

356 
Àn
 = 
	`‰ód
(
shdr_°rs
, 1, 
shdr
.
sh_size
, 
fobj
);

357 i‡(
Àn
 !
shdr
.
sh_size
)

358 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

361 
cuºít
->
ld_¥og_íåy
 = 
fhdr
.
e_íåy
;

362 
cuºít
->
ld_ãxt_size
 = cuºít->
ld_ãxt_ba£
 = 0;

363 
cuºít
->
ld_d©a_size
 = cuºít->
ld_d©a_ba£
 = 0;

366 
i
 = 0; i < 
fhdr
.
e_shnum
; i++)

368 i‡(
	`f£ek
(
fobj
, 
fhdr
.
e_shoff
 + (
i
*fhdr.
e_shítsize
), 
SEEK_SET
) == -1)

369 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

370 
size_t
 
Àn
 = 
	`‰ód
(&
shdr
, 1, (shdr), 
fobj
);

371 i‡(
Àn
 !(
shdr
))

372 
	`Áèl
("ArchLib:Éº‹Ö¨sög %s", 
¨gv
[0]);

375 i‡(!
	`°rcmp
(".ãxt", 
shdr_°rs
 + 
shdr
.
sh_«me
))

377 
cuºít
->
ld_ãxt_size
 = 
	`MD_SWAPQ
(
shdr
.
sh_size
);

378 
cuºít
->
ld_ãxt_ba£
 = 
	`MD_SWAPQ
(
shdr
.
sh_addr
);

382 i‡(!
	`°rcmp
(".d©a", 
shdr_°rs
 + 
shdr
.
sh_«me
))

384 
cuºít
->
ld_d©a_size
 = 
	`MD_SWAPQ
(
shdr
.
sh_size
);

385 
cuºít
->
ld_d©a_ba£
 = 
	`MD_SWAPQ
(
shdr
.
sh_addr
);

388 i‡(!
	`°rcmp
(".bss", 
shdr_°rs
 + 
shdr
.
sh_«me
))

391 
ld_bss_size
 = 
	`MD_SWAPQ
(
shdr
.
sh_size
);

392 
cuºít
->
ld_d©a_size
 +=
ld_bss_size
;

393 
ld_bss_ba£
 = 
	`MD_SWAPQ
(
shdr
.
sh_addr
);

397 
	`‰ì
(
shdr_°rs
);

411 
d©a_bªak
 = 
cuºít
->
ld_d©a_ba£
 + cuºít->
ld_d©a_size
;

418 
	`debug
("processing %d sections in `%s'...",

419 
	`MD_SWAPH
(
fhdr
.
e_phnum
), 
¨gv
[0]);

424 i‡(
	`f˛o£
(
fobj
))

425 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
¨gv
[0]);

431 i‡(!
cuºít
->
ld_ãxt_ba£
 || !cuºít->
ld_ãxt_size
)

432 
	`Áèl
("Åhªad %dÉxecuèbÀ i†missögá `.ãxt' se˘i⁄",
thªadid
);

433 i‡(!
cuºít
->
ld_d©a_ba£
 || !cuºít->
ld_d©a_size
)

434 
	`Áèl
("Åhªad %dÉxecuèbÀ i†missögá `.d©a' se˘i⁄",
thªadid
);

435 i‡(!
cuºít
->
ld_¥og_íåy
)

436 
	`Áèl
("Åhªad %dÖrogømÉ¡ryÖoöànŸ s≥cifõd",
thªadid
);

439 
cuºít
->
sim_sw≠_byãs
 = (
	`ídün_ho°_byã_‹dî
(Ë!
	`ídün_èrgë_byã_‹dî
(
thªadid
));

440 
cuºít
->
sim_sw≠_w‹ds
 = (
	`ídün_ho°_w‹d_‹dî
(Ë!
	`ídün_èrgë_w‹d_‹dî
(
thªadid
));

444 
cuºít
->
ld_°ack_ba£
 = cuºít->
ld_ãxt_ba£
 - (409600+4096);

446 
•
 = 
cuºít
->
ld_°ack_ba£
 - 
MD_MAX_ENVIRON
;

447 
cuºít
->
ld_°ack_size
 = cuºít->
ld_°ack_ba£
 - 
•
;

448 
cuºít
->
°ack_ba£
 = cuºít->
ld_°ack_ba£
 - 
STACKSIZE
;

452 
cuºít
->
ld_ívú⁄_ba£
 = 
•
;

455 
ãmp
 = 
	`MD_SWAPQ
(
¨gc
);

456 
	`mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
•
, &
ãmp
, (
qw‹d_t
), cuºít->
id
);

457 
ªgs
->
ªgs_R
[
MD_REG_A0
] = 
ãmp
;

458 
•
 +(
qw‹d_t
);

461 
¨gv_addr
 = 
•
;

462 
ªgs
->
ªgs_R
[
MD_REG_A1
] = 
¨gv_addr
;

463 
•
 = s∞+ (
¨gc
 + 1Ë* (
md_addr_t
);

466 
ívp_addr
 = 
•
;

467 
i
=0; 
ívp
[i]; i++)

468 
•
 +(
md_addr_t
);

469 
•
 +(
md_addr_t
);

472 
i
=0; i<
¨gc
; i++)

475 
ãmp
 = 
	`MD_SWAPQ
(
•
);

476 
	`mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
), &
ãmp
, (md_addr_t), cuºít->
id
);

478 
	`mem_°r˝y
(
mem_ac˚ss
, 
cuºít
->
mem
, 
Wrôe
, 
•
, 
¨gv
[
i
], cuºít->
id
);

479 
•
 +
	`°æí
(
¨gv
[
i
])+1;

482 
	`mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
¨gv_addr
 + 
i
*(
md_addr_t
), &
nuŒ_±r
, (md_addr_t), cuºít->
id
);

485 
i
 = 0; 
ívp
[i]; i++)

488 
ãmp
 = 
	`MD_SWAPQ
(
•
);

489 
	`mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
), &
ãmp
, (md_addr_t), cuºít->
id
);

491 
	`mem_°r˝y
(
mem_ac˚ss
, 
cuºít
->
mem
, 
Wrôe
, 
•
, 
ívp
[
i
], cuºít->
id
);

492 
•
 +
	`°æí
(
ívp
[
i
]) + 1;

495 
	`mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
ívp_addr
 + 
i
*(
md_addr_t
), &
nuŒ_±r
, (md_addr_t), cuºít->
id
);

498 i‡(
•
 > 
cuºít
->
ld_°ack_ba£
)

503 
	`Áèl
("Åhªad %dÉnvú⁄míàovîÊow, in¸ó£ MD_MAX_ENVIRON i¿Æpha.h",
thªadid
);

507 
cuºít
->
ld_brk_poöt
 = 
	`ROUND_UP
(cuºít->
ld_d©a_ba£
 + cuºít->
ld_d©a_size
, 
MD_PAGE_SIZE
);

510 
cuºít
->
ld_°ack_mö
 = 
ªgs
->
ªgs_R
[
MD_REG_SP
];

512 
ªgs
->
ªgs_R
[
MD_REG_SP
] = 
cuºít
->
ld_ívú⁄_ba£
;

513 
ªgs
->
ªgs_PC
 = 
cuºít
->
ld_¥og_íåy
;

514 
	`¥ötf
("Åhªad %dÜd_ãxt_ba£: 0x%08xÜd_ãxt_size: 0x%08x",
thªadid
,

515 
cuºít
->
ld_ãxt_ba£
, cuºít->
ld_ãxt_size
);

516 
	`¥ötf
("Åhªad %dÜd_d©a_ba£: 0x%08xÜd_d©a_size: 0x%08x",
thªadid
,

517 
cuºít
->
ld_d©a_ba£
, cuºít->
ld_d©a_size
);

518 
	`¥ötf
("Åhªad %dÜd_°ack_ba£: 0x%08xÜd_°ack_size: 0x%08x",
thªadid
,

519 
cuºít
->
ld_°ack_ba£
, cuºít->
ld_°ack_size
);

520 
	`¥ötf
("Åhªad %dÜd_¥og_íåy: 0x%08x",
thªadid
, 
cuºít
->
ld_¥og_íåy
);

521 
	`fÊush
 (
°dout
);

522 
	`debug
("Åhªad %dÜd_ãxt_ba£: 0x%08xÜd_ãxt_size: 0x%08x",
thªadid
,

523 
cuºít
->
ld_ãxt_ba£
, cuºít->
ld_ãxt_size
);

524 
	`debug
("Åhªad %dÜd_d©a_ba£: 0x%08xÜd_d©a_size: 0x%08x",
thªadid
,

525 
cuºít
->
ld_d©a_ba£
, cuºít->
ld_d©a_size
);

526 
	`debug
("Åhªad %dÜd_°ack_ba£: 0x%08xÜd_°ack_size: 0x%08x",
thªadid
,

527 
cuºít
->
ld_°ack_ba£
, cuºít->
ld_°ack_size
);

528 
	`debug
("Åhªad %dÜd_¥og_íåy: 0x%08x",
thªadid
, 
cuºít
->
ld_¥og_íåy
);

633 
¥ogøm_com∂ëe
 = 0;

637 
	`öôülize_sy°em_°©e
();

641 
	`¥ötf
("FINISHED LOADER\n");

642 
	}
}

	@loader.h

93 #i‚de‡
LOADER_H


94 
	#LOADER_H


	)

96 
	~<°dio.h
>

98 
	~"ho°.h
"

99 
	~"misc.h
"

100 
	~"machöe.h
"

101 
	~"ªgs.h
"

102 
	~"mem‹y.h
"

103 
	~"sim.h
"

141 
AÕhaSy°emSèã
 
_sy°em
;

143 
md_addr_t
 
ld_brk_poöt
;

145 #i‚de‡
SMT_SS


147 
md_addr_t
 
ld_ãxt_ba£
;

150 
ld_ãxt_size
;

153 
md_addr_t
 
ld_d©a_ba£
;

156 
ld_d©a_size
;

159 
md_addr_t
 
ld_brk_poöt
;

162 
md_addr_t
 
ld_°ack_ba£
;

165 
ld_°ack_size
;

168 
md_addr_t
 
ld_°ack_mö
;

171 *
ld_¥og_‚ame
;

174 
md_addr_t
 
ld_¥og_íåy
;

177 
md_addr_t
 
ld_ívú⁄_ba£
;

180 
ld_èrgë_big_ídün
;

184 
ld_ªg_°©s
(
°©_sdb_t
 *
sdb
);

189 
ld_lﬂd_¥og
(*
‚ame
,

190 
¨gc
, **
¨gv
,

191 **
ívp
,

192 
ªgs_t
 *
ªgs
,

193 
mem_t
 *
mem
,

194 
zîo_bss_£gs
);

200 
ld_ªg_°©s
(
°©_sdb_t
 *
sdb
, 
thªadid
);

205 
ld_lﬂd_¥og
(*
‚ame
,

206 
¨gc
, **
¨gv
,

207 **
ívp
,

208 
ªgs_t
 *
ªgs
,

209 
mem_t
 *
mem
,

210 
zîo_bss_£gs
,

211 
thªadid
);

	@machine.c

112 
	~<°dio.h
>

113 
	~<°dlib.h
>

115 
	~"ho°.h
"

116 
	~"misc.h
"

117 
	~"machöe.h
"

118 
	~"evÆ.h
"

119 
	~"ªgs.h
"

120 
	~"sim.h
"

122 
	~"smt.h
"

124 #ifde‡
SMT_SS


125 
	~"c⁄ãxt.h
"

130 #i‡!
deföed
(
BYTES_LITTLE_ENDIAN
Ë|| !deföed(
WORDS_LITTLE_ENDIAN
)

131 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
lôée
-
ídün
 
machöes
...

136 #i‡!
deföed
(
HOST_HAS_QWORD
)

137 #îr‹ 
Sim∂eSˇœr
/
AXP
 
⁄ly
 
buûds
 
⁄
 
ho°s
 
wôh
 
buûtö
 
qw‹d
 
suµ‹t
...

138 #îr‹ 
Try
 
buûdög
 
wôh
 
GNU
 
GCC
, 
as
 
ô
 
suµ‹ts
 
qw‹ds
 
⁄
 
mo°
 
machöes
.

142 
md_ö°_t
 
	gMD_NOP_INST
 = 0x43ff041f;

145 
md_›code
 
	gmd_mask2›
[
MD_MAX_MASK
+1];

146 
	gmd_›off£t
[
OP_MAX
];

149 
	gmd_›mask
[
OP_MAX
] = {

151 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

152 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËMASK,

	)

153 
	#CONNECT
(
OP
)

	)

154 
	~"machöe.def
"

158 
	gmd_›shi·
[
OP_MAX
] = {

160 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë0,

	)

161 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
SHIFT
,
MASK
ËSHIFT,

	)

162 
	#CONNECT
(
OP
)

	)

163 
	~"machöe.def
"

167 *
	gmd_›2«me
[
OP_MAX
] = {

168 
NULL
,

169 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËNAME,

	)

170 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËNAME,

	)

171 
	#CONNECT
(
OP
)

	)

172 
	~"machöe.def
"

176 *
	gmd_›2f‹m©
[
OP_MAX
] = {

177 
NULL
,

178 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOPFORM,

	)

179 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NULL
,

	)

180 
	#CONNECT
(
OP
)

	)

181 
	~"machöe.def
"

185 
md_fu_˛ass
 
	gmd_›2fu
[
OP_MAX
] = {

186 
FUCœmd_NA
,

187 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËRES,

	)

188 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
FUCœmd_NA
,

	)

189 
	#CONNECT
(
OP
)

	)

190 
	~"machöe.def
"

194 *
	gmd_fu2«me
[
NUM_FU_CLASSES
] = {

195 
NULL
,

209 *
	gmd_amode_°r
[
md_amode_NUM
] =

220 
md_ªg_«mes_t
 
	gmd_ªg_«mes
[] =

225 { "$r0", 
π_g¥
, 0 },

226 { "$v0", 
π_g¥
, 0 },

227 { "$r1", 
π_g¥
, 1 },

228 { "$r2", 
π_g¥
, 2 },

229 { "$r3", 
π_g¥
, 3 },

230 { "$r4", 
π_g¥
, 4 },

231 { "$r5", 
π_g¥
, 5 },

232 { "$r6", 
π_g¥
, 6 },

233 { "$r7", 
π_g¥
, 7 },

234 { "$îr", 
π_g¥
, 7 },

235 { "$r8", 
π_g¥
, 8 },

236 { "$r9", 
π_g¥
, 9 },

237 { "$r10", 
π_g¥
, 10 },

238 { "$r11", 
π_g¥
, 11 },

239 { "$r12", 
π_g¥
, 12 },

240 { "$r13", 
π_g¥
, 13 },

241 { "$r14", 
π_g¥
, 14 },

242 { "$r15", 
π_g¥
, 15 },

243 { "$Â", 
π_g¥
, 15 },

244 { "$r16", 
π_g¥
, 16 },

245 { "$a0", 
π_g¥
, 16 },

246 { "$r17", 
π_g¥
, 17 },

247 { "$a1", 
π_g¥
, 17 },

248 { "$r18", 
π_g¥
, 18 },

249 { "$a2", 
π_g¥
, 18 },

250 { "$r19", 
π_g¥
, 19 },

251 { "$a3", 
π_g¥
, 19 },

252 { "$r20", 
π_g¥
, 20 },

253 { "$a4", 
π_g¥
, 20 },

254 { "$r21", 
π_g¥
, 21 },

255 { "$a5", 
π_g¥
, 21 },

256 { "$r22", 
π_g¥
, 22 },

257 { "$r23", 
π_g¥
, 23 },

258 { "$r24", 
π_g¥
, 24 },

259 { "$r25", 
π_g¥
, 25 },

260 { "$r26", 
π_g¥
, 26 },

261 { "$ø", 
π_g¥
, 26 },

262 { "$r27", 
π_g¥
, 27 },

263 { "$r28", 
π_g¥
, 28 },

264 { "$r29", 
π_g¥
, 29 },

265 { "$gp", 
π_g¥
, 29 },

266 { "$r30", 
π_g¥
, 30 },

267 { "$•", 
π_g¥
, 30 },

268 { "$r31", 
π_g¥
, 31 },

269 { "$zîo", 
π_g¥
, 31 },

272 { "$f0", 
π_Âr
, 0 },

273 { "$f1", 
π_Âr
, 1 },

274 { "$f2", 
π_Âr
, 2 },

275 { "$f3", 
π_Âr
, 3 },

276 { "$f4", 
π_Âr
, 4 },

277 { "$f5", 
π_Âr
, 5 },

278 { "$f6", 
π_Âr
, 6 },

279 { "$f7", 
π_Âr
, 7 },

280 { "$f8", 
π_Âr
, 8 },

281 { "$f9", 
π_Âr
, 9 },

282 { "$f10", 
π_Âr
, 10 },

283 { "$f11", 
π_Âr
, 11 },

284 { "$f12", 
π_Âr
, 12 },

285 { "$f13", 
π_Âr
, 13 },

286 { "$f14", 
π_Âr
, 14 },

287 { "$f15", 
π_Âr
, 15 },

288 { "$f16", 
π_Âr
, 16 },

289 { "$f17", 
π_Âr
, 17 },

290 { "$f18", 
π_Âr
, 18 },

291 { "$f19", 
π_Âr
, 19 },

292 { "$f20", 
π_Âr
, 20 },

293 { "$f21", 
π_Âr
, 21 },

294 { "$f22", 
π_Âr
, 22 },

295 { "$f23", 
π_Âr
, 23 },

296 { "$f24", 
π_Âr
, 24 },

297 { "$f25", 
π_Âr
, 25 },

298 { "$f26", 
π_Âr
, 26 },

299 { "$f27", 
π_Âr
, 27 },

300 { "$f28", 
π_Âr
, 28 },

301 { "$f29", 
π_Âr
, 29 },

302 { "$f30", 
π_Âr
, 30 },

303 { "$f31", 
π_Âr
, 31 },

306 { "$l0", 
π_Õr
, 0 },

307 { "$l1", 
π_Õr
, 1 },

308 { "$l2", 
π_Õr
, 2 },

309 { "$l3", 
π_Õr
, 3 },

310 { "$l4", 
π_Õr
, 4 },

311 { "$l5", 
π_Õr
, 5 },

312 { "$l6", 
π_Õr
, 6 },

313 { "$l7", 
π_Õr
, 7 },

314 { "$l8", 
π_Õr
, 8 },

315 { "$l9", 
π_Õr
, 9 },

316 { "$l10", 
π_Õr
, 10 },

317 { "$l11", 
π_Õr
, 11 },

318 { "$l12", 
π_Õr
, 12 },

319 { "$l13", 
π_Õr
, 13 },

320 { "$l14", 
π_Õr
, 14 },

321 { "$l15", 
π_Õr
, 15 },

322 { "$l16", 
π_Õr
, 16 },

323 { "$l17", 
π_Õr
, 17 },

324 { "$l18", 
π_Õr
, 18 },

325 { "$l19", 
π_Õr
, 19 },

326 { "$l20", 
π_Õr
, 20 },

327 { "$l21", 
π_Õr
, 21 },

328 { "$l22", 
π_Õr
, 22 },

329 { "$l23", 
π_Õr
, 23 },

330 { "$l24", 
π_Õr
, 24 },

331 { "$l25", 
π_Õr
, 25 },

332 { "$l26", 
π_Õr
, 26 },

333 { "$l27", 
π_Õr
, 27 },

334 { "$l28", 
π_Õr
, 28 },

335 { "$l29", 
π_Õr
, 29 },

336 { "$l30", 
π_Õr
, 30 },

337 { "$l31", 
π_Õr
, 31 },

340 { "$Â¸", 
π_˘æ
, 0 },

341 { "$uniq", 
π_˘æ
, 1 },

344 { "$pc", 
π_PC
, 0 },

345 { "$≈c", 
π_NPC
, 0 },

348 { 
NULL
, 
π_g¥
, 0 }

353 
	$md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
)

355 
i
;

357 
i
=0; 
md_ªg_«mes
[i].
°r
 !
NULL
; i++)

359 i‡(
md_ªg_«mes
[
i
].
fûe
 =
π
 && md_ªg_«mes[i].
ªg
 ==Ñeg)

360  
md_ªg_«mes
[
i
].
°r
;

364  
NULL
;

365 
	}
}

368 
	$md_ªg_obj
(
ªgs_t
 *
ªgs
,

369 
is_wrôe
,

370 
md_ªg_ty≥
 
π
,

371 
ªg
,

372 
evÆ_vÆue_t
 *
vÆ
)

374 
π
)

376 
π_g¥
:

377 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

380 i‡(!
is_wrôe
)

382 
vÆ
->
ty≥
 = 
ë_qw‹d
;

383 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_R
[
ªg
];

386 
ªgs
->
ªgs_R
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

389 
π_Õr
:

390 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

393 i‡(!
is_wrôe
)

395 
vÆ
->
ty≥
 = 
ë_qw‹d
;

396 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_F
.
q
[
ªg
];

399 
ªgs
->
ªgs_F
.
q
[
ªg
] = 
	`evÆ_as_qw‹d
(*
vÆ
);

402 
π_Âr
:

403 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

406 i‡(!
is_wrôe
)

408 
vÆ
->
ty≥
 = 
ë_doubÀ
;

409 
vÆ
->
vÆue
.
as_doubÀ
 = 
ªgs
->
ªgs_F
.
d
[
ªg
];

412 
ªgs
->
ªgs_F
.
d
[
ªg
] = 
	`evÆ_as_doubÀ
(*
vÆ
);

415 
π_˘æ
:

416 
ªg
)

419 i‡(!
is_wrôe
)

421 
vÆ
->
ty≥
 = 
ë_qw‹d
;

422 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
Â¸
;

425 
ªgs
->
ªgs_C
.
Â¸
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

429 i‡(!
is_wrôe
)

431 
vÆ
->
ty≥
 = 
ë_qw‹d
;

432 
vÆ
->
vÆue
.
as_qw‹d
 = 
ªgs
->
ªgs_C
.
uniq
;

435 
ªgs
->
ªgs_C
.
uniq
 = 
	`evÆ_as_qw‹d
(*
vÆ
);

443 
π_PC
:

444 i‡(!
is_wrôe
)

446 
vÆ
->
ty≥
 = 
ë_addr
;

447 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_PC
;

450 
ªgs
->
ªgs_PC
 = 
	`evÆ_as_addr
(*
vÆ
);

453 
π_NPC
:

454 i‡(!
is_wrôe
)

456 
vÆ
->
ty≥
 = 
ë_addr
;

457 
vÆ
->
vÆue
.
as_addr
 = 
ªgs
->
ªgs_NPC
;

460 
ªgs
->
ªgs_NPC
 = 
	`evÆ_as_addr
(*
vÆ
);

464 
	`∑nic
("bogusÑegister bank");

468  
NULL
;

469 
	}
}

473 
	$md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

475 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx",

476 
	`md_ªg_«me
(
π_g¥
, 
ªg
), 
ªgs
[reg],Ñegs[reg]);

477 
	}
}

480 
	$md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
)

482 
i
;

484 
i
=0; i < 
MD_NUM_IREGS
; i += 2)

486 
	`md_¥öt_úeg
(
ªgs
, 
i
, 
°ªam
);

487 
	`Ârötf
(
°ªam
, " ");

488 
	`md_¥öt_úeg
(
ªgs
, 
i
+1, 
°ªam
);

489 
	`Ârötf
(
°ªam
, "\n");

491 
	}
}

495 
	$md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

497 
	`myÂrötf
(
°ªam
, "%4s: %16ld/0x%012lx/%f",

498 
	`md_ªg_«me
(
π_Âr
, 
ªg
), 
ªgs
.
q
[ªg],Ñegs.q[ªg],Ñegs.
d
[reg]);

499 
	}
}

502 
	$md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
)

504 
i
;

507 
i
=0; i < 
MD_NUM_FREGS
; i += 2)

509 
	`md_¥öt_Âªg
(
ªgs
, 
i
, 
°ªam
);

510 
	`Ârötf
(
°ªam
, "\n");

512 
	`md_¥öt_Âªg
(
ªgs
, 
i
+1, 
°ªam
);

513 
	`Ârötf
(
°ªam
, "\n");

515 
	}
}

518 
	$md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
)

521 
ªg
)

524 
	`myÂrötf
(
°ªam
, "FPCR: 0x%012lx", 
ªgs
.
Â¸
);

528 
	`myÂrötf
(
°ªam
, "UNIQ: 0x%012lx", 
ªgs
.
uniq
);

532 
	`∑nic
("bogus controlÑegister index");

534 
	}
}

537 
	$md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
)

539 
	`md_¥öt_¸eg
(
ªgs
, 0, 
°ªam
);

540 
	`Ârötf
(
°ªam
, " ");

541 
	`md_¥öt_¸eg
(
ªgs
, 1, 
°ªam
);

542 
	`Ârötf
(
°ªam
, "\n");

543 
	}
}

546 
w‹d_t


547 
	$md_x‹_ªgs
(
ªgs_t
 *
ªgs
)

549 
i
;

550 
qw‹d_t
 
checksum
 = 0;

552 
i
=0; i < (
MD_NUM_IREGS
-1); i++)

553 
checksum
 ^
ªgs
->
ªgs_R
[
i
];

555 
i
=0; i < (
MD_NUM_FREGS
-1); i++)

556 
checksum
 ^
ªgs
->
ªgs_F
.
q
[
i
];

558 
checksum
 ^
ªgs
->
ªgs_C
.
Â¸
;

559 
checksum
 ^
ªgs
->
ªgs_C
.
uniq
;

560 
checksum
 ^
ªgs
->
ªgs_PC
;

561 
checksum
 ^
ªgs
->
ªgs_NPC
;

563  (
w‹d_t
)((
checksum
 >> 32) ^ checksum);

564 
	}
}

566 #ifde‡
SMT_SS


567 
	$md_vÆid_addr
(
md_addr_t
 
ADDR
, 
thªadid
)

569 
c⁄ãxt
 *
cuºít
;

570 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

571  ( ((
ADDR
Ë>
cuºít
->
ld_ãxt_ba£
 && (ADDRË< (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
))

573 || ((
ADDR
Ë>
cuºít
->
ld_d©a_ba£
 && (ADDRË< 
_sy°em
.
mm≠_íd
)

574 || ((
ADDR
Ë>(
cuºít
->
ld_°ack_ba£
 - 16*1024*1024) && (ADDR) < current->ld_stack_base))

578 
	}
}

580 
	$md_ãxt_addr
(
md_addr_t
 
ADDR
, 
thªadid
)

582 
c⁄ãxt
 *
cuºít
;

583 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

584  ((
ADDR
Ë>
cuºít
->
ld_¥og_íåy
 && (ADDRË< (cuºít->
ld_ãxt_ba£
 + cuºít->
ld_ãxt_size
));

585 
	}
}

589 
	gmd_›2Êags
[
OP_MAX
] = {

590 
NA
,

591 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËFLAGS,

	)

592 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë
NA
,

	)

593 
	#CONNECT
(
OP
)

	)

594 
	~"machöe.def
"

600 
	$md_öô_decodî
()

602 
max_off£t
 = 0;

603 
off£t
 = 0;

605 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

606 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

607 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

608 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

609 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

610 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`max2
(max_offset,(MSK)+offset);

612 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

613 i‡((
MSK
)+
off£t
 >
MD_MAX_MASK
) \

614 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", (
MSK
)+
off£t
); \

615 i‡(
md_mask2›
[(
MSK
)+
off£t
]) \

616 
	`Áèl
("doubly deföed opcode, index==%d", (
MSK
)+
off£t
); \

617 
md_mask2›
[(
MSK
)+
off£t
]=(
OP
); 
max_off£t
=
	`max2
(max_offset,(MSK)+offset);

619 
	#CONNECT
(
OP
Ë\

	)

620 
off£t
 = 
max_off£t
+1; 
md_›off£t
[
OP
] = offset;

622 
	~"machöe.def
"

624 i‡(
max_off£t
 >
MD_MAX_MASK
)

625 
	`∑nic
("MASK_MAX i†toÿsmÆl, index==%d", 
max_off£t
);

626 
	}
}

630 
	$md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

631 
md_addr_t
 
pc
,

632 
FILE
 *
°ªam
)

634 
md_›code
 
›
;

637 i‡(!
°ªam
)

638 
°ªam
 = 
°dîr
;

641 
	`MD_SET_OPCODE
(
›
, 
ö°
);

644 i‡(
›
 <
OP_NA
 || o∞>
OP_MAX
)

647 
	`Ârötf
(
°ªam
, "<övÆid in°: 0x%08x>", 
ö°
);

651 *
s
;

654 
	`Ârötf
(
°ªam
, "%†", 
	`MD_OP_NAME
(
›
));

656 
s
 = 
	`MD_OP_FORMAT
(
›
);

657 *
s
) {

658 *
s
) {

660 
	`Ârötf
(
°ªam
, "r%d", 
RA
);

663 
	`Ârötf
(
°ªam
, "r%d", 
RB
);

666 
	`Ârötf
(
°ªam
, "r%d", 
RC
);

669 
	`Ârötf
(
°ªam
, "f%d", 
RA
);

672 
	`Ârötf
(
°ªam
, "f%d", 
RB
);

675 
	`Ârötf
(
°ªam
, "f%d", 
RC
);

678 
	`Ârötf
(
°ªam
, "%d", (
sw‹d_t
)
	`SEXT
(
OFS
));

681 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT
(
OFS
) << 2) + 4);

684 
	`myÂrötf
(
°ªam
, "0x%p", 
pc
 + (
	`SEXT21
(
TARG
) << 2) + 4);

687 
	`Ârötf
(
°ªam
, "%d", (
w‹d_t
)
IMM
);

691 
	`Âutc
(*
s
, 
°ªam
);

693 
s
++;

696 
	}
}

	@machine.h

122 #i‚de‡
ALPHA_H


123 
	#ALPHA_H


	)

125 
	~<°dio.h
>

127 
	~"ho°.h
"

128 
	~"misc.h
"

129 
	~"c⁄fig.h
"

130 
	~"ídün.h
"

132 
	~"smt.h
"

141 
	#TARGET_ALPHA


	)

144 #i‡
deföed
(
BYTES_BIG_ENDIAN
)

145 
	#MD_CROSS_ENDIAN


	)

149 
	#NA
 0

	)

156 
	#MD_QWORD_ADDRS


	)

159 
qw‹d_t
 
	tmd_addr_t
;

167 
	#MD_PAGE_SIZE
 4096

	)

168 
	#MD_LOG_PAGE_SIZE
 12

	)

176 
	#MD_LOCKED_BYTES
 16

177 

	)

178 
	#LOCKED_ADDRESS
(
X
Ë((X)&(
MD_LOCKED_BYTES
-1))

	)

180 
	#NUM_COM_REGS
 
MAXTHREADS


	)

214 
	emd_Áu…_ty≥
 {

215 
	mmd_Áu…_n⁄e
 = 0,

216 
	mmd_Áu…_ac˚ss
,

217 
	mmd_Áu…_Æignmít
,

218 
	mmd_Áu…_ovîÊow
,

219 
	mmd_Áu…_div0
,

220 
	mmd_Áu…_övÆid
,

222 
	mmd_Áu…_bªak
,

223 
	mmd_Áu…_unim∂
,

224 
	mmd_Áu…_öã∫Æ


233 
	#MD_NUM_IREGS
 32

	)

236 
	#MD_NUM_FREGS
 32

	)

239 
	#MD_NUM_CREGS
 2

	)

242 
	#MD_TOTAL_REGS
 \

	)

246 
qw‹d_t
 
	tmd_g¥_t
[
MD_NUM_IREGS
];

250 
qw‹d_t
 
	mq
[
MD_NUM_FREGS
];

251 
dÊﬂt_t
 
	md
[
MD_NUM_FREGS
];

252 } 
	tmd_Âr_t
;

256 
qw‹d_t
 
	mÂ¸
;

257 
qw‹d_t
 
	muniq
;

258 } 
	tmd_˘æ_t
;

261 
	emd_ªg_«mes
 {

262 
	mMD_REG_V0
 = 0,

263 
	mMD_REG_ERR
 = 7,

264 
	mMD_REG_FP
 = 15,

265 
	mMD_REG_A0
 = 16,

266 
	mMD_REG_A1
 = 17,

267 
	mMD_REG_A2
 = 18,

268 
	mMD_REG_A3
 = 19,

269 
	mMD_REG_A4
 = 20,

270 
	mMD_REG_A5
 = 21,

271 
	mMD_REG_RA
 = 26,

272 
	mMD_REG_GP
 = 29,

273 
	mMD_REG_SP
 = 30,

274 
	mMD_REG_ZERO
 = 31

283 
w‹d_t
 
	tmd_ö°_t
;

286 
md_ö°_t
 
MD_NOP_INST
;

289 #ifde‡
MD_CROSS_ENDIAN


291 
	#MD_SWAPH
(
X
Ë
	`SWAP_HALF
(X)

	)

292 
	#MD_SWAPW
(
X
Ë
	`SWAP_WORD
(X)

	)

293 
	#MD_SWAPQ
(
X
Ë
	`SWAP_QWORD
(X)

	)

294 
	#MD_SWAPI
(
X
Ëdÿ{ (XË
	`SWAP_WORD
(X); } 0)

	)

298 
	#MD_SWAPH
(
X
Ë(X)

	)

299 
	#MD_SWAPW
(
X
Ë(X)

	)

300 
	#MD_SWAPQ
(
X
Ë(X)

	)

301 
	#MD_SWAPD
(
X
Ë(X)

	)

302 
	#MD_SWAPI
(
X
Ë

	)

307 
	#MD_FETCH_INST
(
INST
, 
MEM
, 
PC
Ë\

	)

308 { (
	gINST
Ë
MEM_READ_WORD
((
MEM
), (
PC
)); }

315 
	#MD_MAX_ENVIRON
 16384

	)

323 
	#MD_TOP_OP
(
INST
Ë(((INSTË>> 26Ë& 0x3f)

	)

324 
	#MD_SET_OPCODE
(
OP
, 
INST
Ë\

	)

325 { 
	gOP
 = 
md_mask2›
[
MD_TOP_OP
(
INST
)]; \

326 
	gmd_›mask
[
OP
]) \

327 
	gOP
 = 
md_mask2›
[((
INST
 >> 
md_›shi·
[
OP
]Ë& 
md_›mask
[OP]) \

328 + 
md_›off£t
[
OP
]]; }

332 
	#MD_MAX_MASK
 2048

	)

335 
	emd_›code
 {

336 
	mOP_NA
 = 0,

337 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
ËOP,

	)

338 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
ËOP,

	)

339 
	#CONNECT
(
OP
)

	)

340 
	~"machöe.def
"

341 
	mOP_MAX


347 
md_›code
 
md_mask2›
[];

348 
md_›off£t
[];

349 
md_›mask
[];

350 
md_›shi·
[];

353 
	#MD_OP_NAME
(
OP
Ë(
md_›2«me
[OP])

	)

354 *
md_›2«me
[];

357 
	#MD_OP_FORMAT
(
OP
Ë(
md_›2f‹m©
[OP])

	)

358 *
md_›2f‹m©
[];

361 
	emd_fu_˛ass
 {

362 
	mFUCœmd_NA
 = 0,

363 
	mI¡ALU
,

364 
	mI¡MULT
,

365 
	mI¡DIV
,

366 
	mFlﬂtADD
,

367 
	mFlﬂtCMP
,

368 
	mFlﬂtCVT
,

369 
	mFlﬂtMULT
,

370 
	mFlﬂtDIV
,

371 
	mFlﬂtSQRT
,

372 
	mRdP‹t
,

373 
	mWrP‹t
,

374 
	mNUM_FU_CLASSES


378 
	#MD_OP_FUCLASS
(
OP
Ë(
md_›2fu
[OP])

	)

379 
md_fu_˛ass
 
md_›2fu
[];

382 
	#MD_FU_NAME
(
FU
Ë(
md_fu2«me
[FU])

	)

383 *
md_fu2«me
[];

386 
	#F_ICOMP
 0x00000001

	)

387 
	#F_FCOMP
 0x00000002

	)

388 
	#F_CTRL
 0x00000004

	)

389 
	#F_UNCOND
 0x00000008

	)

390 
	#F_COND
 0x00000010

	)

391 
	#F_MEM
 0x00000020

	)

392 
	#F_LOAD
 0x00000040

	)

393 
	#F_STORE
 0x00000080

	)

394 
	#F_DISP
 0x00000100

	)

395 
	#F_RR
 0x00000200

	)

396 
	#F_DIRECT
 0x00000400

	)

397 
	#F_TRAP
 0x00000800

	)

398 
	#F_LONGLAT
 0x00001000

	)

399 
	#F_DIRJMP
 0x00002000

	)

400 
	#F_INDIRJMP
 0x00004000

	)

401 
	#F_CALL
 0x00008000

	)

402 
	#F_FPCOND
 0x00010000

	)

403 
	#F_IMM
 0x00020000

	)

404 
	#F_FENCE
 0x00040000

	)

407 
	#MD_OP_FLAGS
(
OP
Ë(
md_›2Êags
[OP])

	)

408 
md_›2Êags
[];

412 
	#RA
 ((
ö°
 >> 21Ë& 0x1fË

	)

413 
	#RB
 ((
ö°
 >> 16Ë& 0x1fË

	)

414 
	#RC
 (
ö°
 & 0x1fË

	)

417 
	#IMM
 ((
qw‹d_t
)((
ö°
 >> 13Ë& 0xff))

	)

420 
	#TARG
 (
ö°
 & 0x1fffff)

	)

423 
	#OFS
 (
ö°
 & 0xffff)

	)

426 
	#SEXT
(
X
Ë\

	)

427 (((
	gX
Ë& 0x8000Ë? ((
	gsqw‹d_t
)(XË| 
	$LL
(0xffffffffffff0000)Ë: (
sqw‹d_t
)(
X
))

429 
	#SEXT21
(
X
Ë\

	)

430 (((
X
Ë& 0x100000Ë? ((
sqw‹d_t
)(XË| 
	$LL
(0xfffffffff„00000)Ë: (
sqw‹d_t
)(
X
))

432 
	#SEXT32
(
X
Ë\

	)

433 (((
X
Ë& 0x80000000Ë? ((
sqw‹d_t
)(X)|
	$LL
(0xffffffff00000000)Ë: (
sqw‹d_t
)(
X
))

436 
	#ARITH_OVFL
(
RESULT
, 
OP1
, 
OP2
Ë((RESULTË< (OP1Ë|| (RESULTË< (OP2))

	)

439 
	#IEEEFP_DBL_SIGN
(
Q
Ë((QË>> 63)

	)

440 
	#IEEEFP_DBL_EXPONENT
(
Q
Ë(((QË>> 52Ë& 0x7ff)

	)

441 
	#IEEEFP_DBL_FRACTION
(
Q
Ë((QË& 
	`ULL
(0xfffffffffffff))

	)

442 
	#IS_IEEEFP_DBL_NAN
(
Q
Ë\

	)

443 ((
	`IEEEFP_DBL_EXPONENT
(
Q
Ë=0x7ffË&& (
	$IEEEFP_DBL_FRACTION
(
Q
)))

446 #i‚de‡
SET_TPC


447 
	#SET_TPC
(
PC
Ë()0

	)

456 
	#OSF_SYS_exô
 1

	)

457 
	#MD_EXIT_SYSCALL
(
REGS
Ë\

	)

458 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_exô
)

461 
	#OSF_SYS_wrôe
 4

	)

462 
	#MD_OUTPUT_SYSCALL
(
REGS
Ë\

	)

463 ((
REGS
)->
ªgs_R
[
MD_REG_V0
] =
OSF_SYS_wrôe
 \

464 && ((
REGS
)->
ªgs_R
[
MD_REG_A0
] == 1 \

465 || (
REGS
)->
ªgs_R
[
MD_REG_A0
] == 2))

468 
	#MD_STREAM_FILENO
(
REGS
Ë((REGS)->
ªgs_R
[
MD_REG_A0
])

	)

471 
	#MD_IS_CALL
(
OP
Ë((OPË=
JSR
 || (OPË=
BSR
)

	)

474 
	#MD_IS_RETURN
(
OP
Ë((OPË=
RETN
)

	)

477 
	#MD_IS_INDIR
(
OP
Ë\

	)

478 ((
OP
Ë=
JMP
 || (OPË=
JSR
 || (OPË=
RETN
 || (OPË=
JSR_COROUTINE
)

481 
	emd_amode_ty≥
 {

482 
md_amode_imm
,

483 
md_amode_gp
,

484 
md_amode_•
,

485 
md_amode_Â
,

486 
md_amode_di•
,

487 
md_amode_º
,

488 
md_amode_NUM


490 *
md_amode_°r
[
md_amode_NUM
];

493 
	#MD_AMODE_PREPROBE
(
OP
, 
FSM
Ë{ (FSMË0; 
	}

	)
}

496 
	#MD_AMODE_PROBE
(
AM
, 
OP
, 
FSM
Ë\

	)

498 i‡(
MD_OP_FLAGS
(
OP
Ë& 
	gF_DISP
) \

500 i‡((
	gRB
Ë=
MD_REG_GP
) \

501 (
AM
Ë
md_amode_gp
; \

502 i‡((
	gRB
Ë=
MD_REG_SP
) \

503 (
AM
Ë
md_amode_•
; \

504 i‡((
	gRB
Ë=
MD_REG_FP
) \

505 (
AM
Ë
md_amode_Â
; \

507 (
	gAM
Ë
md_amode_di•
; \

509 i‡(
MD_OP_FLAGS
(
OP
Ë& 
	gF_RR
) \

510 (
	gAM
Ë
md_amode_º
; \

512 
∑nic
("cannot decodeáddressing mode"); \

516 
	#MD_AMODE_POSTPROBE
(
FSM
Ë

	)

524 
	#MD_EIO_FILE_FORMAT
 
EIO_ALPHA_FORMAT


	)

526 
	#MD_MISC_REGS_TO_EXO
(
REGS
Ë\

	)

527 
exo_√w
(
ec_li°
, \

528  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)
sim_num_ö¢
), \

529  
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_PC
), \

530  
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_NPC
), \

531  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
Â¸
),\

532  
exo_√w
(
ec_öãgî
, (
exo_öãgî_t
)(
REGS
)->
ªgs_C
.
uniq
),\

533 
NULL
)

535 
	#MD_IREG_TO_EXO
(
REGS
, 
IDX
Ë\

	)

536 
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_R
[
IDX
])

538 
	#MD_FREG_TO_EXO
(
REGS
, 
IDX
Ë\

	)

539 
exo_√w
(
ec_addªss
, (
exo_öãgî_t
)(
REGS
)->
ªgs_F
.
q
[
IDX
])

541 
	#MD_EXO_TO_MISC_REGS
(
EXO
, 
ICNT
, 
REGS
Ë\

	)

543 i‡(!
	gexo
 \

544 || 
	gexo
->
	gec
 !
ec_li°
 \

545 || !
exo
->
as_li°
.
hód
 \

546 || 
exo
->
as_li°
.
hód
->
ec
 !
ec_öãgî
 \

547 || !
exo
->
as_li°
.
hód
->
√xt
 \

548 || 
exo
->
as_li°
.
hód
->
√xt
->
ec
 !
ec_addªss
 \

549 || !
exo
->
as_li°
.
hód
->
√xt
->next \

550 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->
ec
 !
ec_addªss
 \

551 || !
exo
->
as_li°
.
hód
->
√xt
->next->next \

552 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
ec
 !
ec_öãgî
 \

553 || !
exo
->
as_li°
.
hód
->
√xt
->next->next->next \

554 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
ec
 !
ec_öãgî
 \

555 || 
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->√xà!
NULL
) \

556 
Áèl
("couldÇotÑead EIO miscÑegs"); \

557 (
	gICNT
Ë(
cou¡î_t
)
exo
->
as_li°
.
hód
->
as_öãgî
.
vÆ
; \

558 (
	gREGS
)->
	gªgs_PC
 = (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->
as_öãgî
.
vÆ
; \

559 (
	gREGS
)->
	gªgs_NPC
 = \

560 (
md_addr_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->
as_öãgî
.
vÆ
; \

561 (
	gREGS
)->
	gªgs_C
.
	gÂ¸
 = \

562 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->
as_öãgî
.
vÆ
; \

563 (
	gREGS
)->
	gªgs_C
.
	guniq
 = \

564 (
qw‹d_t
)
exo
->
as_li°
.
hód
->
√xt
->√xt->√xt->√xt->
as_öãgî
.
vÆ
;

566 
	#MD_EXO_TO_IREG
(
EXO
, 
REGS
, 
IDX
Ë\

	)

567 ((
	gREGS
)->
	gªgs_R
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

569 
	#MD_EXO_TO_FREG
(
EXO
, 
REGS
, 
IDX
Ë\

	)

570 ((
	gREGS
)->
	gªgs_F
.
	gq
[
IDX
] = (
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

572 
	#MD_EXO_CMP_IREG
(
EXO
, 
REGS
, 
IDX
Ë\

	)

573 ((
	gREGS
)->
	gªgs_R
[
IDX
] !(
qw‹d_t
)(
EXO
)->
as_öãgî
.
vÆ
)

575 
	#MD_FIRST_IN_REG
 0

	)

576 
	#MD_LAST_IN_REG
 21

	)

578 
	#MD_FIRST_OUT_REG
 0

	)

579 
	#MD_LAST_OUT_REG
 21

	)

587 
qw‹d_t
 
	texo_addªss_t
;

590 
qw‹d_t
 
	texo_öãgî_t
;

593 
	texo_Êﬂt_t
;

601 
	#°©_ªg_cou¡î
 
°©_ªg_sqw‹d


	)

602 
	#sc_cou¡î
 
sc_sqw‹d


	)

603 
	#f‹_cou¡î
 
f‹_sqw‹d


	)

606 
	#°©_ªg_addr
 
°©_ªg_qw‹d


	)

614 
	emd_ªg_ty≥
 {

615 
	mπ_g¥
,

616 
	mπ_Õr
,

617 
	mπ_Âr
,

618 
	mπ_d¥
,

619 
	mπ_˘æ
,

620 
	mπ_PC
,

621 
	mπ_NPC
,

622 
	mπ_NUM


626 
	smd_ªg_«mes_t
 {

627 *
	m°r
;

628 
md_ªg_ty≥
 
	mfûe
;

629 
	mªg
;

633 
md_ªg_«mes_t
 
md_ªg_«mes
[];

636 *
md_ªg_«me
(
md_ªg_ty≥
 
π
, 
ªg
);

639 
	gevÆ_vÆue_t
;

640 
	gªgs_t
;

642 
md_ªg_obj
(
ªgs_t
 *
ªgs
,

643 
is_wrôe
,

644 
md_ªg_ty≥
 
π
,

645 
ªg
,

646 
evÆ_vÆue_t
 *
vÆ
);

649 
md_¥öt_úeg
(
md_g¥_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

650 
md_¥öt_úegs
(
md_g¥_t
 
ªgs
, 
FILE
 *
°ªam
);

653 
md_¥öt_Âªg
(
md_Âr_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

654 
md_¥öt_Âªgs
(
md_Âr_t
 
ªgs
, 
FILE
 *
°ªam
);

657 
md_¥öt_¸eg
(
md_˘æ_t
 
ªgs
, 
ªg
, 
FILE
 *
°ªam
);

658 
md_¥öt_¸egs
(
md_˘æ_t
 
ªgs
, 
FILE
 *
°ªam
);

661 
w‹d_t
 
md_x‹_ªgs
(
ªgs_t
 *
ªgs
);

663 #ifde‡
SMT_SS


664 
md_vÆid_addr
(
md_addr_t
 
ADDR
, 
thªadid
);

672 
	#MD_AGEN_OP
 
ADDQ


	)

675 
	#MD_NOP_OP
 
OP_NA


	)

679 #i‚de‡
SMT_SS


680 
	#MD_VALID_ADDR
(
ADDR
Ë\

	)

681 (((
	gADDR
Ë>
ld_ãxt_ba£
 && (
ADDR
Ë< (ld_ãxt_ba£ + 
ld_ãxt_size
)) \

682 || ((
ADDR
Ë>
ld_d©a_ba£
 && (ADDRË< 
ld_brk_poöt
) \

683 || ((
ADDR
Ë>(
ld_°ack_ba£
 - 16*1024*1024) && (ADDR) <Üd_stack_base))

692 
	#MD_BR_SHIFT
 2

	)

700 
md_öô_decodî
();

704 
md_¥öt_ö¢
(
md_ö°_t
 
ö°
,

705 
md_addr_t
 
pc
,

706 
FILE
 *
°ªam
);

	@main.c

153 
	~<°dio.h
>

154 
	~<°dlib.h
>

155 
	~<°rög.h
>

156 
	~<time.h
>

157 
	~<£tjmp.h
>

158 
	~<sig«l.h
>

159 
	~<sys/ty≥s.h
>

160 #i‚de‡
_MSC_VER


161 
	~<uni°d.h
>

162 
	~<sys/time.h
>

164 #ifde‡
BFD_LOADER


165 
	~<bfd.h
>

168 
	~"ho°.h
"

169 
	~"misc.h
"

170 
	~"machöe.h
"

171 
	~"ídün.h
"

172 
	~"vîsi⁄.h
"

173 
	~"dlôe.h
"

174 
	~"›ti⁄s.h
"

175 
	~"°©s.h
"

176 
	~"lﬂdî.h
"

177 
	~"sim.h
"

178 
	~"ˇche.h
"

179 
	~"hŸ•Ÿ.h
"

182 
	~"smt.h
"

184 #ifde‡
SMT_SS


185 
	~"c⁄ãxt.h
"

188 *
	gsim_°r_dump
 = 
NULL
;

191 
tŸÆ_öãrc⁄√˘_powî_°©s
 ();

194 
	gnumThªads
[
MAXTHREADS
];

195 
	gmè_maxthªads
;

199 
	$sig«l_sim_°©s
 (
sigty≥
)

201 
sim_dump_°©s
 = 
TRUE
;

202 
	}
}

206 
	$sig«l_exô_now
 (
sigty≥
)

208 
sim_exô_now
 = 
TRUE
;

209 
	}
}

212 
cou¡î_t
 
	gsim_num_ö¢
 = 0;

213 
cou¡î_t
 
	gnum_of_övÆid©i⁄s
 = 0;

220 
	gsim_mem_ußge
 = 0;

224 
time_t
 
	gsim_°¨t_time
;

225 
time_t
 
	gsim_íd_time
;

226 
	gsim_ñ≠£d_time
;

228 #i‚de‡
SMT_SS


230 
	gsim_sw≠_byãs
;

231 
	gsim_sw≠_w‹ds
;

235 
	gsim_exô_now
 = 
FALSE
;

238 
jmp_buf
 
	gsim_exô_buf
;

241 
	gsim_dump_°©s
 = 
FALSE
;

244 
›t_odb_t
 *
	gsim_odb
 = 
NULL
;

247 
°©_sdb_t
 *
	gsim_sdb
 = 
NULL
;

249 #ifde‡
FIX_8_CLUSTER_BUG


250 
›t_odb_t
 *
odb
;

253 #i‚de‡
SMT_SS


255 *
	gsim_eio_‚ame
 = 
NULL
;

256 *
	gsim_chk±_‚ame
 = 
NULL
;

257 
FILE
 *
	gsim_eio_fd
 = 
NULL
;

261 *
	gsim_simout
 = 
NULL
;

263 #i‚de‡
SMT_SS


264 *
	gsim_¥ogout
 = 
NULL
;

265 
FILE
 *
	gsim_¥ogfd
 = 
NULL
;

268 #ifde‡ 
REMOVE_MY_CODE


270 
	gsim_sw≠_byãs
;

271 
	gsim_sw≠_w‹ds
;

274 *
	gsim_eio_‚ame
 = 
NULL
;

275 *
	gsim_chk±_‚ame
 = 
NULL
;

276 
FILE
 *
	gsim_eio_fd
 = 
NULL
;

279 *
	gsim_¥ogout
 = 
NULL
;

280 
FILE
 *
	gsim_¥ogfd
 = 
NULL
;

284 
	gexec_ödex
 = -1;

287 
	ghñp_me
;

290 
	gønd_£ed
;

293 
	göô_quô
;

295 #i‚de‡
_MSC_VER


297 
	gni˚_¥i‹ôy
;

299 
	gûök_run
;

300 
	gem3d_run
;

303 
	#NICE_DEFAULT_VALUE
 0

	)

306 
	$‹ph™_‚
 (
i
, 
¨gc
, **
¨gv
)

308 
exec_ödex
 = 
i
;

309  
FALSE
;

310 
	}
}

313 
	$b™√r
 (
FILE
 * 
fd
, 
¨gc
, **
¨gv
)

315 *
s
;

317 
	`Ârötf
 (
fd
,

320 "Thi†vîsi⁄ o‡Sim∂eSˇœ∏i†li˚n£d f‹áˇdemi¯n⁄-commîcü»u£ o∆y.\n" "\n", ((
s
 = 
	`°ºchr
 (
¨gv
[0], '/')Ë? s + 1 :árgv[0]), 
VER_TARGET
, 
VER_MAJOR
, 
VER_MINOR
, 
VER_UPDATE
);

321 
	}
}

324 
	$ußge
 (
FILE
 * 
fd
, 
¨gc
, **
¨gv
)

326 
	`Ârötf
 (
fd
, "Ußge: %†{-›ti⁄s}ÉxecuèbÀ {¨gumíts}\n", 
¨gv
[0]);

327 
	`›t_¥öt_hñp
 (
sim_odb
, 
fd
);

328 
	}
}

330 
	gru¬ög
 = 
FALSE
;

334 
	$sim_¥öt_°©s
 (
FILE
 * 
fd
)

336 i‡(!
ru¬ög
)

340 
sim_íd_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

341 
sim_ñ≠£d_time
 = 
	`max2
 (
sim_íd_time
 - 
sim_°¨t_time
, 1);

344 
	`tŸÆ_öãrc⁄√˘_powî_°©s
 ();

347 
	`Ârötf
 (
fd
, "\nsim: ** simulation statistics **\n");

348 
	`°©_¥öt_°©s
 (
sim_sdb
, 
fd
);

349 
	`sim_aux_°©s
 (
fd
);

350 #ifde‡
POPNET


351 
	`powî_ªp‹t
(
fd
);

352 
	`dñay_ªp‹t
(
fd
);

354 
	`Ârötf
 (
fd
, "\n");

355 if(
hŸ•Ÿ_a˘ive
)

356 
	`hŸ•Ÿ_dump°©s
();

357 
	`fÊush
(
fd
);

358 
	}
}

362 
	$exô_now
 (
exô_code
)

365 
	`sim_¥öt_°©s
 (
°dîr
);

368 
	`sim_unöô
 ();

369 i‡(
exô_code
)

370 
	`Ârötf
 (
°dîr
, "îr‹: somêfun˘i⁄ cÆ»exô_now wôhÉxô_codê%d\n", 
exô_code
);

372 
	`exô
 (
exô_code
);

373 
	}
}

375 
	$gë_c⁄fig
(
P_c⁄fig_i
, 
FILE
 *
tŸÆ_C⁄fig_fûe
, *
¥e„tch_C⁄fig
)

377 
i
;

378 
i
=0;i<16;i++)

380 
	`fsˇnf
(
tŸÆ_C⁄fig_fûe
,"\t%d",&
¥e„tch_C⁄fig
[
P_c⁄fig_i
+
i
*256]);

382 
	}
}

385 
	$maö
 (
¨gc
, **
¨gv
, **
ívp
)

387 *
s
 ;

388 
s
 = 
NULL
 ;

389 
i
, 
exô_code
, 
j
;

391 
P_c⁄fig_i
, 
P_c⁄fig_j
;

394 #i‚de‡
_MSC_VER


396 
	`sig«l
 (
SIGUSR1
, 
sig«l_sim_°©s
);

399 
	`sig«l
 (
SIGUSR2
, 
sig«l_exô_now
);

403 
	`Áèl_hook
 (
sim_¥öt_°©s
);

406 i‡((
exô_code
 = 
	`£tjmp
 (
sim_exô_buf
)) != 0)

409 
	`exô_now
 (
exô_code
 - 1);

413 
sim_odb
 = 
	`›t_√w
 (
‹ph™_‚
);

414 
	`›t_ªg_Êag
 (
sim_odb
, "-h", "¥öàhñ∞mesßge", &
hñp_me
, 
FALSE
, FALSE, 
NULL
);

415 
	`›t_ªg_Êag
 (
sim_odb
, "-v", "vîbo£ o≥øti⁄", &
vîbo£
, 
FALSE
, FALSE, 
NULL
);

416 #ifde‡
DEBUG


417 
	`›t_ªg_Êag
 (
sim_odb
, "-d", "íabÀ debug mesßge", &
debuggög
, 
FALSE
, FALSE, 
NULL
);

419 
	`›t_ªg_Êag
 (
sim_odb
, "-i", "°¨àö Dlôêdebuggî", &
dlôe_a˘ive
, 
FALSE
, FALSE, 
NULL
);

420 
	`›t_ªg_öt
 (
sim_odb
, "-£ed", "øndomÇumbî gíî©‹ sìd (0 f‹Åimî sìd)", &
ønd_£ed
, 1, 
TRUE
, 
NULL
);

421 
	`›t_ªg_Êag
 (
sim_odb
, "-q", "öôülizê™dÅîmö©êimmedüãly", &
öô_quô
, 
FALSE
, FALSE, 
NULL
);

423 #ifde‡
SMT_SS


424 
	`Ârötf
 (
°dîr
, "Note: -chkpt option is disabled for SMT version \n");

426 
	`›t_ªg_°rög
 (
sim_odb
, "-chk±", "ª°‹êEIOÅø˚Éxecuti⁄ from <‚ame>", &
sim_chk±_‚ame
, 
NULL
, 
FALSE
, NULL);

429 #ifde‡
REMOVE_MY_CODE


430 
	`›t_ªg_°rög
 (
sim_odb
, "-chk±", "ª°‹êEIOÅø˚Éxecuti⁄ from <‚ame>", &
sim_chk±_‚ame
, 
NULL
, 
FALSE
, NULL);

434 
	`›t_ªg_°rög
 (
sim_odb
, "-ªdú:sim", "ªdúe˘ simuœt‹ ouçuàtÿfûê“⁄-öãø˘ivê⁄ly)", &
sim_simout
,

435  
NULL
, 
FALSE
, NULL);

436 #ifde‡
SMT_SS


437 #i‚de‡
PROG_OUT_FROM_SIM_OUT


438 
	`Ârötf
 (
°dîr
, "Note: -redir:prog option is controled in *.bnc configuration " "file ofÉachÖrogram in SMT version \n");

440 
	`Ârötf
 (
°dîr
, "Note: -redir:prog option is controled by combiningÅhe *.bnc configuration " "setting withÅhe -redir:sim option. \n");

443 
	`›t_ªg_°rög
 (
sim_odb
, "-ªdú:¥og", "ªdúe˘ simuœãdÖrogøm ouçuàtÿfûe", &
sim_¥ogout
, 
NULL
, 
FALSE
, NULL);

446 #ifde‡
REMOVE_MY_CODE


447 
	`›t_ªg_°rög
 (
sim_odb
, "-ªdú:¥og", "ªdúe˘ simuœãdÖrogøm ouçuàtÿfûe", &
sim_¥ogout
, 
NULL
, 
FALSE
, NULL);

451 
	`›t_ªg_°rög
 (
sim_odb
, "-ªdú:dump", "ªdúe˘ simuœãdÖrogøm ouçuàtÿfûe", &
sim_°r_dump
, 
NULL
, 
FALSE
, NULL);

453 #i‚de‡
_MSC_VER


455 
	`›t_ªg_öt
 (
sim_odb
, "-ni˚", "simuœt‹ schedulögÖri‹ôy", &
ni˚_¥i‹ôy
,

456  
NICE_DEFAULT_VALUE
, 
TRUE
, 
NULL
);

460 
	`sim_ªg_›ti⁄s
 (
sim_odb
);

463 
exec_ödex
 = -1;

465 #ifde‡
REMOVE_MY_CODE


466 
	`Ârötf
 (
°dîr
, "sim_odb %lu \n", (Ë
sim_odb
);

467 
	`Ârötf
 (
°dîr
, "sim: commandÜine: ");

468 
i
 = 0; i < 
¨gc
; i++)

469 
	`Ârötf
 (
°dîr
, "%†", 
¨gv
[
i
]);

470 
	`Ârötf
 (
°dîr
, "\n");

472 
«me
[256];

474 
	`gëho°«me
 (
«me
, 256);

475 
	`Ârötf
 (
°dîr
, "Ru¿⁄ %s\n", 
«me
);

478 
	`›t_¥o˚ss_›ti⁄s
 (
sim_odb
, 
¨gc
, 
¨gv
);

481 i‡(
sim_simout
 !
NULL
)

484 i‡(
	`fÊush
 (
°dîr
))

485 
	`Áèl
 ("unableÅo flush stderr ");

488 i‡(!
	`‰e›í
 (
sim_simout
, "w", 
°dîr
))

489 
	`Áèl
 ("u«bÀÅÿªdúe˘ simuœt‹ ouçuàtÿfûê`%s'", 
sim_simout
);

494 #i‚de‡
SMT_SS


495 i‡(
sim_¥ogout
 !
NULL
)

498 
sim_¥ogfd
 = 
	`f›í
 (
sim_¥ogout
, "w");

499 i‡(!
sim_¥ogfd
)

500 
	`Áèl
 ("u«bÀÅÿªdúe˘Örogøm ouçuàtÿfûê`%s'", 
sim_¥ogout
);

505 i‡(
¨gc
 < 2)

507 
	`b™√r
 (
°dîr
, 
¨gc
, 
¨gv
);

508 
	`ußge
 (
°dîr
, 
¨gc
, 
¨gv
);

509 
	`Ârötf
 (
°dîr
, "error:exit from mainárgc < 2\n");

510 
	`exô
 (1);

514 
	`b™√r
 (
°dîr
, 
¨gc
, 
¨gv
);

516 i‡(
hñp_me
)

519 
	`ußge
 (
°dîr
, 
¨gc
, 
¨gv
);

520 
	`Ârötf
 (
°dîr
, "error:exit from main help_me\n");

521 
	`exô
 (1);

525 i‡(
ønd_£ed
 == 0)

528 
	`my§™d
 (
	`time
 ((
time_t
 *Ë
NULL
));

533 
	`my§™d
 (
ønd_£ed
);

537 i‡(
exec_ödex
 == -1)

540 
	`Ârötf
 (
°dîr
, "error:ÇoÉxecutable specified\n");

541 
	`ußge
 (
°dîr
, 
¨gc
, 
¨gv
);

542 
	`exô
 (1);

547 
	`sim_check_›ti⁄s
 (
sim_odb
, 
¨gc
, 
¨gv
);

549 #i‚de‡
_MSC_VER


551 i‡(
	`ni˚
 (0Ë< 
ni˚_¥i‹ôy
)

553 i‡(
	`ni˚
 (
ni˚_¥i‹ôy
 -Çice (0)) < 0)

554 
	`Áèl
 ("couldÇotÑenice simulatorÖrocess");

559 
	`Ârötf
 (
°dîr
, "sim: commandÜine: ");

560 
i
 = 0; i < 
¨gc
; i++)

561 
	`Ârötf
 (
°dîr
, "%†", 
¨gv
[
i
]);

562 
	`Ârötf
 (
°dîr
, "\n");

564 
«me
[256];

566 
	`gëho°«me
 (
«me
, 256);

567 
	`Ârötf
 (
°dîr
, "Ru¿⁄ %s\n", 
«me
);

572 
sim_num_ö¢
 = 0;

574 #ifde‡
BFD_LOADER


576 
	`bfd_öô
 ();

580 
	`md_öô_decodî
 ();

582 #i‚de‡
SMT_SS


584 
	`sim_öô
 ();

588 #ifde‡
SMT_SS


589 
	`sim_lﬂd_thªads
 (
¨gc
 - 
exec_ödex
, 
¨gv
 +Éxec_ödex, 
ívp
);

591 
	`sim_lﬂd_¥og
 (
¨gv
[
exec_ödex
], 
¨gc
 -Éxec_ödex,árgv +Éxec_ödex, 
ívp
);

594 #ifde‡
SMT_SS


596 
	`sim_öô
 ();

599 #i‚de‡
PARALLEL_EMUL


601 
sim_sdb
 = 
	`°©_√w
 ();

602 
	`sim_ªg_°©s
 (
sim_sdb
);

606 
sim_°¨t_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

609 
	`Ârötf
 (
°dîr
, "sim: commandÜine: ");

610 
i
 = 0; i < 
¨gc
; i++)

611 
	`Ârötf
 (
°dîr
, "%†", 
¨gv
[
i
]);

612 
	`Ârötf
 (
°dîr
, "\n");

614 
«me
[256];

616 
	`gëho°«me
 (
«me
, 256);

617 
	`Ârötf
 (
°dîr
, "Ru¿⁄ %s\n", 
«me
);

621 
s
 = 
	`˘ime
 (&
sim_°¨t_time
);

622 i‡(
s
[
	`°æí
 (s) - 1] == '\n')

623 
s
[
	`°æí
 (s) - 1] = '\0';

624 #ifde‡
__VERSION__


625 
	#COMPILEDWITH
 "gc¯vîsi⁄ " 
__VERSION__


	)

627 
	#COMPILEDWITH
 "unknow¿compûî"

	)

629 
	`Ârötf
 (
°dîr
, "\nsim: maö.¯compûed o¿" 
__DATE__
 "áà" 
__TIME__
 " wôh " 
COMPILEDWITH
);

630 
	`Ârötf
 (
°dîr
, "\nsim: simuœti⁄ sèπed @ %s, o±i⁄†fﬁlow:\n", 
s
);

631 
	`›t_¥öt_›ti⁄s
 (
sim_odb
, 
°dîr
, 
TRUE
, TRUE);

632 
	`sim_aux_c⁄fig
 (
°dîr
);

633 
	`Ârötf
 (
°dîr
, "\n");

636 
sim_°¨t_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

638 i‡(
öô_quô
)

639 
	`exô_now
 (0);

641 
ru¬ög
 = 
TRUE
;

643 
j
 = 0; j < 4; j++)

645 
i
 = 0; i < 
NUM_COM_REGS
; i++)

647 
comm⁄_ªgs_s
[
j
][
i
].
ªgs_lock
 = 0;

648 
comm⁄_ªgs_s
[
j
][
i
].
addªss
 = 0;

652 if(!
	`°rcmp
(
¨gv
[9], "ilink1030.BNC"))

653 
ûök_run
 = 1;

655 
ûök_run
 = 0;

656 if(!
	`°rcmp
(
¨gv
[9], "../../BNCfor16/em3d1030.BNC"))

657 
em3d_run
 = 1;

659 
em3d_run
 = 0;

660 
	`sim_maö
 ();

663 
	`exô_now
 (0);

664 #ifde‡
__GNUC__


667 
	}
}

	@main.h

3 
	#SUPPORT_PREFETCH


7 

	)

8 
	#LSQ_LOAD_FAST_ISSUE


13 

	)

18 
	#LSQ_FIX_PARTIAL_BUG


20 

	)

22 
	sRES_DESC


24 *
	m°rName
;

25 
	mnC¡
;

27 
	m›œt
;

29 
	missuñ©
;

32 
	mBusy
[16];

34 }
	tResDesc
, *
	tPResDesc
;

36 
ResDesc
 
	gm_SQP‹t
;

	@memory.c

114 
	~<°dio.h
>

115 
	~<°dlib.h
>

117 
	~"ho°.h
"

118 
	~"misc.h
"

119 
	~"machöe.h
"

120 
	~"›ti⁄s.h
"

121 
	~"°©s.h
"

122 
	~"mem‹y.h
"

123 
	~"c⁄ãxt.h
"

125 
COHERENT_CACHE
;

126 
cﬁÀ˘_°©s
, 
ÆlF‹ked
;

127 
cuºítThrd
;

128 
md_addr_t
 
TempIn°r
;

129 
RódFromWB
;

134 
mem_t
 *

135 
	$mem_¸óã
(*
«me
)

137 
mem_t
 *
mem
;

139 
mem
 = 
	`ˇŒoc
(1, (
mem_t
));

140 i‡(!
mem
)

141 
	`Áèl
("out of virtual memory");

143 
mem
->
«me
 = 
	`my°rdup
(name);

144  
mem
;

145 
	}
}

148 
byã_t
 *

149 
	$mem_å™¶©e
(
mem_t
 *
mem
,

150 
md_addr_t
 
addr
)

152 
mem_±e_t
 *
±e
, *
¥ev
;

155 
mem
->
±ab_mis£s
++; mem->
±ab_ac˚s£s
++;

158 
¥ev
=
NULL
, 
±e
=
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

159 
±e
 !
NULL
;

160 
¥ev
=
±e
,Öãıã->
√xt
)

162 i‡(
±e
->
èg
 =
	`MEM_PTAB_TAG
(
addr
))

165 i‡(
¥ev
)

167 
¥ev
->
√xt
 = 
±e
->next;

168 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

169 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

171  
±e
->
∑ge
;

176  
NULL
;

177 
	}
}

181 
	$mem_√w∑ge
(
mem_t
 *
mem
,

182 
md_addr_t
 
addr
)

184 
byã_t
 *
∑ge
;

185 
mem_±e_t
 *
±e
 = 
NULL
;

192 
∑ge
 = 
	`gëc‹e
(
MD_PAGE_SIZE
);

199 i‡(!
∑ge
)

200 
	`Áèl
("out of virtual memory");

207 
±e
 = 
	`ˇŒoc
(1, (
mem_±e_t
));

215 i‡(!
±e
)

216 
	`Áèl
("out of virtual memory");

217 
±e
->
èg
 = 
	`MEM_PTAB_TAG
(
addr
);

218 
±e
->
∑ge
 =Öage;

226 
±e
->
√xt
 = 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)];

227 
mem
->
±ab
[
	`MEM_PTAB_SET
(
addr
)] = 
±e
;

230 
mem
->
∑ge_cou¡
++;

232 
	}
}

237 
md_Áu…_ty≥


238 
	$mem_ac˚ss_dr˘
(
mem_t
 *
mem
,

239 
mem_cmd
 
cmd
,

240 
md_addr_t
 
addr
,

241 *
vp
,

242 
nbyãs
, 
thªadID
 )

245 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadID
];

247 
byã_t
 *
p
 = 
vp
;

248 
md_Áu…_ty≥
 
ªtTy≥
;;

250 i‡((
nbyãs
 & (nbyãs-1)Ë!0 ||Çbyã†> 
MD_PAGE_SIZE
)

252  
md_Áu…_ac˚ss
;

254 i‡((
addr
 & (
nbyãs
-1)) != 0)

256 
	`Ârötf
(
°dîr
, "AlignmíàProbÀm %Œx %d\n", ()
addr
, ()
nbyãs
);

257 
	`fÊush
(
°dîr
);

258  
md_Áu…_Æignmít
;

260 i‡(
cmd
 =
Ród
)

262 
nbyãs
-- > 0)

264 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

265 
p
 +(
byã_t
);

266 
addr
 +(
byã_t
);

271 
nbyãs
-- > 0)

273 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, *((
byã_t
 *)
p
));

274 
p
 +(
byã_t
);

275 
addr
 +(
byã_t
);

278  
md_Áu…_n⁄e
;

279 
	}
}

282 
	#READFROMWB
 1

	)

283 
	#READFROMCACHE
 0

	)

285 
	$RódFrmWB
(
thªadID
, 
md_addr_t
 
addr
, 
nbyãs
)

287 
wb_mem_ít
 *
ít
;

288 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadID
];

290 
ít
=
cuºít
->
WBèbÀHód
;É¡;É¡Û¡->
√xt
)

292 if(
nbyãs
 == 1)

294 if(
ít
->
nbyãs
 ==Çbytes)

296 if(
ít
->
addr
 ==áddr)

298  
READFROMWB
;

303 if–(
ít
->
addr
 <addrË&& (”¡->add∏+ 
nbyãs
) >áddr))

305 
	`Ârötf
(
°dîr
,"O√ byã o‡d©®found i¿thêwrôêbuf„∏1 %d, %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_PC
);

306 
	`exô
(0);

310 i‡(
nbyãs
 == 2)

312 if(
ít
->
nbyãs
 ==Çbytes)

314 if(
ít
->
addr
 ==áddr)

316  
READFROMWB
;

319 if(
ít
->
nbyãs
 <Çbytes)

321 i‡–(
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

323 
	`Ârötf
(
°dîr
,"O√ byã o‡d©®found i¿thêwrôêbuf„∏2 %d, %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_PC
);

324 
	`exô
(0);

329 if–(
addr
 >
ít
->addrË&& (add∏< (ít->add∏+É¡->
nbyãs
)))

331 
	`Ârötf
(
°dîr
,"O√ byã o‡d©®found i¿thêwrôêbuf„∏3 %d, %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_PC
);

332 
	`exô
(0);

337 i‡(
nbyãs
 == 4)

339 if(
nbyãs
 =
ít
->nbytes)

341 if(
ít
->
addr
 ==áddr)

343  
READFROMWB
;

346 if(
ít
->
nbyãs
 <Çbytes)

348 i‡–(
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

350 
	`Ârötf
(
°dîr
,"O√ byã o‡d©®found i¿thêwrôêbuf„∏4 %d, %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_PC
);

351 
	`exô
(0);

356 if(
ít
->
addr
 ==áddr)

358  
READFROMWB
;

361 if(
ít
->
addr
 + 
nbyãs
 ==áddr)

363  
READFROMWB
;

367 i‡(
nbyãs
 == 8)

369 if(
nbyãs
 =
ít
->nbytes)

371 if(
ít
->
addr
 ==áddr)

373  
READFROMWB
;

376 i‡–(
ít
->
nbyãs
 == 1) || (ent->nbytes == 2))

378 if((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

380 
	`Ârötf
(
°dîr
,"O√ byã o‡d©®found i¿thêwrôêbuf„∏5 %d, %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_PC
);

381 
	`exô
(0);

386 if(
ít
->
addr
 ==áddr)

388  
READFROMCACHE
;

390 if((
ít
->
addr
 + 4) ==áddr)

392  
READFROMCACHE
;

398 
	`Ârötf
(
°dîr
, " Number of bytesÑead is incorrect\n");

399 
	`exô
(0);

402  
READFROMCACHE
;

403 
	}
}

406 
	$mem_∑πül_ªad
(
mem_t
 *
mem
, 
md_addr_t
 
addr
, *
p
,
nbyãs
, 
thªadid
)

408 
wb_mem_ít
 *
ít
 = 
NULL
, *
¥ev
 = NULL;

409 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

410 
nbyãs
)

413 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

416 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

419 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

422 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

423 *(((
w‹d_t
 *)
p
)+1Ë
	`MEM_READ_WORD
(
mem
, 
addr
 + (word_t));

426 
	`∑nic
("access sizeÇot supported in mis-speculative mode");

430 
ít
=
cuºít
->
WBèbÀTaû
;É¡;É¡Û¡->
¥ev
)

432 
bigMemWidth
 = (
ít
->
nbyãs
 >Çbytes) ?Ént->nbytes :Çbytes;

433 
md_addr_t
 
addr_lﬂd
, 
addr_ít
;

434 if(
bigMemWidth
 != 1 && bigMemWidth != 2 && bigMemWidth != 4 && bigMemWidth != 8)

435 
	`∑nic
("access sizeÇot supported in mis-speculative mode");

436 if(
bigMemWidth
 == 8)

438 
addr_lﬂd
 = 
addr
 >> 3;

439 
addr_ít
 = 
ít
->
addr
 >> 3;

441 if(
bigMemWidth
 == 4)

443 
addr_lﬂd
 = 
addr
 >> 2;

444 
addr_ít
 = 
ít
->
addr
 >> 2;

446 if(
bigMemWidth
 == 2)

448 
addr_lﬂd
 = 
addr
 >> 1;

449 
addr_ít
 = 
ít
->
addr
 >> 1;

451 if(
bigMemWidth
 == 1)

453 
addr_lﬂd
 = 
addr
 >> 0;

454 
addr_ít
 = 
ít
->
addr
 >> 0;

457 if(
addr_lﬂd
 =
addr_ít
)

459 if(
nbyãs
 >
ít
->nbytes)

461 
ödex
 = ()((
ít
->
addr
 & (
nbyãs
 - 1)) & ~(ent->nbytes - 1));

462 
	`mem˝y
(((
byã_t
 *)
p
)+
ödex
, &
ít
->
d©a
[0] ,É¡->
nbyãs
);

466 
ödex
 = ()((
addr
 & (
ít
->
nbyãs
 - 1)) & ~(nbytes - 1));

467 
	`mem˝y
(((
byã_t
 *)
p
), ((byã_à*)
ít
->
d©a
)+
ödex
 , 
nbyãs
);

471 
	}
}

473 
cou¡î_t
 
sim_cy˛e
;

481 
md_Áu…_ty≥
 
	$mem_ac˚ss
(
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
,
nbyãs
, 
thªadID
)

483 
i
, 
ödex
;

484 
wb_mem_ít
 *
ít
, *
¥ev
;

485 
wb_mem_ít
 *
ít1
, *
¥ev1
;

486 
c⁄ãxt
 *
cuºít
;

487 
md_addr_t
 
ítS
, 
ítF
, 
ªadS
, 
ªadF
;

488 
wrôeProb
 = 0;

490 
thªadid
 = 
thªadID
;

491 
ít
 = 
NULL
;

492 
¥ev
 = 
NULL
;

493 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

495 if(!(
COHERENT_CACHE
 && 
ÆlF‹ked
))

497  
	`mem_ac˚ss_dr˘
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

501 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

504 
i
=0; i < 
nbyãs
; i++)

505 ((*)
p
)[
i
] = 0;

506  
md_Áu…_n⁄e
;

510 if(
cmd
 =
Ród
)

513 
ít
=
cuºít
->
WBèbÀHód
;É¡;É¡Û¡->
√xt
)

515 if(
nbyãs
 == 1)

517 if(
ít
->
nbyãs
 ==Çbytes)

519 if(
ít
->
addr
 ==áddr)

521 
RódFromWB
 = 1;

527 if–(
ít
->
addr
 <addrË&& (”¡->add∏+É¡->
nbyãs
) >áddr))

529 
	`ÊushWrôeBuf„r
(
cuºít
->
id
);

530 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

531 
RódFromWB
 = 0;

532  
md_Áu…_n⁄e
;

536 i‡(
nbyãs
 == 2)

538 if(
ít
->
nbyãs
 ==Çbytes)

540 if(
ít
->
addr
 ==áddr)

542 
RódFromWB
 = 1;

546 if(
ít
->
nbyãs
 <Çbytes)

548 i‡–(
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

551 
	`ÊushWrôeBuf„r
(
cuºít
->
id
);

552 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

553 
RódFromWB
 = 0;

554  
md_Áu…_n⁄e
;

559 if–(
addr
 >
ít
->addrË&& (add∏< (ít->add∏+É¡->
nbyãs
)))

562 
	`ÊushWrôeBuf„r
(
cuºít
->
id
);

563 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

564 
RódFromWB
 = 0;

565  
md_Áu…_n⁄e
;

569 i‡(
nbyãs
 == 4)

571 if(
nbyãs
 =
ít
->nbytes)

573 if(
ít
->
addr
 ==áddr)

575 
RódFromWB
 = 1;

579 if(
ít
->
nbyãs
 <Çbytes)

581 i‡–(
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

584 
	`ÊushWrôeBuf„r
(
cuºít
->
id
);

585 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

586 
RódFromWB
 = 0;

587  
md_Áu…_n⁄e
;

592 if(
ít
->
addr
 ==áddr)

594 
RódFromWB
 = 1;

595 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

596  
md_Áu…_n⁄e
;

598 if(
ít
->
addr
 + 
nbyãs
 ==áddr)

600 
RódFromWB
 = 1;

601 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[1]);

602  
md_Áu…_n⁄e
;

606 i‡(
nbyãs
 == 8)

608 if(
nbyãs
 =
ít
->nbytes)

610 if(
ít
->
addr
 ==áddr)

612 
RódFromWB
 = 1;

616 i‡–(
ít
->
nbyãs
 == 1) || (ent->nbytes == 2)|| (ent->nbytes == 4))

618 if((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

621 
	`ÊushWrôeBuf„r
(
cuºít
->
id
);

622 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

623 *(((
w‹d_t
 *)
p
)+1Ë
	`MEM_READ_WORD
(
mem
, 
addr
 + (word_t));

624 
RódFromWB
 = 0;

625  
md_Áu…_n⁄e
;

631 
	`Ârötf
(
°dîr
, " Number of bytesÑead is incorrect\n");

632 
	`exô
(0);

638 i‡(
cmd
 =
Wrôe
)

640 if(
ít
 !
NULL
)

641 
	`∑nic
("ent isÇotÉqualÅo NULL\n");

642 i‡(!
cuºít
->
WBbuckë_‰ì_li°
)

644 
cuºít
->
WBbuckë_‰ì_li°
 = (
wb_mem_ít
 *)
	`ˇŒoc
(1, (wb_mem_ent));

645 i‡(!
cuºít
->
WBbuckë_‰ì_li°
)

646 
	`Áèl
("thªad %d , ouào‡vútuÆ mem‹y",
thªadid
);

647 
cuºít
->
WBbuckë_‰ì_li°
->
√xt
 = 
NULL
;

649 
ít
 = 
cuºít
->
WBbuckë_‰ì_li°
;

650 
cuºít
->
WBbuckë_‰ì_li°
 = cuºít->WBbuckë_‰ì_li°->
√xt
;

651 
ít
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

652 
ít
->
addr
 =áddr;

653 
ít
->
d©a
[0] = 0;Ént->data[1] = 0;

654 
ít
->
com∂ëeCy˛e
 = 0;

655 
ít
->
nbyãs
 =Çbytes;

656 
ít
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

657 
ít
->
di•_time
 = 
sim_cy˛e
;

658 
ít
->
lsqId
 = 
cuºít
->
LSQ_èû
;

659 
ít
->
√edBusAc˚ss
 = 0;

660 
ít
->
ö°r
 = 
TempIn°r
;

661 
ít
->
ac˚s£d
 = 0;

662 
ít
->
wrôeAÃódyD⁄e
 = 
wrôeProb
;

663 
cuºít
->
numOfWBE¡ry
++;

665 
TempIn°r
 = 0x1A2B3C4D;

666 if(
cuºít
->
WBèbÀHód
 !
NULL
)

668 
ít
->
√xt
 = 
cuºít
->
WBèbÀHód
;

669 
cuºít
->
WBèbÀHód
 = 
ít
;

670 
ít
->
√xt
->
¥ev
 =Ént;

671 
ít
->
¥ev
 = 
NULL
;

675 
cuºít
->
WBèbÀHód
 = 
ít
;

676 
cuºít
->
WBèbÀTaû
 = 
ít
;

677 
ít
->
√xt
 = 
NULL
;

678 
ít
->
¥ev
 = 
NULL
;

683 
nbyãs
)

686 i‡(
cmd
 =
Ród
)

688 i‡(
ít
)

691 *((
byã_t
 *)
p
Ë*((byã_à*)(&
ít
->
d©a
[0]));

697 *((
byã_t
 *)
p
Ë
	`MEM_READ_BYTE
(
mem
, 
addr
);

703 *((
byã_t
 *)(&
ít
->
d©a
[0])Ë*((byã_à*)
p
);

707 i‡(
cmd
 =
Ród
)

709 i‡(
ít
)

711 *((
hÆf_t
 *)
p
Ë*((hÆf_à*)(&
ít
->
d©a
[0]));

715 *((
hÆf_t
 *)
p
Ë
	`MEM_READ_HALF
(
mem
, 
addr
);

720 *((
hÆf_t
 *)&
ít
->
d©a
[0]Ë*((hÆf_à*)
p
);

724 i‡(
cmd
 =
Ród
)

726 i‡(
ít
)

728 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

732 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

737 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

741 i‡(
cmd
 =
Ród
)

743 i‡(
ít
)

745 *((
w‹d_t
 *)
p
Ë*((w‹d_à*)&
ít
->
d©a
[0]);

746 *(((
w‹d_t
 *)
p
)+1Ë*((w‹d_à*)&
ít
->
d©a
[1]);

750 *((
w‹d_t
 *)
p
Ë
	`MEM_READ_WORD
(
mem
, 
addr
);

751 *(((
w‹d_t
 *)
p
)+1Ë
	`MEM_READ_WORD
(
mem
, 
addr
 + (word_t));

756 *((
w‹d_t
 *)&
ít
->
d©a
[0]Ë*((w‹d_à*)
p
);

757 *((
w‹d_t
 *)&
ít
->
d©a
[1]Ë*(((w‹d_à*)
p
)+1);

761 
	`∑nic
("access sizeÇot supported in mis-speculative mode");

764 if(
cmd
 =
Ród
)

765 
	`mem_∑πül_ªad
(
mem
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

767  
md_Áu…_n⁄e
;

768 
	}
}

772 
	$mem_ªg_°©s
(
mem_t
 *
mem
,

773 
°©_sdb_t
 *
sdb
)

775 
buf
[512], 
buf1
[512];

777 
	`•rötf
(
buf
, "%s.∑ge_cou¡", 
mem
->
«me
);

778 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÇumber ofÖagesállocated",

779 &
mem
->
∑ge_cou¡
, mem->∑ge_cou¡, 
NULL
);

781 
	`•rötf
(
buf
, "%s.∑ge_mem", 
mem
->
«me
);

782 
	`•rötf
(
buf1
, "%s.∑ge_cou¡ * %d / 1024", 
mem
->
«me
, 
MD_PAGE_SIZE
);

783 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "total size of memoryÖagesállocated",

784 
buf1
, "%11.0fk");

786 
	`•rötf
(
buf
, "%s.±ab_mis£s", 
mem
->
«me
);

787 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "total firstÜevelÖageÅable misses",

788 &
mem
->
±ab_mis£s
, mem->±ab_mis£s, 
NULL
);

790 
	`•rötf
(
buf
, "%s.±ab_ac˚s£s", 
mem
->
«me
);

791 
	`°©_ªg_cou¡î
(
sdb
, 
buf
, "totalÖageÅableáccesses",

792 &
mem
->
±ab_ac˚s£s
, mem->±ab_ac˚s£s, 
NULL
);

794 
	`•rötf
(
buf
, "%s.±ab_miss_øã", 
mem
->
«me
);

795 
	`•rötf
(
buf1
, "%s.±ab_mis£†/ %s.±ab_ac˚s£s", 
mem
->
«me
, mem->name);

796 
	`°©_ªg_f‹muœ
(
sdb
, 
buf
, "fú°ÜevñÖagêèbÀ mis†øã", 
buf1
, 
NULL
);

797 
	}
}

801 
	$mem_öô
(
mem_t
 *
mem
)

803 
i
;

806 
i
=0; i < 
MEM_PTAB_SIZE
; i++)

807 
mem
->
±ab
[
i
] = 
NULL
;

809 
mem
->
∑ge_cou¡
 = 0;

810 
mem
->
±ab_mis£s
 = 0;

811 
mem
->
±ab_ac˚s£s
 = 0;

812 
	}
}

815 
md_Áu…_ty≥


816 
	$mem_dump
(
mem_t
 *
mem
,

817 
md_addr_t
 
addr
,

818 
Àn
,

819 
FILE
 *
°ªam
)

821 
d©a
;

822 
md_Áu…_ty≥
 
Áu…
;

824 i‡(!
°ªam
)

825 
°ªam
 = 
°dîr
;

827 
addr
 &~(
w‹d_t
);

828 
Àn
 = (À¿+ ((
w‹d_t
) - 1)) & ~(word_t);

829 
Àn
-- > 0)

831 
Áu…
 = 
	`mem_ac˚ss
(
mem
, 
Ród
, 
addr
, &
d©a
, (
w‹d_t
), mem->
thªadid
);

832 i‡(
Áu…
 !
md_Áu…_n⁄e
)

833  
Áu…
;

835 
	`myÂrötf
(
°ªam
, "0x%08p: %08x\n", 
addr
, 
d©a
);

836 
addr
 +(
w‹d_t
);

840  
md_Áu…_n⁄e
;

841 
	}
}

889 
md_Áu…_ty≥


890 
	$mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

891 
mem_t
 *
mem
,

892 
mem_cmd
 
cmd
,

893 
md_addr_t
 
addr
,

894 *
s
, 
thªadID
)

896 
n
 = 0;

897 
c
;

898 
md_Áu…_ty≥
 
Áu…
;

899 #i‡
DEFINE_WB


900 
	`ÊushWrôeBuf„r
(
thªadID
);

902 
cmd
)

904 
Ród
:

907 #i‡
DEFINE_WB


908 
Áu…
 = 
	`mem_ac˚ss_dr˘
(
mem
, 
Ród
, 
addr
++, &
c
, 1, 
thªadID
);

910 
Áu…
 = 
	`mem_‚
(
mem
, 
Ród
, 
addr
++, &
c
, 1, 
thªadID
);

912 i‡(
Áu…
 !
md_Áu…_n⁄e
)

913  
Áu…
;

914 *
s
++ = 
c
;

915 
n
++;

916 } 
c
);

919 
Wrôe
:

922 
c
 = *
s
++;

923 #i‡
DEFINE_WB


924 
Áu…
 = 
	`mem_ac˚ss_dr˘
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1, 
thªadID
);

926 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1, 
thªadID
);

928 i‡(
Áu…
 !
md_Áu…_n⁄e
)

929  
Áu…
;

930 
n
++;

931 } 
c
);

935  
md_Áu…_öã∫Æ
;

939  
md_Áu…_n⁄e
;

940 
	}
}

978 
md_Áu…_ty≥


979 
	$mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

980 
mem_t
 *
mem
,

981 
mem_cmd
 
cmd
,

982 
md_addr_t
 
addr
,

983 *
vp
,

984 
nbyãs
, 
thªadID
)

986 
byã_t
 *
p
 = 
vp
;

987 
md_Áu…_ty≥
 
Áu…
;

989 #i‡
DEFINE_WB


990 
	`ÊushWrôeBuf„r
(
thªadID
);

992 
nbyãs
-- > 0)

994 #i‡
DEFINE_WB


995 
Áu…
 = 
	`mem_ac˚ss_dr˘
(
mem
, 
cmd
, 
addr
++, 
p
++, 1, 
thªadID
);

997 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
++, 
p
++, 1, 
thªadID
);

999 i‡(
Áu…
 !
md_Áu…_n⁄e
)

1000  
Áu…
;

1002  
md_Áu…_n⁄e
;

1003 
	}
}

1035 
md_Áu…_ty≥


1036 
	$mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

1037 
mem_t
 *
mem
,

1038 
mem_cmd
 
cmd
,

1039 
md_addr_t
 
addr
,

1040 *
vp
,

1041 
nbyãs
, 
thªadID
)

1043 
byã_t
 *
p
 = 
vp
;

1044 
w‹ds
 = 
nbyãs
 >> 2;

1045 
md_Áu…_ty≥
 
Áu…
;

1047 #i‡
DEFINE_WB


1048 
	`ÊushWrôeBuf„r
(
thªadID
);

1050 
w‹ds
-- > 0)

1052 #i‡
DEFINE_WB


1053 
Áu…
 = 
	`mem_ac˚ss_dr˘
(
mem
, 
cmd
, 
addr
, 
p
, (
w‹d_t
), 
thªadID
);

1055 
Áu…
 = 
	`mem_‚
(
mem
, 
cmd
, 
addr
, 
p
, (
w‹d_t
), 
thªadID
);

1057 i‡(
Áu…
 !
md_Áu…_n⁄e
)

1058  
Áu…
;

1060 
addr
 +(
w‹d_t
);

1061 
p
 +(
w‹d_t
);

1063  
md_Áu…_n⁄e
;

1064 
	}
}

1098 
md_Áu…_ty≥


1099 
	$mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

1100 
mem_t
 *
mem
,

1101 
md_addr_t
 
addr
,

1102 
nbyãs
, 
thªadID
)

1104 
byã_t
 
c
 = 0;

1105 
md_Áu…_ty≥
 
Áu…
;

1107 #i‡
DEFINE_WB


1108 
	`ÊushWrôeBuf„r
(
thªadID
);

1112 
nbyãs
-- > 0)

1114 #i‡
DEFINE_WB


1115 
Áu…
 = 
	`mem_ac˚ss_dr˘
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1, 
thªadID
);

1117 
Áu…
 = 
	`mem_‚
(
mem
, 
Wrôe
, 
addr
++, &
c
, 1, 
thªadID
);

1119 i‡(
Áu…
 !
md_Áu…_n⁄e
)

1120  
Áu…
;

1122  
md_Áu…_n⁄e
;

1123 
	}
}

1184 
SS_ADDR_TYPE
 
mem_brk_poöt
;

1187 
SS_ADDR_TYPE
 
mem_°ack_mö
;

1194 
	#MEM_TABLE_SIZE
 0x8000

	)

1196 #i‚de‡
HIDE_MEM_TABLE_DEF


1198 *
mem_èbÀ
[
MEM_TABLE_SIZE
];

1202 
	#MEM_BLOCK_SIZE
 0x10000

	)

1206 (
	gaddr
 >
ld_ãxt_ba£
 && 
addr
 < (ld_ãxt_ba£+
ld_ãxt_size
)

1207 && 
cmd
 =
Ród
)

1209 || (
addr
 >
ld_d©a_ba£
 &&ádd∏< 
ld_°ack_ba£
)))

1210 
Áèl
("ac˚s†îr‹: segmíèti⁄ viﬁ©i⁄,ádd∏0x%08p", 
addr
);

1213 i‡(
	gaddr
 > 
	gmem_brk_poöt
 &&ádd∏< 
	gmem_°ack_mö
)

1214 
	gmem_°ack_mö
 = 
addr
;

1218 
mem_vÆid
(
mem_t
 *
mem
,

1219 
mem_cmd
 
cmd
,

1220 
md_addr_t
 
addr
,

1221 
nbyãs
,

1222 
de˛¨e
);

1226 
	$mem_vÆid
(
mem_cmd
 
cmd
,

1227 
SS_ADDR_TYPE
 
addr
,

1228 
nbyãs
,

1229 
de˛¨e
)

1231 *
îr_°r
 = 
NULL
;

1234 i‡((
nbyãs
 & (nbyãs-1)Ë!0 || (
addr
 & (nbytes-1)) != 0)

1236 
îr_°r
 = "bad size orálignment";

1240 (
addr
 >
ld_ãxt_ba£
 &&ádd∏< (ld_ãxt_ba£+
ld_ãxt_size
)

1241 && 
cmd
 =
Ród
)

1243 || (
addr
 >
ld_d©a_ba£
 &&ádd∏< 
ld_°ack_ba£
)))

1245 
îr_°r
 = "segmentation violation";

1249 i‡(
addr
 > 
mem_brk_poöt
 &&ádd∏< 
mem_°ack_mö
)

1250 
mem_°ack_mö
 = 
addr
;

1252 i‡(!
de˛¨e
)

1253  
îr_°r
;

1254 i‡(
îr_°r
 !
NULL
)

1255 
	`Áèl
(
îr_°r
);

1257  
NULL
;

1258 
	}
}

1262 
	$mem_öô1
()

1266 
mem_brk_poöt
 = 
	`ROUND_UP
(
ld_d©a_ba£
 + 
ld_d©a_size
, 
SS_PAGE_SIZE
);

1269 
mem_°ack_mö
 = 
ªgs_R
[
SS_STACK_REGNO
];

1270 
	}
}

	@memory.h

103 #i‚de‡
MEMORY_H


104 
	#MEMORY_H


	)

106 
	~<°dio.h
>

108 
	~"ho°.h
"

109 
	~"misc.h
"

110 
	~"machöe.h
"

111 
	~"›ti⁄s.h
"

112 
	~"°©s.h
"

114 
	~"ªgs.h
"

116 
	~"smt.h
"

117 
	~"MTA.h
"

120 
	#MEM_PTAB_SIZE
 (32*1024)

	)

121 
	#MEM_LOG_PTAB_SIZE
 15

	)

122 
	#DEFINE_WB
 1

	)

123 
	#TESTWB
 0

	)

124 
	#WBSIZE
 16

	)

127 
	smem_±e_t
 {

128 
mem_±e_t
 *
	m√xt
;

129 
md_addr_t
 
	mèg
;

130 
byã_t
 *
	m∑ge
;

134 
	smem_t
 {

136 #ifde‡
SMT_SS


137 
	mthªadid
;

139 *
	m«me
;

140 
mem_±e_t
 *
	m±ab
[
MEM_PTAB_SIZE
];

143 
cou¡î_t
 
	m∑ge_cou¡
;

144 
cou¡î_t
 
	m±ab_mis£s
;

145 
cou¡î_t
 
	m±ab_ac˚s£s
;

149 
	emem_cmd
 {

150 
	mRód
,

151 
	mWrôe


157 
	gmd_Áu…_ty≥


158 (*
	tmem_ac˚ss_‚
)(
	tmem_t
 *
	tmem
,

159 
	tmem_cmd
 
	tcmd
,

160 
	tmd_addr_t
 
	taddr
,

161 *
	tp
,

162 
	tnbyãs
, 
	tthªadID
);

169 
	#MEM_PTAB_SET
(
ADDR
Ë\

	)

170 (((
	gADDR
Ë>> 
	gMD_LOG_PAGE_SIZE
Ë& (
	gMEM_PTAB_SIZE
 - 1))

173 
	#MEM_PTAB_TAG
(
ADDR
Ë\

	)

174 ((
	gADDR
Ë>> (
	gMD_LOG_PAGE_SIZE
 + 
	gMEM_LOG_PTAB_SIZE
))

177 
	#MEM_PTE_ADDR
(
PTE
, 
IDX
Ë\

	)

178 (((
	gPTE
)->
	gèg
 << (
	gMD_LOG_PAGE_SIZE
 + 
	gMEM_LOG_PTAB_SIZE
)) \

179 | ((
	gIDX
Ë<< 
	gMD_LOG_PAGE_SIZE
))

182 
	#MEM_PAGE
(
MEM
, 
ADDR
Ë\

	)

184 ((
	gMEM
)->
	g±ab
[
MEM_PTAB_SET
(
ADDR
)] \

185 && (
	gMEM
)->
	g±ab
[
MEM_PTAB_SET
(
ADDR
)]->
	gèg
 =
MEM_PTAB_TAG
(ADDR)) \

187 (
MEM
)->
±ab_ac˚s£s
++, \

188 (
	gMEM
)->
	g±ab
[
MEM_PTAB_SET
(
ADDR
)]->
	g∑ge
) \

190 
mem_å™¶©e
((
MEM
), (
ADDR
))))

193 
	#MEM_OFFSET
(
ADDR
Ë((ADDRË& (
MD_PAGE_SIZE
 - 1))

	)

196 
	#MEM_TICKLE
(
MEM
, 
ADDR
Ë\

	)

197 (!
MEM_PAGE
(
MEM
, 
ADDR
) \

199 
mem_√w∑ge
(
MEM
, 
ADDR
)) \

203 
	#MEM_FORALL
(
MEM
, 
ITER
, 
PTE
Ë\

	)

204 (
	gITER
)=0; (ITERË< 
	gMEM_PTAB_SIZE
; (ITER)++) \

205 (
	gPTE
)=(
MEM
)->
±ab
[
i
]; (PTEË!
NULL
; (PTE)=(
PTE
)->
√xt
)

214 
	#MEM_READ
(
MEM
, 
ADDR
, 
TYPE
Ë\

	)

215 (
MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)) \

216 ? *((
	gTYPE
 *)(
MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
MEM_OFFSET
(ADDR))) \

220 
	#__UNCHK_MEM_READ
(
MEM
, 
ADDR
, 
TYPE
Ë\

	)

221 (*((
	gTYPE
 *)(
MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	$MEM_OFFSET
(
ADDR
))))

225 
	#MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
Ë\

	)

226 (
	`MEM_TICKLE
(
MEM
, (
md_addr_t
)(
ADDR
)), \

227 *((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

230 
	#__UNCHK_MEM_WRITE
(
MEM
, 
ADDR
, 
TYPE
, 
VAL
Ë\

	)

231 (*((
TYPE
 *)(
	`MEM_PAGE
(
MEM
, (
md_addr_t
)(
ADDR
)Ë+ 
	`MEM_OFFSET
(ADDR))Ë(
VAL
))

233 #i‡
PROCESS_MODEL


235 
	#MEM_READ_BYTE
(
MEM
, 
ADDR
Ë\

	)

236 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
byã_t
) \

237 : 
	$MEM_READ
(
MEM
, 
ADDR
, 
byã_t
) )

239 
	#MEM_READ_SBYTE
(
MEM
, 
ADDR
Ë\

	)

240 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sbyã_t
) \

241 : 
	$MEM_READ
(
MEM
, 
ADDR
, 
sbyã_t
) )

243 
	#MEM_READ_HALF
(
MEM
, 
ADDR
Ë\

	)

244 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MD_SWAPH
(
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
hÆf_t
))\

245 : 
	`MD_SWAPH
(
	$MEM_READ
(
MEM
, 
ADDR
, 
hÆf_t
)) )

247 
	#MEM_READ_SHALF
(
MEM
, 
ADDR
Ë\

	)

248 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MD_SWAPH
(
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
shÆf_t
))\

249 : 
	`MD_SWAPH
(
	$MEM_READ
(
MEM
, 
ADDR
, 
shÆf_t
)) )

251 
	#MEM_READ_WORD
(
MEM
, 
ADDR
Ë\

	)

252 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MD_SWAPW
(
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
w‹d_t
))\

253 : 
	`MD_SWAPW
(
	$MEM_READ
(
MEM
, 
ADDR
, 
w‹d_t
)) )

255 
	#MEM_READ_SWORD
(
MEM
, 
ADDR
Ë\

	)

256 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MD_SWAPW
(
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sw‹d_t
))\

257 : 
	`MD_SWAPW
(
	$MEM_READ
(
MEM
, 
ADDR
, 
sw‹d_t
)) )

259 #ifde‡
HOST_HAS_QWORD


260 
	#MEM_READ_QWORD
(
MEM
, 
ADDR
Ë\

	)

261 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MD_SWAPQ
(
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
qw‹d_t
))\

262 : 
	`MD_SWAPQ
(
	$MEM_READ
(
MEM
, 
ADDR
, 
qw‹d_t
)) )

264 
	#MEM_READ_SQWORD
(
MEM
, 
ADDR
Ë\

	)

265 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MD_SWAPQ
(
	`MEM_READ
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sqw‹d_t
))\

266 : 
	`MD_SWAPQ
(
	$MEM_READ
(
MEM
, 
ADDR
, 
sqw‹d_t
)) )

269 
	#MEM_WRITE_BYTE
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

270 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
byã_t
, 
VAL
) \

271 : 
	$MEM_WRITE
(
MEM
, 
ADDR
, 
byã_t
, 
VAL
))

273 
	#MEM_WRITE_SBYTE
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

274 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sbyã_t
, 
VAL
) \

275 : 
	$MEM_WRITE
(
MEM
, 
ADDR
, 
sbyã_t
, 
VAL
) )

277 
	#MEM_WRITE_HALF
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

278 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
hÆf_t
, 
	`MD_SWAPH
(
VAL
)) \

279 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
hÆf_t
, 
	$MD_SWAPH
(
VAL
)) )

281 
	#MEM_WRITE_SHALF
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

282 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
shÆf_t
, 
	`MD_SWAPH
(
VAL
)) \

283 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
shÆf_t
, 
	$MD_SWAPH
(
VAL
)) )

285 
	#MEM_WRITE_WORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

286 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
w‹d_t
, 
	`MD_SWAPW
(
VAL
)) \

287 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
w‹d_t
, 
	$MD_SWAPW
(
VAL
)) )

289 
	#MEM_WRITE_SWORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

290 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sw‹d_t
, 
	`MD_SWAPW
(
VAL
)) \

291 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sw‹d_t
, 
	$MD_SWAPW
(
VAL
)) )

293 
	#MEM_WRITE_SFLOAT
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

294 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sÊﬂt_t
, 
	`MD_SWAPW
(
VAL
)) \

295 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sÊﬂt_t
, 
	$MD_SWAPW
(
VAL
)) )

297 
	#MEM_WRITE_DFLOAT
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

298 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
dÊﬂt_t
, 
	`MD_SWAPQ
(
VAL
)) \

299 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
dÊﬂt_t
, 
	$MD_SWAPQ
(
VAL
)) )

302 #ifde‡
HOST_HAS_QWORD


303 
	#MEM_WRITE_QWORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

304 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
qw‹d_t
, 
	`MD_SWAPQ
(
VAL
)) \

305 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
qw‹d_t
, 
	$MD_SWAPQ
(
VAL
)) )

307 
	#MEM_WRITE_SQWORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

308 (
	`checkF‹Sh¨edAddr
(
ADDR
Ë? 
	`MEM_WRITE
(
thec⁄ãxts
[thec⁄ãxts[
MEM
->
thªadid
]->
ma°îid
]->
mem
, ADDR, 
sqw‹d_t
, 
	`MD_SWAPQ
(
VAL
)) \

309 : 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sqw‹d_t
, 
	$MD_SWAPQ
(
VAL
)) )

315 
	#MEM_READ_BYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
byã_t
)

	)

316 
	#MEM_READ_SBYTE
(
MEM
, 
ADDR
Ë
	`MEM_READ
(MEM, ADDR, 
sbyã_t
)

	)

317 
	#MEM_READ_HALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
hÆf_t
))

	)

318 
	#MEM_READ_SHALF
(
MEM
, 
ADDR
Ë
	`MD_SWAPH
(
	`MEM_READ
(MEM, ADDR, 
shÆf_t
))

	)

319 
	#MEM_READ_WORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
w‹d_t
))

	)

320 
	#MEM_READ_SWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPW
(
	`MEM_READ
(MEM, ADDR, 
sw‹d_t
))

	)

322 #ifde‡
HOST_HAS_QWORD


323 
	#MEM_READ_QWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
qw‹d_t
))

	)

324 
	#MEM_READ_SQWORD
(
MEM
, 
ADDR
Ë
	`MD_SWAPQ
(
	`MEM_READ
(MEM, ADDR, 
sqw‹d_t
))

	)

327 
	#MEM_WRITE_BYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
byã_t
, VAL)

	)

331 
	#MEM_WRITE_SBYTE
(
MEM
, 
ADDR
, 
VAL
Ë
	`MEM_WRITE
(MEM, ADDR, 
sbyã_t
, VAL)

	)

332 
	#MEM_WRITE_HALF
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

333 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
hÆf_t
, 
	$MD_SWAPH
(
VAL
))

334 
	#MEM_WRITE_SHALF
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

335 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
shÆf_t
, 
	$MD_SWAPH
(
VAL
))

336 
	#MEM_WRITE_WORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

337 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
w‹d_t
, 
	$MD_SWAPW
(
VAL
))

338 
	#MEM_WRITE_SWORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

339 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sw‹d_t
, 
	$MD_SWAPW
(
VAL
))

340 
	#MEM_WRITE_SFLOAT
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

341 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sÊﬂt_t
, 
	$MD_SWAPW
(
VAL
))

342 
	#MEM_WRITE_DFLOAT
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

343 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
dÊﬂt_t
, 
	$MD_SWAPQ
(
VAL
))

345 #ifde‡
HOST_HAS_QWORD


346 
	#MEM_WRITE_QWORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

347 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
qw‹d_t
, 
	$MD_SWAPQ
(
VAL
))

348 
	#MEM_WRITE_SQWORD
(
MEM
, 
ADDR
, 
VAL
Ë\

	)

349 
	`MEM_WRITE
(
MEM
, 
ADDR
, 
sqw‹d_t
, 
	$MD_SWAPQ
(
VAL
))

393 
mem_t
 *

394 
	`mem_¸óã
(*
«me
);

397 
byã_t
 *

398 
	`mem_å™¶©e
(
mem_t
 *
mem
,

399 
md_addr_t
 
addr
);

403 
	`mem_√w∑ge
(
mem_t
 *
mem
,

404 
md_addr_t
 
addr
);

409 
md_Áu…_ty≥


410 
	`mem_ac˚ss
(
mem_t
 *
mem
,

411 
mem_cmd
 
cmd
,

412 
md_addr_t
 
addr
,

413 *
vp
,

414 
nbyãs
, 
thªadID
);

418 
	`mem_ªg_°©s
(
mem_t
 *
mem
,

419 
°©_sdb_t
 *
sdb
);

423 
	`mem_öô
(
mem_t
 *
mem
);

426 
md_Áu…_ty≥


427 
	`mem_dump
(
mem_t
 *
mem
,

428 
md_addr_t
 
addr
,

429 
Àn
,

430 
FILE
 *
°ªam
);

443 
md_Áu…_ty≥


444 
	`mem_°r˝y
(
mem_ac˚ss_‚
 
mem_‚
,

445 
mem_t
 *
mem
,

446 
mem_cmd
 
cmd
,

447 
md_addr_t
 
addr
,

448 *
s
, 
thªadID
);

451 
md_Áu…_ty≥


452 
	`mem_bc›y
(
mem_ac˚ss_‚
 
mem_‚
,

453 
mem_t
 *
mem
,

454 
mem_cmd
 
cmd
,

455 
md_addr_t
 
addr
,

456 *
vp
,

457 
nbyãs
, 
thªadID
);

462 
md_Áu…_ty≥


463 
	`mem_bc›y4
(
mem_ac˚ss_‚
 
mem_‚
,

464 
mem_t
 *
mem
,

465 
mem_cmd
 
cmd
,

466 
md_addr_t
 
addr
,

467 *
vp
,

468 
nbyãs
, 
thªadID
);

471 
md_Áu…_ty≥


472 
	`mem_bzîo
(
mem_ac˚ss_‚
 
mem_‚
,

473 
mem_t
 *
mem
,

474 
md_addr_t
 
addr
,

475 
nbyãs
, 
thªadID
);

	@misc.c

109 
	~<°dio.h
>

110 
	~<°dlib.h
>

111 
	~<°d¨g.h
>

112 
	~<°rög.h
>

113 
	~<˘y≥.h
>

114 
	~<î∫o.h
>

116 #i‡
deföed
(
__Æpha
Ë|| deföed(
löux
)

117 
	~<uni°d.h
>

120 
	~"ho°.h
"

121 
	~"misc.h
"

122 
	~"machöe.h
"

123 
	g¥ogøm_com∂ëe
 = 0;

125 
	gvîbo£
 = 
FALSE
;

127 #ifde‡
DEBUG


129 
	gdebuggög
 = 
FALSE
;

134 (*
hook_‚
)(
FILE
 *
°ªam
Ë
NULL
;

138 
	`Áèl_hook
((*
‚
)(
FILE
 *
°ªam
))

140 
hook_‚
 = 
‚
;

141 
	}
}

144 #ifde‡
__GNUC__


146 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

149 
	$Áèl
(*
fmt
, ...)

152 
va_li°
 
v
;

153 
	`va_°¨t
(
v
, 
fmt
);

155 
	`Ârötf
(
°dîr
, "fatal: ");

156 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

157 #ifde‡
__GNUC__


160 i‡(
vîbo£
)

162 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

164 
	`Ârötf
(
°dîr
, "\n");

165 i‡(
hook_‚
)

166 (*
hook_‚
)(
°dîr
);

167 
	`exô
(1);

168 
	}
}

171 #ifde‡
__GNUC__


173 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

176 
	$∑nic
(*
fmt
, ...)

179 
va_li°
 
v
;

180 
	`va_°¨t
(
v
, 
fmt
);

182 
	`Ârötf
(
°dîr
, "panic: ");

183 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

184 #ifde‡
__GNUC__


185 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

187 
	`Ârötf
(
°dîr
, "\n");

188 i‡(
hook_‚
)

189 (*
hook_‚
)(
°dîr
);

190 
	`ab‹t
();

191 
	}
}

194 #ifde‡
__GNUC__


196 
	$_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

199 
	$w¨n
(*
fmt
, ...)

202 
va_li°
 
v
;

203 
	`va_°¨t
(
v
, 
fmt
);

205 
	`Ârötf
(
°dîr
, "warning: ");

206 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

207 #ifde‡
__GNUC__


208 i‡(
vîbo£
)

209 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

211 
	`Ârötf
(
°dîr
, "\n");

212 
	}
}

215 #ifde‡
__GNUC__


217 
	$_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

220 
	$öfo
(*
fmt
, ...)

223 
va_li°
 
v
;

224 
	`va_°¨t
(
v
, 
fmt
);

226 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

227 #ifde‡
__GNUC__


228 i‡(
vîbo£
)

229 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

231 
	`Ârötf
(
°dîr
, "\n");

232 
	}
}

234 #ifde‡
DEBUG


236 #ifde‡
__GNUC__


238 
	$_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

241 
	$debug
(*
fmt
, ...)

244 
va_li°
 
v
;

245 
	`va_°¨t
(
v
, 
fmt
);

247 i‡(
debuggög
)

249 
	`Ârötf
(
°dîr
, "debug: ");

250 
	`myvÂrötf
(
°dîr
, 
fmt
, 
v
);

251 #ifde‡
__GNUC__


252 
	`Ârötf
(
°dîr
, " [%s:%s,Üöê%d]", 
func
, 
fûe
, 
löe
);

254 
	`Ârötf
(
°dîr
, "\n");

256 
	}
}

262 
	$my§™d
(
£ed
)

264 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

265 
	`§™d
(
£ed
);

267 
	`§™dom
(
£ed
);

269 
	}
}

273 
	$myønd
()

275 #i‡!
	`deföed
(
__Æpha
Ë&& !deföed(
löux
)

276 
	`øndom
();

279 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
Ë|| deföed(
_MSC_VER
)

280  
	`ønd
();

282  
	`øndom
();

284 
	}
}

289 
	$my°rdup
(*
s
)

291 *
buf
;

293 i‡(!(
buf
 = (*)
	`mÆloc
(
	`°æí
(
s
)+1)))

294  
NULL
;

295 
	`°r˝y
(
buf
, 
s
);

296  
buf
;

297 
	}
}

301 
	$my°ºchr
(*
s
, 
c
)

303 *
πnvÆ
 = 0;

306 i‡(*
s
 =
c
)

307 
πnvÆ
 = 
s
;

308 } *
s
++);

310  
πnvÆ
;

311 
	}
}

316 
	$my°ricmp
(*
s1
, *
s2
)

318 
u1
, 
u2
;

322 
u1
 = ()*
s1
++; u1 = 
	`tﬁowî
(u1);

323 
u2
 = ()*
s2
++; u2 = 
	`tﬁowî
(u2);

325 i‡(
u1
 !
u2
)

326  
u1
 - 
u2
;

327 i‡(
u1
 == '\0')

330 
	}
}

335 
	$gëc‹e
(
nbyãs
)

337  
	`ˇŒoc
(
nbyãs
, 1);

340 #i‡!
	`deföed
(
PURIFY
Ë&& !deföed(
_MSC_VER
)

341 *
p
 = (*)
	`sbrk
(
nbyãs
);

343 i‡(
p
 == (*)-1)

344  
NULL
;

347 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
_MSC_VER
)

348 
	`mem£t
(
p
, '\0', 
nbyãs
);

350 
	`bzîo
(
p
, 
nbyãs
);

352  
p
;

354  
	`ˇŒoc
(
nbyãs
, 1);

357 
	}
}

361 
	$log_ba£2
(
n
)

363 
powî
 = 0;

365 i‡(
n
 <= 0 || (n & (n-1)) != 0)

366 
	`∑nic
("log2() only works forÖositiveÖower ofÅwo values");

368 
n
 >>= 1)

369 
powî
++;

371  
powî
;

372 
	}
}

376 
	$ñ≠£d_time
(
£c
)

378 
t°r
[256];

379 
ãmp
[256];

381 i‡(
£c
 <= 0)

384 
t°r
[0] = '\0';

387 i‡(
£c
 >= 86400)

389 
	`•rötf
(
ãmp
, "%ldD ", 
£c
/86400);

390 
	`°rˇt
(
t°r
, 
ãmp
);

391 
£c
 = sec % 86400;

394 i‡(
£c
 >= 3600)

396 
	`•rötf
(
ãmp
, "%ldh ", 
£c
/3600);

397 
	`°rˇt
(
t°r
, 
ãmp
);

398 
£c
 = sec % 3600;

401 i‡(
£c
 >= 60)

403 
	`•rötf
(
ãmp
, "%ldm ", 
£c
/60);

404 
	`°rˇt
(
t°r
, 
ãmp
);

405 
£c
 = sec % 60;

408 i‡(
£c
 >= 1)

410 
	`•rötf
(
ãmp
, "%ld†", 
£c
);

411 
	`°rˇt
(
t°r
, 
ãmp
);

413 
t°r
[
	`°æí
(tstr)-1] = '\0';

414  
t°r
;

415 
	}
}

423 
	$exåa˘l
(
w‹d
,

424 
pos
,

425 
num
)

427 (((Ë
w‹d
 >> (
pos
 + 1 - 
num
)) & ~(~0 <<Çum));

428 
	}
}

430 
	#PUT
(
p
, 
n
Ë\

	)

432 
	g¬
, 
	gcc
; \

434 
	g¬
 = 0;Ç¿< 
	gn
;Çn++) \

436 
	gcc
 = *(
p
+
¬
); \

437 *
	gobuf
++ = 
cc
; \

441 
	#PAD
(
s
, 
n
Ë\

	)

443 
	g¬
, 
	gcc
; \

445 
	gcc
 = *
s
; \

446 
	g¬
 = 
n
;Çn > 0;Çn--) \

447 *
	gobuf
++ = 
cc
; \

450 #ifde‡
HOST_HAS_QWORD


451 
	#HIBITL
 
	`LL
(0x8000000000000000)

	)

452 
sqw‹d_t
 
	t¶¨geöt_t
;

453 
qw‹d_t
 
	tœrgeöt_t
;

455 
	#HIBITL
 0x80000000L

	)

456 
sw‹d_t
 
	t¶¨geöt_t
;

457 
w‹d_t
 
	tœrgeöt_t
;

461 
	$_lowdigô
(
¶¨geöt_t
 *
vÆ±r
)

468 
lowbô
 = ()(*
vÆ±r
 & 1);

469 
¶¨geöt_t
 
vÆue
 = (*
vÆ±r
 >> 1Ë& ~
HIBITL
;

471 *
vÆ±r
 = 
vÆue
 / 5;

472  ()(
vÆue
 % 5 * 2 + 
lowbô
 + '0');

473 
	}
}

477 
	$myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
)

479 
_bœnks
[] = " ";

480 
_zî€s
[] = "00000000000000000000";

483 
cou¡
 = 0;

486 
fcode
;

489 
width
, 
¥ec
 = 0;

492 
lzîo
 = 0;

495 
¥efixÀngth
;

498 
ŸhîÀngth
;

501 
	#PADZERO
 0x0001

	)

502 
	#RZERO
 0x0002

	)

503 
	#LZERO
 0x0004

	)

504 
	#DOTSEEN
 0x0008

	)

505 
	#LENGTH
 0x0010

	)

506 
Êagw‹d
;

509 
	#MAXDIGS
 22

	)

512 *
bp
, *
p
;

515 
k
, 
Ãadix
, 
mødix
;

518 *
¥efix
 = 
NULL
;

521 
buf
[
MAXDIGS
*4], 
buf1
[MAXDIGS*4];

524 *
èb
;

527 
¶¨geöt_t
 
vÆ
;

530 
dÊﬂt_t
 
fvÆ
;

534 
n
;

536 (
fcode
 = *
f‹m©
) != '\0' && fcode != '%')

538 *
obuf
++ = 
fcode
;

539 
f‹m©
++;

540 
cou¡
++;

543 i‡(
fcode
 == '\0')

546 *
obuf
 = '\0';

547  
obuf
;

556 
width
 = 
¥efixÀngth
 = 
ŸhîÀngth
 = 
Êagw‹d
 = 0;

557 
f‹m©
++;

559 
ch¨swôch
:

560 
fcode
 = *
f‹m©
++)

563 
Êagw‹d
 |
PADZERO
;

574 
num
 = 
fcode
 - '0';

575 
	`isdigô
(
fcode
 = *
f‹m©
))

577 
num
 =Çum * 10 + 
fcode
 - '0';

578 
f‹m©
++;

580 i‡(
Êagw‹d
 & 
DOTSEEN
)

581 
¥ec
 = 
num
;

583 
width
 = 
num
;

584 
ch¨swôch
;

588 
Êagw‹d
 |
DOTSEEN
;

589 
ch¨swôch
;

592 
Êagw‹d
 |
LENGTH
;

593 
ch¨swôch
;

596 #ifde‡
HOST_HAS_QWORD


597 
Êagw‹d
 |
LENGTH
;

600 
Êagw‹d
 |
DOTSEEN
;

601 i‡(!
width
)

602 
width
 = 12;

603 
¥ec
 = 0;

604 
¥o˚ss_Êﬂt
;

609 i‡(
Êagw‹d
 & 
LENGTH
)

610 
vÆ
 = 
	`va_¨g
(
v
, 
¶¨geöt_t
);

612 
vÆ
 = (
¶¨geöt_t
)
	`va_¨g
(
v
, 
sw‹d_t
);

615 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

618 i‡(
vÆ
 < 0)

620 
¥efix
 = "-";

621 
¥efixÀngth
 = 1;

623 i‡(
vÆ
 !(
¶¨geöt_t
)
HIBITL
)

624 
vÆ
 = -val;

628 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

632 
decimÆ
:

634 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

636 i‡(
qvÆ
 <= 9)

637 *--
bp
 = ()
qvÆ
 + '0';

641 
n
 = ()
qvÆ
;

642 
qvÆ
 /= 10;

643 *--
bp
 = 
n
 - ()
qvÆ
 * 10 + '0';

645 
qvÆ
 > 9);

646 *--
bp
 = ()
qvÆ
 + '0';

653 i‡(
Êagw‹d
 & 
LENGTH
)

654 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

656 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

659 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

661 i‡(
vÆ
 & 
HIBITL
)

662 *--
bp
 = 
	`_lowdigô
(&
vÆ
);

663 
decimÆ
;

666 
mødix
 = 7;

667 
Ãadix
 = 2;

668 
fixed
;

671 i‡((
md_addr_t
) > 4)

672 
Êagw‹d
 |
LENGTH
;

677 
mødix
 = 15;

678 
Ãadix
 = 3;

680 
fixed
:

682 i‡(
Êagw‹d
 & 
LENGTH
)

683 
vÆ
 = 
	`va_¨g
(
v
, 
œrgeöt_t
);

685 
vÆ
 = (
œrgeöt_t
)
	`va_¨g
(
v
, 
w‹d_t
);

688 
èb
 = (
fcode
 == 'X') ? "0123456789ABCDEF" : "0123456789abcdef";

691 
p
 = 
bp
 = 
buf
 + 
MAXDIGS
;

694 
¶¨geöt_t
 
qvÆ
 = 
vÆ
;

696 i‡(
qvÆ
 == 0)

698 
ŸhîÀngth
 = 
lzîo
 = 1;

699 
Êagw‹d
 |
LZERO
;

703 *--
bp
 = 
èb
[
qvÆ
 & 
mødix
];

704 
qvÆ
 = ((qvÆ >> 1Ë& ~
HIBITL
Ë>> 
Ãadix
;

705 } 
qvÆ
 != 0);

709 #i‚de‡
HOST_HAS_QWORD


710 
¥o˚ss_Êﬂt
:

714 i‡(
Êagw‹d
 & 
DOTSEEN
)

715 
	`•rötf
(
buf1
, "%%%d.%df", 
width
, 
¥ec
);

716 i‡(
width
)

717 
	`•rötf
(
buf1
, "%%%df", 
width
);

719 
	`•rötf
(
buf1
, "%%f");

722 
fvÆ
 = 
	`va_¨g
(
v
, 
dÊﬂt_t
);

725 
	`•rötf
(
buf
, 
buf1
, 
fvÆ
);

726 
bp
 = 
buf
;

727 
p
 = 
bp
 + 
	`°æí
(bp);

731 
bp
 = 
	`va_¨g
(
v
, *);

732 i‡(
bp
 =
NULL
)

733 
bp
 = "(null)";

734 
p
 = 
bp
 + 
	`°æí
(bp);

738 
buf
[0] = 
fcode
;

739 
c_mîge
;

742 
buf
[0] = 
	`va_¨g
(
v
, );

743 
c_mîge
:

744 
p
 = (
bp
 = &
buf
[0]) + 1;

750 
f‹m©
--;

755 
k
 = (
n
 = 
p
 - 
bp
Ë+ 
¥efixÀngth
 + 
ŸhîÀngth
;

756 i‡(
width
 <
k
)

757 
cou¡
 +
k
;

760 
cou¡
 +
width
;

764 i‡(
Êagw‹d
 & 
PADZERO
)

766 i‡(!(
Êagw‹d
 & 
LZERO
))

768 
Êagw‹d
 |
LZERO
;

769 
lzîo
 = 
width
 - 
k
;

772 
lzîo
 +
width
 - 
k
;

775 
k
 = 
width
;

780 
	`PAD
(
_bœnks
, 
width
 - 
k
);

785 i‡(
¥efixÀngth
 != 0)

787 
	`PUT
(
¥efix
, 
¥efixÀngth
);

791 i‡(
Êagw‹d
 & 
LZERO
)

793 
	`PAD
(
_zî€s
, 
lzîo
);

797 i‡(
n
 > 0)

799 
	`PUT
(
bp
, 
n
);

802 
	}
}

806 
	$my•rötf
(*
obuf
, *
f‹m©
, ...)

809 
va_li°
 
v
;

810 
	`va_°¨t
(
v
, 
f‹m©
);

812  
	`myv•rötf
(
obuf
, 
f‹m©
, 
v
);

813 
	}
}

817 
	$myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
)

820 
buf
[2048];

822 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

823 
	`Âuts
(
buf
, 
°ªam
);

824 
	}
}

828 
	$myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...)

831 
buf
[2048];

834 
va_li°
 
v
;

835 
	`va_°¨t
(
v
, 
f‹m©
);

837 
	`myv•rötf
(
buf
, 
f‹m©
, 
v
);

838 
	`Âuts
(
buf
, 
°ªam
);

839 
	}
}

841 #ifde‡
HOST_HAS_QWORD


843 
	#LL_MAX
 
	`LL
(9223372036854775807)

	)

844 
	#LL_MIN
 (-
LL_MAX
 - 1)

	)

845 
	#ULL_MAX
 (
	`ULL
(9223372036854775807Ë* ULL(2Ë+ 1)

	)

848 
sqw‹d_t


849 
	$my©osq
(*
≈å
, **
ídp
, 
ba£
)

851 *
s
, *
ßve
;

852 
√g©ive
, 
ovîÊow
;

853 
sqw‹d_t
 
cutoff
, 
cuéim
, 
i
;

854 
c
;

855 
î∫o
;

857 i‡(!
≈å
 || !*nptr)

858 
	`∑nic
("strtoll()Öassedá NULL string");

860 
s
 = 
≈å
;

863 
	`is•a˚
(()(*
s
)))

864 ++
s
;

865 i‡(*
s
 == '\0')

866 
noc⁄v
;

868 i‡(
ba£
 == 0)

870 i‡(
s
[0] ='0' && 
	`touµî
(()s[1]) == 'X')

871 
ba£
 = 16;

873 
ba£
 = 10;

876 i‡(
ba£
 <= 1 || base > 36)

877 
	`∑nic
("bogu†ba£: %d", 
ba£
);

880 i‡(*
s
 == '-')

882 
√g©ive
 = 1;

883 ++
s
;

885 i‡(*
s
 == '+')

887 
√g©ive
 = 0;

888 ++
s
;

891 
√g©ive
 = 0;

893 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(()s[1]) == 'X')

894 
s
 += 2;

897 
ßve
 = 
s
;

899 
cutoff
 = 
LL_MAX
 / (Ë
ba£
;

900 
cuéim
 = 
LL_MAX
 % (Ë
ba£
;

902 
ovîÊow
 = 0;

903 
i
 = 0;

904 
c
 = *
s
; c != '\0'; c = *++s)

906 i‡(
	`isdigô
 (
c
))

907 
c
 -= '0';

908 i‡(
	`ißÕha
 (
c
))

909 
c
 = 
	`touµî
(c) - 'A' + 10;

912 i‡(
c
 >
ba£
)

916 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

917 
ovîÊow
 = 1;

920 
i
 *(Ë
ba£
;

921 
i
 +
c
;

926 i‡(
s
 =
ßve
)

927 
noc⁄v
;

931 i‡(
ídp
 !
NULL
)

932 *
ídp
 = (*Ë
s
;

934 i‡(
ovîÊow
)

936 
î∫o
 = 
ERANGE
;

937  
√g©ive
 ? 
LL_MIN
 : 
LL_MAX
;

941 
î∫o
 = 0;

944  (
√g©ive
 ? -
i
 : i);

947 
noc⁄v
:

949 i‡(
ídp
 !
NULL
)

950 *
ídp
 = (*Ë
≈å
;

952 
	}
}

955 
qw‹d_t


956 
	$my©oq
(*
≈å
, **
ídp
, 
ba£
)

958 *
s
, *
ßve
;

959 
ovîÊow
;

960 
qw‹d_t
 
cutoff
, 
cuéim
, 
i
;

961 
c
;

962 
î∫o
;

964 i‡(!
≈å
 || !*nptr)

965 
	`∑nic
("strtoll()Öassedá NULL string");

967 
s
 = 
≈å
;

970 
	`is•a˚
(()(*
s
)))

971 ++
s
;

972 i‡(*
s
 == '\0')

973 
noc⁄v
;

975 i‡(
ba£
 == 0)

977 i‡(
s
[0] ='0' && 
	`touµî
(()s[1]) == 'X')

978 
ba£
 = 16;

980 
ba£
 = 10;

983 i‡(
ba£
 <= 1 || base > 36)

984 
	`∑nic
("bogu†ba£: %d", 
ba£
);

986 i‡(
ba£
 =16 && 
s
[0] ='0' && 
	`touµî
(()s[1]) == 'X')

987 
s
 += 2;

990 
ßve
 = 
s
;

992 
cutoff
 = 
ULL_MAX
 / (Ë
ba£
;

993 
cuéim
 = 
ULL_MAX
 % (Ë
ba£
;

995 
ovîÊow
 = 0;

996 
i
 = 0;

997 
c
 = *
s
; c != '\0'; c = *++s)

999 i‡(
	`isdigô
 (
c
))

1000 
c
 -= '0';

1001 i‡(
	`ißÕha
 (
c
))

1002 
c
 = 
	`touµî
(c) - 'A' + 10;

1005 i‡(
c
 >
ba£
)

1009 i‡(
i
 > 
cutoff
 || (ò=cutof‡&& 
c
 > 
cuéim
))

1010 
ovîÊow
 = 1;

1013 
i
 *(Ë
ba£
;

1014 
i
 +
c
;

1019 i‡(
s
 =
ßve
)

1020 
noc⁄v
;

1024 i‡(
ídp
 !
NULL
)

1025 *
ídp
 = (*Ë
s
;

1027 i‡(
ovîÊow
)

1029 
î∫o
 = 
ERANGE
;

1030  
ULL_MAX
;

1034 
î∫o
 = 0;

1037  
i
;

1040 
noc⁄v
:

1042 i‡(
ídp
 !
NULL
)

1043 *
ídp
 = (*Ë
≈å
;

1045 
	}
}

1047 #ifde‡
TESTIT


1049 
	$ã°ô
(*
s
)

1051 
buf
[128];

1052 
qw‹d_t
 
qvÆ
;

1054 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 10);

1056 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

1057 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1058 
	`myqtﬂ
(
qvÆ
, "%16x", 
buf
, 
NULL
);

1059 
	`Ârötf
(
°dîr
, "16x: %s\n", 
buf
);

1060 
	`myqtﬂ
(
qvÆ
, "%016x", 
buf
, 
NULL
);

1061 
	`Ârötf
(
°dîr
, "016x: %s\n", 
buf
);

1062 
	`myqtﬂ
(
qvÆ
, "0x%016x", 
buf
, 
NULL
);

1063 
	`Ârötf
(
°dîr
, "0x016x: %s\n", 
buf
);

1064 
	`myqtﬂ
(
qvÆ
, "0x%08x", 
buf
, 
NULL
);

1065 
	`Ârötf
(
°dîr
, "0x08x: %s\n", 
buf
);

1067 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1068 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1069 
	`myqtﬂ
(
qvÆ
, "%22d", 
buf
, 
NULL
);

1070 
	`Ârötf
(
°dîr
, "22d: %s\n", 
buf
);

1071 
	`myqtﬂ
(
qvÆ
, "%022d", 
buf
, 
NULL
);

1072 
	`Ârötf
(
°dîr
, "022d: %s\n", 
buf
);

1074 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1075 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1077 
	`myqtﬂ
(
qvÆ
, "%o", 
buf
, 
NULL
);

1078 
	`Ârötf
(
°dîr
, "o: %s\n", 
buf
);

1079 
	}
}

1082 
	$°e°ô
(*
s
)

1084 
buf
[128];

1085 
sqw‹d_t
 
sqvÆ
;

1087 
sqvÆ
 = 
	`my©osq
(
s
, 
NULL
, 10);

1089 
	`myqtﬂ
(
sqvÆ
, "%x", 
buf
, 
NULL
);

1090 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1092 
	`myqtﬂ
(
sqvÆ
, "%d", 
buf
, 
NULL
);

1093 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1095 
	`myqtﬂ
(
sqvÆ
, "%u", 
buf
, 
NULL
);

1096 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1097 
	}
}

1100 
	$xã°ô
(*
s
)

1102 
buf
[128];

1103 
qw‹d_t
 
qvÆ
;

1105 
qvÆ
 = 
	`my©oq
(
s
, 
NULL
, 16);

1107 
	`myqtﬂ
(
qvÆ
, "%x", 
buf
, 
NULL
);

1108 
	`Ârötf
(
°dîr
, "x: %s\n", 
buf
);

1110 
	`myqtﬂ
(
qvÆ
, "%d", 
buf
, 
NULL
);

1111 
	`Ârötf
(
°dîr
, "d: %s\n", 
buf
);

1113 
	`myqtﬂ
(
qvÆ
, "%u", 
buf
, 
NULL
);

1114 
	`Ârötf
(
°dîr
, "u: %s\n", 
buf
);

1115 
	}
}

1120 #ifde‡
GZIP_PATH


1123 *
	mty≥
;

1124 *
	mext
;

1125 *
	mcmd
;

1126 } 
	ggzcmds
[] = {

1138 
FILE
 *

1139 
	$gz›í
(*
‚ame
, *
ty≥
)

1141 
i
;

1142 *
cmd
 = 
NULL
, *
ext
;

1143 
FILE
 *
fd
;

1144 
°r
[2048];

1147 
ext
 = 
	`my°ºchr
(
‚ame
, '.');

1150 i‡(
ext
 !
NULL
 && *ext != '\0')

1152 
i
=0; i < 
	`N_ELT
(
gzcmds
); i++)

1154 i‡(!
	`°rcmp
(
gzcmds
[
i
].
ty≥
,Åy≥Ë&& !°rcmp(gzcmds[i].
ext
,Éxt))

1156 
cmd
 = 
gzcmds
[
i
].cmd;

1162 i‡(!
cmd
)

1165 
fd
 = 
	`f›í
(
‚ame
, 
ty≥
);

1170 
	`•rötf
(
°r
, 
cmd
, 
GZIP_PATH
, 
‚ame
);

1171 
fd
 = 
	`p›í
(
°r
, 
ty≥
);

1174  
fd
;

1175 
	}
}

1179 
	$gz˛o£
(
FILE
 *
fd
)

1182 i‡(
	`p˛o£
(
fd
) == -1)

1183 
	`f˛o£
(
fd
);

1184 
	}
}

1188 
FILE
 *

1189 
	$gz›í
(*
‚ame
, *
ty≥
)

1191  
	`f›í
(
‚ame
, 
ty≥
);

1192 
	}
}

1195 
	$gz˛o£
(
FILE
 *
fd
)

1197 
	`f˛o£
(
fd
);

1198 
	}
}

1204 
	#POLYNOMIAL
 0x04c11db7L

	)

1206 
	g¸c_öô
 = 
FALSE
;

1207 
	g¸c_èbÀ
[256];

1211 
	$¸c_gíèb
()

1213 
i
, 
j
;

1214 
w‹d_t
 
¸c_accum
;

1216 
i
=0; i < 256; i++)

1218 
¸c_accum
 = (()
i
 << 24);

1219 
j
=0; j < 8; j++)

1221 i‡(
¸c_accum
 & 0x80000000L)

1222 
¸c_accum
 = (¸c_accum << 1Ë^ 
POLYNOMIAL
;

1224 
¸c_accum
 = (crc_accum << 1);

1226 
¸c_èbÀ
[
i
] = 
¸c_accum
;

1229 
	}
}

1232 
w‹d_t


1233 
	$¸c
(
w‹d_t
 
¸c_accum
, w‹d_à
d©a
)

1235 
i
, 
j
;

1237 i‡(!
¸c_öô
)

1239 
	`¸c_gíèb
();

1240 
¸c_öô
 = 
TRUE
;

1243 
j
=0; j < (
w‹d_t
); j++)

1245 
i
 = (()(
¸c_accum
 >> 24Ë^ (
d©a
 >> (
j
*8))) & 0xff;

1246 
¸c_accum
 = (¸c_accum << 8Ë^ 
¸c_èbÀ
[
i
];

1248  
¸c_accum
;

1249 
	}
}

	@misc.h

114 #i‚de‡
MISC_H


115 
	#MISC_H


	)

117 
	~<°dio.h
>

118 
	~<°dlib.h
>

119 
	~<°d¨g.h
>

120 
	~<°rög.h
>

121 
	~<sys/ty≥s.h
>

122 
	~"ho°.h
"

125 #i‚de‡
TRUE


126 
	#TRUE
 1

	)

128 #i‚de‡
FALSE


129 
	#FALSE
 0

	)

133 #i‚de‡
max2


134 
	#max2
(
a
, 
b
Ë((◊Ë< (b)Ë? (bË: (a))

	)

136 #i‚de‡
mö2


137 
	#mö2
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

139 #i‚de‡
MAX


140 
	#MAX
(
a
, 
b
Ë((◊Ë< (b)Ë? (bË: (a))

	)

142 #i‚de‡
MIN


143 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

148 
	#LLHIGH
(
L
Ë(()(((L)>>32Ë& 0xffffffff))

	)

149 
	#LLLOW
(
L
Ë(()((LË& 0xffffffff))

	)

152 
	#N_ELT
(
ARR
Ë((ARR)/((ARR)[0]))

	)

155 
	#ROUND_UP
(
N
,
ALIGN
Ë(((NË+ ((ALIGN)-1)Ë& ~((ALIGN)-1))

	)

156 
	#ROUND_DOWN
(
N
,
ALIGN
Ë((NË& ~((ALIGN)-1))

	)

159 
vîbo£
;

160 
¥ogøm_com∂ëe
;

162 #ifde‡
DEBUG


164 
debuggög
;

169 
Áèl_hook
((*
hook_‚
)(
FILE
 *
°ªam
));

171 #ifde‡
__GNUC__


173 
	#Áèl
(
fmt
, 
¨gs
...Ë\

	)

174 
	`_Áèl
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

177 
	$_Áèl
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

178 
	`__©åibuã__
 ((
n‹ëu∫
));

181 
	`Áèl
(*
fmt
, ...);

184 #ifde‡
__GNUC__


186 
	#∑nic
(
fmt
, 
¨gs
...Ë\

	)

187 
	`_∑nic
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

190 
	$_∑nic
(*
fûe
, *
func
, 
löe
, *
fmt
, ...)

191 
	`__©åibuã__
 ((
n‹ëu∫
));

194 
	`∑nic
(*
fmt
, ...);

197 #ifde‡
__GNUC__


199 
	#w¨n
(
fmt
, 
¨gs
...Ë\

	)

200 
	`_w¨n
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

203 
	`_w¨n
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

206 
	`w¨n
(*
fmt
, ...);

209 #ifde‡
__GNUC__


211 
	#öfo
(
fmt
, 
¨gs
...Ë\

	)

212 
	`_öfo
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
)

215 
	`_öfo
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

218 
	`öfo
(*
fmt
, ...);

221 #ifde‡
DEBUG


223 #ifde‡
__GNUC__


225 
	#debug
(
fmt
, 
¨gs
...Ë\

	)

227 i‡(
debuggög
) \

228 
	`_debug
(
__FILE__
, 
__FUNCTION__
, 
__LINE__
, 
fmt
, ## 
¨gs
); \

229 
	}
} 0)

232 
	`_debug
(*
fûe
, *
func
, 
löe
, *
fmt
, ...);

235 
	`debug
(*
fmt
, ...);

240 #ifde‡
__GNUC__


241 
	#debug
(
fmt
, 
¨gs
...)

	)

244 
	$debug
(*
fmt
, ...Ë{
	}
}

251 
my§™d
(
£ed
);

254 
myønd
();

259 
my°rdup
(*
s
);

263 
my°ºchr
(*
s
, 
c
);

268 
my°ricmp
(*
s1
, *
s2
);

272 *
gëc‹e
(
nbyãs
);

275 
log_ba£2
(
n
);

278 *
ñ≠£d_time
(
£c
);

286 
exåa˘l
(
w‹d
,

287 
pos
,

288 
num
);

290 #i‡
deföed
(
•¨c
Ë&& !deföed(
__svr4__
)

291 
	#°πoul
 
°πﬁ


	)

297 *
myv•rötf
(*
obuf
, *
f‹m©
, 
va_li°
 
v
);

300 *
my•rötf
(*
obuf
, *
f‹m©
, ...);

303 
myvÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, 
va_li°
 
v
);

306 
myÂrötf
(
FILE
 *
°ªam
, *
f‹m©
, ...);

308 #ifde‡
HOST_HAS_QWORD


311 
sqw‹d_t
 
my©osq
(*
≈å
, **
ídp
, 
ba£
);

314 
qw‹d_t
 
my©oq
(*
≈å
, **
ídp
, 
ba£
);

320 
FILE
 *
gz›í
(*
‚ame
, *
ty≥
);

323 
gz˛o£
(
FILE
 *
fd
);

326 
w‹d_t
 
¸c
(w‹d_à
¸c_accum
, w‹d_à
d©a
);

334 
	mbrk_poöt
;

335 
	mmm≠_íd
;

337 } 
	tAÕhaSy°emSèã
;

	@mystats.c

1 
	~"my°©s.h
"

4 
	$°©s_öô
()

6 
addr_èbÀ
.
cou¡
 = 0;

7 
	}
}

9 
	$öÊight_°©s
(
ty≥
, 
ªad
, 
wrôe
)

11 
ac˚ss_num
 = 
ªad
 + 
wrôe
;

12 
löe_öÊight_ac˚s£s
 ++;

13 
ty≥
)

15 
PRIVATE
:

16 
öÊight_¥iv©e
 ++;

17 if(
ac˚ss_num
 < 100)

18 
Cache_dy«mic_acc_¥iv©e
[
ac˚ss_num
] ++;

20 
Cache_dy«mic_acc_¥iv©e
[100] ++;

22 
MIGRATE
:

23 
öÊight_migøã
 ++;

24 if(
ac˚ss_num
 < 100)

25 
Cache_dy«mic_acc_migøã
[
ac˚ss_num
] ++;

27 
Cache_dy«mic_acc_migøã
[100] ++;

29 
SHARED_READ_ONLY
:

30 
öÊight_sh¨ed_⁄ly
 ++;

31 if(
ac˚ss_num
 < 100)

32 
Cache_dy«mic_acc_sh¨ed
[
ac˚ss_num
] ++;

34 
Cache_dy«mic_acc_sh¨ed
[100] ++;

36 
SHARED_READ_WRITE
:

37 
öÊight_sh¨ed_rw
 ++;

38 if(
ac˚ss_num
 < 100)

39 
Cache_dy«mic_acc_§w
[
ac˚ss_num
] ++;

41 
Cache_dy«mic_acc_§w
[100] ++;

44 
	`∑nic
("canÇot be here\n");

48 
	}
}

50 
	$°©s_Æloˇã
(
md_addr_t
 
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
)

52 if(
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
vÆid
)

53 
	`∑nic
("allocate wrongÉntry:áddress is different!\n");

54 if(
ªad
 !0 || 
wrôe
 !0 || 
w‹d
 != 0)

56 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
vÆid
 = 1;

57 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
addr
 =áddr;

58 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
ªad
 =Ñead;

59 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
wrôe
 = write;

60 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
w‹d
 = word;

61 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
u£
 ++;

62 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
ty≥
 =Åype;

63 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
ow√r
 = owner;

64 if(
ty≥
 =
PRIVATE
)

66 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
¥iv©e_ac˚ss
 = 
ªad
 + 
wrôe
;

67 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
¥iv©e_ac˚ss_r
 = 
ªad
;

68 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
¥iv©e_ac˚ss_w
 = 
wrôe
;

69 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
¥iv©e_cou¡
 ++;

71 if(
ty≥
 =
SHARED_READ_WRITE
)

73 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
§w_ac˚ss
 = 
ªad
 + 
wrôe
;

74 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
§w_ac˚ss_r
 = 
ªad
;

75 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
§w_ac˚ss_w
 = 
wrôe
;

76 
addr_èbÀ
.
mem
[addr_èbÀ.
cou¡
].
§w_cou¡
 ++;

78 
addr_èbÀ
.
cou¡
 ++;

79 
	`öÊight_°©s
(
ty≥
, 
ªad
, 
wrôe
);

80 
löe_ac˚s£s
 ++;

82 if(
addr_èbÀ
.
cou¡
 >= 1048576)

84 
	`°©s_cﬁÀ˘
();

85 
	`∑nic
("Overflow ináddressÅable\n");

87 
	}
}

88 
	$°©s_upd©e
(
md_addr_t
 
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
, 
hô_cou¡
)

90 
√w_ty≥
;

91 if(
addr_èbÀ
.
mem
[
hô_cou¡
].
addr
 !=áddr)

92 
	`∑nic
("Update wrongÉntry:áddress is different!\n");

93 if(
ªad
 !0 || 
wrôe
 !0 || 
w‹d
 != 0)

95 
addr_èbÀ
.
mem
[
hô_cou¡
].
ªad
 +=Ñead;

96 
addr_èbÀ
.
mem
[
hô_cou¡
].
wrôe
 += write;

97 
addr_èbÀ
.
mem
[
hô_cou¡
].
w‹d
 += word;

98 
addr_èbÀ
.
mem
[
hô_cou¡
].
u£
 ++;

99 
√w_ty≥
 = 
	`°©s_ty≥_check
(
addr_èbÀ
.
mem
[
hô_cou¡
].
ty≥
,Åy≥,áddr_èbÀ.mem[hô_cou¡].
ow√r
, owner);

100 if(
ty≥
 =
PRIVATE
)

102 
addr_èbÀ
.
mem
[
hô_cou¡
].
¥iv©e_ac˚ss
 +
ªad
 + 
wrôe
;

103 
addr_èbÀ
.
mem
[
hô_cou¡
].
¥iv©e_ac˚ss_r
 +
ªad
;

104 
addr_èbÀ
.
mem
[
hô_cou¡
].
¥iv©e_ac˚ss_w
 +
wrôe
;

105 
addr_èbÀ
.
mem
[
hô_cou¡
].
¥iv©e_cou¡
 ++;

107 if(
ty≥
 =
SHARED_READ_WRITE
)

109 
addr_èbÀ
.
mem
[
hô_cou¡
].
§w_ac˚ss
 +
ªad
 + 
wrôe
;

110 
addr_èbÀ
.
mem
[
hô_cou¡
].
§w_ac˚ss_r
 +
ªad
;

111 
addr_èbÀ
.
mem
[
hô_cou¡
].
§w_ac˚ss_w
 +
wrôe
;

112 
addr_èbÀ
.
mem
[
hô_cou¡
].
§w_cou¡
 ++;

114 
addr_èbÀ
.
mem
[
hô_cou¡
].
ty≥
 = 
√w_ty≥
;

115 
addr_èbÀ
.
mem
[
hô_cou¡
].
ow√r
 = owner;

116 
	`öÊight_°©s
(
ty≥
, 
ªad
, 
wrôe
);

118 
	}
}

120 
	$°©s_ty≥_check
(
ﬁd_ty≥
, 
ty≥
, 
ﬁd_ow√r
, 
ow√r
)

122 
√w_ty≥
;

123 if(
ﬁd_ty≥
 =
SHARED_READ_WRITE
 || 
ty≥
 == SHARED_READ_WRITE)

125 
√w_ty≥
 = 
SHARED_READ_WRITE
;

126 if(
ﬁd_ty≥
 =
PRIVATE
)

127 
¥iv©e_to_sh¨ed_rw
 ++;

128 if(
ty≥
 =
PRIVATE
)

129 
sh¨ed_rw_to_¥iv©e
 ++;

130 if(
ﬁd_ty≥
 =
SHARED_READ_WRITE
 && 
ty≥
 == SHARED_READ_WRITE)

131 
sh¨ed_rw_c⁄°™t
 ++;

133 if(
ﬁd_ty≥
 =
SHARED_READ_ONLY
 || 
ty≥
 == SHARED_READ_ONLY)

134 
√w_ty≥
 = 
SHARED_READ_ONLY
;

135 if(
ﬁd_ty≥
 =
MIGRATE
 || 
ﬁd_ow√r
 !
ow√r
)

136 
√w_ty≥
 = 
MIGRATE
;

138 
√w_ty≥
 = 
PRIVATE
;

139 if(
√w_ty≥
 !
ﬁd_ty≥
)

140 
ty≥_ch™ged
 ++;

141  
√w_ty≥
;

142 
	}
}

144 
	$°©s_com∑ª
(
md_addr_t
 
addr
)

146 
i
, 
hô_cou¡
 = -1;

147 
i
=0;i<
addr_èbÀ
.
cou¡
;i++)

149 if(
addr_èbÀ
.
mem
[
i
].
addr
 ==áddr)

151 
hô_cou¡
 = 
i
;

155  
hô_cou¡
;

156 
	}
}

158 
	$°©s_do
(
md_addr_t
 
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
)

160 
hô_cou¡
;

161 
hô_cou¡
 = 
	`°©s_com∑ª
(
addr
);

162 if(
hô_cou¡
 == -1)

163 
	`°©s_Æloˇã
(
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
);

165 
	`°©s_upd©e
(
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
, 
hô_cou¡
);

166 
	}
}

168 
	$°©s_cﬁÀ˘
()

170 
i
=0, 
c
, 
wc
;

171 
ac˚ss
 = 0, 
w‹d_u£
, 
¥iv©e_ac˚ss
 = 0, 
§w_ac˚ss
 = 0, 
¥iv©e_ac˚ss_r
 = 0, 
¥iv©e_ac˚ss_w
 = 0;

172 
§w_ac˚ss_r
 = 0, 
§w_ac˚ss_w
 = 0;

173 
i
=0;i<
addr_èbÀ
.
cou¡
;i++)

175 
ac˚ss
 = (()
addr_èbÀ
.
mem
[
i
].
ªad
 + (Ôddr_èbÀ.mem[i].
wrôe
)/((Ôddr_èbÀ.mem[i].
u£
);

176 if(
addr_èbÀ
.
mem
[
i
].
¥iv©e_cou¡
)

178 
¥iv©e_ac˚ss
 = (()
addr_èbÀ
.
mem
[
i
].¥iv©e_ac˚ss)/((Ôddr_èbÀ.mem[i].
¥iv©e_cou¡
);

179 
¥iv©e_ac˚ss_r
 = (()
addr_èbÀ
.
mem
[
i
].¥iv©e_ac˚ss_r)/((Ôddr_èbÀ.mem[i].
¥iv©e_cou¡
);

180 
¥iv©e_ac˚ss_w
 = (()
addr_èbÀ
.
mem
[
i
].¥iv©e_ac˚ss_w)/((Ôddr_èbÀ.mem[i].
¥iv©e_cou¡
);

182 if(
addr_èbÀ
.
mem
[
i
].
§w_cou¡
)

184 
§w_ac˚ss
 = (()
addr_èbÀ
.
mem
[
i
].§w_ac˚ss)/((Ôddr_èbÀ.mem[i].
§w_cou¡
);

185 
§w_ac˚ss_r
 = (()
addr_èbÀ
.
mem
[
i
].§w_ac˚ss_r)/((Ôddr_èbÀ.mem[i].
§w_cou¡
);

186 
§w_ac˚ss_w
 = (()
addr_èbÀ
.
mem
[
i
].§w_ac˚ss_w)/((Ôddr_èbÀ.mem[i].
§w_cou¡
);

188 
c
 = ()(
ac˚ss
) - 1;

189 if(
c
<100)

190 
Cache_ac˚ss
[
c
] ++;

192 
Cache_ac˚ss
[100] ++;

193 
w‹d_u£
 = ()
addr_èbÀ
.
mem
[
i
].
w‹d
/((Ôddr_èbÀ.mem[i].
u£
);

194 
wc
 = ()(
w‹d_u£
) - 1;

195 if(
wc
<100)

196 
w‹d_utûiz©i⁄
[
wc
] ++;

198 
w‹d_utûiz©i⁄
[100] ++;

199 
addr_èbÀ
.
mem
[
i
].
ty≥
)

201 
PRIVATE
:

202 if(
c
<100)

203 
Cache_ac˚ss_p
[
c
] ++;

205 
Cache_ac˚ss_p
[100] ++;

206 if(
wc
<100)

207 
w‹d_utûiz©i⁄_p
[
wc
] ++;

209 
w‹d_utûiz©i⁄_p
[100] ++;

210 
¥iv©e_cou¡
 ++;

211 
¥iv©e_dy«mic_ac˚s£s
 +
addr_èbÀ
.
mem
[
i
].
u£
;

213 
MIGRATE
:

214 if(
c
<100)

215 
Cache_ac˚ss_m
[
c
] ++;

217 
Cache_ac˚ss_m
[100] ++;

218 if(
wc
<100)

219 
w‹d_utûiz©i⁄_m
[
wc
] ++;

221 
w‹d_utûiz©i⁄_m
[100] ++;

222 
migøã_cou¡
 ++;

223 
migøã_dy«mic_ac˚s£s
 +
addr_èbÀ
.
mem
[
i
].
u£
;

225 
SHARED_READ_ONLY
:

226 if(
c
<100)

227 
Cache_ac˚ss_s
[
c
] ++;

229 
Cache_ac˚ss_s
[100] ++;

230 if(
wc
<100)

231 
w‹d_utûiz©i⁄_s
[
wc
] ++;

233 
w‹d_utûiz©i⁄_s
[100] ++;

234 
sh¨ed_cou¡
 ++;

235 
sh¨ed_dy«mic_ac˚s£s
 +
addr_èbÀ
.
mem
[
i
].
u£
;

237 
SHARED_READ_WRITE
:

238 if(
c
<100)

239 
Cache_ac˚ss_§w
[
c
] ++;

241 
Cache_ac˚ss_§w
[100] ++;

242 if(
wc
<100)

243 
w‹d_utûiz©i⁄_§w
[
wc
] ++;

245 
w‹d_utûiz©i⁄_§w
[100] ++;

246 
sh¨ed_rw_cou¡
 ++;

247 
sh¨edrw_dy«mic_ac˚s£s
 +
addr_èbÀ
.
mem
[
i
].
u£
;

248 if(
addr_èbÀ
.
mem
[
i
].
¥iv©e_cou¡
)

250 
pc
 = ()(
¥iv©e_ac˚ss
) - 1;

251 if(
pc
<100)

252 
Cache_acc_§w_¥iv©e
[
pc
] ++;

254 
Cache_acc_§w_¥iv©e
[100] ++;

255 
pc_r
 = ()(
¥iv©e_ac˚ss_r
) - 1;

256 if(
pc
<100)

257 
Cache_acc_§w_¥i_r
[
pc_r
] ++;

259 
Cache_acc_§w_¥i_r
[100] ++;

260 
pc_w
 = ()(
¥iv©e_ac˚ss_w
) - 1;

261 if(
pc
<100)

262 
Cache_acc_§w_¥i_w
[
pc_w
] ++;

264 
Cache_acc_§w_¥i_w
[100] ++;

266 if(
addr_èbÀ
.
mem
[
i
].
§w_cou¡
)

268 
§wc
 = ()(
§w_ac˚ss
) - 1;

269 if(
§wc
<100)

270 
Cache_acc_§w_§w
[
§wc
] ++;

272 
Cache_acc_§w_§w
[100] ++;

273 
§wc_r
 = ()(
§w_ac˚ss_r
) - 1;

274 if(
§wc
<100)

275 
Cache_acc_§w_r
[
§wc_r
] ++;

277 
Cache_acc_§w_r
[100] ++;

278 
§wc_w
 = ()(
§w_ac˚ss_w
) - 1;

279 if(
§wc
<100)

280 
Cache_acc_§w_w
[
§wc_w
] ++;

282 
Cache_acc_§w_w
[100] ++;

286 if(
c
<100)

287 
Cache_ac˚ss_p
[
c
] ++;

289 
Cache_ac˚ss_p
[100] ++;

290 if(
wc
<100)

291 
w‹d_utûiz©i⁄_p
[
wc
] ++;

293 
w‹d_utûiz©i⁄_p
[100] ++;

294 
¥iv©e_Ÿhîs
 ++;

298 
	}
}

	@mystats.h

1 
	~<°dio.h
>

2 
	~"machöe.h
"

5 
	#PRIVATE
 1

	)

6 
	#MIGRATE
 2

	)

7 
	#SHARED_READ_ONLY
 3

	)

8 
	#SHARED_READ_WRITE
 4

	)

9 
	sADDR_TABLE_ENTRY
{

10 
md_addr_t
 
	maddr
;

11 
	mvÆid
;

12 
	mªad
;

13 
	mwrôe
;

14 
	m¥iv©e_ac˚ss
;

15 
	m¥iv©e_ac˚ss_r
;

16 
	m¥iv©e_ac˚ss_w
;

17 
	m§w_ac˚ss
;

18 
	m§w_ac˚ss_r
;

19 
	m§w_ac˚ss_w
;

20 
	m¥iv©e_cou¡
;

21 
	m§w_cou¡
;

22 
	mw‹d
;

23 
	mu£
;

24 
	mty≥
;

25 
	mow√r
;

26 } 
	taddr_èbÀ_íåy
;

28 
	sADDR_TABLE
{

29 
addr_èbÀ_íåy
 
	mmem
[1048576];

30 
cou¡î_t
 
	mcou¡
;

31 }
	gaddr_èbÀ
;

33 
cou¡î_t
 
	gCache_ac˚ss
[101];

34 
cou¡î_t
 
	gw‹d_utûiz©i⁄
[101];

35 
cou¡î_t
 
	gCache_ac˚ss_p
[101];

36 
cou¡î_t
 
	gw‹d_utûiz©i⁄_p
[101];

37 
cou¡î_t
 
	gCache_ac˚ss_m
[101];

38 
cou¡î_t
 
	gw‹d_utûiz©i⁄_m
[101];

39 
cou¡î_t
 
	gCache_ac˚ss_s
[101];

40 
cou¡î_t
 
	gw‹d_utûiz©i⁄_s
[101];

41 
cou¡î_t
 
	gCache_ac˚ss_§w
[101];

42 
cou¡î_t
 
	gw‹d_utûiz©i⁄_§w
[101];

43 
cou¡î_t
 
	gCache_acc_§w_¥iv©e
[101];

44 
cou¡î_t
 
	gCache_acc_§w_§w
[101];

45 
cou¡î_t
 
	gCache_acc_§w_¥i_r
[101];

46 
cou¡î_t
 
	gCache_acc_§w_¥i_w
[101];

47 
cou¡î_t
 
	gCache_acc_§w_r
[101];

48 
cou¡î_t
 
	gCache_acc_§w_w
[101];

49 
cou¡î_t
 
	gCache_dy«mic_acc_¥iv©e
[101];

50 
cou¡î_t
 
	gCache_dy«mic_acc_migøã
[101];

51 
cou¡î_t
 
	gCache_dy«mic_acc_sh¨ed
[101];

52 
cou¡î_t
 
	gCache_dy«mic_acc_§w
[101];

53 
cou¡î_t
 
	g¥iv©e_cou¡
;

54 
cou¡î_t
 
	gmigøã_cou¡
;

55 
cou¡î_t
 
	gsh¨ed_cou¡
;

56 
cou¡î_t
 
	gsh¨ed_rw_cou¡
;

57 
cou¡î_t
 
	g¥iv©e_Ÿhîs
;

58 
cou¡î_t
 
	g¥iv©e_dy«mic_ac˚s£s
;

59 
cou¡î_t
 
	gmigøã_dy«mic_ac˚s£s
;

60 
cou¡î_t
 
	gsh¨ed_dy«mic_ac˚s£s
;

61 
cou¡î_t
 
	gsh¨edrw_dy«mic_ac˚s£s
;

62 
cou¡î_t
 
	glöe_öÊight_ac˚s£s
;

63 
cou¡î_t
 
	glöe_ac˚s£s
;

64 
cou¡î_t
 
	gty≥_ch™ged
;

65 
cou¡î_t
 
	g¥iv©e_to_sh¨ed_rw
;

66 
cou¡î_t
 
	gsh¨ed_rw_to_¥iv©e
;

67 
cou¡î_t
 
	göÊight_¥iv©e
;

68 
cou¡î_t
 
	göÊight_migøã
;

69 
cou¡î_t
 
	göÊight_sh¨ed_rw
;

70 
cou¡î_t
 
	göÊight_sh¨ed_⁄ly
;

71 
cou¡î_t
 
	gsh¨ed_rw_c⁄°™t
;

74 
°©s_Æloˇã
(
md_addr_t
 
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
);

75 
°©s_upd©e
(
md_addr_t
 
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
, 
hô_cou¡
);

76 
°©s_ty≥_check
(
ﬁd_ty≥
, 
ty≥
, 
ﬁd_ow√r
, 
ow√r
);

77 
°©s_com∑ª
(
md_addr_t
 
addr
);

78 
°©s_do
(
md_addr_t
 
addr
, 
ªad
, 
wrôe
, 
w‹d
, 
ty≥
, 
ow√r
);

79 
°©s_cﬁÀ˘
();

	@network.c

44 
	~"hódîs.h
"

46 
	~"smt.h
"

47 #ifde‡
SMT_SS


48 
	~"c⁄ãxt.h
"

52 
cou¡î_t
 
	gtŸÆ_L2_MEM_L2Pª„tch_Req
;

53 
cou¡î_t
 
	gtŸÆ_L2_MEM_D©a_Miss_Req
;

54 
cou¡î_t
 
	gtŸÆ_L2_MEM_In°_Miss_Req
;

55 
cou¡î_t
 
	gtŸÆ_MEM_L2_D©a_Paylﬂd
;

56 
cou¡î_t
 
	gtŸÆ_MEM_L2_In°_Paylﬂd
;

57 
cou¡î_t
 
	gtŸÆ_L2_MEM_D©a_Paylﬂd
;

58 
cou¡î_t
 
	gtŸÆ_L1_L2_In°_Miss_Req
;

59 
cou¡î_t
 
	gtŸÆ_L2_L1_In°_Paylﬂd
;

60 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Ród_Miss_Req
;

61 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Ród_Miss_Paylﬂd
;

62 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Ród_InvÆid
;

63 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Ród_InvÆid_Ack
;

64 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Ród_InvÆid_Paylﬂd
;

65 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Wrôe_Miss_Req
;

66 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Wrôe_Miss_Paylﬂd
;

67 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_L2ª∂a˚d_InvÆid
;

68 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Wrôe_InvÆid
;

69 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Ack
;

70 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Wrôe_InvÆid_Ack
;

71 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Paylﬂd
;

72 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Wrôe_InvÆid_Paylﬂd
;

73 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Wrôe_Upd©e
;

74 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Wrôe_Upd©e_Ack
;

75 
cou¡î_t
 
	gtŸÆ_L1_L2_D©a_Wrôeback_Paylﬂd
;

76 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Vîify_Ack
;

77 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Vîify_Pœylﬂd
;

78 
cou¡î_t
 
	gtŸÆ_L2_L1_D©a_Pª„tch_Pœylﬂd_PPP
;

79 
cou¡î_t
 
	gtŸÆ_L1_L2_Ród_Vîify_Req
;

80 
cou¡î_t
 
	gtŸÆ_L1_L2_Wrôe_Vîify_Req
;

81 
cou¡î_t
 
	gtŸÆ_L1_L2_shr_éb_miss_Req
;

82 
cou¡î_t
 
	gtŸÆ_L1_L2_shr_éb_wrôe_back_Req
;

83 
cou¡î_t
 
	gtŸÆ_L1_L2_shr_éb_§_ªcovîy_Req
;

84 
cou¡î_t
 
	gtŸÆ_L1_L2_shr_éb_upd©e_¥_ack_Req
;

85 
cou¡î_t
 
	gtŸÆ_L1_L2_shr_éb_upd©e_pw_ack_Req
;

86 
cou¡î_t
 
	gtŸÆ_L1_L2_shr_éb_ªcovîy_ack_Req
;

87 
cou¡î_t
 
	gtŸÆ_L1_L2_dú_éb_ªfûl_Req
;

88 
cou¡î_t
 
	gtŸÆ_L1_L2_dú_éb_upd©e_Req
;

89 
cou¡î_t
 
	gtŸÆ_L1_L2_dú_éb_ªcovîy_Req
;

90 
cou¡î_t
 
	gtŸÆ_L2_L1_dú_shr_ªad
;

91 
cou¡î_t
 
	gtŸÆ_L1_L2_ack_shr_ªad
;

92 
cou¡î_t
 
	gtŸÆ_L1_L2_öf‹m_back
;

93 
cou¡î_t
 
	gtŸÆ_TSHR_FuŒ
;

96 
cou¡î_t
 
p›√tMsgNo
;

97 
cou¡î_t
 
I≈ut_queue_fuŒ
;

98 
cou¡î_t
 
œ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

99 
ˇche_t
 *
ˇche_dl1
[], *
ˇche_ml2
, *
ˇche_dl2
;

100 
cou¡î_t
 
MëaPackës_1
;

101 
cou¡î_t
 
D©aPackës_1
;

102 
cou¡î_t
 
TŸÆMëaPackësInAŒ
, 
TŸÆD©aPackësInAŒ
, 
TŸÆSyncMëaPackës
, 
TŸÆSyncD©aPackës
;

103 
cou¡î_t
 
›tiˇl_d©a_∑ckës
, 
›tiˇl_mëa_∑ckës
, 
mesh_d©a_∑ckës
, 
mesh_mëa_∑ckës
;

104 
cou¡î_t
 
tŸÆO±H›Cou¡
, 
tŸÆO±H›Dñay
, 
tŸÆO±N‹H›Cou¡
, 
tŸÆO±N‹H›Dñay
, 
tŸÆO±SyncH›Cou¡
, 
tŸÆO±SyncH›Dñay
;

105 
cou¡î_t
 
tŸÆMeshH›Cou¡
, 
tŸÆMeshH›Dñay
, 
tŸÆEvítCou¡
, 
tŸÆEvítPro˚ssTime
;

106 
cou¡î_t
 
tŸÆMeshN‹H›Cou¡
, 
tŸÆMeshN‹H›Dñay
, 
tŸÆMeshSyncH›Cou¡
, 
tŸÆMeshSyncH›Dñay
;

107 
cou¡î_t
 
tŸÆUpgødes
;

108 
cou¡î_t
 
tŸÆNëUpgødes
;

109 
cou¡î_t
 
tŸÆUpgødesUßbÀ
;

110 
cou¡î_t
 
tŸÆUpgødesBíeficül
;

111 
cou¡î_t
 
d©a_∑ckës_£ndög
[300][300];

112 
cou¡î_t
 
mëa_∑ckës_£ndög
[300][300];

113 
cou¡î_t
 
	gmëa_∑ckë_dú
[300][2];

114 
cou¡î_t
 
mëa_eví_ªq_˛o£
[300];

115 
cou¡î_t
 
mëa_odd_ªq_˛o£
[300];

116 
cou¡î_t
 
ªq_•™d
[261];

118 
cou¡î_t
 
lök_£r_œt
[300][300];

120 
cou¡î_t
 
tŸÆNëWrôes
;

121 
cou¡î_t
 
tŸÆWrôesUßbÀ
;

122 
cou¡î_t
 
tŸÆWrôesBíeficül
;

123 
cou¡î_t
 
ex˛usive_somewhîe
;

124 
cou¡î_t
 
‰⁄t_wrôe
;

125 
lock_√tw‹k_ac˚ss
;

126 
IDCh™geF‹I¡øNëw‹k
(
§c1
, 
§c2
, 
des1
, 
des2
, *
√w_§c1
, *
√w_§c2
, *
√w_des1
, *
√w_des2
);

128 
m_shSQSize
;

129 
cﬁÀ˘_°©s
;

132 
	$√tw‹k_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

134 
	`›t_ªg_°rög
 (
odb
, "-√tw‹k", "√tw‹kÅy≥ {FSOI|MESH|COMB|HYBRID}", &
√tw‹k_ty≥
, "FSOI",

135  
TRUE
, 
NULL
);

138 
	`›t_ªg_°rög
 (
odb
, "-√tw‹k:öãrcfg", "öã∏chùÇëw‹k c⁄fig {FSOI|MESH}", &
öãr_cfg
, "FSOI", 
TRUE
, 
NULL
);

139 
	`›t_ªg_°rög
 (
odb
, "-√tw‹k:öåacfg", "öå®chùÇëw‹k c⁄fig {FSOI|MESH}", &
öåa_cfg
, "MESH", 
TRUE
, 
NULL
);

142 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:chùnum", "numbî o‡chù†ö whﬁêsy°em", &
tŸÆ_chù_num
, 4,

143  
TRUE
, 
NULL
);

144 
	`›tiˇl_›ti⁄s
(
odb
);

145 
	`p›√t_›ti⁄s
(
odb
);

146 
	}
}

148 
	$ª∂y_°©i°ics
(
cou¡î_t
 
ªq_time
)

150 if(
sim_cy˛e
 - 
ªq_time
 < 100)

151 
ªq_•™d
[
sim_cy˛e
-
ªq_time
] ++;

152 if(
sim_cy˛e
 - 
ªq_time
 >=100 && sim_cycle -Ñeq_time < 120)

153 
ªq_•™d
[100]++;

154 if(
sim_cy˛e
 - 
ªq_time
 >=120 && sim_cycle -Ñeq_time < 140)

155 
ªq_•™d
[101]++;

156 if(
sim_cy˛e
 - 
ªq_time
 >=140 && sim_cycle -Ñeq_time < 160)

157 
ªq_•™d
[102]++;

158 if(
sim_cy˛e
 - 
ªq_time
 >=160 && sim_cycle -Ñeq_time < 180)

159 
ªq_•™d
[103]++;

160 if(
sim_cy˛e
 - 
ªq_time
 >=180 && sim_cycle -Ñeq_time < 200)

161 
ªq_•™d
[104]++;

162 if(
sim_cy˛e
 - 
ªq_time
 >= 200 && sim_cycle -Ñeq_time < 350)

163 
ªq_•™d
[
sim_cy˛e
-
ªq_time
-95] ++;

164 if(
sim_cy˛e
 - 
ªq_time
 >= 350 && sim_cycle -Ñeq_time < 400)

165 
ªq_•™d
[255] ++;

166 if(
sim_cy˛e
 - 
ªq_time
 >= 400 && sim_cycle -Ñeq_time < 450)

167 
ªq_•™d
[256] ++;

168 if(
sim_cy˛e
 - 
ªq_time
 >= 450 && sim_cycle -Ñeq_time < 550)

169 
ªq_•™d
[257] ++;

170 if(
sim_cy˛e
 - 
ªq_time
 >= 550 && sim_cycle -Ñeq_time < 650)

171 
ªq_•™d
[258] ++;

172 if(
sim_cy˛e
 - 
ªq_time
 >= 650 && sim_cycle -Ñeq_time < 850)

173 
ªq_•™d
[259] ++;

174 if(
sim_cy˛e
 - 
ªq_time
 >= 850)

175 
ªq_•™d
[260] ++;

176 
	}
}

177 
	$√tw‹k_check_›ti⁄s
()

179 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

181 if(
tŸÆ_chù_num
 == 0)

182 
	`Áèl
("Single chip canÇot use hybridÇetwork system!\n");

183 if(
tŸÆ_chù_num
 > 
MAXTHREADS
)

184 
	`Áèl
("number of chipÉxceedÅheÇumber ofÅhreads!\n");

185 if(
MAXTHREADS
 == 16)

187 if(!(
tŸÆ_chù_num
 == 2 ||Åotal_chip_num == 4 ||Åotal_chip_num == 8))

188 
	`Áèl
("number of chipÉxceedÅheÇumber ofÅhreads!\n");

190 if(
MAXTHREADS
 == 32)

193 
	`Áèl
("number of chipÉxceedÅheÇumber ofÅhreads!\n");

195 if(
MAXTHREADS
 == 64)

197 if(!(
tŸÆ_chù_num
 == 2 ||Åotal_chip_num == 4 ||Åotal_chip_num == 8 ||Åotal_chip_num == 16 ||Åotal_chip_num == 32))

198 
	`Áèl
("number of chipÉxceedÅheÇumber ofÅhreads!\n");

201 
Löe_chù_num
 = 2;

202 
Cﬁumn_chù_num
 = 
tŸÆ_chù_num
/
Löe_chù_num
;

204 
	}
}

207 
	$ChùIdCheck
(
a1
, 
a2
)

209 if(
tŸÆ_chù_num
 == 0)

210 
	`Áèl
("Single chip canÇot use hybridÇetwork system!\n");

212 
löe_size
 = 
mesh_size
;

213 
cﬁumn_size
 = 
mesh_size
 + 2;

215 if(
tŸÆ_chù_num
 != 4)

216 
	`∑nic
("only hard code for chipÇumber is 4\n");

218 if(
a1
 < 
cﬁumn_size
/
Cﬁumn_chù_num
)

220 if(
a2
 < 
löe_size
/
Löe_chù_num
)

227 if(
a2
 < 
löe_size
/
Löe_chù_num
)

232 
	}
}

237 
	$IDCh™geF‹I¡øNëw‹k
(
§c1
, 
§c2
, 
des1
, 
des2
, *
√w_§c1
, *
√w_§c2
, *
√w_des1
, *
√w_des2
)

239 
ChùID_x
 = 
	`ChùIdCheck
(
§c1
, 
§c2
);

240 
ChùID_y
 = 
	`ChùIdCheck
(
des1
, 
des2
);

241 
x_°¨t
 = 0, 
y_°¨t
 = 
mesh_size
;

242 *
√w_§c1
 = 
x_°¨t
 + 
ChùID_x
/2;

243 *
√w_§c2
 = 
y_°¨t
 + 
ChùID_x
%2;

244 *
√w_des1
 = 
x_°¨t
 + 
ChùID_y
/2;

245 *
√w_des2
 = 
y_°¨t
 + 
ChùID_y
%2;

247 
	}
}

249 
	$C⁄figCheck
(
§c1
, 
§c2
, 
des1
, 
des2
)

251 
§c_chù
 = 
	`ChùIdCheck
(
§c1
, 
§c2
);

252 
des_chù
 = 
	`ChùIdCheck
(
des1
, 
des2
);

253 if(
§c_chù
 =
des_chù
)

256 if(!
	`my°ricmp
(
öåa_cfg
, "FSOI"))

257  
FSOI_NET_INTRA
;

259  
MESH_NET_INTRA
;

264 if(!
	`my°ricmp
(
öãr_cfg
, "FSOI"))

265  
FSOI_NET_INTER
;

267  
MESH_NET_INTER
;

269 
	}
}

270 
	$CombNëw‹kBuf„rS∑˚
(
§c1
, 
§c2
, 
des1
, 
des2
, 
md_addr_t
 
addr
, 
›î©i⁄
, *
vc
)

272 
›ti⁄s
 = -1, 
buf„r_fuŒ
 = 0;

273 
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
;

274 
	`IDCh™geF‹I¡øNëw‹k
(
§c1
, 
§c2
, 
des1
, 
des2
, &
√w_§c1
, &
√w_§c2
, &
√w_des1
, &
√w_des2
);

275 
Êag
 = 
	`C⁄figCheck
(
§c1
, 
§c2
, 
des1
, 
des2
);

277 if(
Êag
 == 0 || flag == 2)

279 if(
Êag
 == 2)

281 if(
	`›tiˇlBuf„rS∑˚
(
√w_§c1
, 
√w_§c2
, 
›î©i⁄
))

282 
buf„r_fuŒ
 = 1;

286 if(
	`›tiˇlBuf„rS∑˚
(
§c1
, 
§c2
, 
›î©i⁄
))

287 
buf„r_fuŒ
 = 1;

292 if(
Êag
 == 3)

294 
›ti⁄s
 = 
	`OrdîCheck
(
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
, 
addr
);

295 *
vc
 = 
	`p›√tBuf„rS∑˚
(
√w_§c1
, 
√w_§c2
, 
›ti⁄s
);

296 if(*
vc
 == -1)

297 
buf„r_fuŒ
 = 1;

301 
›ti⁄s
 = 
	`OrdîCheck
(
§c1
, 
§c2
, 
des1
, 
des2
, 
addr
);

302 *
vc
 = 
	`p›√tBuf„rS∑˚
(
§c1
, 
§c2
, 
›ti⁄s
);

303 if(*
vc
 == -1)

304 
buf„r_fuŒ
 = 1;

307  
buf„r_fuŒ
;

308 
	}
}

309 #ifde‡
LOCK_HARD


310 
	$scheduÀ_√tw‹k
(
LOCK_EVENT
 *
evít
)

313 
Êag
 = 
	`loˇl_ac˚ss_check
(
evít
);

314 
ty≥
 = 0;

315 if(
evít
->
›t
 =
ACQ_REMOTE_ACC
 ||Évít->›à=
REL_REMOTE_ACC
)

316 
ty≥
 = 
mëa_∑ckë_size
;

317 
p›√tMsgNo
++;

318 if(!
Êag
 && 
cﬁÀ˘_°©s
)

320 
evít
->
whí
 = 
sim_cy˛e
 + 1;

321 
lock_√tw‹k_ac˚ss
 ++;

323 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI"))

324 
	`dúe˘MsgIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
p›√tMsgNo
, 0,Évít->
›t
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,0);

325 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

326 
	`p›√tMesßgeIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
p›√tMsgNo
, 0,Évít->
›t
, 0);

327 
evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

331 
evít
->
whí
 = 
sim_cy˛e
;

332 
evít
->
p›√tMsgNo
 =ÖopnetMsgNo;

333 
	}
}

334 
	$LockMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
msgNo
)

336 
LOCK_EVENT
 *
evít
, *
¥ev
;

337 
evít
 = 
lock_evít_queue
;

338 
¥ev
 = 
NULL
;

339 i‡(
evít
!=
NULL
)

341 
evít
)

343 if(
evít
->
§c1
 =
w
 &&Évít->
§c2
 =
x
 &&Évít->
des1
 =
y
 &&Évít->
des2
 =
z
 && 
msgNo
 =evít->
p›√tMsgNo
)

345 
evít
->
whí
 = 
sim_cy˛e
;

348 
¥ev
 = 
evít
;

349 
evít
 =Évít->
√xt
;

352 
	`∑nic
("Error findingÉvent forÅheÑeturned message fromÇetwork");

353 
	}
}

357 
	$tŸÆ_å™s„r_ty≥
(
DIRECTORY_EVENT
 *
evít
, 
ty≥
)

359 
evít
->
›î©i⁄
)

362 
L2_PREFETCH
:

364 
tŸÆ_L2_MEM_L2Pª„tch_Req
++;

367 
MEM_READ_REQ
:

369 if(
evít
->
cmd
 =
Ród
)

370 
tŸÆ_L2_MEM_D©a_Miss_Req
++;

372 
tŸÆ_L2_MEM_In°_Miss_Req
++;

375 
WAIT_MEM_READ
:

376 
WAIT_MEM_READ_N
:

378 if(
evít
->
cmd
 =
Ród
)

379 
tŸÆ_MEM_L2_D©a_Paylﬂd
++;

381 
tŸÆ_MEM_L2_In°_Paylﬂd
++;

384 
MEM_WRITE_BACK
:

386 
tŸÆ_L2_MEM_D©a_Paylﬂd
++;

390 
MISS_IL1
:

392 
tŸÆ_L1_L2_In°_Miss_Req
++;

395 
ACK_DIR_IL1
:

397 
tŸÆ_L2_L1_In°_Paylﬂd
++;

400 
MISS_READ
:

402 
tŸÆ_L1_L2_D©a_Ród_Miss_Req
++;

405 
ACK_DIR_READ_SHARED
:

406 
ACK_DIR_READ_EXCLUSIVE
:

408 
tŸÆ_L2_L1_D©a_Ród_Miss_Paylﬂd
++;

411 
INV_MSG_READ
:

413 
tŸÆ_L2_L1_D©a_Ród_InvÆid
++;

416 
ACK_MSG_READ
:

418 
tŸÆ_L1_L2_D©a_Ród_InvÆid_Ack
++;

421 
ACK_MSG_READUPDATE
:

423 
tŸÆ_L1_L2_D©a_Ród_InvÆid_Paylﬂd
++;

426 
MISS_WRITE
:

428 
tŸÆ_L1_L2_D©a_Wrôe_Miss_Req
++;

431 
ACK_DIR_WRITE
:

433 
tŸÆ_L2_L1_D©a_Wrôe_Miss_Paylﬂd
++;

436 
INV_MSG_WRITE
:

438 if(
evít
->
∑ª¡
->
sh¨î_num
)

439 
tŸÆ_L2_L1_D©a_L2ª∂a˚d_InvÆid
++;

441 
tŸÆ_L2_L1_D©a_Wrôe_InvÆid
++;

444 
ACK_MSG_WRITE
:

446 if(
evít
->
∑ª¡
->
sh¨î_num
)

447 
tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Ack
++;

449 
tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Ack
++;

452 
ACK_MSG_WRITEUPDATE
:

454 if–
evít
->
∑ª¡
->
sh¨î_num
 )

455 
tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Paylﬂd
++;

457 
tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Paylﬂd
++;

460 
WRITE_UPDATE
:

462 
tŸÆ_L1_L2_D©a_Wrôe_Upd©e
++;

465 
ACK_DIR_WRITEUPDATE
:

467 
tŸÆ_L2_L1_D©a_Wrôe_Upd©e_Ack
++;

470 
WRITE_BACK
:

472 
tŸÆ_L1_L2_D©a_Wrôeback_Paylﬂd
++;

475 
NACK
:

477 
tŸÆ_TSHR_FuŒ
++;

480 
SHR_TLB_MISS
:

482 
tŸÆ_L1_L2_shr_éb_miss_Req
++;

485 
SHR_TLB_WRITE_BACK
:

487 
tŸÆ_L1_L2_shr_éb_wrôe_back_Req
++;

490 
SHR_TLB_SR_RECOVERY
:

492 
tŸÆ_L1_L2_shr_éb_§_ªcovîy_Req
++;

495 
SHR_TLB_UPDATE_PR_ACK
:

497 
tŸÆ_L1_L2_shr_éb_upd©e_¥_ack_Req
++;

500 
SHR_TLB_UPDATE_PW_ACK
:

502 
tŸÆ_L1_L2_shr_éb_upd©e_pw_ack_Req
++;

505 
SHR_TLB_RECOVERY_ACK
:

507 
tŸÆ_L1_L2_shr_éb_ªcovîy_ack_Req
++;

510 
DIR_TLB_REFILL
:

512 
tŸÆ_L1_L2_dú_éb_ªfûl_Req
++;

515 
DIR_TLB_UPDATE
:

517 
tŸÆ_L1_L2_dú_éb_upd©e_Req
++;

520 
DIR_TLB_RECOVERY
:

522 
tŸÆ_L1_L2_dú_éb_ªcovîy_Req
++;

525 
DIR_TLB_REFILL_WAIT
:

527 
DIR_TLB_UPDATE_WAIT
:

529 
DIR_TLB_RECOVERY_WAIT
:

532 
DIR_SHR_READ
:

534 
tŸÆ_L2_L1_dú_shr_ªad
++;

537 
ACK_SHR_READ
:

539 
tŸÆ_L1_L2_ack_shr_ªad
++;

542 
INFORM_BACK
:

544 
tŸÆ_L1_L2_öf‹m_back
++;

549 
	`fÊush
(
°dout
);

550 
	`¥ötf
("%d\n", 
evít
->
›î©i⁄
);

551 
	`fÊush
(
°dout
);

552 
	`∑nic
("the operation is missed, fix it!");

555 
	}
}

558 
	$scheduÀThroughNëw‹k
(
DIRECTORY_EVENT
 *
evít
, 
°¨t
, 
ty≥
, 
vc
)

560 if(
evít
->
§c1
 < 0 ||Évít->§c1 > 16 ||Évít->
§c2
 < 0 ||Évít->§c2 > 16 ||Évít->
des1
 < 0 ||Évít->des1 > 16 ||Évít->
des2
 < 0 ||Évent->des2 > 16)

561 
	`∑nic
("Network: source or destinationáddressesáre wrong.");

564 
Êag
 = 
	`loˇl_ac˚ss_check
(
evít
);

565 
eví_Êag
 = 0;

566 
p›√tMsgNo
++;

568 if(
evít
->
rs
)

569 if(
evít
->
rs
->
›
 =
LDL_L
)

570 
eví_Êag
 = 1;

573 if(
evít
->
isSyncAc˚ss
)

575 if(
ty≥
 =
d©a_∑ckë_size
)

576 
d©a_∑ckës_£ndög
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
][evít->
des1
*(mesh_size+2)+evít->
des2
] ++;

579 
mëa_∑ckës_£ndög
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
][evít->
des1
*(mesh_size+2)+evít->
des2
] ++;

580 if((
evít
->
des1
*(
mesh_size
+2)+evít->
des2
) % 2== 0)

582 if(
sim_cy˛e
 - 
mëa_∑ckë_dú
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
][0] <10)

583 
mëa_eví_ªq_˛o£
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
] ++;

584 
mëa_∑ckë_dú
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
][0] = 
sim_cy˛e
;

588 if(
sim_cy˛e
 - 
mëa_∑ckë_dú
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
][1] <10)

589 
mëa_odd_ªq_˛o£
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
] ++;

590 
mëa_∑ckë_dú
[
evít
->
§c1
*(
mesh_size
+2)+evít->
§c2
][1] = 
sim_cy˛e
;

595 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI"))

597 if(!
Êag
)

599 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

601 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

603 
evít
->
öput_buf„r_fuŒ
 = 1;

604 
evít
->
whí
 = 
°¨t
+
RETRY_TIME
;

605 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

607 
I≈ut_queue_fuŒ
 ++;

608 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

614 
	`dúe˘MsgIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
,Évít->
addr
,Évít->
›î©i⁄
,Évít->
dñay
,Évít->
L2miss_Êag
,Évít->
¥e„tch_√xt
,Évít->
dúty_Êag
,Évít->
¨rivÆ_time
,Évít->
d©a_ª∂y
,Évít->
c⁄f_bô
, 0, 
eví_Êag
,Évít->
isSyncAc˚ss
,Évít->
°‹e_c⁄d
);

615 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

618 
evít
->
whí
 = 
°¨t
;

619 
evít
->
p›√tMsgNo
 =ÖopnetMsgNo;

621 if(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

623 
	`tŸÆ_å™s„r_ty≥
(
evít
, 
ty≥
);

624 if(!
Êag
)

626 
›ti⁄s
 = -1;

627 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

628 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

629 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

631 if(
vc
 == -1)

633 
evít
->
öput_buf„r_fuŒ
 = 1;

634 
evít
->
whí
 = 
°¨t
+
RETRY_TIME
;

635 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

637 
I≈ut_queue_fuŒ
 ++;

638 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

644 if(
vc
 == -1)

646 if(
›ti⁄s
 == -1)

647 
vc
 = 0;

649 
vc
 = 
›ti⁄s
;

651 if(
ty≥
 =
d©a_∑ckë_size
)

652 
D©aPackës_1
 ++;

654 
MëaPackës_1
 ++;

656 #i‚de‡
MULTI_VC


657 
vc
 = 0;

659 
	`p›√tMesßgeIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
,Évít->
addr
>>
ˇche_dl2
->
£t_shi·
,Évít->
›î©i⁄
, 
vc
);

661 #ifde‡
MULTI_VC


663 
	`OrdîBufIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1), 
vc
, 
p›√tMsgNo
);

665 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

668 
evít
->
whí
 = 
°¨t
;

669 
evít
->
p›√tMsgNo
 =ÖopnetMsgNo;

671 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "HYBRID"))

673 if((
	`abs
(
evít
->
des1
 -Évít->
§c1
Ë+ábs”vít->
des2
 -Évít->
§c2
)) > 1)

676 if(!
Êag
)

678 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

680 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

682 
evít
->
öput_buf„r_fuŒ
 = 1;

683 
evít
->
whí
 = 
°¨t
+
RETRY_TIME
;

684 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

686 
I≈ut_queue_fuŒ
 ++;

687 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

693 
	`dúe˘MsgIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
,Évít->
addr
,Évít->
›î©i⁄
,Évít->
dñay
,Évít->
L2miss_Êag
,Évít->
¥e„tch_√xt
,Évít->
dúty_Êag
,Évít->
¨rivÆ_time
,Évít->
d©a_ª∂y
,Évít->
c⁄f_bô
, 0, 
eví_Êag
,Évít->
isSyncAc˚ss
,Évít->
°‹e_c⁄d
);

695 if(
ty≥
 =
d©a_∑ckë_size
)

696 
›tiˇl_d©a_∑ckës
 ++;

698 
›tiˇl_mëa_∑ckës
 ++;

699 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

702 
evít
->
whí
 = 
°¨t
;

703 
evít
->
p›√tMsgNo
 =ÖopnetMsgNo;

708 if(!
Êag
)

710 if(
ty≥
 =
d©a_∑ckë_size
)

711 
lök_£r_œt
[
evít
->
§c1
*
mesh_size
+evít->
§c2
][evít->
des1
*mesh_size+evít->
des2
] +
ty≥
;

713 
lök_£r_œt
[
evít
->
§c1
*
mesh_size
+evít->
§c2
][evít->
des1
*mesh_size+evít->
des2
] += 1;

715 
evít
->
whí
 = 
°¨t
 + 
lök_£r_œt
[evít->
§c1
*
mesh_size
+evít->
§c2
][evít->
des1
*mesh_size+evít->
des2
];

716 if(
ty≥
 =
d©a_∑ckë_size
)

717 
mesh_d©a_∑ckës
 ++;

719 
mesh_mëa_∑ckës
 ++;

723 
evít
->
whí
 = 
°¨t
;

724 
evít
->
p›√tMsgNo
 =ÖopnetMsgNo;

729 if(!
Êag
)

731 
Chù_idítify
 = 
	`C⁄figCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
);

732 if(
Chù_idítify
 =
FSOI_NET_INTER
 || Chù_idítify =
FSOI_NET_INTRA
)

735 if(
Chù_idítify
 =
FSOI_NET_INTER
)

738 
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
;

739 
	`IDCh™geF‹I¡øNëw‹k
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, &
√w_§c1
, &
√w_§c2
, &
√w_des1
, &
√w_des2
);

740 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

742 if(
	`›tiˇlBuf„rS∑˚
(
√w_§c1
, 
√w_§c2
, 
evít
->
›î©i⁄
))

744 
evít
->
öput_buf„r_fuŒ
 = 1;

745 
evít
->
whí
 = 
°¨t
+1;

746 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

748 
I≈ut_queue_fuŒ
 ++;

749 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

755 
	`dúe˘MsgIn£π
(
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
, 
evít
->
addr
,Évít->
›î©i⁄
,Évít->
dñay
,Évít->
L2miss_Êag
,Évít->
¥e„tch_√xt
,Évít->
dúty_Êag
,Évít->
¨rivÆ_time
,Évít->
d©a_ª∂y
,Évít->
c⁄f_bô
, 0, 
eví_Êag
,Évít->
isSyncAc˚ss
,Évít->
°‹e_c⁄d
);

756 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

757 
evít
->
√w_§c1
 =Çew_src1;

758 
evít
->
√w_§c2
 =Çew_src2;

759 
evít
->
√w_des1
 =Çew_des1;

760 
evít
->
√w_des2
 =Çew_des2;

766 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

768 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

770 
evít
->
öput_buf„r_fuŒ
 = 1;

771 
evít
->
whí
 = 
°¨t
+1;

772 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

774 
I≈ut_queue_fuŒ
 ++;

775 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

781 
	`dúe˘MsgIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
,Évít->
addr
,Évít->
›î©i⁄
,Évít->
dñay
,Évít->
L2miss_Êag
,Évít->
¥e„tch_√xt
,Évít->
dúty_Êag
,Évít->
¨rivÆ_time
,Évít->
d©a_ª∂y
,Évít->
c⁄f_bô
, 0, 
eví_Êag
,Évít->
isSyncAc˚ss
,Évít->
°‹e_c⁄d
);

782 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

788 
›ti⁄s
 = -1;

789 if(
Chù_idítify
 =
MESH_NET_INTER
)

792 
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
;

793 
	`IDCh™geF‹I¡øNëw‹k
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, &
√w_§c1
, &
√w_§c2
, &
√w_des1
, &
√w_des2
);

795 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

796 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

798 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

800 if(
vc
 == -1)

802 
evít
->
öput_buf„r_fuŒ
 = 1;

803 
evít
->
whí
 = 
°¨t
+1;

804 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

806 
I≈ut_queue_fuŒ
 ++;

807 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

813 if(
vc
 == -1)

815 if(
›ti⁄s
 == -1)

816 
vc
 = 0;

818 
vc
 = 
›ti⁄s
;

820 if(
ty≥
 =
d©a_∑ckë_size
)

821 
D©aPackës_1
 ++;

823 
MëaPackës_1
 ++;

824 #i‚de‡
MULTI_VC


825 
vc
 = 0;

827 
	`p›√tMesßgeIn£π
(
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
, 
evít
->
addr
>>
ˇche_dl2
->
£t_shi·
,Évít->
›î©i⁄
, 
vc
);

828 #ifde‡
MULTI_VC


829 
	`OrdîBufIn£π
(
√w_§c1
, 
√w_§c2
, 
√w_des1
, 
√w_des2
, 
evít
->
addr
&~(
ˇche_dl1
[0]->
bsize
-1), 
vc
, 
p›√tMsgNo
);

831 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

832 
evít
->
√w_§c1
 =Çew_src1;

833 
evít
->
√w_§c2
 =Çew_src2;

834 
evít
->
√w_des1
 =Çew_des1;

835 
evít
->
√w_des2
 =Çew_des2;

841 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

842 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

843 if(
evít
->
›î©i⁄
 =
MISS_IL1
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
MISS_WRITE
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 )

845 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

846 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

847 if(
vc
 == -1)

849 
evít
->
öput_buf„r_fuŒ
 = 1;

850 
evít
->
whí
 = 
°¨t
+1;

851 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

853 
I≈ut_queue_fuŒ
 ++;

854 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

860 if(
vc
 == -1)

862 if(
›ti⁄s
 == -1)

863 
vc
 = 0;

865 
vc
 = 
›ti⁄s
;

867 if(
ty≥
 =
d©a_∑ckë_size
)

868 
D©aPackës_1
 ++;

870 
MëaPackës_1
 ++;

871 #i‚de‡
MULTI_VC


872 
vc
 = 0;

874 
	`p›√tMesßgeIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
, 
°¨t
, 
ty≥
, 
p›√tMsgNo
,Évít->
addr
>>
ˇche_dl2
->
£t_shi·
,Évít->
›î©i⁄
, 
vc
);

875 #ifde‡
MULTI_VC


876 
	`OrdîBufIn£π
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1), 
vc
, 
p›√tMsgNo
);

878 
evít
->
whí
 = 
°¨t
 + 
WAIT_TIME
;

884 
evít
->
whí
 = 
°¨t
;

885 
evít
->
p›√tMsgNo
 =ÖopnetMsgNo;

889 if(
ty≥
 =
d©a_∑ckë_size
)

891 
TŸÆD©aPackësInAŒ
 ++;

892 if(
evít
->
isSyncAc˚ss
)

893 
TŸÆSyncD©aPackës
 ++;

897 
TŸÆMëaPackësInAŒ
 ++;

898 if(
evít
->
isSyncAc˚ss
)

899 
TŸÆSyncMëaPackës
 ++;

901 
	}
}

905 
	$MsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
cou¡î_t
 
°Time
, 
msgNo
, cou¡î_à
å™s„r_time
, 
dñay
, cou¡î_à
ªq_time
)

908 
DIRECTORY_EVENT
 *
evít
, *
¥ev
;

909 
evít
 = 
dú_evít_queue
;

910 
¥ev
 = 
NULL
;

911 i‡(
evít
!=
NULL
)

913 
evít
)

915 
equÆ_Êag
 = 0;

916 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "COMB"))

918 
Chù_idítify
 = 
	`C⁄figCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
);

919 if(
Chù_idítify
 =
FSOI_NET_INTER
)

921 if(
evít
->
√w_§c1
 =
w
 &&Évít->
√w_§c2
 =
x
 &&Évít->
√w_des1
 =
y
 &&Évít->
√w_des2
 =
z
 &&Évít->
°¨tCy˛e
 =
°Time
 && !evít->
¥o˚ssögD⁄e
 && 
msgNo
 =evít->
p›√tMsgNo
)

922 
equÆ_Êag
 = 1;

926 if(
evít
->
§c1
 =
w
 &&Évít->
§c2
 =
x
 &&Évít->
des1
 =
y
 &&Évít->
des2
 =
z
 &&Évít->
°¨tCy˛e
 =
°Time
 && !evít->
¥o˚ssögD⁄e
 && 
msgNo
 =evít->
p›√tMsgNo
)

927 
equÆ_Êag
 = 1;

932 if(
evít
->
§c1
 =
w
 &&Évít->
§c2
 =
x
 &&Évít->
des1
 =
y
 &&Évít->
des2
 =
z
 &&Évít->
°¨tCy˛e
 =
°Time
 && !evít->
¥o˚ssögD⁄e
 && 
msgNo
 =evít->
p›√tMsgNo
)

933 
equÆ_Êag
 = 1;

936 if(
equÆ_Êag
)

938 
DIRECTORY_EVENT
 *
ãmp
 = 
evít
->
√xt
;

939 
evít
->
√xt
 = 
NULL
;

940 
ªtu∫_vÆue
 = 
	`dú_fifo_íqueue
(
evít
, 0);

941 if(
ªtu∫_vÆue
 == 0)

943 
evít
->
√xt
 = 
ãmp
;

949 
tŸÆO±H›Cou¡
++;

950 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

951 
tŸÆO±H›Dñay
 += 1;

953 
tŸÆO±H›Dñay
 +(
sim_cy˛e
 - 
evít
->
°¨tCy˛e
);

954 if(
evít
->
°‹e_c⁄d
)

956 
tŸÆO±SyncH›Cou¡
++;

957 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

958 
tŸÆO±SyncH›Dñay
 += 1;

960 
tŸÆO±SyncH›Dñay
 +(
sim_cy˛e
 - 
evít
->
°¨tCy˛e
);

964 
tŸÆO±N‹H›Cou¡
++;

965 if(
evít
->
›î©i⁄
 =
ACK_DIR_WRITEUPDATE
)

966 
tŸÆO±N‹H›Dñay
 += 1;

968 
tŸÆO±N‹H›Dñay
 +(
sim_cy˛e
 - 
evít
->
°¨tCy˛e
);

972 
evít
->
¥o˚ssögD⁄e
 = 1;

973 
evít
->
å™s„r_time
 =Åransfer_time;

974 
evít
->
dñay
 = delay;

975 
evít
->
ªq_time
 = 
sim_cy˛e
;

976 
evít
->
¨rivÆ_time
 = 
sim_cy˛e
;

978 if(
¥ev
 =
NULL
)

979 
dú_evít_queue
 = 
ãmp
;

981 
¥ev
->
√xt
 = 
ãmp
;

983 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "FSOI") || (!mystricmp(network_type, "HYBRID")))

990 
¥ev
 = 
evít
;

991 
evít
 =Évít->
√xt
;

994 
	`∑nic
("Error findingÉvent forÅheÑeturned message fromÇetwork");

995 
	}
}

996 
	$p›√tMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
cou¡î_t
 
°Time
, 
msgNo
)

999 
DIRECTORY_EVENT
 *
evít
, *
¥ev
;

1000 
evít
 = 
dú_evít_queue
;

1001 
¥ev
 = 
NULL
;

1002 i‡(
evít
!=
NULL
)

1004 
evít
)

1006 
equÆ_Êag
 = 0;

1007 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "COMB"))

1009 
Chù_idítify
 = 
	`C⁄figCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
);

1010 if(
Chù_idítify
 =
MESH_NET_INTER
)

1012 if(
evít
->
√w_§c1
 =
w
 &&Évít->
√w_§c2
 =
x
 &&Évít->
√w_des1
 =
y
 &&Évít->
√w_des2
 =
z
 &&Évít->
°¨tCy˛e
 =
°Time
 && !evít->
¥o˚ssögD⁄e
 && 
msgNo
 =evít->
p›√tMsgNo
)

1013 
equÆ_Êag
 = 1;

1017 if(
evít
->
§c1
 =
w
 &&Évít->
§c2
 =
x
 &&Évít->
des1
 =
y
 &&Évít->
des2
 =
z
 &&Évít->
°¨tCy˛e
 =
°Time
 && !evít->
¥o˚ssögD⁄e
 && 
msgNo
 =evít->
p›√tMsgNo
)

1018 
equÆ_Êag
 = 1;

1023 if(
evít
->
§c1
 =
w
 &&Évít->
§c2
 =
x
 &&Évít->
des1
 =
y
 &&Évít->
des2
 =
z
 &&Évít->
°¨tCy˛e
 =
°Time
 && !evít->
¥o˚ssögD⁄e
 && 
msgNo
 =evít->
p›√tMsgNo
)

1024 
equÆ_Êag
 = 1;

1027 if(
equÆ_Êag
)

1029 
DIRECTORY_EVENT
 *
ãmp
 = 
evít
->
√xt
;

1030 if(
	`dú_fifo_íqueue
(
evít
, 0) == 0)

1034 #ifde‡
MULTI_VC


1035 
	`OrdîBufRemove
(
w
, 
x
, 
y
, 
z
, 
evít
->
addr
&~(
ˇche_dl1
[0]->
bsize
-1), 
msgNo
);

1037 
tŸÆMeshH›Cou¡
++;

1038 
tŸÆMeshH›Dñay
 +(
sim_cy˛e
 - 
evít
->
°¨tCy˛e
);

1039 if(
evít
->
°‹e_c⁄d
)

1041 
tŸÆMeshSyncH›Cou¡
++;

1042 
tŸÆMeshSyncH›Dñay
 +(
sim_cy˛e
 - 
evít
->
°¨tCy˛e
);

1046 
tŸÆMeshN‹H›Cou¡
++;

1047 
tŸÆMeshN‹H›Dñay
 +(
sim_cy˛e
 - 
evít
->
°¨tCy˛e
);

1049 
evít
->
¥o˚ssögD⁄e
 = 1;

1050 if(
¥ev
 =
NULL
)

1051 
dú_evít_queue
 = 
ãmp
;

1053 
¥ev
->
√xt
 = 
ãmp
;

1054 if(
evít
->
›î©i⁄
 =
WRITE_UPDATE
)

1055 
tŸÆNëUpgødes
++;

1059 
¥ev
 = 
evít
;

1060 
evít
 =Évít->
√xt
;

1063 #ifde‡
LOCK_HARD


1064 if(!
	`LockMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
msgNo
))

1065 
	`∑nic
("Error findingÉvent forÅheÑeturned message fromÇetwork");

1067 
	}
}

1068 
	#CACHE_HASH
(
˝
, 
key
Ë\

	)

1069 (((
	gkey
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& ((
	g˝
)->
	ghsize
-1))

	@network.h

1 #i‚de‡
NETWORK_H


2 
	#NETWORK_H


	)

3 
	~<°dio.h
>

4 
	~"ho°.h
"

5 
	~"misc.h
"

6 
	~"machöe.h
"

7 
	~"°©s.h
"

8 
	~"smt.h
"

16 
	#FSOI_NET_INTER
 1

	)

17 
	#FSOI_NET_INTRA
 2

	)

18 
	#MESH_NET_INTER
 3

	)

19 
	#MESH_NET_INTRA
 4

	)

22 *
	g√tw‹k_ty≥
;

23 *
	göãr_cfg
;

24 *
	göåa_cfg
;

25 
	gtŸÆ_chù_num
;

26 
	gLöe_chù_num
;

27 
	gCﬁumn_chù_num
;

28 
	e√tw‹k_˛ass
 {

29 
	mFSOI
,

30 
	mMESH
,

31 
	mCOMB
,

32 
	mHYBRID


35 
scheduÀThroughNëw‹k
(
DIRECTORY_EVENT
 *
evít
, 
°¨t
, 
ty≥
, 
vc
);

36 
p›√tMesßgeIn£π
(
s1
, 
s2
, 
d1
, 
d2
, 
sim_cy˛e
, 
size
, 
cou¡î_t
 
msgNo
, 
md_addr_t
 
addr
, 
›î©i⁄
, 
vc
);

39 
EUP_íåy_öô
(
id
);

40 
EUP_íåy_ª∂a˚check
(
id
, 
md_addr_t
 
addr
);

41 
EUP_íåy_check
(
id
, 
md_addr_t
 
addr
);

42 
EUP_íåy_Æloˇã
(
id
, 
md_addr_t
 
addr
);

43 
EUP_íåy_dñloˇã
(
id
, 
md_addr_t
 
addr
);

44 
E¨lyUpgøde
(
DIRECTORY_EVENT
 *
evít
);

45 
E¨lyUpgøãGíî©e
(
DIRECTORY_EVENT
 *
evít
);

	@old_sim-out.c

113 
	~"hódîs.h
"

115 
	~"maö.h
"

116 
	~"sim-out‹dî.h
"

117 
	~"ö°M™ù.h
"

120 
cou¡î_t
 
	gTŸÆB¨rõrs
 = 0;

121 
cou¡î_t
 
	gTŸÆLocks
 = 0;

122 
cou¡î_t
 
	gpuª_num_ö¢
 = 0;

123 
cou¡î_t
 
	gtŸÆ_num_ö¢
 = 0;

124 
cou¡î_t
 
	gª«me_ac˚ss
 = 0;

125 
cou¡î_t
 
	giqøm_ac˚ss
 = 0;

126 
cou¡î_t
 
	gfqøm_ac˚ss
 = 0;

127 
cou¡î_t
 
	grob1_ac˚ss
 = 0;

128 
cou¡î_t
 
	grob2_ac˚ss
 = 0;

129 
cou¡î_t
 
	gb¥ed_ac˚ss
 = 0;

130 
cou¡î_t
 
	giwakeup_ac˚ss
 = 0;

131 
cou¡î_t
 
	gfwakeup_ac˚ss
 = 0;

132 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss
 = 0;

133 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss
 = 0;

134 
cou¡î_t
 
	gúegfûe_ac˚ss
 = 0;

135 
cou¡î_t
 
	g‰egfûe_ac˚ss
 = 0;

137 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

138 
cou¡î_t
 
	giˇche_ac˚ss
 = 0;

139 
cou¡î_t
 
	gdˇche_ac˚ss
 = 0;

140 
cou¡î_t
 
	gdˇche2_ac˚ss
 = 0;

141 
cou¡î_t
 
	giˇche2_ac˚ss
 = 0;

143 
cou¡î_t
 
	gülu1_ac˚ss
 = 0;

144 
cou¡î_t
 
	gülu2_ac˚ss
 = 0;

145 
cou¡î_t
 
	gÁlu1_ac˚ss
 = 0;

146 
cou¡î_t
 
	gÁlu2_ac˚ss
 = 0;

147 
cou¡î_t
 
	gúesu…bus_ac˚ss
 = 0;

148 
cou¡î_t
 
	g‰esu…bus_ac˚ss
 = 0;

149 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

150 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

152 
	gpcb_blk_cou¡
 = 0;

155 
cou¡î_t
 
	g¶ìpCou¡
[
MAXTHREADS
];

159 
cou¡î_t
 
	gdu∂iˇti⁄_ac˚ss
, 
	gDUPLICATION_ac˚ss
[
CLUSTERS
], 
	gdu∂iˇti⁄_tŸÆ
 = 0;

160 
cou¡î_t
 
	gcom∑ª_ac˚ss
, 
	gCOMPARE_ac˚ss
[
CLUSTERS
], 
	gcom∑ª_tŸÆ
 = 0;

164 
cou¡î_t
 
¥edi˘_commô
 (
RUU_°©i⁄
 *
rs
);

167 
	gb¥ed_btb_u£_ma°îid
 = 0;

168 
ûök_run
;

169 
em3d_run
;

171 #ifde‡
DIRECTORY


172 #ifde‡
POPNET


173 
maöP›√t
();

174 
p›√tMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
°Time
, 
msgNo
);

175 
p›√tBuf„rS∑˚
(
s1
, 
s2
, 
›t
);

177 
cou¡î_t
 
p›√tMsgNo
;

178 
	gmshr_≥ndög_evít
[
MAXTHREADS
];

180 
cou¡î_t
 
	gßme_L1_L2_fifo_fuŒ
;

181 
cou¡î_t
 
	gL1_mshr_fuŒ
;

182 
cou¡î_t
 
	gœ°_L1_mshr_fuŒ
[
MAXTHREADS
];

183 
cou¡î_t
 
	gL2_mshr_fuŒ
;

184 
cou¡î_t
 
	gœ°_L2_mshr_fuŒ
;

185 
cou¡î_t
 
	gL2_mshr_fuŒ_¥e„tch
;

186 
cou¡î_t
 
	gL1_fifo_fuŒ
;

187 
cou¡î_t
 
	gœ°_L1_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

188 
cou¡î_t
 
	gDú_fifo_fuŒ
;

189 
cou¡î_t
 
	gœ°_Dú_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

190 
cou¡î_t
 
	gI≈ut_queue_fuŒ
;

191 
cou¡î_t
 
	gœ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

192 
cou¡î_t
 
	gOuçut_queue_fuŒ
;

194 
cou¡î_t
 
	gSèŒ_L1_mshr
;

195 
cou¡î_t
 
	gSèŒ_L2_mshr
;

196 
cou¡î_t
 
	gSèŒ_L1_fifo
;

197 
cou¡î_t
 
	gSèŒ_dú_fifo
;

198 
cou¡î_t
 
	gSèŒ_öput_queue
;

199 
cou¡î_t
 
	gSèŒ_ouçut_queue
;

201 
cou¡î_t
 
«ck_cou¡î
, 
L1_Êù_cou¡î
, 
Êù_cou¡î
, 
e_to_m
;

202 
cou¡î_t
 
	gtŸÆMeshH›Cou¡
, 
	gtŸÆMeshH›Dñay
, 
	gtŸÆEvítCou¡
, 
	gtŸÆEvítPro˚ssTime
;

203 
cou¡î_t
 
	gtŸÆO±H›Cou¡
, 
	gtŸÆO±H›Dñay
;

204 
tick_t
 
tŸÆmissh™dÀtime
;

205 
tŸÆevítcou¡num
;

206 
tŸÆ_L1_¥e„tch
;

207 
tŸÆªqcou¡num
;

208 
tŸÆmisscou¡num
;

209 
cou¡î_t
 
loˇl_ˇche_ac˚ss
, 
ªmŸe_ˇche_ac˚ss
, 
loˇldúe˘‹y
, 
ªmŸedúe˘‹y
;

210 
cou¡î_t
 
övﬁve_2_h›s
, 
övﬁve_2_h›_touch
, 
övﬁve_2_h›_wb
, 
övﬁve_2_h›s_wm
, 
övﬁve_4_h›s_wm
, 
övﬁve_2_h›s_upgøde
, 
övﬁve_4_h›s
, 
övﬁve_4_h›s_miss
, 
övﬁve_2_h›s_miss
, 
övﬁve_4_h›s_upgøde
;

211 
cou¡î_t
 
	gtŸÆS∂ôNo
, 
	gtŸÆS∂ôWM
;

212 
cou¡î_t
 
d©a_¥iv©e_wrôe
, 
d©a_¥iv©e_ªad
, 
d©a_sh¨ed_wrôe
, 
d©a_sh¨ed_ªad
;

213 
cou¡î_t
 
tŸÆ_Æl_˛o£
, 
tŸÆ_Æl_Æmo°˛o£
, 
tŸÆ_nŸ_Æl_˛o£
, 
tŸÆ_p_c_evíts
, 
tŸÆ_c⁄sumîs
, 
tŸÆ_∑ckës_ö_√ighb‹
, 
tŸÆ_∑ckës_©_c‹√rs
;

214 
cou¡î_t
 
tŸÆ_d©a_c⁄sumîs
, 
tŸÆ_d©a_˛o£
, 
tŸÆ_d©a_Ár
, 
tŸÆ_d©a_©_c‹√r
;

215 
cou¡î_t
 
sh¨î_num
[
MAXTHREADS
];

216 
avîage_öside_≥r˚¡
;

217 
avîage_outside_≥r˚¡
;

218 
avîage_outside_abs_≥r˚¡
;

219 
avîage_c‹√r_≥r˚¡
;

221 
	gmem_p‹t_œt
[8];

224 
	#PULL_BACK


	)

226 
	#WATER_NSQUARED
 0

	)

227 
	#LSQ_LATENCY
 4

	)

228 
	#DUP_NO
 2

	)

230 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

231 
	#LSQSIZE
 1024

	)

232 
	#RUUSIZE
 1024

	)

235 
	#_rŸr
(
x
Ë(xË((xË& 1)?(((x)>>1)|0x80000000):((x)>>1)

	)

237 
quõs˚Såu˘
 
	gquõs˚AddrSåu˘
[
CLUSTERS
];

238 
md_addr_t
 
	gTempIn°r
 = 0x1A2B3C4D;

239 
	gac˚ss_mem
 = 0;

240 
	gac˚ss_mem_id
 = -1;

241 
	g°›≥d_num_thªads
 = 0;

242 
	gRódFromWB
 = 0;

243 
cou¡î_t
 
	gˇcheMiss
[
MAXTHREADS
], 
	ghôInOthîCache
[MAXTHREADS];

244 
cou¡î_t
 
	gm_sqPª„tchC¡
 = 0;

245 
	gexecuãMaxIn¢
;

246 
	gdl2A˘uÆlyAc˚s£d
, 
	gm¨kedLöeRïœ˚d
;

247 
	gquõn£Wakeup
[
MAXTHREADS
];

248 
	gsimIn¢
[
MAXTHREADS
];

249 
	gÊushImpSèts
 = 0;

252 
	gthªadF‹ked
[4], 
	gÆlF‹ked
, 
	g°‹eC⁄dFaû
, 
	gtimeToRëu∫
 = 0;

253 
cou¡î_t
 
	gSt‹eC⁄dôi⁄FaûNum
;

254 
	gcﬁÀ˘SètB¨rõr
, 
	gcﬁÀ˘SètSt›
[
MAXTHREADS
];

255 
	gªÆSimCy˛e
;

256 
	ga˘uÆPro˚ss
;

257 
	gdißbÀ_øy
 = 1;

258 
	gfu_busy
[
CLUSTERS
], 
	gwb_d⁄e
[CLUSTERS], 
	gissue_d⁄e
[CLUSTERS], 
	g„tch_d⁄e
[CLUSTERS], 
	gcommô_d⁄e
[CLUSTERS], 
	gdi•©ch_d⁄e
[CLUSTERS];

259 
cou¡î_t
 
	gbrRecovîy
[
CLUSTERS
], 
	gexåaIn¢
[CLUSTERS];

261 #i‡ 
deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

262 
	g°ÆlNoBusSlŸ
;

263 
busSlŸCou¡
;

264 
	gbusU£d
;

265 
cou¡î_t
 
	gbusOccu∑ncy
 = 0;

269 #ifde‡
PULL_BACK


270 
cou¡î_t
 
	gpuŒbackBubbÀ
[
MAXTHREADS
], 
	gpuŒbackWaôCy˛e
[MAXTHREADS], 
	gpuŒbackD⁄eThisCy˛e
[MAXTHREADS], 
	gpuŒbackHôPªd
[MAXTHREADS], 
	gdl1MissThisCy˛e
[MAXTHREADS], 
	gdl1HôThisCy˛e
[MAXTHREADS], 
	gpuŒbackCy˛eCou¡
[MAXTHREADS],

271 
	gpuŒbackCou¡
[
MAXTHREADS
];

272 
cou¡î_t
 
	g¥edHôHô
[
MAXTHREADS
], 
	g¥edHôMiss
[MAXTHREADS], 
	g¥edMissHô
[MAXTHREADS], 
	g¥edMissMiss
[MAXTHREADS];

275 #ifde‡ 
MSHR


276 
	gmshr_size
 = 0;

277 
	gmshr_fuŒ
 = 0;

278 
	gmshr_cou¡
;

280 #ifde‡ 
MSHR_DIST


281 
	gmshr_size_di°
[
MSHRSIZE
];

283 
	gmshr_fuŒ_cou¡
;

285 #ifde‡
EUP_NETWORK


286 
cou¡î_t
 
	gEUP_íåy_fuŒ
;

290 
	gm_shLQSize
;

291 
	gm_shSQSize
;

292 
cou¡î_t
 
	gm_tŸÆSèŒ
[
MAXTHREADS
];

293 
cou¡î_t
 
	gm_sqLQFuŒ
[
MAXTHREADS
];

294 
cou¡î_t
 
	gm_sqSQFuŒ
[
MAXTHREADS
];

295 
cou¡î_t
 
	gm_RUUFuŒ
[
MAXTHREADS
];

296 
cou¡î_t
 
	gm_ªgFuŒ
[
MAXTHREADS
];

297 
cou¡î_t
 
	gm_issueFuŒ
[
MAXTHREADS
];

298 
cou¡î_t
 
	gm_û1Miss
[
MAXTHREADS
];

299 
cou¡î_t
 
	gm_„tchEm±y
[
MAXTHREADS
];

300 
cou¡î_t
 
	gm_STLC
[
MAXTHREADS
];

301 
cou¡î_t
 
	gm_å≠
[
MAXTHREADS
];

302 
cou¡î_t
 
	gm_LﬂdMiss
[
MAXTHREADS
];

303 
cou¡î_t
 
	gm_St‹eMiss
[
MAXTHREADS
];

305 
cou¡î_t
 
	gm_commôSèŒ
[
MAXTHREADS
];

307 
cou¡î_t
 
	gövÆid©i⁄_ª∂ay
[
MAXTHREADS
];

308 
cou¡î_t
 
	glﬂdLﬂdRïœyCou¡
[
MAXTHREADS
];

309 
	gövÆid©i⁄SèŒ
[
MAXTHREADS
], 
	gövÆid©eOthîCache
;

310 
	gcommôSèŒ
[
MAXTHREADS
];

313 
checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
);

314 
cou¡î_t
 
	glﬂdReje˘Rïœy
[
MAXTHREADS
], 
	glﬂdReje˘Cou¡
[MAXTHREADS], 
	glﬂdReje˘Sèt
[MAXTHREADS], 
	gm_sqNumLdRïœy
[MAXTHREADS], 
	gª∂ayIndex
[MAXTHREADS];

315 
	gªje˘RëryCy˛e
 = 3;

316 
cou¡î_t
 
	gldIssueCou¡
, 
	gld°Reje˘i⁄Cou¡
[
MAXTHREADS
];

318 
	g£qC⁄sRïœy
[
MAXTHREADS
], 
	g£qC⁄sIn¢Rïœy
[MAXTHREADS];

319 
cou¡î_t
 
	gtŸÆRUUsize
[
MAXTHREADS
], 
	gtŸÆLQsize
[MAXTHREADS], 
	gtŸÆSQsize
[MAXTHREADS];

320 
	gavgRUUsize
[
MAXTHREADS
], 
	gavgLQsize
[MAXTHREADS], 
	gavgSQsize
[MAXTHREADS];

322 
mè_maxthªads
;

323 
numThªads
[
MAXTHREADS
];

324 
	gcﬁÀ˘_°©s
 = 0;

325 
	gCOHERENT_CACHE
;

326 
	gMSI
;

327 
	g•ec_bíchm¨ks
;

328 
cou¡î_t
 
num_of_övÆid©i⁄s
;

330 
	gcﬁÀ˘_b¨rõr_°©s
[
CLUSTERS
];

331 
	gcﬁÀ˘_lock_°©s
[
CLUSTERS
];

332 
	g‰ìzeCou¡î
;

333 
	g°›sim
;

334 
	gÁ°fwd
;

337 
	goc_‹_cc_ac˚ss
 = 2;

338 #ifdef 
EDA


340 
ˇche_t
 *
	gˇche_dl0
[
THREADS_PER_JOB
];

342 
cou¡î_t
 
	gªcovîyCou¡
[8];

343 
cou¡î_t
 
	gnumBCQEm±y
[8];

346 
cou¡î_t
 
	göãrvÆCou¡
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

347 
cou¡î_t
 
	gtŸÆRñCE
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

348 
cou¡î_t
 
	gn⁄SktIn¢
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

349 
cou¡î_t
 
	gnumSyncIn°
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

350 
cou¡î_t
 
	gpuª_sync_ö¢
 = 0;

351 
cou¡î_t
 
	gpuª_skt_ö¢
 = 0;

354 
	$dl0_˛ónup
 ()

356 
i
;

358 
i
 = 0; i < 
numc⁄ãxts
; i++)

360 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
i
];

361 
jobId
 = 
cuºít
->
jobThdId
;

363 i‡(
cuºít
->
ma°îid
 != 0)

366 i‡(
cuºít
->
sim_num_ö¢
 > 
öãrvÆCou¡
[
jobId
])

368 
	`ÊushSñe˘ive
 (
ˇche_dl0
[
jobId
], jobId);

369 
öãrvÆCou¡
[
jobId
] +
DL0_CLEAUP_INTERVAL
;

372 
	}
}

375 
‹a˛e_°‹e_queue
 
	gOSQ
[8][
OSQ_size
];

376 
	gOSQ_num
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

377 
	gOSQ_hód
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

380 
	$födOSQ
 (
md_addr_t
 
addr
, 
width
, 
id
)

382 
i
, 
j
;

384 
i
 = (
OSQ_hód
[
id
] + 
OSQ_size
 - 1Ë% OSQ_size, 
j
 = 
OSQ_num
[id]; j > 0; j--, i = (i + OSQ_size - 1) % OSQ_size)

386 
bigWidth
 = 
OSQ
[
id
][
i
].
memWidth
 > 
width
 ? OSQ[id][i].memWidth : width;

387 
md_addr_t
 
lAddr
 = 
addr
 & ~(
bigWidth
 - 1);

388 
md_addr_t
 
osqAddr
 = 
OSQ
[
id
][
i
].
memAddr
 & ~(
bigWidth
 - 1);

390 i‡(
osqAddr
 =
lAddr
)

391  
i
;

394 
	}
}

396 #ifde‡ 
DECOUPLED_PREFETCH


397 
md_addr_t
 
	g¥efQueue
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

398 
md_addr_t
 
	g¥efQueue_pc
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

399 
cou¡î_t
 
	g¥efQueue_ö°Num
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

400 
	g¥efQueue_isWr⁄gP©h
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

401 
	g¥efQueue_hód
[
MAXTHREADS
] = 0;

402 
	g¥efQueue_èû
[
MAXTHREADS
] = 0;

403 
	g¥efQueue_size
[
MAXTHREADS
] = 0;

404 
	gmemMissC≠
 = 0;

405 
cou¡î_t
 
	gtŸÆPªfMissL©ícy
 = 0;

406 
	g¥efMissCou¡
 = 0;

407 
cou¡î_t
 
	gde˝PªfSèŒCou¡
 = 0;

408 
md_addr_t
 
	gœ°PªfAddr
 = 0;

414 
	gBRANCH_Q_NUM
;

415 
	gCHECKER_NUMBER
 = 0;

416 
	gPCB_BLK_SIZE
 = 128;

417 
	gINORDER_CHECKER
 = 0;

418 
	gOUTSTANDING_STORE_NUM
 = 128;

419 
	gcheckîVDD
, 
	gcheckîFªq
;

422 
gë_‰ì_ªg
 (, );

423 
commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
);

424 
com∂ëeWrôe
 ();

425 
öôP¨ÆÀlSimuœti⁄
 ();

426 
com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
);

427 
com∂ëeSt‹e_l
 (
thªadid
, 
md_addr_t
 
addr
, 
width
);

429 
md_Áu…_ty≥
 
WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
);

432 
£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
);

433 
fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
);

437 
li°ñt
 *
	gi‰ìli°_hód
[
MAXTHREADS
], *
	gi‰ìli°_èû
[MAXTHREADS];

438 
li°ñt
 *
	gf‰ìli°_hód
[
MAXTHREADS
], *
	gf‰ìli°_èû
[MAXTHREADS];

454 
	ghŸ•Ÿ_cy˛e_ßm∂ög_ötvl
;

457 
	gmax_ö°s
;

458 
	gmax_b¨rõr
;

461 
	g±ø˚_√…
 = 0;

462 *
	g±ø˚_›ts
[2];

465 
	gruu_ifq_size
;

468 
	gruu_bønch_≥«…y
;

471 
	g„tch_•ìd
;

475 *
	g¥ed_ty≥
;

481 *
	g¥ed_ty≥2
;

485 c⁄° 
	gcomböed2
 = 
FALSE
;

489 c⁄° 
	ghi°_imm
 = 
FALSE
;

497 
	gbimod_√…
 = 1;

498 
	gbimod_c⁄fig
[1] = { 2048 };

501 
	gtwﬁev_√…
 = 4;

502 
	gtwﬁev_c⁄fig
[4] = { 1, 1024, 8, 
FALSE
 };

505 
	gcomb_√…
 = 1;

506 
	gcomb_c⁄fig
[1] = { 1024 };

509 
	gtwobcgskew_√…
 = 6;

510 
	gtwobcgskew_c⁄fig
[6] = { 32768, 32768, 0, 22,

517 
	gtwobcgskew_√…2
 = 6;

518 
	gtwobcgskew_c⁄fig2
[6] = { 4096, 4096, 0, 12,

524 
	gøs_size
 = 8;

527 
	gbtb_√…
 = 2;

528 
	gbtb_c⁄fig
[2] = { 512, 4 };

531 
	gruu_decode_width
;

532 
	gruu_issue_width
;

536 
	gruu_ö‹dî_issue
;

539 
	gruu_ö˛ude_•ec
 = 
TRUE
;

542 
	gruu_commô_width
;

545 
	gRUU_size
 = 
RUUSIZE
;

548 
	gLSQ_size
 = 
LSQSIZE
;

550 
	gLSQ_size_˛u°î
;

552 #ifdef 
EDA


554 *
	gˇche_dl0_›t
;

557 
	gˇche_dl0_œt
;

561 *
	gˇche_dl1_›t
;

564 
	gˇche_dl1_œt
;

567 *
	gˇche_dl2_›t
;

570 
	gˇche_dl2_œt
;

572 *
	gˇche_û1_›t
;

575 
	gˇche_û1_œt
;

578 *
	gˇche_û2_›t
;

581 
	gˇche_û2_œt
;

584 
	gÊush_⁄_sysˇŒs
;

587 
	gcom¥ess_iˇche_addrs
;

590 
	gmem_√…
 = 2;

591 
	gmem_œt
[2] = { 18, 2 };

594 
	gmem_bus_width
;

595 
	gmem_bus_•ìd
;

596 
	gmem_p‹t_num
;

599 *
	gôlb_›t
;

602 *
	gdéb_›t
;

605 
	géb_miss_œt
;

608 
	g√tw‹k_ª˚ivî
;

609 
	g√tw‹k_c⁄Êi˘
;

612 
	gªs_ülu
 = 0;

615 
	gªs_imu…
 = 0;

617 #ifde‡
PORT_PER_BANK


619 
	gªs_memb™k
 = 0;

622 
	gªs_mem_p‹t_b™k
 = 0;

624 
	gªs_memb™k_˛u°î
;

629 
	gªs_memp‹t
 = 0;

632 
	gªs_ÂÆu
 = 0;

635 
	gªs_Âmu…
 = 0;

638 
	gªs_ülu_˛u°î
 = 0;

639 
	gªs_imu…_˛u°î
 = 0;

640 
	gªs_ÂÆu_˛u°î
 = 0;

641 
	gªs_Âmu…_˛u°î
 = 0;

644 
	gd©a_width
 = 64;

647 
powî_ªsu…_ty≥
 
powî
;

651 
	ga˘ivec⁄ãxts
;

653 
	gthªad_„tch
 = 
THREADFETCHLIMIT
;

654 
	gö°_thªad_„tch
 = 
FETCHLIMIT
;

655 
	gthªad_commô
 = 0;

657 
	#ICACHEBANKS
 8

	)

659 
	gib™k
 = 0;

662 
	g¥i‹ôy¶Ÿ
 = 0;

663 
	g¥i‹ôy
[
MAXTHREADS
];

666 
	gkey
[
MAXTHREADS
];

669 #ifde‡ 
PWR_CLUSTER


670 
cou¡î_t
 
	giqøm_ac˚ss_˛
[
CLUSTERS
];

671 
cou¡î_t
 
	gfqøm_ac˚ss_˛
[
CLUSTERS
];

672 
cou¡î_t
 
	giwakeup_ac˚ss_˛
[
CLUSTERS
];

673 
cou¡î_t
 
	gfwakeup_ac˚ss_˛
[
CLUSTERS
];

674 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

675 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

676 
cou¡î_t
 
	gúegfûe_ac˚ss_˛
[
CLUSTERS
];

677 
cou¡î_t
 
	g‰egfûe_ac˚ss_˛
[
CLUSTERS
];

678 
cou¡î_t
 
	gülu1_ac˚ss_˛
[
CLUSTERS
];

679 
cou¡î_t
 
	gülu2_ac˚ss_˛
[
CLUSTERS
];

680 
cou¡î_t
 
	gÁlu1_ac˚ss_˛
[
CLUSTERS
];

681 
cou¡î_t
 
	gÁlu2_ac˚ss_˛
[
CLUSTERS
];

682 
cou¡î_t
 
	gúesu…bus_ac˚ss_˛
[
CLUSTERS
];

683 
cou¡î_t
 
	g‰esu…bus_ac˚ss_˛
[
CLUSTERS
];

686 
cou¡î_t
 
	glsq_°‹e_d©a_ac˚ss
 = 0;

688 #ifde‡
DE_CENTRALIZED_POWER_BUG


689 
cou¡î_t
 
	glsq_¥eg_ac˚ss_˛
[
LSQ_PARTS
];

690 
cou¡î_t
 
	glsq_wakeup_ac˚ss_˛
[
LSQ_PARTS
];

691 
cou¡î_t
 
	glsq_ac˚ss_˛
[
LSQ_PARTS
];

692 
	gexåa_lsq
 = 0;

693 
	gexåa_lsq_cou¡
 = 0;

694 
	gdi•_°‹e_°Æl
 = 0;

696 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

697 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

698 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

701 #ifde‡
RES1_FULL_MASK


702 
	giq_˛_fuŒ_mask
;

703 
	gfq_˛_fuŒ_mask
;

704 
	gúeg_˛_fuŒ_mask
;

705 
	g‰eg_˛_fuŒ_mask
;

706 
	gªs1_˛_thrd_mask
[
MAXTHREADS
];

709 
cou¡î_t
 
	glsq_tŸÆ_p›_cou¡_cy˛e
 = 0;

710 
cou¡î_t
 
	glsq_num_p›_cou¡_cy˛e
 = 0;

711 
cou¡î_t
 
	gúegfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

712 
cou¡î_t
 
	gúegfûe_num_p›_cou¡_cy˛e
 = 0;

713 
cou¡î_t
 
	g‰egfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

714 
cou¡î_t
 
	g‰egfûe_num_p›_cou¡_cy˛e
 = 0;

715 
cou¡î_t
 
	gúesu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

716 
cou¡î_t
 
	gúesu…bus_num_p›_cou¡_cy˛e
 = 0;

717 
cou¡î_t
 
	g‰esu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

718 
cou¡î_t
 
	g‰esu…bus_num_p›_cou¡_cy˛e
 = 0;

720 #ifde‡
PROCESS_MODEL


721 
	gLa°Sh¨edAddªss
;

722 
	gLa°Sh¨edSize
;

727 
	#MAX_PCSTAT_VARS
 8

	)

728 
	gpc°©_√…
 = 0;

729 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

732 #ifde‡
TARGET_PISA


733 
	#IACOMPRESS
(
A
Ë\

	)

734 (
	gcom¥ess_iˇche_addrs
 ? ((((
	gA
Ë- 
	gcuºít
->
	gld_ãxt_ba£
Ë>> 1Ë+ cuºít->ld_ãxt_ba£Ë: (
A
))

735 
	#ISCOMPRESS
(
SZ
Ë\

	)

736 (
com¥ess_iˇche_addrs
 ? ((
SZ
) >> 1) : (SZ))

738 
	#IACOMPRESS
(
A
Ë(A)

	)

739 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

742 
bugcom∑t_mode
;

749 
	#FU_IALU_INDEX
 0

	)

750 
	#FU_IMULT_INDEX
 1

	)

751 
	#FU_MEMPORT_INDEX
 2

	)

752 
	#FU_FPALU_INDEX
 3

	)

753 
	#FU_FPMULT_INDEX
 4

	)

756 
ªs_desc
 
	gfu_c⁄fig
[] = {

764 {
I¡ALU
, 1, 1}

774 #i‡
deföed
(
MULT_DOES_ADD
)

775 {
I¡ALU
, 1, 1},

777 {
I¡MULT
, 3, 1},

778 {
I¡DIV
, 20, 19}

788 {
RdP‹t
, 2, 1},

789 {
WrP‹t
, 2, 1}

799 {
FlﬂtADD
, 2, 1},

800 {
FlﬂtCMP
, 2, 1},

801 {
FlﬂtCVT
, 2, 1}

811 {
FlﬂtMULT
, 4, 1},

812 {
FlﬂtDIV
, 12, 12},

813 {
FlﬂtSQRT
, 24, 24}

821 
	#PRED_BR_CHANGES
 0

	)

822 
	#PRED_JR_CHANGES
 0

	)

823 
	#DYNAMIC_CHANGE
 0

	)

824 
	#METRIC_CHANGE
 0

	)

825 
	#LINEAR_PHASE
 0

	)

827 #ifde‡
ALLOW_ANY_CLUSTER


828 
	#SMALLEST_CONFIG
 
CLUSTERS


	)

830 
	#SMALLEST_CONFIG
 4

	)

832 
	ga˘uÆ_˛u°îs
 = 
CLUSTERS
;

837 #ifde‡
PORT_PER_BANK


838 
	gCACHEPORTS
;

839 
	gRES_CACHEPORTS
;

840 
RES_CACHE_PORTS
;

841 
	ga˘uÆ_ˇchï‹ts
;

843 
	ga˘uÆ_ˇchï‹ts
;

846 #ifde‡ 
CENTRALIZED_STEER


847 
	gdi•©ch_˛u°î
 = 0;

849 #ifde‡
DISPATCH_CLUSTER


850 
	gdi•©ch_˛
[
CLUSTERS
];

855 #ifde‡
N_WAY_STEER


856 #i‚de‡
FIXED_N_WAY


858 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

862 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

864 
	g°ìr_˛u°î_thrd
[
MAXTHREADS
][
CLUSTERS
];

865 
	gabs_°ìr
 = 0;

866 
°ìr_öô
 ();

868 #ifde‡ 
CLUSTER_PRIORITY


869 
	g¥i‹ôy_˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

871 #ifde‡ 
THRD_PROFILE


872 #ifde‡
mix_8_f


873 
	gn_limô_thrd
[] = { 8, 8, 8, 8, 8, 4, 2, 2 };

875 #ifde‡
mix_8_i


876 
	gn_limô_thrd
[] = { 8, 8, 8, 2, 4, 2, 2, 4 };

878 #ifde‡
mix_8_if


879 
	gn_limô_thrd
[] = { 2, 2, 2, 4, 8, 8, 8, 8 };

881 #ifde‡
mix_8_m


882 
	gn_limô_thrd
[] = { 2, 2, 2, 2, 8, 8, 8, 8 };

884 #ifde‡
mix_4_i


885 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

887 #ifde‡
mix_4_f


888 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

890 #ifde‡
mix1_4_m


891 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

893 #ifde‡
mix2_4_m


894 
	gn_limô_thrd
[] = { 2, 2, 8, 8 };

897 
	gn_limô_thrd
[
MAXTHREADS
];

899 #ifde‡ 
CMC_START_N_WAY


900 
	gn_°¨t_cmc
[
MAXTHREADS
];

901 
	gn_°¨t_thrd_cmc
[
MAXTHREADS
];

903 
	gn_°¨t_thrd
[
MAXTHREADS
];

904 
	g√ighb‹_limô_thrd
[
MAXTHREADS
];

906 #ifde‡ 
N_WAY_ADAPT


907 
	gcﬁd_°¨t
 = 1;

908 
	gùc_ﬁd
[
MAXTHREADS
];

909 
	gn_limô_thrd_ﬁd
[
MAXTHREADS
];

910 
	gsim_num_ö¢_ﬁd
[
MAXTHREADS
];

911 
upd©e_n_limô
 ();

913 #ifde‡
THRD_PRIO_ADAPT


914 
¥i‹ôy_n_way
 ();

916 #ifde‡
ADAPT_LIMIT


917 
	gad≠t_limô_thrd
[
MAXTHREADS
];

920 #ifde‡
PDG_THRD_ADAPT


921 
pdg_thrd_n_way
 ();

923 #ifde‡
PDG_THRD_PRIO_ADAPT


924 
pdg_¥i‹ôy_n_way
 ();

926 #ifde‡
COMM_OPER_LIMIT


927 #ifde‡
AVG_LIMIT


928 
	gavg_high_limô
 = 
CLUSTERS
;

929 
	gavg_high_limô_cou¡
 = 0;

931 
	ghigh_limô_thrd
[
MAXTHREADS
];

932 
	ghigh_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

933 
	ghigh_limô_di°
[
CLUSTERS
 + 1];

936 #ifde‡
PDG_ADAPT


937 
pdg_n_way
 ();

939 
	gn_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

940 
	gn_limô_di°
[
CLUSTERS
 + 1];

943 #ifde‡ 
CLUSTER_PRIORITY


945 
	g¥i‹ôy_˛
[
CLUSTERS
];

948 #ifde‡ 
PRIORITY_STEER


950 
	g¥i‹ôy_˛
[
CLUSTERS
];

952 #ifde‡ 
COMMUNICATION_STEER


953 #ifde‡
OPER_COMM_RATIO


954 
	g˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

955 
	g˛_num
[
MAXTHREADS
];

959 #ifde‡ 
THRD_WAY_CACHE


960 
	gn_ˇche_°¨t_thrd
[
MAXTHREADS
];

961 
	gn_ˇche_limô_thrd
[
MAXTHREADS
];

963 #ifde‡
N_WAY_CACHE_ADAPT


964 #ifde‡
PER_THREAD


965 
	govîÆl_n_ˇche_limô
;

966 
	g°¨t_up
;

967 
	gˇche_dl1_mis£s_ﬁd
[
MAXTHREADS
];

968 
	gˇche_dl1_hôs_ﬁd
[
MAXTHREADS
];

969 
	gˇche_dl1_miss_øã_ﬁd
[
MAXTHREADS
];

970 
	gn_ˇche_limô_ﬁd
[
MAXTHREADS
];

971 
	gn_ˇche_limô_di°
[
MAXTHREADS
][32];

972 
	gn_ˇche_limô_cou¡
;

974 #ifde‡ 
MEM_REF_PER


975 
	gˇche_miss_°abÀ_thrd
[
MAXTHREADS
];

978 
	govîÆl_n_ˇche_limô
;

979 
	g°¨t_up
 = 1;

980 
	gˇche_dl1_mis£s_ﬁd
;

981 
	gˇche_dl1_hôs_ﬁd
;

982 
	gˇche_dl1_miss_øã_ﬁd
;

983 
	gn_ˇche_limô_ﬁd
;

984 
	gn_ˇche_limô_di°
[32];

985 
	gn_ˇche_limô_cou¡
;

987 #ifde‡ 
MEM_REF


988 
	gˇche_miss_°abÀ
;

994 #ifde‡ 
MEM_REF_STAT


995 
	gmem_ªf_thrd
[
MAXTHREADS
];

996 
	gmem_ªf
;

999 #ifde‡
CMP_STEER


1000 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1003 #ifde‡
N_WAY_STEER


1004 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1007 
	gabs_ªs_°ìr
 = 0;

1008 
	gnum_°ìr
 = 0;

1010 
	göt_di°û±hªsh
 = (Ë(
MIN_INSN_INT
 / 6);

1011 
	gdi°û±abÀ
[
ITABLESIZE
];

1012 
èg_id_t
 
	gdi°û±abÀègid
[
ITABLESIZE
];

1013 
	gdi°ûpcou¡î
[
ITABLESIZE
];

1014 
	gdi°ûpßm∂es
[
ITABLESIZE
];

1015 
	gdi°ûpcou¡
 = 0;

1016 
	göt_di°ûp
 = 0;

1018 
	gskù≥d_br
 = 0;

1019 
	gdi°ûp
 = 0;

1020 
	gdi°ûp_vÆid
 = 0;

1022 
	gö¢16
 = 0;

1023 
	gö¢4
 = 0;

1025 
	gö¢_öãrvÆ
 = 
MIN_INSN_INT
;

1026 
	gh_ªgs
[
NUM_H_REGS
];

1028 
	gnum_£¡
 = 0;

1029 
	gnum_åùs
 = 1;

1030 
	gœ°˛u°î
 = 0;

1031 
	gö°£qnum
 = 0;

1033 
	gπhªsh
;

1034 
	gbπhªsh
;

1035 
	gm°hªsh
;

1036 
	gim°hªsh
;

1037 
	gcy˘hªsh
;

1038 
	g∫oi£
;

1039 
	gb∫oi£
;

1040 
	gm¢oi£
;

1041 
	gim¢oi£
;

1043 
	gªgdñay
 = 0;

1044 
	gªgå™s
 = 0;

1045 
	gtŸÆœt
 = 0;

1046 
	gtŸlds
 = 0;

1048 
	gÊushes
 = 0;

1049 
	gnum_Êushes
 = 0;

1050 
	g‰ì_˛u°î
 = 0;

1063 
	#CYCNOISE
 10

	)

1064 
	#NUMCYCTHRESH
 5

	)

1066 
	#STATINT
 
MIN_INSN_INT


	)

1068 
	gIIQ_size
 = 
IQSIZE
;

1069 
	gFIQ_size
 = 
FQSIZE
;

1070 
	gIPREG_size
 = 
IPREGSIZE
;

1071 
	gFPREG_size
 = 
FPREGSIZE
;

1073 
	gIIQ_size_˛u°î
;

1074 
	gFIQ_size_˛u°î
;

1075 
	gIPREG_size_˛u°î
;

1076 
	gFPREG_size_˛u°î
;

1079 #ifde‡
RAW


1080 
	gøwq_size
 = 
RAWSIZE
;

1082 #ifde‡ 
COMM_BUFF


1083 
	gtimewödow
 = 
TIMEWINDOW
;

1086 
	gn⁄_¸ô
 = 0;

1087 
	g¸ô
 = 0;

1088 
	gèb2_c‹r
 = 0;

1089 
	gèb2_öc‹r
 = 0;

1090 
	gèb2_miss
 = 0;

1091 
	gèb_c‹r
 = 0;

1092 
	gèb_öc‹r
 = 0;

1093 
	gèb_miss
 = 0;

1094 
	gèbÀ_ègs
[
MAXTHREADS
][
TABLESIZE
];

1095 
	gèbÀ_num
[
MAXTHREADS
][
TABLESIZE
];

1096 
	gèbÀ2_ègs
[
MAXTHREADS
][
TABLE2SIZE
];

1097 
	gèbÀ2_num
[
MAXTHREADS
][
TABLE2SIZE
];

1100 
	#DEV_PERIOD
 10

	)

1102 
	#DEDICATED_ADDER
 0

	)

1104 
	#DED_ADDER_LAT_DIFF
 0

	)

1106 
	gadd_Æu
 = 0;

1107 
	gn⁄add_Æu
 = 0;

1109 
	#PERFECT
 0

	)

1110 
	#PERFECTLAT
 1

	)

1111 
	gnŸw¨m
 = 1;

1112 
	gcy˛echeck
;

1116 #ifde‡
RAW


1117 
	gøwq
;

1118 
	gøwq_˛
[
CLUSTERS
];

1119 
	gøwqªady
 = 0;

1120 
	gøwqªady_˛
[
CLUSTERS
];

1121 
	gøwq_fuŒ
 = 0;

1122 
	gøwq_°Æl
 = 0;

1124 
	giissueq
;

1125 
	gfissueq
;

1127 #ifde‡
PWR_WAKE


1128 
	gúódy
 = 0;

1129 
	g‰ódy
 = 0;

1130 
	glsqªady
 = 0;

1131 
	giuƒódy
 = 0;

1132 
	gfuƒódy
 = 0;

1133 
	glsquƒódy
 = 0;

1134 
	gIREADY_cou¡
 = 0;

1135 
	gFREADY_cou¡
 = 0;

1136 
	gLSQREADY_cou¡
 = 0;

1137 
	gúódy_˛
[
CLUSTERS
];

1138 
	g‰ódy_˛
[
CLUSTERS
];

1139 
	glsqªady_˛
[
CLUSTERS
];

1140 
	giuƒódy_˛
[
CLUSTERS
];

1141 
	gfuƒódy_˛
[
CLUSTERS
];

1144 #ifde‡ 
SPLIT_LSQ


1145 
	glsq_˛
[
LSQ_PARTS
];

1146 
	glsquƒódy_˛
[
CLUSTERS
];

1151 #ifde‡ 
PARTITIONED_LSQ


1152 
	glsq_∑π_b™k
;

1153 
	glsq_∑π_˛
 = 
CLUSTERS
 / 
LSQ_PARTS
;

1154 
	glsq_∑π_thrd
;

1157 
	gúegfûe
;

1158 
	g‰egfûe
;

1159 
	gúegfûe_˛
[
CLUSTERS
];

1160 
	gõxåa_˛
[
CLUSTERS
];

1161 
	g‰egfûe_˛
[
CLUSTERS
];

1162 
	g„xåa_˛
[
CLUSTERS
];

1163 
	giissueq_˛
[
CLUSTERS
];

1164 
	gfissueq_˛
[
CLUSTERS
];

1165 
	gnum_°‹eq
[
CLUSTERS
];

1166 
	gmax_°‹eq
[
CLUSTERS
];

1167 
	gdi•_dñay
 = 0;

1169 
	göchk
 = 0;

1170 
	göchk2
 = 0;

1171 
	göchk3
 = 0;

1172 
cou¡î_t
 
	göûpchk
 = 0;

1173 
	gcycchk
 = 0;

1174 
	gcycchk2
 = 0;

1175 
	gcycchk3
 = 0;

1176 
	gbrchk
 = 0;

1177 
	gªfchk
 = 0;

1178 
	gö¢chk±
 = 0;

1179 
	gcy˛echk±
 = 0;

1180 
	gbrchk±
 = 0;

1181 
	gªfchk±
 = 0;

1182 
	gimischk±
 = 0;

1183 
	gmischk±
 = 0;

1184 
	gdñchk±
 = 0;

1185 
	g‹igöÆ_bsize
 = 0;

1186 
	gˇche_dl1_£t_shi·
 = 0;

1187 
	gpha£
 = 
SMALLEST_CONFIG
;

1188 
	gcy˛e_cou¡
[
NUMPHASES
 + 1];

1189 
	g°abÀ_cou¡
 = 0;

1190 
	g°›_ex∂
 = 0;

1192 
	gõxåa
;

1193 
	g„xåa
;

1194 
	givÆid
;

1195 
	gfvÆid
;

1197 
	gtŸ_úeg
 = 0;

1198 
	gtŸ_‰eg
 = 0;

1199 
	gtŸ_õxt
 = 0;

1200 
	gtŸ_„xt
 = 0;

1201 
	gtŸ_ö⁄dup
 = 0;

1202 
	gtŸ_‚⁄dup
 = 0;

1204 
	gcomm_dñay
 = 0;

1205 
	gnum_sögÀ
 = 0;

1206 
	giss_°Æl
 = 0;

1207 
	g„_°Æl
 = 0;

1208 
	gn_ªady
 = 0;

1209 
	gnum_£mi_f
 = 0;

1210 
	gnum_qw°Æl
 = 0;

1211 
	gö_this
 = 0;

1212 
	gnum_‰ìd
 = 0;

1213 
	gtŸ_dñ
 = 0;

1214 
	gtŸ_dñ_bw
 = 0;

1215 
	gnum_bw_of
 = 0;

1216 
	gºobö
 = 0;

1218 
	gmö_addr
 = 5600000000ULL;

1219 
	gmax_addr
 = 0;

1221 
	g°ddev
 = 0;

1222 
	gb™0
 = 0;

1223 
	gb™1
 = 0;

1224 
	gb™2
 = 0;

1225 
	gb™3
 = 0;

1226 
	gbö_acc_tŸ
 = 0;

1227 
	gbö_mis_tŸ
 = 0;

1228 
	gbö_acc
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1229 
	gbö_lds
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1230 
	gbö_tﬁ
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1231 
	gbö_mis
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1242 
	gaddr0
, 
	gaddr1
, 
	gaddr2
;

1244 
	#HIST
 4

	)

1245 
	gnum_issued
 = 0;

1246 
	giss_øã
[
HIST
];

1247 
	gissue_øã
 = 0;

1248 
	gtﬁ
[4][3];

1249 
	gtﬁ0
 = 0;

1250 
	gtﬁ1
 = 0;

1251 
	gtﬁ2
 = 0;

1252 
	gtŸ_tﬁ
 = 0;

1253 
	gtŸ_tﬁ0
 = 0;

1254 
	gtŸ_tﬁ1
 = 0;

1255 
	gtŸ_tﬁ2
 = 0;

1256 
	gtŸ_tﬁ3
 = 0;

1257 
	gb™k_c⁄f
 = 0;

1258 
	g°_b™k_c⁄f
 = 0;

1260 #ifde‡
PORT_PER_BANK


1261 
	gmiss_num
[
MAXCACHEPORTS
];

1262 
	gªf_num
[
MAXCACHEPORTS
];

1264 
	gmiss_num
[
CACHEPORTS
];

1265 
	gªf_num
[
CACHEPORTS
];

1267 
	gªf_N
;

1269 
	gdi•_time
[
MD_TOTAL_REGS
];

1270 
	gli„time1
 = 0;

1271 
	gli„time2
 = 0;

1272 
	gwaôtime1
 = 0;

1273 
	gwaôtime2
 = 0;

1274 
	gc⁄swaôtime1
 = 0;

1275 
	gc⁄swaôtime2
 = 0;

1276 
	gnum1
 = 0;

1277 
	gnum2
 = 0;

1278 
	gnum11
 = 0;

1279 
	gnum22
 = 0;

1280 
	ghi°o
[122];

1282 
	gdi•_°Æls
 = 0;

1283 
	gˇu£1
 = 0;

1284 
	gˇu£2
 = 0;

1285 
	gˇu£3
 = 0;

1286 
	gˇu£4
 = 0;

1287 
	gˇu£5
 = 0;

1290 
	gIISSUEQ_cou¡
 = 0;

1291 
	gIISSUEQ_fcou¡
 = 0;

1292 
	gFISSUEQ_cou¡
 = 0;

1293 
	gFISSUEQ_fcou¡
 = 0;

1294 
	gIPREG_cou¡
 = 0;

1295 
	gIexåa_cou¡
 = 0;

1296 
	gIPREG_fcou¡
 = 0;

1297 
	gFPREG_cou¡
 = 0;

1298 
	gFexåa_cou¡
 = 0;

1299 
	gFPREG_fcou¡
 = 0;

1301 
	gúegfûe_˛_cou¡
[
CLUSTERS
];

1302 
	gõxåa_˛_cou¡
[
CLUSTERS
];

1303 
	g‰egfûe_˛_cou¡
[
CLUSTERS
];

1304 
	g„xåa_˛_cou¡
[
CLUSTERS
];

1305 
	giissueq_˛_cou¡
[
CLUSTERS
];

1306 
	gfissueq_˛_cou¡
[
CLUSTERS
];

1308 #ifde‡ 
SPLIT_LSQ


1309 
	glsq_˛_cou¡
[
LSQ_PARTS
];

1312 
	gno_di•_˛u°î
 = 0;

1313 
	gdi•_di°
[
TOTALFETCHLIMIT
 + 1];

1315 #ifde‡
RAW


1316 
	gøwq_cou¡
 = 0;

1317 
	gøwq_fcou¡
 = 0;

1318 
	gøwq_˛_cou¡
[
CLUSTERS
];

1319 
	gøwq_di°
[
RAWSIZE
 / 
CLUSTERS
];

1322 
	#P_TOTAL_REGS
 
IPREGSIZE
+
FPREGSIZE
+1

	)

1329 
	gp_tŸÆ_ªgs
 = 
P_TOTAL_REGS
;

1331 #ifde‡
RABMAP


1332 
	gö°_u£_exåa
[
P_TOTAL_REGS
];

1333 
	g…›m≠_exåa
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1334 
	g…›m≠_¥eg
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1337 
	gshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1338 
	g•ecshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1339 
	gshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1340 
	g•ecshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1341 
	gshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1342 
	g•ecshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1343 
	gshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1344 
	g•ecshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1345 
	gshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1346 
	g•ecshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1347 
	gÀv2¥ed1
[
LEV2SIZE
];

1348 
	gÀv2¥ed2
[
LEV2SIZE
];

1349 
	gÀv2¥ed3
[
LEV2SIZE
];

1350 
	gÀv2¥ed4
[
LEV2SIZE
];

1351 
	gÀv2¥ed5
[
LEV2SIZE
];

1353 
	gb™k_¥ed_c‹r
 = 0;

1354 
	gb™k_¥ed_wr⁄g
 = 0;

1355 
	gac_b™k_¥ed_c‹r
 = 0;

1356 
	gac_b™k_¥ed_wr⁄g
 = 0;

1358 #ifde‡
CACHE_MISS_STAT


1359 
	g•ec_rdb_miss
 = 0;

1360 
	g•ec_wrb_miss
 = 0;

1361 
	gcou¡_îr‹
 = 0;

1365 
powî_∑ømëî_c›y
 ();

1367 
bö_öô
 ();

1368 
ˇche_öô
 ();

1369 
ûp_öô
 ();

1370 
b™k¥ed_öô
 ();

1371 
ªg_öô
 ();

1372 
ˇche_ch™ge_c⁄fig
 ();

1373 
rög_‰ì
 ();

1374 
ˇche_upd©e
 ();

1375 
compuã_queue
 ();

1376 
ªg_cou¡
 ();

1377 
b¥ed_öô
 ();

1380 
sim∂e_ˇche_Êush
 (
ˇche_t
 *);

1381 
˛u°î_check
 (
md_addr_t
);

1382 
b™k_upd©e
 (
md_addr_t
, , );

1383 
°_rög_œt
 (
RUU_°©i⁄
 *);

1384 
rög_œt
 (, , , );

1385 
c›y_‰om
 ();

1386 
‰ìli°_ö£π
 (, );

1387 
check_RUU_LSQ_m©ch
 ();

1388 
check_ªg
 ();

1389 
powî_˛ór
 ();

1390 
sim_cyc
 ();

1391 
ˇlcuœã_¥i‹ôy
 ();

1392 
ö£π_fûlq
 (, 
md_addr_t
);

1394 #ifde‡
CYCLE_JUMP


1395 
cy˛e_jump
 ();

1396 
rög_‰ì_jump
 ();

1398 
gíîÆ_°©
 ();

1400 #ifde‡
EVENT_CACHE_UPDATE


1401 
mshr_öô
 ();

1409 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

1412 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

1415 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

1418 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

1421 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

1424 
cou¡î_t
 
	gsim_num_bønches
 = 0;

1427 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

1429 #ifde‡
TG


1430 
cou¡î_t
 
	gtg_øã
;

1431 
cou¡î_t
 
	gtŸÆ_∑ckës_gíî©i⁄
;

1432 
cou¡î_t
 
	gtŸÆ_ªad_∑ckës_gíî©i⁄
;

1433 
cou¡î_t
 
	gtŸÆ_wrôe_∑ckës_gíî©i⁄
;

1436 
cou¡î_t
 
	gsim_cy˛e
 = 0;

1437 
cou¡î_t
 
	gglobÆ_d©a_∑ckës_gíî©i⁄
 = 0;

1438 
cou¡î_t
 
	gMëaPackës_1
;

1439 
cou¡î_t
 
	gD©aPackës_1
;

1440 
cou¡î_t
 
	gw¨mupEndCy˛e
 = 0;

1442 
cou¡î_t
 
	g∑øŒñ_sim_cy˛e
 = 1;

1443 
	gdi•2
, 
	gdi•1
;

1446 
cou¡î_t
 
	gIFQ_cou¡
;

1447 
cou¡î_t
 
	gIFQ_fcou¡
;

1448 
cou¡î_t
 
	gRUU_cou¡
;

1449 
cou¡î_t
 
	gRUU_fcou¡
;

1450 
cou¡î_t
 
	gLSQ_cou¡
;

1451 
cou¡î_t
 
	gLSQ_fcou¡
;

1453 
cou¡î_t
 
	gpÊ2Hô
 = 0;

1454 
cou¡î_t
 
	gpÊ2SecMiss
 = 0;

1455 
cou¡î_t
 
	gpÊ2PrimMiss
 = 0;

1457 #ifde‡ 
COUNT_LSQ


1458 
	gn⁄_issue_LSQ_cou¡
;

1459 
	gn⁄_issue_LSQ_fcou¡
;

1463 
cou¡î_t
 
	gsim_övÆid_addrs
;

1470 
	g±ø˚_£q
 = 0;

1478 
	g¥ed_≥r„˘
 = 
FALSE
;

1481 *
	gb¥ed_•ec_›t
;

1483 { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

1486 
ˇche_t
 *
	gˇche_û1
[
CLUSTERS
];

1489 
ˇche_t
 *
	gˇche_û2
;

1492 
ˇche_t
 *
	gˇche_dl1
[
CLUSTERS
];

1495 
ˇche_t
 *
	gˇche_dl2
;

1498 
ˇche_t
 *
	gôlb
[
CLUSTERS
];

1501 
ˇche_t
 *
	gdéb
[
CLUSTERS
];

1506 #ifde‡
LOAD_PREDICTOR


1508 
b¥ed_t
 *
	gld¥ed
;

1509 
	gld¥ed_•ec_upd©e
 = 0;

1510 
	gld¥ed_cou¡
 = 0, 
	gld¥ed_hô
 = 0;

1511 
	govî_miss
 = 0, 
	gundî_miss
 = 0;

1512 
	gˇche_miss
;

1513 
	gld_miss_thrd
[
MAXTHREADS
];

1515 #ifde‡
PDG


1516 
	gnum_pdg
 = 0;

1517 
	gpdg_di°
[
MAXTHREADS
 + 1];

1522 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

1525 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

1526 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

1527 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

1531 
	#STATVAL
(
STAT
Ë\

	)

1532 ((
	gSTAT
)->
	gsc
 =
sc_öt
 \

1533 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

1534 : ((
STAT
)->
sc
 =
sc_uöt
 \

1535 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

1536 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

1537 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

1538 : (
∑nic
("bad stat class"), 0))))

1540 
	gClu°îSåu˘
[
CLUSTERS
][CLUSTERS];

1541 
ThrdAc˚ssP©ã∫
[
MAXTHREADS
][
CLUSTERS
];

1542 
FILE
 *
outFûe
;

1543 
≥riodic_ad≠èti⁄
 ();

1545 
	g°›_„tch
 = 0;

1546 
	gœ°SimCy˛e
 = 0;

1549 
	g°¨tTakögSèti°ics
 = 0;

1551 
	#PERFECTBANKPREDICTOR
 1

	)

1554 
	$öôClu°îInfo
 ()

1556 
i
, 
l
;

1558 
i
 = 0; i < 
CLUSTERS
; i++)

1559 
l
 = 0;Ü < 
CLUSTERS
;Ü++)

1560 
Clu°îSåu˘
[
i
][
l
] = -1;

1562 
	}
}

1564 
	gHavePröãd
 = 0;

1567 
	$PrötClu°îInfo
 ()

1569 
gg
, 
º
;

1571 
º
 = 0;Ñ∏< 
CLUSTERS
;Ñr++)

1573 
	`¥ötf
 ("\n");

1574 
gg
 = 0; gg < 
CLUSTERS
; gg++)

1575 
	`¥ötf
 ("%d", 
Clu°îSåu˘
[
º
][
gg
]);

1577 
	}
}

1582 
	$mem_ac˚ss_œãncy
 (
blk_sz
)

1584 #ifde‡
MEM_MOD


1585 
chunks
 = (
ˇche_dl1
[0]->
bsize
)*
mem_p‹t_num
/ 
mem_bus_width
;

1587 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

1590 
	`as£π
 (
chunks
 > 0);

1592  ( 
mem_œt
[0] +

1593 – (()5/
mem_bus_•ìd
Ë* (
chunks
 - 1)));

1595 
	}
}

1597 #ifde‡
L2_COMM_LAT


1598 
	#L2_COMM_LAT_LOCATION
(
baddr
Ë(badd∏& (
CLUSTERS
 - 1))

	)

1605 #ifdef 
EDA


1608 
	$dl0_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1609 
md_addr_t
 
baddr
,

1610 
bsize
,

1611 
ˇche_blk_t
 *
blk
,

1612 
tick_t
 
now
,

1613 
thªadid
)

1615 
œt
;

1617 i‡(
ˇche_dl1
[
thªadid
])

1619 
oc_‹_cc_ac˚ss
 = 1;

1620 
byã_t
 *
l0ˇche_löe
 = 
	`ˇŒoc
 (
bsize
,  (byte_t));

1622 
	`ˇcheBc›y
 (
Ród
, 
blk
, 0, 
l0ˇche_löe
, 
bsize
);

1624 #ifde‡ 
LDTH_USEONLY_L2


1626 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, (
baddr
 & ~(
bsize
 - 1)), 
l0ˇche_löe
, bsize,

1627  
now
, 
NULL
, NULL, 
thªadid
);

1628 
l1HôFœg
 = 0;

1631 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
cmd
, (
baddr
 & ~(
bsize
 - 1)), 
l0ˇche_löe
, bsize,

1632  
now
, 
NULL
, NULL, 
thªadid
);

1634 
	`ˇcheBc›y
 (
Wrôe
, 
blk
, 0, 
l0ˇche_löe
, 
bsize
);

1635 
	`‰ì
 (
l0ˇche_löe
);

1637 
oc_‹_cc_ac˚ss
 = 2;

1639 #ifde‡ 
HIGHER_LDTH_L1LAT


1640 
œt
 +
LDTH_L1LAT
;

1642 i‡(
cmd
 =
Ród
)

1643  
œt
;

1649 i‡(
cmd
 =
Ród
)

1650  
	`mem_ac˚ss_œãncy
 (
bsize
);

1654 
	}
}

1657 
RUU_°©i⁄
 *
	grsCacheAc˚ss
 = 
NULL
;

1658 
FILE
 *
	gÂ_åa˚
;

1661 
dl1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1662 
md_addr_t
 
baddr
,

1663 
bsize
,

1664 
ˇche_blk_t
 *
blk
,

1665 
tick_t
 
now
,

1666 
thªadid


1667 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1668 , 
˛u°î


1672 
	gœt
;

1673 
	gwhich_thªad
, 
	gi
;

1674 
	gÊag
 = 0;

1675 
	gwhich_thªad
 = 
thªadid
;

1677 #ifde‡ 
STREAM_PREFETCHER


1679 
œunch_•
 (
baddr
, 
thªadid
);

1682 i‡(
	gˇche_dl2
)

1686 #ifde‡
DIRECTORY


1687 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, NULL, 
which_thªad
);

1689 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, 
which_thªad
);

1692 
	gdˇche2_ac˚ss
++;

1693 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1694 i‡(
	gcmd
 =
Ród
)

1695  
œt
;

1702 i‡(
	gcmd
 =
Ród
)

1703  
mem_ac˚ss_œãncy
 (
bsize
);

1709 
dl2_¥e„tch_a˘ive
;

1713 
dl2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1714 
md_addr_t
 
baddr
,

1715 
bsize
,

1716 
ˇche_blk_t
 *
blk
,

1717 
tick_t
 
now
,

1718 
thªadid


1719 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1720 , 
˛u°î


1724 #ifde‡ 
STREAM_PREFETCHER


1726 i‡(!
	gdl2_¥e„tch_a˘ive
)

1728 
ö£π_•
 (
baddr
, 
thªadid
);

1732 
	gœt
;

1737 #ifde‡
MEM_MOD


1738 
	g§c
, 
	gp‹t_num
, 
	gx
, 
	gy
;

1739 
	g§c
 = (
baddr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
MAXTHREADS
;

1740 
	gx
 = (
§c
 /
MESH_SIZE
);

1741 
	gy
 = (
§c
 %
MESH_SIZE
);

1742 
	gp‹t_num
 = (
x
/(
MESH_SIZE
/2))*2+
y
/(MESH_SIZE/(
mem_p‹t_num
/2));

1743 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

1744 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()5/
mem_bus_•ìd
);

1746 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
);

1748  
	gœt
;

1756 
û1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1757 
md_addr_t
 
baddr
,

1758 
bsize
,

1759 
ˇche_blk_t
 *
blk
,

1760 
tick_t
 
now
,

1761 
thªadid


1762 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1763 , 
˛u°î


1767 
	gœt
 = 0;

1768 
	gm©chnum
 = 0;

1770 i‡(
	gˇche_û2
)

1773 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL,

1774 #ifde‡
DIRECTORY


1775  
NULL
,

1777 
thªadid
 
IF_L2_COMM_LAT_CL
 (
˛u°î
));

1779 
	gdˇche2_ac˚ss
++;

1780 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1782 i‡(
	gcmd
 =
Ród
)

1783  
œt
;

1785 
∑nic
 ("writesÅo instruction memoryÇot supported");

1790 i‡(
	gcmd
 =
Ród
)

1791  
mem_ac˚ss_œãncy
 (
bsize
);

1793 
∑nic
 ("writesÅo instruction memoryÇot supported");

1795  
	gœt
;

1800 
û2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1801 
md_addr_t
 
baddr
,

1802 
bsize
,

1803 
ˇche_blk_t
 *
blk
,

1804 
tick_t
 
now
,

1805 
thªadid


1806 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1807 , 
˛u°î


1813 
	gœt
 = 0;

1814 i‡(
	gcmd
 =
Ród
)

1816 #ifde‡
MEM_MOD


1817 
§c
, 
p‹t_num
, 
x
, 
y
;

1818 
	g§c
 = (
baddr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
MAXTHREADS
;

1819 
	gx
 = (
§c
 /
MESH_SIZE
);

1820 
	gy
 = (
§c
 %
MESH_SIZE
);

1821 
	gp‹t_num
 = (
x
/(
MESH_SIZE
/2))*2+
y
/(MESH_SIZE/(
mem_p‹t_num
/2));

1822 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

1823 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()5/
mem_bus_•ìd
);

1824  
	gœt
;

1826  
mem_ac˚ss_œãncy
 (
bsize
);

1830 
∑nic
 ("writesÅo instruction memoryÇot supported");

1841 
ôlb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1842 
md_addr_t
 
baddr
,

1843 
bsize
,

1844 
ˇche_blk_t
 *
blk
,

1845 
tick_t
 
now
,

1846 
thªadid


1847 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1848 , 
˛u°î


1852 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

1855 
as£π
 (
phy_∑ge_±r
);

1858 *
	gphy_∑ge_±r
 = 0;

1861  
	géb_miss_œt
;

1866 
déb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1867 
md_addr_t
 
baddr
,

1868 
bsize
,

1869 
ˇche_blk_t
 *
blk
,

1870 
tick_t
 
now
,

1871 
thªadid


1872 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1873 , 
˛u°î


1877 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

1880 
as£π
 (
phy_∑ge_±r
);

1883 *
	gphy_∑ge_±r
 = 0;

1886  
	géb_miss_œt
;

1892 
	$sim_ªg_›ti⁄s
 (
›t_odb_t
 *
odb
)

1894 
	`›t_ªg_hódî
 (
odb
,

1899 
	`›t_ªg_uöt
 (
odb
, "-max:ö°", "maximumÇumbî o‡ö°'†tÿexecuã/thªad", (*Ë(&
max_ö°s
), 0,

1900  
TRUE
, 
NULL
);

1903 
	`›t_ªg_uöt
 (
odb
, "-max:b¨rõr", "maximumÇumbî o‡b¨rõr†tÿexecuã", (*Ë(&
max_b¨rõr
), 0,

1904  
TRUE
, 
NULL
);

1907 
	`›t_ªg_°rög_li°
 (
odb
, "-±ø˚", "gíî©êpùëø˚, i.e., <‚ame|°dout|°dîr> <ønge>", 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

1908  
FALSE
, 
NULL
, FALSE);

1911 
	`›t_ªg_nŸe
 (
odb
, "####### Network configuration #######\n");

1912 #ifde‡
OPTICAL_INTERCONNECT


1913 
	`›t_ªg_nŸe
 (
odb
, "Optical interconnect\n");

1915 #ifde‡
POPNET


1916 
	`›t_ªg_nŸe
 (
odb
, "Popnet interconnect\n");

1918 #ifde‡
CONF_BIT


1919 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation\n");

1921 #ifde‡
INV_ACK_CON


1922 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation for Invalidation\n");

1924 #ifde‡
WB_SPLIT


1925 
	`›t_ªg_nŸe
 (
odb
, "Write back split\n");

1927 #ifde‡
WB_SPLIT_NET


1928 
	`›t_ªg_nŸe
 (
odb
, "Write back split inÇetworkÜevel\n");

1930 #ifde‡
PSEUDO_SCHEDULE


1931 
	`›t_ªg_nŸe
 (
odb
, "InorderÖrobability-based scheduling (IRD)\n");

1933 #ifde‡
PSEUDO_SCHEDULE_REORDER


1934 
	`›t_ªg_nŸe
 (
odb
, "ReorderÖrobability-based scheduling (RRD)\n");

1936 #ifde‡
PSEUDO_SCHEDULE_DATA


1937 
	`›t_ªg_nŸe
 (
odb
, "Intelligent delay (IDD)\n");

1939 #ifde‡
L1_L2_CONF


1940 
	`›t_ªg_nŸe
 (
odb
, "L1ánd L2Ñeply conflictÑesolution\n");

1942 #ifde‡
ORDER_NODE


1943 
	`›t_ªg_nŸe
 (
odb
, "Ordering byÇode\n");

1945 #ifde‡
ORDER_ADDR


1946 
	`›t_ªg_nŸe
 (
odb
, "Ordering byáddr\n");

1948 
	`›t_ªg_nŸe
 (
odb
, "######Çetwork configurationÉnd ######\n");

1950 
	`›t_ªg_nŸe
 (
odb
,

1966 
	`›t_ªg_öt
 (
odb
, "-„tch:ifqsize", "ö°ru˘i⁄ fëch queuêsizê(ö in°s)", &
ruu_ifq_size
, 16,

1967  
TRUE
, 
NULL
);

1969 
	`›t_ªg_öt
 (
odb
, "-„tch:m∂©", "exå®bønch mis-¥edi˘i⁄Ü©ícy", &
ruu_bønch_≥«…y
, 7,

1970  
TRUE
, 
NULL
);

1972 
	`›t_ªg_öt
 (
odb
, "-„tch:•ìd", "•ìd o‡‰⁄t-íd o‡machöêªœtivêtÿexecuti⁄ c‹e", &
„tch_•ìd
, 1,

1973  
TRUE
, 
NULL
);

1977 
	`›t_ªg_nŸe
 (
odb
,

1988 
	`›t_ªg_°rög
 (
odb
, "-b¥ed", "bønchÖªdi˘‹Åy≥ {nŸèkí|èkí|≥r„˘|bimod|2Àv|comb|2bcgskew}", &
¥ed_ty≥
, "comb",

1989  
TRUE
, 
NULL
);

1991 
	`›t_ªg_Êag
 (
odb
, "-b¥ed:btb_u£_ma°îid", "u£ ma°îid i¿∂a˚ o‡thªadid whí i¡îa˘ög wôh BTB, givög youÖî-¥o˚s†ö°ód o‡≥r-thªadÉ¡rõs", &
b¥ed_btb_u£_ma°îid
, 
TRUE
,

1992  
TRUE
, 
NULL
);

1994 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:bimod", "bimodÆÖªdi˘‹ c⁄fig (<èbÀ size>)", 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

1995  
bimod_c⁄fig
,

1996  
TRUE
, 
NULL
, 
FALSE
);

1998 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2Àv", "2-ÀvñÖªdi˘‹ c⁄fig " "(<l1size> <l2size> <hi°_size> <x‹>)", 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

1999  
twﬁev_c⁄fig
,

2000  
TRUE
, 
NULL
, 
FALSE
);

2002 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:comb", "comböögÖªdi˘‹ c⁄fig (<mëa_èbÀ_size>)", 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

2003  
comb_c⁄fig
,

2004  
TRUE
, 
NULL
, 
FALSE
);

2007 
	`›t_ªg_öt
 (
odb
, "-di•1", "2bcgskewÅabÀ di•œ˚míàf‹Üev 1", &
di•1
, 0,

2008  
TRUE
, 
NULL
);

2011 
	`›t_ªg_öt
 (
odb
, "-di•2", "2bcgskewÅabÀ di•œ˚míàf‹Üev 2", &
di•2
, 0,

2012  
TRUE
, 
NULL
);

2015 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2bcgskew", "2Bc-gskewÖªdi˘‹ c⁄fig (<bim_size> <size> <bim_hi°_size> <g0_hi°_size> <g1_hi°_size> <mëa_hi°_size>)", 
twobcgskew_c⁄fig
, 
twobcgskew_√…
, &twobcgskew_nelt,

2016  
twobcgskew_c⁄fig
,

2017  
TRUE
, 
NULL
, 
FALSE
);

2021 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed2:2bcgskew", "2Bc-gskewÖªdi˘‹2 c⁄fig (<bim_size> <size> <bim_hi°_size> <g0_hi°_size> <g1_hi°_size> <mëa_hi°_size>)", 
twobcgskew_c⁄fig2
, 
twobcgskew_√…2
, &twobcgskew_nelt2,

2022  
twobcgskew_c⁄fig2
,

2023  
TRUE
, 
NULL
, 
FALSE
);

2026 
	`›t_ªg_öt
 (
odb
, "-b¥ed:øs", "ªtu∫áddªs†°ack sizê(0 f‹Çÿªtu∫ sèck)", &
øs_size
,Ñas_size,

2027  
TRUE
, 
NULL
);

2029 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:btb", "BTB c⁄fig (<num_£ts> <assocütivôy>)", 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

2030  
btb_c⁄fig
,

2031  
TRUE
, 
NULL
, 
FALSE
);

2033 
	`›t_ªg_°rög
 (
odb
, "-b¥ed:•ec_upd©e", "•ecuœtivê¥edi˘‹†upd©êö {ID|WB} (deÁu…Ç⁄-•ec)", &
b¥ed_•ec_›t
, 
NULL
,

2034  
TRUE
, 
NULL
);

2038 
	`›t_ªg_öt
 (
odb
, "-comböed2", "u£ 2 comböedÖªdi˘‹s?", &
comböed2
, 
FALSE
,

2039  
TRUE
, 
NULL
);

2041 
	`›t_ªg_öt
 (
odb
, "-hi°_imm", "upd©êbønch hi°‹y immedüãly?", &
hi°_imm
, 
FALSE
,

2042  
TRUE
, 
NULL
);

2046 
	`›t_ªg_öt
 (
odb
, "-decode:width", "ö°ru˘i⁄ decodêB/W (ö°s/cy˛e)", &
ruu_decode_width
, 5,

2047  
TRUE
, 
NULL
);

2049 #i‚de‡
REMOVE_MY_CODE


2051 
	`›t_ªg_öt
 (
odb
, "-thrdf:limô", "Numbî o‡thªad fëch (thrd/cy˛e<=8)", &
thªad_„tch
, 
THREADFETCHLIMIT
,

2052  
TRUE
, 
NULL
);

2054 
	`›t_ªg_öt
 (
odb
, "-ö°thrdf:width", "ö°ru˘i⁄ fëch B/wÖîÅhªad (ö°s/cy˛e<=decode_width)", &
ö°_thªad_„tch
, 8,

2055  
TRUE
, 
NULL
);

2058 
	`›t_ªg_öt
 (
odb
, "-ùªgf:size", "öãgîÖhysiˇ»ªgi°î fûêsizê’î clu°î)", &
IPREG_size_˛u°î
, 80,

2059  
TRUE
, 
NULL
);

2061 
	`›t_ªg_öt
 (
odb
, "-Âªgf:size", "ÊﬂtögÖoöàphysiˇ»ªgi°î fûêsizê’î clu°î)", &
FPREG_size_˛u°î
, 80,

2062  
TRUE
, 
NULL
);

2064 
	`›t_ªg_öt
 (
odb
, "-iqueue:size", "öãgî queuêsizê(ö°sË’î clu°î)", &
IIQ_size_˛u°î
, 32,

2065  
TRUE
, 
NULL
);

2067 
	`›t_ªg_öt
 (
odb
, "-fqueue:size", "ÊﬂtögÖoöàqueuêsizê(ö°sË’î clu°î)", &
FIQ_size_˛u°î
, 32,

2068  
TRUE
, 
NULL
);

2070 #ifde‡
RAW


2071 
	`›t_ªg_öt
 (
odb
, "-øwqueue:size", "ªmŸêac˚s†queuêsizê(ö°s)", &
øwq_size
, 
RAWSIZE
,

2072  
TRUE
, 
NULL
);

2075 #ifde‡
ISSUE_PER_CLUSTER


2076 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/˛u°î/cy˛e)", &
ruu_issue_width
, 4,

2077  
TRUE
, 
NULL
);

2079 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/cy˛e)", &
ruu_issue_width
, 4,

2080  
TRUE
, 
NULL
);

2083 
	`›t_ªg_Êag
 (
odb
, "-issue:ö‹dî", "ru¿pùñöêwôh in-‹dî issue", &
ruu_ö‹dî_issue
, 
FALSE
,

2084  
TRUE
, 
NULL
);

2086 
	`›t_ªg_Êag
 (
odb
, "-issue:wr⁄g∑th", "issuêö°ru˘i⁄†dow¿wr⁄gÉxecuti⁄Ö©hs", &
ruu_ö˛ude_•ec
, 
TRUE
,

2087  
TRUE
, 
NULL
);

2090 
	`›t_ªg_öt
 (
odb
, "-commô:width", "ö°ru˘i⁄ commô B/W (ö°s/thªad/cy˛e)", &
ruu_commô_width
, 4,

2091  
TRUE
, 
NULL
);

2094 
	`›t_ªg_öt
 (
odb
, "-ruu:size", "ªgi°î upd©êunô (RUUËsize", &
RUU_size
, 16,

2095  
TRUE
, 
NULL
);

2098 
	`›t_ªg_öt
 (
odb
, "-lsq:size", "lﬂd/°‹êqueuê(LSQËsizê’î clu°î)", &
LSQ_size_˛u°î
, 8,

2099  
TRUE
, 
NULL
);

2101 
	`›t_ªg_öt
 (
odb
, "-lq:size", "lﬂd queuê(LQËsize", &
m_shLQSize
, 8,

2102  
TRUE
, 
NULL
);

2104 
	`›t_ªg_öt
 (
odb
, "-sq:size", "°‹êqueuê(SQËsize", &
m_shSQSize
, 8,

2105  
TRUE
, 
NULL
);

2107 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:vdd", "checkî vdd", &
checkîVDD
, 0.6,

2108  
TRUE
, 
NULL
);

2110 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:‰eq", "checkîÑu¬ögáàwh© fø˘i⁄ o‡fuŒ fªq", &
checkîFªq
, 0.5,

2111  
TRUE
, 
NULL
);

2114 
	`›t_ªg_nŸe
 (
odb
,

2124 #ifdef 
EDA


2125 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl0", "l0 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl0_›t
, "dl0:128:32:4:l",

2126  
TRUE
, 
NULL
);

2128 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl0œt", "l0 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl0_œt
, 1,

2129  
TRUE
, 
NULL
);

2132 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl1", "l1 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl1_›t
, "dl1:128:32:4:l",

2133  
TRUE
, 
NULL
);

2135 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl1œt", "l1 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl1_œt
, 1,

2136  
TRUE
, 
NULL
);

2138 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl2", "l2 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

2139  
TRUE
, 
NULL
);

2141 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl2œt", "l2 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl2_œt
, 6,

2142  
TRUE
, 
NULL
);

2144 #ifde‡
TG


2145 
	`›t_ªg_öt
 (
odb
, "-ˇche:tgøã", "åaffi¯gíî©i⁄Ñ©e", &
tg_øã
, 100,

2146  
TRUE
, 
NULL
);

2148 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û1", "l1 in° cachêc⁄fig, i.e., {<c⁄fig>|dl1|dl2|n⁄e}", &
ˇche_û1_›t
, "il1:512:32:1:l",

2149  
TRUE
, 
NULL
);

2151 
	`›t_ªg_nŸe
 (
odb
,

2161 
	`›t_ªg_öt
 (
odb
, "-ˇche:û1œt", "l1 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û1_œt
, 1,

2162  
TRUE
, 
NULL
);

2164 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û2", "l2 in°ru˘i⁄ cachêc⁄fig, i.e., {<c⁄fig>|dl2|n⁄e}", &
ˇche_û2_›t
, "dl2",

2165  
TRUE
, 
NULL
);

2167 
	`›t_ªg_öt
 (
odb
, "-ˇche:û2œt", "l2 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û2_œt
, 6,

2168  
TRUE
, 
NULL
);

2170 #ifde‡
L2_COMM_LAT


2171 
	`›t_ªg_Êag
 (
odb
, "-ˇche:l2commœt", "whëhîÅÿhavê®di°ribuãd L2 wôh communiˇti⁄Ü©ícõ†added", &
l2_comm_œt_íabÀd
, 
FALSE
, 
TRUE
, 
NULL
);

2174 
	`›t_ªg_Êag
 (
odb
, "-ˇche:Êush", "Êush cache†⁄ sy°em cÆls", &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

2176 
	`›t_ªg_Êag
 (
odb
, "-ˇche:icom¥ess", "c⁄vîà64-bô in°áddªs£†tÿ32-bô in°ÉquivÆíts", &
com¥ess_iˇche_addrs
, 
FALSE
,

2177  
TRUE
, 
NULL
);

2180 
	`›t_ªg_öt_li°
 (
odb
, "-mem:œt", "mem‹yác˚s†œãncy (<fú°_chunk> <öãr_chunk>)", 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

2181  
TRUE
, 
NULL
, 
FALSE
);

2183 
	`›t_ªg_öt
 (
odb
, "-mem:width", "mem‹yác˚s†bu†width (ö byãs)", &
mem_bus_width
, 8,

2184  
TRUE
, 
NULL
);

2185 
	`›t_ªg_Êﬂt
 (
odb
, "-mem:•ìd", "mem‹yác˚s†bu†•ìd (ö GHz)", &
mem_bus_•ìd
, 1.25,

2186  
TRUE
, 
NULL
);

2187 
	`›t_ªg_öt
 (
odb
, "-mem:p‹ts", "mem‹yác˚s†p‹ànumbî", &
mem_p‹t_num
, 4,

2188  
TRUE
, 
NULL
);

2191 
	`›t_ªg_°rög
 (
odb
, "-éb:ôlb", "ö°ru˘i⁄ TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

2193 
	`›t_ªg_°rög
 (
odb
, "-éb:déb", "d©®TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

2195 
	`›t_ªg_öt
 (
odb
, "-éb:œt", "ö°/d©®TLB mis†œãncy (ö cy˛es)", &
éb_miss_œt
, 30,

2196  
TRUE
, 
NULL
);

2198 #ifde‡
NET_ALGR


2202 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:ªc_Ægr", "ª˚ivîálg‹ism f‹Çëw‹k", &
√tw‹k_ª˚ivî
, 0,

2203  
TRUE
, 
NULL
);

2204 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:√t_Ægr", "c⁄Êi˘i⁄álg‹ism f‹Çëw‹k", &
√tw‹k_c⁄Êi˘
, 0,

2205  
TRUE
, 
NULL
);

2209 
	`›t_ªg_öt
 (
odb
, "-ªs:ülu", "tŸÆÇumbî o‡öãgî ALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ülu_˛u°î
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

2210  
TRUE
, 
NULL
);

2212 #i‚de‡
ALU_MERGE


2213 
	`›t_ªg_öt
 (
odb
, "-ªs:imu…", "tŸÆÇumbî o‡öãgî mu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_imu…_˛u°î
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

2214  
TRUE
, 
NULL
);

2217 
	`›t_ªg_öt
 (
odb
, "-maxThrds", "Maximum Numbî o‡Thªad†AŒowed", &
mè_maxthªads
, 1, 
TRUE
, 
NULL
);

2219 
	`›t_ªg_Êag
 (
odb
, "-Cohîít_Cache", "CohîíàCache", &
COHERENT_CACHE
, 1, 
TRUE
, 
NULL
);

2221 
	`›t_ªg_Êag
 (
odb
, "-MSI_¥Ÿ", "MSI PrŸocﬁ", &
MSI
, 0, 
TRUE
, 
NULL
);

2223 
	`›t_ªg_Êag
 (
odb
, "-SPEC", "SPEC Bíchm¨ks", &
•ec_bíchm¨ks
, 1, 
TRUE
, 
NULL
);

2225 #ifde‡ 
PORT_PER_BANK


2226 
	`›t_ªg_öt
 (
odb
, "-ªs:memb™k", "numbî o‡d©®ˇchêb™k†avaûabÀ (≥∏Clu°îÅÿCPU)", &
ªs_memb™k_˛u°î
, 2,

2227  
TRUE
, 
NULL
);

2229 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (≥∏b™k)", &
ªs_mem_p‹t_b™k
, 1,

2230  
TRUE
, 
NULL
);

2232 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (tÿCPU)", &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

2233  
TRUE
, 
NULL
);

2236 
	`›t_ªg_öt
 (
odb
, "-ªs:ÂÆu", "tŸÆÇumbî o‡ÊﬂtögÖoöàALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ÂÆu_˛u°î
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

2237  
TRUE
, 
NULL
);

2239 #i‚de‡
ALU_MERGE


2240 
	`›t_ªg_öt
 (
odb
, "-ªs:Âmu…", "tŸÆÇumbî o‡ÊﬂtögÖoöàmu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_Âmu…_˛u°î
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

2241  
TRUE
, 
NULL
);

2244 
	`›t_ªg_°rög_li°
 (
odb
, "-pc°©", "¥ofûê°©(sËagaö°Åexàaddr'†(mu… u£†ok)", 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

2245  
FALSE
, 
NULL
, 
TRUE
);

2247 
	`›t_ªg_Êag
 (
odb
, "-bugcom∑t", "›î©êö backw¨d-com∑tibÀ bug†modê(f‹Åe°ög o∆y)", &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

2249 
	`›t_ªg_öt
 (
sim_odb
, "-hŸ•Ÿ:ßm∂ög_ötvl", "how m™y cy˛e†bëwì¿ˇŒ†tÿupd©e_hŸ•Ÿ_°©s", &
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
,

2250  10000, 
FALSE
, 
NULL
);

2252 
	`›t_ªg_öt
 (
odb
, "-øy:dißbÀd", "øyá˘ive", &
dißbÀ_øy
, 1,

2253  
TRUE
, 
NULL
);

2256 
	`˛u°î_ªg_›ti⁄s
 (
odb
);

2257 
	`hŸ•Ÿ_ªg_›ti⁄s
 (
odb
);

2260 #ifde‡
MC


2261 
	`√tw‹k_ªg_›ti⁄s
 (
odb
);

2263 #ifde‡
OPTICAL_INTERCONNECT


2264 
	`›tiˇl_›ti⁄s
 (
odb
);

2267 
	}
}

2271 
	$sim_check_›ti⁄s
 (
›t_odb_t
 *
odb
,

2272 
¨gc
, **
¨gv
)

2274 
«me
[128], 
c
;

2275 
n£ts
, 
bsize
, 
assoc
;

2277 
i
;

2278 
c⁄ãxt
 *
cuºít
;

2280 #ifde‡
LOAD_PREDICTOR


2282 
ld¥ed
 = 
	`b¥ed_¸óã
 (
LDPªd2bô
,

2283  
bimod_c⁄fig
[0],

2295 #ifde‡
ISU_N2


2296 i‡(
ruu_issue_width
 < 1)

2297 
	`Áèl
 ("issue width must beÖositiveÇon-zero");

2299 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width - 1)) != 0)

2300 
	`Áèl
 ("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

2305 
IIQ_size
 = 
IIQ_size_˛u°î
;

2306 
FIQ_size
 = 
FIQ_size_˛u°î
;

2307 
IPREG_size
 = 
IPREG_size_˛u°î
;

2308 
FPREG_size
 = 
FPREG_size_˛u°î
;

2310 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2312 i‡(
IIQ_size
 < 1)

2313 
	`Áèl
 ("integer queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2315 i‡(
FIQ_size
 < 1)

2316 
	`Áèl
 ("floatingÖoint queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2318 #i‚de‡
REG_RENAME_CONFIGUARE


2319 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2322 i‡(
IPREG_size
 < 1)

2323 
	`Áèl
 ("integerÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2325 i‡(
FPREG_size
 < 1)

2326 
	`Áèl
 ("floatingÖointÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2328 #ifde‡
RAW


2329 
øwq_size
 = 
IIQ_size
;

2330 i‡(
øwq_size
 < 1 ||Ñawq_sizê> 
RAWSIZE
)

2331 
	`Áèl
 ("ªmŸêac˚s†queuê(%dËmu° bêposôivên⁄-zîÿ™dÜes†th™ RAWSIZE (%d)", 
øwq_size
, 
RAWSIZE
);

2334 i‡(
ruu_commô_width
 < 1)

2335 
	`Áèl
 ("commit width must beÖositiveÇon-zero");

2337 i‡(
RUU_size
 < 2 || (RUU_sizê> 
RUUSIZE
))

2338 
	`Áèl
 ("RUU sizêmu° bê®posôivênumbî > 1ánd < %d", 
RUUSIZE
);

2340 
LSQ_size
 = 
LSQ_size_˛u°î
;

2342 i‡(
LSQ_size
 < 2 || (LSQ_sizê> 
LSQSIZE
))

2343 
	`Áèl
 ("LSQ sizêmu° bê®posôivênumbî > 1ánd < %d", 
LSQSIZE
);

2345 #ifdef 
EDA


2347 i‡(!
	`my°ricmp
 (
ˇche_dl0_›t
, "none"))

2349 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2350 
ˇche_dl0
[
i
] = 
NULL
;

2354 i‡(
	`ssˇnf
 (
ˇche_dl0_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2355 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2357 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2359 
ˇche_dl0
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2360  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2361 
dl0_ac˚ss_‚
, 
ˇche_dl0_œt
, 
i
);

2362 #ifde‡
CACHE_SET_STAT


2363 i‡(
ˇche_dl0
[
i
]->
n£ts
 > 
MAXCACHESET
)

2364 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2371 i‡(!
	`my°ricmp
 (
ˇche_dl1_›t
, "none"))

2374 i‡(
	`°rcmp
 (
ˇche_dl2_›t
, "none"))

2375 
	`Áèl
 ("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

2376 
ˇche_dl2
 = 
NULL
;

2380 i‡(
	`ssˇnf
 (
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2381 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2383 
i
 = 0; i < 
CLUSTERS
; i++)

2385 
ˇche_dl1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2386  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2387 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
, 
i
);

2389 #ifde‡
CACHE_SET_STAT


2390 i‡(
ˇche_dl1
[
i
]->
n£ts
 > 
MAXCACHESET
)

2391 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2394 
ˇche_dl1_£t_shi·
 = 
ˇche_dl1
[0]->
£t_shi·
;

2395 
‹igöÆ_bsize
 = 
bsize
;

2397 i‡(!
	`my°ricmp
 (
ˇche_dl2_›t
, "none"))

2398 
ˇche_dl2
 = 
NULL
;

2401 i‡(
	`ssˇnf
 (
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2402 
	`Áèl
 ("badÜ2 D-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2404 
ˇche_dl2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2405  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2406 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
, -1);

2411 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "none"))

2413 
ˇche_û1
[0] = 
NULL
;

2416 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2417 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2418 
ˇche_û2
 = 
NULL
;

2420 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl1"))

2423 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2424 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2425 
ˇche_û2
 = 
NULL
;

2427 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl2"))

2429 i‡(!
ˇche_dl2
)

2430 
	`Áèl
 ("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

2431 
ˇche_û1
[0] = 
ˇche_dl2
;

2434 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2435 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2436 
ˇche_û2
 = 
NULL
;

2440 i‡(
	`ssˇnf
 (
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2441 
	`Áèl
 ("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2443 
i
 = 0; i < 
CLUSTERS
; i++)

2445 
ˇche_û1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2446  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2447 
û1_ac˚ss_‚
, 
ˇche_û1_œt
, 
i
);

2450 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "none"))

2451 
ˇche_û2
 = 
NULL
;

2452 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "dl2"))

2454 i‡(!
ˇche_dl2
)

2455 
	`Áèl
 ("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

2456 
ˇche_û2
 = 
ˇche_dl2
;

2460 i‡(
	`ssˇnf
 (
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2461 
	`Áèl
 ("badÜ2 I-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2463 
ˇche_û2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2464  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2465 
û2_ac˚ss_‚
, 
ˇche_û2_œt
, -1);

2470 
i
 = 0; i < 
CLUSTERS
; i++)

2472 i‡(
	`ssˇnf
 (
ôlb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2473 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2475 
ôlb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2476   (
md_addr_t
), 
assoc
,

2477 
	`ˇche_ch¨2pﬁicy
 (
c
), 
ôlb_ac˚ss_‚
,

2478  1, 
i
);

2481 
i
 = 0; i < 
CLUSTERS
; i++)

2483 i‡(
	`ssˇnf
 (
déb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2484 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2485 
déb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2486   (
md_addr_t
), 
assoc
,

2487 
	`ˇche_ch¨2pﬁicy
 (
c
), 
déb_ac˚ss_‚
,

2488  1, 
i
);

2491 i‡(
ˇche_dl1_œt
 < 1)

2492 
	`Áèl
 ("l1 data cacheÜatency must be greaterÅhan zero");

2494 i‡(
ˇche_dl2_œt
 < 1)

2495 
	`Áèl
 ("l2 data cacheÜatency must be greaterÅhan zero");

2497 i‡(
ˇche_û1_œt
 < 1)

2498 
	`Áèl
 ("l1 instruction cacheÜatency must be greaterÅhan zero");

2500 i‡(
ˇche_û2_œt
 < 1)

2501 
	`Áèl
 ("l2 instruction cacheÜatency must be greaterÅhan zero");

2503 i‡(
mem_√…
 != 2)

2504 
	`Áèl
 ("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

2506 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

2507 
	`Áèl
 ("all memoryáccessÜatencies must be greaterÅhan zero");

2509 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width - 1)) != 0)

2510 
	`Áèl
 ("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

2512 i‡(
éb_miss_œt
 < 1)

2513 
	`Áèl
 ("TLB missÜatency must be greaterÅhan zero");

2515 
ªs_ülu
 = 
ªs_ülu_˛u°î
 * 
CLUSTERS
;

2517 i‡(
ªs_ülu
 < 1)

2518 
	`Áèl
 ("number of integer ALU's must be greaterÅhan zero");

2519 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

2520 
	`Áèl
 ("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

2522 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

2524 #i‚de‡
ALU_MERGE


2525 
ªs_imu…
 = 
ªs_imu…_˛u°î
 * 
CLUSTERS
;

2526 i‡(
ªs_imu…
 < 1)

2527 
	`Áèl
 ("number of integer multiplier/dividers must be greaterÅhan zero");

2528 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

2529 
	`Áèl
 ("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

2530 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

2533 #ifde‡
PORT_PER_BANK


2534 
ªs_memb™k
 = 
ªs_memb™k_˛u°î
 * 
CLUSTERS
;

2536 i‡(
ªs_memb™k
 < 1)

2537 
	`Áèl
 ("number of memory system banks must be greaterÅhan zero");

2540 #ifde‡ 
PARTITIONED_LSQ


2541 
lsq_∑π_b™k
 = 
ªs_memb™k
 / 
LSQ_PARTS
;

2543 i‡(
ªs_mem_p‹t_b™k
 < 1)

2544 
	`Áèl
 ("number of memory systemÖorts/bank must be greaterÅhan zero");

2545 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAX_INSTS_PER_CLASS
)

2546 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2547 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAXCACHEPORTS
)

2548 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAXCACHEPORTS");

2549 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

2551 i‡(
ªs_memp‹t
 < 1)

2552 
	`Áèl
 ("number of memory systemÖorts must be greaterÅhan zero");

2553 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

2554 
	`Áèl
 ("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2555 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

2558 
ªs_ÂÆu
 = 
ªs_ÂÆu_˛u°î
 * 
CLUSTERS
;

2559 i‡(
ªs_ÂÆu
 < 1)

2560 
	`Áèl
 ("number of floatingÖoint ALU's must be greaterÅhan zero");

2561 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

2562 
	`Áèl
 ("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

2563 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

2565 #i‚de‡
ALU_MERGE


2566 
ªs_Âmu…
 = 
ªs_Âmu…_˛u°î
 * 
CLUSTERS
;

2567 i‡(
ªs_Âmu…
 < 1)

2568 
	`Áèl
 ("number of floatingÖoint multiplier/dividers must be > zero");

2569 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

2570 
	`Áèl
 ("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

2571 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

2573 #ifde‡
TOKENB


2574 i‡(
tokíB
)

2575 
	`tc_öô
 (
MAXTHREADS
, 
ˇche_dl2
->
assoc
 * cache_dl2->
n£ts
, cache_dl2->
bsize
);

2576 i‡(
LSQ_PARTS
 !(
n_way_ˇche
 * 
MAXTHREADS
))

2577 
	`Áèl
 ("This only supports 1 cacheÖerÅhread");

2579 #ifde‡
MC


2580 
	`√tw‹k_check_›ti⁄s
 ();

2582 
	`˛u°î_check_›ti⁄s
 ();

2583 
	`öô_lök_des¸_èbÀs
 ();

2584 
	`öô_routög_èbÀ
 ();

2585 
	`¨bôøry_routög_èbÀ_öô
 ();

2586 
	}
}

2590 
	$sim_aux_c⁄fig
 (
FILE
 * 
°ªam
)

2593 
	}
}

2596 
cou¡î_t
 
	gtŸÆUpgødes
 = 0;

2597 
cou¡î_t
 
	gtŸÆNëUpgødes
 = 0;

2598 
cou¡î_t
 
	gtŸÆUpgødesUßbÀ
 = 0;

2599 
cou¡î_t
 
	gtŸÆUpgødesBíeficül
 = 0;

2601 
cou¡î_t
 
	gtŸÆNëWrôes
 = 0;

2602 
cou¡î_t
 
	gtŸÆWrôesUßbÀ
 = 0;

2603 
cou¡î_t
 
	gtŸÆWrôesBíeficül
 = 0;

2604 
cou¡î_t
 
	gex˛usive_somewhîe
 = 0;

2605 
cou¡î_t
 
	g‰⁄t_wrôe
 = 0;

2607 
cou¡î_t
 
	gtŸÆL2WrôeReqHôs
 = 0;

2608 
cou¡î_t
 
	gtŸÆL2WrôeReqNoSh¨î
 = 0;

2609 
cou¡î_t
 
	gtŸÆL2WrôeReqDúty
 = 0;

2610 
cou¡î_t
 
	gdñayL2WrôeReqDúty
 = 0;

2611 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨ed
 = 0;

2612 
cou¡î_t
 
	gdñayL2WrôeReqSh¨ed
 = 0;

2614 
cou¡î_t
 
	gtŸÆL2RódReqHôs
 = 0;

2615 
cou¡î_t
 
	gtŸÆL2RódReqNoSh¨î
 = 0;

2616 
cou¡î_t
 
	gtŸÆL2RódReqDúty
 = 0;

2617 
cou¡î_t
 
	gdñayL2RódReqDúty
 = 0;

2619 
cou¡î_t
 
	gtŸÆL2RódReqSh¨ed
 = 0;

2620 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨edWT
 = 0;

2621 
cou¡î_t
 
	gtŸÆL2WrôeReqDútyWT
 = 0;

2622 
cou¡î_t
 
	gtŸÆL2RódReqDútyWT
 = 0;

2624 
cou¡î_t
 
	gtŸÆL1LöePªfU£
 = 0;

2625 
cou¡î_t
 
	gtŸÆL1LöePªfNoU£
 = 0;

2626 
cou¡î_t
 
	gtŸÆL1LöeRódU£
 = 0;

2627 
cou¡î_t
 
	gtŸÆL1LöeRódNoU£
 = 0;

2628 
cou¡î_t
 
	gtŸÆL1LöeWrôeU£
 = 0;

2629 
cou¡î_t
 
	gtŸÆL1LöeWrôeNoU£
 = 0;

2631 
cou¡î_t
 
	gtŸÆL1LöeExlU£d
 = 0;

2632 
cou¡î_t
 
	gtŸÆL1LöeExlInv
 = 0;

2633 
cou¡î_t
 
	gtŸÆL1LöeExlDr›
 = 0;

2635 
cou¡î_t
 
	gtŸÆL2ReqPrimMiss
 = 0;

2636 
cou¡î_t
 
	gtŸÆL2ReqSecMiss
 = 0;

2637 
cou¡î_t
 
	gtŸÆL2ReqHô
 = 0;

2638 
cou¡î_t
 
	gtŸÆL2ReqInTøns
 = 0;

2639 
cou¡î_t
 
	gtŸÆL2OwnReqInTøns
 = 0;

2640 
cou¡î_t
 
	gtŸÆL2ReqInInv
 = 0;

2642 
cou¡î_t
 
	gdñayL2ReqPrimMiss
 = 0;

2643 
cou¡î_t
 
	gdñayL2ReqSecMiss
 = 0;

2644 
cou¡î_t
 
	gdñayL2ReqHô
 = 0;

2645 
cou¡î_t
 
	gdñayL2ReqInTøns
 = 0;

2646 
cou¡î_t
 
	gdñayL2OwnReqInTøns
 = 0;

2647 
cou¡î_t
 
	gdñayL2ReqInInv
 = 0;

2649 
cou¡î_t
 
	gtŸÆWrôeReq
 = 0;

2650 
cou¡î_t
 
	gtŸÆWrôeReqInv
 = 0;

2651 
cou¡î_t
 
	gtŸÆWrôeDñay
 = 0;

2652 
cou¡î_t
 
	gtŸÆWrôeInvDñay
 = 0;

2653 
cou¡î_t
 
	gtŸÆUpgødeReq
 = 0;

2654 
cou¡î_t
 
	gtŸÆUpgødeReqInv
 = 0;

2655 
cou¡î_t
 
	gtŸÆUpgødeDñay
 = 0;

2656 
cou¡î_t
 
	gtŸÆUpgødeInvDñay
 = 0;

2658 
cou¡î_t
 
	gcou¡N⁄AŒocRódE¨ly
 = 0;

2662 
	$sim_ªg_°©s
 (
°©_sdb_t
 *
sdb
)

2664 
i
, 
j
;

2667 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög c⁄si°ícyÑïœy in°ru˘i⁄s", &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

2668 
	`°©_ªg_cou¡î
 (
sdb
, "puª_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
puª_num_ö¢
,Öuª_num_ö¢, 
NULL
);

2669 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãd in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
tŸÆ_num_ö¢
,ÅŸÆ_num_ö¢, 
NULL
);

2670 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆB¨rõrs", "tŸÆÇumbî o‡b¨rõrs", &
TŸÆB¨rõrs
, 0, 
NULL
);

2671 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆLocks", "tŸÆÇumbî o‡locks", &
TŸÆLocks
, 0, 
NULL
);

2672 #ifdef 
EDA


2673 
	`°©_ªg_cou¡î
 (
sdb
, "puª_sync_ö¢", "tŸÆÇumbî o‡maöÅhªad syn¯ö°ru˘i⁄†commôãd", &
puª_sync_ö¢
,Öuª_sync_ö¢, 
NULL
);

2674 
	`°©_ªg_cou¡î
 (
sdb
, "puª_skt_ö¢", "tŸÆÇumbî o‡maöÅhªad skàö°ru˘i⁄†commôãd", &
puª_skt_ö¢
,Öuª_skt_ö¢, 
NULL
);

2676 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†commôãd", &
sim_num_ªfs
, 0, 
NULL
);

2677 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_lﬂds", "tŸÆÇumbî o‡lﬂd†commôãd", &
sim_num_lﬂds
, 0, 
NULL
);

2678 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_num_°‹es", "tŸÆÇumbî o‡°‹e†commôãd", "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

2679 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_bønches", "tŸÆÇumbî o‡bønche†commôãd", &
sim_num_bønches
, 0, 
NULL
);

2680 
	`°©_ªg_öt
 (
sdb
, "sim_ñ≠£d_time", "tŸÆ simuœti⁄Åimêö sec⁄ds", &
sim_ñ≠£d_time
, 0, 
NULL
);

2681 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_ö°_øã", "simuœti⁄ s≥ed (ö in°s/£c)", "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

2682 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†execuãd", &
sim_tŸÆ_ö¢
, 0, 
NULL
);

2683 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†execuãd", &
sim_tŸÆ_ªfs
, 0, 
NULL
);

2684 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_lﬂds", "tŸÆÇumbî o‡lﬂd†execuãd", &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

2685 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_tŸÆ_°‹es", "tŸÆÇumbî o‡°‹e†execuãd", "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

2686 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_bønches", "tŸÆÇumbî o‡bønche†execuãd", &
sim_tŸÆ_bønches
, 0, 
NULL
);

2688 
	`°©_ªg_cou¡î
 (
sdb
, "sim_cy˛e", "tŸÆ simuœti⁄Åimêö cy˛es", &
sim_cy˛e
, 0, 
NULL
);

2689 
	`°©_ªg_cou¡î
 (
sdb
, "ªÆSimCy˛e", "", &
ªÆSimCy˛e
, 0, 
NULL
);

2690 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_IPC", "ö°ru˘i⁄†≥∏cy˛e", "sim_num_ö¢ / sim_cy˛e", 
NULL
);

2691 
	`°©_ªg_f‹muœ
 (
sdb
, "ªÆSimIPC", "", "puª_num_ö¢ /ÑólSimCy˛e", 
NULL
);

2692 
	`°©_ªg_f‹muœ
 (
sdb
, "maöEf„˘iveIPC", "", "puª_num_ö¢ / (ªÆSimCy˛ê- maö_thªad_°Æl_cou¡)", 
NULL
);

2693 
	`°©_ªg_cou¡î
 (
sdb
, "num_of_övÆid©i⁄s", "Numbî_Of_VÆid©i⁄s", &
num_of_övÆid©i⁄s
, 0, 
NULL
);

2694 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

2695 
	`°©_ªg_cou¡î
 (
sdb
, "busU£d", "Numbî o‡time†bu†i†u£d", &
busU£d
, 0, 
NULL
);

2696 
	`°©_ªg_cou¡î
 (
sdb
, "busOccu∑ncy", "Occu∑ncy o‡bu†öÇumbî o‡cy˛es", &
busOccu∑ncy
, 0, 
NULL
);

2697 
	`°©_ªg_f‹muœ
 (
sdb
, "busOccu∑ncyPîCy˛e", "Bu†occu∑ncyÖî cy˛e", "busOccu∑ncy /ÑólSimCy˛e", 
NULL
);

2698 
	`°©_ªg_cou¡î
 (
sdb
, "°ÆlNoBusSlŸ", "°ÆlNoBusSlŸ", &
°ÆlNoBusSlŸ
, 0, 
NULL
);

2700 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_CPI", "cy˛e†≥∏ö°ru˘i⁄", "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

2701 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_exec_BW", "tŸÆ in°ru˘i⁄†(mis-•e¯+ commôãdË≥∏cy˛e", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2702 
	`°©_ªg_cou¡î
 (
sdb
, "ldIssueCou¡", "tŸÆÜd issuê©tmït", &
ldIssueCou¡
, 0, 
NULL
);

2703 #ifde‡
PULL_BACK


2704 
ch2
[32];

2706 
i
 = 0; i < 
MAXTHREADS
; i++)

2708 
	`•rötf
 (
ch2
, "puŒbackCy˛eC¡_%d", 
i
);

2709 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
puŒbackCy˛eCou¡
[
i
], 0, 
NULL
);

2712 #ifde‡
DIRECTORY


2713 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_evít_cou¡", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆevítcou¡num
, 0, 
NULL
);

2714 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_¥e„tch
, 0, 
NULL
);

2715 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªq_evít_cou¡", "tŸÆÇum o‡ªque°ÉvíàöôÆ cª©ed", &
tŸÆªqcou¡num
, 0, 
NULL
);

2716 
	`°©_ªg_cou¡î
 (
sdb
, "St‹eC⁄dôi⁄FaûNum", "TŸÆ st‹êc⁄dôi⁄Æ faûedÇum", &
St‹eC⁄dôi⁄FaûNum
, 0, 
NULL
);

2717 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆUpgødes
, 0, 
NULL
);

2718 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_evít_cou¡", "tŸÆÇum o‡mis†evíàötü»¸óãd", &
tŸÆmisscou¡num
, 0, 
NULL
);

2719 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆNëUpgødes
, 0, 
NULL
);

2720 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesUßbÀ", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesUßbÀ
, 0, 
NULL
);

2721 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesBíeficül", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesBíeficül
, 0, 
NULL
);

2722 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesU£2", "tŸÆÇumbî o‡upgøde†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôNo
, 0, 
NULL
);

2724 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëWrôes", "tŸÆÇumbî o‡Wrôe†£í", &
tŸÆNëWrôes
, 0, 
NULL
);

2725 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesUßbÀ", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesUßbÀ
, 0, 
NULL
);

2726 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesBíeficül", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesBíeficül
, 0, 
NULL
);

2727 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesU£2", "tŸÆÇumbî o‡Wrôe†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôWM
, 0, 
NULL
);

2728 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNoEx˛usive", "tŸÆÇumbî o‡Wrôe†unußbÀ beˇu£ o‡ex˛usivêsomewhîêñ£", &
ex˛usive_somewhîe
, 0, 
NULL
);

2729 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆFr⁄tWrôe", "tŸÆÇumbî o‡Wrôe†unußvÀ beˇu£ o‡‰⁄àwrôe", &
‰⁄t_wrôe
, 0, 
NULL
);

2731 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqHôs", "tŸÆÇum o‡wrôêevíts", &
tŸÆL2WrôeReqHôs
, 0, 
NULL
);

2732 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqNoSh¨î", "tŸÆÇum o‡wrôêªq wôhÇÿsh¨îs", &
tŸÆL2WrôeReqNoSh¨î
, 0, 
NULL
);

2733 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDúty", "tŸÆÇum o‡wrôêªq wôh ju° o√ sh¨î", &
tŸÆL2WrôeReqDúty
, 0, 
NULL
);

2734 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqDúty", "Exå®dñayÅÿcom∂ëêwrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2WrôeReqDúty
, 0, 
NULL
);

2735 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDútyWT", "tŸÆÅime†wrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2WrôeReqDútyWT
, 0, 
NULL
);

2736 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨ed", "tŸÆÇum o‡wrôêªq wôh mu…ùÀ sh¨îs", &
tŸÆL2WrôeReqSh¨ed
, 0, 
NULL
);

2737 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqSh¨ed", "Exå®dñayÅÿcom∂ëêwrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
dñayL2WrôeReqSh¨ed
, 0, 
NULL
);

2738 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨edWT", "tŸÆÅime†wrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
tŸÆL2WrôeReqSh¨edWT
, 0, 
NULL
);

2740 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqHôs", "tŸÆÇum o‡RódÉvíts", &
tŸÆL2RódReqHôs
, 0, 
NULL
);

2741 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqNoSh¨î", "tŸÆÇum o‡RódÑeq wôhÇÿsh¨îs", &
tŸÆL2RódReqNoSh¨î
, 0, 
NULL
);

2742 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDúty", "tŸÆÇum o‡RódÑeq wôh ju° o√ sh¨î", &
tŸÆL2RódReqDúty
, 0, 
NULL
);

2743 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2RódReqDúty", "Exå®dñayÅÿcom∂ëêRódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2RódReqDúty
, 0, 
NULL
);

2744 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDútyWT", "tŸÆÅime†RódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2RódReqDútyWT
, 0, 
NULL
);

2745 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqSh¨ed", "tŸÆÇum o‡ªadÑeq wôh mu…ùÀ sh¨îs", &
tŸÆL2RódReqSh¨ed
, 0, 
NULL
);

2747 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfU£", "tŸÆ L1Üöê¥e„tche†u£ful", &
tŸÆL1LöePªfU£
, 0, 
NULL
);

2748 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfNoU£", "tŸÆ L1Üöê¥e„tche†nŸ u£ful", &
tŸÆL1LöePªfNoU£
, 0, 
NULL
);

2749 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódU£", "tŸÆ L1Üöêªad mis£†u£ful", &
tŸÆL1LöeRódU£
, 0, 
NULL
);

2750 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódNoU£", "tŸÆ L1Üöêªad mis£†nŸ u£ful", &
tŸÆL1LöeRódNoU£
, 0, 
NULL
);

2751 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeU£", "tŸÆ L1Üöêwrôêmis£†u£ful", &
tŸÆL1LöeWrôeU£
, 0, 
NULL
);

2752 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeNoU£", "tŸÆ L1Üöêwrôêmis£†nŸ u£ful", &
tŸÆL1LöeWrôeNoU£
, 0, 
NULL
);

2754 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlU£d", "tŸÆ L1ÜöêöÉx˛usivêmodêu£ful", &
tŸÆL1LöeExlU£d
, 0, 
NULL
);

2755 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlInv", "tŸÆ L1ÜöêöÉx˛usivêmodêövÆid©ed wôhouàu£", &
tŸÆL1LöeExlInv
, 0, 
NULL
);

2756 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlDr›", "tŸÆ L1ÜöêöÉx˛usivêmodêdr›ed wôhouàu£", &
tŸÆL1LöeExlDr›
, 0, 
NULL
);

2758 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqPrimMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
tŸÆL2ReqPrimMiss
, 0, 
NULL
);

2759 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqSecMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
tŸÆL2ReqSecMiss
, 0, 
NULL
);

2760 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqHô", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
tŸÆL2ReqHô
, 0, 
NULL
);

2761 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInTøns", "TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2ReqInTøns
, 0, 
NULL
);

2762 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2OwnReqInTøns", "TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2OwnReqInTøns
, 0, 
NULL
);

2763 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInInv", "TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
tŸÆL2ReqInInv
, 0, 
NULL
);

2765 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqPrimMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
dñayL2ReqPrimMiss
, 0, 
NULL
);

2766 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqSecMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
dñayL2ReqSecMiss
, 0, 
NULL
);

2767 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqHô", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
dñayL2ReqHô
, 0, 
NULL
);

2768 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
dñayL2ReqInTøns
, 0, 
NULL
);

2769 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2OwnReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
dñayL2OwnReqInTøns
, 0, 
NULL
);

2770 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInInv", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
dñayL2ReqInInv
, 0, 
NULL
);

2772 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆWrôeReq
, 0, 
NULL
);

2773 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆWrôeReqInv
, 0, 
NULL
);

2774 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆWrôeDñay
, 0, 
NULL
);

2775 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆWrôeInvDñay
, 0, 
NULL
);

2777 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆUpgødeReq
, 0, 
NULL
);

2778 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆUpgødeReqInv
, 0, 
NULL
);

2779 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆUpgødeDñay
, 0, 
NULL
);

2780 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆUpgødeInvDñay
, 0, 
NULL
);

2782 
	`°©_ªg_cou¡î
 (
sdb
, "cou¡N⁄AŒocRódE¨ly", "Numbî o‡time†®ªad mis†ªque° from L1 ha†bì¿£rvi˚dÉ¨ly wôhouàÆloˇti⁄", &
cou¡N⁄AŒocRódE¨ly
, 0, 
NULL
);

2783 #ifde‡
TG


2784 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_∑ckës_gíî©i⁄
, 0, 
NULL
);

2785 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªad_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_ªad_∑ckës_gíî©i⁄
, 0, 
NULL
);

2786 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_wrôe_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_wrôe_∑ckës_gíî©i⁄
, 0, 
NULL
);

2788 
	`°©_ªg_cou¡î
 (
sdb
, "L1_mshr_fuŒ", "tŸÆÇumbî o‡L1 msh∏ovîÊow", &
L1_mshr_fuŒ
, 0, 
NULL
);

2789 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_mshr", "tŸÆ sèŒ cy˛e†f‹ L1 msh∏ovîÊow", &
SèŒ_L1_mshr
, 0, 
NULL
);

2790 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ", "tŸÆÇumbî o‡L2 msh∏ovîÊow", &
L2_mshr_fuŒ
, 0, 
NULL
);

2791 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L2_mshr", "tŸÆ sèŒ cy˛e†f‹ L2 msh∏ovîÊow", &
SèŒ_L2_mshr
, 0, 
NULL
);

2792 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ_¥e„tch", "tŸÆÇumbî o‡L2 msh∏ovîÊow whíÖª„tch", &
L2_mshr_fuŒ_¥e„tch
, 0, 
NULL
);

2793 
	`°©_ªg_cou¡î
 (
sdb
, "L1_fifo_fuŒ", "tŸÆÇumbî o‡L1 fifÿovîÊow", &
L1_fifo_fuŒ
, 0, 
NULL
);

2794 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_fifo", "tŸÆ sèŒ cy˛e†f‹ L1 fifÿovîÊow", &
SèŒ_L1_fifo
, 0, 
NULL
);

2795 
	`°©_ªg_cou¡î
 (
sdb
, "Dú_fifo_fuŒ", "tŸÆÇumbî o‡dú fifÿovîÊow", &
Dú_fifo_fuŒ
, 0, 
NULL
);

2796 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_dú_fifo", "tŸÆ sèŒ cy˛e†f‹ dú fifÿovîÊow", &
SèŒ_dú_fifo
, 0, 
NULL
);

2797 
	`°©_ªg_cou¡î
 (
sdb
, "I≈ut_queue_fuŒ", "tŸÆÇumbî o‡öpuàqueuêovîÊow", &
I≈ut_queue_fuŒ
, 0, 
NULL
);

2798 
	`°©_ªg_cou¡î
 (
sdb
, "Ouçut_queue_fuŒ", "tŸÆÇumbî o‡ouçuàqueuêovîÊow", &
Ouçut_queue_fuŒ
, 0, 
NULL
);

2799 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_öput_queue", "tŸÆ sèŒ cy˛e†duêtÿöpuàqueuêovîÊow", &
SèŒ_öput_queue
, 0, 
NULL
);

2800 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_ouçut_queue", "tŸÆ sèŒ cy˛e†duêtÿouçuàqueuêovîÊow", &
SèŒ_ouçut_queue
, 0, 
NULL
);

2802 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆmissh™dÀtime
, 0, 
NULL
);

2803 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
«ck_cou¡î
, 0, 
NULL
);

2804 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
Êù_cou¡î
, 0, 
NULL
);

2805 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
L1_Êù_cou¡î
, 0, 
NULL
);

2806 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_ª∂y_bíefô", "tŸÆÇum o‡d©®ª∂y bíefô", &
e_to_m
, 0, 
NULL
);

2807 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_miss_h™dÀ_timê/ÅŸÆ_evít_cou¡", 
NULL
);

2808 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_ac˚ss", "tŸÆ mesh_√tw‹kác˚ss", &
tŸÆMeshH›Cou¡
, 0, 
NULL
);

2809 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_dñay", "tŸÆ mesh_√tw‹k dñay", &
tŸÆMeshH›Dñay
, 0, 
NULL
);

2810 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_mesh_√tw‹k_time", "cy˛e†≥∏mesh_√tw‹kác˚ss", "tŸÆ_mesh_√tw‹k_dñay /ÅŸÆ_mesh_√tw‹k_ac˚ss", 
NULL
);

2811 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_ac˚ss", "tŸÆ o±_√tw‹kác˚ss", &
tŸÆO±H›Cou¡
, 0, 
NULL
);

2812 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_dñay", "tŸÆ o±_√tw‹k dñay", &
tŸÆO±H›Dñay
, 0, 
NULL
);

2813 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_›t_√tw‹k_time", "cy˛e†≥∏›t_√tw‹kác˚ss", "tŸÆ_›t_√tw‹k_dñay /ÅŸÆ_›t_√tw‹k_ac˚ss", 
NULL
);

2814 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_loˇl_ˇche_ac˚ss", "tŸÆÜoˇ»dl2 cachêac˚s†numbî", &
loˇl_ˇche_ac˚ss
, 0, 
NULL
);

2815 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªmŸe_ˇche_ac˚ss", "tŸÆÑemŸêdl2 cachêac˚s†numbî", &
ªmŸe_ˇche_ac˚ss
, 0, 
NULL
);

2816 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_wb", "tŸÆÅwÿh›†övﬁve†duêtÿwrôêback", &
övﬁve_2_h›_wb
, 0, 
NULL
);

2817 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_touch", "tŸÆÅwÿh›†övﬁve†duêtÿtouch", &
övﬁve_2_h›_touch
, 0, 
NULL
);

2818 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s
, 0, 
NULL
);

2819 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s
, 0, 
NULL
);

2820 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves_wm", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_wm
, 0, 
NULL
);

2821 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves_wm", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_wm
, 0, 
NULL
);

2822 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_miss", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_miss
, 0, 
NULL
);

2823 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_miss", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_miss
, 0, 
NULL
);

2824 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_upgøde", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_upgøde
, 0, 
NULL
);

2825 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_upgøde", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_upgøde
, 0, 
NULL
);

2826 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_ªad", "tŸÆÖriv©êd©®f‹Ñód miss", &
d©a_¥iv©e_ªad
, 0, 
NULL
);

2827 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_wrôe", "tŸÆÖriv©êd©®f‹ wrôêmiss", &
d©a_¥iv©e_wrôe
, 0, 
NULL
);

2828 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_ªad", "tŸÆ sh¨ed d©®f‹Ñód miss", &
d©a_sh¨ed_ªad
, 0, 
NULL
);

2829 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_wrôe", "tŸÆ sh¨ed d©®f‹ wrôêmiss", &
d©a_sh¨ed_wrôe
, 0, 
NULL
);

2830 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_˛o£", "tŸÆÇumbî†o‡Æ»˛o£d c⁄sumîs", &
tŸÆ_Æl_˛o£
, 0, 
NULL
);

2831 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_nŸ_Æl_˛o£", "tŸÆÇumbî†o‡nŸáŒ clo£d c⁄sumîs", &
tŸÆ_nŸ_Æl_˛o£
, 0, 
NULL
);

2832 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_p_c_evíts", "tŸÆÖrodu˚∏™d c⁄sumî†evít†(shouldÉquÆÅÿ4 h›s)", &
tŸÆ_p_c_evíts
, 0, 
NULL
);

2833 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_c⁄sumîs", "tŸÆÇumbî†o‡c⁄sumîs", &
tŸÆ_c⁄sumîs
, 0, 
NULL
);

2834 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_ö_√ighb‹", "tŸÆÖackë†¨êöÇeighb‹hood", &
tŸÆ_∑ckës_ö_√ighb‹
, 0, 
NULL
);

2835 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_©_c‹√rs", "tŸÆÖackë†¨ê© c‹√rs", &
tŸÆ_∑ckës_©_c‹√rs
, 0, 
NULL
);

2836 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_Æmo°˛o£", "tŸÆÇumbî†o‡Æ»˛o£dánd c‹√∏c⁄sumîs", &
tŸÆ_Æl_Æmo°˛o£
, 0, 
NULL
);

2837 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_c⁄sumîs", "tŸÆ d©®∑ckë†o‡c⁄sumîs", &
tŸÆ_d©a_c⁄sumîs
, 0, 
NULL
);

2838 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_©_c‹√r", "tŸÆ d©®∑ckë†suµly fromáàc‹√rs", &
tŸÆ_d©a_©_c‹√r
, 0, 
NULL
);

2839 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_˛o£", "tŸÆ d©®∑ckë†¨êsuµlõd from clo£by sour˚s", &
tŸÆ_d©a_˛o£
, 0, 
NULL
);

2840 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_Ár", "tŸÆ d©®∑ckë†¨êsumµlõd from f¨ sour˚s", &
tŸÆ_d©a_Ár
, 0, 
NULL
);

2841 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_öside_≥r˚¡", "avîagêösidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_öside_≥r˚¡
, 0, 
NULL
);

2842 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_outside_≥r˚¡
, 0, 
NULL
);

2843 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_abs_≥r˚¡", "avîagêabsﬁuéy outsidê∑ckë†≥r˚¡(Á∏- c‹√r)", &
avîage_outside_abs_≥r˚¡
, 0, 
NULL
);

2844 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_c‹√r_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(c‹√r: should bêdivided byÅŸÆ_nŸ_Æl_˛os)", &
avîage_c‹√r_≥r˚¡
, 0, 
NULL
);

2845 #ifde‡
INV_ACK_CON


2846 
	`°©_ªg_doubÀ
 (
sdb
, "≥ndög_övÆid_cy˛es", "how m™y cy˛e†tÿövÆid©êthêˇchêlöe", &
≥ndög_övÆid_cy˛es
, 0, 
NULL
);

2849 
i
 = 0; i < 
MAXTHREADS
; i++)

2851 
	`•rötf
 (
ch2
, "sh¨î_böcou¡_%d", 
i
);

2852 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
sh¨î_num
[
i
], 0, 
NULL
);

2855 #ifde‡
MC


2857 
	`›tiˇl_ªg_°©s
 (
sdb
);

2859 #ifde‡
OPTICAL_INTERCONNECT


2860 
	`›tiˇl_ªg_°©s
 (
sdb
);

2864 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_cou¡", "cumuœtivêIFQ occu∑ncy", &
IFQ_cou¡
, 0, 
NULL
);

2865 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_fcou¡", "cumuœtivêIFQ fuŒ cou¡", &
IFQ_fcou¡
, 0, 
NULL
);

2866 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_occu∑ncy", "avg IFQ occu∑ncy (ö¢'s)", "IFQ_cou¡ / sim_cy˛e", 
NULL
);

2867 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_øã", "avg IFQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2868 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_œãncy", "avg IFQ occu∑¡Ü©ícy (cy˛e's)", "ifq_occu∑ncy / ifq_øã", 
NULL
);

2869 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËIFQ wa†fuŒ", "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

2871 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_cou¡", "cumuœtivêRUU occu∑ncy", &
RUU_cou¡
, 0, 
NULL
);

2872 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_fcou¡", "cumuœtivêRUU fuŒ cou¡", &
RUU_fcou¡
, 0, 
NULL
);

2873 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_occu∑ncy", "avg RUU occu∑ncy (ö¢'s)", "RUU_cou¡ / sim_cy˛e", 
NULL
);

2874 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_øã", "avg RUU di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2875 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_œãncy", "avg RUU occu∑¡Ü©ícy (cy˛e's)", "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

2876 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËRUU wa†fuŒ", "RUU_fcou¡ / sim_cy˛e", 
NULL
);

2878 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_cou¡", "cumuœtivêLSQ occu∑ncy", &
LSQ_cou¡
, 0, 
NULL
);

2879 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_fcou¡", "cumuœtivêLSQ fuŒ cou¡", &
LSQ_fcou¡
, 0, 
NULL
);

2880 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_occu∑ncy", "avg LSQ occu∑ncy (ö¢'s)", "LSQ_cou¡ / sim_cy˛e", 
NULL
);

2881 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_øã", "avg LSQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2882 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_œãncy", "avg LSQ occu∑¡Ü©ícy (cy˛e's)", "lsq_occu∑ncy /Üsq_øã", 
NULL
);

2883 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËLSQ wa†fuŒ", "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

2884 
	`°©_ªg_cou¡î
 (
sdb
, "dl2A˘uÆlyAc˚s£d", "", &
dl2A˘uÆlyAc˚s£d
, 0, 
NULL
);

2886 
	`°©_ªg_cou¡î
 (
sdb
, "¥e„tchLﬂd", "", &
m_sqPª„tchC¡
, 0, 
NULL
);

2888 
i
 = 0; i < 
numc⁄ãxts
; i++)

2890 
ch
[20], 
fm
[30], 
ch2
[20];

2892 
	`•rötf
 (
ch2
, "brRecovîy_%d", 
i
);

2893 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ wr⁄g bønches", &
brRecovîy
[
i
], 0, 
NULL
);

2895 
	`•rötf
 (
ch2
, "exåaIn¢_%d", 
i
);

2896 
	`°©_ªg_cou¡î
 (
sdb
, "exåaIn¢", "tŸÆÇumbî o‡wr⁄gÖ©h in¢Éxecuãd", &
exåaIn¢
[
i
], 0, 
NULL
);

2899 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2901 
ch2
[20];

2903 #ifdef 
EDA


2904 
	`•rötf
 (
ch2
, "n⁄SktIn¢_%d", 
i
);

2905 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆ N⁄ skñë⁄ in°ru˘i⁄†execuãd", &
n⁄SktIn¢
[
i
], 0, 
NULL
);

2906 
	`•rötf
 (
ch2
, "ªcovîyCou¡_%d", 
i
);

2907 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "Recovîy cou¡", &
ªcovîyCou¡
[
i
], 0, 
NULL
);

2908 
	`•rötf
 (
ch2
, "°ÆlCC_BOQEm±y_%d", 
i
);

2909 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "C‹ª˘√s†c‹ê„tch sèŒ duêtÿBOQÉm±y", &
numBCQEm±y
[
i
], 0, 
NULL
);

2910 
	`•rötf
 (
ch2
, "tŸÆRñCE_%d", 
i
);

2911 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆ Dl0 cachêevi˘i⁄s.", &
tŸÆRñCE
[
i
], 0, 
NULL
);

2912 
	`•rötf
 (
ch2
, "numSyncIn°_%d", 
i
);

2913 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆÇum o‡synchr⁄iz©i⁄ in°ru˘i⁄s", &
numSyncIn°
[
i
], 0, 
NULL
);

2917 
i
 = 0; i < 
MAXTHREADS
; i++)

2919 
ch2
[20];

2922 
	`•rötf
 (
ch2
, "thªad_sim_ö¢_%d", 
i
);

2923 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "≥∏thªad simÇum in¢", &
simIn¢
[
i
], 0, 
NULL
);

2924 
	`•rötf
 (
ch2
, "SèŒCou¡_%d", 
i
);

2925 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ sèŒ cou¡", &
¶ìpCou¡
[
i
], 0, 
NULL
);

2926 
	`•rötf
 (
ch2
, "quõn£Wakeup_%d", 
i
);

2927 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
quõn£Wakeup
[
i
], 0, 
NULL
);

2928 
	`•rötf
 (
ch2
, "£qC⁄sRïœy_%d", 
i
);

2929 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sRïœy
[
i
], 0, 
NULL
);

2930 
	`•rötf
 (
ch2
, "£qC⁄sIn¢Rïœy_%d", 
i
);

2931 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sIn¢Rïœy
[
i
], 0, 
NULL
);

2932 
	`•rötf
 (
ch2
, "ld°Reje˘i⁄Cou¡_%d", 
i
);

2933 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
ld°Reje˘i⁄Cou¡
[
i
], 0, 
NULL
);

2934 
	`•rötf
 (
ch2
, "TrueRïœy_%d", 
i
);

2935 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqNumLdRïœy
[
i
], 0, 
NULL
);

2937 
	`•rötf
 (
ch2
, "InvÆid©i⁄Rïœy_%d", 
i
);

2938 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
övÆid©i⁄_ª∂ay
[
i
], 0, 
NULL
);

2940 #ifde‡
RELAXED_CONSISTENCY


2941 
	`•rötf
 (
ch2
, "lﬂdLﬂdRïœy_%d", 
i
);

2942 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
lﬂdLﬂdRïœyCou¡
[
i
], 0, 
NULL
);

2944 
	`•rötf
 (
ch2
, "avgRUUsize_%d", 
i
);

2945 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgRUUsize
[
i
], 0, 
NULL
);

2946 
	`•rötf
 (
ch2
, "avgLQsize_%d", 
i
);

2947 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgLQsize
[
i
], 0, 
NULL
);

2948 
	`•rötf
 (
ch2
, "avgSQsize_%d", 
i
);

2949 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgSQsize
[
i
], 0, 
NULL
);

2950 
	`•rötf
 (
ch2
, "CommôSèŒ_%d", 
i
);

2951 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_commôSèŒ
[
i
], 0, 
NULL
);

2952 
	`•rötf
 (
ch2
, "TŸÆSèŒ_%d", 
i
);

2953 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_tŸÆSèŒ
[
i
], 0, 
NULL
);

2954 
	`•rötf
 (
ch2
, "RUUSèŒ_%d", 
i
);

2955 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_RUUFuŒ
[
i
], 0, 
NULL
);

2956 
	`•rötf
 (
ch2
, "LQSèŒ_%d", 
i
);

2957 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqLQFuŒ
[
i
], 0, 
NULL
);

2958 
	`•rötf
 (
ch2
, "SQSèŒ_%d", 
i
);

2959 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqSQFuŒ
[
i
], 0, 
NULL
);

2960 
	`•rötf
 (
ch2
, "St‹eMissSèŒ_%d", 
i
);

2961 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eMiss
[
i
], 0, 
NULL
);

2962 
	`•rötf
 (
ch2
, "LﬂdMissSèŒ_%d", 
i
);

2963 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdMiss
[
i
], 0, 
NULL
);

2964 
	`•rötf
 (
ch2
, "RegSèŒ_%d", 
i
);

2965 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_ªgFuŒ
[
i
], 0, 
NULL
);

2966 
	`•rötf
 (
ch2
, "IssueSèŒ_%d", 
i
);

2967 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_issueFuŒ
[
i
], 0, 
NULL
);

2968 
	`•rötf
 (
ch2
, "Il1missSèŒ_%d", 
i
);

2969 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_û1Miss
[
i
], 0, 
NULL
);

2970 
	`•rötf
 (
ch2
, "FëchSèŒ_%d", 
i
);

2971 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_„tchEm±y
[
i
], 0, 
NULL
);

2972 
	`•rötf
 (
ch2
, "STLCSèŒ_%d", 
i
);

2973 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_STLC
[
i
], 0, 
NULL
);

2974 
	`•rötf
 (
ch2
, "TøpSèŒ_%d", 
i
);

2975 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_å≠
[
i
], 0, 
NULL
);

2978 #ifde‡
LOAD_PREDICTOR


2980 i‡(
ld¥ed
)

2981 
	`b¥ed_ªg_°©s
 (
ld¥ed
, 
sdb
, 0);

2985 
i
 = 0; i < 
numc⁄ãxts
; i++)

2987 
	`ld_ªg_°©s
 (
sdb
, 
i
);

2988 
	`mem_ªg_°©s
 (
thec⁄ãxts
[
i
]->
mem
, 
sdb
);

2990 #ifdef 
EDA


2991 
i
 = 0; i < 
numc⁄ãxts
; i++)

2993 i‡(
ˇche_dl0
[
i
])

2994 
	`ˇche_ªg_°©s
 (
ˇche_dl0
[
i
], 
sdb
, i);

2998 
i
 = 0; i < 
CLUSTERS
; i++)

3000 i‡(
ˇche_dl1
[
i
])

3001 
	`ˇche_ªg_°©s
 (
ˇche_dl1
[
i
], 
sdb
, i);

3002 i‡(
ˇche_û1
[
i
])

3003 
	`ˇche_ªg_°©s
 (
ˇche_û1
[
i
], 
sdb
, i);

3004 i‡(
ôlb
[
i
])

3005 
	`ˇche_ªg_°©s
 (
ôlb
[
i
], 
sdb
, i);

3006 i‡(
déb
[
i
])

3007 
	`ˇche_ªg_°©s
 (
déb
[
i
], 
sdb
, i);

3011 i‡(
ˇche_dl2
)

3012 
	`ˇche_ªg_°©s
 (
ˇche_dl2
, 
sdb
, 0);

3015 
	`powî_ªg_°©s
 (
sdb
);

3018 
	`°©_ªg_cou¡î
 (
sdb
, "sim_övÆid_addrs", "tŸÆÇ⁄-•ecuœtivêbogu†addªs£†£í (debug v¨)", &
sim_övÆid_addrs
, 0, 
NULL
);

3020 
i
 = 0; i < 
pc°©_√…
; i++)

3022 
buf
[512], 
buf1
[512];

3023 
°©_°©_t
 *
°©
;

3027 
°©
 = 
	`°©_föd_°©
 (
sdb
, 
pc°©_v¨s
[
i
]);

3028 i‡(!
°©
)

3029 
	`Áèl
 ("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

3032 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

3033 
	`Áèl
 ("`-pc°©' sèti°iˇ»v¨übÀ `%s' i†nŸá¿öãgø»ty≥", 
°©
->
«me
);

3036 
pc°©_°©s
[
i
] = 
°©
;

3037 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
 (
°©
);

3040 
	`•rötf
 (
buf
, "%s_by_pc", 
°©
->
«me
);

3041 
	`•rötf
 (
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

3042 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
 (
sdb
, 
buf
, 
buf1
,

3044  (
PF_COUNT
 | 
PF_PDF
),

3046  
NULL
);

3050 #ifde‡
TOKENB


3051 i‡(
tokíB
)

3052 
	`tc_ªg_°©s
 (
sdb
);

3054 
	`˛u°î_ªg_°©s
 (
sdb
);

3055 
	}
}

3058 
lsq_öô
 ();

3059 
r¶ök_öô
 (
∆öks
);

3060 
rs_ˇche_öô
 ();

3061 
evítq_öô
 ();

3062 
ªadyq_öô
 ();

3063 
cv_öô
 (
thªadid
);

3064 
ruu_öô
 (
thªadid
);

3065 
åa˚r_öô
 (
thªadid
);

3066 
„tch_öô
 (
thªadid
);

3068 #ifde‡
DIRECTORY


3069 
dú_evítq_öô
();

3074 
	$sim_öô
 ()

3076 
i
;

3078 
sim_num_ªfs
 = 0;

3080 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

3083 i‡(
bimod_√…
 != 1)

3084 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3085 i‡(
btb_√…
 != 2)

3086 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3089 
i
 = 0; i < 
numc⁄ãxts
; i++)

3091 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

3092  
bimod_c⁄fig
[0],

3098  
btb_c⁄fig
[0],

3099  
btb_c⁄fig
[1],

3100  
øs_size
);

3103 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

3106 i‡(
twﬁev_√…
 != 4)

3107 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3108 i‡(
btb_√…
 != 2)

3109 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3111 
i
 = 0; i < 
numc⁄ãxts
; i++)

3113 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

3115  
twﬁev_c⁄fig
[0],

3116  
twﬁev_c⁄fig
[1],

3118  
twﬁev_c⁄fig
[2],

3119  
twﬁev_c⁄fig
[3],

3120  
btb_c⁄fig
[0],

3121  
btb_c⁄fig
[1],

3122  
øs_size
);

3125 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

3128 i‡(
twﬁev_√…
 != 4)

3129 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3130 i‡(
bimod_√…
 != 1)

3131 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3132 i‡(
comb_√…
 != 1)

3133 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

3134 i‡(
btb_√…
 != 2)

3135 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3137 
i
 = 0; i < 
numc⁄ãxts
; i++)

3139 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

3140  
bimod_c⁄fig
[0],

3141  
twﬁev_c⁄fig
[0],

3142  
twﬁev_c⁄fig
[1],

3143  
comb_c⁄fig
[0],

3144  
twﬁev_c⁄fig
[2],

3145  
twﬁev_c⁄fig
[3],

3146  
btb_c⁄fig
[0],

3147  
btb_c⁄fig
[1],

3148  
øs_size
);

3152 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


3153 #i‚de‡
CENTRALIZED_CACHE_BANK


3154 i‡(
ªs_memb™k
 < 
CLUSTERS
)

3156 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3157 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d < CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3158 
	`exô
 (1);

3161 i‡(
ªs_memb™k
 !
CLUSTERS
)

3163 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3164 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d ! CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3165 
	`exô
 (1);

3170 #ifde‡
PORT_PER_BANK


3171 
CACHEPORTS
 = 
RES_CACHEPORTS
 = 
RES_CACHE_PORTS
 = 
ªs_memb™k
;

3172 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

3175 #ifde‡
ISSUE_PER_CLUSTER


3181 
i
 = 0; i < 
numc⁄ãxts
; i++)

3183 i‡(
i
 == 0)

3185 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
Vdd
 * Vdd;

3186 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* (
Vdd
 / 2) * (Vdd / 2);

3187 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 1;

3191 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * 
Vdd
 * checkerVDD * Vdd;

3192 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * (
Vdd
 / 2) * checkerVDD * (Vdd / 2);

3193 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 
checkîVDD
;

3196 
	`ˇlcuœã_powî
 (&(
thec⁄ãxts
[
i
]->
powî
));

3198 i‡(
i
)

3200 
thec⁄ãxts
[
i
]->
powî
.
b¥ed_powî
 = 0;

3201 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_powî
 =Åhecontexts[0]->power.dcache2_power;

3203 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_decodî
 =Åhecontexts[0]->power.dcache2_decoder;

3204 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_w‹dlöe
 =Åhecontexts[0]->power.dcache2_wordline;

3205 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_bôlöe
 =Åhecontexts[0]->power.dcache2_bitline;

3206 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_£n£amp
 =Åhecontexts[0]->power.dcache2_senseamp;

3207 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_èg¨øy
 =Åhecontexts[0]->power.dcache2_tagarray;

3208 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_gc
 =Åhecontexts[0]->power.dcache2_gc;

3212 i‡(
hŸ•Ÿ_a˘ive
)

3213 
	`hŸ•Ÿ_öô
 ();

3214 
	}
}

3218 
simoo_ªg_obj
 (
ªgs_t
 *
ªgs
,

3219 
is_wrôe
,

3220 
md_ªg_ty≥
 
π
,

3221 
ªg
,

3222 
evÆ_vÆue_t
 *
vÆ
);

3226 
simoo_mem_obj
 (
mem_t
 *
mem
,

3227 
is_wrôe
,

3228 
md_addr_t
 
addr
,

3229 *
p
,

3230 
nbyãs
);

3234 
simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

3235 *
cmd
,

3236 
ªgs_t
 *
ªgs
,

3237 
mem_t
 *
mem
);

3240 
	#MAX_RS_LINKS
 65536

	)

3241 
cou¡î_t
 
	grs_lök_num
 = 0;

3243 
	gMAX_BR_NUM
;

3247 
	$sim_lﬂd_thªads
 (
¨gc
, **
¨gv
,

3248 **
ívp
)

3250 
j
, 
¨g_°©us
 = 1;

3251 
c⁄ãxt
 *
cuºít
;

3253 
numc⁄ãxts
 = 0;

3254 
j
 = 0; (j < 
¨gc
Ë&& (
numc⁄ãxts
 < 
MAXTHREADS
Ë&& 
¨g_°©us
; j++)

3256 
	`Ârötf
 (
°dîr
, "Inôülizög c⁄ãxà%d\n", 
numc⁄ãxts
);

3258 
¨g_°©us
 = 
	`ªad_thªad_¨gs
 (
ívp
, 
¨gv
[
j
], &
numc⁄ãxts
);

3260 
cuºít
 = 
thec⁄ãxts
[
j
];

3262 
cuºít
->
a˘uÆid
 = 0;

3265 
	`ld_lﬂd_¥og
 (
cuºít
->
‚ame
, cuºít->
¨gc
, cuºít->
¨gv
, 
ívp
, &(cuºít->
ªgs
), cuºít->
mem
, 
TRUE
, 
j
);

3269 i‡(
±ø˚_√…
 == 2)

3272 
	`±ø˚_›í
 ( 
±ø˚_›ts
[0],Ötrace_opts[1]);

3274 i‡(
±ø˚_√…
 == 0)

3279 
	`Áèl
 ("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

3282 
MAX_BR_NUM
 = 
ruu_ifq_size
 + 
RUU_size
;

3287 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
 ("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
 (fu_config));

3288 
	`r¶ök_öô
 (
MAX_RS_LINKS
);

3289 
	`rs_ˇche_öô
();

3290 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
;

3291 
j
 = 0; j < 
numc⁄ãxts
; j++)

3292 
	`åa˚r_öô
 (
j
);

3293 
j
 = 0; j < 
numc⁄ãxts
; j++)

3294 
	`„tch_öô
 (
j
);

3295 
j
 = 0; j < 
numc⁄ãxts
; j++)

3296 
	`cv_öô
 (
j
);

3297 
	`evítq_öô
 ();

3298 
	`ªadyq_öô
 ();

3300 #ifde‡
DIRECTORY


3301 
	`dú_evítq_öô
();

3302 
j
 = 0; j < 
numc⁄ãxts
+
MESH_SIZE
*2; j++)

3304 
dú_fifo_hód
[
j
] = 0;

3305 
dú_fifo_èû
[
j
] = 0;

3306 
dú_fifo_num
[
j
] = 0;

3307 
dú_fifo_p‹tu£
[
j
] = 0;

3308 
l1_fifo_hód
[
j
] = 0;

3309 
l1_fifo_èû
[
j
] = 0;

3310 
l1_fifo_num
[
j
] = 0;

3311 
l1_fifo_p‹tu£
[
j
] = 0;

3312 
mshr_≥ndög_evít
[
j
] = 0;

3313 
œ°_L1_mshr_fuŒ
[
j
] = 0;

3314 
œ°_L1_fifo_fuŒ
[
j
] = 0;

3315 
œ°_Dú_fifo_fuŒ
[
j
] = 0;

3316 
œ°_I≈ut_queue_fuŒ
[
j
] = 0;

3318 
œ°_L2_mshr_fuŒ
 = 0;

3319 
ßme_L1_L2_fifo_fuŒ
 = 0;

3320 
L1_mshr_fuŒ
 = 0;

3321 
L2_mshr_fuŒ
 = 0;

3322 
L2_mshr_fuŒ_¥e„tch
 = 0;

3323 
L1_fifo_fuŒ
 = 0;

3324 
Dú_fifo_fuŒ
 = 0;

3325 
I≈ut_queue_fuŒ
 = 0;

3326 
Ouçut_queue_fuŒ
 = 0;

3328 
SèŒ_L1_mshr
 = 0;

3329 
SèŒ_L2_mshr
 = 0;

3330 
SèŒ_L1_fifo
 = 0;

3331 
SèŒ_dú_fifo
 = 0;

3332 
SèŒ_öput_queue
 = 0;

3333 
SèŒ_ouçut_queue
 = 0;

3336 
j
 = 0; j < 
numc⁄ãxts
; j++)

3338 
	`ruu_öô
 (
j
);

3339 
	`lsq_öô
 (
j
);

3342 
j
 = 0; j < 
numc⁄ãxts
; j++)

3344 
¥i‹ôy
[
j
] = j;

3345 
key
[
j
] = 0;

3346 #ifde‡
INTERVAL_BASED


3347 
öãrvÆ_¥i‹ôy
[
j
] = j;

3348 
öãrvÆ_key
[
j
] = 0;

3352 #ifde‡ 
CLUSTER_PRIORITY


3353 
j
 = 0; j < 
CLUSTERS
; j++)

3354 
¥i‹ôy_˛
[
j
] = j;

3357 #ifde‡ 
PRIORITY_STEER


3358 
j
 = 0; j < 
CLUSTERS
; j++)

3359 
¥i‹ôy_˛
[
j
] = j;

3362 #ifde‡ 
STEER_DISPATCH_STAT


3363 
j
 = 0; j < 
numc⁄ãxts
; j++)

3364 
ªady_°ìr_thrd_max
[
j
] = 
ªady_°ìr_thrd_mö
[j] = 
ªady_°ìr_thrd_vÆue
[j] = 
MAXDEV
 / 2;

3367 #i‡
	`deföed
(
DLITE_SUPPORT
)

3369 
	`dlôe_öô
 (
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

3371 
	}
}

3375 
	$sim_aux_°©s
 (
FILE
 * 
°ªam
)

3378 
	}
}

3382 
	$sim_unöô
 ()

3384 i‡(
±ø˚_√…
 > 0)

3385 
	`±ø˚_˛o£
 ();

3388 
	}
}

3395 #i‚de‡ 
STEER_DISPATCH_STAT


3397 
	#OPERANDS_READY
(
RS
Ë\

	)

3398 ((
	gRS
)->
	gidï_ªady
[0] && (RS)->idep_ready[1] && (RS)->idep_ready[2])

3402 
	#ONE_OPERANDS_READY
(
RS
Ë\

	)

3403 ((
	gRS
)->
	gidï_ªady
[0] || (RS)->idep_ready[1])

3408 
	$ruu_öô
 (
thªadid
)

3410 
i
 = 0;

3411 
c⁄ãxt
 *
cuºít
;

3413 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3414 
cuºít
->
RUU
 = 
	`ˇŒoc
 (
RUU_size
,  (
RUU_°©i⁄
));

3415 i‡(!
cuºít
->
RUU
)

3416 
	`Áèl
 ("out of virtual memory");

3418 
i
 = 0; i < 
RUU_size
; i++)

3420 
cuºít
->
RUU
[
i
].
ödex
 = i;

3421 
cuºít
->
RUU
[
i
].
thªadid
 =Åhreadid;

3423 
cuºít
->
RUU_num
 = 0;

3424 
cuºít
->
RUU_hód
 = cuºít->
RUU_èû
 = 0;

3425 
cuºít
->
RUU_cou¡_thrd
 = 0;

3426 
cuºít
->
RUU_fcou¡_thrd
 = 0;

3427 
RUU_cou¡
 = 0;

3428 
RUU_fcou¡
 = 0;

3430 i‡(
thªadid
)

3432 
cuºít
->
cy˛e_mask
 = 0xffffffff;

3433 
cuºít
->
œãncy_Á˘‹
 = 1;

3434 
cuºít
->
maö_thªad
 = 1;

3435 
ˇche_dl1
[
thªadid
]->
hô_œãncy
 *
cuºít
->
œãncy_Á˘‹
;

3438 
i
 = 0; i < 
CLUSTERS
; i++)

3440 
úegfûe_˛_cou¡
[
i
] = 0;

3441 
õxåa_˛_cou¡
[
i
] = 0;

3442 
‰egfûe_˛_cou¡
[
i
] = 0;

3443 
„xåa_˛_cou¡
[
i
] = 0;

3444 
iissueq_˛_cou¡
[
i
] = 0;

3445 
fissueq_˛_cou¡
[
i
] = 0;

3446 #ifde‡
RAW


3447 
øwq_˛_cou¡
[
i
] = 0;

3450 
	}
}

3454 
	$ruu_dum≥¡
 (
RUU_°©i⁄
 *
rs
,

3455 
ödex
,

3456 
FILE
 * 
°ªam
,

3457 
hódî
)

3459 i‡(!
°ªam
)

3460 
°ªam
 = 
°dîr
;

3462 i‡(
hódî
)

3463 
	`Ârötf
 (
°ªam
, "idx: %2d: opcode: %s, in°: `", 
ödex
, 
	`MD_OP_NAME
 (
rs
->
›
));

3465 
	`Ârötf
 (
°ªam
, " opcode: %s, in°: `", 
	`MD_OP_NAME
 (
rs
->
›
));

3466 
	`md_¥öt_ö¢
 (
rs
->
IR
,Ñs->
PC
, 
°ªam
);

3467 
	`Ârötf
 (
°ªam
, "'\n");

3468 
	`myÂrötf
 (
°ªam
, " PC: 0x%08p, NPC: 0x%08∞’ªd_PC: 0x%08p)\n", 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

3469 
	`Ârötf
 (
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecovî_ö°: %s\n", 
rs
->
ö_LSQ
 ? "t" : "f",Ñs->
ó_comp
 ? "t" : "f",Ñs->
ªcovî_ö°
 ? "t" : "f");

3470 
	`myÂrötf
 (
°ªam
, " s≥c_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n", 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

3471 
	`Ârötf
 (
°ªam
, " seq: 0x%08x,Öåa˚_£q: 0x%08x\n", 
rs
->
£q
,Ñs->
±ø˚_£q
);

3472 
	`Ârötf
 (
°ªam
, " queued: %s, issued: %s, com∂ëed: %s\n", 
rs
->
queued
 ? "t" : "f",Ñs->
issued
 ? "t" : "f",Ñs->
com∂ëed
 ? "t" : "f");

3473 
	`Ârötf
 (
°ªam
, " o≥ønd†ªady: %s\n", 
	`OPERANDS_READY
 (
rs
) ? "t" : "f");

3474 
	}
}

3478 
	$ruu_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

3480 
num
, 
hód
;

3481 
RUU_°©i⁄
 *
rs
;

3483 
c⁄ãxt
 *
cuºít
;

3485 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3487 i‡(!
°ªam
)

3488 
°ªam
 = 
°dîr
;

3490 
	`Ârötf
 (
°ªam
, "** Thªad %d **\n", 
thªadid
);

3491 
	`Ârötf
 (
°ªam
, "** RUU state **\n");

3492 
	`Ârötf
 (
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
cuºít
->
RUU_hód
, cuºít->
RUU_èû
);

3493 
	`Ârötf
 (
°ªam
, "RUU_num: %d\n", 
cuºít
->
RUU_num
);

3495 
num
 = 
cuºít
->
RUU_num
;

3496 
hód
 = 
cuºít
->
RUU_hód
;

3497 
num
)

3499 
rs
 = &(
cuºít
->
RUU
[
hód
]);

3500 
	`ruu_dum≥¡
 (
rs
,Ñ†- 
cuºít
->
RUU
, 
°ªam
, 
TRUE
);

3501 
hód
 = (hód + 1Ë% 
RUU_size
;

3502 
num
--;

3504 
	}
}

3508 
	$lsq_öô
 (
thªadid
)

3510 
i
 = 0;

3511 
c⁄ãxt
 *
cuºít
;

3513 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3515 
cuºít
->
LSQ
 = 
	`ˇŒoc
 (
LSQ_size
,  (
RUU_°©i⁄
));

3516 i‡(!
cuºít
->
LSQ
)

3517 
	`Áèl
 ("out of virtual memory");

3518 
i
 = 0; i < 
LSQ_size
; i++)

3520 
cuºít
->
LSQ
[
i
].
ödex
 = i;

3521 
cuºít
->
LSQ
[
i
].
thªadid
 =Åhreadid;

3523 
cuºít
->
LSQ_num
 = 0;

3524 
cuºít
->
LSQ_hód
 = cuºít->
LSQ_èû
 = 0;

3525 
cuºít
->
LSQ_cou¡
 = 0;

3526 
cuºít
->
LSQ_fcou¡
 = 0;

3527 
cuºít
->
m_shLQNum
 = 0;

3528 
cuºít
->
m_shSQNum
 = 0;

3529 
m_tŸÆSèŒ
[
thªadid
] = 0;

3530 
m_sqLQFuŒ
[
thªadid
] = 0;

3531 
m_sqSQFuŒ
[
thªadid
] = 0;

3532 
m_RUUFuŒ
[
thªadid
] = 0;

3533 
m_commôSèŒ
[
thªadid
] = 0;

3535 
	}
}

3540 #ifde‡
COUNT_LSQ


3541 
	gn⁄_issue_LSQ_num
;

3549 
	#STORE_OP_INDEX
 0

	)

3550 
	#STORE_ADDR_INDEX
 1

	)

3552 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

3553 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

3571 
RS_lök
 *
	gr¶ök_‰ì_li°
;

3572 
RS_lök
 *
	gr¶ök_li°
[
MAX_RS_LINKS
];

3575 #ifde‡
DIRECTORY


3576 
RS_li°
 *
	grs_ˇche_li°
[
MAXTHREADS
][
MSHR_SIZE
];

3579 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

3582 
	#RSLINK_INIT
(
RSL
, 
RS
Ë\

	)

3583 ((
	gRSL
).
	g√xt
 = 
NULL
, (RSL).
	grs
 = (
RS
), (RSL).
	gèg
 = (RS)->
èg
)

3586 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

3589 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

3592 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

3595 
	#RSLINK_NEW
(
DST
, 
RS
Ë\

	)

3596 { 
RS_lök
 *
	gn_lök
; \

3597 i‡(!
	gr¶ök_‰ì_li°
) \

3598 
∑nic
("out ofÑsÜinks"); \

3599 
	grs_lök_num
++; \

3600 
	gn_lök
 = 
r¶ök_‰ì_li°
; \

3601 
	gr¶ök_‰ì_li°
 = 
r¶ök_‰ì_li°
->
√xt
; \

3602 
	gn_lök
->
	g√xt
 = 
NULL
; \

3603 
	gn_lök
->
	grs
 = (
RS
);Ç_lök->
	gèg
 = 
n_lök
->
rs
->
èg
; \

3604 
	gn_lök
->
	gœ°_u£
 = 
sim_cy˛e
; \

3605 (
	gDST
Ë
n_lök
; \

3609 
	#RSLINK_FREE
(
LINK
Ë\

	)

3610 { 
RS_lök
 *
	gf_lök
 = (
LINK
); \

3611 
	gf_lök
->
	grs
 = 
NULL
; f_lök->
	gèg
 = 0; \

3612 
	gf_lök
->
	g√xt
 = 
r¶ök_‰ì_li°
; \

3613 
	gr¶ök_‰ì_li°
 = 
f_lök
; \

3614 
	grs_lök_num
--; \

3619 
	#RSLINK_FREE_LIST
(
LINK
Ë\

	)

3620 { 
RS_lök
 *
	gÊ_lök
, *
	gÊ_lök_√xt
; \

3621 
	gÊ_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

3623 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

3624 
RSLINK_FREE
(
Ê_lök
); \

3630 
	$r¶ök_öô
 (
∆öks
)

3632 
i
;

3633 
RS_lök
 *
lök
;

3635 
r¶ök_‰ì_li°
 = 
NULL
;

3636 
i
 = 0; i < 
∆öks
; i++)

3638 
lök
 = 
	`ˇŒoc
 (1,  (
RS_lök
));

3639 i‡(!
lök
)

3640 
	`Áèl
 ("out of virtual memory");

3641 
r¶ök_li°
[
i
] = 
lök
;

3642 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

3643 
r¶ök_‰ì_li°
 = 
lök
;

3645 
	}
}

3647 
RS_lök
 * 
	$födMax_r¶ök
()

3649 
i
, 
max_id
;

3650 
RS_lök
 *
lök
;

3651 
cou¡î_t
 
max
 = 0;

3653 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

3655 if(
r¶ök_li°
[
i
]->
œ°_u£
 > 
max
)

3657 
max
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

3658 
max_id
 = 
i
;

3661  
r¶ök_li°
[
max_id
];

3662 
	}
}

3664 
RS_lök
 * 
	$födMö_r¶ök
()

3666 
i
, 
mö_id
;

3667 
RS_lök
 *
lök
;

3668 
cou¡î_t
 
mö
 = 
WAIT_TIME
;

3670 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

3672 if(
r¶ök_li°
[
i
]->
œ°_u£
 < 
mö
)

3674 
mö
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

3675 
mö_id
 = 
i
;

3678  
r¶ök_li°
[
mö_id
];

3679 
	}
}

3681 #ifde‡
DIRECTORY


3683 
	$rs_ˇche_öô
()

3685 
i
, 
n
;

3686 
n
 = 0;Ç < 
MAXTHREADS
;Ç++)

3688 
i
=0; i<
MSHR_SIZE
; i++)

3689 
rs_ˇche_li°
[
n
][
i
] = 
NULL
;

3691 
	}
}

3698 
	$check_fu_busy
 ()

3700 
i
;

3702 
i
 = 0; i < 
numc⁄ãxts
; i++)

3704 
fu_busy
[
i
] = 0;

3708 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

3710 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
)

3711 
fu_busy
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]++;

3713 
	}
}

3723 
	$ruu_ªÀa£_fu
 ()

3725 
i
;

3728 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

3731 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

3733 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

3735 #ifde‡ 
PWR_ALU


3736 #ifde‡
ALU_MERGE


3737 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

3739 
ülu1_ac˚ss
++;

3740 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

3742 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

3744 
Álu1_ac˚ss
++;

3745 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

3748 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

3750 
ülu1_ac˚ss
++;

3751 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

3753 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IMULT_INDEX
)

3755 
ülu2_ac˚ss
++;

3756 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu2_ac˚ss
++;

3759 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

3761 
Álu1_ac˚ss
++;

3762 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

3765 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPMULT_INDEX
)

3767 
Álu2_ac˚ss
++;

3768 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu2_ac˚ss
++;

3776 
	}
}

3778 #ifde‡
DIRECTORY


3779 #ifde‡
CONF_RES_RESEND


3780 
QUEUE_EVENT
 *
	gª∂y_queue
[
MAXTHREADS
], *
	g£nd_queue
[MAXTHREADS];

3782 
DIRECTORY_EVENT
 *
	gdú_evít_queue
;

3783 
DIRECTORY_EVENT
 *
	gevít_li°
[
L2_MSHR_SIZE
];

3786 
	$dú_evítq_öô
()

3788 
n
 = 0;

3789 #ifde‡
CONF_RES_RESEND


3790 
n
 = 0;Ç<
MAXTHREADS
;Ç++)

3792 
ª∂y_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

3793 
£nd_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

3794 
	`öôQueue
(
ª∂y_queue
[
n
]);

3795 
	`öôQueue
(
£nd_queue
[
n
]);

3798 
dú_evít_queue
 = 
NULL
;

3799 
n
 = 0;Ç<
L2_MSHR_SIZE
;Ç++)

3800 
evít_li°
[
n
] = 
NULL
;

3801 
	}
}

3803 #ifde‡
CONF_RES_RESEND


3805 
	$öôQueue
(
QUEUE_EVENT
 *
queue
)

3807 
i
;

3808 if(!
queue
) ;

3809 
queue
->
‰ì_E¡rõs
 = 
QUEUE_SIZE
;

3810 
i
=0; i<
QUEUE_SIZE
; i++)

3812 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 0;

3813 
queue
->
Queue_íåy
[
i
].
evít
 = 
NULL
;

3815 
	}
}

3819 
	$buf„r_fuŒ_check
(
DIRECTORY_EVENT
 *
evít
)

3821 
vc
 = 0, 
›ti⁄s
 = -1, 
buf„r_fuŒ
 = 0;

3822 if((
evít
->
des1
*
MESH_SIZE
+evít->
des2
 !evít->
§c1
*MESH_SIZE+evít->
§c2
Ë&& (evít->
öput_buf„r_fuŒ
Ë&& (evít->
›î©i⁄
 =
MISS_WRITE
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 ||Évít->›î©i⁄ =
MISS_IL1
))

3824 #ifde‡
MC


3825 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI"))

3827 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

3828 
buf„r_fuŒ
 = 1;

3830 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

3832 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3833 if(
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
) == -1)

3834 
buf„r_fuŒ
 = 1;

3837 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

3840 
buf„r_fuŒ
 = 
	`CombNëw‹kBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1),Évít->
›î©i⁄
, &
vc
);

3842 if(
buf„r_fuŒ
)

3844 #ifde‡
POPNET


3845 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3846 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

3849 #ifde‡
POPNET


3850 
vc
 == -1

3852 #ifde‡
OPTICAL_INTERCONNECT


3853 
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
)

3859 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
MESH_SIZE
+evít->
des2
])

3861 
I≈ut_queue_fuŒ
 ++;

3862 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
MESH_SIZE
+evít->
des2
] = 
sim_cy˛e
;

3868 
evít
->
öput_buf„r_fuŒ
 = 0;

3869 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3870 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3871 if(
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
MESH_SIZE
+evít->
des2
])

3873 
SèŒ_öput_queue
 +
sim_cy˛e
 - 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
MESH_SIZE
+evít->
des2
];

3874 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
MESH_SIZE
+evít->
des2
] = 0;

3881 
	}
}

3882 
	$dú_evítq_√xãvít
()

3884 
DIRECTORY_EVENT
 *
evít
, *
ev
, *
√xt
, *
¥ev
;

3885 
i
, 
ö£π_Êag
 = 0;

3886 
evít
 = 
dú_evít_queue
;

3887 
ev
 = 
NULL
;

3888 
evít
!=
NULL
)

3890 
√xt
 = 
evít
->next;

3892 i‡(
evít
->
whí
 <
sim_cy˛e
)

3894 
ö£π_Êag
 = 
	`buf„r_fuŒ_check
(
evít
);

3895 if(
ö£π_Êag
 == 0)

3897 if(
evít
 =
dú_evít_queue
)

3899 
dú_evít_queue
 = 
evít
->
√xt
;

3900 
evít
->
√xt
 = 
NULL
;

3901 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

3903 if(
evít
->
≥ndög_Êag
 == 0)

3905 
evít
->
≥ndög_Êag
 = 1;

3906 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
MESH_SIZE
 +Évít->
§c2
] ++;

3909 
evít
->
√xt
 = 
dú_evít_queue
;

3910 
dú_evít_queue
 = 
evít
;

3911 
ev
 = 
evít
;

3912 
evít
 =Évít->
√xt
;

3913 
ßme_L1_L2_fifo_fuŒ
 ++;

3917 if(
evít
->
≥ndög_Êag
 == 1)

3918 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
MESH_SIZE
 +Évít->
§c2
] --;

3919 
evít
 = 
dú_evít_queue
;

3925 
ev
->
√xt
 = 
evít
->next;

3926 
evít
->
√xt
 = 
NULL
;

3927 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

3929 if(
evít
->
≥ndög_Êag
 == 0)

3931 
evít
->
≥ndög_Êag
 = 1;

3932 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
MESH_SIZE
 +Évít->
§c2
] ++;

3934 
evít
->
√xt
 = 
dú_evít_queue
;

3935 
dú_evít_queue
 = 
evít
;

3936 
ev
 = 
evít
;

3937 
evít
 =Évít->
√xt
;

3938 
ßme_L1_L2_fifo_fuŒ
 ++;

3942 if(
evít
->
≥ndög_Êag
 == 1)

3943 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
MESH_SIZE
 +Évít->
§c2
] --;

3944 
evít
 = 
ev
->
√xt
;

3948 if(
ö£π_Êag
 == 1)

3950 
ev
 = 
evít
;

3951 
evít
 =Évít->
√xt
;

3953 if(
ö£π_Êag
 == 2)

3955 if(
evít
 =
dú_evít_queue
)

3957 
dú_evít_queue
 = 
evít
->
√xt
;

3958 
evít
->
√xt
 = 
NULL
;

3959 
	`dú_evítq_ö£π
(
evít
);

3960 
evít
 = 
dú_evít_queue
;

3964 
ev
->
√xt
 = 
evít
->next;

3965 
evít
->
√xt
 = 
NULL
;

3966 
	`dú_evítq_ö£π
(
evít
);

3967 
evít
 = 
ev
->
√xt
;

3974 
ev
 = 
evít
;

3975 
evít
 =Évít->
√xt
;

3979 
	}
}

3992 #ifde‡
DIRECTORY


3993 
RS_lök
 *
	gevít_queue
;

3995 
RS_lök
 *
	gevít_queue
;

3999 
	$evítq_öô
 ()

4001 
evít_queue
 = 
NULL
;

4002 
	}
}

4007 
	$evítq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4009 
RS_lök
 *
ev
;

4011 
c⁄ãxt
 *
cuºít
;

4013 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4015 i‡(!
°ªam
)

4016 
°ªam
 = 
°dîr
;

4018 
	`Ârötf
 (
°ªam
, "**Évent queue state **\n");

4020 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

4023 i‡(
	`RSLINK_VALID
 (
ev
))

4025 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4027 
	`Ârötf
 (
°ªam
, "idx: %2d: @ %.0f\n", 
rs
->
ödex
, (Ë
ev
->
x
.
whí
);

4028 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
FALSE
);

4031 
	}
}

4038 
evítq_queue_evít
 (
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí


4039 #ifde‡
DIRECTORY


4040 , 
œt
)

4045 
RS_lök
 *
	g¥ev
, *
	gev
, *
	g√w_ev
;

4047 i‡(
	grs
->
	gcom∂ëed
)

4048 
∑nic
 ("event completed");

4050 i‡(
	gwhí
 <
sim_cy˛e
)

4051 
∑nic
 ("event occurred inÅheÖast");

4054 
RSLINK_NEW
 (
√w_ev
, 
rs
);

4055 
	g√w_ev
->
	gx
.
	gwhí
 = 
whí
;

4057 #ifde‡
DIRECTORY


4058 if(
	grs
 =
NULL
)

4059 
¥ötf
("RSÖrobÀm %Œd\n", 
sim_cy˛e
);

4062 
	g¥ev
 = 
NULL
, 
	gev
 = 
evít_queue
;Év &&Év->
	gx
.
	gwhí
 < whí;Öªv = 
ev
,Év =Év->
√xt
);

4064 i‡(
	g¥ev
)

4067 
	g√w_ev
->
	g√xt
 = 
¥ev
->
√xt
;

4068 
	g¥ev
->
	g√xt
 = 
√w_ev
;

4073 
	g√w_ev
->
	g√xt
 = 
evít_queue
;

4074 
	gevít_queue
 = 
√w_ev
;

4083 
RUU_°©i⁄
 *

4084 
	$evítq_√xt_evít
 ()

4086 
RS_lök
 *
ev
;

4087 
RS_lök
 *
ãmp_ev
, *
¥ed_ev
 = 
NULL
;

4089 
ãmp_ev
 = 
evít_queue
;

4091 
ãmp_ev
 && !
thec⁄ãxts
[ãmp_ev->
rs
->
thªadid
]->
a˘ive_this_cy˛e
)

4093 
¥ed_ev
 = 
ãmp_ev
;

4094 
ãmp_ev
 =Åemp_ev->
√xt
;

4097 i‡(
ãmp_ev
 &&Åemp_ev->
x
.
whí
 <
sim_cy˛e
)

4100 
ev
 = 
ãmp_ev
;

4101 i‡(
ãmp_ev
 =
evít_queue
)

4103 
evít_queue
 =Évít_queue->
√xt
;

4107 
¥ed_ev
->
√xt
 = 
ãmp_ev
->next;

4111 i‡(
	`RSLINK_VALID
 (
ev
))

4113 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4116 
	`RSLINK_FREE
 (
ev
);

4119  
rs
;

4124 
	`RSLINK_FREE
 (
ev
);

4127  
	`evítq_√xt_evít
 ();

4133  
NULL
;

4135 
	}
}

4137 
	$ch™geInEvítQueue
 (
RUU_°©i⁄
 * 
rs
, 
thªadid
)

4141 
RS_lök
 *
ev
 = 
evít_queue
;

4142 
RS_lök
 *
¥ev
 = 
NULL
;

4144 
ev
 !
NULL
)

4146 i‡(
ev
->
rs
 ==Ñs)

4148 
¥ev
 = 
ev
;

4149 
ev
 =Év->
√xt
;

4152 i‡(
ev
 =
NULL
)

4154 
ev
->
x
.
whí
 = 
sim_cy˛e
;

4157 i‡(
¥ev
 =
NULL
)

4158 
evít_queue
 = 
ev
->
√xt
;

4160 
¥ev
->
√xt
 = 
ev
->next;

4162 
	`RSLINK_FREE
 (
ev
);

4163 
	}
}

4179 
RS_lök
 *
	gªady_queue
;

4183 
	$ªadyq_öô
 ()

4185 
ªady_queue
 = 
NULL
;

4186 
	}
}

4191 
	$ªadyq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4193 
RS_lök
 *
lök
;

4195 
c⁄ãxt
 *
cuºít
;

4197 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4199 i‡(!
°ªam
)

4200 
°ªam
 = 
°dîr
;

4202 
	`Ârötf
 (
°ªam
, "**Ñeady queue state **\n");

4204 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

4207 i‡(
	`RSLINK_VALID
 (
lök
))

4209 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
lök
);

4211 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
TRUE
);

4214 
	}
}

4230 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

4232 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

4235 i‡(
rs
->
queued
)

4236 
	`∑nic
("node isálready queued");

4238 
rs
->
queued
 = 
TRUE
;

4240 #ifde‡
REMOVE_COMPUTE_QUEUE


4241 #ifde‡
PWR_WAKE


4242 i‡(
rs
->
ö_LSQ
)

4244 
lsqªady
++;

4245 
rs
->
cou¡ed_lsqªady
 = 1;

4247 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

4249 
‰ódy
++;

4250 
rs
->
cou¡ed_‰ódy
 = 1;

4254 
úódy
++;

4255 
rs
->
cou¡ed_úódy
 = 1;

4261 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

4262 
√w_node
->
x
.
£q
 = 
rs
->seq;

4265 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

4267 i‡(
¥ev
)

4270 
√w_node
->
√xt
 = 
¥ev
->next;

4271 
¥ev
->
√xt
 = 
√w_node
;

4276 
√w_node
->
√xt
 = 
ªady_queue
;

4277 
ªady_queue
 = 
√w_node
;

4279 
	}
}

4284 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

4286 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

4289 i‡(
rs
->
queued
)

4290 
	`∑nic
 ("node isálready queued");

4291 
rs
->
queued
 = 
TRUE
;

4293 #ifde‡
PWR_WAKE


4294 #ifde‡
READY_ROB_STAT


4295 i‡(!
rs
->
ö_LSQ
)

4296 
ªady_thrd
[
rs
->
thªadid
]++;

4298 i‡(
rs
->
ö_LSQ
)

4300 
lsqªady
++;

4301 
lsqªady_˛
[
rs
->
˛u°î
]++;

4302 
rs
->
cou¡ed_lsqªady
 = 1;

4304 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

4306 
‰ódy
++;

4307 
‰ódy_˛
[
rs
->
˛u°î
]++;

4308 
rs
->
cou¡ed_‰ódy
 = 1;

4312 
úódy
++;

4313 
úódy_˛
[
rs
->
˛u°î
]++;

4314 
rs
->
cou¡ed_úódy
 = 1;

4319 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

4320 
√w_node
->
x
.
£q
 = 
rs
->seq;

4323 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_LONGLAT
 | 
F_CTRL
))

4326 
¥ev
 = 
NULL
;

4327 
node
 = 
ªady_queue
;

4332 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

4335 i‡(
¥ev
)

4338 
√w_node
->
√xt
 = 
¥ev
->next;

4339 
¥ev
->
√xt
 = 
√w_node
;

4344 
√w_node
->
√xt
 = 
ªady_queue
;

4345 
ªady_queue
 = 
√w_node
;

4347 
	}
}

4358 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

4361 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

4364 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

4371 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

4372 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] \

4373 : 
cuºít
->
¸óã_ve˘‹
[
N
])

4376 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

4377 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹_π
[
N
] \

4378 : 
cuºít
->
¸óã_ve˘‹_π
[
N
])

4381 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë(
cuºít
->
•ec_mode
 \

	)

4382 ? (
BITMAP_SET
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

4383 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

4384 : (
cuºít
->
¸óã_ve˘‹
[
N
] = (
L
)))

4391 
	#DNA
 (0)

	)

4393 #i‡
deföed
(
TARGET_PISA
)

4396 
	#DGPR
(
N
Ë(N)

	)

4397 
	#DGPR_D
(
N
Ë((NË&~1)

	)

4400 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

4401 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

4402 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

4405 
	#DHI
 (0+32+32)

	)

4406 
	#DLO
 (1+32+32)

	)

4407 
	#DFCC
 (2+32+32)

	)

4408 
	#DTMP
 (3+32+32)

	)

4410 #ñi‡
deföed
(
TARGET_ALPHA
)

4413 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

4416 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

4419 
	#DFPCR
 (0+32+32)

	)

4420 
	#DUNIQ
 (1+32+32)

	)

4421 
	#DTMP
 (2+32+32)

	)

4424 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4432 
	#SET_NPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_NPC
 = (EXPR))

	)

4435 #unde‡
SET_TPC


4436 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

4439 
	#CPC
 (
cuºít
->
ªgs
.
ªgs_PC
)

	)

4440 
	#SET_CPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_PC
 = (EXPR))

	)

4445 #ifde‡
TEST_BUG


4447 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

4448 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

4449 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

4450 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4451 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

4452 
BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

4453 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

4454 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

4455 #i‡
deföed
(
TARGET_PISA
)

4460 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4461 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

4462 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

4463 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4464 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

4465 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4466 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

4467 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

4468 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4469 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

4470 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

4471 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4472 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

4473 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4474 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

4475 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

4476 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4477 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

4478 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

4479 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4480 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)),\

4481 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4482 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

4483 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

4488 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

4489 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

4490 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

4491 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4492 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

4493 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0), \

4494 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

4495 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

4496 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

4497 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

4498 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

4499 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4500 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

4501 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1), \

4502 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

4503 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

4504 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

4505 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4506 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4507 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4508 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4509 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2), \

4510 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4511 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4513 #ñi‡
deföed
(
TARGET_ALPHA
)

4518 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

4519 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

4520 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

4521 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4522 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

4523 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

4524 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

4525 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

4526 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

4527 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

4528 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

4529 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4530 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

4531 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

4532 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

4533 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

4538 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

4539 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

4540 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

4541 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4542 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

4543 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0), \

4544 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

4545 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

4546 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

4547 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

4548 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

4549 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4550 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

4551 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

4552 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

4553 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

4554 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

4555 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4556 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4557 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4558 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4559 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

4560 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4561 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4564 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4568 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

4569 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

4570 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

4571 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4572 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

4573 
BITMAP_SET
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

4574 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

4575 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

4576 #i‡
deföed
(
TARGET_PISA
)

4581 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4582 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

4583 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

4584 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4585 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

4586 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4587 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

4588 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

4589 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4590 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

4591 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

4592 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4593 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

4594 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4595 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

4596 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

4597 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4598 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

4599 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

4600 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4601 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)), \

4602 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4603 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

4604 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

4609 
	#HI
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

4610 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

4611 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

4612 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4613 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

4614 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

4615 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

4616 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

4617 
	#LO
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

4618 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

4619 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

4620 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4621 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

4622 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

4623 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

4624 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

4625 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

4626 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4627 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4628 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4629 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4630 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 2),\

4631 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4632 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4634 #ñi‡
deföed
(
TARGET_ALPHA
)

4639 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

4640 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

4641 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

4642 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4643 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

4644 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

4645 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

4646 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

4647 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

4648 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

4649 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

4650 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4651 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

4652 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

4653 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

4654 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

4659 
	#FPCR
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

4660 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

4661 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

4662 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4663 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

4664 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 0),\

4665 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

4666 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

4667 
	#UNIQ
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

4668 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

4669 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

4670 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4671 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

4672 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

4673 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

4674 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

4675 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

4676 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4677 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4678 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4679 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4680 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

4681 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4682 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4685 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4694 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
Ë\

	)

4695 (
	gaddr
 = (
SRC
), \

4696 (
	gcuºít
->
	g•ec_mode
 \

4697 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

4698 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V), cuºít->
id
, 
ö°
))), \

4699 
	gSRC_V
)

4701 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

4702 
__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

4703 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

4704 
MD_SWAPH
(
__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

4705 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

4706 
MD_SWAPW
(
__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

4707 #ifde‡
HOST_HAS_QWORD


4708 
	#READ_QWORD
(
SRC
, 
FAULT
Ë\

	)

4709 
MD_SWAPQ
(
__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

4712 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
Ë\

	)

4713 (
	gDST_V
 = (
SRC
), 
	gaddr
 = (
DST
), \

4714 (
	gcuºít
->
	g•ec_mode
 \

4715 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

4716 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V), cuºít->
id
, 
ö°
))))

4718 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4719 
__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

4720 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4721 
__WRITE_SPECMEM
(
MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

4722 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4723 
__WRITE_SPECMEM
(
MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

4725 #ifde‡
HOST_HAS_QWORD


4726 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4727 
__WRITE_SPECMEM
(
MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

4731 
	#SYSCALL
(
INST
Ë\

	)

4733 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative syscall") : () 0), \

4734 
sys_sysˇŒ
(&(
cuºít
->
ªgs
), 
mem_ac˚ss
, cuºít->
mem
, 
INST
, 
TRUE
))

4736 
	#QUIESCE
(
INST
Ë\

	)

4738 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative quiescent instruction") : () 0), \

4739 
ˇŒ_quõs˚
(
cuºít
->
id
))

4744 
	$cv_öô
 (
thªadid
)

4746 
i
;

4747 
c⁄ãxt
 *
cuºít
;

4749 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4753 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

4755 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

4756 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 0;

4757 
cuºít
->
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

4758 
cuºít
->
•ec_¸óã_ve˘‹_π
[
i
] = 0;

4762 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

4764 
	}
}

4769 
	$cv_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4771 
i
;

4772 
CV_lök
 
ít
;

4774 
c⁄ãxt
 *
cuºít
;

4776 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4778 i‡(!
°ªam
)

4779 
°ªam
 = 
°dîr
;

4781 
	`Ârötf
 (
°ªam
, "** create vector state **\n");

4783 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

4785 
ít
 = 
	`CREATE_VECTOR
 (
i
);

4786 i‡(!
ít
.
rs
)

4787 
	`Ârötf
 (
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

4789 
	`Ârötf
 (
°ªam
, "[cv%02d]: from %s, idx: %d\n", 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),É¡.rs->
ödex
);

4791 
	}
}

4793 
ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
);

4796 
åa˚r_ªcovî
 (
thªadid
);

4797 
ªcFªeRegLi°
 (
thªadid
);

4800 #ifde‡
DIRECTORY


4801 
	$RS_block_li°
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
, 
íåy
, 
thªadid
)

4803 if(
rs
->
•ec_mode
) ;

4804 if(
íåy
 < 1 ||É¡ry > 
MSHR_SIZE
)

4805 
	`∑nic
("L1 MSHR: wrong mshrÉntry");

4807 
íåy
 =Éntry - 1;

4809 
RS_li°
 *
rs_li°
;

4810 
rs_li°
 = 
	`ˇŒoc
–1, (
RS_li°
));

4811 
rs_li°
->
rs
 =Ñs;

4812 
rs_li°
->
√xt
 = 
NULL
;

4813 
rs_li°
->
•ec_mode
 = 
rs
->spec_mode;

4814 
rs_li°
->
whí
 = when;

4815 
rs_li°
->
√xt
 = 
rs_ˇche_li°
[
thªadid
][
íåy
];

4816 
rs_ˇche_li°
[
thªadid
][
íåy
] = 
rs_li°
;

4817 
	}
}

4819 
	$RS_block_√xt
(
RS_li°
 *
cur
)

4821 if(!
cur
->
rs
) ;

4823 if(
cur
->
•ec_mode
 && !cur->
rs
->spec_mode)

4825 
cur
->
rs
->
ˇche_ªady
 = 0;

4826 if(((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
Ë&& (cur->rs->
issued
 || cur->rs->
queued
 || cur->rs->
com∂ëed
)) || (!(MD_OP_FLAGS(cur->rs->op) & F_LOAD) && !(cur->rs->issued && !cur->rs->queued)))

4827 
	`∑nic
("L1 MSHR: issue, queue, or commit flag is set!!!");

4829 if((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
))

4831 
cur
->
rs
->
issued
 = 1;

4832 
	`evítq_queue_evít
 (
cur
->
rs
, 
sim_cy˛e
 + 1, 0);

4834 
cur
->
rs
->
issue_time
 = 
sim_cy˛e
;

4835 
cur
->
rs
->
föish_time
 = 
sim_cy˛e
+1;

4838 
	`±ø˚_√w°age
 (
cur
->
rs
->
±ø˚_£q
, 
PST_EXECUTE
, 
PEV_CACHEMISS
);

4841 
cur
->
rs
->
wrôewaô
 = 2;

4842 
	}
}

4849 
	gcommô_idÀ
 = 0;

4850 
	gcommô_Êag
[
MAXTHREADS
] = {0};

4855 
	$ruu_commô
 ()

4858 
i
, 
j
, 
thªadid
, 
œt
, 
evíts
, 
commôãd
;

4859 
mm
;

4860 
c⁄ãxt
 *
cuºít
;

4861 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
, 
LSQ_ödex
;

4862 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

4863 
°‹e_›
 = 0, 
pcbSórch
;

4864 #ifde‡
DIRECTORY


4865 
ªadSh¨eDú
 = 0;

4868 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

4869 
cou¡edThisCy˛e
 = 0;

4871 
md_addr_t
 
ãmpAddr
;

4872 
md_›code
 
ãmpOp
;

4874 
thªad_commô
 = 0;

4875 
isSTLC
;

4879 
j
 = 0; j <
numc⁄ãxts
; j++, 
thªad_commô
 = (thread_commit + 1) %Çumcontexts)

4881 #ifdef 
EDA


4882 i‡(
thec⁄ãxts
[
thªad_commô
]->
ma°îid
 == 2)

4885 i‡(
j
 > 0)

4887 
commô_d⁄e
[
j
 - 1] = 
commôãd
;

4888 if(!
commôãd
)

4889 
m_commôSèŒ
[
j
-1]++;

4891 i‡(
j
 =
numc⁄ãxts
)

4894 
thªadid
 = 
thªad_commô
;

4895 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4897 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

4898 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

4899 
commôãd
 = 0;

4903 
cuºít
->
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

4905 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

4906 i‡(
busSlŸCou¡
 < 11)

4908 i‡(!
cou¡edThisCy˛e
)

4909 
°ÆlNoBusSlŸ
++;

4910 
cou¡edThisCy˛e
 = 1;

4914 
RUU_°©i⁄
 *
rs
 = &(
cuºít
->
RUU
[cuºít->
RUU_hód
]);

4917 
ãmpAddr
 = 0;

4918 
°‹e_›
 = 0;

4919 
ãmpOp
 = 0;

4920 
isSTLC
 = 0;

4922 #ifdef 
EDA


4923 i‡((
cuºít
->
ma°îid
 =1Ë&& (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& 
	`queueSize
 (cuºít->
¥edQueue
) == -1)

4926 #ifde‡ 
DIRECTORY


4927 if(
rs
->
wrôewaô
 =1 && !
mshr_≥ndög_evít
[
j
])

4932 i‡(!
rs
->
com∂ëed
)

4937 i‡(
cuºít
->
ma°îid
 =0 && 
rs
->
PC
 < 0x120000000)

4938 
	`∑nic
 ("Illegal instructionÅryingÅo commit\n");

4940 #ifde‡
SMD_USE_WRITE_BUF


4942 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
m_L1WBufC¡
[
thªadid
]))

4945 #ifde‡
SERIALIZATION_ACK


4946 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
numSt‹ePídög
[
thªadid
]

4947 #ifde‡
READ_PERMIT


4948 || 
numLﬂdPídög
[
thªadid
]

4954 
evíts
 = 0;

4957 i‡(
cuºít
->
RUU
[cuºít->
RUU_hód
].
ó_comp
)

4960 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[cuºít->
RUU_hód
].threadid)

4962 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

4963 
ãmp_LSQ_num
--;

4964 i‡(!
ãmp_LSQ_num
)

4965 
	`∑nic
 ("RUUánd LSQ out of sync");

4967 i‡(
cuºít
->
LSQ_num
 <0 || !cuºít->
LSQ
[
LSQ_ödex
].
ö_LSQ
)

4968 
	`∑nic
 ("RUU out of sync with LSQ");

4970 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
com∂ëed
)

4975 #ifde‡
SEQUENTIAL_CONSISTENCY


4976 i‡(
övÆid©i⁄SèŒ
[
thªadid
])

4980 i‡(
commôSèŒ
[
thªadid
])

4984 #ifde‡
INV_ACK_CON


4985 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& (
≥ndög_övÆid©i⁄
[
thªadid
]))

4988 #ifde‡
SERIALIZATION_ACK


4989 if(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
numSt‹ePídög
[
thªadid
] <0 && 
rs
->
wrôewaô
 == 0)

4993 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

4995 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
)

4996 
isSTLC
 = 1;

4997 #ifde‡
SMD_USE_WRITE_BUF


4998 i‡(
m_L1WBufC¡
[
thªadid
] >
SMD_L1_WBUF_SIZE
)

5000 if(
isSTLC
 && 
m_L1WBufC¡
[
thªadid
])

5004 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
PC
 = 
cuºít
->
LSQ
[
LSQ_ödex
].PC;

5005 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
IR
 = 
cuºít
->
LSQ
[
LSQ_ödex
].IR;

5006 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
›
 = 
cuºít
->
LSQ
[
LSQ_ödex
].op;

5007 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
lsqId
 = 
LSQ_ödex
;

5008 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
robId
 = 
rs
->
ödex
;

5009 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeVÆue
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
vÆ_ø
;

5010 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
addr
 = 
cuºít
->
LSQ
[
LSQ_ödex
].addr;

5011 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
sim_num_ö¢
 = 
cuºít
->
LSQ
[
LSQ_ödex
].sim_num_insn;

5012 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeSèπed
 = 0;

5013 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
föishTime
 = 0;

5014 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
isMiss
 = 0;

5015 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
íåyTime
 = 
sim_cy˛e
;

5016 if–
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5018 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 
isSTLC
);

5019 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 1;

5020 if(
isSTLC
 && 
°‹eC⁄dFaû
 == 0)

5021 
	`∑nic
("Store conditional should fail oná L1 miss");

5024 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 0;

5026 
m_L1WBufC¡
[
thªadid
]++;

5027 
m_L1WBuf_èû
[
thªadid
] = (m_L1WBuf_èû[thªadid]+1)%
SMD_L1_WBUF_SIZE
;

5030 #ifde‡
DIRECTORY


5031 if(
rs
->
wrôewaô
 == 2)

5033 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 0);

5034 
evíts
 |
PEV_CACHEMISS
;

5039 #ifde‡
DIRECTORY


5040 if(
rs
->
ˇche_ªady
 == 1)

5044 
°‹e_›
 = 1;

5045 
boﬁ
 = 0;

5046 
ªs_ãm∂©e
 *
fu
;

5047 
∑ª¡ID
;

5049 
∑ª¡ID
 = 
thªadid
;

5051 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
), 
thªadid
);

5052 #ifde‡ 
DCACHE_MSHR


5053 i‡(
fu
 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,ÅhªadidË&& !
boﬁ
)

5055 #ifde‡
MSHR


5056 i‡(
fu
 && !
mshr_fuŒ
 && !
boﬁ
)

5058 i‡(
fu
 && !
boﬁ
)

5062 i‡(
fu
->
ma°î
->
busy
)

5063 
	`∑nic
 ("functional unitálready in use");

5065 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

5066 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

5067 
fu
->
ma°î
->
du∂iˇã
 = 0;

5071 #i‚de‡
DIRECTORY


5072 #ifde‡
SEQUENTIAL_CONSISTENCY


5073 #ifdef 
EDA


5074 i‡(
cﬁÀ˘_°©s
 && 
cuºít
->
ma°îid
 == 0)

5076 i‡(
cﬁÀ˘_°©s
)

5079 
bx
, 
cx
, 
dx
;

5080 
c⁄ãxt
 *
tmpCxt
;

5081 
md_addr_t
 
mask
;

5083 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

5085 
bx
 = 0; bx < 
numc⁄ãxts
; bx++)

5087 
boﬁ
 = 0;

5089 
tmpCxt
 = 
thec⁄ãxts
[
bx
];

5090 #ifdef 
EDA


5091 i‡(
tmpCxt
->
ma°îid
 != 0)

5095 i‡(
tmpCxt
 !
cuºít
)

5097 
cx
 = 
tmpCxt
->
LSQ_hód
, 
dx
 = 0; dx !tmpCxt->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

5099 i‡((
	`MD_OP_FLAGS
 (
tmpCxt
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5101 i‡((
tmpCxt
->
LSQ
[
cx
].
addr
 & 
mask
Ë=(
cuºít
->LSQ[
LSQ_ödex
].addr & mask))

5103 i‡(!
tmpCxt
->
LSQ
[
cx
].
•ec_mode
 && !tmpCxt->LSQ[cx].
isPª„tch
)

5106 
	`fixS≥cSèã
 (
tmpCxt
->
LSQ
[
cx
].
¥od
[1]->
ödex
,ÅmpCxt->
id
);

5107 
tmpCxt
->
ªgs
 =ÅmpCxt->
LSQ
[
cx
].
¥od
[1]->
backupReg
;

5108 
	`£qC⁄si°™cyRïœy
 (
tmpCxt
->
LSQ
[
cx
].
¥od
[1]->
ödex
,ÅmpCxt->
id
);

5109 
övÆid©i⁄_ª∂ay
[
bx
]++;

5120 #ifde‡
RELAXED_CONSISTENCY


5121 #ifdef 
EDA


5122 i‡(
cﬁÀ˘_°©s
 && 
cuºít
->
ma°îid
 == 0)

5124 i‡(
cﬁÀ˘_°©s
)

5127 
bx
, 
cx
, 
dx
;

5128 
c⁄ãxt
 *
tmpCxt
;

5129 
md_addr_t
 
mask
;

5131 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

5133 
bx
 = 0; bx < 
numc⁄ãxts
; bx++)

5135 
boﬁ
 = 0;

5137 
tmpCxt
 = 
thec⁄ãxts
[
bx
];

5138 #ifdef 
EDA


5139 i‡(
tmpCxt
->
ma°îid
 != 0)

5143 i‡(
tmpCxt
 !
cuºít
)

5145 
cx
 = 
tmpCxt
->
LSQ_hód
, 
dx
 = 0; dx !tmpCxt->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

5147 i‡((
	`MD_OP_FLAGS
 (
tmpCxt
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5149 i‡((
tmpCxt
->
LSQ
[
cx
].
addr
 & 
mask
Ë=(
cuºít
->LSQ[
LSQ_ödex
].addr & mask))

5151 i‡(!
tmpCxt
->
LSQ
[
cx
].
•ec_mode
 &&ÅmpCxt->LSQ[cx].
issued
)

5153 
tmpCxt
->
LSQ
[
cx
].
övÆid©i⁄Re˚ived
 = 1;

5164 
ãmpOp
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
›
;

5165 i‡(
ˇche_dl1
[
thªadid
])

5168 
dˇche_ac˚ss
++;

5169 
cuºít
->
dˇche_ac˚ss
++;

5171 
övÆid©eOthîCache
 = 0;

5173 #ifde‡
DIRECTORY


5174 
m©chnum
;

5175 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

5176 if(
m©chnum
)

5178 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

5179 
rs
->
ˇche_ªady
 = 1;

5180 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

5185 #ifde‡
DIRECTORY


5186 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

5188 if(
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5190 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 1);

5191 if(
°‹eC⁄dFaû
 == 0)

5192 
	`∑nic
("Store conditional should fail oná L1 miss");

5193 
œt
 = 
ˇche_dl1_œt
;

5197 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Åhreadid);

5198 i‡(
œt
<
WAIT_TIME
)

5200 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 0);

5206 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Åhreadid);

5208 #ifdef 
DCACHE_MSHR


5209 if(
œt
 > 
ˇche_dl1_œt
)

5210 #ifde‡
DIRECTORY


5211 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
œt
, 0, 
rs
);

5213 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
œt
, 0, 
NULL
);

5216 i‡(
œt
 >
WAIT_TIME
)

5218 
rs
->
wrôewaô
 = 1;

5221 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

5223 
°‹eC⁄dFaû
 = 0;

5224 
	`com∂ëeSt‹e
 (
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
 (cuºít->LSQ[LSQ_ödex].
›
), 0);

5226 i‡(!
°‹eC⁄dFaû
)

5227 #ifdef 
EDA


5229 
wL
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

5230 
qw‹d_t
 
wD
 = 0;

5231 
	`f‹m©D©aR2M
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
, cuºít->LSQ[LSQ_ödex].
vÆ_ø
, &
wD
);

5233 
rsCacheAc˚ss
 = 
cuºít
->
LSQ
[
LSQ_ödex
];

5234 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~(
wL
 - 1)), &
wD
, wL, 
sim_cy˛e
, 
NULL
, NULL,Åhreadid);

5237 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

5242 
rsCacheAc˚ss
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5243 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

5247 i‡(
œt
 > 
ˇche_dl1_œt
)

5248 
evíts
 |
PEV_CACHEMISS
;

5253 
°_b™k_c⁄f
++;

5257 #ifde‡
DIRECTORY


5264 #ifde‡
DIRECTORY


5265 
ªadSh¨eDú
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
RódSh¨eDú
;

5268 #i‡
	`deföed
(
SMD_USE_WRITE_BUF
Ë&& deföed(
SEQUENTIAL_CONSISTENCY
)

5270 i‡(
m_L1WBufC¡
[
thªadid
])

5274 #ifde‡
DIRECTORY


5275 if(
rs
->
wrôewaô
 != 1)

5278 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
ﬁd¥eg
, 
thªadid
);

5280 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5283 
	`±ø˚_√w°age
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5284 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5286 i‡(
LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5288 
ãmp_LSQ_rs
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5289 
ãmp_LSQ_ödex
 = 
LSQ_ödex
;

5290 
ãmp_LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5292 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = cuºít->LSQ[(Ë(—emp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size)];

5293 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5294 
ãmp_LSQ_ödex
 = (ãmp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size;

5297 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = *
ãmp_LSQ_rs
;

5298 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5300 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5302 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5303 
cuºít
->
m_shLQNum
--;

5305 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5307 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5308 
cuºít
->
m_shSQNum
--;

5311 
cuºít
->
LSQ_hód
 = (cuºít->LSQ_hód + 1Ë% 
LSQ_size
;

5312 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5313 
cuºít
->
LSQ_num
--;

5314 
ãmp_LSQ_num
--;

5315 #ifde‡
DIRECTORY


5321 #ifde‡
DIRECTORY


5322 if(
rs
->
wrôewaô
 != 1)

5325 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_CT
 && (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5328 
b¥ed_ac˚ss
++;

5329 i‡(!(
rs
->
du∂iˇã
))

5331 
cuºít
->
b¥ed_ac˚ss
++;

5334 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5335  
rs
->
PC
,

5336  
rs
->
√xt_PC
,

5337  
rs
->
√xt_PC
 !‘s->
PC
 +

5338  (
md_ö°_t
)),

5339  
rs
->
¥ed_PC
 !‘s->
PC
 +

5340  (
md_ö°_t
)),

5341  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5342  
rs
->
›
,

5343  &
rs
->
dú_upd©e
,

5344  
rs
->
thªadid
,

5345  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5349 if((
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& (
cuºít
->
id
 == 0))

5351 
	`Ârötf
(
Â_åa˚
, "[BR INST] PC: 0x%Œx In¢ Num: %Œd cy˛e: %Œd\n", 
rs
->
PC
,Ñs->
sim_num_ö¢
, 
sim_cy˛e
);

5352 
	`fÊush
(
Â_åa˚
);

5355 #ifdef 
EDA


5356 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
)

5358 i‡(
cuºít
->
ma°îid
 == 0)

5360 
	`commôPªdi˘i⁄
 (
cuºít
->
¥edQueue
, 
rs
->
boqIndex
);

5362 
	`dynC⁄fBOQSize
 (
cuºít
->
¥edQueue
);

5364 i‡(
rs
->
ªcovî_ö°
 &&Ñs->
lockSètus
 !
TYPE_LOCK_ACQUIRE
 &&Ñs->lockSètu†!
TYPE_INST_BARRIER
)

5365 
	`edaRecovîy
 (
rs
);

5368 i‡(
cuºít
->
ma°îid
 =1 && 
rs
->
ö°Ty≥
 !
TYPE_INST_BARRIER_END
)

5370 
bønchIn°
 *
bønchInfo
 = 
NULL
;

5372 
	`pushBønchPªd
 (
cuºít
->
¥edQueue
, &
bønchInfo
, 
rs
->
›
);

5373 
bønchInfo
->
ö°
 = 
rs
->
IR
;

5374 
bønchInfo
->
›
 = 
rs
->op;

5375 
bønchInfo
->
PC
 = 
rs
->PC;

5376 
bønchInfo
->
NPC
 = 
rs
->
√xt_PC
;

5377 
bønchInfo
->
time
 = 
sim_cy˛e
;

5378 
bønchInfo
->
sim_num_ö¢
 = 
rs
->sim_num_insn;

5379 
bønchInfo
->
ö°Ty≥
 = 
rs
->instType;

5385 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
ﬁd¥eg
, 
thªadid
);

5387 
cuºít
->
RUU
[cuºít->
RUU_hód
].
èg
++;

5389 
	`±ø˚_√w°age
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5390 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
);

5392 
tŸÆ_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
di•_time
);

5393 
max_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
di•_time
), max_slip_cycles);

5395 i‡(
rs
->
issue_time
)

5397 
tŸÆ_issue_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
issue_time
);

5398 
max_issue_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
issue_time
), max_issue_slip_cycles);

5401 
cuºít
->
RUU_hód
 = (cuºít->RUU_hód + 1Ë% 
RUU_size
;

5402 
cuºít
->
RUU_num
--;

5403 
commô_Êag
[
thªadid
] = 0;

5405 i‡(
rs
->
du∂iˇã
)

5407 
COMPARE_ac˚ss
[
thªadid
]++;

5408 
com∑ª_ac˚ss
++;

5411 
rob2_ac˚ss
++;

5412 
cuºít
->
rob2_ac˚ss
++;

5413 
commôãd
++;

5415 
commô_idÀ
 = 0;

5416 
i
 = 0; i < 
MAX_ODEPS
; i++)

5418 i‡(
rs
->
odï_li°
[
i
])

5419 
	`∑nic
 ("retired instruction has odeps\n");

5421 #ifde‡
DIRECTORY


5425 
	`°©_add_ßm∂e
 (
commô_width_°©
, 
commôãd
);

5427 
	}
}

5439 
	$ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
)

5442 
mm
;

5443 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5444 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
;

5446 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

5447 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

5450 
shi·_right
 = 0;

5453 
brRecovîy
[
thªadid
]++;

5455 
di•_dñay
 = 0;

5458 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

5459 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

5460 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

5461 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

5464 i‡(!
cuºít
->
RUU_num
)

5465 
	`∑nic
 ("empty RUU");

5469 
RUU_ödex
 !
bønch_ödex
)

5472 i‡(!
ãmp_RUU_num
)

5473 
	`∑nic
 ("empty RUU");

5476 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

5478 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

5481 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5482 
ãmp_LSQ_num
--;

5483 i‡(!
ãmp_LSQ_num
)

5485 
	`Ârötf
 (
°dîr
, "Thªad %d, cy˛ê%lu\n", 
thªadid
, (Ë
sim_num_ö¢
);

5486 
	`∑nic
 ("RUUánd LSQ out of sync");

5489 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5490 
ãmp_LSQ_num
--;

5492 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5493 
ãmp_RUU_num
--;

5496 i‡(
mode
 == 0)

5499 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5500 
ãmp_RUU_num
--;

5505 
ãmp_RUU_num
 != 0)

5507 
exåaIn¢
[
thªadid
]++;

5509 i‡(!
ãmp_RUU_num
)

5510 
	`∑nic
 ("empty RUU");

5512 i‡(
mode
 =0 && 
RUU_ödex
 =
cuºít
->
RUU_hód
)

5513 
	`∑nic
 ("RUU headándÅail broken");

5515 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

5517 
cuºít
->
iissueq_thrd
--;

5518 
iissueq
--;

5519 
iissueq_˛
[
cuºít
->
id
]--;

5520 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

5522 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

5524 
cuºít
->
fissueq_thrd
--;

5525 
fissueq
--;

5526 
fissueq_˛
[
cuºít
->
id
]--;

5527 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

5530 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

5532 i‡(!
ãmp_LSQ_num
)

5533 
	`∑nic
 ("RUUánd LSQ out of sync");

5534 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

5536 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5537 
ãmp_LSQ_num
--;

5538 i‡(!
ãmp_LSQ_num
)

5539 
	`∑nic
 ("RUUánd LSQ out of sync");

5542 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

5544 
cuºít
->
iissueq_thrd
--;

5545 
iissueq
--;

5546 
iissueq_˛
[
cuºít
->
id
]--;

5547 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

5549 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

5551 
cuºít
->
fissueq_thrd
--;

5552 
fissueq
--;

5553 
fissueq_˛
[
cuºít
->
id
]--;

5554 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

5557 
i
 = 0; i < 
MAX_ODEPS
; i++)

5559 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

5561 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

5564 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

5565 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

5568 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5571 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5574 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5576 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5577 
cuºít
->
m_shLQNum
--;

5579 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5581 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5582 
cuºít
->
m_shSQNum
--;

5585 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

5586 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5587 
cuºít
->
LSQ_num
--;

5588 
ãmp_LSQ_num
--;

5592 
i
 = 0; i < 
MAX_ODEPS
; i++)

5594 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

5595 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

5598 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

5599 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

5600 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

5601 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

5603 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5604 
cuºít
->
RUU_num
--;

5605 
ãmp_RUU_num
--;

5608 
rob2_ac˚ss
++;

5609 
cuºít
->
rob2_ac˚ss
++;

5611 
ö°£qnum
 = 
cuºít
->
RUU
[
bønch_ödex
].
ö°num
;

5612 
œ°˛u°î
 = 
cuºít
->
RUU
[
bønch_ödex
].
˛u°î
;

5613 
num_£¡
 = 1;

5615 i‡(
mode
 == 0)

5617 
cuºít
->
RUU_èû
 = (
bønch_ödex
 + 1Ë% 
RUU_size
;

5618 
	`c›y_‰om
 (
thªadid
);

5622 i‡(
cuºít
->
RUU_num
 != 0)

5623 
	`∑nic
 ("ROB must be completelyÉmpty");

5624 
cuºít
->
RUU_èû
 = cuºít->
RUU_hód
;

5630 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

5635 
ãmp_LSQ_ödex
 = 0;Åemp_LSQ_ödex < 
LSQ_size
;Åemp_LSQ_index++)

5636 i‡(
ãmp_LSQ_ödex
 !
cuºít
->
LSQ
[ãmp_LSQ_ödex].
ödex
)

5637 
	`∑nic
 ("LSQ index messed up");

5638 
	}
}

5652 
	$ruu_wrôeback
 ()

5654 
i
;

5655 
sum1
, 
sum2
, 
sum3
;

5656 
RUU_°©i⁄
 *
rs
;

5657 
dñay
;

5659 
c⁄ãxt
 *
cuºít
;

5663 
ãmp
;

5665 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

5667 
wb_d⁄e
[
ãmp
] = 0;

5671 (
rs
 = 
	`evítq_√xt_evít
 ()))

5673 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

5675 i‡(!
	`OPERANDS_READY
 (
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

5676 
	`∑nic
 ("inst completedánd !ready, !issued, or completed");

5678 
rs
->
com∂ëed
 = 
TRUE
;

5680 
wb_d⁄e
[
rs
->
thªadid
]++;

5683 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

5685 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

5687 
úesu…bus_ac˚ss
++;

5688 
cuºít
->
úesu…bus_ac˚ss
++;

5689 
rob1_ac˚ss
++;

5690 
cuºít
->
rob1_ac˚ss
++;

5691 
iwakeup_ac˚ss
++;

5692 
cuºít
->
iwakeup_ac˚ss
++;

5693 
úegfûe_ac˚ss
++;

5694 
cuºít
->
úegfûe_ac˚ss
++;

5696 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

5699 
‰esu…bus_ac˚ss
++;

5700 
cuºít
->
‰esu…bus_ac˚ss
++;

5701 
rob1_ac˚ss
++;

5702 
cuºít
->
rob1_ac˚ss
++;

5703 
fwakeup_ac˚ss
++;

5704 
cuºít
->
fwakeup_ac˚ss
++;

5705 
‰egfûe_ac˚ss
++;

5706 
cuºít
->
‰egfûe_ac˚ss
++;

5711 i‡(
rs
->
ªcovî_ö°
)

5713 i‡(
rs
->
ö_LSQ
)

5714 
	`∑nic
 ("mis-predictedÜoad or store?!?!?");

5716 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

5717 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

5718 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

5719 #ifde‡
DIRECTORY


5720 
thªadid
 = 
rs
->threadid;

5721 
i
 = 0;

5722 
i
=0;i<
MSHR_SIZE
;i++)

5724 
RS_li°
 *
¥ev
, *
cur
;

5725 
¥ev
=
NULL
, 
cur
 = 
rs_ˇche_li°
[
thªadid
][
i
]; cur; cur=cur->
√xt
)

5727 if(
cur
->
rs
 && cur->rs->
•ec_mode
)

5729 if(
¥ev
 =
NULL
)

5731 
rs_ˇche_li°
[
thªadid
][
i
] = 
cur
->
√xt
;

5732 
¥ev
 = 
NULL
;

5736 
¥ev
->
√xt
 = 
cur
->next;

5737 
cur
 = 
¥ev
;

5738 
¥ev
 = 
cur
;

5742 
¥ev
 = 
cur
;

5747 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

5748 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

5751 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_WB
 && !
rs
->
ö_LSQ
 && (
	`MD_OP_FLAGS
 (rs->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5754 
b¥ed_ac˚ss
++;

5755 i‡(!(
rs
->
du∂iˇã
))

5757 
cuºít
->
b¥ed_ac˚ss
++;

5759 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5760  
rs
->
PC
,

5761  
rs
->
√xt_PC
,

5762  
rs
->
√xt_PC
 !‘s->
PC
 +

5763  (
md_ö°_t
)),

5764  
rs
->
¥ed_PC
 !‘s->
PC
 +

5765  (
md_ö°_t
)),

5766  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5767  
rs
->
›
,

5768  &
rs
->
dú_upd©e
,

5769  
rs
->
thªadid
,

5770  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5774 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,Ñs->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

5776 
sum1
 = 
issue_øã
;

5777 
sum2
 = 0;

5778 
sum3
 = 0;

5780 
i
 = 0; i < 
MAX_ODEPS
; i++)

5782 i‡(
rs
->
⁄ames
[
i
] !
NA
)

5784 
CV_lök
 
lök
;

5785 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

5787 i‡(
rs
->
•ec_mode
)

5789 
lök
 = 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

5790 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

5792 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

5793 
cuºít
->
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

5798 
lök
 = 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

5799 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

5801 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

5802 
cuºít
->
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

5804 i‡(
cuºít
->
ma°îid
 =1 && 
rs
->
out1
 > 0 &&Ñs->out1 < 63 &&Ñs->
pois⁄
[2].
dúty
 && !rs->
ó_comp
)

5806 i‡(
rs
->
out1
 < 32)

5807 
cuºít
->
ªgs
.
ªgs_R
[31 - 
rs
->
out1
] =Ñs->
pois⁄
[2].
d©a
;

5809 
cuºít
->
ªgs
.
ªgs_F
.
q
[
rs
->
out1
 - 32] =Ñs->
pois⁄
[2].
d©a
;

5815 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5817 i‡(
	`RSLINK_VALID
 (
ﬁök
))

5819 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

5820 
	`∑nic
 ("output dependenceálready satisfied");

5821 #ifdef 
EDA


5823 i‡(
rs
->
pois⁄
[2].
dúty
)

5825 
ﬁök
->
rs
->
pois⁄
[ﬁök->
x
.
›num
].
dúty
 = 1;

5826 
ﬁök
->
rs
->
pois⁄
[ﬁök->
x
.
›num
].
d©a
 =Ñs->poison[2].data;

5830 
ﬁök
->
rs
->
pois⁄
[ﬁök->
x
.
›num
].
dúty
 = 0;

5831 
ﬁök
->
rs
->
pois⁄
[ﬁök->
x
.
›num
].
d©a
 = 0;

5834 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

5836 
ﬁök
->
rs
->
whí_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

5837 
ﬁök
->
rs
->
whí_idï_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

5839 
sum2
++;

5840 i‡(
	`OPERANDS_READY
 (
ﬁök
->
rs
))

5842 i‡(!
ﬁök
->
rs
->
ö_LSQ
 || ((
	`MD_OP_FLAGS
 (ﬁök->rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

5843 
	`ªadyq_íqueue
 (
ﬁök
->
rs
);

5844 
sum3
++;

5847 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5848 
	`RSLINK_FREE
 (
ﬁök
);

5850 
rs
->
odï_li°
[
i
] = 
NULL
;

5854 
	}
}

5864 
	#MAX_STD_UNKNOWNS
 
LSQSIZE


	)

5867 #ifde‡ 
LSQ_LOAD_FAST_ISSUE


5869 
	$lsq_ª‰esh
 ()

5871 
i
, 
j
, 
ödex
, 
idx
, 
num_°a_unknown_thªad
 = 0;

5873 
c⁄ãxt
 *
cuºít
;

5875 #ifdef 
LSQ_FIX_PARTIAL_BUG


5876 
°d_width
[
LSQSIZE
];

5879 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

5883 
cuºít
 = 
thec⁄ãxts
[
idx
];

5885 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
; (ò< cuºít->
LSQ_num
Ë&& (
num_°a_unknown_thªad
 < 
numc⁄ãxts
); i++, index = (ödex + 1Ë% 
LSQ_size
)

5887 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


5888 && !
cuºít
->
LSQ
[
ödex
].
issued


5889 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


5890 && !
cuºít
->
LSQ
[
ödex
].
ˇche_ªady
 &&

5891  
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5893 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

5899 
	}
}

5902 
	$lsq_ª‰esh
 ()

5904 
i
, 
idx
, 
j
, 
ödex
, 
n_°d_unknowns
;

5905 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

5906 
c⁄ãxt
 *
cuºít
;

5911 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

5916 
cuºít
 = 
thec⁄ãxts
[
idx
];

5917 
n_°d_unknowns
 = 0;

5918 
i
 = 0; i < 
LSQ_size
; i++)

5919 
°d_unknowns
[
i
] = 0;

5921 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
, 
n_°d_unknowns
 = 0; i < cuºít->
LSQ_num
; i++, index = (ödex + 1Ë% 
LSQ_size
)

5923 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5925 i‡(!
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5931 i‡(!
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5938 i‡(
n_°d_unknowns
 =
LSQ_size
)

5939 
	`Áèl
 ("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

5940 
°d_unknowns
[
n_°d_unknowns
++] = 
cuºít
->
LSQ
[
ödex
].
addr
;

5945 
j
 = 0; j < 
n_°d_unknowns
; j++)

5947 i‡(
°d_unknowns
[
j
] = 
cuºít
->
LSQ
[
ödex
].
addr
)

5948 
°d_unknowns
[
j
] = 0;

5954 ((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


5955 && !
cuºít
->
LSQ
[
ödex
].
issued


5956 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


5957 && 
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5961 
j
 = 0; j < 
n_°d_unknowns
; j++)

5964 i‡(
°d_unknowns
[
j
] =
cuºít
->
LSQ
[
ödex
].
addr
)

5967 i‡(
j
 =
n_°d_unknowns
)

5970 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

5975 
	}
}

5983 
	$ruu_issue
 ()

5985 
k
, 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

5986 
RS_lök
 *
node
, *
√xt_node
;

5987 
ªs_ãm∂©e
 *
fu
;

5988 
öãr
 = -1;

5989 
this_cy˛e_issued
[
CLUSTERS
];

5990 
mm
;

5991 
dñay
 = 0;

5992 
boﬁ_t
 
bLSQHô
 = 
FALSE
;

5993 
boﬁ_t
 
bP¨tülHô
 = 
FALSE
;

5994 
nW1
;

5996 #ifde‡ 
MSHR


5997 
u£_mshr
 = 0;

6000 
∑ª¡ID
;

6002 
c⁄ãxt
 *
cuºít
;

6003 
thªadid
;

6006 
issueLimô
;

6008 
ãmp
;

6011 #ifde‡ 
PULL_BACK


6012 
puŒbackDñay
[
MAXTHREADS
];

6014 
k
 = 0; k < 
numc⁄ãxts
; k++)

6016 
puŒbackD⁄eThisCy˛e
[
k
] = 0;

6017 
dl1MissThisCy˛e
[
k
] = 
dl1HôThisCy˛e
[k] = 0;

6018 
puŒbackDñay
[
k
] = 0;

6020 i‡(
puŒbackWaôCy˛e
[
k
])

6022 
puŒbackWaôCy˛e
[
k
]--;

6025 i‡(
puŒbackBubbÀ
[
k
] && !
puŒbackWaôCy˛e
[k])

6027 
puŒbackCy˛eCou¡
[
k
]++;

6028 
puŒbackBubbÀ
[
k
]--;

6029 
puŒbackDñay
[
k
] = 1;

6035 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

6037 
issue_d⁄e
[
ãmp
] = 0;

6038 
this_cy˛e_issued
[
ãmp
] = 0;

6039 
lﬂdReje˘Cou¡
[
ãmp
] = 0;

6040 
ª∂ayIndex
[
ãmp
] = 0;

6043 
node
 = 
ªady_queue
;

6044 
ªady_queue
 = 
NULL
;

6048 
issueLimô
 = (
ruu_issue_width
 ) * 
numc⁄ãxts
;

6050 
n_issued
 = 0; 
node
 &&Ç_issued < 
issueLimô
;Çodê
√xt_node
)

6052 #ifde‡ 
MSHR


6053 
u£_mshr
 = 0;

6056 
√xt_node
 = 
node
->
√xt
;

6060 i‡(
	`RSLINK_VALID
 (
node
))

6062 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

6064 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

6065 
thªadid
 = 
rs
->threadid;

6066 i‡(!
	`OPERANDS_READY
 (
rs
Ë|| !rs->
queued
 ||Ñs->
issued
 ||Ñs->
com∂ëed
)

6067 
	`∑nic
 ("issued inst !ready, issued, or completed");

6069 #ifde‡
TG


6070 i‡(
rs
->
ö_LSQ
)

6071 
	`åaffic_gíî©e
(
sim_cy˛e
, 
rs
->
addr
,Ñs);

6074 
rs
->
queued
 = 
FALSE
;

6076 #ifde‡ 
PULL_BACK


6077 i‡(
puŒbackDñay
[
rs
->
thªadid
])

6079 
	`ªadyq_íqueue
 (
rs
);

6080 
	`RSLINK_FREE
 (
node
);

6085 i‡(
issue_d⁄e
[
thªadid
] =(
ruu_issue_width
 ))

6087 
	`ªadyq_íqueue
 (
rs
);

6088 
	`RSLINK_FREE
 (
node
);

6092 i‡(
lﬂdReje˘Cou¡
[
thªadid
])

6094 
	`ªadyq_íqueue
 (
rs
);

6095 
	`RSLINK_FREE
 (
node
);

6098 if(
rs
->
ˇche_ªady
 ==1)

6100 
	`ªadyq_íqueue
 (
rs
);

6101 
	`RSLINK_FREE
 (
node
);

6106 i‡(
rs
->
issue_time
 > 
sim_cy˛e
)

6108 
	`ªadyq_íqueue
 (
rs
);

6109 
	`RSLINK_FREE
 (
node
);

6113 i‡(((
rs
->
whí_ªady
[0] <
sim_cy˛e
Ë&& (rs->whí_ªady[1] <sim_cy˛eË&& (rs->whí_ªady[2] <sim_cy˛eË&& (rs->
whí_öq
 < sim_cy˛eË&& !rs->
ö_qwaô
))

6116 #ifde‡ 
PWR_WAKEUP_SELECT


6117 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

6119 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

6121 
i£À˘i⁄_ac˚ss
++;

6122 
cuºít
->
i£À˘i⁄_ac˚ss
++;

6124 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

6126 
f£À˘i⁄_ac˚ss
++;

6127 
cuºít
->
f£À˘i⁄_ac˚ss
++;

6131 
Œ_sc
 = 0;

6133 i‡(
rs
->
›
 =
STL_C
 ||Ñs->› =
LDL_L
)

6136 
Œ_sc
++;

6140 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

6145 
md_addr_t
 
addr
;

6147 #ifdef 
EDA


6148 i‡(
rs
->
pois⁄
[1].
dúty
 == 1)

6149 
addr
 = 
rs
->
pois⁄
[1].
d©a
 + 
	`SEXT
 (rs->
IR
 & 0xffff);

6152 
addr
 = 
rs
->addr;

6154 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6155 
i
;

6157 i‡(!
vÆid_addr
)

6158 
sim_övÆid_addrs
++;

6161 #ifde‡ 
MSHR


6162 
u£_mshr
 = 1;

6165 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6167 i‡(!
fu
)

6169 
	`ªadyq_íqueue
 (
rs
);

6170 
	`RSLINK_FREE
 (
node
);

6175 i‡(
fu
->
ma°î
->
busy
)

6176 
	`∑nic
 ("functional unitálready in use");

6179 i‡(
vÆid_addr
 && 
déb
[
thªadid
])

6181 
éb_œt
 = 0;

6182 
éb_œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid);

6183 if(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6185 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6186 
	`ªadyq_íqueue
 (
rs
);

6187 
	`RSLINK_FREE
 (
node
);

6192 #ifdef 
DCACHE_MSHR


6193 #ifdef 
EDA


6194 
isDL0Hô
 = 1;

6195 if(
cuºít
->
ma°îid
 =1 && (
isDL0Hô
 = 
	`isCacheHô
(
ˇche_dl0
[cuºít->
jobThdId
], 
addr
, 
thªadid
)Ë=0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[cuºít->
hñpThdId
]->
mshr
, 1))

6197 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,ÅhªadidË&& !
mshr_≥ndög_evít
[threadid])

6200 
	`ªadyq_íqueue
 (
rs
);

6201 
	`RSLINK_FREE
 (
node
);

6206 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6207 
rs
->
issued
 = 
TRUE
;

6208 
rs
->
issue_time
 = 
sim_cy˛e
;

6209 
rs
->
com∂ëed
 = 
TRUE
;

6210 
rs
->
föish_time
 = 
sim_cy˛e
;

6213 i‡(
vÆid_addr
 && (
rs
->
›
 !
STL_C
))

6215 
œt
 = 0;

6216 
rsCacheAc˚ss
 = 
rs
;

6217 
m©chnum
 = 0;

6218 
dˇche_ac˚ss
++;

6219 
cuºít
->
dˇche_ac˚ss
++;

6220 #ifde‡
DIRECTORY


6221 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6223 if(!
m©chnum
)

6225 i‡(
ˇche_dl1
[
thªadid
])

6226 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,

6227 #ifde‡
DIRECTORY


6228 
rs
,

6230 
rs
->
thªadid
);

6232 #ifdef 
DCACHE_MSHR


6233 if(
œt
 > 
ˇche_dl1_œt
)

6234 #ifde‡
DIRECTORY


6235 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
rs
);

6237 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
NULL
);

6242 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6245 
rs
->
issued
 = 
TRUE
;

6246 
rs
->
com∂ëed
 = 
TRUE
;

6247 
rs
->
issue_time
 = 
sim_cy˛e
;

6248 
rs
->
föish_time
 = 
sim_cy˛e
;

6250 i‡(
rs
->
cou¡ed_iissueq
)

6252 
cuºít
->
iissueq_thrd
--;

6253 
iissueq
--;

6254 
iissueq_˛
[
rs
->
thªadid
]--;

6255 
rs
->
cou¡ed_iissueq
 = 0;

6257 i‡(
rs
->
cou¡ed_fissueq
)

6259 
cuºít
->
fissueq_thrd
--;

6260 
fissueq
--;

6261 
fissueq_˛
[
rs
->
thªadid
]--;

6262 
rs
->
cou¡ed_fissueq
 = 0;

6266 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

6267 
	`∑nic
 ("store createsÑesult");

6269 i‡(
rs
->
ªcovî_ö°
)

6270 
	`∑nic
 ("mis-predicted store");

6272 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

6273 
n_issued
++;

6276 
issue_d⁄e
[
rs
->
thªadid
]++;

6279 
cuºít
->
iqøm_ac˚ss
++;

6281 i‡(
rs
->
issue_time
 &&Ñs->issue_timê!
sim_cy˛e
)

6282 
	`w¨n
 ("already issueÅimed onánother cycle");

6284 
rs
->
issue_time
 = 
sim_cy˛e
;

6286 
k
 = 0; k < 
MAX_IDEPS
; k++)

6288 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6290 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6292 
úegfûe_ac˚ss
++;

6293 
cuºít
->
úegfûe_ac˚ss
++;

6294 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6295 i‡(
k
)

6296 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6298 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6299 
úegfûe_num_p›_cou¡_cy˛e
++;

6301 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6303 
‰egfûe_ac˚ss
++;

6304 
cuºít
->
‰egfûe_ac˚ss
++;

6305 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6306 i‡(
k
)

6307 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6309 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6310 
úegfûe_num_p›_cou¡_cy˛e
++;

6315 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6316 
cuºít
->
lsq_ac˚ss
++;

6317 
lsq_°‹e_d©a_ac˚ss
++;

6318 
cuºít
->
lsq_¥eg_ac˚ss
++;

6324 
i
 = 
rs
->
ödex
;

6325 
bLSQHô
 = 
FALSE
;

6326 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6330 
bLSQHô
 = 
FALSE
;

6331 i‡(
rs
->
isPª„tch
)

6334 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

6336 i‡(
i
 =
cuºít
->
LSQ_èû
)

6339 #ifdef 
LSQ_FIX_PARTIAL_BUG


6340 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6342 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6347 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

6349 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6350 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6352 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6353 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6355 i‡(
qwAddr1
 =
qwAddr2
)

6357 
bLSQHô
 = 
TRUE
;

6368 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6370 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
addr
 =addrË&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6374 && 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 < 
rs
->
di•_time
 && !cuºít->LSQ[i].
isPª„tch
)

6376 
bLSQHô
 = 
TRUE
;

6384 i‡(
bLSQHô
)

6386 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

6388 
m_sqNumLdRïœy
[
thªadid
]++;

6389 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

6390 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

6391 
lﬂdReje˘Cou¡
[
thªadid
]++;

6396 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 = 
rs
->
di•_time
;

6403 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
NA
)

6406 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

6408 
öãr
 = (
rs
->
addr
 >> 
ˇche_dl1
[rs->
thªadid
]->
£t_shi·
Ë& (
ªs_memb™k
 - 1);

6410 i‡(!
DEDICATED_ADDER
 || (
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
I¡ALU
))

6413 
öãr
 = 
MAGICN
 + 
rs
->
˛u°î
;

6417 i‡(
rs
->
ó_comp
)

6419 
öãr
 = 
RES_CACHEPORTS
 + 1;

6423 
öãr
 = 
RES_CACHEPORTS
 + 2;

6427 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6429 i‡(
fu
)

6431 
rs
->
issued
 = 
TRUE
;

6432 i‡(
rs
->
cou¡ed_iissueq
)

6434 
cuºít
->
iissueq_thrd
--;

6435 
iissueq
--;

6436 
iissueq_˛
[
rs
->
thªadid
]--;

6437 
rs
->
cou¡ed_iissueq
 = 0;

6439 i‡(
rs
->
cou¡ed_fissueq
)

6441 
cuºít
->
fissueq_thrd
--;

6442 
fissueq
--;

6443 
fissueq_˛
[
rs
->
thªadid
]--;

6444 
rs
->
cou¡ed_fissueq
 = 0;

6447 i‡(
fu
->
ma°î
->
busy
)

6448 
	`∑nic
 ("functional unitálready in use");

6450 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

6451 
fu
->
ma°î
->
du∂iˇã
 = 
rs
->duplicate;

6452 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6455 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

6457 
evíts
 = 0;

6458 
lﬂd_œt
 = 0;

6459 
md_addr_t
 
addr
;

6460 #ifdef 
EDA


6461 i‡(
rs
->
pois⁄
[1].
dúty
 == 1)

6462 
addr
 = 
rs
->
pois⁄
[1].
d©a
 + 
	`SEXT
 (rs->
IR
 & 0xffff);

6465 
addr
 = 
rs
->addr;

6467 i‡(
déb
[
thªadid
] && 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
))

6469 
éb_œt
 = 0;

6470 
éb_œt
 = 
	`ˇche_ac˚ss
(
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL, 
rs
->threadid);

6471 i‡(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6473 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6474 
fu
->
ma°î
->
busy
 = 0;

6475 
rs
->
issued
 = 
FALSE
;

6476 
	`ªadyq_íqueue
 (
rs
);

6477 
	`RSLINK_FREE
 (
node
);

6482 #ifdef 
DCACHE_MSHR


6483 #ifdef 
EDA


6484 
isDL0Hô
 = 1;

6485 if((
cuºít
->
ma°îid
 =0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0)) ||

6486 (
cuºít
->
ma°îid
 =1 && (
isDL0Hô
 = 
	`isCacheHô
(
ˇche_dl0
[cuºít->
jobThdId
], 
addr
, 
thªadid
)Ë=0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[cuºít->
hñpThdId
]->
mshr
, 1)))

6488 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid))

6491 
fu
->
ma°î
->
busy
 = 0;

6492 
rs
->
issued
 = 
FALSE
;

6493 
	`ªadyq_íqueue
 (
rs
);

6494 
	`RSLINK_FREE
 (
node
);

6499 
cuºít
->
lsq_ac˚ss
++;

6500 
cuºít
->
lsq_wakeup_ac˚ss
++;

6503 
ldIssueCou¡
++;

6504 #ifde‡
RELAXED_CONSISTENCY


6505 
i
 = 
rs
->
ödex
;

6506 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6509 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

6511 i‡(
i
 =
cuºít
->
LSQ_èû
)

6514 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6515 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6516 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

6518 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6519 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6521 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6522 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6524 i‡((
qwAddr1
 =
qwAddr2
Ë&& 
cuºít
->
LSQ
[
i
].
övÆid©i⁄Re˚ived
)

6526 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

6528 
m_sqNumLdRïœy
[
thªadid
]++;

6529 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

6530 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

6531 
lﬂdReje˘Cou¡
[
thªadid
]++;

6532 
övÆid©i⁄_ª∂ay
[
thªadid
]++;

6541 
ld°Rïœy
 = 1;

6543 i‡(!
rs
->
isPª„tch
)

6544 
ld°Rïœy
 = 
	`checkLSQf‹St
 (
rs
->
ödex
, 
cuºít
);

6546 i‡(!
ld°Rïœy
)

6549 #ifde‡
REMOVE_COMPUTE_QUEUE


6550 i‡(
rs
->
cou¡ed_iissueq
)

6552 
cuºít
->
iissueq_thrd
++;

6553 
iissueq
++;

6554 
rs
->
cou¡ed_iissueq
 = 1;

6556 i‡(
rs
->
cou¡ed_fissueq
)

6558 
cuºít
->
fissueq_thrd
++;

6559 
fissueq
++;

6560 
rs
->
cou¡ed_fissueq
 = 1;

6563 
rs
->
issued
 = 
FALSE
;

6564 
rs
->
issue_time
 = 
sim_cy˛e
 + 
ªje˘RëryCy˛e
;

6565 
	`ªadyq_íqueue
 (
rs
);

6566 
	`RSLINK_FREE
 (
node
);

6567 
ld°Reje˘i⁄Cou¡
[
thªadid
]++;

6572 
bLSQHô
 = 
FALSE
;

6573 
bP¨tülHô
 = 
FALSE
;

6575 
i
 = 
rs
->
ödex
;

6576 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6579 
lsq_œt
 = 0;

6580 i‡(
i
 !
cuºít
->
LSQ_hód
 && !
rs
->
isPª„tch
)

6587 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

6590 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
)

6591 #ifde‡
LSQ_LOAD_FAST_ISSUE


6593 && (
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
i
]))

6595 && (
cuºít
->
LSQ
[
i
].
thªadid
 =
rs
->thªadidË&& !cuºít->LSQ[i].
isPª„tch
)

6597 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6598 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6599 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6600 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6602 i‡(
qwAddr1
 =
qwAddr2
)

6604 
bLSQHô
 = 
TRUE
;

6605 i‡(
nW1
 > 
nW2
)

6609 
bP¨tülHô
 = 
TRUE
;

6615 i‡(
bLSQHô
)

6620 
lsq_œt
 = 
LSQ_LATENCY
;

6621 
rs
->
sqSt‹eF‹w¨dT
 = 
cuºít
->
LSQ
[
i
].
di•_time
;

6625 i‡(
i
 =
cuºít
->
LSQ_hód
)

6629 #ifde‡
DIRECTORY


6630 
m©chnum
;

6631 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6632 if(
m©chnum
 && !
rs
->
isPª„tch
 && !
mshr_≥ndög_evít
[
thªadid
] &&Ñs->
sqSt‹eF‹w¨dT
 == -1)

6634 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6635 
rs
->
issued
 = 
FALSE
;

6636 
rs
->
ˇche_ªady
 = 1;

6637 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

6638 
	`RSLINK_FREE
 (
node
);

6644 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6646 i‡(!
cuºít
->
•ec_mode
 && !
vÆid_addr
)

6647 
sim_övÆid_addrs
++;

6649 i‡(
ˇche_dl1
[
thªadid
] && 
vÆid_addr
 && !(
m©chnum
))

6652 
dˇche_ac˚ss
++;

6653 
cuºít
->
dˇche_ac˚ss
++;

6654 
rsCacheAc˚ss
 = 
rs
;

6655 #ifde‡
DIRECTORY


6656 
lﬂd_œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Ñs->threadid);

6658 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
->threadid);

6661 #ifdef 
DCACHE_MSHR


6663 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 == -1)

6664 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
rs
);

6665 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 != -1)

6666 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
NULL
);

6668 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

6669 
evíts
 |
PEV_CACHEMISS
;

6673 
lﬂd_œt
 = 
fu
->
›œt
;

6676 #ifde‡ 
PULL_BACK


6677 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
 && !
rs
->
isPª„tch
)

6679 
dl1MissThisCy˛e
[
rs
->
thªadid
] = 1;

6680 i‡(
rs
->
›
 !
LDT
 &&Ñs->› !
LDS
)

6682 i‡(!
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
])

6684 i‡(
puŒbackWaôCy˛e
[
rs
->
thªadid
])

6685 
puŒbackBubbÀ
[
rs
->
thªadid
]++;

6687 
puŒbackBubbÀ
[
rs
->
thªadid
] = 2;

6688 
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
] = 1;

6690 i‡(!
puŒbackWaôCy˛e
[
rs
->
thªadid
])

6692 
puŒbackWaôCy˛e
[
rs
->
thªadid
] = 2;

6696 i‡(!
rs
->
isPª„tch
)

6698 
dl1HôThisCy˛e
[
rs
->
thªadid
] = 1;

6699 i‡(
rs
->
›
 =
LDT
 ||Ñs->› =
LDS
)

6701 
lﬂd_œt
 = 
ˇche_dl1_œt
 + 1;

6707 i‡(
PERFECT
)

6709 
lﬂd_œt
 = 
PERFECTLAT
;

6712 i‡(
lsq_œt
)

6714 
lﬂd_œt
 = 
lsq_œt
;

6716 i‡(
rs
->
isPª„tch
)

6718 
lﬂd_œt
 = 
ˇche_dl1_œt
;

6719 i‡(!
rs
->
•ec_mode
)

6720 
m_sqPª„tchC¡
++;

6724 i‡(
bP¨tülHô
)

6726 #ifde‡
DIRECTORY


6727 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5,Üoad_lat+5);

6729 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5);

6733 #ifde‡
DIRECTORY


6734 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
,Üoad_lat);

6736 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
);

6740 i‡(!
rs
->
ó_comp
)

6742 
rs
->
föish_time
 = (
sim_cy˛e
 + 
lﬂd_œt
);

6743 
rs
->
issue_time
 = 
sim_cy˛e
;

6747 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
, (‘s->
ó_comp
 ? 
PEV_AGEN
 : 0Ë| 
evíts
));

6752 #ifde‡
PWR_ACCESS


6753 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6754 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

6756 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

6759 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡ALU
)

6761 
ülu1_ac˚ss
++;

6762 
cuºít
->
ülu1_ac˚ss
++;

6764 i‡(
rs
->
ó_comp
)

6766 
add_Æu
++;

6770 
n⁄add_Æu
++;

6773 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡MULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
I¡DIV
))

6775 
ülu2_ac˚ss
++;

6776 
cuºít
->
ülu2_ac˚ss
++;

6778 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
FlﬂtMULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
FlﬂtDIV
))

6780 
Álu2_ac˚ss
++;

6781 
cuºít
->
Álu2_ac˚ss
++;

6785 
Álu1_ac˚ss
++;

6786 
cuºít
->
Álu1_ac˚ss
++;

6788 #ifde‡
DIRECTORY


6789 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
, 0);

6791 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
);

6793 
rs
->
föish_time
 = (
sim_cy˛e
 + 
fu
->
›œt
);

6794 
rs
->
issue_time
 = 
sim_cy˛e
;

6795 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

6799 
n_issued
++;

6800 
issue_d⁄e
[
rs
->
thªadid
]++;

6802 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6804 
fqøm_ac˚ss
++;

6805 
cuºít
->
fqøm_ac˚ss
++;

6809 
iqøm_ac˚ss
++;

6810 
cuºít
->
iqøm_ac˚ss
++;

6813 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6815 
k
 = 0; k < 
MAX_IDEPS
; k++)

6817 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6819 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6821 
úegfûe_ac˚ss
++;

6822 
cuºít
->
úegfûe_ac˚ss
++;

6823 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6824 i‡(
k
)

6825 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6827 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6828 
úegfûe_num_p›_cou¡_cy˛e
++;

6830 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6832 
‰egfûe_ac˚ss
++;

6833 
cuºít
->
úegfûe_ac˚ss
++;

6834 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6835 i‡(
k
)

6836 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6838 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6839 
úegfûe_num_p›_cou¡_cy˛e
++;

6846 
	`ªadyq_íqueue
 (
rs
);

6847 i‡(!
rs
->
•ec_mode
)

6848 
iss_°Æl
++;

6849 i‡(
öãr
 < 
RES_CACHEPORTS
)

6851 i‡(!
rs
->
•ec_mode
)

6852 
b™k_c⁄f
++;

6858 
rs
->
issued
 = 
TRUE
;

6859 i‡(
rs
->
cou¡ed_iissueq
)

6861 
cuºít
->
iissueq_thrd
--;

6862 
iissueq
--;

6863 
iissueq_˛
[
rs
->
thªadid
]--;

6864 
rs
->
cou¡ed_iissueq
 = 0;

6866 i‡(
rs
->
cou¡ed_fissueq
)

6868 
cuºít
->
fissueq_thrd
--;

6869 
fissueq
--;

6870 
fissueq_˛
[
rs
->
thªadid
]--;

6871 
rs
->
cou¡ed_fissueq
 = 0;

6873 #ifde‡
DIRECTORY


6874 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1, 0);

6876 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1);

6878 i‡(!
rs
->
ó_comp
 &&Ñs->
out1
)

6880 
rs
->
föish_time
 = (
sim_cy˛e
 + 1);

6881 
rs
->
issue_time
 = 
sim_cy˛e
;

6885 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

6886 
n_issued
++;

6887 
issue_d⁄e
[
rs
->
thªadid
]++;

6888 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6890 
fqøm_ac˚ss
++;

6891 
cuºít
->
fqøm_ac˚ss
++;

6895 
iqøm_ac˚ss
++;

6896 
cuºít
->
iqøm_ac˚ss
++;

6898 i‡((
rs
->
ö°num
 - 
cuºít
->
RUU
[cuºít->
RUU_hód
].ö°numË> 
DISTILP
)

6900 
di°ûp
++;

6901 i‡(!
rs
->
•ec_mode
)

6902 
di°ûp_vÆid
++;

6903 
rs
->
di°issue
 = 1;

6905 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6907 
k
 = 0; k < 
MAX_IDEPS
; k++)

6909 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6911 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6913 
úegfûe_ac˚ss
++;

6914 
cuºít
->
úegfûe_ac˚ss
++;

6915 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6916 i‡(
k
)

6917 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6919 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6920 
úegfûe_num_p›_cou¡_cy˛e
++;

6922 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6924 
‰egfûe_ac˚ss
++;

6925 
cuºít
->
‰egfûe_ac˚ss
++;

6927 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6928 i‡(
k
)

6929 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6931 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6932 
úegfûe_num_p›_cou¡_cy˛e
++;

6938 #ifdef 
EDA


6939 i‡(
cuºít
->
ma°îid
 == 1)

6941 i‡(
rs
->
pois⁄
[0].
dúty
 ||Ñs->poison[1].dirty)

6943 i‡(
rs
->
ó_comp
)

6945 
rs
->
pois⁄
[2].
dúty
 = 1;

6946 
rs
->
pois⁄
[2].
d©a
 =Ñs->pois⁄[1].d©®+ 
	`SEXT
 (rs->
IR
 & 0xffff);

6948 i‡(!
rs
->
ö_LSQ
)

6949 
	`ˇlcuœãWr⁄gVÆue
 (
rs
);

6951 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_LOAD
))

6952 
rs
->
pois⁄
[2].
dúty
 = 0;

6958 
	`ªadyq_íqueue
 (
rs
);

6961 
	`RSLINK_FREE
 (
node
);

6964 ; 
node
;Çodê
√xt_node
)

6966 
√xt_node
 = 
node
->
√xt
;

6968 i‡(
	`RSLINK_VALID
 (
node
))

6970 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

6972 
rs
->
queued
 = 
FALSE
;

6973 
	`ªadyq_íqueue
 (
rs
);

6975 
	`RSLINK_FREE
 (
node
);

6980 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

6982 i‡(
lﬂdReje˘Cou¡
[
ãmp
] & 
cﬁÀ˘_°©s
 == 1)

6985 
k
 = 
ª∂ayIndex
[
ãmp
];

6988 i‡(!
thec⁄ãxts
[
ãmp
]->
RUU
[
k
].
•ec_mode
)

6990 
	`fixS≥cSèã
 (
k
, 
ãmp
);

6991 
thec⁄ãxts
[
ãmp
]->
ªgs
 =Åhec⁄ãxts[ãmp]->
RUU
[
k
].
backupReg
;

6992 
	`£qC⁄si°™cyRïœy
 (
k
, 
ãmp
);

6993 
lﬂdReje˘Sèt
[
ãmp
]++;

6998 
num_issued
 = 
n_issued
;

6999 
	}
}

7007 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

7008 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

7009 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

7013 
	$r•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7015 
i
;

7017 
c⁄ãxt
 *
cuºít
;

7019 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7021 i‡(!
°ªam
)

7022 
°ªam
 = 
°dîr
;

7024 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêªgi°î c⁄ã¡†**\n", 
thªadid
);

7026 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7029 
i
 = 0; i < 
MD_NUM_IREGS
; i++)

7031 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

7033 
	`md_¥öt_úeg
 (
cuºít
->
•ec_ªgs_R
, 
i
, 
°ªam
);

7034 
	`Ârötf
 (
°ªam
, "\n");

7039 
i
 = 0; i < 
MD_NUM_FREGS
; i++)

7041 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

7043 
	`md_¥öt_Âªg
 (
cuºít
->
•ec_ªgs_F
, 
i
, 
°ªam
);

7044 
	`Ârötf
 (
°ªam
, "\n");

7049 
i
 = 0; i < 
MD_NUM_CREGS
; i++)

7051 #ifde‡
TEST_BUG


7052 i‡(
	`BITMAP_SET_P
 (
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7054 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7057 
	`md_¥öt_¸eg
 (
cuºít
->
•ec_ªgs_C
, 
i
, 
°ªam
);

7058 
	`Ârötf
 (
°ªam
, "\n");

7061 
	}
}

7073 
	$åa˚r_ªcovî
 (
thªadid
)

7075 
i
;

7076 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

7078 
c⁄ãxt
 *
cuºít
;

7080 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7084 i‡(!
cuºít
->
•ec_mode
)

7085 
	`∑nic
 ("Thªad %d, c™nŸÑecovî u∆es†ö s≥cuœtivêmode", 
thªadid
);

7086 
cuºít
->
•ec_mode
 = 
FALSE
;

7088 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7089 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7093 #ifde‡
TEST_BUG


7094 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7095 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7096 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7098 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7099 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7100 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7105 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7108 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
i
];É¡;É¡ = 
ít_√xt
)

7110 
ít_√xt
 = 
ít
->
√xt
;

7111 
ít
->
√xt
 = 
cuºít
->
buckë_‰ì_li°
;

7112 
cuºít
->
buckë_‰ì_li°
 = 
ít
;

7114 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7118 i‡(
±ø˚_a˘ive
)

7120 
cuºít
->
„tch_num
 != 0)

7122 
	`±ø˚_ídö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
);

7123 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

7124 
cuºít
->
„tch_num
--;

7128 
cuºít
->
„tch_num
 = 0;

7129 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

7130 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªcovî_PC
;

7131 
	}
}

7135 
	$åa˚r_öô
 (
thªadid
)

7137 
i
;

7139 
c⁄ãxt
 *
cuºít
;

7141 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7143 
cuºít
->
•ec_mode
 = 
FALSE
;

7144 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7145 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7148 #ifde‡
TEST_BUG


7149 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7150 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7151 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7153 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7154 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7155 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7157 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7158 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7159 
	}
}

7165 
	#HASH_ADDR
(
ADDR
Ë((((ADDRË>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

7177 
md_Áu…_ty≥


7178 
	$•ec_mem_ac˚ss
 (
mem_t
 *
mem
,

7179 
mem_cmd
 
cmd
,

7180 
md_addr_t
 
addr
,

7181 *
p
,

7182 
nbyãs
)

7184 
i
, 
ödex
;

7185 
•ec_mem_ít
 *
ít
, *
¥ev
;

7187 
c⁄ãxt
 *
cuºít
;

7188 
thªadid
 = 
mem
->threadid;

7190 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7196 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

7199 
i
 = 0; i < 
nbyãs
; i++)

7200 ((*Ë
p
)[
i
] = 0;

7202  
md_Áu…_n⁄e
;

7205 i‡(!((
addr
 >
cuºít
->
ld_ãxt_ba£
 &&ádd∏< (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& 
cmd
 =
Ród
Ë|| 
	`md_vÆid_addr
 (addr, cuºít->
ma°îid
)))

7208 
i
 = 0; i < 
nbyãs
; i++)

7209 ((*Ë
p
)[
i
] = 0;

7211  
md_Áu…_n⁄e
;

7215 
ödex
 = 
	`HASH_ADDR
 (
addr
);

7216 
¥ev
 = 
NULL
, 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
√xt
)

7218 i‡(
ít
->
addr
 ==áddr)

7221 i‡(
¥ev
 !
NULL
)

7224 
¥ev
->
√xt
 = 
ít
->next;

7225 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7226 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7233 i‡(!
ít
 && 
cmd
 =
Wrôe
)

7236 i‡(!
cuºít
->
buckë_‰ì_li°
)

7239 
cuºít
->
buckë_‰ì_li°
 = 
	`ˇŒoc
 (1,  (
•ec_mem_ít
));

7240 i‡(!
cuºít
->
buckë_‰ì_li°
)

7241 
	`Áèl
 ("thªad %d , ouào‡vútuÆ mem‹y", 
thªadid
);

7243 
ít
 = 
cuºít
->
buckë_‰ì_li°
;

7244 
cuºít
->
buckë_‰ì_li°
 = cuºít->buckë_‰ì_li°->
√xt
;

7246 i‡(!
bugcom∑t_mode
)

7249 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7250 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7251 
ít
->
addr
 =áddr;

7252 
ít
->
d©a
[0] = 0;

7253 
ít
->
d©a
[1] = 0;

7258 
nbyãs
)

7261 i‡(
cmd
 =
Ród
)

7263 i‡(
ít
)

7266 *((
byã_t
 *Ë
p
Ë*((byã_à*Ë(&
ít
->
d©a
[0]));

7272 *((
byã_t
 *Ë
p
Ë
	`MEM_READ_BYTE
 (
mem
, 
addr
);

7278 *((
byã_t
 *Ë(&
ít
->
d©a
[0])Ë*((byã_à*Ë
p
);

7282 i‡(
cmd
 =
Ród
)

7284 i‡(
ít
)

7287 *((
hÆf_t
 *Ë
p
Ë*((hÆf_à*Ë(&
ít
->
d©a
[0]));

7293 *((
hÆf_t
 *Ë
p
Ë
	`MEM_READ_HALF
 (
mem
, 
addr
);

7299 *((
hÆf_t
 *Ë& 
ít
->
d©a
[0]Ë*((hÆf_à*Ë
p
);

7303 i‡(
cmd
 =
Ród
)

7305 i‡(
ít
)

7308 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

7314 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

7320 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

7324 i‡(
cmd
 =
Ród
)

7326 i‡(
ít
)

7329 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

7330 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë*((w‹d_à*Ë& 
ít
->
d©a
[1]);

7336 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

7337 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë
	`MEM_READ_WORD
 (
mem
, 
addr
 +  (word_t));

7343 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

7344 *((
w‹d_t
 *Ë& 
ít
->
d©a
[1]Ë*(((w‹d_à*Ë
p
) + 1);

7348 
	`∑nic
 ("access sizeÇot supported in mis-speculative mode");

7351  
md_Áu…_n⁄e
;

7352 
	}
}

7356 
	$m•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7358 
i
, 
j
;

7359 
•ec_mem_ít
 *
ít
;

7361 
c⁄ãxt
 *
cuºít
;

7363 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7365 i‡(!
°ªam
)

7366 
°ªam
 = 
°dîr
;

7368 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêmem‹y c⁄ã¡†**\n", 
thªadid
);

7370 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7372 
j
 = 0; j < 
numc⁄ãxts
; j++)

7374 
	`Ârötf
 (
°ªam
, "thªad %d : \n", 
j
);

7375 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7378 
ít
 = 
thec⁄ãxts
[
j
]->
°‹e_hèbÀ
[
i
];É¡;É¡ =É¡->
√xt
)

7380 
	`myÂrötf
 (
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n", 
ít
->
addr
, (Ë(*((*Ëít->
d©a
)), *((*) &ent->data[0]), *(((*) &ent->data[0]) + 1));

7384 
	}
}

7388 
	$simoo_mem_obj
 (
mem_t
 *
mem
,

7389 
is_wrôe
,

7390 
md_addr_t
 
addr
,

7391 *
p
,

7392 
nbyãs
)

7394 
mem_cmd
 
cmd
;

7396 
thªadid
 = 
mem
->threadid;

7397 
c⁄ãxt
 *
cuºít
;

7399 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7401 i‡(!
is_wrôe
)

7402 
cmd
 = 
Ród
;

7404 
cmd
 = 
Wrôe
;

7407 *
îr°r
;

7409 
îr°r
 = 
	`mem_vÆid
 (
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

7410 i‡(
îr°r
)

7411  
îr°r
;

7415 i‡(
cuºít
->
•ec_mode
)

7416 
	`•ec_mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

7418 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadid
);

7421  
NULL
;

7422 
	}
}

7428 
	$ÊushWrôeBuf„r
 (
thªadid
)

7430 
ödex
;

7431 
wb_mem_ít
 *
ít
, *
¥ev
;

7432 
nbyãs
;

7433 
byã_t
 *
p
, *
q
;

7434 
md_addr_t
 
addr
;

7435 
ii
;

7437 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7439 
ít
 = 
cuºít
->
WBèbÀTaû
;É¡ !
NULL
;É¡ =É¡->
¥ev
)

7441 
p
 = 
ít
->
d©a
;

7442 
nbyãs
 = 
ít
->nbytes;

7443 
addr
 = 
ít
->addr;

7445 #i‡!
WATER_NSQUARED


7446 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7448 
nbyãs
-- > 0)

7450 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7451 
p
 + (
byã_t
);

7452 
addr
 + (
byã_t
);

7456 
ít
->
wrôeAÃódyD⁄e
 = 1;

7459 
	}
}

7463 
	$com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
)

7466 
byã_t
 *
p
, *
q
;

7467 
c⁄ãxt
 *
cuºít
;

7468 
wb_mem_ít
 *
ít
, *
¥ev
;

7471 
nbyãs
;

7472 
md_›code
 
›
;

7473 
md_addr_t
 
ö°
;

7474 
do_wrôe
 = 1;

7475 
jj
;

7476 
ac˚s£d
;

7478 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7479 
ít
 = 
cuºít
->
WBèbÀTaû
;

7481 i‡((
width
 & (width - 1)Ë!0 || (
addr
 & (width - 1)) != 0)

7484 
p
 = 
ít
->
d©a
;

7485 
nbyãs
 = 
ít
->nbytes;

7486 i‡(
addr
 !
ít
->addr)

7487 
	`¥ötf
("ít->add∏%Œd\n", 
ít
->
addr
);

7488 i‡(
addr
 !
ít
->addr)

7489 
	`∑nic
 ("write buffer miss-alignment\n");

7491 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

7492 
ö°
 = 
ít
->
ö°r
;

7494 
p
 = 
ít
->
d©a
;

7495 
nbyãs
 = 
ít
->nbytes;

7498 i‡(
›
 != 35)

7500 #i‡!
WATER_NSQUARED


7501 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7503 
nbyãs
-- > 0)

7505 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7506 
p
 + (
byã_t
);

7507 
addr
 + (
byã_t
);

7514 #i‡
WATER_NSQUARED


7515 
cuºít
->
waôF‹STLC
 = 0;

7517 i‡(!
isFaû
 && (
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 !0Ë&& (comm⁄_ªgs_s[cuºít->ma°îid][cuºít->a˘uÆid].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
)))

7519 
do_wrôe
 = 1;

7521 
jj
 = 0; jj < 
THREADS_PER_JOB
; jj++)

7523 i‡(
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
))

7525 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
ªgs_lock
 = 0;

7526 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 = 0;

7529 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7532 
nbyãs
-- > 0)

7534 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7535 
p
 + (
byã_t
);

7536 
addr
 + (
byã_t
);

7539 
°‹eC⁄dFaû
 = 0;

7543 
cuºít
->
ªgs
.
ªgs_R
[((
ö°
 >> 21) & 0x1f)] = 0;

7544 
do_wrôe
 = 0;

7545 
°‹eC⁄dFaû
 = 1;

7547 
cuºít
->
waôF‹STLC
 = 0;

7550 
ac˚s£d
 = 
ít
->accessed;

7551 
cuºít
->
numOfWBE¡ry
--;

7552 i‡((
ít
->
¥ev
 =
NULL
Ë&& (ít->
√xt
 == NULL))

7554 
cuºít
->
WBèbÀTaû
 = 
NULL
;

7555 
cuºít
->
WBèbÀHód
 = 
NULL
;

7556 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7557 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7559 i‡(
ít
->
√xt
 =
NULL
)

7561 
cuºít
->
WBèbÀTaû
 = 
ít
->
¥ev
;

7562 
ít
->
¥ev
->
√xt
 = 
NULL
;

7563 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7564 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7567 i‡(
ít
->
¥ev
 =
NULL
)

7569 
cuºít
->
WBèbÀHód
 = 
ít
->
√xt
;

7570 
ít
->
√xt
->
¥ev
 = 
NULL
;

7571 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7572 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7576 
ít
->
¥ev
->
√xt
 =Ént->next;

7577 
ít
->
√xt
->
¥ev
 =Ént->prev;

7578 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7579 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7581 
	}
}

7586 
	$commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
)

7588 
ödex
;

7589 
wb_mem_ít
 *
ít
;

7590 
c⁄ãxt
 *
cuºít
;

7591 
md_›code
 
›
;

7592 
œt
 = 0;

7593 
p‹t_œt
 = 0, 
now_œt
 = 0, 
p‹t_now
 = 0;

7596 
cuºít
 = 
thec⁄ãxts
[
thªadID
];

7597 i‡(!
COHERENT_CACHE
)

7599 
	`¥ötf
 ("This isÇotÅrue forÇon-coherent cache\n");

7600 
	`exô
 (0);

7602 
ödex
 = 0;

7603 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

7605 i‡(
ít
->
addr
 =add∏&& !ít->
com∂ëeCy˛e
)

7607 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

7608 i‡(
›
 == 35)

7610 
ít
->
com∂ëeCy˛e
 = 
sim_cy˛e
 + 
œt
;

7611 
ít
->
√edBusAc˚ss
 = 1;

7612 
ít
->
ac˚s£d
 =áccessed;

7616 
ít
->
com∂ëeCy˛e
 = completeCycle;

7617 
ít
->
√edBusAc˚ss
 =ÇeedBusAccess;

7618 
ít
->
ac˚s£d
 =áccessed;

7623 
	}
}

7627 #i‡
PROCESS_MODEL


7629 
	$checkF‹Sh¨edAddr
 (
addr
)

7631 
sh¨edAddªssLi°_s
 *
tmpPå
;

7633 
ödx
 = (Ë(((Ë
addr
 & 1016) >> 3);

7635 
ödx
 = 0;

7636 
tmpPå
 = 
sh¨edAddªssLi°
[
ödx
];

7637 i‡((
addr
 >
La°Sh¨edAddªss
Ë&& (add∏< (La°Sh¨edAddªs†+ 
La°Sh¨edSize
)))

7641 
tmpPå
 !
NULL
)

7643 i‡((
addr
 >
tmpPå
->
addªss
Ë&& (add∏< (tmpPå->addªs†+ÅmpPå->
size
)))

7645 
La°Sh¨edAddªss
 = 
tmpPå
->
addªss
;

7646 
La°Sh¨edSize
 = 
tmpPå
->
size
;

7649 
tmpPå
 =ÅmpPå->
√xt
;

7652 
	}
}

7655 
md_Áu…_ty≥


7656 
	$WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
)

7658 
md_›code
 
›
;

7659 
md_Áu…_ty≥
 
ªtu∫_ty≥
;

7661 
TempIn°r
 = 
ö°r
;

7662 
	`MD_SET_OPCODE
 (
›
, 
TempIn°r
);

7664 if(!
thec⁄ãxts
[
thªadID
]->
•ec_mode
 && (
addr
 <thec⁄ãxts[0]->
ld_°ack_ba£
Ë&& (add∏>Åhec⁄ãxts[0]->ld_°ack_ba£-
numc⁄ãxts
*
STACKSIZE
) && !(addr <=Åhecontexts[threadID]->ld_stack_base &&áddr >Åhecontexts[threadID]->ld_stack_base-STACKSIZE))

7665 
	`∑nic
("Stack boundaries breached: May beÅhe STACKSIZEÖarameter defined in context.h file is small forÅheápplication");

7667 #i‡
	`deföed
(
DO_COMPLETE_FASTFWD
Ë|| deföed(
PARALLEL_EMUL
)

7668 #i‡
PROCESS_MODEL


7669 i‡(
	`checkF‹Sh¨edAddr
 ((Ë
addr
))

7671 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
thec⁄ãxts
[0]->
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7672  
ªtu∫_ty≥
;

7675 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7676  
ªtu∫_ty≥
;

7680 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

7682 i‡(
›
 == 35)

7684 
thec⁄ãxts
[
thªadID
]->
waôF‹STLC
 = 1;

7686 
ªtu∫_ty≥
 = 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7687 #i‡
WATER_NSQUARED


7688 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7691 i‡(
ac˚ss_mem
 && 
ac˚ss_mem_id
 =
thªadID
)

7693 
	`ÊushWrôeBuf„r
 (
thªadID
);

7695  
ªtu∫_ty≥
;

7699 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7700  
ªtu∫_ty≥
;

7702 
	}
}

7706 
INLINE
 

7707 
	$ruu_lök_idï
 (
RUU_°©i⁄
 *
rs
,

7708 
idï_num
,

7709 
idï_«me
)

7711 
CV_lök
 
hód
;

7712 
RS_lök
 *
lök
;

7714 
thªadid
 = 
rs
->threadid;

7715 
c⁄ãxt
 *
cuºít
;

7717 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7719 
rs
->
¥od
[
idï_num
] = 
NULL
;

7720 
rs
->
idï_«me
[
idï_num
] = idep_name;

7722 i‡(
idï_«me
 =
NA
)

7725 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

7726 
rs
->
whí_ªady
[
idï_num
] = 0;

7727 
rs
->
whí_idï_ªady
[
idï_num
] = 
WAIT_TIME
;

7731 
hód
 = 
	`CREATE_VECTOR
 (
idï_«me
);

7734 i‡(!
hód
.
rs
 || hód.rs->
com∂ëed
)

7736 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

7737 
rs
->
whí_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

7738 
rs
->
whí_idï_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

7741 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

7742 
rs
->
¥od
[
idï_num
] = 
hód
.rs;

7744 
	`RSLINK_NEW
 (
lök
, 
rs
);

7745 
lök
->
x
.
›num
 = 
idï_num
;

7746 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

7747 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

7748 
	}
}

7751 
	$√edsWBÊush
 (
c⁄ãxt
 * 
cuºít
, 
md_›code
 
›
, 
md_addr_t
 
addr
)

7753 
nbyãs
 = 
	`GëMemAccWidth
 (
›
);

7755 i‡(
›
 =
LDQ_U
)

7756 
addr
 =áddr & ~7;

7758 
wb_mem_ít
 *
ít
;

7760 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

7762 i‡(
nbyãs
 == 1)

7764 i‡(!(
ít
->
nbyãs
 ==Çbytes))

7766 i‡((
ít
->
addr
 <addrË&& (”¡->add∏+É¡->
nbyãs
) >áddr))

7772 i‡(
nbyãs
 == 2)

7774 i‡(
ít
->
nbyãs
 !=Çbytes)

7776 i‡(
ít
->
nbyãs
 <Çbytes)

7778 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

7785 i‡((
addr
 >
ít
->addrË&& (add∏< (ít->add∏+É¡->
nbyãs
)))

7792 i‡(
nbyãs
 == 4)

7794 i‡(
nbyãs
 !
ít
->nbytes)

7796 i‡(
ít
->
nbyãs
 <Çbytes)

7798 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

7805 i‡(
nbyãs
 == 8)

7807 i‡(
nbyãs
 !
ít
->nbytes)

7809 i‡((
ít
->
nbyãs
 == 1) || (ent->nbytes == 2) || (ent->nbytes == 4))

7811 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

7820 
	}
}

7825 
INLINE
 

7826 
	$ruu_ö°Æl_odï
 (
RUU_°©i⁄
 *
rs
,

7827 
odï_num
,

7828 
odï_«me
)

7830 
CV_lök
 
cv
;

7832 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

7835 i‡(
odï_«me
 =
NA
)

7838 
rs
->
⁄ames
[
odï_num
] = 
NA
;

7843 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

7845 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

7848 
	`CVLINK_INIT
 (
cv
, 
rs
, 
odï_num
);

7849 
	`SET_CREATE_VECTOR
 (
odï_«me
, 
cv
);

7850 
	}
}

7854 
INLINE
 

7855 
	$ruu_ö°Æl_odï_skù
 (
RUU_°©i⁄
 *
rs
,

7856 
odï_num
,

7857 
odï_«me
)

7861 i‡(
odï_«me
 =
NA
)

7864 
rs
->
⁄ames
[
odï_num
] = 
NA
;

7869 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

7871 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

7873 
	}
}

7879 
	$simoo_ªg_obj
 (
ªgs_t
 *
xªgs
,

7880 
is_wrôe
,

7881 
md_ªg_ty≥
 
π
,

7882 
ªg
,

7883 
evÆ_vÆue_t
 *
vÆ
)

7886 
thªadid
 = 0;

7887 
c⁄ãxt
 *
cuºít
;

7889 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7891 
π
)

7893 
π_g¥
:

7894 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

7897 i‡(!
is_wrôe
)

7899 
vÆ
->
ty≥
 = 
ë_uöt
;

7900 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
 (
ªg
);

7903 
	`SET_GPR
 (
ªg
, 
	`evÆ_as_uöt
 (*
vÆ
));

7906 
π_Õr
:

7907 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

7911 
	`ab‹t
 ();

7914 
π_Âr
:

7916 
	`ab‹t
 ();

7919 
π_d¥
:

7921 
	`ab‹t
 ();

7926 
π_PC
:

7927 i‡(!
is_wrôe
)

7929 
vÆ
->
ty≥
 = 
ë_addr
;

7930 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_PC
;

7933 
cuºít
->
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
 (*
vÆ
);

7936 
π_NPC
:

7937 i‡(!
is_wrôe
)

7939 
vÆ
->
ty≥
 = 
ë_addr
;

7940 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

7943 
cuºít
->
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
 (*
vÆ
);

7947 
	`∑nic
 ("bogusÑegister bank");

7951  
NULL
;

7952 
	}
}

7955 
ruu_„tch
 ();

7957 
	g°ÆlCau£
[
MAXTHREADS
] = {0};

7958 
cou¡î_t
 
	gmb_cou¡
 = 0;

7967 
	$ruu_di•©ch
 (
thªadid
)

7969 
i
;

7970 
ãmp˛
;

7971 
ãmµc
 = 0;

7972 
mm
, 
k
;

7973 
f‹˚_b™k
;

7974 
¶Ÿ
;

7976 
n_di•©ched
;

7977 
md_ö°_t
 
ö°
;

7978 
md_›code
 
›
;

7979 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

7980 
md_addr_t
 
èrgë_PC
 = 0;

7981 
md_addr_t
 
addr
 = 0;

7982 
RUU_°©i⁄
 *
rs
;

7983 
RUU_°©i⁄
 *
lsq
;

7986 
RUU_°©i⁄
 *
rs_dup
;

7987 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

7988 
°ack_ªcovî_idx
;

7989 
p£q
;

7990 
is_wrôe
 = 
FALSE
;

7991 
made_check
;

7992 
br_èkí
, 
br_¥ed_èkí
;

7993 
byã_t
 
ãmp_byã
;

7994 
hÆf_t
 
ãmp_hÆf
;

7995 
w‹d_t
 
ãmp_w‹d
;

7997 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

7998 
qw‹d_t
 
ãmp_qw‹d
 = 0;

8000 
qw‹d_t
 
ªgVÆ
;

8001 
hÆf_t
 
ushLdFœg
;

8003 
ªgs_t
 
ãmpReg
;

8006 
ªgs_t
 
ãmpRegPªv
;

8008 
md_Áu…_ty≥
 
Áu…
;

8010 
so·_îr‹
, 
ãmp_„tch_num
;

8013 
qw‹d_t
 
vÆ_ø
 = 0, 
vÆ_rb
 = 0, 
vÆ_rc
 = 0, 
vÆ_ø_ªsu…
 = 0;

8014 
	`c›y_to
 ();

8015 
	`b™k_lookup
 (
md_addr_t
, , );

8017 
c⁄ãxt
 *
cuºít
;

8018 
„tch_time
 = 0;

8020 
£c⁄d_run
 = 
TRUE
, 
no_d•_˛s
;

8022 
ö_LSQ
 = 0;

8023 
lsq_fuŒ
 = 0;

8025 
∑ª¡ID
;

8027 
ªsour˚_√ed
[4];

8029 
ªsour˚_√ed
[0] = 1;

8030 
ªsour˚_√ed
[1] = 1;

8031 
ªsour˚_√ed
[2] = 3;

8032 
ªsour˚_√ed
[3] = 3;

8034 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8036 
n_di•©ched
 = 0;

8037 
ãmp_„tch_num
 = 
cuºít
->
„tch_num
;

8039 
cuºít
->
„tch_ªdúe˘ed
 = 
FALSE
;

8040 
°ÆlCau£
[
thªadid
] = 0;

8042 i‡(
ãmp_„tch_num
 != 0)

8044 
made_check
 = 
FALSE
;

8045 
ãmp˛
 = 
a˘uÆ_˛u°îs
;

8049 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

8050 && 
cuºít
->
LSQ_num
 < 
LSQ_size
 && cuºít->
m_shLQNum
 < 
m_shLQSize


8051 #ifdef 
SMD_USE_WRITE_BUF


8052 && (
cuºít
->
m_shSQNum
 + 
m_L1WBufC¡
[
thªadid
]Ë< 
m_shSQSize


8054 && (
cuºít
->
m_shSQNum
Ë< 
m_shSQSize


8056 && (
cuºít
->
RUU_num
 < 
RUU_size
)

8057 && 
ãmp_„tch_num
 !0 && (
ruu_ö˛ude_•ec
 || !
cuºít
->
•ec_mode
))

8060 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8061 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

8063 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

8064 
ö_LSQ
 = 1;

8066 
ö_LSQ
 = 0;

8068 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8070 
ªsour˚_√ed
[0] = 0;

8071 
ªsour˚_√ed
[1] = 1;

8072 
ªsour˚_√ed
[2] = 0;

8073 
ªsour˚_√ed
[3] = 3;

8077 
ªsour˚_√ed
[0] = 1;

8078 
ªsour˚_√ed
[1] = 0;

8079 
ªsour˚_√ed
[2] = 3;

8080 
ªsour˚_√ed
[3] = 1;

8083 i‡(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesour˚_√ed[1])Ë&& (
úegfûe_˛
[thªadid] <((
IPREG_size
Ë-Ñesour˚_√ed[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8085 if(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesource_need[1]))))

8086 
°ÆlCau£
[
thªadid
] = 
SèŒIssueFuŒ
;

8087 if(!((
úegfûe_˛
[
thªadid
] <((
IPREG_size
Ë- 
ªsour˚_√ed
[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8088 
°ÆlCau£
[
thªadid
] = 
SèŒRegFuŒ
;

8092 i‡((
thec⁄ãxts
[
thªadid
]->
waôF‹BønchResﬁve
 =1Ë|| (thec⁄ãxts[thªadid]->
waôF‹STLC
))

8094 
°ÆlCau£
[
thªadid
] = 
SèŒSTLC
;

8098 i‡(
ruu_ö‹dî_issue
 && (
cuºít
->
œ°_›
.
rs
 && 
	`RSLINK_VALID
 (&cuºít->œ°_›Ë&& !
	`OPERANDS_READY
 (current->last_op.rs)))

8103 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

8104 i‡(
busSlŸCou¡
 < 11)

8106 
°ÆlNoBusSlŸ
++;

8111 i‡(
cﬁÀ˘SètSt›
[
cuºít
->
id
])

8116 
j
, 
boﬁ
 = 0, 
tmp
, 
Œ_sc
 = 0;

8117 
c⁄ãxt
 *
tmpCxt
;

8118 
md_addr_t
 
mask
;

8120 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

8123 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8124 
dú_upd©e_±r
 = &(
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
dú_upd©e
);

8125 
°ack_ªcovî_idx
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->stack_recover_idx;

8126 
p£q
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
;

8127 
„tch_time
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->fetch_time;

8129 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
is_dup
 = 
TRUE
;

8132 i‡(
›
 =
STL_C
)

8135 
Œ_sc
++;

8139 i‡(
›
 =
LDL_L
)

8141 
Œ_sc
++;

8143 if(
	`MD_OP_FLAGS
(
›
Ë& 
F_FENCE
)

8144 
mb_cou¡
++;

8147 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_TRAP
)

8149 
	#OSF_SYS_gëthªadid
 500

	)

8150 
	#OSF_SYS_STATS
 530

	)

8151 
	#OSF_SYS_BARRIER_STATS
 531

	)

8152 
	#OSF_SYS_LOCK_STATS
 532

	)

8153 
	#OSF_SYS_BARRIER_INSTR
 533

	)

8154 
qw‹d_t
 
syscode
 = 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_V0
];

8155 if(
cuºít
->
•ec_mode
 || !(
syscode
 =
OSF_SYS_gëthªadid
 || syscodê=
OSF_SYS_STATS
 || syscodê=
OSF_SYS_BARRIER_STATS
 || syscodê=
OSF_SYS_BARRIER_INSTR
 || syscodê=
OSF_SYS_LOCK_STATS
))

8157 i‡(
cuºít
->
RUU_num
 != 0)

8159 
°ÆlCau£
[
thªadid
] = 
SèŒTøp
;

8164 i‡(
cuºít
->
•ec_mode
)

8165 
	`∑nic
 ("drainedánd speculative");

8168 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->regs_PC;

8169 
cuºít
->
¥ed_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->pred_PC;

8170 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8173 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

8174 
cuºít
->
•ec_ªgs_R
[
MD_REG_ZERO
] = 0;

8175 #ifde‡
TARGET_ALPHA


8176 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8177 
cuºít
->
•ec_ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8180 #ifdef 
EDA


8181 #ifdef 
RUN_ORACLE


8183 i‡(
cuºít
->
lockSètus
 =0 && cuºít->
ma°îid
 =1 && (cuºít->
•ec_mode
 =0Ë&& (
thec⁄ãxts
[cuºít->
‹a˛eId
]->spec_mode == 0))

8185 i‡(
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
lockSètus
 =
TYPE_LOCK_ACQUIRE
 ||Åhec⁄ãxts[cuºít->‹a˛eId]->lockSètu†=
TYPE_INST_BARRIER
)

8187 
	`execOø˛eEmul
 (
thec⁄ãxts
[
cuºít
->
‹a˛eId
]);

8188 i‡(
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
ªgs
.
ªgs_PC
 != current->regs.regs_PC)

8190 i‡(
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
lockSètus
 != 0)

8191 
	`∑nic
 ("Lock status must have beenÑeset forÅheÜeadÅhread");

8193 i‡(
cuºít
->
ªgs
.
ªgs_PC
 !
thec⁄ãxts
[cuºít->
‹a˛eId
]->ªgs.
ªgs_NPC
)

8194 
	`∑nic
 ("Opportunisticánd Oracle must be inÜock step\n");

8196 
	`execOø˛eEmul
 (
thec⁄ãxts
[
cuºít
->
‹a˛eId
]);

8199 
ö°Ty≥
 = 
TYPE_INST_INCLUDED
;

8201 i‡(
cuºít
->
ma°îid
 == 1)

8202 
ö°Ty≥
 = 
	`GëExecSètus
 (
cuºít
->
ªgs
.
ªgs_PC
, 
NULL
);

8204 if(
cuºít
->
ma°îid
 =0 && (
	`MD_OP_FLAGS
(
›
Ë& 
F_LOAD
Ë&& (
RA
 == 31))

8206 
ö°Ty≥
 = 
TYPE_INST_REMOVED
;

8207 i‡(!
cuºít
->
•ec_mode
)

8209 
puª_num_ö¢
++;

8210 
sim_num_ö¢
++;

8211 
cuºít
->
sim_num_ö¢
++;

8215 i‡(
ö°Ty≥
 !
TYPE_INST_REMOVED
)

8219 
addr
 = 0;

8220 
is_wrôe
 = 
FALSE
;

8223 #i‡
	`deföed
(
TARGET_PISA
)

8224 
vÆ_ø
 = 
	`GPR
 (
RS
);

8225 
vÆ_rb
 = 
	`GPR
 (
RT
);

8226 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8230 
Áu…
 = 
md_Áu…_n⁄e
;

8231 
so·_îr‹
 = 
FALSE
;

8234 
ãmpRegPªv
 = 
cuºít
->
ªgs
;

8237 
ushLdFœg
 = 0;

8239 #ifdef 
EDA


8240 i‡(
cuºít
->
ma°îid
 =1 && 
	`MD_OP_FLAGS
 (
›
Ë& 
F_LOAD
)

8242 
lﬂdLoˇti⁄
 = 0;

8244 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

8245 
md_addr_t
 
memAddr
 = (
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
)Ë& (~(
memWidth
 - 1));

8246 
byã_t
 *
memD©a
 = 
	`ˇŒoc
 (
memWidth
,  (byte_t));

8248 i‡(
	`ˇcheBlockSórch
 (
ˇche_dl0
[
cuºít
->
jobThdId
], 
Ród
, 
memAddr
, 
memD©a
, 
memWidth
) == 0)

8250 i‡(
	`ˇcheBlockSórch
 (
ˇche_dl1
[
cuºít
->
hñpThdId
], 
Ród
, 
memAddr
, 
memD©a
, 
memWidth
) == 0)

8254 
tmpId
, 
found
 = 0;

8256 
tmpId
 = 0;ÅmpId < 
numc⁄ãxts
;ÅmpId++)

8258 i‡(
thec⁄ãxts
[
tmpId
]->
ma°îid
 != 0)

8260 i‡(
tmpId
 =
cuºít
->
hñpThdId
)

8263 i‡(
	`ˇcheBlockSórch
 (
ˇche_dl1
[
tmpId
], 
Ród
, 
memAddr
, 
memD©a
, 
memWidth
) == 1)

8265 
found
 = 1;

8270 i‡(
found
 =0 && 
	`ˇcheBlockSórch
 (
ˇche_dl2
, 
Ród
, 
memAddr
, 
memD©a
, 
memWidth
) == 0)

8272 
	`mem_ac˚ss_dr˘
 (
thec⁄ãxts
[
cuºít
->
hñpThdId
]->
mem
, 
Ród
, 
memAddr
, 
memD©a
, 
memWidth
, current->helpThdId);

8273 
lﬂdLoˇti⁄
 = 4;

8276 
lﬂdLoˇti⁄
 = 3;

8279 
lﬂdLoˇti⁄
 = 2;

8282 
lﬂdLoˇti⁄
 = 1;

8284 
	`mem_ac˚ss_dr˘
 (
cuºít
->
mem
, 
Wrôe
, 
memAddr
, 
memD©a
, 
memWidth
, cuºít->
id
);

8285 
	`‰ì
 (
memD©a
);

8288 i‡(
cuºít
->
ma°îid
 =0 || (cuºít->ma°îid =1 && 
ö°Ty≥
 !
TYPE_INST_PREFETCH
 && 
›
 !
PAL_CALLSYS
))

8291 
›
)

8293 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

8294 
OP
: \

8296 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

8297 
out1
 = 
O1
; 
out2
 = 
O2
; \

8298 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

8299 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

8300 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

8301 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

8302 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

8303 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

8305 if(
£c⁄d_run
Ë
	`SYMCAT
(
OP
,
_IMPL
); \

8307 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

8308 
OP
: \

8310 
›
 = 
MD_NOP_OP
; \

8312 
out1
 = 
NA
; 
out2
 = NA; \

8313 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

8316 
	#CONNECT
(
OP
Ë

	)

8322 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

8324 i‡(!
cuºít
->
•ec_mode
) \

8325 
Áu…
 = (
FAULT
); \

8329 
	#THREADID
 (
cuºít
->
id
)

	)

8330 
	~"machöe.def
"

8333 
›
 = 
MD_NOP_OP
;

8335 
out1
 = 
NA
;

8336 
out2
 = 
NA
;

8337 
ö1
 = 
NA
;

8338 
ö2
 = 
NA
;

8339 
ö3
 = 
NA
;

8342 #ifdef 
EDA


8346 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8347 
ö1
 = 
ö2
 = 
ö3
 = 
NA
;

8348 
out1
 = 
out2
 = 
NA
;

8350 if(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

8352 
addr
 = 
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
);

8353 
ö2
 = 31 - 
RB
;

8354 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
ö2
];

8358 i‡(!
cuºít
->
•ec_mode
)

8360 if(!(
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]))

8361 
puª_num_ö¢
++;

8362 
tŸÆ_num_ö¢
++;

8363 
sim_num_ö¢
++;

8364 
cuºít
->
sim_num_ö¢
++;

8367 i‡(
Áu…
 !
md_Áu…_n⁄e
)

8369 
	`Ârötf
 (
°dîr
, "sim_cy˛ê%ld\¿sim_ö¢ %ld,Åhrdid %d,Ö¯%lx, Next_p¯%lx\n", (Ë
sim_cy˛e
, (Ë
cuºít
->
sim_num_ö¢
, cuºít->
id
, (Ëcuºít->
ªgs
.
ªgs_PC
,

8370 (Ë
cuºít
->
ªgs
.
ªgs_PC
);

8371 
	`Ârötf
 (
°dîr
, "„tchÖ¯ %lx,„tch Next_p¯ %lx\n", (Ë
cuºít
->
„tch_ªgs_PC
, (Ëcuºít->
„tch_¥ed_PC
);

8372 
	`Áèl
 ("Thªad %d,Ç⁄-•ecuœtivêÁu… (%dËdëe˘ed @ %lx", 
thªadid
, 
Áu…
, (Ë
cuºít
->
ªgs
.
ªgs_PC
);

8375 #ifdef 
EDA


8376 i‡(
ö°Ty≥
 =
TYPE_LOCK_ACQUIRE
)

8378 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8379 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_RA
] = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8382 i‡(
ö°Ty≥
 =
TYPE_INST_BARRIER
 && (
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
))

8387 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
); 
	`GëExecSètus
 (cuºít->ªgs.ªgs_NPC, 
NULL
Ë=
TYPE_INST_BARRIER
; current->regs.regs_NPC = current->regs.regs_NPC +  (md_inst_t));

8389 
md_ö°_t
 
ö°_ãmp
;

8390 
md_›code
 
›_ãmp
;

8392 
	`MD_FETCH_INST
 (
ö°_ãmp
, 
thec⁄ãxts
[
cuºít
->
hñpThdId
]->
mem
, cuºít->
ªgs
.
ªgs_NPC
 -  (
md_ö°_t
));

8393 
	`MD_SET_OPCODE
 (
›_ãmp
, 
ö°_ãmp
);

8395 i‡(
›_ãmp
 =
BSR
)

8396 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_RA
] = cuºít->ªgs.
ªgs_NPC
;

8400 #i‡
	`deföed
(
TARGET_PISA
)

8401 
vÆ_rc
 = 
	`GPR
 (
RD
);

8402 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RS
);

8403 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8404 i‡(
out1
 < 32)

8405 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

8407 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

8408 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

8409 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

8411 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

8414 
ãmpReg
 = 
cuºít
->
ªgs
;

8417 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
))

8419 
sim_tŸÆ_ªfs
++;

8420 i‡(!
cuºít
->
•ec_mode
)

8421 
sim_num_ªfs
++;

8423 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

8424 
is_wrôe
 = 
TRUE
;

8427 
sim_tŸÆ_lﬂds
++;

8428 i‡(!
cuºít
->
•ec_mode
)

8429 
sim_num_lﬂds
++;

8433 #ifdef 
EDA


8434 i‡(!
cuºít
->
•ec_mode
 && cuºít->
ma°îid
 =0 && (cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->
lockSètus
 =
TYPE_LOCK_ACQUIRE
 || cuºít->„tch_d©a[cuºít->„tch_hód]->lockSètu†=
TYPE_INST_BARRIER
))

8436 
numSyncIn°
[
cuºít
->
jobThdId
]++;

8437 
puª_sync_ö¢
++;

8440 i‡(
cuºít
->
ma°îid
 =0 && (cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->
lockSètus
 =
TYPE_LOCK_ACQUIRE
 || cuºít->„tch_d©a[cuºít->„tch_hód]->lockSètu†=
TYPE_INST_BARRIER
)

8441 && (((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)Ë=(F_CTRL | F_UNCOND | F_INDIRJMP)Ë|| 
cuºít
->
ªgs
.
ªgs_PC
 =cuºít->
lockExôPC
))

8443 
cuºít
->
¥ed_PC
 = cuºít->
ªgs
.
ªgs_NPC
;

8446 i‡(!
cuºít
->
•ec_mode
 && cuºít->
ma°îid
 == 0)

8448 i‡(
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
lockSètus
 !
TYPE_LOCK_ACQUIRE
 && cuºít->„tch_d©a[cuºít->„tch_hód]->lockSètu†!
TYPE_INST_BARRIER


8449 && 
	`GëExecSètus
 (
cuºít
->
ªgs
.
ªgs_PC
, 
NULL
Ë=
TYPE_INST_INCLUDED
)

8451 
n⁄SktIn¢
[
cuºít
->
jobThdId
]++;

8452 
puª_skt_ö¢
++;

8456 #ifdef 
RUN_ORACLE


8457 i‡(
cuºít
->
ma°îid
 =1 && cuºít->
•ec_mode
 =0 && 
thec⁄ãxts
[cuºít->
‹a˛eId
]->•ec_modê=0 &&Åhec⁄ãxts[cuºít->‹a˛eId]->
lockSètus
 == 0

8458 && (
cuºít
->
ªgs
.
ªgs_NPC
 !
thec⁄ãxts
[cuºít->
‹a˛eId
]->regs.regs_NPC))

8460 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
•ec_mode
 = 1;

8465 
br_èkí
 = (
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)));

8466 
br_¥ed_èkí
 = (
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)));

8469 i‡(
›
 !
MD_NOP_OP
)

8490 
DUPLICATION_ac˚ss
[
thªadid
]++;

8491 
du∂iˇti⁄_ac˚ss
++;

8493 
rs
 = &
cuºít
->
RUU
[cuºít->
RUU_èû
];

8495 #ifde‡
HOTLEAKAGE


8496 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

8498 
ª«me_ac˚ss
++;

8499 
cuºít
->
ª«me_ac˚ss
++;

8501 
rs
->
thªadid
 =Åhreadid;

8502 
rs
->
IR
 = 
ö°
;

8503 
rs
->
›
 = op;

8504 
rs
->
ö°num
 = ++
ö°£qnum
;

8505 
rs
->
isSyncIn°
 = (
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]);

8507 
rs
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8508 
rs
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8509 
rs
->
¥ed_PC
 = 
cuºít
->pred_PC;

8510 
rs
->
ö_LSQ
 = 
FALSE
;

8511 
rs
->
ó_comp
 = 
FALSE
;

8512 
rs
->
ab™k
 = -1;

8513 
rs
->
pb™k
 = -1;

8514 
rs
->
ªcovî_ö°
 = 
FALSE
;

8515 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

8516 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

8517 
rs
->
•ec_mode
 = 
cuºít
->spec_mode;

8518 
rs
->
„tch_time
 = fetch_time;

8519 
rs
->
di•_time
 = 
sim_cy˛e
;

8520 
rs
->
föish_time
 = 0;

8521 
rs
->
ˇche_ªady
 = 0;

8522 
rs
->
ö_qwaô
 = 0;

8523 
rs
->
issue_time
 = 0;

8524 
rs
->
addr
 = 0;

8525 
rs
->
di°issue
 = 0;

8526 
rs
->
lsqE¡ry
 = 0;

8528 
rs
->
£q
 = ++(
cuºít
->
ö°_£q
);

8529 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

8530 
rs
->
±ø˚_£q
 = 
p£q
;

8531 
rs
->
cou¡ed_iissueq
 = 0;

8532 
rs
->
cou¡ed_fissueq
 = 0;

8533 
rs
->
övÆid©i⁄Re˚ived
 = 0;

8534 
rs
->
du∂iˇã
 = (1 - 
£c⁄d_run
);

8536 
rs
->
¥evRegVÆ
 = 
ªgVÆ
;

8538 
rs
->
backupReg
 = 
ãmpRegPªv
;

8539 #ifde‡
DIRECTORY


8540 
rs
->
wrôewaô
 = 0;

8541 
rs
->
RódSh¨eDú
 = 0;

8542 
rs
->
wrôemiss
 = 0;

8544 i‡(!
£c⁄d_run
)

8545 
rs
->
•ec_mode
 = 0;

8546 
rs
->
Áu…ög_ö°r
 = 
FALSE
;

8548 #ifde‡
PWR_WAKE


8549 
rs
->
cou¡ed_úódy
 = 0;

8550 
rs
->
cou¡ed_‰ódy
 = 0;

8551 
rs
->
cou¡ed_lsqªady
 = 0;

8554 
rs
->
‰ìd
 = 0;

8555 
rs
->
vÆ_ø
 = val_ra;

8556 
rs
->
vÆ_rb
 = val_rb;

8557 
rs
->
vÆ_rc
 = val_rc;

8558 
rs
->
vÆ_ø_ªsu…
 = val_ra_result;

8559 
rs
->
whí_ªady
[0] = 
WAIT_TIME
;

8560 
rs
->
whí_ªady
[1] = 
WAIT_TIME
;

8561 
rs
->
whí_ªady
[2] = 
WAIT_TIME
;

8562 
rs
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

8563 
rs
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

8564 
rs
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

8565 
rs
->
idï_«me
[0] = 0;

8566 
rs
->
idï_«me
[1] = 0;

8567 
rs
->
idï_«me
[2] = 0;

8568 
rs
->
isL1Miss
 = 0;

8570 #if 
	`deföed
(
EDA
Ë& deföed(
RUN_ORACLE
)

8571 i‡(
cuºít
->
ma°îid
 == 1)

8572 
rs
->
sim_num_ö¢
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->sim_num_insn;

8575 
rs
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

8576 
rs
->
outReg
 = 
out1
;

8578 
rs
->
¥evReg
 = 
ãmpReg
;

8579 #ifdef 
EDA


8580 
rs
->
boqIndex
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->boqIndex;

8582 
rs
->
ö°Ty≥
 = instType;

8583 
rs
->
lockSètus
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->lockStatus;

8585 
rs
->
pois⁄
[0].
dúty
 =Ñs->pois⁄[0].
d©a
 = 0;

8586 
rs
->
pois⁄
[1] =Ñs->poison[2] =Ñs->poison[0];

8587 
rs
->
ch™geS≥cMode
 = 0;

8588 i‡(
cuºít
->
ma°îid
 == 0)

8590 
rs
->
isWr⁄gP©h
 = 0;

8591 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8593 i‡(
cuºít
->
ma°îid
 == 1)

8595 
rs
->
isWr⁄gP©h
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
•ec_mode
;

8596 
rs
->
ÆtPC
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
ªgs
.
ªgs_NPC
;

8599 
	`∑nic
 ("No oracle instruction can go intoÅiming simulation.");

8601 
rs
->
o_vÆ_ø
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->o_val_ra;

8602 
rs
->
o_vÆ_rb
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->o_val_rb;

8603 
rs
->
o_vÆ_rc
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->o_val_rc;

8610 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& !
£c⁄d_run
)

8611 
rs
->
›
 = 
MD_AGEN_OP
;

8614 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& 
£c⁄d_run
)

8616 
lsq
 = &
cuºít
->
LSQ
[cuºít->
LSQ_èû
];

8617 #ifde‡
HOTLEAKAGE


8618 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

8620 
rs
->
›
 = 
MD_AGEN_OP
;

8621 
rs
->
ó_comp
 = 
TRUE
;

8626 
lsq
->
sqSt‹eF‹w¨dT
 = -1;

8630 
lsq
->
ushFœg
 = 
ushLdFœg
;

8633 
lsq
->
thªadid
 =Åhreadid;

8634 
lsq
->
IR
 = 
ö°
;

8635 
lsq
->
›
 = op;

8636 
lsq
->
ö°num
 = 
ö°£qnum
;

8637 
lsq
->
isSyncIn°
 = (
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]);

8638 
lsq
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8639 
lsq
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8640 
lsq
->
¥ed_PC
 = 
cuºít
->pred_PC;

8641 
lsq
->
ö_LSQ
 = 
TRUE
;

8642 
lsq
->
ó_comp
 = 
FALSE
;

8643 
lsq
->
ö_qwaô
 = 0;

8644 
lsq
->
di°issue
 = 0;

8645 
lsq
->
‰ìd
 = 0;

8646 
lsq
->
ab™k
 = -1;

8647 
lsq
->
pb™k
 = -1;

8649 
lsq
->
ªcovî_ö°
 = 
FALSE
;

8650 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

8651 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

8652 
lsq
->
°ack_ªcovî_idx
 = 0;

8653 
lsq
->
•ec_mode
 = 
cuºít
->spec_mode;

8654 
lsq
->
„tch_time
 = fetch_time;

8655 
lsq
->
di•_time
 = 
sim_cy˛e
;

8656 
lsq
->
föish_time
 = 0;

8657 
lsq
->
ˇche_ªady
 = 0;

8658 
lsq
->
issue_time
 = 0;

8659 
lsq
->
cou¡ed_iissueq
 = 0;

8660 
lsq
->
cou¡ed_fissueq
 = 0;

8662 
lsq
->
övÆid©i⁄Re˚ived
 = 0;

8663 #ifde‡
PWR_WAKE


8664 
lsq
->
cou¡ed_úódy
 = 0;

8665 
lsq
->
cou¡ed_‰ódy
 = 0;

8666 
lsq
->
cou¡ed_lsqªady
 = 0;

8668 
mm
 = 0; mm < 
CLUSTERS
; mm++)

8670 
lsq
->
°_ªach
[
mm
] = 0;

8673 
lsq
->
backupReg
 = 
ãmpRegPªv
;

8674 
lsq
->
addr
 =áddr;

8675 
rs
->
addr
 =áddr;

8677 
rs
->
ab™k
 = 
lsq
->abank;

8678 i‡(!
BANKPRED
)

8680 
rs
->
pb™k
 =Ñs->
ab™k
;

8681 
lsq
->
pb™k
 =Üsq->
ab™k
;

8683 
rs
->
ab™k
 =Ñs->ab™k % 
CLUSTERS
;

8684 
lsq
->
ab™k
 = 
rs
->abank;

8685 
rs
->
pb™k
 =Ñs->pb™k % 
CLUSTERS
;

8686 
lsq
->
pb™k
 = 
rs
->pbank;

8687 i‡(!
lsq
->
•ec_mode
)

8689 i‡(
lsq
->
ab™k
 =lsq->
pb™k
)

8690 
ac_b™k_¥ed_c‹r
++;

8692 
ac_b™k_¥ed_wr⁄g
++;

8694 
lsq
->
£q
 = ++(
cuºít
->
ö°_£q
);

8695 
lsq
->
±ø˚_£q
 =Ötrace_seq++;

8696 
lsq
->
vÆ_ø
 = val_ra;

8697 
lsq
->
vÆ_rb
 = val_rb;

8698 
lsq
->
vÆ_rc
 = val_rc;

8699 
lsq
->
vÆ_ø_ªsu…
 = val_ra_result;

8700 
	`±ø˚_√wu›
 (
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

8701 
	`±ø˚_√w°age
 (
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

8702 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

8704 
lsq
->
whí_ªady
[0] = 
WAIT_TIME
;

8705 
lsq
->
whí_ªady
[1] = 
WAIT_TIME
;

8706 
lsq
->
whí_ªady
[2] = 
WAIT_TIME
;

8707 
lsq
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

8708 
lsq
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

8709 
lsq
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

8710 
lsq
->
idï_«me
[0] = 0;

8711 
lsq
->
idï_«me
[1] = 0;

8712 
lsq
->
idï_«me
[2] = 0;

8715 #if 
	`deföed
(
EDA
Ë& deföed(
RUN_ORACLE
)

8716 i‡(
cuºít
->
ma°îid
 == 1)

8717 
lsq
->
sim_num_ö¢
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->sim_num_insn;

8720 
lsq
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

8721 
lsq
->
outReg
 = 
out1
;

8724 
lsq
->
robE¡ry
 = 
rs
->
ödex
;

8725 
rs
->
lsqE¡ry
 = 
lsq
->
ödex
;

8726 #ifdef 
EDA


8727 
lsq
->
boqIndex
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->boqIndex;

8728 
lsq
->
lockSètus
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->lockStatus;

8729 
lsq
->
pois⁄
[0].
dúty
 =Üsq->pois⁄[0].
d©a
 = 0;

8730 
lsq
->
pois⁄
[1] =Üsq->poison[2] =Üsq->poison[0];

8731 
lsq
->
ch™geS≥cMode
 = 0;

8732 i‡(
cuºít
->
ma°îid
 == 0)

8734 
lsq
->
isWr⁄gP©h
 = 0;

8735 
lsq
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8737 i‡(
cuºít
->
ma°îid
 == 1)

8739 
lsq
->
isWr⁄gP©h
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
•ec_mode
;

8740 
lsq
->
ÆtPC
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->
ªgs
.
ªgs_NPC
;

8743 
	`∑nic
 ("No oracle instruction can go intoÅiming simulation.");

8745 
lsq
->
o_vÆ_ø
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->o_val_ra;

8746 
lsq
->
o_vÆ_rb
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->o_val_rb;

8747 
lsq
->
o_vÆ_rc
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->o_val_rc;

8748 
lsq
->
ö°Ty≥
 = instType;

8750 
lsq
->
isPª„tch
 = 0;

8751 
lsq
->
isL1Miss
 = 0;

8753 
rs
->
ùªg
[0] = 0;

8754 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

8755 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

8757 
rs
->
˛u°î
 = 
lsq
->˛u°î = 
thªadid
;

8758 
cuºít
->
iissueq_thrd
++;

8759 
iissueq
++;

8760 
iissueq_˛
[
rs
->
thªadid
]++;

8762 #ifde‡ 
PWR_CLUSTER


8763 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8766 
lsq
->
cou¡ed_iissueq
 = 1;

8768 
lsq
->
pb™k
 =Üsq->
˛u°î
;

8769 
rs
->
pb™k
 =Ñs->
˛u°î
;

8771 
rs
->
whí_öq
 = 
sim_cy˛e
;

8772 
lsq
->
whí_öq
 = 
rs
->when_inq;

8774 
lsq
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

8775 
lsq
->
ùªg
[1] = 0;

8776 
lsq
->
ùªg
[2] = 0;

8778 
lsq
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

8779 
lsq
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

8784 
	`ruu_lök_idï
 (
rs
, 0, 
NA
);

8785 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8786 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8788 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
DTMP
);

8789 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
NA
);

8791 
rs
->
out1
 = 
DTMP
;

8792 
rs
->
›ªg
 = 0;

8793 
rs
->
ﬁd¥eg
 = 0;

8795 
	`ruu_lök_idï
 (
lsq
, 
STORE_OP_INDEX
, 
ö1
);

8796 
	`ruu_lök_idï
 (
lsq
, 
STORE_ADDR_INDEX
, 
DTMP
);

8797 
	`ruu_lök_idï
 (
lsq
, 2, 
NA
);

8799 
	`ruu_ö°Æl_odï
 (
lsq
, 0, 
out1
);

8800 
	`ruu_ö°Æl_odï
 (
lsq
, 1, 
out2
);

8801 
lsq
->
out1
 = out1;

8803 
n_di•©ched
++;

8805 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

8806 
cuºít
->
RUU_num
++;

8807 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 1Ë% 
LSQ_size
;

8808 
cuºít
->
LSQ_num
++;

8810 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

8812 #ifdef 
EDA


8813 i‡(
cuºít
->
ma°îid
 != 0)

8815 i‡(
ö°Ty≥
 =
TYPE_INST_PREFETCH
)

8816 
lsq
->
isPª„tch
 = 1;

8818 
cuºít
->
m_shLQNum
++;

8823 i‡(
out1
 != 0 && out1 != 63)

8824 
cuºít
->
m_shLQNum
++;

8826 
lsq
->
isPª„tch
 = 1;

8829 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

8831 #ifdef 
EDA


8832 i‡(
cuºít
->
ma°îid
 =1 && 
ö°Ty≥
 =
TYPE_INST_PREFETCH
)

8833 
lsq
->
isPª„tch
 = 1;

8836 
cuºít
->
m_shSQNum
++;

8839 
lsq_ac˚ss
++;

8840 
cuºít
->
lsq_ac˚ss
++;

8841 
lsq_¥eg_ac˚ss
++;

8842 
cuºít
->
lsq_¥eg_ac˚ss
++;

8846 
rob2_ac˚ss
++;

8847 
cuºít
->
rob2_ac˚ss
++;

8849 i‡(
	`OPERANDS_READY
 (
rs
))

8851 
n_ªady
++;

8852 
	`ªadyq_íqueue
 (
rs
);

8854 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
lsq
);

8856 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
	`OPERANDS_READY
 (
lsq
))

8858 
lsq_°‹e_d©a_ac˚ss
++;

8859 
	`ªadyq_íqueue
 (
lsq
);

8862 i‡(
›
 =
STL_C
 || o∞=
LDL_L
)

8871 
rs
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

8872 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

8873 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

8875 
rs
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

8876 
rs
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

8877 
rs
->
out1
 = out1;

8879 
rs
->
˛u°î
 =Ñs->
thªadid
;

8881 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8883 
cuºít
->
fissueq_thrd
++;

8884 
fissueq
++;

8885 
fissueq_˛
[
rs
->
thªadid
]++;

8886 #ifde‡ 
PWR_CLUSTER


8887 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8889 
rs
->
cou¡ed_fissueq
 = 1;

8890 
fqøm_ac˚ss
++;

8891 
cuºít
->
fqøm_ac˚ss
++;

8895 
cuºít
->
iissueq_thrd
++;

8896 
iissueq
++;

8897 
iissueq_˛
[
rs
->
thªadid
]++;

8898 #ifde‡ 
PWR_CLUSTER


8899 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8901 
rs
->
cou¡ed_iissueq
 = 1;

8902 
iqøm_ac˚ss
++;

8903 
cuºít
->
iqøm_ac˚ss
++;

8906 
rs
->
whí_öq
 = 
sim_cy˛e
;

8908 i‡(!
£c⁄d_run
)

8910 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

8911 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8912 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8913 i‡(
out1
)

8915 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
out1
);

8916 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
out2
);

8917 
rs
->
out1
 = out1;

8921 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
DTMP
);

8922 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
NA
);

8923 
rs
->
out1
 = 
DTMP
;

8928 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

8929 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8930 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8932 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
out1
);

8933 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
out2
);

8934 
rs
->
out1
 = out1;

8938 
n_di•©ched
++;

8940 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

8941 
cuºít
->
RUU_num
++;

8942 
rob2_ac˚ss
++;

8943 
cuºít
->
rob2_ac˚ss
++;

8946 i‡(
	`OPERANDS_READY
 (
rs
))

8948 
n_ªady
++;

8949 
	`ªadyq_íqueue
 (
rs
);

8950 
cuºít
->
œ°_›
 = 
RSLINK_NULL
;

8954 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
rs
);

8961 
rs
 = 
NULL
;

8965 
sim_tŸÆ_ö¢
++;

8966 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

8967 
sim_tŸÆ_bønches
++;

8969 i‡(!
cuºít
->
•ec_mode
 && 
£c⁄d_run
)

8973 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

8975 
sim_num_bønches
++;

8977 i‡(!(
rs
->
du∂iˇã
))

8979 
cuºít
->
b¥ed_ac˚ss
++;

8980 
b¥ed_ac˚ss
++;

8983 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

8985 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

8986  
cuºít
->
ªgs
.
ªgs_PC
,

8987  
cuºít
->
ªgs
.
ªgs_NPC
,

8988  
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +

8989  (
md_ö°_t
)),

8990  
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +

8991  (
md_ö°_t
)),

8992  
cuºít
->
¥ed_PC
 =cuºít->
ªgs
.
ªgs_NPC
,

8993  
›
,

8994  &
rs
->
dú_upd©e
,

8995 
rs
->
thªadid
, (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[rs->thªadid]->
ma°îid
 :Ñs->threadid));

8998 i‡(
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
 && !cuºít->
„tch_ªdúe˘ed
)

9000 
cuºít
->
•ec_mode
 = 
TRUE
;

9001 
rs
->
ªcovî_ö°
 = 
TRUE
;

9002 
cuºít
->
ªcovî_PC
 = cuºít->
ªgs
.
ªgs_NPC
;

9003 
	`c›y_to
 (
thªadid
);

9006 #ifdef 
EDA


9011 
	`±ø˚_√w°age
 (
p£q
, 
PST_DISPATCH
, (
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

9012 i‡(
›
 =
MD_NOP_OP
)

9014 
	`±ø˚_ídö°
 (
p£q
);

9017 
i
 = 0; i < 
pc°©_√…
; i++)

9019 
cou¡î_t
 
√wvÆ
;

9020 
dñè
;

9023 
√wvÆ
 = 
	`STATVAL
 (
pc°©_°©s
[
i
]);

9024 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

9025 i‡(
dñè
 != 0)

9027 
	`°©_add_ßm∂es
 (
pc°©_sdi°s
[
i
], 
cuºít
->
ªgs
.
ªgs_PC
, 
dñè
);

9028 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

9032 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

9033 
cuºít
->
„tch_num
--;

9034 
ãmp_„tch_num
--;

9037 i‡(!
made_check
)

9039 i‡(
	`dlôe_check_bªak
 (0, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

9040 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9045 
°ÆlCau£
[
thªadid
] = 
SèŒFëchEm±y
;

9046 i‡(!
n_di•©ched
)

9048 
m_tŸÆSèŒ
[
thªadid
]++;

9049 if(
°ÆlCau£
[
thªadid
])

9051 
°ÆlCau£
[
thªadid
])

9053 
SèŒRegFuŒ
 :

9054 
m_ªgFuŒ
[
thªadid
]++;

9056 
SèŒIssueFuŒ
 :

9057 
m_issueFuŒ
[
thªadid
]++;

9059 
SèŒFëchEm±y
 :

9060 if(
thec⁄ãxts
[
thªadid
]->
ruu_„tch_issue_dñay
)

9061 
m_û1Miss
[
thªadid
]++;

9063 
m_„tchEm±y
[
thªadid
]++;

9065 
SèŒSTLC
 :

9066 
m_STLC
[
thªadid
]++;

9068 
SèŒTøp
 :

9069 
m_å≠
[
thªadid
]++;

9071  : 
	`∑nic
("No stall cause found");

9074 i‡(
cuºít
->
m_shLQNum
 =
m_shLQSize
)

9076 
°ÆlCau£
[
thªadid
] = 
SèŒLQFuŒ
;

9077 
m_sqLQFuŒ
[
thªadid
]++;

9079 i‡(
m_shSQSize
 =(
cuºít
->
m_shSQNum


9080 #ifdef 
SMD_USE_WRITE_BUF


9081 +
m_L1WBufC¡
[
thªadid
]

9085 
°ÆlCau£
[
thªadid
] = 
SèŒSQFuŒ
;

9086 
m_sqSQFuŒ
[
thªadid
]++;

9088 if(
cuºít
->
RUU_num
 =
RUU_size
)

9090 
°ÆlCau£
[
thªadid
] = 
SèŒRUUFuŒ
;

9091 
m_RUUFuŒ
[
thªadid
]++;

9094 if((
°ÆlCau£
[
thªadid
] =
SèŒRUUFuŒ
 || sèŒCau£[thªadid] =
SèŒLQFuŒ
 || sèŒCau£[thªadid] =
SèŒSQFuŒ
 || sèŒCau£[thªadid] =
SèŒRegFuŒ
 || sèŒCau£[thªadid] =
SèŒIssueFuŒ
 || sèŒCau£[thªadid] =
SèŒSTLC
 || sèŒCau£[thªadid] =
SèŒTøp
))

9096 if(
cuºít
->
LSQ_num
)

9097 if(
	`MD_OP_FLAGS
(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
›
Ë& 
F_LOAD
)

9098 
m_LﬂdMiss
[
thªadid
]++;

9100 
m_St‹eMiss
[
thªadid
]++;

9101 if(
	`MD_OP_FLAGS
(
cuºít
->
RUU
[cuºít->
RUU_hód
].
›
Ë& 
F_FENCE
)

9102 
m_St‹eMiss
[
thªadid
]++;

9105  
n_di•©ched
;

9106 
	}
}

9114 
	$„tch_öô
 (
thªadid
)

9117 
i
 = 0;

9118 
c⁄ãxt
 *
cuºít
;

9120 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9122 
i
 = 0; i < 
ruu_ifq_size
; i++)

9124 
cuºít
->
„tch_d©a
[
i
] = (
„tch_ªc
 *Ë
	`ˇŒoc
 (1,  (fetch_rec));

9125 i‡(!
cuºít
->
„tch_d©a
[
i
])

9126 
	`Áèl
 ("out of virtual memory");

9127 
cuºít
->
„tch_d©a
[
i
]->
ödex
 = i;

9128 
cuºít
->
„tch_d©a
[
i
]->
thªadid
 =Åhreadid;

9130 
cuºít
->
„tch_num
 = 0;

9131 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

9132 
IFQ_cou¡
 = 0;

9133 
IFQ_fcou¡
 = 0;

9135 
	}
}

9137 
	gœ°_ö°_mis£d
 = 
FALSE
;

9138 
	gœ°_ö°_tmis£d
 = 
FALSE
;

9144 
	$ruu_„tch
 ()

9146 
i
 = 0, 
j
 = 0, 
k
 = 0, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

9147 
md_ö°_t
 
ö°
;

9148 
°ack_ªcovî_idx
;

9149 
bønch_˙t
, 
øy_mu…
;

9150 
md_addr_t
 
„tch_£t
 = 0, 
ö°_£t
;

9151 
ödex
;

9152 
md_›code
 
›
;

9154 
thªadid
, 
tID
 = 0;

9155 
c⁄ãxt
 *
cuºít
 = 0;

9156 
thªads„tched
 = 0;

9157 
ãmp
;

9159 i‡(
dißbÀ_øy
)

9160 
øy_mu…
 = 1;

9162 
øy_mu…
 = 2;

9165 
tID
 < 
numc⁄ãxts
)

9167 #ifdef 
EDA


9168 i‡(
thec⁄ãxts
[
tID
]->
ma°îid
 == 2)

9170 
tID
++;

9174 
cuºít
 = 
thec⁄ãxts
[
tID
];

9175 
tID
++;

9177 
thªadid
 = 
cuºít
->
id
;

9179 i‡(
cuºít
->
waô_f‹_„tch
 == 2)

9180 
cuºít
->
waô_f‹_„tch
 = 1;

9181 
„tch_d⁄e
[
thªadid
] = 0;

9183 
j
 = 0, 
d⁄e
 = 
FALSE
, 
bønch_˙t
 = 0;

9184 (
cuºít
->
„tch_num
 < 
ruu_ifq_size
-1)

9185 && !
d⁄e
 && !
cuºít
->
ruu_„tch_issue_dñay
 && cuºít->
ru¬ög
 && 
j
 < (
ruu_decode_width
 * 
„tch_•ìd
Ë&& cuºít->
a˘ive_this_cy˛e
 ; 
i
++, j++)

9187 i‡(!
j
)

9189 
iˇche_ac˚ss
++;

9190 
cuºít
->
iˇche_ac˚ss
++;

9194 
cuºít
->
„tch_ªgs_PC
 = cuºít->
„tch_¥ed_PC
;

9197 i‡(
cuºít
->
ld_ãxt_ba£
 <cuºít->
„tch_ªgs_PC
 && cuºít->„tch_ªgs_PC < (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& !(cuºít->„tch_ªgs_PC & ( (
md_ö°_t
) - 1)))

9200 #ifdef 
EDA


9201 if(
cuºít
->
ma°îid
 == 1)

9203 
	`MD_FETCH_INST
 (
ö°
, 
thec⁄ãxts
[
cuºít
->
hñpThdId
]->
mem
, cuºít->
„tch_ªgs_PC
);

9208 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
„tch_ªgs_PC
);

9210 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9212 
œt
 = 
ˇche_û1_œt
;

9215 i‡(!
j
)

9216 
„tch_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9217 
ö°_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9218 i‡(
„tch_£t
 !
ö°_£t
)

9221 #ifde‡ 
FIX2_BUG


9222 i‡(!
cuºít
->
waô_f‹_„tch
)

9225 i‡(
ˇche_û1
[
thªadid
])

9229 
rsCacheAc˚ss
 = 
NULL
;

9230 #ifde‡
DIRECTORY


9231 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9232 
	`¥ötf
("debug 1\n");

9233 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9234 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9235 
NULL
, NULL, NULL,
thªadid
);

9237 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
 (
cuºít
->
„tch_ªgs_PC
), 
NULL
, 
	`ISCOMPRESS
 ( (
md_ö°_t
)), 
sim_cy˛e
, NULL, NULL,Åhreadid);

9239 i‡(
œt
 > (
ˇche_û1_œt
))

9240 
œ°_ö°_mis£d
 = 
TRUE
;

9243 i‡(
ôlb
[
thªadid
])

9245 #ifde‡
DIRECTORY


9246 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9247 
	`¥ötf
("debug 2\n");

9248 
éb_œt
 = 
	`ˇche_ac˚ss
(
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9249 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9250 
NULL
, NULL, NULL, 
thªadid
);

9252 
éb_œt
 = 
	`ˇche_ac˚ss
 (
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
 (
cuºít
->
„tch_ªgs_PC
), 
NULL
, 
	`ISCOMPRESS
 ( (
md_ö°_t
)), 
sim_cy˛e
, NULL, NULL,Åhreadid);

9255 i‡(
éb_œt
 > 1)

9256 
œ°_ö°_tmis£d
 = 
TRUE
;

9258 
œt
 = 
	`max2
 (
éb_œt
,Üat);

9261 i‡(
œt
 !(
ˇche_û1_œt
))

9263 
cuºít
->
ruu_„tch_issue_dñay
 +(
œt
 - 1);

9264 #ifde‡ 
FIX2_BUG


9265 
cuºít
->
waô_f‹_„tch
 = 2;

9270 #ifde‡ 
FIX2_BUG


9276 
ö°
 = 
MD_NOP_INST
;

9279 i‡(
cuºít
->
¥ed
)

9281 
bønchIn°
 *
bønchInfo
 = 
NULL
;

9282 
md_›code
 
›
;

9285 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9290 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9292 
md_addr_t
 
bèrgë
;

9294 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)) == (F_CTRL | F_UNCOND | F_INDIRJMP))

9295 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * (
ö°
 & 0x00003fff);

9297 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * 
	`SEXT21
 (
ö°
 & 0x001fffff);

9299 
cuºít
->
„tch_¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
,

9300  
cuºít
->
„tch_ªgs_PC
,

9302  
›
,

9303  
	`MD_IS_CALL
 (
›
),

9304  
	`MD_IS_RETURN
 (
›
),

9305  &(
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
dú_upd©e
),

9306  &
°ack_ªcovî_idx
,

9307  
cuºít
->
id
,

9308  (
b¥ed_btb_u£_ma°îid
 ? 
cuºít
->
ma°îid
 : cuºít->
id
));

9311 
cuºít
->
„tch_¥ed_PC
 = 0;

9314 i‡(!
cuºít
->
„tch_¥ed_PC
)

9316 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9318 i‡(
cuºít
->
„tch_¥ed_PC
 !cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
))

9321 
bønch_˙t
++;

9322 i‡(
bønch_˙t
 >
„tch_•ìd
)

9323 
d⁄e
 = 
TRUE
;

9328 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9331 
cuºít
->
„tch_tŸÆ_ö¢
++;

9332 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
thªadid
 =Åhreadid;

9333 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
IR
 = 
ö°
;

9334 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
ªgs_PC
 = cuºít->
„tch_ªgs_PC
;

9335 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
¥ed_PC
 = cuºít->
„tch_¥ed_PC
;

9336 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
°ack_ªcovî_idx
 = stack_recover_idx;

9337 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
 =Ötrace_seq++;

9338 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
„tch_time
 = (Ë
sim_cy˛e
;

9339 #ifdef 
EDA


9340 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
boqIndex
 = current->boqIndex;

9341 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
lockSètus
 = current->lockStatus;

9344 
	`±ø˚_√wö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
ö°
, cuºít->„tch_d©a[cuºít->„tch_èû]->
ªgs_PC
, 0);

9345 
	`±ø˚_√w°age
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
PST_IFETCH
, ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0Ë| (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

9347 
cuºít
->
„tch_èû
 = (cuºít->„tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

9348 
cuºít
->
„tch_num
++;

9349 
„tch_d⁄e
[
thªadid
]++;

9353 #ifde‡ 
FIX2_BUG


9355 i‡(
cuºít
->
waô_f‹_„tch
 == 1)

9357 i‡(!
j
 && 
cuºít
->
ruu_„tch_issue_dñay
)

9358 
cuºít
->
waô_f‹_„tch
 = 2;

9360 
cuºít
->
waô_f‹_„tch
 = 0;

9364 
	}
}

9370 
	$simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

9371 *
cmd
,

9372 
ªgs_t
 *
ªgs
,

9373 
mem_t
 *
mem
)

9376 
thªadid
 = 
mem
->threadid;

9377 
c⁄ãxt
 *
cuºít
;

9379 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9381 i‡(!
cmd
 || !
	`°rcmp
 (cmd, "help"))

9382 
	`Ârötf
 (
°ªam
,

9394 i‡(!
	`°rcmp
 (
cmd
, "stats"))

9397 
	`sim_¥öt_°©s
 (
°ªam
);

9399 i‡(!
	`°rcmp
 (
cmd
, "res"))

9402 
	`ªs_dump
 (
fu_poﬁ
, 
°ªam
);

9404 i‡(!
	`°rcmp
 (
cmd
, "ruu"))

9407 
	`ruu_dump
 (
°ªam
, 
thªadid
);

9414 i‡(!
	`°rcmp
 (
cmd
, "eventq"))

9417 
	`evítq_dump
 (
°ªam
, 
thªadid
);

9419 i‡(!
	`°rcmp
 (
cmd
, "readyq"))

9422 
	`ªadyq_dump
 (
°ªam
, 
thªadid
);

9424 i‡(!
	`°rcmp
 (
cmd
, "cv"))

9427 
	`cv_dump
 (
°ªam
, 
thªadid
);

9429 i‡(!
	`°rcmp
 (
cmd
, "rspec"))

9432 
	`r•ec_dump
 (
°ªam
, 
thªadid
);

9434 i‡(!
	`°rcmp
 (
cmd
, "mspec"))

9437 
	`m•ec_dump
 (
°ªam
, 
thªadid
);

9448  
NULL
;

9449 
	}
}

9451 
	#TAKE_STATS_PHASE
 1

	)

9452 
	#DRAIN_PIPELINE_PHASE
 2

	)

9453 
	#RECONFIGURE_PHASE
 3

	)

9454 
	#NORMAL_PHASE
 4

	)

9455 
	#PRIVTOSHARED
 5

	)

9456 
	#SHAREDTOPRIV
 6

	)

9457 
	#EXTRA_PHASE
 7

	)

9458 
	gch™geC⁄fig
 = 0;

9459 
	gcuºítPha£
 = 
NORMAL_PHASE
;

9464 
ªgíî©e_„tch_queue
 ();

9465 
c›y_„tch_queue
 ();

9467 
ªgíî©e_f_queue
 ();

9468 
c›y_f_queue
 ();

9469 
bønch_addªss_c›y
 (
ma°îid
, 
chunkExecuãd
);

9474 
time_t
 
	g¥öt_time
, 
	gnow_time
;

9475 
ruu_ªÀa£_wrôebuf„r
 ();

9476 
ruu_wrôe_‰om_Wrôebuf„r
 ();

9477 #ifdef 
COLLECT_STAT_STARTUP


9478 
f°fwd_föeAdju°
 ();

9479 
f°fwd_cﬁÀ˘Sèts
();

9483 
	$sim_maö
 ()

9485 
unPrötLimô
 = 1;

9486 
i
, 
j
, 
k
, 
l
;

9487 
ãmp˛
, 
maxguy
, 
maxvÆ
, 
ªf_mis
, 
ªf_imis
, 
ªf_br
, 
ªf_ªfs
, 
ªf_cyc
, 
mm
, 
¬
;

9488 
gŸ_ªf_poöt
 = 0;

9489 
möguy
, 
mövÆ
;

9490 
cyc_cou¡
 = 0;

9491 
num_picks
[
NUMPHASES
 + 1];

9492 
sim_ñ≠£d_£c
;

9493 
di•©ched
 = 0;

9495 
thªadid
 = 0, 
thªad_°›
 = 0;

9496 
c⁄ãxt
 *
cuºít
;

9497 
kûœŒ
 = 0;

9498 
„tch_blocked
 = 1;

9499 
˙t
;

9501 
FILE
 *
Â
, *
Â1
;

9502 
brNum
, 
ldNum
;

9504 #ifde‡
DO_COMPLETE_FASTFWD


9505 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

9506 
x
, 
lo›ôî
;

9510 
	`sig«l
 (
SIGFPE
, 
SIG_IGN
);

9513 
«ck_cou¡î
 = 0;

9514 
Êù_cou¡î
 = 0;

9515 
L1_Êù_cou¡î
 = 0;

9516 
e_to_m
 = 0;

9517 
f
;

9518 
f
=0;f<8;f++)

9519 
mem_p‹t_œt
[
f
] = 0;

9520 
tŸÆevítcou¡num
 = 0;

9521 
tŸÆ_L1_¥e„tch
 = 0;

9522 
tŸÆªqcou¡num
 = 0;

9523 
tŸÆmisscou¡num
 = 0;

9524 
övﬁve_4_h›s
 = 0;

9525 
övﬁve_4_h›s_upgøde
 = 0;

9526 
övﬁve_4_h›s_miss
 = 0;

9527 
övﬁve_2_h›s
 = 0;

9528 
övﬁve_2_h›_touch
 = 0;

9529 
övﬁve_2_h›_wb
 = 0;

9530 
övﬁve_4_h›s_wm
 = 0;

9531 
tŸÆS∂ôWM
 = 0;

9532 
tŸÆS∂ôNo
 = 0;

9533 
övﬁve_2_h›s_wm
 = 0;

9534 
övﬁve_2_h›s_upgøde
 = 0;

9535 
övﬁve_2_h›s_miss
 = 0;

9536 
d©a_sh¨ed_ªad
 = 0;

9537 
d©a_¥iv©e_ªad
 = 0;

9538 
d©a_sh¨ed_wrôe
 = 0;

9539 
d©a_¥iv©e_wrôe
 = 0;

9540 
tŸÆ_Æl_˛o£
 = 0;

9541 
tŸÆ_Æl_Æmo°˛o£
 = 0;

9542 
tŸÆ_nŸ_Æl_˛o£
 = 0;

9543 
tŸÆ_p_c_evíts
 = 0;

9544 
tŸÆ_c⁄sumîs
 = 0;

9545 
tŸÆ_d©a_c⁄sumîs
 = 0;

9546 
tŸÆ_d©a_Ár
 = 0;

9547 
tŸÆ_d©a_©_c‹√r
 = 0;

9548 
tŸÆ_d©a_˛o£
 = 0;

9549 
tŸÆ_∑ckës_ö_√ighb‹
 = 0;

9550 
tŸÆ_∑ckës_©_c‹√rs
 = 0;

9551 
avîage_outside_≥r˚¡
 = 0;

9552 
avîage_outside_abs_≥r˚¡
 = 0;

9553 
avîage_öside_≥r˚¡
 = 0;

9554 
avîage_c‹√r_≥r˚¡
 = 0;

9555 #ifde‡
EUP_NETWORK


9556 
EUP_íåy_fuŒ
 = 0;

9557 
i
 = 0; i< 
MAXTHREADS
; i++)

9558 
	`EUP_íåy_öô
(
i
);

9560 
i
 = 0; i< 
MAXTHREADS
; i++)

9561 
sh¨î_num
[
i
] = 0;

9563 #i‡
PROCESS_MODEL


9564 
i
 = 0; i < 128; i++)

9566 
sh¨edAddªssLi°
[
i
] = 
NULL
;

9568 
La°Sh¨edAddªss
 = 0;

9569 
La°Sh¨edSize
 = 0;

9572 
	`öôClu°îInfo
 ();

9574 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

9575 
	`busInô
 ();

9578 
‚m
[256];

9579 
nm
[256];

9581 
	`°r˝y
 (
nm
, 
thec⁄ãxts
[0]->
‚ame
);

9583 
l
 = 0;Ü < 
MAXTHREADS
;Ü++)

9585 
numThªads
[
l
] = 
mè_maxthªads
;

9590 
n_limô_thrd
[0] =Ç_limit_thrd[1] =Ç_limit_thrd[2] =Ç_limit_thrd[3] = 1;

9594 
	`Ârötf
 (
°dîr
, "Issueq sizê - i¡ %d f∞%d\n", 
IIQ_size
, 
FIQ_size
);

9595 #ifde‡
REG_RENAME_CONFIGUARE


9596 
	`Ârötf
 (
°dîr
, "ª«mêPªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

9598 
	`Ârötf
 (
°dîr
, "Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

9600 
	`Ârötf
 (
°dîr
, "CLUSTERS %d\n", 
CLUSTERS
);

9601 
	`Ârötf
 (
°dîr
, "ROWCOUNT %d\n", 
ROWCOUNT
);

9602 
	`Ârötf
 (
°dîr
, "CENTRAL_CACHE %d\n", 
CENTRAL_CACHE
);

9603 
	`Ârötf
 (
°dîr
, "CENTRALCACHELAT %d\n", 
CENTRALCACHELAT
);

9604 
	`Ârötf
 (
°dîr
, "CACHELOC %d\n", 
CACHELOC
);

9605 
	`Ârötf
 (
°dîr
, "PRED_BR_CHANGES %d\n", 
PRED_BR_CHANGES
);

9606 
	`Ârötf
 (
°dîr
, "PRED_JR_CHANGES %d\n", 
PRED_JR_CHANGES
);

9607 
	`Ârötf
 (
°dîr
, "DYNAMIC_CHANGE %d\n", 
DYNAMIC_CHANGE
);

9608 
	`Ârötf
 (
°dîr
, "METRIC_CHANGE %d\n", 
METRIC_CHANGE
);

9609 
	`Ârötf
 (
°dîr
, "LINEAR_PHASE %d\n", 
LINEAR_PHASE
);

9610 
	`Ârötf
 (
°dîr
, "SMALLEST_CONFIG %d\n", 
SMALLEST_CONFIG
);

9611 
	`Ârötf
 (
°dîr
, "GRID %d\n", 
GRID
);

9612 
	`Ârötf
 (
°dîr
, "CACHEPORTS %d\n", 
CACHEPORTS
);

9613 
	`Ârötf
 (
°dîr
, "RES_CACHEPORTS %d\n", 
RES_CACHEPORTS
);

9614 
	`Ârötf
 (
°dîr
, "READY_COMM %d\n", 
READY_COMM
);

9615 
	`Ârötf
 (
°dîr
, "HOLY_REGS %d\n", 
HOLY_REGS
);

9616 
	`Ârötf
 (
°dîr
, "NUM_H_REGS %d\n", 
NUM_H_REGS
);

9617 
	`Ârötf
 (
°dîr
, "COPY_THRESH %d\n", 
COPY_THRESH
);

9618 
	`Ârötf
 (
°dîr
, "FIRST_FIT %d\n", 
FIRST_FIT
);

9619 
	`Ârötf
 (
°dîr
, "FIRST_FIT_ENFORCE %d\n", 
FIRST_FIT_ENFORCE
);

9620 
	`Ârötf
 (
°dîr
, "FIRST_VAL %d\n", 
FIRST_VAL
);

9621 
	`Ârötf
 (
°dîr
, "STEER_ENFORCE %d\n", 
STEER_ENFORCE
);

9622 
	`Ârötf
 (
°dîr
, "MOD_N %d\n", 
MOD_N
);

9623 
	`Ârötf
 (
°dîr
, "MOD_N_N %d\n", 
MOD_N_N
);

9624 
	`Ârötf
 (
°dîr
, "FIRST_MOD %d\n", 
FIRST_MOD
);

9625 
	`Ârötf
 (
°dîr
, "GROUPSIZE %d\n", 
GROUPSIZE
);

9626 
	`Ârötf
 (
°dîr
, "MOD_N_T %d\n", 
MOD_N_T
);

9627 
	`Ârötf
 (
°dîr
, "ANYWILLDO %d\n", 
ANYWILLDO
);

9628 
	`Ârötf
 (
°dîr
, "NEIGHBOR_SEEK %d\n", 
NEIGHBOR_SEEK
);

9629 
	`Ârötf
 (
°dîr
, "PICKMIDDLE %d\n", 
PICKMIDDLE
);

9630 
	`Ârötf
 (
°dîr
, "MIDTHRESH %d\n", 
MIDTHRESH
);

9631 
	`Ârötf
 (
°dîr
, "HOPTIME %d\n", 
HOPTIME
);

9632 
	`Ârötf
 (
°dîr
, "COMM_LATENCY %d\n", 
COMM_LATENCY
);

9633 #i‚de‡
CONFIG_BASED_ICS


9634 
	`Ârötf
 (
°dîr
, "FE_LAT %d\n", 
FE_LAT
);

9636 
	`Ârötf
 (
°dîr
, "CACHE_REFILL_LAT %d\n", 
CACHE_REFILL_LAT
);

9637 
	`Ârötf
 (
°dîr
, "MPRED_COMM_LAT %d\n", 
MPRED_COMM_LAT
);

9638 
	`Ârötf
 (
°dîr
, "LD_PROXIMITY %d\n", 
LD_PROXIMITY
);

9639 
	`Ârötf
 (
°dîr
, "LDPROX_FACTOR %d\n", 
LDPROX_FACTOR
);

9640 
	`Ârötf
 (
°dîr
, "STEER_2NONREADY %d\n", 
STEER_2NONREADY
);

9641 
	`Ârötf
 (
°dîr
, "STEER_CRITICAL %d\n", 
STEER_CRITICAL
);

9642 
	`Ârötf
 (
°dîr
, "ILOAD_MIN %d\n", 
ILOAD_MIN
);

9643 
	`Ârötf
 (
°dîr
, "IFACTOR %d\n", 
IFACTOR
);

9644 
	`Ârötf
 (
°dîr
, "RLOAD_MIN %d\n", 
RLOAD_MIN
);

9645 
	`Ârötf
 (
°dîr
, "RFACTOR %d\n", 
RFACTOR
);

9646 
	`Ârötf
 (
°dîr
, "DEP_FACTOR %d\n", 
DEP_FACTOR
);

9647 
	`Ârötf
 (
°dîr
, "LD_FACTOR %d\n", 
LD_FACTOR
);

9648 
	`Ârötf
 (
°dîr
, "IQBUF %d\n", 
IQBUF
);

9649 
	`Ârötf
 (
°dîr
, "REGFREE %d\n", 
REGFREE
);

9650 
	`Ârötf
 (
°dîr
, "FREE_CURR_REGS %d\n", 
FREE_CURR_REGS
);

9651 
	`Ârötf
 (
°dîr
, "FREE_INTERVAL %d\n", 
FREE_INTERVAL
);

9652 
	`Ârötf
 (
°dîr
, "DISPDELAY %d\n", 
DISPDELAY
);

9653 
	`Ârötf
 (
°dîr
, "RING_BW %d\n", 
RING_BW
);

9654 
	`Ârötf
 (
°dîr
, "TIMEWINDOW %d\n", 
TIMEWINDOW
);

9655 
	`Ârötf
 (
°dîr
, "ST_ADDR_COMM %d\n", 
ST_ADDR_COMM
);

9656 
	`Ârötf
 (
°dîr
, "ST_RING_BW %d\n", 
ST_RING_BW
);

9657 
	`Ârötf
 (
°dîr
, "RING_IC %d\n", 
RING_IC
);

9658 
	`Ârötf
 (
°dîr
, "IGNORE_COMM_LATENCY %d\n", 
IGNORE_COMM_LATENCY
);

9659 
	`Ârötf
 (
°dîr
, "TOL_COUNT %d\n", 
TOL_COUNT
);

9660 
	`Ârötf
 (
°dîr
, "STOREDELAY %d\n", 
STOREDELAY
);

9661 
	`Ârötf
 (
°dîr
, "BANKPRED %d\n", 
BANKPRED
);

9662 
	`Ârötf
 (
°dîr
, "BANKMISPREDLAT %d\n", 
BANKMISPREDLAT
);

9663 
	`Ârötf
 (
°dîr
, "BANKP_SPEC %d\n", 
BANKP_SPEC
);

9664 
	`Ârötf
 (
°dîr
, "LEV1SIZE %d\n", 
LEV1SIZE
);

9665 
	`Ârötf
 (
°dîr
, "LEV2SIZE %d\n", 
LEV2SIZE
);

9666 
	`Ârötf
 (
°dîr
, "XORSIZE %d\n", 
XORSIZE
);

9667 
	`Ârötf
 (
°dîr
, "WORD_INTERLEAVED %d\n", 
WORD_INTERLEAVED
);

9668 
	`Ârötf
 (
°dîr
, "WORDSIZE %d\n", 
WORDSIZE
);

9669 
	`Ârötf
 (
°dîr
, "SORT %d\n", 
SORT
);

9670 
	`Ârötf
 (
°dîr
, "NUMPHASES %d\n", 
NUMPHASES
);

9671 
	`Ârötf
 (
°dîr
, "MIN_INSN_INT %d\n", 
MIN_INSN_INT
);

9672 
	`Ârötf
 (
°dîr
, "STOP_EXPL_THRESH %d\n", 
STOP_EXPL_THRESH
);

9673 
	`Ârötf
 (
°dîr
, "ILPTAGCHECK %d\n", 
ILPTAGCHECK
);

9674 
	`Ârötf
 (
°dîr
, "DISTILP %d\n", 
DISTILP
);

9675 
	`Ârötf
 (
°dîr
, "DISTILPTHRESH %d\n", 
DISTILPTHRESH
);

9676 
	`Ârötf
 (
°dîr
, "SAMPLETHRESH %d\n", 
SAMPLETHRESH
);

9677 
	`Ârötf
 (
°dîr
, "BR_INT %d\n", 
BR_INT
);

9678 
	`Ârötf
 (
°dîr
, "ITABLESIZE %d\n", 
ITABLESIZE
);

9679 
	`Ârötf
 (
°dîr
, "OWINDOWSIZE %d\n", 
OWINDOWSIZE
);

9680 
	`Ârötf
 (
°dîr
, "ILPCLEARINT %d\n", 
ILPCLEARINT
);

9681 
	`Ârötf
 (
°dîr
, "STATPRINT %d\n", 
STATPRINT
);

9682 
	`Ârötf
 (
°dîr
, "CYCNOISE %d\n", 
CYCNOISE
);

9683 
	`Ârötf
 (
°dîr
, "NUMCYCTHRESH %d\n", 
NUMCYCTHRESH
);

9684 
	`Ârötf
 (
°dîr
, "STATINT %d\n", 
STATINT
);

9685 
	`Ârötf
 (
°dîr
, "FREE_REG_THRESH %d\n", 
FREE_REG_THRESH
);

9686 
	`Ârötf
 (
°dîr
, "TABLE2SIZE %d\n", 
TABLE2SIZE
);

9687 
	`Ârötf
 (
°dîr
, "TABLESIZE %d\n", 
TABLESIZE
);

9690 #ifde‡
DO_COMPLETE_FASTFWD


9691 
	`SèπSkñë⁄Ród
 (0);

9692 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9694 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9695 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9696 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9704 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9706 
lo›ôî
 = 0;Üoopiter < 20;Üoopiter++)

9708 
cou¡î_t
 
icou¡
;

9709 
md_ö°_t
 
ö°
;

9710 
md_›code
 
›
;

9711 
md_addr_t
 
èrgë_PC
;

9712 
md_addr_t
 
addr
;

9713 
is_wrôe
;

9714 
byã_t
 
ãmp_byã
;

9715 
hÆf_t
 
ãmp_hÆf
;

9716 
w‹d_t
 
ãmp_w‹d
;

9718 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

9719 
qw‹d_t
 
ãmp_qw‹d
 = 0;

9722 
md_Áu…_ty≥
 
Áu…
;

9724 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9726 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

9727 #ifde‡
TARGET_ALPHA


9728 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

9733 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

9736 
addr
 = 0;

9737 
is_wrôe
 = 
FALSE
;

9740 
Áu…
 = 
md_Áu…_n⁄e
;

9741 
sim_num_ö¢
++;

9743 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9745 
›
)

9747 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

9748 
OP
: \

9750 
out1
 = 
O1
; 
out2
 = 
O2
; \

9751 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

9753 
	`SYMCAT
(
OP
,
_IMPL
); \

9755 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

9756 
OP
: \

9758 
›
 = 
MD_NOP_OP
; \

9760 
out1
 = 
NA
; 
out2
 = NA; \

9761 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

9764 
	#CONNECT
(
OP
Ë

	)

9770 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

9772 i‡(!
cuºít
->
•ec_mode
) \

9773 
Áu…
 = (
FAULT
); \

9777 
	~"machöe.def
"

9780 
›
 = 
MD_NOP_OP
;

9782 
out1
 = 
NA
;

9783 
out2
 = 
NA
;

9784 
ö1
 = 
NA
;

9785 
ö2
 = 
NA
;

9786 
ö3
 = 
NA
;

9791 i‡(
Áu…
 !
md_Áu…_n⁄e
)

9792 
	`Áèl
 ("n⁄-•ecuœtivêÁu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

9794 #ifde‡
CACHE_PROFILE


9795 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_LOAD
)

9797 
œt
;

9798 #ifde‡
DIRECTORY


9799 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 
rs
, 0);

9801 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9803 i‡(
déb
)

9804 #ifde‡
DIRECTORY


9805 
œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, NULL, 0);

9807 
œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9809 
lﬂd_œt
 = 
	`max2
 (lﬂd_œt, 
œt
);

9810 i‡(
lﬂd_œt
 > 50)

9811 
	`PushMissPªdLﬂd
 (
cuºít
->
ªgs
.
ªgs_PC
, (Ë
lﬂd_œt
);

9813 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

9815 #ifde‡
DIRECTORY


9816 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 
rs
, 0);

9818 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9820 i‡(
déb
)

9821 #ifde‡
DIRECTORY


9822 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, NULL, 0);

9824 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9828 #ifde‡ 
BRANCH_PROFILE


9829 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9831 
b¥ed_upd©e_t
 
dú_upd©e
;

9832 
°ack_ªcovî_idx
;

9834 
cuºít
->
¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
, cuºít->
ªgs
.
ªgs_PC
, 1, 
›
, 
	`MD_IS_CALL
 (›), 
	`MD_IS_RETURN
 (›), &
dú_upd©e
, &
°ack_ªcovî_idx
, cuºít->
id
, (
b¥ed_btb_u£_ma°îid
 ? cuºít->
ma°îid
 : current->id));

9836 i‡(!
cuºít
->
¥ed_PC
)

9837 
cuºít
->
¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
);

9839 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

9840 
cuºít
->
ªgs
.
ªgs_PC
,

9841 
cuºít
->
ªgs
.
ªgs_NPC
,

9842 
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)),

9843 
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)), cuºít->¥ed_PC =cuºít->ªgs.
ªgs_NPC
, 
›
, &
dú_upd©e
, cuºít->
id
, (
b¥ed_btb_u£_ma°îid
 ? cuºít->
ma°îid
 : current->id));

9845 i‡(!(
›
 =
RETN
 || o∞=
JMP
 || o∞=
JSR
 || o∞=
BSR
 || o∞=
BR
))

9847 i‡(
cuºít
->
ªgs
.
ªgs_NPC
 =cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
))

9848 
	`ö£π_br_dú
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, (cuºít->
¥ed_PC
 !cuºít->ªgs.
ªgs_NPC
));

9850 
	`ö£π_br_dú
 (
cuºít
->
ªgs
.
ªgs_PC
, 1, (cuºít->
¥ed_PC
 !cuºít->ªgs.
ªgs_NPC
));

9854 #ifde‡ 
STORE_PROFILE


9855 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

9857 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

9859 
	`pushSt‹e
 (
cuºít
->
ªgs
.
ªgs_PC
, 
addr
, cuºít->
sim_num_ö¢
, 
memWidth
);

9862 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

9864 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

9866 i‡(
out1
 > 0 && out1 < 63)

9867 
	`vîifyLﬂd
 (
cuºít
->
ªgs
.
ªgs_PC
, 
addr
, cuºít->
sim_num_ö¢
, 
memWidth
);

9870 #ifde‡ 
INDIRECTJUMP_PROFILE


9871 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)Ë=(F_CTRL | F_UNCOND | F_INDIRJMPË&& (› !
RETN
)))

9872 
	`pushJump
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
);

9874 #ifde‡ 
FREQ_PROFILE


9875 
	`ö°ExecuãdFªq
 (
cuºít
->
ªgs
.
ªgs_PC
);

9878 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

9879 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

9881 i‡((
sim_num_ö¢
 % 500000000) == 0)

9883 
	`¥ötf
 ("[INFO]: sim_num_ö¢=%Œd\n", 
sim_num_ö¢
);

9884 
	`Ârötf
 (
°dîr
, "[INFO]: sim_num_ö¢=%Œd\n", 
sim_num_ö¢
);

9885 
	`fÊush
 (
°dîr
);

9886 
	`fÊush
 (
°dout
);

9893 #ifdef 
COLLECT_STAT_STARTUP


9894 #ifdef 
EDA


9895 i‡(
numc⁄ãxts
 != 3)

9896 
	`∑nic
 ("ForÉxecution in EDA modeÅhere should beÉxactly 3 initialÅhreads,Éach for correctness, optimisticánd oracle core.");

9900 #ifdef 
EDA


9901 
thªadid
 = 0;Åhreadid < 3;Åhreadid++)

9904 
thrdPîJobC¡
 = 1;

9905 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9906 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9907 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9910 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

9911 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9915 i‡(!
cuºít
->
Á°fwd_d⁄e
)

9917 
cou¡î_t
 
icou¡
;

9918 
md_ö°_t
 
ö°
;

9919 
md_›code
 
›
;

9920 
md_addr_t
 
èrgë_PC
;

9921 
md_addr_t
 
addr
;

9922 
is_wrôe
;

9923 
byã_t
 
ãmp_byã
;

9924 
hÆf_t
 
ãmp_hÆf
;

9925 
w‹d_t
 
ãmp_w‹d
;

9927 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

9928 
qw‹d_t
 
ãmp_qw‹d
 = 0;

9931 
md_Áu…_ty≥
 
Áu…
;

9933 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

9935 !
cuºít
->
Á°fwd_d⁄e
)

9938 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

9939 #ifde‡
TARGET_ALPHA


9940 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

9944 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

9945 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

9948 
addr
 = 0;

9949 
is_wrôe
 = 
FALSE
;

9952 
Áu…
 = 
md_Áu…_n⁄e
;

9955 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9958 
›
)

9960 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

9961 
OP
: \

9962 
	`SYMCAT
(
OP
,
_IMPL
); \

9964 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

9965 
OP
: \

9966 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

9967 
	#CONNECT
(
OP
)

	)

9968 #unde‡
DECLARE_FAULT


9969 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

9970 { 
Áu…
 = (
FAULT
); ; }

9971 
	~"machöe.def
"

9973 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

9976 i‡(
Áu…
 !
md_Áu…_n⁄e
)

9977 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

9980 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

9982 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

9984 
is_wrôe
 = 
TRUE
;

9986 #i‚de‡
PARALLEL_EMUL


9987 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

9990 #i‚de‡
PARALLEL_EMUL


9992 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

9997 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

9998 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10002 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10003 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10008 #ifdef 
EDA


10009 
i
 = 0, 
j
 = 0; i < 
mè_maxthªads
; i++)

10011 i‡(
j
 =
THREADS_PER_JOB
)

10014 i‡(
thec⁄ãxts
[
i
]->
ma°îid
 == 0)

10016 
k
 = 0, 
l
 = 0; k < 
mè_maxthªads
; k++)

10018 i‡(
thec⁄ãxts
[
k
]->
ma°îid
 == 1)

10020 i‡(
l
 =
j
)

10022 
m
;

10024 
m
 = 0, 
l
 = 0; m < 
mè_maxthªads
; m++)

10026 i‡(
thec⁄ãxts
[
m
]->
ma°îid
 == 2)

10028 i‡(
l
 =
j
)

10030 
thec⁄ãxts
[
i
]->
jobThdId
 = 
j
;

10031 
thec⁄ãxts
[
k
]->
jobThdId
 = 
j
;

10032 
thec⁄ãxts
[
m
]->
jobThdId
 = 
j
;

10033 
thec⁄ãxts
[
i
]->
hñpThdId
 = 
k
;

10034 
thec⁄ãxts
[
k
]->
hñpThdId
 = 
i
;

10035 
thec⁄ãxts
[
m
]->
hñpThdId
 = -1;

10036 
thec⁄ãxts
[
i
]->
‹a˛eId
 = 
m
;

10037 
thec⁄ãxts
[
k
]->
‹a˛eId
 = 
m
;

10038 
thec⁄ãxts
[
m
]->
‹a˛eId
 = -1;

10040 
thec⁄ãxts
[
i
]->
¥edQueue
 = (
bønchC‹r
 *Ë
	`ˇŒoc
 (1,  (branchCorr));;

10041 
	`öôBønchC‹r
 (
thec⁄ãxts
[
i
]->
¥edQueue
);

10042 
thec⁄ãxts
[
k
]->
¥edQueue
 =Åhec⁄ãxts[
i
]->predQueue;

10043 
thec⁄ãxts
[
m
]->
¥edQueue
 =Åhec⁄ãxts[
i
]->predQueue;

10046 
l
++;

10051 
l
++;

10054 
j
++;

10058 
i
 = 0; i < 
numc⁄ãxts
; i++)

10060 
thec⁄ãxts
[
i
]->
jobThdId
 = i;

10061 
thec⁄ãxts
[
i
]->
hñpThdId
 = -1;

10062 
thec⁄ãxts
[
i
]->
‹a˛eId
 = -1;

10066 
	`¥ötf
 ("ff Stage 0 done\n");

10067 
	`fÊush
 (
°dout
);

10069 
	`f°fwd_cﬁÀ˘Sèts
();

10072 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10074 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10075 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

10076 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

10079 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

10080 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

10084 i‡(
cuºít
->
Á°fwd_cou¡
 > 0)

10086 
cou¡î_t
 
icou¡
;

10087 
md_ö°_t
 
ö°
;

10088 
md_›code
 
›
;

10089 
md_addr_t
 
èrgë_PC
;

10090 
md_addr_t
 
addr
;

10091 
is_wrôe
;

10092 
byã_t
 
ãmp_byã
;

10093 
hÆf_t
 
ãmp_hÆf
;

10094 
w‹d_t
 
ãmp_w‹d
;

10096 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

10097 
qw‹d_t
 
ãmp_qw‹d
 = 0;

10100 
md_Áu…_ty≥
 
Áu…
;

10102 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

10104 
icou¡
 = 0; icou¡ < 
cuºít
->
Á°fwd_cou¡
; icount++)

10107 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

10108 #ifde‡
TARGET_ALPHA


10109 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

10113 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

10116 
addr
 = 0;

10117 
is_wrôe
 = 
FALSE
;

10120 
Áu…
 = 
md_Áu…_n⁄e
;

10123 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

10126 
›
)

10128 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

10129 
OP
: \

10130 
	`SYMCAT
(
OP
,
_IMPL
); \

10132 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

10133 
OP
: \

10134 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

10135 
	#CONNECT
(
OP
)

	)

10136 #unde‡
DECLARE_FAULT


10137 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

10138 { 
Áu…
 = (
FAULT
); ; }

10139 
	~"machöe.def
"

10141 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

10144 i‡(
Áu…
 !
md_Áu…_n⁄e
)

10145 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

10148 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

10150 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

10152 
is_wrôe
 = 
TRUE
;

10153 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

10156 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

10160 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

10161 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10164 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10165 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10172 
	`¥ötf
 ("ff stage 1 done\n");

10173 
	`fÊush
 (
°dout
);

10175 
	`Ârötf
 (
°dîr
, "sim: ** startingÖerformance simulation **\n");

10176 #ifde‡
LOAD_PREDICTOR


10177 
	`Ârötf
 (
°dîr
, " LOAD_PREDICTOR\n");

10178 #ifde‡
COUNT_MISS_ONLY


10179 
	`Ârötf
 (
°dîr
, "COUNT_MISS_ONLY \n");

10181 #ifde‡
PREDICT_LOAD_COMM


10182 
	`Ârötf
 (
°dîr
, "PREDICT_LOAD_COMM \n");

10184 #ifde‡
GATE_L1_MISS


10185 
	`Ârötf
 (
°dîr
, "GATE_L1_MISS \n");

10187 #ifde‡
GATE_L2_MISS


10188 
	`Ârötf
 (
°dîr
, "GATE_L2_MISS\n");

10190 #ifde‡
PDG


10191 
	`Ârötf
 (
°dîr
, "PDG \n");

10194 #ifde‡
ACTIVE_N_WAY


10195 
	`Ârötf
 (
°dîr
, " ACTIVE_N_WAY\n");

10196 #ifde‡
FIXED_N_WAY


10197 
	`Ârötf
 (
°dîr
, " FIXED_N_WAY\n");

10200 #ifde‡ 
SMT_TEST


10201 
	`Ârötf
 (
°dîr
, "SMT_TEST\n");

10203 #ifde‡ 
THRD_WAY_CACHE


10204 
	`Ârötf
 (
°dîr
, " THRD_WAY_CACHE\n");

10206 #ifde‡ 
N_WAY_CACHE


10207 
	`Ârötf
 (
°dîr
, " N_WAY_CACHE: deÁu… o∆y, %d\n", 
n_way_ˇche
);

10208 #ifde‡
SET_BASED


10209 
	`Ârötf
 (
°dîr
, "SET_BASED\n");

10212 #ifde‡
PARTITIONED_LSQ


10213 
	`Ârötf
 (
°dîr
, "PARTITIONED_LSQ\n");

10215 
	`Ârötf
 (
°dîr
, "(PARTITIONED_LSQÇot defined)\n");

10217 #ifde‡
CENTRALIZED_LSQ


10218 
	`Ârötf
 (
°dîr
, "CENTRALIZED_LSQ\n");

10220 #ifde‡
DE_CENTRALIZED_LSQ


10221 
	`Ârötf
 (
°dîr
, "DE_CENTRALIZED_LSQ\n");

10222 #ifde‡
DE_CENTRALIZED_POWER_BUG


10223 
	`Ârötf
 (
°dîr
, " DE_CENTRALIZED_POWER_BUG\n");

10225 #ifde‡ 
SPLIT_LSQ


10226 
	`Ârötf
 (
°dîr
, "SPLIT_LSQ\n");

10228 #ifde‡
DISTRIBUTE_STORE


10229 
	`Ârötf
 (
°dîr
, "DISTRIBUTE_STORE\n");

10231 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


10232 
	`Ârötf
 (
°dîr
, " PWR_DE_CENTRALIZED_LSQ\n");

10235 #ifde‡
ALLOW_ANY_CLUSTER


10236 
	`Ârötf
 (
°dîr
, "ALLOW_ANY_CLUSTER\n");

10238 #ifde‡ 
CLUSTER_PRIORITY


10239 
	`Ârötf
 (
°dîr
, "CLUSTER_PRIORITY\n");

10241 #ifde‡
DISTRIBUTED_STEER


10242 
	`Ârötf
 (
°dîr
, "DISTRIBUTED_STEER\n");

10244 #ifde‡
CENTRALIZED_STEER


10245 
	`Ârötf
 (
°dîr
, "CENTRALIZED_STEER\n");

10247 #ifde‡
MINIMUM_STEER


10248 
	`Ârötf
 (
°dîr
, "MINIMUM_STEER\n");

10250 #ifde‡
INIT_CENTRALIZED_STEER


10251 
	`Ârötf
 (
°dîr
, "INIT_CENTRALIZED_STEER\n");

10253 #ifde‡
CMP_STEER


10254 
	`Ârötf
 (
°dîr
, "CMP_STEER\n");

10256 #ifde‡
INIT_CMP_STEER


10257 
	`Ârötf
 (
°dîr
, "INIT_CMP_STEER\n");

10259 #ifde‡
N_WAY_STEER


10260 
	`Ârötf
 (
°dîr
, "N_WAY_STEER ,N_WAY:deÁu… %d \n", 
n_way
);

10261 #ifde‡
PRIVATE_STEER


10262 
	`Ârötf
 (
°dîr
, " PRIVATE_STEER\n");

10264 #ifde‡
N_WAY_ADAPT


10265 
	`Ârötf
 (
°dîr
, " N_WAY_ADAPT,ADAPT_RATE %d \n", 
ADAPT_RATE
);

10266 #ifde‡
STABLE_IPC_ADAPT


10267 
	`Ârötf
 (
°dîr
, "STABLE_IPC_ADAPT\n");

10269 #ifde‡
PERIODIC_INCREASE_ADAPT


10270 
	`Ârötf
 (
°dîr
, "PERIODIC_INCREASE_ADAPT\n");

10272 #ifde‡
DOUBLE_ADAPT


10273 
	`Ârötf
 (
°dîr
, "DOUBLE_ADAPT\n");

10275 #ifde‡
OVERALL_LIMIT


10276 
	`Ârötf
 (
°dîr
, "OVERALL_LIMIT\n");

10278 #ifde‡ 
PRIVATE_STEER


10279 
	`Ârötf
 (
°dîr
, "PRIVATE_STEER\n");

10282 #ifde‡
THRD_PRIO_ADAPT


10283 
	`Ârötf
 (
°dîr
, " THRD_PRIO_ADAPT\n");

10284 #ifde‡
ADAPT_LIMIT


10285 
	`Ârötf
 (
°dîr
, " ADAPT_LIMIT\n");

10288 #ifde‡
PDG_ADAPT


10289 
	`Ârötf
 (
°dîr
, " PDG_ADAPT\n");

10291 #ifde‡
PDG_STOP_ADAPT


10292 
	`Ârötf
 (
°dîr
, " PDG_STOP_ADAPT\n");

10294 #ifde‡
PDG_THRD_ADAPT


10295 
	`Ârötf
 (
°dîr
, " PDG_THRD_ADAPT\n");

10296 #ifde‡
PDG_THRD_AGGRESSIVE


10297 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10299 #ifde‡
PDG_THRD_SOFT


10300 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10303 #ifde‡
PDG_THRD_PRIO_ADAPT


10304 
	`Ârötf
 (
°dîr
, "PDG_THRD_PRIO_ADAPT \n");

10305 #ifde‡
COMM_OPER_LIMIT


10306 
	`Ârötf
 (
°dîr
, "COMM_OPER_LIMIT COMM_OPER_RATIO %2.2f\n", 
COMM_OPER_RATIO
);

10308 #ifde‡
ADAPT_NO_PRIO


10309 
	`Ârötf
 (
°dîr
, " ADAPT_NO_PRIO\n");

10311 #ifde‡
ADAPT_NO_COMM_OPER


10312 
	`Ârötf
 (
°dîr
, " ADAPT_NO_COMM_OPER\n");

10314 #ifde‡
AVG_LIMIT


10315 
	`Ârötf
 (
°dîr
, " AVG_LIMIT\n");

10317 #ifde‡
PDG_THRD_AGGRESSIVE


10318 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10320 #ifde‡
PDG_THRD_SOFT


10321 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10324 #ifde‡
INIT_N_WAY_CENTRAL


10325 
	`Ârötf
 (
°dîr
, " INIT_N_WAY_CENTRAL\n");

10327 #ifde‡
N_WAY_BALANCE


10328 
	`Ârötf
 (
°dîr
, "N_WAY_BALANCE \n");

10330 #ifde‡
THRD_PROFILE


10331 
	`Ârötf
 (
°dîr
, " THRD_PROFILE\n");

10333 #ifde‡
N_CACHE_FIXED


10334 
	`Ârötf
 (
°dîr
, "N_CACHE_FIXED \n");

10336 #ifde‡
PRIVATE_CACHE


10337 
	`Ârötf
 (
°dîr
, " PRIVATE_CACHE\n");

10340 #ifde‡
STEER_MEM_LSQ


10341 
	`Ârötf
 (
°dîr
, "STEER_MEM_LSQ\n");

10343 #ifde‡
STEER_MEM_NEIGHBOR


10344 
	`Ârötf
 (
°dîr
, "STEER_MEM_NEIGHBOR\n");

10346 #ifde‡
STEER_OPRANDS


10347 
	`Ârötf
 (
°dîr
, "STEER_OPRANDS\n");

10349 #ifde‡ 
STEER_FU


10350 
	`Ârötf
 (
°dîr
, "STEER_FU\n");

10352 #ifde‡
SELECTIVE_DISPATCH


10353 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH\n");

10355 #ifde‡
SELECTIVE_FETCH


10356 
	`Ârötf
 (
°dîr
, "SELECTIVE_FETCH\n");

10358 #ifde‡
SELECTIVE_DISPATCH_GATE


10359 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH_GATE\n");

10360 #ifde‡
UNREADY_PRIVATE


10361 
	`Ârötf
 (
°dîr
, " UNREADY_PRIVATE \n");

10363 #ifde‡
UNREADY_COUNT


10364 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT %d\n", 
UNREADY_COUNT_LIMIT
);

10366 #ifde‡
UNREADY_COUNT_ONLY


10367 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT_ONLY \n");

10369 #ifde‡
UNREADY_CHAIN_PRIVATE


10370 
	`Ârötf
 (
°dîr
, " UNREADY_CHAIN_PRIVATE %d\n", 
UNREADY_CHAIN_LIMIT
);

10373 #ifde‡ 
RAW


10374 
	`Ârötf
 (
°dîr
, "RAW ,deÁu… RAWSIZE %d\n", 
RAWSIZE
);

10376 #ifde‡ 
RABMAP


10377 
	`Ârötf
 (
°dîr
, "RABMAP \n");

10379 #ifde‡ 
RABCOMM


10380 
	`Ârötf
 (
°dîr
, "RABCOMM \n");

10382 #ifde‡ 
ALU_MERGE


10383 
	`Ârötf
 (
°dîr
, "ALU_MERGE \n");

10385 #ifde‡
INST_TRANS_RATE


10386 
	`Ârötf
 (
°dîr
, "INST_TRANS_RATE\n");

10387 #ifde‡
TRACE_REG


10388 
	`Ârötf
 (
°dîr
, " TRACE_REG\n");

10391 #ifde‡
IGNORE_ALL_COMM_LATENCY


10392 
	`Ârötf
 (
°dîr
, "IGNORE_ALL_COMM_LATENCY\n");

10394 #ifde‡
IGNORE_MEM_COMM_LATENCY


10395 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10397 #ifde‡
COUNT_COMMIT


10398 
	`Ârötf
 (
°dîr
, "COUNT_COMMIT\n");

10400 #ifde‡
CYCLE_JUMP


10401 
	`Ârötf
 (
°dîr
, "CYCLE_JUMP \n");

10403 #ifde‡
FETCH_ONE_BLOCK


10404 
	`Ârötf
 (
°dîr
, "FETCH_ONE_BLOCK \n");

10406 #ifde‡ 
MSHR


10407 
	`Ârötf
 (
°dîr
, "MSHR , MSHRSIZE %d\n", 
MSHRSIZE
);

10409 #ifde‡
GENERIC_FU


10410 
	`Ârötf
 (
°dîr
, "GENERIC_FU\n");

10412 #ifde‡
NO_EXTRA_REG


10413 
	`Ârötf
 (
°dîr
, "NO_EXTRA_REG\n");

10415 #ifde‡
NO_CACHE_BANK


10416 
	`Ârötf
 (
°dîr
, "NO_CACHE_BANK\n");

10418 #ifde‡
NO_QFILL_CONTENTION


10419 
	`Ârötf
 (
°dîr
, "NO_QFILL_CONTENTION\n");

10421 #ifde‡
NO_BUS_CONTENTION


10422 
	`Ârötf
 (
°dîr
, " NO_BUS_CONTENTION \n");

10424 #ifde‡
EVENT_CACHE_UPDATE


10425 
	`Ârötf
 (
°dîr
, "EVENT_CACHE_UPDATE\n");

10426 #ifde‡
APPROXIMATE_LAT


10427 
	`Ârötf
 (
°dîr
, " APPROXIMATE_LAT \n");

10429 #ifde‡ 
ACURATE_LAT


10430 
	`Ârötf
 (
°dîr
, " ACURATE_LAT \n");

10432 #ifde‡ 
MOST_ACURATE_LAT


10433 
	`Ârötf
 (
°dîr
, " MOST_ACURATE_LAT \n");

10436 #ifde‡
PORT_PER_BANK


10437 
	`Ârötf
 (
°dîr
, "PORT_PER_BANK\n");

10439 #ifde‡ 
LINE_INTERLEAVED


10440 
	`Ârötf
 (
°dîr
, "LINE_INTERLEAVED\n");

10442 #ifde‡ 
PWR_CLUSTER


10443 
	`Ârötf
 (
°dîr
, "PWR_CLUSTER,ISSUE_PER_CLUSTER \n");

10445 #ifde‡ 
CHECKS


10446 
	`Ârötf
 (
°dîr
, "CHECKS\n");

10448 #ifde‡ 
PWR__SMT_RR


10449 
	`Ârötf
 (
°dîr
, "PWR__SMT_RR\n");

10451 
	`Ârötf
 (
°dîr
, "REMOVE_ILP = %d\n", (Ë
REMOVE_ILP
);

10452 
	`Ârötf
 (
°dîr
, "HOPTIME = %d\n", (Ë
HOPTIME
);

10453 #ifde‡
CENTRALIZED_CACHE_BANK


10454 
	`Ârötf
 (
°dîr
, "CENTRALIZED_CACHE_BANK\n");

10456 #ifde‡
IGNORE_MEM_COMM_LATENCY


10457 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10459 
	`Ârötf
 (
°dîr
, "DO_DYNAMIC_ADAPTATION = %d\n", (Ë
DO_DYNAMIC_ADAPTATION
);

10460 
	`Ârötf
 (
°dîr
, "N_WAY = %d\n", 
n_way
);

10461 
	`Ârötf
 (
°dîr
, "n_way_ˇchê%d\n", 
n_way_ˇche
);

10462 #ifde‡
OPTICAL_FE_LINK


10463 
	`Ârötf
 (
°dîr
, "OPTICAL_FE_LINK\n");

10465 #ifde‡
MONOLETHIC_MACHINE


10466 
	`Ârötf
 (
°dîr
, "MONOLETHIC_MACHINE\n");

10469 #ifde‡
TOKENB


10470 
	`Ârötf
 (
°dîr
, "TOKENB\n");

10474 *
sim_°r_dump
;

10475 *
sim_dump
 = 
sim_°r_dump
;

10476 
°rFûeName
[256];

10477 i‡(!
sim_dump
)

10479 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

10480 
	`exô
 (1);

10483 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

10484 
	`°rˇt
 (
°rFûeName
, ".trc");

10485 
Â_åa˚
 = 
	`f›í
 (
°rFûeName
, "w");

10486 if(!
Â_åa˚
Ë
	`∑nic
("CouldÇot openÅrace file");

10489 #ifdef 
EDA


10490 
	`SèπSkñë⁄Ród
 (0);

10492 
	`Æloˇã_‰ì_evít_li°
();

10495 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10497 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10498 
cuºít
->
„tch_¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
;

10499 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

10501 
cuºít
->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_PC
 -  (
md_ö°_t
);

10502 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.ªgs_PC -  (
md_ö°_t
);

10503 #ifde‡
PDG


10504 
cuºít
->
a˘ive
 = 1;

10509 
	`bö_öô
 ();

10510 
	`ˇche_öô
 ();

10511 #ifde‡ 
STREAM_PREFETCHER


10512 
	`öô_•
 ();

10515 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

10517 
di•_time
[
i
] = 0;

10520 
i
 = 0; i < 
numc⁄ãxts
; i++)

10522 
	`ªg_öô
 (
i
);

10523 
	`b¥ed_öô
 (
i
);

10526 #ifde‡
REG_RENAME_CONFIGUARE


10527 
	`Ârötf
 (
°dîr
, "TŸÆ Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

10530 
i
 = 0; i < 
CLUSTERS
; i++)

10532 
num_°‹eq
[
i
] = 0;

10533 
max_°‹eq
[
i
] = 0;

10536 
mm
 = 0; mm <
NUMPHASES
; mm++)

10538 
num_picks
[
mm
] = 0;

10541 i‡(
CENTRAL_CACHE
)

10543 
a˘uÆ_ˇchï‹ts
 = 
CACHEPORTS
;

10544 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10548 
	`ˇche_ch™ge_c⁄fig
 (
SMALLEST_CONFIG
);

10549 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10550 
a˘uÆ_ˇchï‹ts
 = (
CACHEPORTS
 * 
a˘uÆ_˛u°îs
Ë/ 
CLUSTERS
;

10553 
πhªsh
 = 
ö¢_öãrvÆ
 / 100;

10554 
bπhªsh
 = 
ö¢_öãrvÆ
 / 100;

10555 
m°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10556 
im°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10557 
cy˘hªsh
 = 
ö¢_öãrvÆ
 / 100;

10558 
∫oi£
 = 
ö¢_öãrvÆ
 / 20;

10559 
b∫oi£
 = 
ö¢_öãrvÆ
 / 50;

10560 
m¢oi£
 = 
ö¢_öãrvÆ
 / 100;

10561 
im¢oi£
 = 
ö¢_öãrvÆ
 / 200;

10563 #ifdef 
COLLECT_STAT_STARTUP


10564 
a˘uÆPro˚ss
 = 1;

10566 
a˘uÆPro˚ss
 = 
numc⁄ãxts
;

10568 
execuãMaxIn¢
 = 
max_ö°s
;

10574 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10576 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10577 
cuºít
->
a˘ive_this_cy˛e
 = 1;

10580 #ifdef 
SMD_USE_WRITE_BUF


10582 
thªadid
 = 0;Åhªadid < 
MAXTHREADS
;Åhreadid++)

10584 
i
 = 0; i < 
SMD_L1_WBUF_SIZE
; i++)

10586 
m_L1WBuf
[
thªadid
][
i
].
PC
 = 0;

10587 
m_L1WBuf
[
thªadid
][
i
].
lsqId
 = 0;

10588 
m_L1WBuf
[
thªadid
][
i
].
robId
 = 0;

10589 
m_L1WBuf
[
thªadid
][
i
].
robExId
 = 0;

10590 
m_L1WBuf
[
thªadid
][
i
].
addr
 = 0;

10591 
m_L1WBuf
[
thªadid
][
i
].
›
 = 0;

10592 
m_L1WBuf
[
thªadid
][
i
].
œt
 = 0;

10593 
m_L1WBuf
[
thªadid
][
i
].
sim_num_ö¢
 = 0;

10594 
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
 = 0;

10595 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 0;

10596 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 0;

10597 
m_L1WBuf
[
thªadid
][
i
].
íåyTime
 = 0;

10598 
m_L1WBuf
[
thªadid
][
i
].
wrôeVÆue
 = 0;

10599 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 0;

10601 
m_L1WBufC¡
[
thªadid
] = 0;

10602 
m_L1WBuf_hód
[
thªadid
] = 0;

10603 
m_L1WBuf_èû
[
thªadid
] = 0;

10606 #ifde‡
DIRECTORY


10607 #ifde‡
MC


10608 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI"))

10609 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10610 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10611 
	`maöP›√t
();

10612 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

10614 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10615 
	`maöP›√t
();

10618 #ifde‡
OPTICAL_INTERCONNECT


10619 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10621 #ifde‡
POPNET


10622 
	`maöP›√t
();

10630 #ifdef 
DCACHE_MSHR


10631 
i
 = 0; i < 
CLUSTERS
; i++)

10632 
	`‰ìMSHR
(
ˇche_dl1
[
i
]->
mshr
);

10633 
	`‰ìL2MSHR
(
ˇche_dl2
->
mshr
);

10636 #ifde‡
POWER_ACCESS_STAT


10637 
lsq_¥eg_ac˚ss_cou¡
 +
lsq_¥eg_ac˚ss
;

10638 
lsq_wakeup_ac˚ss_cou¡
 +
lsq_wakeup_ac˚ss
;

10641 #ifdef 
EDA


10642 
	`dl0_˛ónup
 ();

10647 
	`±ø˚_check_a˘ive
 (
thec⁄ãxts
[0]->
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

10649 
	`±ø˚_√wcy˛e
 (
sim_cy˛e
);

10651 
i
 = 0; i<
numc⁄ãxts
; i++)

10655 
commô_Êag
[
i
] ++;

10658 
	`ruu_commô
 ();

10660 #ifde‡
SMD_USE_WRITE_BUF


10661 
	`ruu_ªÀa£_wrôebuf„r
 ();

10662 
	`ruu_wrôe_‰om_Wrôebuf„r
 ();

10666 
	`ruu_ªÀa£_fu
 ();

10668 
	`ruu_wrôeback
 ();

10671 i‡(!
bugcom∑t_mode
)

10673 
	`lsq_ª‰esh
 ();

10674 
	`ruu_issue
 ();

10677 
ggg
;

10679 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10681 
di•©ch_d⁄e
[
ggg
] = 0;

10682 i‡(
thec⁄ãxts
[
ggg
]->
a˘ive_this_cy˛e
)

10684 
di•©ch_d⁄e
[
ggg
] = 
di•©ched
 = 
	`ruu_di•©ch
 (ggg);

10688 i‡(!
ÆlF‹ked
)

10690 #ifdef 
COLLECT_STAT_STARTUP


10691 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10693 
cﬁÀ˘SètSt›
[
ggg
] = 0;

10696 
cﬁÀ˘SètB¨rõr
 = 0;

10697 
ÆlF‹ked
 = 1;

10699 
	`öôP¨ÆÀlSimuœti⁄
 ();

10700 
cﬁÀ˘_°©s
 = 1;

10705 i‡(
ÊushImpSèts
)

10707 
ÊushImpSèts
 = 0;

10708 
cﬁÀ˘_°©s
 = 1;

10709 
sim_num_ö¢
 = 0;

10710 
ªÆSimCy˛e
 = 0;

10712 
i
 = 0; i < 
MAXTHREADS
; i++)

10714 
m_sqLQFuŒ
[
i
] = 0;

10715 
m_sqSQFuŒ
[
i
] = 0;

10716 
m_sqNumLdRïœy
[
i
] = 0;

10717 
ld°Reje˘i⁄Cou¡
[
i
] = 0;

10718 
£qC⁄sRïœy
[
i
] = 0;

10719 
£qC⁄sIn¢Rïœy
[
i
] = 0;

10722 
övÆid©i⁄_ª∂ay
[
i
] = 0;

10724 
tŸÆRUUsize
[
i
] = 
tŸÆLQsize
[i] = 
tŸÆSQsize
[i] = 0;

10726 #ifde‡
RELAXED_CONSISTENCY


10727 
lﬂdLﬂdRïœyCou¡
[
i
] = 0;

10730 
m_sqPª„tchC¡
 = 0;

10733 i‡(
timeToRëu∫
)

10735 
	`f˛o£
 (
Â_åa˚
);

10737 
i
 = 0; i < 
numc⁄ãxts
; i++)

10738 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10739 
	`Ârötf
(
°dîr
,"[INFO 0]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

10743 
i
 = 0; i < 
numc⁄ãxts
; i++)

10745 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10747 
tŸÆRUUsize
[
i
] +
thec⁄ãxts
[i]->
RUU_num
;

10748 
avgRUUsize
[
i
] = (1.0 * 
tŸÆRUUsize
[i]Ë/ 
ªÆSimCy˛e
;

10750 
tŸÆLQsize
[
i
] +
thec⁄ãxts
[i]->
m_shLQNum
;

10751 
avgLQsize
[
i
] = (1.0 * 
tŸÆLQsize
[i]Ë/ 
ªÆSimCy˛e
;

10753 #ifdef 
SMD_USE_WRITE_BUF


10754 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
 + 
m_L1WBufC¡
[i];

10756 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
;

10758 
avgSQsize
[
i
] = (1.0 * 
tŸÆSQsize
[i]Ë/ 
ªÆSimCy˛e
;

10763 #ifde‡ 
CHECK_FETCH_QUEUE


10764 
	`check_„tch_queue
 ();

10767 i‡(
bugcom∑t_mode
)

10771 
	`lsq_ª‰esh
 ();

10775 
	`ruu_issue
 ();

10778 
	`ruu_„tch
 ();

10780 #ifde‡
DIRECTORY


10781 
	`dú_fifo_dequeue
();

10782 
	`dú_evítq_√xãvít
();

10783 #ifde‡
MC


10784 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI"))

10785 
	`dúe˘RunSim
(
sim_cy˛e
);

10786 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10787 
	`p›√tRunSim
(
sim_cy˛e
);

10788 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

10790 
	`dúe˘RunSim
(
sim_cy˛e
);

10791 
	`p›√tRunSim
(
sim_cy˛e
);

10794 #ifde‡
OPTICAL_INTERCONNECT


10795 
	`dúe˘RunSim
(
sim_cy˛e
);

10797 #ifde‡
POPNET


10798 
	`p›√tRunSim
(
sim_cy˛e
);

10803 #ifde‡
MEM_MOD


10804 
f
;

10805 
f
=0; f<8; f++)

10807 if(
mem_p‹t_œt
[
f
] != 0)

10808 
mem_p‹t_œt
[
f
] --;

10812 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10814 
	`upd©e_powî_°©s
(
thec⁄ãxts
[0]->
powî
, 
thªadid
,Åhecontexts[threadid]);

10816 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10817 i‡(
cuºít
->
ruu_„tch_issue_dñay
)

10818 
cuºít
->
ruu_„tch_issue_dñay
--;

10820 
	`˛ór_ac˚ss_°©s
();

10826 #ifde‡ 
CHECKS


10827 
	`check_ªg
 ();

10830 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_cy˛e
 >
œ°_hŸ•Ÿ_cy˛e
 + 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
)

10832 
	`upd©e_hŸ•Ÿ_°©s
 (
sim_cy˛e
 - 
œ°_hŸ•Ÿ_cy˛e
);

10833 
œ°_hŸ•Ÿ_cy˛e
 = 
sim_cy˛e
;

10836 
	`check_fu_busy
 ();

10837 
â
;

10839 i‡(!
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
)

10841 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10843 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10844 #ifdef 
EDA


10845 i‡(
cuºít
->
ma°îid
 =0 && ((Ë(cuºít->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

10847 i‡(((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

10850 
	`Ârötf
 (
°dîr
, "Thªad %d ha†ex˚eded max_ö°s; kûlögáŒÅhªads.\n", 
thªadid
);

10851 
kûœŒ
 = 1;

10856 
thªadid
 = 0, 
thªad_°›
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10858 
tmp
 = 0, 
tid
;

10860 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10862 #ifdef 
EDA


10863 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && 
cuºít
->
ma°îid
 =0 && ((Ë(cuºít->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

10865 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
 && ((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

10868 
cuºít
->
föish_cy˛e
 = (Ë(
sim_cy˛e
 - 
cy˛echeck
);

10869 
cuºít
->
ru¬ög
 = 0;

10870 
°›≥d_num_thªads
++;

10872 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
 - 
°›≥d_num_thªads
;

10874 
thªad_°›
 = 1;

10875 
	`Ârötf
 (
°dîr
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

10876 
	`Ârötf
 (
°dîr
, "IPC_∑tül%d,≥∏thªad %4.3f, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

10878 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_hŸ•Ÿout_fd
 !
°dîr
)

10880 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

10883 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10885 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10886 i‡(
cuºít
->
föish_cy˛e
)

10887 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(cuºít->
föish_cy˛e
 - 
cy˛echeck
));

10889 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

10891 
	`Ârötf
 (
°dîr
, "\n");

10892 
	`Ârötf
 (
°dîr
, "num_ö¢_∑tül%d,≥∏thªad %lu, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
));

10894 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10896 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10897 i‡(
cuºít
->
föish_cy˛e
)

10898 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

10900 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

10902 
	`Ârötf
 (
°dîr
, "\n");

10903 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

10905 
	`Ârötf
 (
°dîr
, "********All finish simulation done**********\n");

10906 
	`Ârötf
 (
°dîr
, "föish_cy˛ê%lu,ÖîÅhªad , ", (Ë
sim_cy˛e
);

10907 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10909 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10910 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
föish_cy˛e
 - 
WARMUP
));

10912 
	`Ârötf
 (
°dîr
, "\n");

10916 
now_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

10918 i‡(!
sim_cy˛e
)

10919 
¥öt_time
 = 
now_time
;

10920 
sim_ñ≠£d_£c
 = 0;

10922 i‡((Ë
sim_num_ö¢
 && ((
°›≥d_num_thªads
 =
numc⁄ãxts
Ë|| 
thªad_°›
))

10924 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

10926 
sim_cy˛e
 -
w¨mupEndCy˛e
;

10927 
	`Ârötf
(
°dîr
,"[INFO 1]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

10932 
	#PERIOD
 100000

	)

10933 
	#INTERVAL
 10000

	)

10934 
	#NUM_CONFIG
 3

	)

10935 #i‡
DO_DYNAMIC_ADAPTATION


10937 i‡(
mè_maxthªads
 == 1)

10939 i‡(((
sim_num_ö¢
 % 
PERIOD
Ë>0Ë&& ((sim_num_ö¢ % PERIODË< 
NUM_CONFIG
 * 
INTERVAL
))

10940 
	`≥riodic_ad≠èti⁄
 ();

10944 
	#PRINT_STATISTICS
 0

	)

10945 #i‡
PRINT_STATISTICS


10946 
	`ch™geCacheC⁄fig
 ();

10949 #ifde‡
INTERVAL_BASED


10950 i‡(!((Ë
sim_cy˛e
 % 
ADAPT_INTERVAL
) && (() sim_cycle))

10953 #ifde‡ 
EXAMIN_N_WAY_ADAPT


10954 
	`upd©e_examö_n_limô
 ();

10956 #ifde‡ 
N_WAY_ADAPT


10957 
	`upd©e_n_limô
 ();

10959 #ifde‡
THRD_PRIO_ADAPT


10960 
	`¥i‹ôy_n_way
 ();

10962 #ifde‡
PDG_THRD_ADAPT


10963 
	`pdg_thrd_n_way
 ();

10965 #ifde‡
PDG_THRD_PRIO_ADAPT


10966 
	`pdg_¥i‹ôy_n_way
 ();

10968 #ifde‡
PDG_ADAPT


10969 
	`pdg_n_way
 ();

10971 #ifde‡
N_WAY_CACHE_ADAPT


10972 
	`n_way_ˇche_ad≠t
 ();

10974 #ifde‡
INTERVAL_BASED


10978 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

10979 
	`busFªe
 ();

10981 
sim_cy˛e
++;

10983 #ifde‡
DIRECTORY


10984 
	`ª£t_p‹ts
();

10988 #ifde‡
SEQUENTIAL_CONSISTENCY


10989 
i
 = 0; i < 
numc⁄ãxts
; i++)

10991 i‡(
övÆid©i⁄SèŒ
[
i
])

10992 
övÆid©i⁄SèŒ
[
i
]--;

10993 i‡(
commôSèŒ
[
i
])

10994 
commôSèŒ
[
i
]--;

10997 
ªÆSimCy˛e
++;

10998 
i
 = 0; i < 
numc⁄ãxts
; i++)

11000 i‡(!
ÆlF‹ked
)

11002 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (—hec⁄ãxts[i]->
¶ïtAt
 + 1000Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
))

11004 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

11005 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

11010 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (thec⁄ãxts[i]->
¶ïtAt
 + 100 + (
	`øndom
 (Ë% 20Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
))

11012 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

11013 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

11014 i‡(
cﬁÀ˘_°©s
)

11015 
quõn£Wakeup
[
i
]++;

11020 i‡(((!
max_b¨rõr
 && (
puª_num_ö¢
 > 
execuãMaxIn¢
)Ë|| (max_b¨rõ∏&& 
TŸÆB¨rõrs
 >max_b¨rõr)Ë&& 
cﬁÀ˘_°©s
)

11022 
i
 = 0; i < 
numc⁄ãxts
; i++)

11023 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

11025 
	`Ârötf
(
°dîr
,"[INFO 2]: sim_num_ö¢=%Œu, b¨rõrs=%d", 
puª_num_ö¢
, 
TŸÆB¨rõrs
);

11028 i‡(
unPrötLimô
 < 
STATUS_NUM
 && (
puª_num_ö¢
 >(unPrötLimô * (
max_ö°s
 / STATUS_NUM))))

11030 #ifde‡
MC


11031 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI"))

11033 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11034 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11036 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

11038 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
);

11039 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\tmëa_∑ckës%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
, 
MëaPackës_1
);

11041 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB"))

11043 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11044 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11047 #ifde‡
POPNET


11048 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
);

11049 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\tmëa_∑ckës%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
, 
MëaPackës_1
);

11051 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11052 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11055 
	`fÊush
 (
°dîr
);

11056 
	`fÊush
 (
°dout
);

11057 
	`¥ötf
("b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

11058 
	`Ârötf
(
°dîr
, "b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

11059 
	`fÊush
 (
°dîr
);

11060 
	`fÊush
 (
°dout
);

11061 
unPrötLimô
++;

11062 
globÆ_d©a_∑ckës_gíî©i⁄
 = 0;

11063 
D©aPackës_1
 = 0;

11064 
MëaPackës_1
 = 0;

11071 
	`gë_‰ì_ªg
 (
Ãegnum
, 
thªadid
)

11073 
ãmpvÆ
;

11074 
li°ñt
 *
ãmp
;

11076 
c⁄ãxt
 *
cuºít
;

11078 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11080 i‡((
Ãegnum
 < 1) || (lregnum > 62))

11082 i‡(
Ãegnum
 < 32)

11084 i‡(!
i‰ìli°_hód
[
thªadid
])

11086 
	`¥ötf
 ("Num o‡IREG=%d\n", 
úegfûe
);

11087 
	`Ârötf
 (
°dîr
, "Num o‡IREG=%d\n", 
úegfûe
);

11088 
	`∑nic
 ("Out ofÑegisters?!");

11091 
ãmp
 = 
i‰ìli°_hód
[
thªadid
];

11092 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11093 
i‰ìli°_hód
[
thªadid
] = i‰ìli°_hód[thªadid]->
√xt
;

11094 i‡(!
i‰ìli°_hód
[
thªadid
])

11095 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11096 i‡(
i‰ìli°_hód
[
thªadid
])

11097 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11098 
	`‰ì
 (
ãmp
);

11099 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11100 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11101 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11102 #ifde‡ 
REMOVE_REG_COUNT


11103 
úegfûe
++;

11105 
úegfûe_˛
[
thªadid
]++;

11106  
ãmpvÆ
;

11110 i‡(!
f‰ìli°_hód
[
thªadid
])

11112 
	`¥ötf
 ("Num o‡FREG=%d\n", 
‰egfûe
);

11113 
	`Ârötf
 (
°dîr
, "Num o‡FREG=%d\n", 
‰egfûe
);

11114 
	`∑nic
 ("Out ofÑegisters?!");

11117 
ãmp
 = 
f‰ìli°_hód
[
thªadid
];

11118 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11119 
f‰ìli°_hód
[
thªadid
] = f‰ìli°_hód[thªadid]->
√xt
;

11120 i‡(!
f‰ìli°_hód
[
thªadid
])

11121 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11122 i‡(
f‰ìli°_hód
[
thªadid
])

11123 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11124 
	`‰ì
 (
ãmp
);

11125 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11126 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11127 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11128 #ifde‡ 
REMOVE_REG_COUNT


11129 
‰egfûe
++;

11131 
‰egfûe_˛
[
thªadid
]++;

11132  
ãmpvÆ
;

11138 
	`‰ìli°_ö£π
 (
¥egnum
, 
thªadid
)

11140 
li°ñt
 *
ñt
;

11141 
li°ñt
 *
p
;

11142 
li°ñt
 *
q
;

11144 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11147 i‡(
thªadid
 == 0)

11149 
p
 = 
i‰ìli°_hód
[
thªadid
];

11150 
p
)

11152 
q
 = 
p
;

11153 
p
 =Ö->
√xt
;

11158 i‡(!
¥egnum
)

11160 i‡(
¥egnum
 <
IPREG_size
)

11162 #ifde‡ 
REMOVE_REG_COUNT


11163 
úegfûe
--;

11165 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11166 
ñt
->
¥eg
 = 
¥egnum
;

11167 i‡(
i‰ìli°_èû
[
thªadid
])

11169 
p
 = 
i‰ìli°_hód
[
thªadid
];

11170 
q
 = 
NULL
;

11171 
p
 && (p->
¥eg
 < 
¥egnum
))

11173 
q
 = 
p
;

11174 
p
 =Ö->
√xt
;

11176 i‡(!
p
 || !
SORT
)

11178 
i‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11179 
ñt
->
¥ev
 = 
i‰ìli°_èû
[
thªadid
];

11180 
ñt
->
√xt
 = 
NULL
;

11181 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11183 i‡(
q
)

11185 
q
->
√xt
 = 
ñt
;

11186 
ñt
->
¥ev
 = 
q
;

11187 
ñt
->
√xt
 = 
p
;

11188 
p
->
¥ev
 = 
ñt
;

11192 
ñt
->
√xt
 = 
i‰ìli°_hód
[
thªadid
];

11193 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11194 
ñt
->
¥ev
 = 
NULL
;

11195 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11200 
ñt
->
√xt
 = 
NULL
;

11201 
ñt
->
¥ev
 = 
NULL
;

11202 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11203 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11205 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11206 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11207 
úegfûe_˛
[
thªadid
]--;

11211 #ifde‡ 
REMOVE_REG_COUNT


11212 
‰egfûe
--;

11214 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11215 
ñt
->
¥eg
 = 
¥egnum
;

11216 i‡(
f‰ìli°_èû
[
thªadid
])

11218 
p
 = 
f‰ìli°_hód
[
thªadid
];

11219 
q
 = 
NULL
;

11220 
p
 && (p->
¥eg
 < 
¥egnum
))

11222 
q
 = 
p
;

11223 
p
 =Ö->
√xt
;

11225 i‡(!
p
 || !
SORT
)

11227 
f‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11228 
ñt
->
¥ev
 = 
f‰ìli°_èû
[
thªadid
];

11229 
ñt
->
√xt
 = 
NULL
;

11230 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11232 i‡(
q
)

11234 
q
->
√xt
 = 
ñt
;

11235 
ñt
->
¥ev
 = 
q
;

11236 
ñt
->
√xt
 = 
p
;

11237 
p
->
¥ev
 = 
ñt
;

11241 
ñt
->
√xt
 = 
f‰ìli°_hód
[
thªadid
];

11242 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11243 
ñt
->
¥ev
 = 
NULL
;

11244 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11249 
ñt
->
√xt
 = 
NULL
;

11250 
ñt
->
¥ev
 = 
NULL
;

11251 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11252 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11254 
‰egfûe_˛
[
thªadid
]--;

11255 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11256 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11261 
	`ªcFªeRegLi°
 (
thªadid
)

11263 
li°ñt
 *
p
;

11264 
li°ñt
 *
ãmp
;

11265 
cou¡
 = 0;

11266 
i
;

11268 
p
 = 
i‰ìli°_hód
[
thªadid
];

11269 i‡(
p
)

11271 
cou¡
++;

11272 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11274 
cou¡
++;

11275 
ãmp
 = 
p
;

11276 
p
 =Ö->
√xt
;

11277 
	`‰ì
 (
ãmp
);

11281 
p
 = 
f‰ìli°_hód
[
thªadid
];

11282 i‡(
p
)

11284 
cou¡
++;

11285 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11287 
cou¡
++;

11288 
ãmp
 = 
p
;

11289 
p
 =Ö->
√xt
;

11290 
	`‰ì
 (
ãmp
);

11294 
	`ªg_öô
 (
thªadid
);

11298 
	`numFªeReg
 (
thªadid
)

11300 
li°ñt
 *
p
;

11301 
cou¡
 = 0;

11303 
p
 = 
i‰ìli°_hód
[
thªadid
];

11304 i‡(
p
)

11306 
cou¡
++;

11307 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11309 
cou¡
++;

11310 
p
 =Ö->
√xt
;

11314 
p
 = 
f‰ìli°_hód
[
thªadid
];

11315 i‡(
p
)

11317 
cou¡
++;

11318 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11320 
cou¡
++;

11321 
p
 =Ö->
√xt
;

11324  
cou¡
;

11329 
	`c›y_to
 (
thªadid
)

11331 
i
;

11333 
c⁄ãxt
 *
cuºít
;

11335 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11337 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11339 
cuºít
->
…›m≠_chk
[
i
] = cuºít->
…›m≠
[i];

11341 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11343 i‡(
cuºít
->
±ﬁm≠
[
i
].
thªadid
 ==Åhreadid)

11345 
cuºít
->
±ﬁm≠_chk
[
i
].
Ãeg
 = cuºít->
±ﬁm≠
[i].lreg;

11346 
cuºít
->
±ﬁm≠_chk
[
i
].
thªadid
 = cuºít->
±ﬁm≠
[i].threadid;

11353 
	`c›y_‰om
 (
thªadid
)

11355 
i
;

11357 
c⁄ãxt
 *
cuºít
;

11359 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11361 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11363 
cuºít
->
…›m≠
[
i
] = cuºít->
…›m≠_chk
[i];

11369 
	`b¥ed_öô
 (
i
)

11372 i‡(
ruu_bønch_≥«…y
 < 1)

11373 
	`Áèl
 ("mis-predictionÖenalty must beátÜeast 1 cycle");

11375 i‡(
„tch_•ìd
 != 1)

11376 
	`Áèl
 ("front-end speed must be 1 for SMT version of simulator");

11378 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

11380 i‡(
bimod_√…
 != 1)

11381 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11382 i‡(
btb_√…
 != 2)

11383 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11384 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

11385  
bimod_c⁄fig
[0],

11391  
btb_c⁄fig
[0],

11392  
btb_c⁄fig
[1],

11393  
øs_size
);

11395 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

11398 i‡(
twﬁev_√…
 != 4)

11399 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11400 i‡(
btb_√…
 != 2)

11401 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11403 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

11405  
twﬁev_c⁄fig
[0],

11406  
twﬁev_c⁄fig
[1],

11408  
twﬁev_c⁄fig
[2],

11409  
twﬁev_c⁄fig
[3],

11410  
btb_c⁄fig
[0],

11411  
btb_c⁄fig
[1],

11412  
øs_size
);

11414 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

11417 i‡(
twﬁev_√…
 != 4)

11418 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11419 i‡(
bimod_√…
 != 1)

11420 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11421 i‡(
comb_√…
 != 1)

11422 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

11423 i‡(
btb_√…
 != 2)

11424 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11426 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

11427  
bimod_c⁄fig
[0],

11428  
twﬁev_c⁄fig
[0],

11429  
twﬁev_c⁄fig
[1],

11430  
comb_c⁄fig
[0],

11431  
twﬁev_c⁄fig
[2],

11432  
twﬁev_c⁄fig
[3],

11433  
btb_c⁄fig
[0],

11434  
btb_c⁄fig
[1],

11435  
øs_size
);

11438 i‡(!
b¥ed_•ec_›t
)

11439 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

11440 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "ID"))

11441 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

11442 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "WB"))

11443 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

11445 
	`Áèl
 ("bad speculative update stage specifier, use {ID|WB}");

11447 
	`b¥ed_ªg_°©s
 (
thec⁄ãxts
[
i
]->
¥ed
, 
sim_sdb
, i);

11452 
	`ªg_öô
 (
thªadid
)

11454 
i
;

11456 
c⁄ãxt
 *
cuºít
;

11458 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11460 
i‰ìli°_hód
[
thªadid
] = 
NULL
;

11461 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11462 
f‰ìli°_hód
[
thªadid
] = 
NULL
;

11463 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11465 #ifde‡ 
REMOVE_REG_COUNT


11468 
úegfûe
 = 
IPREG_size
;

11469 
‰egfûe
 = 
FPREG_size
;

11471 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11473 
	`‰ìli°_ö£π
 (
i
, 
thªadid
);

11474 
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 = 0;

11475 
cuºít
->
±ﬁm≠
[
i
].
thªadid
 = -1;

11477 
úegfûe_˛
[
thªadid
] = 0;

11478 
‰egfûe_˛
[
thªadid
] = 0;

11479 #i‚de‡ 
NO_REG_INIT


11481 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11482 
i
 = 0; i < 63; i++)

11484 
cuºít
->
…›m≠
[
i
] = 
	`gë_‰ì_ªg
 (i, 
thªadid
);

11486 
i
 = 63; i < 
MD_TOTAL_REGS
; i++)

11487 
cuºít
->
…›m≠
[
i
] = 0;

11494 
	`ªg_cou¡
 ()

11497 
úegfûe
 = 0;

11498 
‰egfûe
 = 0;

11499 
i
, 
j
;

11500 
c⁄ãxt
 *
cuºít
;

11502 
j
 = 0; j < 
numc⁄ãxts
; j++)

11504 
cuºít
 = 
thec⁄ãxts
[
j
];

11505 
i
 = 1; i < 
p_tŸÆ_ªgs
; i++)

11507 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 0Ë&& (cuºít->±ﬁm≠[i].Ãeg < 32Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11509 
úegfûe
++;

11511 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 31Ë&& (cuºít->±ﬁm≠[i].Ãeg < 63Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11513 
‰egfûe
++;

11517 i‡(
úegfûe
 < 31)

11518 
	`∑nic
 ("phys iregfileÜessÅhan 31");

11519 i‡(
‰egfûe
 < 31)

11520 
	`∑nic
 ("phys fregfileÜessÅhan 31");

11525 
	`öôP¨ÆÀlSimuœti⁄
 ()

11527 
˙t
, 
cx
, 
j
;

11528 
x
, 
y
, 
z
, 
max
;

11530 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

11531 
thec⁄ãxts
[
˙t
]->
°¨t_cy˛e
 = 
sim_cy˛e
;

11533 
cx
 = 0; cx < 
numc⁄ãxts
; cx++)

11535 
thec⁄ãxts
[
cx
]->
„tch_num
 = 0;

11536 
thec⁄ãxts
[
cx
]->
„tch_èû
 =Åhec⁄ãxts[cx]->
„tch_hód
 = 0;

11537 
thec⁄ãxts
[
cx
]->
„tch_¥ed_PC
 =Åhec⁄ãxts[cx]->
„tch_ªgs_PC
 =Åhec⁄ãxts[cx]->
ªgs
.
ªgs_NPC
;

11538 
cﬁÀ˘SètSt›
[
cx
] = 0;

11539 
thec⁄ãxts
[
cx
]->
sim_num_ö¢
 = 0;

11541 
cﬁÀ˘SètB¨rõr
 = 0;

11542 
ÆlF‹ked
 = 1;

11589 
	`checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
)

11592 
RUU_°©i⁄
 *
rs
 = &
cuºít
->
LSQ
[
i
];

11593 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

11595 i‡(
i
 !
cuºít
->
LSQ_hód
)

11599 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

11601 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
Ë&& (
	`STORE_ADDR_READY
 (&cuºít->LSQ[i])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->threadid))

11603 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

11604 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

11605 
md_addr_t
 
qwAddr1
 = 
rs
->
addr
 & ~(
nW
 - 1);

11606 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

11608 i‡(
qwAddr1
 =
qwAddr2
)

11610 i‡(
cuºít
->
LSQ
[
i
].
issued
)

11616 i‡(
i
 =
cuºít
->
LSQ_hód
)

11626 
	`£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
)

11628 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11629 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
, 
j
, 
°‹eCou¡
 = 
m_L1WBufC¡
[
thªadid
];

11630 
wb_mem_ít
 *
lök
;

11632 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

11633 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

11634 
shi·_right
 = 0;

11637 
£qC⁄sRïœy
[
cuºít
->
a˘uÆid
]++;

11639 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

11640 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

11641 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

11642 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

11644 i‡(!
cuºít
->
RUU_num
)

11645 
	`∑nic
 ("empty RUU");

11647 
RUU_ödex
 !
ª∂ay_ödex
)

11650 i‡(!
ãmp_RUU_num
)

11651 
	`∑nic
 ("empty RUU");

11654 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

11656 i‡(
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& 
F_STORE
)

11658 
width
 = 
	`GëMemAccWidth
(
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

11660 i‡((
width
 & (width - 1)Ë=0 && (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & (width - 1)Ë=0 && !cuºít->LSQ[LSQ_ödex].
isPª„tch
)

11661 
°‹eCou¡
++;

11663 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

11664 
ãmp_LSQ_num
--;

11666 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11667 
ãmp_RUU_num
--;

11670 
RUU_ödex
 !
cuºít
->
RUU_èû
)

11673 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

11675 
cuºít
->
iissueq_thrd
--;

11676 
iissueq
--;

11677 
iissueq_˛
[
cuºít
->
id
]--;

11678 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

11680 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

11682 
cuºít
->
fissueq_thrd
--;

11683 
fissueq
--;

11684 
fissueq_˛
[
cuºít
->
id
]--;

11685 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

11688 
cuºít
->
sim_num_ö¢
--;

11689 
sim_num_ö¢
--;

11690 
£qC⁄sIn¢Rïœy
[
cuºít
->
a˘uÆid
]++;

11692 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

11694 i‡(!
ãmp_LSQ_num
)

11695 
	`∑nic
 ("RUUánd LSQ out of sync");

11697 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

11699 
cuºít
->
iissueq_thrd
--;

11700 
iissueq
--;

11701 
iissueq_˛
[
cuºít
->
id
]--;

11702 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

11704 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

11706 
cuºít
->
fissueq_thrd
--;

11707 
fissueq
--;

11708 
fissueq_˛
[
cuºít
->
id
]--;

11709 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

11712 
i
 = 0; i < 
MAX_ODEPS
; i++)

11714 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

11715 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

11718 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
 || cuºít->LSQ[LSQ_ödex].› =
STQ_C
)

11720 
cuºít
->
waôF‹STLC
 = 0;

11722 #ifde‡
DIRECTORY


11723 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

11724 if(
m©chnum
)

11726 
m©chnum
 = matchnum-1;

11727 
RUU_°©i⁄
 *
rs_rob
 = &
cuºít
->
RUU
[
RUU_ödex
];

11728 
RUU_°©i⁄
 *
rs_lsq
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

11730 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
rs
 =
rs_rob
 || cache_dl1[thªadid]->mshr->mshrE¡ry[m©chnum].r†=
rs_lsq
)

11731 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
evít
->
rs
 = 
NULL
;

11733 
RS_li°
 *
cur
 = 
rs_ˇche_li°
[
thªadid
][
m©chnum
];

11735 
cur
)

11737 if(
cur
->
rs
 =
rs_rob
 || cur->r†=
rs_lsq
)

11738 
cur
->
rs
 = 
NULL
;

11739 
cur
 = cur->
√xt
;

11743 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

11744 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

11745 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

11746 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

11747 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

11749 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

11750 
cuºít
->
m_shLQNum
--;

11752 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

11754 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

11755 
cuºít
->
m_shSQNum
--;

11758 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

11759 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

11760 
cuºít
->
LSQ_num
--;

11761 
ãmp_LSQ_num
--;

11766 
i
 = 0; i < 
MAX_ODEPS
; i++)

11768 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

11769 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

11771 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

11772 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

11773 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

11774 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

11775 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11776 
cuºít
->
RUU_num
--;

11778 
cuºít
->
RUU_èû
 = 
ª∂ay_ödex
;

11781 
lök
 = 
cuºít
->
WBèbÀTaû
;

11783 i‡(
lök
 =
NULL
 || 
°‹eCou¡
 == 0)

11785 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
 = 
NULL
;

11786 i‡(
lök
 !
NULL
)

11788 
lök
 !
NULL
)

11790 
cuºít
->
numOfWBE¡ry
--;

11791 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

11792 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

11793 
lök
 =Üök->
¥ev
;

11794 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

11800 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
;

11801 
°‹eCou¡
--;

11802 
°‹eCou¡
)

11804 
cuºít
->
WBèbÀHód
 = cuºít->WBèbÀHód->
¥ev
;

11805 
°‹eCou¡
--;

11807 
lök
 = 
cuºít
->
WBèbÀHód
->
¥ev
;

11808 
cuºít
->
WBèbÀHód
->
¥ev
 = 
NULL
;

11810 
lök
 !
NULL
)

11812 
cuºít
->
numOfWBE¡ry
--;

11813 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

11814 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

11815 
lök
 =Üök->
¥ev
;

11816 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

11820 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11822 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

11823 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 
sim_cy˛e
;

11826 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

11827 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

11830 
md_›code
 
›
;

11832 
j
 = 
cuºít
->
„tch_num
;

11833 
i
 = 
cuºít
->
„tch_hód
; 
j
 > 0;)

11835 
	`MD_SET_OPCODE
 (
›
, 
cuºít
->
„tch_d©a
[
i
]->
IR
);

11836 
i
 = (ò+ 1Ë& (
ruu_ifq_size
 - 1);

11837 
j
--;

11839 
cuºít
->
„tch_num
 = 0;

11840 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

11841 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

11849 
	`fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
)

11852 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11853 
RUU_°©i⁄
 *
rs
;

11854 
i
, 
RUU_ödex
;

11856 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

11858 
RUU_ödex
 !
ª∂ay_ödex
)

11860 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11863 
RUU_ödex
 !
cuºít
->
RUU_èû
)

11865 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ªcovî_ö°
 && !cuºít->RUU[RUU_ödex].
com∂ëed
)

11867 
rs
 = &
cuºít
->
RUU
[
RUU_ödex
];

11868 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

11869 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

11870 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

11873 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11877 #ifde‡
SMD_USE_WRITE_BUF


11880 
	`ruu_ªÀa£_wrôebuf„r
 ()

11882 
thªadid
, 
i
, 
˙t
, 
j
;

11884 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11886 
j
 = 
m_L1WBufC¡
[
thªadid
];

11887 
˙t
 = 0;

11888 
i
 = 
m_L1WBuf_hód
[
thªadid
];

11890 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11891 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11893 
˙t
 !
j
)

11895 i‡(
sim_cy˛e
 >
m_L1WBuf
[
thªadid
][
i
].
föishTime
 && m_L1WBuf[thªadid][i].
wrôeSèπed
)

11897 if(
m_L1WBuf
[
thªadid
][
i
].
isMiss
 && 
	`MSHR_block_check
(
ˇche_dl1
[thªadid]->
mshr
, m_L1WBuf[thªadid][i].
addr
, cache_dl1[thªadid]->
£t_shi·
))

11899 if(!
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
)

11900 
	`com∂ëeSt‹e
(
thªadid
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
	`GëMemAccWidth
(m_L1WBuf[thªadid][i].
›
), 0);

11902 
m_L1WBufC¡
[
thªadid
]--;

11903 
m_L1WBuf_hód
[
thªadid
] = (m_L1WBuf_hód[thªadid] + 1Ë% 
SMD_L1_WBUF_SIZE
;

11904 
i
 = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
;

11905 
˙t
++;

11911 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11912 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11917 
	`ruu_wrôe_‰om_Wrôebuf„r
 ()

11919 
thªadid
, 
i
, 
˙t
;

11920 
ªs_ãm∂©e
 *
fu
;

11921 
œt
 = 0;

11922 
c⁄ãxt
 *
cuºít
;

11924 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11926 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11928 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11929 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11931 
˙t
 = 0, 
i
 = 
m_L1WBuf_hód
[
thªadid
]; c¡ < 
m_L1WBufC¡
[thªadid]; c¡++, i = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
)

11933 
œt
 = 0;

11935 i‡(!
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
)

11937 #ifdef 
DCACHE_MSHR


11938 
m©chnum
;

11939 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

11940 if(
m©chnum
)

11942 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

11946 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
m_L1WBuf
[
thªadid
][
i
].
›
),Åhreadid);

11948 i‡(
fu


11949 #ifdef 
DCACHE_MSHR


11950 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid)

11954 i‡(
fu
->
ma°î
->
busy
)

11955 
	`∑nic
 ("functional unitálready in use");

11957 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

11958 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

11959 
fu
->
ma°î
->
du∂iˇã
 = 0;

11961 i‡(
ˇche_dl1
[
thªadid
])

11963 
dˇche_ac˚ss
++;

11964 
cuºít
->
dˇche_ac˚ss
++;

11966 
övÆid©eOthîCache
 = 0;

11968 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

11970 if(
m_L1WBuf
[
thªadid
][
i
].
›
 =
STL_C
 && m_L1WBuf[thªadid][i].
commôD⁄e
)

11972 
œt
 = 
ˇche_dl1_œt
;

11976 if(
	`md_vÆid_addr
 (
m_L1WBuf
[
thªadid
][
i
].
addr
, 
cuºít
->
ma°îid
))

11977 #ifde‡
DIRECTORY


11978 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid);

11980 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

11984 #ifdef 
DCACHE_MSHR


11985 if(
œt
 > 
ˇche_dl1_œt
)

11987 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
œt
, 0, 
NULL
);

11988 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 1;

11990 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 
sim_cy˛e
;

11993 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 1;

12004 #ifdef 
EDA


12006 
	`assignFlﬂtRegs
 (
c⁄ãxt
 * 
cuºít
, 
RUU_°©i⁄
 *
rs
, 
A‹B
, 
dúty
)

12008 
md_›code
 
›
;

12009 
x
;

12010 
md_ö°_t
 
ö°
;

12012 
›
 = 
rs
->op;

12013 
ö°
 = 
rs
->
IR
;

12015 i‡(
A‹B
 == 2)

12017 
›
)

12019 
ITOFS
:

12020 
ITOFT
:

12021 
CVTTQ
:

12022 
CVTLQ
:

12023 
CPYS
:

12024 
CPYSN
:

12025 
CPYSE
:

12026 
CVTQL
:

12027 i‡(
dúty
)

12028 
	`SET_FPR_Q
 (
RC
, 
rs
->
pois⁄
[2].
d©a
);

12030 
	`SET_FPR_Q
 (
RC
, 
rs
->
vÆ_rc
);

12033 i‡(
dúty
)

12034 
	`SET_FPR
 (
RC
, 
rs
->
pois⁄
[2].
d©a
);

12036 
	`SET_FPR
 (
RC
, 
rs
->
vÆ_rc
);

12042 i‡(
A‹B
)

12044 
x
 = 
RB
;

12048 
x
 = 
RA
;

12051 
›
)

12053 
LDS
:

12054 
LDT
:

12055 
MF_FPCR
:

12057 
STS
:

12058 
STT
:

12059 
ITOFS
:

12060 
ITOFT
:

12061 
CMPTUN
:

12062 
CMPTEQ
:

12063 
CVTQS
:

12064 
CVTQT
:

12065 
CVTLQ
:

12066 
CVTQL
:

12067 
CPYS
:

12068 
CPYSN
:

12069 
CPYSE
:

12070 
MT_FPCR
:

12071 
FTOIT
:

12072 
FTOIS
:

12073 i‡(
dúty
)

12075 i‡(
A‹B
)

12076 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12078 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12082 i‡(
A‹B
)

12083 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_rb
);

12085 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_ø
);

12088 
FCMOVEQ
:

12089 
FCMOVGE
:

12090 
FCMOVGT
:

12091 
FCMOVLE
:

12092 
FCMOVLT
:

12093 
FCMOVNE
:

12094 i‡(
dúty
)

12096 i‡(
A‹B
)

12097 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12099 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12103 i‡(
A‹B
)

12104 
	`SET_FPR
 (
x
, 
rs
->
vÆ_rb
);

12106 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_ø
);

12110 i‡(
dúty
)

12112 i‡(
A‹B
)

12113 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12115 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12119 i‡(
A‹B
)

12120 
	`SET_FPR
 (
x
, 
rs
->
vÆ_rb
);

12122 
	`SET_FPR
 (
x
, 
rs
->
vÆ_ø
);

12130 
	`ˇlcuœãWr⁄gVÆue
 (
RUU_°©i⁄
 *
rs
)

12132 
i
, 
j
, 
k
, 
x
, 
y
, 
z
;

12133 
n_di•©ched
;

12134 
md_ö°_t
 
ö°
;

12135 
md_›code
 
›
;

12136 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

12137 
md_addr_t
 
èrgë_PC
;

12138 
md_addr_t
 
addr
;

12140 
byã_t
 
ãmp_byã
;

12141 
hÆf_t
 
ãmp_hÆf
;

12142 
w‹d_t
 
ãmp_w‹d
;

12144 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12145 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12147 
md_Áu…_ty≥
 
Áu…
;

12149 
pﬁluãd
[66];

12151 
qw‹d_t
 
vÆ_ø
, 
vÆ_rb
, 
vÆ_rc
, 
vÆ_ø_ªsu…
;

12152 
qw‹d_t
 
ªgVÆ
;

12153 
c⁄ãxt
 *
cuºít
, 
˘x
;

12154 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

12156 
˘x
 = *
thec⁄ãxts
[
rs
->
thªadid
];

12157 
cuºít
 = &
˘x
;

12158 
	`mem£t
 (&
cuºít
->
ªgs
, 0,  (current->regs));

12161 
ö°
 = 
rs
->
IR
;

12162 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12163 
cuºít
->
ªgs
.
ªgs_PC
 = 
rs
->
PC
;

12164 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

12166 i‡(!
rs
->
pois⁄
[0].
dúty
)

12168 i‡(
rs
->
ö1
 < 32)

12169 
	`SET_GPR
 (31 - 
rs
->
ö1
,Ñs->
vÆ_ø
);

12171 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 0, 0);

12175 i‡(
rs
->
ö1
 < 32)

12176 
	`SET_GPR
 (31 - 
rs
->
ö1
,Ñs->
pois⁄
[0].
d©a
);

12178 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 0, 1);

12180 i‡(!
rs
->
pois⁄
[1].
dúty
)

12182 i‡(
rs
->
ö2
 < 32)

12183 
	`SET_GPR
 (31 - 
rs
->
ö2
,Ñs->
vÆ_rb
);

12185 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 1, 0);

12189 i‡(
rs
->
ö2
 < 32)

12190 
	`SET_GPR
 (31 - 
rs
->
ö2
,Ñs->
pois⁄
[1].
d©a
);

12192 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 1, 1);

12196 
›
)

12198 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12199 
OP
: \

12201 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

12202 
out1
 = 
O1
; 
out2
 = 
O2
; \

12203 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

12204 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

12205 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

12206 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

12207 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

12208 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

12210 
	`SYMCAT
(
OP
,
_IMPL
); \

12212 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12213 
OP
: \

12215 
›
 = 
MD_NOP_OP
; \

12217 
out1
 = 
NA
; 
out2
 = NA; \

12218 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

12221 
	#CONNECT
(
OP
Ë

	)

12227 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12229 i‡(!
cuºít
->
•ec_mode
) \

12230 
Áu…
 = (
FAULT
); \

12234 
	#THREADID
 (
cuºít
->
id
)

	)

12235 
	~"machöe.def
"

12238 
›
 = 
MD_NOP_OP
;

12240 
out1
 = 
NA
;

12241 
out2
 = 
NA
;

12242 
ö1
 = 
NA
;

12243 
ö2
 = 
NA
;

12244 
ö3
 = 
NA
;

12248 i‡(
out1
 < 32)

12249 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

12251 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

12253 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

12254 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

12256 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

12258 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
 && !rs->
•ec_mode
 && !rs->
isWr⁄gP©h
)

12260 
rs
->
ch™geS≥cMode
 = 0;

12261 i‡(
rs
->
ÆtPC
 !rs->
√xt_PC
)

12263 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 =
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 =rs->
√xt_PC
))

12265 
rs
->
ch™geS≥cMode
 = 1;

12268 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 =
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 !rs->
√xt_PC
))

12270 
rs
->
ch™geS≥cMode
 = 2;

12276 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 !
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 =rs->
√xt_PC
))

12278 
rs
->
ch™geS≥cMode
 = 3;

12279 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

12282 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 !
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 !rs->
√xt_PC
))

12284 
rs
->
ch™geS≥cMode
 = 4;

12285 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

12292 i‡(
rs
->
ó_comp
)

12294 
rs
->
pois⁄
[2].
dúty
 = 1;

12295 
rs
->
pois⁄
[2].
d©a
 = 
addr
;

12297 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_STORE
)

12300 i‡(
vÆ_rc
 !
rs
->val_rc)

12302 
rs
->
pois⁄
[2].
dúty
 = 1;

12303 
rs
->
pois⁄
[2].
d©a
 = 
vÆ_rc
;

12307 
rs
->
pois⁄
[2].
dúty
 = 0;

12308 
rs
->
pois⁄
[2].
d©a
 = 0;

12310 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

12316 #ifdef 
COLLECT_STAT_STARTUP


12318 
	`f°fwd_cﬁÀ˘Sèts
()

12320 
b¨rõrCou¡
 = 0;

12321 
thªadid
;

12323 
	`¥ötf
("Fast-forwardingÅillÅhe collect stats system call\n");

12324 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12327 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12329 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12330 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12333 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12334 
	`∑nic
 ("Fast forwardÉrror\n");

12336 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12337 
	`∑nic
 ("Fast forwardÉrror\n");

12343 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12345 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12348 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12349 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12351 
md_ö°_t
 
ö°
;

12352 
md_›code
 
›
;

12353 
md_addr_t
 
èrgë_PC
;

12354 
md_addr_t
 
addr
;

12355 
is_wrôe
;

12356 
byã_t
 
ãmp_byã
;

12357 
hÆf_t
 
ãmp_hÆf
;

12358 
w‹d_t
 
ãmp_w‹d
;

12360 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12361 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12364 
md_Áu…_ty≥
 
Áu…
;

12367 #i‚de‡
PARALLEL_EMUL


12371 #ifde‡
PARALLEL_EMUL


12372 
sim_num_ö¢
++;

12375 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12376 #ifde‡
TARGET_ALPHA


12377 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12381 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12382 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12385 
addr
 = 0;

12386 
is_wrôe
 = 
FALSE
;

12389 
Áu…
 = 
md_Áu…_n⁄e
;

12392 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12395 
›
)

12397 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12398 
OP
: \

12399 
	`SYMCAT
(
OP
,
_IMPL
); \

12401 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12402 
OP
: \

12403 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12404 
	#CONNECT
(
OP
)

	)

12405 #unde‡
DECLARE_FAULT


12406 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12407 { 
Áu…
 = (
FAULT
); ; }

12408 
	~"machöe.def
"

12410 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12413 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12414 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12417 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12419 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12421 
is_wrôe
 = 
TRUE
;

12422 #i‚de‡
PARALLEL_EMUL


12423 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12426 #i‚de‡
PARALLEL_EMUL


12428 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12433 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12434 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12437 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12438 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12440 #i‚de‡
PARALLEL_EMUL


12441 i‡((
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12443 if(
cuºít
->
b¨rõrRóched
 == 2)

12445 
b¨rõrCou¡
++;

12446 
	`¥ötf
("Cros£dÅhêb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12448 
cuºít
->
b¨rõrRóched
 = 0;

12452 if(
cﬁÀ˘_°©s
)

12454 
	`¥ötf
("Föished fa°-f‹w¨dögáàb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12464 
	`f°fwd_föeAdju°
 ()

12466 
thªadid
;

12467 
cou¡
 = 0;

12468 
tŸÆIå
 = 2;

12469 
¥Id
 = 0;

12470 
md_addr_t
 
ãmpPC
[3] = { 0, 0, 0 };

12472 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12475 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12477 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12478 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12481 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12482 
	`∑nic
 ("Fast forwardÉrror\n");

12484 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12485 
	`∑nic
 ("Fast forwardÉrror\n");

12487 if(
ûök_run
)

12489 
cﬁÀ˘_°©s
 = 1;

12494 #ifdef 
EDA


12495 
¥Id
 = 0;ÖrId < 3;ÖrId++)

12498 
cou¡
 = 0;

12501 
thªadid
 = 0;thªadid < 
numc⁄ãxts
;Åhreadid = (threadid +Çumcontexts + 1) %Çumcontexts)

12503 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12505 i‡(
cuºít
->
ma°îid
 !
¥Id
)

12509 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12510 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12512 
cou¡î_t
 
icou¡
 = 0;

12513 
md_ö°_t
 
ö°
;

12514 
md_›code
 
›
;

12515 
md_addr_t
 
èrgë_PC
;

12516 
md_addr_t
 
addr
;

12517 
is_wrôe
;

12518 
byã_t
 
ãmp_byã
;

12519 
hÆf_t
 
ãmp_hÆf
;

12520 
w‹d_t
 
ãmp_w‹d
;

12522 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12523 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12526 
md_Áu…_ty≥
 
Áu…
;

12530 
icou¡
++;

12532 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12533 #ifde‡
TARGET_ALPHA


12534 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12538 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12539 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12542 
addr
 = 0;

12543 
is_wrôe
 = 
FALSE
;

12546 
Áu…
 = 
md_Áu…_n⁄e
;

12549 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12552 
›
)

12554 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12555 
OP
: \

12556 
	`SYMCAT
(
OP
,
_IMPL
); \

12558 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12559 
OP
: \

12560 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12561 
	#CONNECT
(
OP
)

	)

12562 #unde‡
DECLARE_FAULT


12563 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12564 { 
Áu…
 = (
FAULT
); ; }

12565 
	~"machöe.def
"

12567 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12570 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12571 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12574 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12576 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12578 
is_wrôe
 = 
TRUE
;

12579 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12582 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12586 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12587 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12590 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12591 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12593 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12596 i‡(
cou¡
 =0 && 
cuºít
->
°¨tRóched
)

12598 
cuºít
->
°¨tRóched
 = 0;

12600 if(
cuºít
->
jobThdId
 != 0)

12601 
	`∑nic
 ("CanÇot beÑeached by otherÅhreads");

12603 
cou¡
++;

12607 if(
cou¡
 == 5)

12610 if(
cou¡
 > 0 && count < 6)

12611 
cou¡
++;

12613 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12617 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12619 if(
cuºít
->
b¨rõrRóched
 =2 && cuºít->
jobThdId
 !(
THREADS_PER_JOB
-1))

12620 
	`∑nic
("End of barrierÑeached with wrong id");

12622 
cuºít
->
b¨rõrRóched
 = 0;

12626 i‡(
cou¡
 == 5)

12628 
cou¡
++;

12629 
ãmpPC
[
cuºít
->
ma°îid
] = cuºít->
ªgs
.
ªgs_PC
;

12633 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12635 i‡(
cuºít
->
jobThdId
 =(
THREADS_PER_JOB
-1))

12642 
	`¥ötf
("Job %d synchr⁄ized\n", 
¥Id
);

12643 
	`fÊush
(
°dout
);

	@options.c

91 
	~<°dio.h
>

92 
	~<°dlib.h
>

93 #i‚de‡
_MSC_VER


94 
	~<uni°d.h
>

96 
	#chdú
 
_chdú


	)

97 
	#gëcwd
 
_gëcwd


	)

99 
	~<°rög.h
>

100 
	~<˘y≥.h
>

101 
	~<Êﬂt.h
>

103 
	~"ho°.h
"

104 
	~"misc.h
"

105 
	~"›ti⁄s.h
"

107 #ifde‡
FIX_8_CLUSTER_BUG


108 
›t_odb_t
 *
	godb
 = 
NULL
;

112 
›t_odb_t
 *

113 
	$›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
)

115 #i‚de‡
FIX_8_CLUSTER_BUG


116 
›t_odb_t
 *
odb
 = 
NULL
;

119 
odb
 = (
›t_odb_t
 *)
	`ˇŒoc
(1, (opt_odb_t));

120 i‡(!
odb
)

121 
	`Áèl
("out of virtual memory");

123 
odb
->
›ti⁄s
 = 
NULL
;

124 
odb
->
‹ph™_‚
 = orphan_fn;

125 
odb
->
hódî
 = 
NULL
;

126 
odb
->
nŸes
 = 
NULL
;

128  
odb
;

129 
	}
}

133 
	$›t_dñëe
(
›t_odb_t
 *
odb
)

135 
›t_›t_t
 *
›t
, *
›t_√xt
;

136 
›t_nŸe_t
 *
nŸe
, *
nŸe_√xt
;

139 
›t
=
odb
->
›ti⁄s
; o±; o±=
›t_√xt
)

141 
›t_√xt
 = 
›t
->
√xt
;

142 
›t
->
√xt
 = 
NULL
;

143 
	`‰ì
(
›t
);

147 
nŸe
 = 
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸê
nŸe_√xt
)

149 
nŸe_√xt
 = 
nŸe
->
√xt
;

150 
nŸe
->
√xt
 = 
NULL
;

151 
	`‰ì
(
nŸe
);

153 
odb
->
nŸes
 = 
NULL
;

155 
	`‰ì
(
odb
);

156 
	}
}

160 
	$add_›ti⁄
(
›t_odb_t
 *
odb
,

161 
›t_›t_t
 *
›t
)

163 
›t_›t_t
 *
ñt
, *
¥ev
;

166 i‡(
›t
->
«me
[0] != '-')

167 
	`∑nic
("›ti⁄ `%s' mu° sèπ wôhá `-'", 
›t
->
«me
);

170 
¥ev
=
NULL
, 
ñt
=
odb
->
›ti⁄s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

173 i‡(
ñt
->
«me
[0] =
›t
->«me[0] && !
	`°rcmp
(elt->name, opt->name))

174 
	`∑nic
("›ti⁄ `%s' i†mu…ùly deföed", 
›t
->
«me
);

177 i‡(
¥ev
 !
NULL
)

178 
¥ev
->
√xt
 = 
›t
;

180 
odb
->
›ti⁄s
 = 
›t
;

181 
›t
->
√xt
 = 
NULL
;

182 
	}
}

184 #ifde‡
FIX_8_CLUSTER_BUG


185 
›t_›t_t
 *
	g›t
 = 
NULL
;

189 
	$›t_ªg_öt
(
›t_odb_t
 *
odb
,

190 *
«me
,

191 *
desc
,

192 *
v¨
,

193 
def_vÆ
,

194 
¥öt
,

195 *
f‹m©
)

197 #i‚de‡
FIX_8_CLUSTER_BUG


198 
›t_›t_t
 *
›t
 = 
NULL
;

201 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

202 i‡(!
›t
)

203 
	`Áèl
("out of virtual memory");

205 
›t
->
«me
 =Çame;

206 
›t
->
desc
 = desc;

207 
›t
->
nv¨s
 = 1;

208 
›t
->
√…
 = 
NULL
;

209 
›t
->
f‹m©
 = format ? format : "%12d";

210 
›t
->
oc
 = 
oc_öt
;

211 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

212 
›t
->
¥öt
 =Örint;

213 
›t
->
ac¸ue
 = 
FALSE
;

216 
›t
->
√xt
 = 
NULL
;

217 
	`add_›ti⁄
(
odb
, 
›t
);

220 *
v¨
 = 
def_vÆ
;

221 
	}
}

225 
	$›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

226 *
«me
,

227 *
desc
,

228 *
v¨s
,

229 
nv¨s
,

230 *
√…
,

231 *
def_vÆ
,

232 
¥öt
,

233 *
f‹m©
,

234 
ac¸ue
)

236 
i
;

237 #i‚de‡
FIX_8_CLUSTER_BUG


238 
›t_›t_t
 *
›t
 = 
NULL
;

241 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

242 i‡(!
›t
)

243 
	`Áèl
("out of virtual memory");

245 
›t
->
«me
 =Çame;

246 
›t
->
desc
 = desc;

247 
›t
->
nv¨s
 =Çvars;

248 
›t
->
√…
 =Çelt;

249 
›t
->
f‹m©
 = format ? format : "%d";

250 
›t
->
oc
 = 
oc_öt
;

251 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
 = 
v¨s
;

252 
›t
->
¥öt
 =Örint;

253 
›t
->
ac¸ue
 =áccrue;

256 
›t
->
√xt
 = 
NULL
;

257 
	`add_›ti⁄
(
odb
, 
›t
);

260 
i
=0; i < *
√…
; i++)

261 
v¨s
[
i
] = 
def_vÆ
[i];

262 
	}
}

266 
	$›t_ªg_uöt
(
›t_odb_t
 *
odb
,

267 *
«me
,

268 *
desc
,

269 *
v¨
,

270 
def_vÆ
,

271 
¥öt
,

272 *
f‹m©
)

274 #i‚de‡
FIX_8_CLUSTER_BUG


275 
›t_›t_t
 *
›t
 = 
NULL
;

278 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

279 i‡(!
›t
)

280 
	`Áèl
("out of virtual memory");

282 
›t
->
«me
 =Çame;

283 
›t
->
desc
 = desc;

284 
›t
->
nv¨s
 = 1;

285 
›t
->
√…
 = 
NULL
;

286 
›t
->
f‹m©
 = format ? format : "%12u";

287 
›t
->
oc
 = 
oc_uöt
;

288 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

289 
›t
->
¥öt
 =Örint;

290 
›t
->
ac¸ue
 = 
FALSE
;

293 
›t
->
√xt
 = 
NULL
;

294 
	`add_›ti⁄
(
odb
, 
›t
);

297 *
v¨
 = 
def_vÆ
;

298 
	}
}

302 
	$›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

303 *
«me
,

304 *
desc
,

305 *
v¨s
,

306 
nv¨s
,

307 *
√…
,

308 *
def_vÆ
,

309 
¥öt
,

310 *
f‹m©
,

311 
ac¸ue
)

313 
i
;

314 #i‚de‡
FIX_8_CLUSTER_BUG


315 
›t_›t_t
 *
›t
 = 
NULL
;

318 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

319 i‡(!
›t
)

320 
	`Áèl
("out of virtual memory");

322 
›t
->
«me
 =Çame;

323 
›t
->
desc
 = desc;

324 
›t
->
nv¨s
 =Çvars;

325 
›t
->
√…
 =Çelt;

326 
›t
->
f‹m©
 = format ? format : "%u";

327 
›t
->
oc
 = 
oc_uöt
;

328 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
 = 
v¨s
;

329 
›t
->
¥öt
 =Örint;

330 
›t
->
ac¸ue
 =áccrue;

333 
›t
->
√xt
 = 
NULL
;

334 
	`add_›ti⁄
(
odb
, 
›t
);

337 
i
=0; i < *
√…
; i++)

338 
v¨s
[
i
] = 
def_vÆ
[i];

339 
	}
}

343 
	$›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

344 *
«me
,

345 *
desc
,

346 *
v¨
,

347 
def_vÆ
,

348 
¥öt
,

349 *
f‹m©
)

351 #i‚de‡
FIX_8_CLUSTER_BUG


352 
›t_›t_t
 *
›t
 = 
NULL
;

355 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

356 i‡(!
›t
)

357 
	`Áèl
("out of virtual memory");

359 
›t
->
«me
 =Çame;

360 
›t
->
desc
 = desc;

361 
›t
->
nv¨s
 = 1;

362 
›t
->
√…
 = 
NULL
;

363 
›t
->
f‹m©
 = format ? format : "%12.4f";

364 
›t
->
oc
 = 
oc_Êﬂt
;

365 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

366 
›t
->
¥öt
 =Örint;

367 
›t
->
ac¸ue
 = 
FALSE
;

370 
›t
->
√xt
 = 
NULL
;

371 
	`add_›ti⁄
(
odb
, 
›t
);

374 *
v¨
 = 
def_vÆ
;

375 
	}
}

379 
	$›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

380 *
«me
,

381 *
desc
,

382 *
v¨s
,

383 
nv¨s
,

384 *
√…
,

385 *
def_vÆ
,

386 
¥öt
,

387 *
f‹m©
,

388 
ac¸ue
)

390 
i
;

391 #i‚de‡
FIX_8_CLUSTER_BUG


392 
›t_›t_t
 *
›t
 = 
NULL
;

395 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

396 i‡(!
›t
)

397 
	`Áèl
("out of virtual memory");

399 
›t
->
«me
 =Çame;

400 
›t
->
desc
 = desc;

401 
›t
->
nv¨s
 =Çvars;

402 
›t
->
√…
 =Çelt;

403 
›t
->
f‹m©
 = format ? format : "%.4f";

404 
›t
->
oc
 = 
oc_Êﬂt
;

405 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = 
v¨s
;

406 
›t
->
¥öt
 =Örint;

407 
›t
->
ac¸ue
 =áccrue;

410 
›t
->
√xt
 = 
NULL
;

411 
	`add_›ti⁄
(
odb
, 
›t
);

414 
i
=0; i < *
√…
; i++)

415 
v¨s
[
i
] = 
def_vÆ
[i];

416 
	}
}

420 
	$›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

421 *
«me
,

422 *
desc
,

423 *
v¨
,

424 
def_vÆ
,

425 
¥öt
,

426 *
f‹m©
)

428 #i‚de‡
FIX_8_CLUSTER_BUG


429 
›t_›t_t
 *
›t
 = 
NULL
;

432 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

433 i‡(!
›t
)

434 
	`Áèl
("out of virtual memory");

436 
›t
->
«me
 =Çame;

437 
›t
->
desc
 = desc;

438 
›t
->
nv¨s
 = 1;

439 
›t
->
√…
 = 
NULL
;

440 
›t
->
f‹m©
 = format ? format : "%12.4f";

441 
›t
->
oc
 = 
oc_doubÀ
;

442 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

443 
›t
->
¥öt
 =Örint;

444 
›t
->
ac¸ue
 = 
FALSE
;

447 
›t
->
√xt
 = 
NULL
;

448 
	`add_›ti⁄
(
odb
, 
›t
);

451 *
v¨
 = 
def_vÆ
;

452 
	}
}

456 
	$›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

457 *
«me
,

458 *
desc
,

459 *
v¨s
,

460 
nv¨s
,

461 *
√…
,

462 *
def_vÆ
,

463 
¥öt
,

464 *
f‹m©
,

465 
ac¸ue
)

467 
i
;

468 #i‚de‡
FIX_8_CLUSTER_BUG


469 
›t_›t_t
 *
›t
 = 
NULL
;

472 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

473 i‡(!
›t
)

474 
	`Áèl
("out of virtual memory");

476 
›t
->
«me
 =Çame;

477 
›t
->
desc
 = desc;

478 
›t
->
nv¨s
 =Çvars;

479 
›t
->
√…
 =Çelt;

480 
›t
->
f‹m©
 = format ? format : "%.4f";

481 
›t
->
oc
 = 
oc_doubÀ
;

482 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = 
v¨s
;

483 
›t
->
¥öt
 =Örint;

484 
›t
->
ac¸ue
 =áccrue;

487 
›t
->
√xt
 = 
NULL
;

488 
	`add_›ti⁄
(
odb
, 
›t
);

491 
i
=0; i < *
√…
; i++)

492 
v¨s
[
i
] = 
def_vÆ
[i];

493 
	}
}

497 
	$böd_to_íum
(*
°r
,

498 **
em≠
,

499 *
evÆ
,

500 
em≠_sz
,

501 *
ªs
)

503 
i
;

506 
i
=0; i<
em≠_sz
; i++)

508 i‡(!
	`°rcmp
(
°r
, 
em≠
[
i
]))

510 i‡(
evÆ
)

513 *
ªs
 = 
evÆ
[
i
];

518 *
ªs
 = 
i
;

520  
TRUE
;

525 *
ªs
 = -1;

526  
FALSE
;

527 
	}
}

531 
	$böd_to_°r
(
vÆ
,

532 **
em≠
,

533 *
evÆ
,

534 
em≠_sz
)

536 
i
;

538 i‡(
evÆ
)

541 
i
=0; i<
em≠_sz
; i++)

543 i‡(
evÆ
[
i
] =
vÆ
)

546  
em≠
[
i
];

550  
NULL
;

555 i‡(
vÆ
 >
em≠_sz
)

558  
NULL
;

561  
em≠
[
vÆ
];

563 
	}
}

569 
	$›t_ªg_íum
(
›t_odb_t
 *
odb
,

570 *
«me
,

571 *
desc
,

572 *
v¨
,

573 *
def_vÆ
,

574 **
em≠
,

575 *
evÆ
,

576 
em≠_sz
,

577 
¥öt
,

578 *
f‹m©
)

580 
íum_vÆ
;

581 #i‚de‡
FIX_8_CLUSTER_BUG


582 
›t_›t_t
 *
›t
 = 
NULL
;

585 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

586 i‡(!
›t
)

587 
	`Áèl
("out of virtual memory");

589 
›t
->
«me
 =Çame;

590 
›t
->
desc
 = desc;

591 
›t
->
nv¨s
 = 1;

592 
›t
->
√…
 = 
NULL
;

593 
›t
->
f‹m©
 = format ? format : "%12s";

594 
›t
->
oc
 = 
oc_íum
;

595 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

596 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

597 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

598 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

599 i‡(
def_vÆ
)

601 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

602 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

605 
íum_vÆ
 = 0;

606 
›t
->
¥öt
 =Örint;

607 
›t
->
ac¸ue
 = 
FALSE
;

610 
›t
->
√xt
 = 
NULL
;

611 
	`add_›ti⁄
(
odb
, 
›t
);

614 *
v¨
 = 
íum_vÆ
;

615 
	}
}

621 
	$›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

622 *
«me
,

623 *
desc
,

624 *
v¨s
,

625 
nv¨s
,

626 *
√…
,

627 *
def_vÆ
,

628 **
em≠
,

629 *
evÆ
,

630 
em≠_sz
,

631 
¥öt
,

632 *
f‹m©
,

633 
ac¸ue
)

635 
i
, 
íum_vÆ
;

636 #i‚de‡
FIX_8_CLUSTER_BUG


637 
›t_›t_t
 *
›t
 = 
NULL
;

640 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

641 i‡(!
›t
)

642 
	`Áèl
("out of virtual memory");

644 
›t
->
«me
 =Çame;

645 
›t
->
desc
 = desc;

646 
›t
->
nv¨s
 =Çvars;

647 
›t
->
√…
 =Çelt;

648 
›t
->
f‹m©
 = format ? format : "%s";

649 
›t
->
oc
 = 
oc_íum
;

650 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

651 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 =Émap;

652 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 =Éval;

653 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 =Émap_sz;

654 i‡(
def_vÆ
)

656 i‡(!
	`böd_to_íum
(
def_vÆ
, 
em≠
, 
evÆ
, 
em≠_sz
, &
íum_vÆ
))

657 
	`Áèl
("couldÇŸ böd deÁu… vÆuêf‹ o±i⁄ `%s'", 
«me
);

660 
íum_vÆ
 = 0;

661 
›t
->
¥öt
 =Örint;

662 
›t
->
ac¸ue
 =áccrue;

665 
›t
->
√xt
 = 
NULL
;

666 
	`add_›ti⁄
(
odb
, 
›t
);

669 
i
=0; i < *
√…
; i++)

670 
v¨s
[
i
] = 
íum_vÆ
;

671 
	}
}

674 
	#NUM_FLAGS
 28

	)

675 *
	gÊag_em≠
[
NUM_FLAGS
] = {

681 
	gÊag_evÆ
[
NUM_FLAGS
] = {

688 
	$›t_ªg_Êag
(
›t_odb_t
 *
odb
,

689 *
«me
,

690 *
desc
,

691 *
v¨
,

692 
def_vÆ
,

693 
¥öt
,

694 *
f‹m©
)

696 #i‚de‡
FIX_8_CLUSTER_BUG


697 
›t_›t_t
 *
›t
 = 
NULL
;

700 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

701 i‡(!
›t
)

702 
	`Áèl
("out of virtual memory");

704 
›t
->
«me
 =Çame;

705 
›t
->
desc
 = desc;

706 
›t
->
nv¨s
 = 1;

707 
›t
->
√…
 = 
NULL
;

708 
›t
->
f‹m©
 = format ? format : "%12s";

709 
›t
->
oc
 = 
oc_Êag
;

710 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = var;

711 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

712 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

713 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

714 
›t
->
¥öt
 =Örint;

715 
›t
->
ac¸ue
 = 
FALSE
;

718 
›t
->
√xt
 = 
NULL
;

719 
	`add_›ti⁄
(
odb
, 
›t
);

722 *
v¨
 = 
def_vÆ
;

723 
	}
}

727 
	$›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

728 *
«me
,

729 *
desc
,

730 *
v¨s
,

731 
nv¨s
,

732 *
√…
,

733 *
def_vÆ
,

734 
¥öt
,

735 *
f‹m©
,

736 
ac¸ue
)

738 
i
;

739 #i‚de‡
FIX_8_CLUSTER_BUG


740 
›t_›t_t
 *
›t
 = 
NULL
;

743 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

744 i‡(!
›t
)

745 
	`Áèl
("out of virtual memory");

747 
›t
->
«me
 =Çame;

748 
›t
->
desc
 = desc;

749 
›t
->
nv¨s
 =Çvars;

750 
›t
->
√…
 =Çelt;

751 
›t
->
f‹m©
 = format ? format : "%s";

752 
›t
->
oc
 = 
oc_Êag
;

753 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
 = 
v¨s
;

754 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
 = 
Êag_em≠
;

755 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
 = 
Êag_evÆ
;

756 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
 = 
NUM_FLAGS
;

757 
›t
->
¥öt
 =Örint;

758 
›t
->
ac¸ue
 =áccrue;

761 
›t
->
√xt
 = 
NULL
;

762 
	`add_›ti⁄
(
odb
, 
›t
);

765 
i
=0; i < *
√…
; i++)

766 
v¨s
[
i
] = 
def_vÆ
[i];

767 
	}
}

771 
	$›t_ªg_°rög
(
›t_odb_t
 *
odb
,

772 *
«me
,

773 *
desc
,

774 **
v¨
,

775 *
def_vÆ
,

776 
¥öt
,

777 *
f‹m©
)

779 #i‚de‡
FIX_8_CLUSTER_BUG


780 
›t_›t_t
 *
›t
 = 
NULL
;

783 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

784 i‡(!
›t
)

785 
	`Áèl
("out of virtual memory");

787 
›t
->
«me
 =Çame;

788 
›t
->
desc
 = desc;

789 
›t
->
nv¨s
 = 1;

790 
›t
->
√…
 = 
NULL
;

791 
›t
->
f‹m©
 = format ? format : "%12s";

792 
›t
->
oc
 = 
oc_°rög
;

793 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = var;

794 
›t
->
¥öt
 =Örint;

795 
›t
->
ac¸ue
 = 
FALSE
;

798 
›t
->
√xt
 = 
NULL
;

799 
	`add_›ti⁄
(
odb
, 
›t
);

802 *
v¨
 = 
def_vÆ
;

803 
	}
}

807 
	$›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

808 *
«me
,

809 *
desc
,

810 **
v¨s
,

811 
nv¨s
,

812 *
√…
,

813 **
def_vÆ
,

814 
¥öt
,

815 *
f‹m©
,

816 
ac¸ue
)

818 
i
;

819 #i‚de‡
FIX_8_CLUSTER_BUG


820 
›t_›t_t
 *
›t
 = 
NULL
;

823 
›t
 = (
›t_›t_t
 *)
	`ˇŒoc
(1, (opt_opt_t));

824 i‡(!
›t
)

825 
	`Áèl
("out of virtual memory");

827 
›t
->
«me
 =Çame;

828 
›t
->
desc
 = desc;

829 
›t
->
nv¨s
 =Çvars;

830 
›t
->
√…
 =Çelt;

831 
›t
->
f‹m©
 = format ? format : "%s";

832 
›t
->
oc
 = 
oc_°rög
;

833 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 = 
v¨s
;

834 
›t
->
¥öt
 =Örint;

835 
›t
->
ac¸ue
 =áccrue;

838 
›t
->
√xt
 = 
NULL
;

839 
	`add_›ti⁄
(
odb
, 
›t
);

842 
i
=0; i < *
√…
; i++)

843 
v¨s
[
i
] = 
def_vÆ
[i];

844 
	}
}

848 
	$¥o˚ss_›ti⁄
(
›t_odb_t
 *
odb
,

849 
ödex
,

850 
¨gc
,

851 **
¨gv
)

853 
˙t
, 
ít
, 
nv¨s
;

854 *
ídp
;

855 
tmp
;

856 #i‚de‡
FIX_8_CLUSTER_BUG


857 
›t_›t_t
 *
›t
;

861 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

863 i‡(!
	`°rcmp
(
›t
->
«me
, 
¨gv
[
ödex
]))

866 i‡(!
›t
)

869 
	`Áèl
("›ti⁄ `%s' i†undeföed", 
¨gv
[
ödex
]);

871 
ödex
++;

874 
›t
->
oc
)

876 
oc_öt
:

878 i‡(
ödex
 >
¨gc


879 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

882 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

884 
˙t
 = 0;

885 i‡(
›t
->
ac¸ue
)

887 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

888 
nv¨s
 = 1;

889 i‡(
ít
 >
›t
->
nv¨s
)

890 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

894 
ít
 = 0;

895 i‡(
›t
->
√…
)

896 *
›t
->
√…
 = 0;

897 
nv¨s
 = 
›t
->nvars;

900 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

901 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

903 
›t
->
v¨ü¡
.
f‹_öt
.
v¨
[
ít
] = 
	`°πﬁ
(
¨gv
[
ödex
], &
ídp
, 0);

904 i‡(*
ídp
)

907 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

908 
¨gv
[
ödex
], 
›t
->
«me
);

911 i‡(
›t
->
√…
)

912 (*
›t
->
√…
)++;

913 
˙t
++; 
ödex
++; 
ít
++;

916 
oc_uöt
:

918 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

921 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

923 
˙t
 = 0;

924 i‡(
›t
->
ac¸ue
)

926 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

927 
nv¨s
 = 1;

928 i‡(
ít
 >
›t
->
nv¨s
)

929 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

933 
ít
 = 0;

934 i‡(
›t
->
√…
)

935 *
›t
->
√…
 = 0;

936 
nv¨s
 = 
›t
->nvars;

939 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

941 
›t
->
v¨ü¡
.
f‹_uöt
.
v¨
[
ít
] = 
	`°πoul
(
¨gv
[
ödex
], &
ídp
, 0);

942 i‡(*
ídp
)

945 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

946 
¨gv
[
ödex
], 
›t
->
«me
);

949 i‡(
›t
->
√…
)

950 (*
›t
->
√…
)++;

951 
˙t
++; 
ödex
++; 
ít
++;

954 
oc_Êﬂt
:

956 i‡(
ödex
 >
¨gc


957 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

960 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

962 
˙t
 = 0;

963 i‡(
›t
->
ac¸ue
)

965 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

966 
nv¨s
 = 1;

967 i‡(
ít
 >
›t
->
nv¨s
)

968 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

972 
ít
 = 0;

973 i‡(
›t
->
√…
)

974 *
›t
->
√…
 = 0;

975 
nv¨s
 = 
›t
->nvars;

978 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

979 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

981 
tmp
 = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

982 i‡(*
ídp
)

985 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

986 
¨gv
[
ödex
], 
›t
->
«me
);

988 i‡(
tmp
 < 
FLT_MIN
 ||Åm∞> 
FLT_MAX
)

991 
	`Áèl
("FP over/underflow forárgument `%s' of option `%s'",

992 
¨gv
[
ödex
], 
›t
->
«me
);

995 
›t
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
ít
] = ()
tmp
;

996 i‡(
›t
->
√…
)

997 (*
›t
->
√…
)++;

998 
˙t
++; 
ödex
++; 
ít
++;

1001 
oc_doubÀ
:

1003 i‡(
ödex
 >
¨gc


1004 || (
¨gv
[
ödex
][0] ='-' && !
	`isdigô
(()argv[index][1])))

1007 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1009 
˙t
 = 0;

1010 i‡(
›t
->
ac¸ue
)

1012 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1013 
nv¨s
 = 1;

1014 i‡(
ít
 >
›t
->
nv¨s
)

1015 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1019 
ít
 = 0;

1020 i‡(
›t
->
√…
)

1021 *
›t
->
√…
 = 0;

1022 
nv¨s
 = 
›t
->nvars;

1025 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 &&

1026 (
¨gv
[
ödex
][0] !'-' || 
	`isdigô
(()argv[index][1])))

1028 
›t
->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
ít
] = 
	`°πod
(
¨gv
[
ödex
], &
ídp
);

1029 i‡(*
ídp
)

1032 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

1033 
¨gv
[
ödex
], 
›t
->
«me
);

1036 i‡(
›t
->
√…
)

1037 (*
›t
->
√…
)++;

1038 
˙t
++; 
ödex
++; 
ít
++;

1041 
oc_íum
:

1043 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1046 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1048 
˙t
 = 0;

1049 i‡(
›t
->
ac¸ue
)

1051 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1052 
nv¨s
 = 1;

1053 i‡(
ít
 >
›t
->
nv¨s
)

1054 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1058 
ít
 = 0;

1059 i‡(
›t
->
√…
)

1060 *
›t
->
√…
 = 0;

1061 
nv¨s
 = 
›t
->nvars;

1064 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1066 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

1067 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1068 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1069 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

1070 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

1073 
	`Áèl
("couldÇotÖarseárgument `%s' of option `%s'",

1074 
¨gv
[
ödex
], 
›t
->
«me
);

1077 i‡(
›t
->
√…
)

1078 (*
›t
->
√…
)++;

1079 
˙t
++; 
ödex
++; 
ít
++;

1082 
oc_Êag
:

1084 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1087 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[0] = 
TRUE
;

1091 
˙t
 = 0;

1092 i‡(
›t
->
ac¸ue
)

1094 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1095 
nv¨s
 = 1;

1096 i‡(
ít
 >
›t
->
nv¨s
)

1097 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1101 
ít
 = 0;

1102 i‡(
›t
->
√…
)

1103 *
›t
->
√…
 = 0;

1104 
nv¨s
 = 
›t
->nvars;

1106 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1108 i‡(!
	`böd_to_íum
(
¨gv
[
ödex
],

1109 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1110 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1111 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
,

1112 &
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
]))

1115 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
ít
] = 
TRUE
;

1121 i‡(
›t
->
√…
)

1122 (*
›t
->
√…
)++;

1123 
˙t
++; 
ödex
++; 
ít
++;

1127 
oc_°rög
:

1129 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1132 
	`Áèl
("›ti⁄ `%s'Ñequúe†™árgumít", 
›t
->
«me
);

1134 
˙t
 = 0;

1135 i‡(
›t
->
ac¸ue
)

1137 
ít
 = 
›t
->
√…
 ? *opt->nelt : 0;

1138 
nv¨s
 = 1;

1139 i‡(
ít
 >
›t
->
nv¨s
)

1140 
	`Áèl
("toÿm™y invoˇti⁄†o‡›ti⁄ `%s'", 
›t
->
«me
);

1144 
ít
 = 0;

1145 i‡(
›t
->
√…
)

1146 *
›t
->
√…
 = 0;

1147 
nv¨s
 = 
›t
->nvars;

1150 
ödex
 < 
¨gc
 && 
˙t
 < 
nv¨s
 && 
¨gv
[index][0] != '-')

1152 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
ít
] = 
¨gv
[
ödex
];

1153 i‡(
›t
->
√…
)

1154 (*
›t
->
√…
)++;

1155 
˙t
++; 
ödex
++; 
ít
++;

1159 
	`∑nic
("bogus option class");

1162  
ödex
;

1163 
	}
}

1166 
¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
);

1167 
dump_c⁄fig
(
›t_odb_t
 *
odb
, *
‚ame
);

1171 
	$__›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1172 
¨gc
,

1173 **
¨gv
,

1174 
dïth
)

1176 
ödex
, 
do_dumpc⁄fig
;

1177 *
dumpc⁄fig_«me
;

1179 
ödex
 = 0;

1180 
do_dumpc⁄fig
 = 
FALSE
;

1181 
dumpc⁄fig_«me
 = 
NULL
;

1183 
ödex
 < 
¨gc
)

1186 
ödex
 < 
¨gc
 && 
¨gv
[index][0] != '-')

1188 i‡(
dïth
 > 0)

1191 
	`Áèl
("orphan `%s'Éncountered during config fileÖrocessing",

1192 
¨gv
[
ödex
]);

1195 i‡(
odb
->
‹ph™_‚
)

1197 i‡(!
odb
->
	`‹ph™_‚
(
ödex
+1, 
¨gc
, 
¨gv
))

1200 
d⁄e_¥o˚ssög
;

1206 
	`Áèl
("‹ph™árgumíà`%s' wa†un˛aimed", 
¨gv
[
ödex
]);

1212 i‡(
ödex
 =
¨gc
)

1215 
d⁄e_¥o˚ssög
;

1220 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-config"))

1223 
ödex
++;

1224 i‡(
ödex
 >
¨gc
 || 
¨gv
[index][0] == '-')

1227 
	`Áèl
("option `-config'Ñequiresánárgument");

1229 
	`¥o˚ss_fûe
(
odb
, 
¨gv
[
ödex
], 
dïth
);

1230 
ödex
++;

1232 i‡(!
	`°rcmp
(
¨gv
[
ödex
], "-dumpconfig"))

1235 
do_dumpc⁄fig
 = 
TRUE
;

1237 
ödex
++;

1238 i‡(
ödex
 >
¨gc


1239 || (
¨gv
[
ödex
][0] == '-' &&árgv[index][1] != '\0'))

1242 
	`Áèl
("option `-dumpconfig'Ñequiresánárgument");

1244 
dumpc⁄fig_«me
 = 
¨gv
[
ödex
];

1245 
ödex
++;

1250 
ödex
 = 
	`¥o˚ss_›ti⁄
(
odb
, index, 
¨gc
, 
¨gv
);

1253 
d⁄e_¥o˚ssög
:

1255 i‡(
do_dumpc⁄fig
)

1256 
	`dump_c⁄fig
(
odb
, 
dumpc⁄fig_«me
);

1257 
	}
}

1261 
	$›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

1262 
¨gc
,

1263 **
¨gv
)

1266 i‡(
¨gc
 < 2)

1270 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
-1, 
¨gv
+1, 0);

1271 
	}
}

1274 
	#MAX_LINE_ARGS
 256

	)

1275 
	#MAX_FILENAME_LEN
 1024

	)

1277 
	$¥o˚ss_fûe
(
›t_odb_t
 *
odb
, *
‚ame
, 
dïth
)

1279 
œrgc
;

1280 *
œrgv
[
MAX_LINE_ARGS
];

1281 
löe
[1024], *
p
, *
q
;

1282 
cwd
[
MAX_FILENAME_LEN
];

1283 *
hódî
;

1284 
FILE
 *
fd
;

1286 
fd
 = 
	`f›í
(
‚ame
, "r");

1287 i‡(!
fd
)

1288 
	`Áèl
("couldÇŸ o≥¿c⁄figuøti⁄ fûê`%s'", 
‚ame
);

1290 i‡(!
	`gëcwd
(
cwd
, 
MAX_FILENAME_LEN
))

1291 
	`Áèl
("can't get cwd");

1293 
hódî
 = 
	`°ºchr
(
‚ame
, '/');

1294 i‡(
hódî
 !
NULL
)

1297 *
hódî
 = '\0';

1298 i‡(
	`chdú
(
‚ame
) == -1)

1299 
	`Áèl
("ˇn'àchdúÅÿ%s\n", 
‚ame
);

1300 *
hódî
 = '/';

1303 !
	`„of
(
fd
))

1306 
	`Ârötf
(
°dîr
, "!feof(fd): %d, strlen(line): %d,Üine: %s\n",

1307 !
	`„of
(
fd
), 
	`°æí
(
löe
),Üine);

1310 
löe
[0] = '\n';

1312 
	`fgës
(
löe
, 1024, 
fd
);

1313 i‡(
löe
[0] == '\0' ||Üine[0] == '\n')

1315 i‡(
löe
[
	`°æí
(line)-1] == '\n')

1316 
löe
[
	`°æí
(line)-1] = '\0';

1319 
œrgc
 = 0; 
p
 = 
löe
;

1320 *
p
)

1323 *
p
 != '\0' && (*p == ' ' || *p == '\t'))

1324 
p
++;

1327 i‡(*
p
 == '\0' || *p == '#')

1331 
q
 = 
p
;

1332 *
q
 != '\0' && *q != ' ' && *q != '\t')

1333 
q
++;

1334 i‡(*
q
)

1336 *
q
 = '\0';

1337 
q
++;

1341 
œrgv
[
œrgc
++] = 
	`my°rdup
(
p
);

1343 i‡(
œrgc
 =
MAX_LINE_ARGS
)

1345 i‡(
	`chdú
(
cwd
) == -1)

1346 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1347 
	`Áèl
("›ti⁄Üöêtoÿcom∂ex i¿fûê`%s'", 
‚ame
);

1351 
p
 = 
q
;

1355 i‡(
œrgc
 > 0)

1356 
	`__›t_¥o˚ss_›ti⁄s
(
odb
, 
œrgc
, 
œrgv
, 
dïth
+1);

1360 
	`f˛o£
(
fd
);

1362 i‡(
	`chdú
(
cwd
) == -1)

1363 
	`Áèl
("ˇn'àchdú backÅÿ%s\n", 
cwd
);

1364 
	}
}

1368 
	$›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

1369 
FILE
 *
fd
)

1371 
i
, 
√…
;

1373 
›t
->
oc
)

1375 
oc_öt
:

1376 i‡(
›t
->
√…
)

1377 
√…
 = *(
›t
->nelt);

1379 
√…
 = 1;

1380 
i
=0; i<
√…
; i++)

1382 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_öt
.
v¨
[
i
]);

1383 
	`Ârötf
(
fd
, " ");

1386 
oc_uöt
:

1387 i‡(
›t
->
√…
)

1388 
√…
 = *(
›t
->nelt);

1390 
√…
 = 1;

1391 
i
=0; i<
√…
; i++)

1393 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_uöt
.
v¨
[
i
]);

1394 
	`Ârötf
(
fd
, " ");

1397 
oc_Êﬂt
:

1398 i‡(
›t
->
√…
)

1399 
√…
 = *(
›t
->nelt);

1401 
√…
 = 1;

1402 
i
=0; i<
√…
; i++)

1404 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, ()›t->
v¨ü¡
.
f‹_Êﬂt
.
v¨
[
i
]);

1405 
	`Ârötf
(
fd
, " ");

1408 
oc_doubÀ
:

1409 i‡(
›t
->
√…
)

1410 
√…
 = *(
›t
->nelt);

1412 
√…
 = 1;

1413 
i
=0; i<
√…
; i++)

1415 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, o±->
v¨ü¡
.
f‹_doubÀ
.
v¨
[
i
]);

1416 
	`Ârötf
(
fd
, " ");

1419 
oc_íum
:

1420 i‡(
›t
->
√…
)

1421 
√…
 = *(
›t
->nelt);

1423 
√…
 = 1;

1424 
i
=0; i<
√…
; i++)

1426 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1427 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1428 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1429 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1430 i‡(!
e°r
)

1431 
	`∑nic
("couldÇot bindÉnum `%d' for option `%s'",

1432 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1434 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1435 
	`Ârötf
(
fd
, " ");

1438 
oc_Êag
:

1439 i‡(
›t
->
√…
)

1440 
√…
 = *(
›t
->nelt);

1442 
√…
 = 1;

1443 
i
=0; i<
√…
; i++)

1445 *
e°r
 = 
	`böd_to_°r
(
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
],

1446 
›t
->
v¨ü¡
.
f‹_íum
.
em≠
,

1447 
›t
->
v¨ü¡
.
f‹_íum
.
evÆ
,

1448 
›t
->
v¨ü¡
.
f‹_íum
.
em≠_sz
);

1449 i‡(!
e°r
)

1450 
	`∑nic
("couldÇot bind boolean `%d' for option `%s'",

1451 
›t
->
v¨ü¡
.
f‹_íum
.
v¨
[
i
], o±->
«me
);

1453 
	`Ârötf
(
fd
, 
›t
->
f‹m©
, 
e°r
);

1454 
	`Ârötf
(
fd
, " ");

1457 
oc_°rög
:

1458 i‡(!
›t
->
nv¨s
)

1460 
	`Ârötf
(
fd
, "%12s ", "<null>");

1463 i‡(
›t
->
√…
)

1464 
√…
 = *(
›t
->nelt);

1466 
√…
 = 1;

1467 i‡(
√…
 == 0)

1469 
	`Ârötf
(
fd
, "%12s ", "<null>");

1474 
i
=0; i<
√…
; i++)

1476 
	`Ârötf
(
fd
, 
›t
->
f‹m©
,

1477 (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1478 ? 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[
i
]

1480 
	`Ârötf
(
fd
, " ");

1485 
	`∑nic
("bogus option class");

1487 
	}
}

1491 
	$¥öt_›ti⁄_hódî
(
›t_odb_t
 *
odb
,

1492 
FILE
 *
fd
)

1494 i‡(!
odb
->
hódî
)

1497 
	`Ârötf
(
fd
, "\n%s\n", 
odb
->
hódî
);

1498 
	}
}

1502 
	$¥öt_›ti⁄_nŸes
(
›t_odb_t
 *
odb
,

1503 
FILE
 *
fd
)

1505 
›t_nŸe_t
 *
nŸe
;

1507 i‡(!
odb
->
nŸes
)

1510 
	`Ârötf
(
fd
, "\n");

1511 
nŸe
=
odb
->
nŸes
;ÇŸê!
NULL
;ÇŸeÚŸe->
√xt
)

1512 
	`Ârötf
(
fd
, "%s\n", 
nŸe
->note);

1513 
	`Ârötf
(
fd
, "\n");

1514 
	}
}

1517 
›t_›t_t
 
	gdumpc⁄fig_›t
 =

1518 { 
NULL
, "-dumpconfig", "dump configurationÅoá file",

1519 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1520 
›t_›t_t
 
	gc⁄fig_›t
 =

1521 { &
dumpc⁄fig_›t
, "-config", "load configuration fromá file",

1522 0, 
NULL
, NULL, 
FALSE
, FALSE, 
oc_°rög
 };

1523 
›t_›t_t
 *
	gbuûtö_›ti⁄s
 = &
c⁄fig_›t
;

1527 
	$›t_nuŒ_°rög
(
›t_›t_t
 *
›t
)

1529  (
›t
 !
NULL


1530 && 
›t
->
oc
 =
oc_°rög


1531 && (
›t
->
nv¨s
 == 0

1532 || (
›t
->
√…
 !
NULL
 && *opt->nelt == 0)

1533 || (
›t
->
√…
 =
NULL


1534 && (
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
 =
NULL


1535 || 
›t
->
v¨ü¡
.
f‹_°rög
.
v¨
[0] =
NULL
))));

1536 
	}
}

1540 
	$›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

1541 
FILE
 *
fd
,

1542 
ãr£
,

1543 
nŸes
)

1545 
›t_›t_t
 *
›t
;

1547 i‡(!
odb
)

1554 i‡(
nŸes
)

1555 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1556 
	`fÊush
 (
°dîr
);

1559 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1561 i‡(
ãr£
)

1562 
	`Ârötf
(
fd
, "%-27†# %s\n", 
›t
->
«me
, o±->
desc
);

1565 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1566 
	`Ârötf
(
fd
, "%-22s\n\n", 
›t
->
«me
);

1569 
	`fÊush
 (
°dîr
);

1572 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1574 i‡(
ãr£
)

1576 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1577 
	`Ârötf
(
fd
, "%-14†", 
›t
->
«me
);

1579 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1580 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1581 i‡(
›t
->
desc
)

1582 
	`Ârötf
(
fd
, "# %-22s", 
›t
->
desc
);

1583 
	`Ârötf
(
fd
, "\n");

1587 i‡(
›t
->
desc
)

1588 
	`Ârötf
(
fd
, "# %s\n", 
›t
->
desc
);

1589 i‡(!
›t
->
¥öt
 || 
	`›t_nuŒ_°rög
(opt))

1590 
	`Ârötf
(
fd
, "%-20†", 
›t
->
«me
);

1592 
	`Ârötf
(
fd
, "%-22†", 
›t
->
«me
);

1593 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1594 
	`Ârötf
(
fd
, "\n\n");

1597 
	`fÊush
 (
°dîr
);

1600 i‡(
nŸes
)

1601 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1602 
	`fÊush
 (
°dîr
);

1603 
	}
}

1607 
	$¥öt_hñp
(
›t_›t_t
 *
›t
,

1608 
FILE
 *
fd
)

1610 *
s
 = 
NULL
;

1612 
	`Ârötf
(
fd
, "%-16†", 
›t
->
«me
);

1613 
›t
->
oc
)

1615 
oc_öt
:

1616 i‡(
›t
->
nv¨s
 == 1)

1617 
s
 = "<int>";

1619 
s
 = "<intÜist...>";

1621 
oc_uöt
:

1622 i‡(
›t
->
nv¨s
 == 1)

1623 
s
 = "<uint>";

1625 
s
 = "<uintÜist...>";

1627 
oc_Êﬂt
:

1628 i‡(
›t
->
nv¨s
 == 1)

1629 
s
 = "<float>";

1631 
s
 = "<floatÜist...>";

1633 
oc_doubÀ
:

1634 i‡(
›t
->
nv¨s
 == 1)

1635 
s
 = "<double>";

1637 
s
 = "<doubleÜist...>";

1639 
oc_íum
:

1640 i‡(
›t
->
nv¨s
 == 1)

1641 
s
 = "<enum>";

1643 
s
 = "<enumÜist...>";

1645 
oc_Êag
:

1646 i‡(
›t
->
nv¨s
 == 1)

1647 
s
 = "<true|false>";

1649 
s
 = "<true|falseÜist...>";

1651 
oc_°rög
:

1652 i‡(
›t
->
nv¨s
 == 0 || opt->nvars == 1)

1653 
s
 = "<string>";

1655 
s
 = "<stringÜist...>";

1658 
	`∑nic
("bogus option class");

1660 
	`Ârötf
(
fd
, "%-16†# ", 
s
);

1661 
	`›t_¥öt_›ti⁄
(
›t
, 
fd
);

1662 
	`Ârötf
(
fd
, "# %-22s\n", 
›t
->
desc
);

1663 
	}
}

1667 
	$›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

1668 
FILE
 *
fd
)

1670 
›t_›t_t
 *
›t
;

1673 
	`¥öt_›ti⁄_hódî
(
odb
, 
fd
);

1675 
	`Ârötf
(
fd
, "#\n");

1676 
	`Ârötf
(
fd
, "%-16s %-16s # %12s # %-22s\n",

1678 
	`Ârötf
(
fd
, "#\n");

1681 
›t
=
buûtö_›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1682 
	`¥öt_hñp
(
›t
, 
fd
);

1685 
›t
=
odb
->
›ti⁄s
; o± !
NULL
; o±=›t->
√xt
)

1686 
	`¥öt_hñp
(
›t
, 
fd
);

1689 
	`¥öt_›ti⁄_nŸes
(
odb
, 
fd
);

1690 
	}
}

1694 
	$dump_c⁄fig
(
›t_odb_t
 *
odb
,

1695 *
‚ame
)

1697 
FILE
 *
fd
;

1700 i‡(!
	`°rcmp
(
‚ame
, "-"))

1701 
fd
 = 
°dîr
;

1704 
fd
 = 
	`f›í
(
‚ame
, "w");

1705 i‡(!
fd
)

1706 
	`Áèl
("couldÇŸ o≥¿fûê`%s'", 
‚ame
);

1710 
	`›t_¥öt_›ti⁄s
(
odb
, 
fd
, 
FALSE
, FALSE);

1713 i‡(
fd
 !
°dout
 && fd !
°dîr
)

1714 
	`f˛o£
(
fd
);

1715 
	}
}

1718 
›t_›t_t
 *

1719 
	$›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

1720 *
›t_«me
)

1722 
›t_›t_t
 *
›t
;

1725 
›t
 = 
buûtö_›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1727 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1730  
›t
;

1735 
›t
 = 
odb
->
›ti⁄s
; o± !
NULL
; o± = o±->
√xt
)

1737 i‡(!
	`°rcmp
(
›t
->
«me
, 
›t_«me
))

1740  
›t
;

1744  
NULL
;

1745 
	}
}

1749 
	$›t_ªg_hódî
(
›t_odb_t
 *
odb
,

1750 *
hódî
)

1752 
odb
->
hódî
 = header;

1753 
	}
}

1757 
	$›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

1758 *
nŸe_°r
)

1760 
›t_nŸe_t
 *
nŸe
 = 
NULL
, *
ñt
, *
¥ev
;

1762 
nŸe
 = (
›t_nŸe_t
 *)
	`ˇŒoc
(1, (opt_note_t));

1763 i‡(!
nŸe
)

1764 
	`Áèl
("out of virtual memory");

1767 
nŸe
->
√xt
 = 
NULL
;

1768 
nŸe
->nŸê
nŸe_°r
;

1771 
¥ev
=
NULL
, 
ñt
=
odb
->
nŸes
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

1774 i‡(
¥ev
 !
NULL
)

1775 
¥ev
->
√xt
 = 
nŸe
;

1777 
odb
->
nŸes
 = 
nŸe
;

1778 
nŸe
->
√xt
 = 
NULL
;

1779 
	}
}

1782 #ifde‡
TEST


1785 
	$f_‹ph™_‚
(
i
, 
¨gc
, **
¨gv
)

1787 
	`Ârötf
(
°dout
, "‹ph™†dëe˘edáàödex %d,árg = `%s'...\n", 
i
, 
¨gv
[i]);

1790  
FALSE
;

1791 
	}
}

1793 
	#MAX_VARS
 4

	)

1795 
	$maö
(
¨gc
, **
¨gv
)

1797 
›t_odb_t
 *
odb
;

1799 
n_öt_v¨s
, 
n_uöt_v¨s
, 
n_Êﬂt_v¨s
, 
n_doubÀ_v¨s
;

1800 
n_íum_v¨s
, 
n_íum_evÆ_v¨s
, 
n_Êag_v¨s
, 
n_°rög_v¨s
;

1801 
öt_v¨
, 
öt_v¨s
[
MAX_VARS
];

1802 
uöt_v¨
, 
uöt_v¨s
[
MAX_VARS
];

1803 
Êﬂt_v¨
, 
Êﬂt_v¨s
[
MAX_VARS
];

1804 
doubÀ_v¨
, 
doubÀ_v¨s
[
MAX_VARS
];

1805 
Êag_v¨
, 
Êag_v¨s
[
MAX_VARS
];

1806 *
°rög_v¨
, *
°rög_v¨s
[
MAX_VARS
];

1808 
	eëe°_t
 { 
íum_a
, 
íum_b
, 
íum_c
, 
íum_d
, 
íum_NUM
 };

1809 *
íum_em≠
[
íum_NUM
] =

1811 
íum_evÆ
[
íum_NUM
] =

1812 { 
íum_d
, 
íum_c
, 
íum_b
, 
íum_a
 };

1813 
íum_v¨
, 
íum_v¨s
[
MAX_VARS
];

1814 
íum_evÆ_v¨
, 
íum_evÆ_v¨s
[
MAX_VARS
];

1817 
odb
 = 
	`›t_√w
(
f_‹ph™_‚
);

1820 
	`›t_ªg_öt
(
odb
, "-opt:int", "This isán integer option.",

1821 &
öt_v¨
, 1, 
TRUE
, 
NULL
);

1822 
	`›t_ªg_öt_li°
(
odb
, "-opt:int:list", "This isán integerÜist option.",

1823 
öt_v¨s
, 
MAX_VARS
, &
n_öt_v¨s
, 2,

1824  
TRUE
, 
NULL
);

1825 
	`›t_ªg_uöt
(
odb
, "-opt:uint", "This isán unsigned integer option.",

1826 &
uöt_v¨
, 3, 
TRUE
, 
NULL
);

1827 
	`›t_ªg_uöt_li°
(
odb
, "-opt:uint:list",

1829 
uöt_v¨s
, 
MAX_VARS
, &
n_uöt_v¨s
, 4,

1830  
TRUE
, 
NULL
);

1831 
	`›t_ªg_Êﬂt
(
odb
, "-opt:float", "This isá float option.",

1832 &
Êﬂt_v¨
, 5.0, 
TRUE
, 
NULL
);

1833 
	`›t_ªg_Êﬂt_li°
(
odb
, "-opt:float:list", "This isá floatÜist option.",

1834 
Êﬂt_v¨s
, 
MAX_VARS
, &
n_Êﬂt_v¨s
, 6.0,

1835  
TRUE
, 
NULL
);

1836 
	`›t_ªg_doubÀ
(
odb
, "-opt:double", "This isá double option.",

1837 &
doubÀ_v¨
, 7.0, 
TRUE
, 
NULL
);

1838 
	`›t_ªg_doubÀ_li°
(
odb
, "-opt:double:list", "This isá doubleÜist option.",

1839 
doubÀ_v¨s
, 
MAX_VARS
, &
n_doubÀ_v¨s
, 8.0,

1840  
TRUE
, 
NULL
);

1841 
	`›t_ªg_íum
(
odb
, "-opt:enum", "This isánÉnumeration option.",

1842 &
íum_v¨
, "íum_a", 
íum_em≠
, 
NULL
, 
íum_NUM
,

1843  
TRUE
, 
NULL
);

1844 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:list", "This isáÉnumÜist option.",

1845 
íum_v¨s
, 
MAX_VARS
, &
n_íum_v¨s
, "enum_b",

1846 
íum_em≠
, 
NULL
, 
íum_NUM
,

1847  
TRUE
, 
NULL
);

1848 
	`›t_ªg_íum
(
odb
, "-opt:enum:eval", "This isánÉnumeration option w/eval.",

1849 &
íum_evÆ_v¨
, "íum_b", 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1850  
TRUE
, 
NULL
);

1851 
	`›t_ªg_íum_li°
(
odb
, "-opt:enum:eval:list",

1853 
íum_evÆ_v¨s
, 
MAX_VARS
, &
n_íum_evÆ_v¨s
, "enum_a",

1854 
íum_em≠
, 
íum_evÆ
, 
íum_NUM
,

1855  
TRUE
, 
NULL
);

1856 
	`›t_ªg_Êag
(
odb
, "-opt:flag", "This isá boolean flag option.",

1857 &
Êag_v¨
, 
FALSE
, 
TRUE
, 
NULL
);

1858 
	`›t_ªg_Êag_li°
(
odb
, "-opt:flag:list",

1860 
Êag_v¨s
, 
MAX_VARS
, &
n_Êag_v¨s
, 
TRUE
,

1861  
TRUE
, 
NULL
);

1862 
	`›t_ªg_°rög
(
odb
, "-opt:string", "This isá string option.",

1863 &
°rög_v¨
, "a:string",

1864  
TRUE
, 
NULL
);

1865 
	`›t_ªg_°rög_li°
(
odb
, "-opt:string:list", "This isá stringÜist option.",

1866 
°rög_v¨s
, 
MAX_VARS
, &
n_°rög_v¨s
, "another:string",

1867  
TRUE
, 
NULL
);

1870 
	`›t_¥o˚ss_›ti⁄s
(
odb
, 
¨gc
, 
¨gv
);

1873 
	`Ârötf
(
°dout
, "## Current Option Values ##\n");

1874 
	`›t_¥öt_›ti⁄s
(
odb
, 
°dout
, 
FALSE
, 
TRUE
);

1877 
	`›t_dñëe
(
odb
);

1878 
	`exô
(0);

1879 
	}
}

	@options.h

82 #i‚de‡
OPTIONS_H


83 
	#OPTIONS_H


	)

97 
	e›t_˛ass_t
 {

98 
	moc_öt
 = 0,

99 
	moc_uöt
,

100 
	moc_Êﬂt
,

101 
	moc_doubÀ
,

102 
	moc_íum
,

103 
	moc_Êag
,

104 
	moc_°rög
,

105 
	moc_NUM


109 
	s›t_›t_t
 {

110 
›t_›t_t
 *
	m√xt
;

111 *
	m«me
;

112 *
	mdesc
;

113 
	mnv¨s
;

114 *
	m√…
;

115 *
	mf‹m©
;

116 
	m¥öt
;

117 
	mac¸ue
;

118 
›t_˛ass_t
 
	moc
;

119 
	u›t_v¨ü¡_t
 {

121 
	s›t_f‹_öt_t
 {

122 *
	mv¨
;

123 } 
	mf‹_öt
;

125 
	s›t_f‹_uöt_t
 {

126 *
	mv¨
;

127 } 
	mf‹_uöt
;

129 
	s›t_f‹_Êﬂt_t
 {

130 *
	mv¨
;

131 } 
	mf‹_Êﬂt
;

133 
	s›t_f‹_doubÀ_t
 {

134 *
	mv¨
;

135 } 
	mf‹_doubÀ
;

137 
	s›t_f‹_íum_t
 {

138 *
	mv¨
;

139 **
	mem≠
;

140 *
	mevÆ
;

141 
	mem≠_sz
;

142 } 
	mf‹_íum
;

144 
	s›t_f‹_°rög_t
 {

145 **
	mv¨
;

146 } 
	mf‹_°rög
;

147 } 
	mv¨ü¡
;

153 (*
	t‹ph™_‚_t
)(
	ti
,

154 
	t¨gc
,

155 **
	t¨gv
);

159 
	s›t_nŸe_t
 {

160 
›t_nŸe_t
 *
	m√xt
;

161 *
	mnŸe
;

165 
	s›t_odb_t
 {

166 
›t_›t_t
 *
	m›ti⁄s
;

167 
‹ph™_‚_t
 
	m‹ph™_‚
;

168 *
	mhódî
;

169 
›t_nŸe_t
 *
	mnŸes
;

173 
›t_odb_t
 *

174 
›t_√w
(
‹ph™_‚_t
 
‹ph™_‚
);

178 
›t_dñëe
(
›t_odb_t
 *
odb
);

182 
›t_ªg_öt
(
›t_odb_t
 *
odb
,

183 *
«me
,

184 *
desc
,

185 *
v¨
,

186 
def_vÆ
,

187 
¥öt
,

188 *
f‹m©
);

192 
›t_ªg_öt_li°
(
›t_odb_t
 *
odb
,

193 *
«me
,

194 *
desc
,

195 *
v¨s
,

196 
nv¨s
,

197 *
√…
,

198 *
def_vÆ
,

199 
¥öt
,

200 *
f‹m©
,

201 
ac¸ue
);

205 
›t_ªg_uöt
(
›t_odb_t
 *
odb
,

206 *
«me
,

207 *
desc
,

208 *
v¨
,

209 
def_vÆ
,

210 
¥öt
,

211 *
f‹m©
);

215 
›t_ªg_uöt_li°
(
›t_odb_t
 *
odb
,

216 *
«me
,

217 *
desc
,

218 *
v¨s
,

219 
nv¨s
,

220 *
√…
,

221 *
def_vÆ
,

222 
¥öt
,

223 *
f‹m©
,

224 
ac¸ue
);

228 
›t_ªg_Êﬂt
(
›t_odb_t
 *
odb
,

229 *
«me
,

230 *
desc
,

231 *
v¨
,

232 
def_vÆ
,

233 
¥öt
,

234 *
f‹m©
);

238 
›t_ªg_Êﬂt_li°
(
›t_odb_t
 *
odb
,

239 *
«me
,

240 *
desc
,

241 *
v¨s
,

242 
nv¨s
,

243 *
√…
,

244 *
def_vÆ
,

245 
¥öt
,

246 *
f‹m©
,

247 
ac¸ue
);

251 
›t_ªg_doubÀ
(
›t_odb_t
 *
odb
,

252 *
«me
,

253 *
desc
,

254 *
v¨
,

255 
def_vÆ
,

256 
¥öt
,

257 *
f‹m©
);

261 
›t_ªg_doubÀ_li°
(
›t_odb_t
 *
odb
,

262 *
«me
,

263 *
desc
,

264 *
v¨s
,

265 
nv¨s
,

266 *
√…
,

267 *
def_vÆ
,

268 
¥öt
,

269 *
f‹m©
,

270 
ac¸ue
);

276 
›t_ªg_íum
(
›t_odb_t
 *
odb
,

277 *
«me
,

278 *
desc
,

279 *
v¨
,

280 *
def_vÆ
,

281 **
em≠
,

282 *
evÆ
,

283 
em≠_sz
,

284 
¥öt
,

285 *
f‹m©
);

291 
›t_ªg_íum_li°
(
›t_odb_t
 *
odb
,

292 *
«me
,

293 *
desc
,

294 *
v¨s
,

295 
nv¨s
,

296 *
√…
,

297 *
def_vÆ
,

298 **
em≠
,

299 *
evÆ
,

300 
em≠_sz
,

301 
¥öt
,

302 *
f‹m©
,

303 
ac¸ue
);

307 
›t_ªg_Êag
(
›t_odb_t
 *
odb
,

308 *
«me
,

309 *
desc
,

310 *
v¨
,

311 
def_vÆ
,

312 
¥öt
,

313 *
f‹m©
);

317 
›t_ªg_Êag_li°
(
›t_odb_t
 *
odb
,

318 *
«me
,

319 *
desc
,

320 *
v¨s
,

321 
nv¨s
,

322 *
√…
,

323 *
def_vÆ
,

324 
¥öt
,

325 *
f‹m©
,

326 
ac¸ue
);

330 
›t_ªg_°rög
(
›t_odb_t
 *
odb
,

331 *
«me
,

332 *
desc
,

333 **
v¨
,

334 *
def_vÆ
,

335 
¥öt
,

336 *
f‹m©
);

340 
›t_ªg_°rög_li°
(
›t_odb_t
 *
odb
,

341 *
«me
,

342 *
desc
,

343 **
v¨s
,

344 
nv¨s
,

345 *
√…
,

346 **
def_vÆ
,

347 
¥öt
,

348 *
f‹m©
,

349 
ac¸ue
);

353 
›t_¥o˚ss_›ti⁄s
(
›t_odb_t
 *
odb
,

354 
¨gc
,

355 **
¨gv
);

359 
›t_¥öt_›ti⁄
(
›t_›t_t
 *
›t
,

360 
FILE
 *
fd
);

364 
›t_¥öt_›ti⁄s
(
›t_odb_t
 *
odb
,

365 
FILE
 *
fd
,

366 
ãr£
,

367 
nŸes
);

371 
›t_¥öt_hñp
(
›t_odb_t
 *
odb
,

372 
FILE
 *
fd
);

375 
›t_›t_t
 *

376 
›t_föd_›ti⁄
(
›t_odb_t
 *
odb
,

377 *
›t_«me
);

381 
›t_ªg_hódî
(
›t_odb_t
 *
odb
,

382 *
hódî
);

386 
›t_ªg_nŸe
(
›t_odb_t
 *
odb
,

387 *
nŸe
);

	@power.c

103 
	~"hódîs.h
"

114 
	#°r
(
s
Ë#s

	)

115 
	#x°r
(
s
Ë
	`°r
(s)

	)

118 
	#Sí£2PowîÁ˘‹
 (
Mhz
)*(2*.3+.1*
Vdd
)

	)

122 
	#LowSwögPowîÁ˘‹
 (
Mhz
)*.2*.2

	)

128 
	#MSCALE
 (
LSCALE
 * .624 / .2250)

	)

133 
	#CC3


	)

135 #ifde‡
CC1


136 
	#IFCC1
(
x
Ë
	)
x

138 
	#IFCC1
(
x
)

	)

140 #ifde‡
CC2


141 
	#IFCC2
(
x
Ë
	)
x

143 
	#IFCC2
(
x
)

	)

145 #ifde‡
CC3


146 
	#IFCC3
(
x
Ë
	)
x

148 
	#IFCC3
(
x
)

	)

151 
ruu_ö‹dî_issue
;

153 
	gvdd_ªdu˘i⁄
;

154 
	gPowîÁ˘‹
;

155 
	gSí£PowîÁ˘‹
;

157 
	ggc
[50];

158 
	gg˙ame
[50][30];

159 
	ggcc
;

161 
	gc⁄°™t_Á˘‹
;

163 
	gœ°_ifq_≥riod
=1.0;

164 
	gœ°_iiq_≥riod
=1.0;

165 
	gœ°_fiq_≥riod
=1.0;

167 
	gpùîegg
, 
	g˛öeg
, 
	gglobbufg
, 
	g˛ockp
;

170 
	gPOWER_SCALE
;

171 
	gI_ADD
;

172 
	gI_ADD32
;

173 
	gI_MULT16
;

174 
	gI_SHIFT
;

175 
	gI_LOGIC
;

176 
	gF_ADD
;

177 
	gF_MULT
;

179 
	gI_ADD_CLOCK
;

180 
	gI_MULT_CLOCK
;

181 
	gI_SHIFT_CLOCK
;

182 
	gI_LOGIC_CLOCK
;

183 
	gF_ADD_CLOCK
;

184 
	gF_MULT_CLOCK
;

185 
	gPîiod
;

193 #ifde‡
INPUT_OUTPUT_BUFFER


194 
	#TOTAL_CYCLE_POWER
 (
ª«me_powî
 + 
iqøm_powî
 + 
fqøm_powî
 + 
˛ock1_powî
 + 
˛ock2_powî
 + 
˛ock3_powî
 + 
rob1_powî
 + 
rob2_powî
 + 
b¥ed_powî
 + 
iwakeup_powî
 + 
fwakeup_powî
 + 
i£À˘i⁄_powî
 + 
f£À˘i⁄_powî
 + 
lsq_powî
 + 
úegfûe_powî
 + 
‰egfûe_powî
 + 
iˇche_powî
 + 
úesu…bus_powî
 + 
‰esu…bus_powî
 + 
Æu1_powî
 + 
Æu2_powî
 + 
Álu1_powî
 + 
Álu2_powî
 + 
dˇche_powî
 + 
dˇche2_powî
 + 
du∂iˇti⁄_powî
 + 
com∑ª_powî
 + 
öput_buf_powî
 + 
ouçut_buf_powî
)

	)

196 
	#TOTAL_CYCLE_POWER
 (
ª«me_powî
 + 
iqøm_powî
 + 
fqøm_powî
 + 
˛ock1_powî
 + 
˛ock2_powî
 + 
˛ock3_powî
 + 
rob1_powî
 + 
rob2_powî
 + 
b¥ed_powî
 + 
iwakeup_powî
 + 
fwakeup_powî
 + 
i£À˘i⁄_powî
 + 
f£À˘i⁄_powî
 + 
lsq_powî
 + 
úegfûe_powî
 + 
‰egfûe_powî
 + 
iˇche_powî
 + 
úesu…bus_powî
 + 
‰esu…bus_powî
 + 
Æu1_powî
 + 
Æu2_powî
 + 
Álu1_powî
 + 
Álu2_powî
 + 
dˇche_powî
 + 
dˇche2_powî
 + 
du∂iˇti⁄_powî
 + 
com∑ª_powî
)

	)

199 #ifde‡
INPUT_OUTPUT_BUFFER


200 
	#TOTAL_CYCLE_POWER_CC3
 (
iqøm_powî_cc3
 + 
fqøm_powî_cc3
 + 
˛ock1_powî_cc3
 + 
˛ock2_powî_cc3
 + 
˛ock3_powî_cc3
 + 
rob1_powî_cc3
 + 
rob2_powî_cc3
 + 
ª«me_powî_cc3
 + 
b¥ed_powî_cc3
 + 
lsq_powî_cc3
 + 
iwakeup_powî_cc3
 + 
fwakeup_powî_cc3
 + 
i£À˘i⁄_powî_cc3
 + 
f£À˘i⁄_powî_cc3
 + 
úegfûe_powî_cc3
 + 
‰egfûe_powî_cc3
 + 
iˇche_powî_cc3
 + 
úesu…bus_powî_cc3
 + 
‰esu…bus_powî_cc3
 + 
Æu1_powî_cc3
 + 
Æu2_powî_cc3
 + 
Álu1_powî_cc3
 + 
Álu2_powî_cc3
 + 
dˇche_powî_cc3
 + 
dˇche2_powî_cc3
 + 
du∂iˇti⁄_powî_cc3
 + 
com∑ª_powî_cc3
 + 
öput_buf_powî_cc3
 + 
ouçut_buf_powî_cc3
)

	)

202 
	#TOTAL_CYCLE_POWER_CC3
 (
iqøm_powî_cc3
 + 
fqøm_powî_cc3
 + 
˛ock1_powî_cc3
 + 
˛ock2_powî_cc3
 + 
˛ock3_powî_cc3
 + 
rob1_powî_cc3
 + 
rob2_powî_cc3
 + 
ª«me_powî_cc3
 + 
b¥ed_powî_cc3
 + 
lsq_powî_cc3
 + 
iwakeup_powî_cc3
 + 
fwakeup_powî_cc3
 + 
i£À˘i⁄_powî_cc3
 + 
f£À˘i⁄_powî_cc3
 + 
úegfûe_powî_cc3
 + 
‰egfûe_powî_cc3
 + 
iˇche_powî_cc3
 + 
úesu…bus_powî_cc3
 + 
‰esu…bus_powî_cc3
 + 
Æu1_powî_cc3
 + 
Æu2_powî_cc3
 + 
Álu1_powî_cc3
 + 
Álu2_powî_cc3
 + 
dˇche_powî_cc3
 + 
dˇche2_powî_cc3
 + 
du∂iˇti⁄_powî_cc3
 + 
com∑ª_powî_cc3
)

	)

208 
	gbuf„r1
[1024];

209 
	gbuf„r2
[4096];

214 
	gsim_cy˛eg
;

216 
	$sim_cyc
(
simc
)

218 
sim_cy˛eg
 = ()
simc
;

219 
	}
}

221 
	$pow2
(
x
) {

222 (()
	`pow
(2.0,()
x
));

223 
	}
}

225 
	$logfour
(
x
)

226 
x
;

228 i‡(
x
<=0Ë
	`Ârötf
(
°dîr
,"%e\n",x);

229 –(Ë(
	`log
(
x
)/log(4.0)) );

230 
	}
}

233 
	$p›_cou¡_¶ow
(
quad_t
 
bôs
)

235 
cou¡
 = 0;

236 
quad_t
 
tmpbôs
 = 
bôs
;

237 
tmpbôs
) {

238 i‡(
tmpbôs
 & 1Ë++
cou¡
;

239 
tmpbôs
 >>= 1;

241  
cou¡
;

242 
	}
}

245 
	$p›_cou¡
(
quad_t
 
bôs
)

247 
	#T
 

	)

248 
	#ONES
 ((
T
)(-1))

	)

249 
	#TWO
(
k
Ë((
T
)1 << (k))

	)

250 
	#CYCL
(
k
Ë(
ONES
/(1 + (
	`TWO
(TWO(k)))))

	)

251 
	#BSUM
(
x
,
k
Ë((x)+=(xË>> 
	`TWO
(k), (xË&
	`CYCL
(k))

	)

252 
quad_t
 
x
 = 
bôs
;

253 
x
 = (x & 
	`CYCL
(0)Ë+ ((x>>
	`TWO
(0)) & CYCL(0));

254 
x
 = (x & 
	`CYCL
(1)Ë+ ((x>>
	`TWO
(1)) & CYCL(1));

255 
	`BSUM
(
x
,2);

256 
	`BSUM
(
x
,3);

257 
	`BSUM
(
x
,4);

258 
	`BSUM
(
x
,5);

259  
x
;

260 
	}
}

263 
	g›code_Àngth
 = 8;

264 
	gö°_Àngth
 = 32;

267 
OUTSTANDING_STORE_NUM
;

268 
PCB_BLK_SIZE
;

269 
BRANCH_Q_NUM
, 
INORDER_CHECKER
;

270 
CHECKER_NUMBER
;

272 
dißbÀ_øy
;

275 
ruu_decode_width
;

276 
ruu_issue_width
;

277 
ruu_commô_width
;

278 
RUU_size
;

279 
LSQ_size
;

280 
d©a_width
;

281 
ªs_ülu
;

282 
ªs_imu…
;

283 
ªs_ÂÆu
;

284 
ªs_Âmu…
;

285 
ªs_memp‹t
;

287 
IPREG_size
;

288 
FPREG_size
;

289 
IIQ_size
;

290 
FIQ_size
;

292 
	gnvªg_width
;

293 
	g≈ªg_width
;

295 
bimod_c⁄fig
[];

297 
ˇche_t
 *
ˇche_dl1
[
CLUSTERS
];

298 
ˇche_t
 *
ˇche_û1
[
CLUSTERS
];

299 
ˇche_t
 *
ˇche_dl2
;

301 
ˇche_t
 *
déb
;

302 
ˇche_t
 *
ôlb
;

305 
twﬁev_c⁄fig
[];

308 
comb_c⁄fig
[];

311 
øs_size
;

314 
btb_c⁄fig
[];

316 
	gglobÆ_˛ockˇp
;

318 
	gª«me_powî
=0;

319 
	giqøm_powî
=0;

320 
	gfqøm_powî
=0;

321 
	grob1_powî
=0;

322 
	grob2_powî
=0;

323 
	g˛ock1_powî
=0;

324 
	g˛ock2_powî
=0;

325 
	g˛ock3_powî
=0;

326 
	gb¥ed_powî
=0;

327 
	giwakeup_powî
=0;

328 
	gfwakeup_powî
=0;

329 
	gi£À˘i⁄_powî
=0;

330 
	gf£À˘i⁄_powî
=0;

331 
	glsq_powî
=0;

332 
	gúegfûe_powî
=0;

333 
	g‰egfûe_powî
=0;

334 
	giˇche_powî
=0;

335 
	gdˇche_powî
=0;

336 #ifde‡
INPUT_OUTPUT_BUFFER


337 
	göput_buf_powî
=0;

338 
	gouçut_buf_powî
=0;

340 
	gdˇche2_powî
=0;

341 
	gÆu1_powî
=0;

342 
	gÆu2_powî
=0;

343 
	gÁlu1_powî
=0;

344 
	gÁlu2_powî
=0;

345 
	gúesu…bus_powî
=0;

346 
	g‰esu…bus_powî
=0;

347 
	g˛ock_powî
=0;

349 
	gdu∂iˇti⁄_powî
=0;

350 
	gcom∑ª_powî
=0;

353 
	gRENAME_powî_cc3
[
CLUSTERS
];

354 
	gIQRAM_powî_cc3
[
CLUSTERS
];

355 
	gFQRAM_powî_cc3
[
CLUSTERS
];

356 
	gROB1_powî_cc3
[
CLUSTERS
];

357 
	gROB2_powî_cc3
[
CLUSTERS
];

358 
	gCLOCK1_powî_cc3
[
CLUSTERS
];

359 
	gCLOCK2_powî_cc3
[
CLUSTERS
];

360 
	gCLOCK3_powî_cc3
[
CLUSTERS
];

361 
	gBPRED_powî_cc3
[
CLUSTERS
];

362 
	gIWAKEUP_powî_cc3
[
CLUSTERS
];

363 
	gFWAKEUP_powî_cc3
[
CLUSTERS
];

364 
	gISELECTION_powî_cc3
[
CLUSTERS
];

365 
	gFSELECTION_powî_cc3
[
CLUSTERS
];

366 
	gLSQ_powî_cc3
[
CLUSTERS
];

367 
	gIREGFILE_powî_cc3
[
CLUSTERS
];

368 
	gFREGFILE_powî_cc3
[
CLUSTERS
];

369 
	gICACHE_powî_cc3
[
CLUSTERS
];

370 
	gDCACHE_powî_cc3
[
CLUSTERS
];

371 #ifde‡
INPUT_OUTPUT_BUFFER


372 
	göput_buf_powî_cc3
[
CLUSTERS
];

373 
	gouçut_buf_powî_cc3
[
CLUSTERS
];

375 
	gDCACHE2_powî_cc3
[
CLUSTERS
];

376 
	gALU1_powî_cc3
[
CLUSTERS
];

377 
	gALU2_powî_cc3
[
CLUSTERS
];

378 
	gFALU1_powî_cc3
[
CLUSTERS
];

379 
	gFALU2_powî_cc3
[
CLUSTERS
];

380 
	gIRESULTBUS_powî_cc3
[
CLUSTERS
];

381 
	gFRESULTBUS_powî_cc3
[
CLUSTERS
];

384 
	gdu∂iˇti⁄_powî_cc3
=0;

385 
	gcom∑ª_powî_cc3
=0;

387 
	gTOTAL_powî_cc3
[
CLUSTERS
];

389 
	gtŸÆ_cy˛e_powî
;

390 
	gtŸÆ_cy˛e_powî_cc3
;

391 
	gmax_cy˛e_powî_cc3
 = 0.0;

393 
cou¡î_t
 
ª«me_ac˚ss
;

394 
cou¡î_t
 
iqøm_ac˚ss
;

395 
cou¡î_t
 
fqøm_ac˚ss
;

396 
cou¡î_t
 
rob1_ac˚ss
;

397 
cou¡î_t
 
rob2_ac˚ss
;

398 
cou¡î_t
 
b¥ed_ac˚ss
;

399 
cou¡î_t
 
iwakeup_ac˚ss
;

400 
cou¡î_t
 
fwakeup_ac˚ss
;

401 
cou¡î_t
 
i£À˘i⁄_ac˚ss
;

402 
cou¡î_t
 
f£À˘i⁄_ac˚ss
;

403 
cou¡î_t
 
lsq_ac˚ss
;

404 
cou¡î_t
 
úegfûe_ac˚ss
;

405 
cou¡î_t
 
‰egfûe_ac˚ss
;

406 
cou¡î_t
 
iˇche_ac˚ss
;

407 
cou¡î_t
 
dˇche_ac˚ss
;

410 
cou¡î_t
 
dˇche2_ac˚ss
;

411 
cou¡î_t
 
ülu1_ac˚ss
;

412 
cou¡î_t
 
ülu2_ac˚ss
;

413 
cou¡î_t
 
Álu1_ac˚ss
;

414 
cou¡î_t
 
Álu2_ac˚ss
;

415 
cou¡î_t
 
úesu…bus_ac˚ss
;

416 
cou¡î_t
 
‰esu…bus_ac˚ss
;

417 
cou¡î_t
 
lsq_¥eg_ac˚ss
;

418 
cou¡î_t
 
lsq_wakeup_ac˚ss
;

419 
cou¡î_t
 
lsq_°‹e_d©a_ac˚ss
;

421 
cou¡î_t
 
du∂iˇti⁄_ac˚ss
;

422 
cou¡î_t
 
com∑ª_ac˚ss
;

424 
cou¡î_t
 
lsq_tŸÆ_p›_cou¡_cy˛e
;

425 
cou¡î_t
 
lsq_num_p›_cou¡_cy˛e
;

426 
cou¡î_t
 
úegfûe_tŸÆ_p›_cou¡_cy˛e
;

427 
cou¡î_t
 
úegfûe_num_p›_cou¡_cy˛e
;

428 
cou¡î_t
 
‰egfûe_tŸÆ_p›_cou¡_cy˛e
;

429 
cou¡î_t
 
‰egfûe_num_p›_cou¡_cy˛e
;

430 
cou¡î_t
 
úesu…bus_tŸÆ_p›_cou¡_cy˛e
;

431 
cou¡î_t
 
úesu…bus_num_p›_cou¡_cy˛e
;

432 
cou¡î_t
 
‰esu…bus_tŸÆ_p›_cou¡_cy˛e
;

433 
cou¡î_t
 
‰esu…bus_num_p›_cou¡_cy˛e
;

435 
cou¡î_t
 
	gtŸÆ_ª«me_ac˚ss
=0;

436 
cou¡î_t
 
	gtŸÆ_iqøm_ac˚ss
=0;

437 
cou¡î_t
 
	gtŸÆ_fqøm_ac˚ss
=0;

438 
cou¡î_t
 
	gtŸÆ_rob1_ac˚ss
=0;

439 
cou¡î_t
 
	gtŸÆ_rob2_ac˚ss
=0;

440 
cou¡î_t
 
	gtŸÆ_b¥ed_ac˚ss
=0;

441 
cou¡î_t
 
	gtŸÆ_iwakeup_ac˚ss
=0;

442 
cou¡î_t
 
	gtŸÆ_fwakeup_ac˚ss
=0;

443 
cou¡î_t
 
	gtŸÆ_i£À˘i⁄_ac˚ss
=0;

444 
cou¡î_t
 
	gtŸÆ_f£À˘i⁄_ac˚ss
=0;

445 
cou¡î_t
 
	gtŸÆ_lsq_ac˚ss
=0;

446 
cou¡î_t
 
	gtŸÆ_úegfûe_ac˚ss
=0;

447 
cou¡î_t
 
	gtŸÆ_‰egfûe_ac˚ss
=0;

448 
cou¡î_t
 
	gtŸÆ_iˇche_ac˚ss
=0;

449 
cou¡î_t
 
	gtŸÆ_dˇche_ac˚ss
=0;

450 #ifde‡
INPUT_OUTPUT_BUFFER


451 
cou¡î_t
 
	gtŸÆ_öput_buf_ac˚ss
=0;

452 
cou¡î_t
 
	gtŸÆ_ouçut_buf_ac˚ss
=0;

454 
cou¡î_t
 
	gtŸÆ_dˇche2_ac˚ss
=0;

455 
cou¡î_t
 
	gtŸÆ_Æu1_ac˚ss
=0;

456 
cou¡î_t
 
	gtŸÆ_Æu2_ac˚ss
=0;

457 
cou¡î_t
 
	gtŸÆ_Álu1_ac˚ss
=0;

458 
cou¡î_t
 
	gtŸÆ_Álu2_ac˚ss
=0;

459 
cou¡î_t
 
	gtŸÆ_úesu…bus_ac˚ss
=0;

460 
cou¡î_t
 
	gtŸÆ_‰esu…bus_ac˚ss
=0;

462 
cou¡î_t
 
	gtŸÆ_du∂iˇti⁄_ac˚ss
;

463 
cou¡î_t
 
	gtŸÆ_com∑ª_ac˚ss
=0;

465 
cou¡î_t
 
	gmax_ª«me_ac˚ss
;

466 
cou¡î_t
 
	gmax_iqøm_ac˚ss
;

467 
cou¡î_t
 
	gmax_fqøm_ac˚ss
;

468 
cou¡î_t
 
	gmax_rob1_ac˚ss
;

469 
cou¡î_t
 
	gmax_rob2_ac˚ss
;

470 
cou¡î_t
 
	gmax_b¥ed_ac˚ss
;

471 
cou¡î_t
 
	gmax_iwakeup_ac˚ss
;

472 
cou¡î_t
 
	gmax_fwakeup_ac˚ss
;

473 
cou¡î_t
 
	gmax_i£À˘i⁄_ac˚ss
;

474 
cou¡î_t
 
	gmax_f£À˘i⁄_ac˚ss
;

475 
cou¡î_t
 
	gmax_lsq_ac˚ss
;

476 
cou¡î_t
 
	gmax_úegfûe_ac˚ss
;

477 
cou¡î_t
 
	gmax_‰egfûe_ac˚ss
;

478 
cou¡î_t
 
	gmax_iˇche_ac˚ss
;

479 
cou¡î_t
 
	gmax_dˇche_ac˚ss
;

480 #ifde‡
INPUT_OUTPUT_BUFFER


481 
cou¡î_t
 
	gmax_öput_buf_ac˚ss
;

482 
cou¡î_t
 
	gmax_ouçut_buf_ac˚ss
;

484 
cou¡î_t
 
	gmax_dˇche2_ac˚ss
;

485 
cou¡î_t
 
	gmax_Æu1_ac˚ss
;

486 
cou¡î_t
 
	gmax_Æu2_ac˚ss
;

487 
cou¡î_t
 
	gmax_Álu1_ac˚ss
;

488 
cou¡î_t
 
	gmax_Álu2_ac˚ss
;

489 
cou¡î_t
 
	gmax_úesu…bus_ac˚ss
;

490 
cou¡î_t
 
	gmax_‰esu…bus_ac˚ss
;

492 
cou¡î_t
 
	gmax_du∂iˇti⁄_ac˚ss
;

493 
cou¡î_t
 
	gmax_com∑ª_ac˚ss
=0;

495 
	$powî_˛ór
()

497 
lcou¡
;

501 
ª«me_powî
=0;

502 
iqøm_powî
=0;

503 
fqøm_powî
=0;

504 
rob1_powî
=0;

505 
rob2_powî
=0;

506 
˛ock1_powî
=0;

507 
˛ock2_powî
=0;

508 
˛ock3_powî
=0;

509 
b¥ed_powî
=0;

510 
iwakeup_powî
=0;

511 
fwakeup_powî
=0;

512 
i£À˘i⁄_powî
=0;

513 
f£À˘i⁄_powî
=0;

514 
lsq_powî
=0;

515 
úegfûe_powî
=0;

516 
‰egfûe_powî
=0;

517 
iˇche_powî
=0;

518 
dˇche_powî
=0;

519 #ifde‡
INPUT_OUTPUT_BUFFER


520 
öput_buf_powî
=0;

521 
ouçut_buf_powî
=0;

523 
dˇche2_powî
=0;

524 
Æu1_powî
=0;

525 
Æu2_powî
=0;

526 
Álu1_powî
=0;

527 
Álu2_powî
=0;

528 
úesu…bus_powî
=0;

529 
‰esu…bus_powî
=0;

530 
˛ock_powî
=0;

532 
du∂iˇti⁄_powî
=0;

533 
com∑ª_powî
=0;

536 
du∂iˇti⁄_powî_cc3
=0;

537 
com∑ª_powî_cc3
=0;

539 
max_cy˛e_powî_cc3
 = 0.0;

541 
tŸÆ_ª«me_ac˚ss
=0;

542 
tŸÆ_iqøm_ac˚ss
=0;

543 
tŸÆ_fqøm_ac˚ss
=0;

544 
tŸÆ_rob1_ac˚ss
=0;

545 
tŸÆ_rob2_ac˚ss
=0;

546 
tŸÆ_b¥ed_ac˚ss
=0;

547 
tŸÆ_iwakeup_ac˚ss
=0;

548 
tŸÆ_fwakeup_ac˚ss
=0;

549 
tŸÆ_i£À˘i⁄_ac˚ss
=0;

550 
tŸÆ_f£À˘i⁄_ac˚ss
=0;

551 
tŸÆ_lsq_ac˚ss
=0;

552 
tŸÆ_úegfûe_ac˚ss
=0;

553 
tŸÆ_‰egfûe_ac˚ss
=0;

554 
tŸÆ_iˇche_ac˚ss
=0;

555 
tŸÆ_dˇche_ac˚ss
=0;

556 #ifde‡
INPUT_OUTPUT_BUFFER


557 
tŸÆ_öput_buf_ac˚ss
=0;

558 
tŸÆ_ouçut_buf_ac˚ss
=0;

560 
tŸÆ_dˇche2_ac˚ss
=0;

561 
tŸÆ_Æu1_ac˚ss
=0;

562 
tŸÆ_Æu2_ac˚ss
=0;

563 
tŸÆ_Álu1_ac˚ss
=0;

564 
tŸÆ_Álu2_ac˚ss
=0;

565 
tŸÆ_úesu…bus_ac˚ss
=0;

566 
tŸÆ_‰esu…bus_ac˚ss
=0;

568 
tŸÆ_du∂iˇti⁄_ac˚ss
=0;

569 
tŸÆ_com∑ª_ac˚ss
=0;

571 
max_ª«me_ac˚ss
=0;

572 
max_iqøm_ac˚ss
=0;

573 
max_fqøm_ac˚ss
=0;

574 
max_rob1_ac˚ss
=0;

575 
max_rob2_ac˚ss
=0;

576 
max_b¥ed_ac˚ss
=0;

577 
max_iwakeup_ac˚ss
=0;

578 
max_fwakeup_ac˚ss
=0;

579 
max_i£À˘i⁄_ac˚ss
=0;

580 
max_f£À˘i⁄_ac˚ss
=0;

581 
max_lsq_ac˚ss
=0;

582 
max_úegfûe_ac˚ss
=0;

583 
max_‰egfûe_ac˚ss
=0;

584 
max_iˇche_ac˚ss
=0;

585 
max_dˇche_ac˚ss
=0;

586 #ifde‡
INPUT_OUTPUT_BUFFER


587 
max_öput_buf_ac˚ss
=0;

588 
max_ouçut_buf_ac˚ss
=0;

590 
max_dˇche2_ac˚ss
=0;

591 
max_Æu1_ac˚ss
=0;

592 
max_Æu2_ac˚ss
=0;

593 
max_Álu1_ac˚ss
=0;

594 
max_Álu2_ac˚ss
=0;

595 
max_úesu…bus_ac˚ss
=0;

596 
max_‰esu…bus_ac˚ss
=0;

598 
max_du∂iˇti⁄_ac˚ss
=0;

599 
max_com∑ª_ac˚ss
=0;

600 
lcou¡
 =0;Ücou¡<
numc⁄ãxts
;lcount++)

602 
RENAME_powî_cc3
[
lcou¡
] = 0;

603 
IQRAM_powî_cc3
[
lcou¡
] = 0;

604 
FQRAM_powî_cc3
[
lcou¡
] = 0;

605 
ROB1_powî_cc3
[
lcou¡
] = 0;

606 
ROB2_powî_cc3
[
lcou¡
] = 0;

607 
CLOCK1_powî_cc3
[
lcou¡
] = 0;

608 
CLOCK2_powî_cc3
[
lcou¡
] = 0;

609 
CLOCK3_powî_cc3
[
lcou¡
] = 0;

610 
BPRED_powî_cc3
[
lcou¡
] = 0;

611 
IWAKEUP_powî_cc3
[
lcou¡
] = 0;

612 
FWAKEUP_powî_cc3
[
lcou¡
] = 0;

613 
ISELECTION_powî_cc3
[
lcou¡
] = 0;

614 
FSELECTION_powî_cc3
[
lcou¡
] = 0;

615 
LSQ_powî_cc3
[
lcou¡
] = 0;

616 
IREGFILE_powî_cc3
[
lcou¡
] = 0;

617 
FREGFILE_powî_cc3
[
lcou¡
] = 0;

618 
ICACHE_powî_cc3
[
lcou¡
] = 0;

619 
DCACHE_powî_cc3
[
lcou¡
] = 0;

620 #ifde‡
INPUT_OUTPUT_BUFFER


621 
öput_buf_powî_cc3
[
lcou¡
]=0;

622 
ouçut_buf_powî_cc3
[
lcou¡
]=0;

624 
DCACHE2_powî_cc3
[
lcou¡
] = 0;

625 
ALU1_powî_cc3
[
lcou¡
] = 0;

626 
ALU2_powî_cc3
[
lcou¡
] = 0;

627 
FALU1_powî_cc3
[
lcou¡
] = 0;

628 
FALU2_powî_cc3
[
lcou¡
] = 0;

629 
IRESULTBUS_powî_cc3
[
lcou¡
] = 0;

630 
FRESULTBUS_powî_cc3
[
lcou¡
] = 0;

632 
	}
}

634 
	$˛ór_ac˚ss_°©s
()

636 
lcou¡
;

638 
ª«me_ac˚ss
=0;

639 
iqøm_ac˚ss
=0;

640 
fqøm_ac˚ss
=0;

641 
rob1_ac˚ss
=0;

642 
rob2_ac˚ss
=0;

643 
b¥ed_ac˚ss
=0;

644 
iwakeup_ac˚ss
=0;

645 
fwakeup_ac˚ss
=0;

646 
i£À˘i⁄_ac˚ss
=0;

647 
f£À˘i⁄_ac˚ss
=0;

648 
lsq_ac˚ss
=0;

649 
úegfûe_ac˚ss
=0;

650 
‰egfûe_ac˚ss
=0;

651 
iˇche_ac˚ss
=0;

652 
dˇche_ac˚ss
=0;

653 #ifde‡
INPUT_OUTPUT_BUFFER


654 
öput_buf_ac˚ss
=0;

655 
ouçut_buf_ac˚ss
=0;

657 
dˇche2_ac˚ss
=0;

658 
ülu1_ac˚ss
=0;

659 
ülu2_ac˚ss
=0;

660 
Álu1_ac˚ss
=0;

661 
Álu2_ac˚ss
=0;

662 
úesu…bus_ac˚ss
=0;

663 
‰esu…bus_ac˚ss
=0;

664 
lsq_°‹e_d©a_ac˚ss
=0;

665 
lsq_wakeup_ac˚ss
=0;

666 
lsq_¥eg_ac˚ss
=0;

668 
lsq_tŸÆ_p›_cou¡_cy˛e
=0;

669 
lsq_num_p›_cou¡_cy˛e
=0;

670 
úegfûe_tŸÆ_p›_cou¡_cy˛e
=0;

671 
úegfûe_num_p›_cou¡_cy˛e
=0;

672 
‰egfûe_tŸÆ_p›_cou¡_cy˛e
=0;

673 
‰egfûe_num_p›_cou¡_cy˛e
=0;

674 
úesu…bus_tŸÆ_p›_cou¡_cy˛e
=0;

675 
úesu…bus_num_p›_cou¡_cy˛e
=0;

676 
‰esu…bus_tŸÆ_p›_cou¡_cy˛e
=0;

677 
‰esu…bus_num_p›_cou¡_cy˛e
=0;

680 
du∂iˇti⁄_ac˚ss
=0;

681 
com∑ª_ac˚ss
=0;

683 
lcou¡
 =0;Ücou¡<
numc⁄ãxts
;Ücount++)

685 
thec⁄ãxts
[
lcou¡
]->
ª«me_ac˚ss
=0;

686 
thec⁄ãxts
[
lcou¡
]->
iqøm_ac˚ss
=0;

687 
thec⁄ãxts
[
lcou¡
]->
fqøm_ac˚ss
=0;

688 
thec⁄ãxts
[
lcou¡
]->
rob1_ac˚ss
=0;

689 
thec⁄ãxts
[
lcou¡
]->
rob2_ac˚ss
=0;

690 
thec⁄ãxts
[
lcou¡
]->
b¥ed_ac˚ss
=0;

691 
thec⁄ãxts
[
lcou¡
]->
iwakeup_ac˚ss
=0;

692 
thec⁄ãxts
[
lcou¡
]->
fwakeup_ac˚ss
=0;

693 
thec⁄ãxts
[
lcou¡
]->
i£À˘i⁄_ac˚ss
=0;

694 
thec⁄ãxts
[
lcou¡
]->
f£À˘i⁄_ac˚ss
=0;

695 
thec⁄ãxts
[
lcou¡
]->
lsq_ac˚ss
=0;

696 
thec⁄ãxts
[
lcou¡
]->
úegfûe_ac˚ss
=0;

697 
thec⁄ãxts
[
lcou¡
]->
‰egfûe_ac˚ss
=0;

698 
thec⁄ãxts
[
lcou¡
]->
iˇche_ac˚ss
=0;

699 
thec⁄ãxts
[
lcou¡
]->
dˇche_ac˚ss
=0;

700 #ifde‡
INPUT_OUTPUT_BUFFER


701 
thec⁄ãxts
[
lcou¡
]->
öput_buf_ac˚ss
=0;

702 
thec⁄ãxts
[
lcou¡
]->
ouçut_buf_ac˚ss
=0;

704 
thec⁄ãxts
[
lcou¡
]->
dˇche2_ac˚ss
=0;

705 
thec⁄ãxts
[
lcou¡
]->
ülu1_ac˚ss
=0;

706 
thec⁄ãxts
[
lcou¡
]->
ülu2_ac˚ss
=0;

707 
thec⁄ãxts
[
lcou¡
]->
Álu1_ac˚ss
=0;

708 
thec⁄ãxts
[
lcou¡
]->
Álu2_ac˚ss
=0;

709 
thec⁄ãxts
[
lcou¡
]->
úesu…bus_ac˚ss
=0;

710 
thec⁄ãxts
[
lcou¡
]->
‰esu…bus_ac˚ss
=0;

711 
thec⁄ãxts
[
lcou¡
]->
lsq_wakeup_ac˚ss
=0;

712 
thec⁄ãxts
[
lcou¡
]->
lsq_¥eg_ac˚ss
=0;

714 
	}
}

722 
	$compuã_af
(
cou¡î_t
 
num_p›_cou¡_cy˛e
,cou¡î_à
tŸÆ_p›_cou¡_cy˛e
,
p›_width
) {

723 
avg_p›_cou¡
;

724 
af
,
af_b
;

726 if(
num_p›_cou¡_cy˛e
)

727 
avg_p›_cou¡
 = ()
tŸÆ_p›_cou¡_cy˛e
 / ()
num_p›_cou¡_cy˛e
;

729 
avg_p›_cou¡
 = 0;

731 
af
 = 
avg_p›_cou¡
 / ()
p›_width
;

733 
af_b
 = 1.0 - 
af
;

737 (
af_b
);

738 
	}
}

740 
	$ch™ge_powî_vÆs
(
powî_ªsu…_ty≥
 
powî
, 
ifq_≥riod
, 
iiq_≥riod
, 
fiq_≥riod
)

742 
powî
.
ª«me_powî
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

743 
powî
.
iqøm_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

744 
powî
.
fqøm_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

745 
powî
.
rob1_powî
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

746 
powî
.
rob2_powî
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

747 
powî
.
˛ock1_powî
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

748 
powî
.
˛ock2_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

749 
powî
.
˛ock3_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

750 
powî
.
b¥ed_powî
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

751 
powî
.
iwakeup_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

752 
powî
.
fwakeup_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

753 
powî
.
i£À˘i⁄
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

754 
powî
.
f£À˘i⁄
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

755 
powî
.
lsq_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

756 
powî
.
lsq_wakeup_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

757 
powî
.
lsq_rs_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

758 
powî
.
lsq_rs_powî_nobô
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

759 
powî
.
lsq_rs_bôlöe
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

760 
powî
.
úegfûe_bôlöe
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

761 
powî
.
úegfûe_powî_nobô
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

762 
powî
.
úegfûe_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

763 
powî
.
‰egfûe_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

764 
powî
.
‰egfûe_powî_nobô
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

765 
powî
.
‰egfûe_bôlöe
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

766 
powî
.
iˇche_powî
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

767 
powî
.
ôlb
 *(
œ°_ifq_≥riod
/
ifq_≥riod
)*(last_ifq_period/ifq_period);

768 
powî
.
dˇche_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

769 
powî
.
déb
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

770 
powî
.
dˇche2_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

771 
powî
.
ülu1_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

772 
powî
.
ülu2_powî
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

773 
powî
.
Álu1_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

774 
powî
.
Álu2_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

775 
powî
.
úesu…bus
 *(
œ°_iiq_≥riod
/
iiq_≥riod
)*(last_iiq_period/iiq_period);

776 
powî
.
‰esu…bus
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

778 
powî
.
du∂iˇti⁄_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

779 
powî
.
com∑ª_powî
 *(
œ°_fiq_≥riod
/
fiq_≥riod
)*(last_fiq_period/fiq_period);

781 
œ°_ifq_≥riod
 = 
ifq_≥riod
;

782 
œ°_iiq_≥riod
 = 
iiq_≥riod
;

783 
œ°_fiq_≥riod
 = 
fiq_≥riod
;

784 
	}
}

793 
	$upd©e_powî_°©s
(
powî_ªsu…_ty≥
 
powî
, 
thªadid
, 
c⁄ãxt
 *
cuºít
)

795 
lsq_af_b
, 
úegfûe_af_b
, 
‰egfûe_af_b
, 
úesu…bus_af_b
, 
‰esu…bus_af_b
, 
hŸ•Ÿ_ãmp
, 
hŸ•Ÿ_ãmp2
;

797 #ifde‡
DYNAMIC_AF


798 
lsq_af_b
 = 
	`compuã_af
(
lsq_num_p›_cou¡_cy˛e
,
lsq_tŸÆ_p›_cou¡_cy˛e
,
d©a_width
);

799 
úegfûe_af_b
 = 
	`compuã_af
(
úegfûe_num_p›_cou¡_cy˛e
,
úegfûe_tŸÆ_p›_cou¡_cy˛e
,
d©a_width
);

800 
‰egfûe_af_b
 = 
	`compuã_af
(
‰egfûe_num_p›_cou¡_cy˛e
,
‰egfûe_tŸÆ_p›_cou¡_cy˛e
,
d©a_width
);

801 
úesu…bus_af_b
 = 
	`compuã_af
(
úesu…bus_num_p›_cou¡_cy˛e
,
úesu…bus_tŸÆ_p›_cou¡_cy˛e
,
d©a_width
);

802 
‰esu…bus_af_b
 = 
	`compuã_af
(
‰esu…bus_num_p›_cou¡_cy˛e
,
‰esu…bus_tŸÆ_p›_cou¡_cy˛e
,
d©a_width
);

805 
ª«me_powî
+=
powî
.rename_power;

806 
iqøm_powî
+=
powî
.iqram_power;

807 
fqøm_powî
+=
powî
.fqram_power;

808 
rob1_powî
+=
powî
.rob1_power;

809 
rob2_powî
+=
powî
.rob2_power;

810 
˛ock1_powî
 +
powî
.clock1_power;

811 
˛ock2_powî
 +
powî
.clock2_power;

812 
˛ock3_powî
 +
powî
.clock3_power;

813 
b¥ed_powî
+=
powî
.bpred_power;

814 
iwakeup_powî
+=
powî
.iwakeup_power;

815 
fwakeup_powî
+=
powî
.fwakeup_power;

816 
i£À˘i⁄_powî
+=
powî
.
i£À˘i⁄
;

817 
f£À˘i⁄_powî
+=
powî
.
f£À˘i⁄
;

818 
lsq_powî
+=
powî
.lsq_power;

819 
úegfûe_powî
+=
powî
.iregfile_power;

820 
‰egfûe_powî
+=
powî
.fregfile_power;

821 
iˇche_powî
+=
powî
.iˇche_powî+powî.
ôlb
;

822 
dˇche_powî
+=
powî
.dˇche_powî+powî.
déb
;

823 #ifde‡
INPUT_OUTPUT_BUFFER


824 
öput_buf_powî
 +
powî
.input_buf_power;

825 
ouçut_buf_powî
 +
powî
.output_buf_power;

827 
dˇche2_powî
+=
powî
.dcache2_power;

828 
Æu1_powî
+=
powî
.
ülu1_powî
;

829 
Æu2_powî
+=
powî
.
ülu2_powî
;

830 
Álu1_powî
+=
powî
.falu1_power;

831 
Álu2_powî
+=
powî
.falu2_power;

832 
úesu…bus_powî
+=
powî
.
úesu…bus
;

833 
‰esu…bus_powî
+=
powî
.
‰esu…bus
;

834 
˛ock_powî
+=
powî
.clock_power;

836 
du∂iˇti⁄_powî
+=
powî
.duplication_power;

837 
com∑ª_powî
+=
powî
.compare_power;

839 
tŸÆ_ª«me_ac˚ss
+=
ª«me_ac˚ss
;

840 
tŸÆ_iqøm_ac˚ss
+=
iqøm_ac˚ss
;

841 
tŸÆ_fqøm_ac˚ss
+=
fqøm_ac˚ss
;

842 
tŸÆ_rob1_ac˚ss
+=
rob1_ac˚ss
;

843 
tŸÆ_rob2_ac˚ss
+=
rob2_ac˚ss
;

844 
tŸÆ_b¥ed_ac˚ss
+=
b¥ed_ac˚ss
;

845 
tŸÆ_iwakeup_ac˚ss
+=
iwakeup_ac˚ss
;

846 
tŸÆ_fwakeup_ac˚ss
+=
fwakeup_ac˚ss
;

847 
tŸÆ_i£À˘i⁄_ac˚ss
+=
i£À˘i⁄_ac˚ss
;

848 
tŸÆ_f£À˘i⁄_ac˚ss
+=
f£À˘i⁄_ac˚ss
;

849 
tŸÆ_lsq_ac˚ss
+=
lsq_ac˚ss
;

850 
tŸÆ_úegfûe_ac˚ss
+=
úegfûe_ac˚ss
;

851 
tŸÆ_‰egfûe_ac˚ss
+=
‰egfûe_ac˚ss
;

852 
tŸÆ_iˇche_ac˚ss
+=
iˇche_ac˚ss
;

853 
tŸÆ_dˇche_ac˚ss
+=
dˇche_ac˚ss
;

854 #ifde‡
INPUT_OUTPUT_BUFFER


855 
tŸÆ_öput_buf_ac˚ss
 +
öput_buf_ac˚ss
;

856 
tŸÆ_ouçut_buf_ac˚ss
 +
ouçut_buf_ac˚ss
;

858 
tŸÆ_dˇche2_ac˚ss
+=
dˇche2_ac˚ss
;

859 
tŸÆ_Æu1_ac˚ss
+=
ülu1_ac˚ss
;

860 
tŸÆ_Æu2_ac˚ss
+=
ülu2_ac˚ss
;

861 
tŸÆ_Álu1_ac˚ss
+=
Álu1_ac˚ss
;

862 
tŸÆ_Álu2_ac˚ss
+=
Álu2_ac˚ss
;

863 
tŸÆ_úesu…bus_ac˚ss
+=
úesu…bus_ac˚ss
;

864 
tŸÆ_‰esu…bus_ac˚ss
+=
‰esu…bus_ac˚ss
;

866 
tŸÆ_du∂iˇti⁄_ac˚ss
+=
du∂iˇti⁄_ac˚ss
;

867 
tŸÆ_com∑ª_ac˚ss
+=
com∑ª_ac˚ss
;

869 
max_ª«me_ac˚ss
=
	`MAX
(
ª«me_ac˚ss
,max_rename_access);

870 
max_iqøm_ac˚ss
=
	`MAX
(
iqøm_ac˚ss
,max_iqram_access);

871 
max_fqøm_ac˚ss
=
	`MAX
(
fqøm_ac˚ss
,max_fqram_access);

872 
max_rob1_ac˚ss
=
	`MAX
(
rob1_ac˚ss
, max_rob1_access);

873 
max_rob2_ac˚ss
=
	`MAX
(
rob2_ac˚ss
, max_rob2_access);

874 
max_b¥ed_ac˚ss
=
	`MAX
(
b¥ed_ac˚ss
,max_bpred_access);

875 
max_iwakeup_ac˚ss
=
	`MAX
(
iwakeup_ac˚ss
,max_iwakeup_access);

876 
max_fwakeup_ac˚ss
=
	`MAX
(
fwakeup_ac˚ss
,max_fwakeup_access);

877 
max_i£À˘i⁄_ac˚ss
=
	`MAX
(
i£À˘i⁄_ac˚ss
,max_iselection_access);

878 
max_f£À˘i⁄_ac˚ss
=
	`MAX
(
f£À˘i⁄_ac˚ss
,max_fselection_access);

879 
max_lsq_ac˚ss
=
	`MAX
(
lsq_ac˚ss
,max_lsq_access);

880 
max_úegfûe_ac˚ss
=
	`MAX
(
úegfûe_ac˚ss
,max_iregfile_access);

881 
max_‰egfûe_ac˚ss
=
	`MAX
(
‰egfûe_ac˚ss
,max_fregfile_access);

882 
max_iˇche_ac˚ss
=
	`MAX
(
iˇche_ac˚ss
,max_icache_access);

883 
max_dˇche_ac˚ss
=
	`MAX
(
dˇche_ac˚ss
,max_dcache_access);

884 #ifde‡
INPUT_OUTPUT_BUFFER


885 
max_öput_buf_ac˚ss
 = 
	`MAX
(
öput_buf_ac˚ss
, max_input_buf_access);

886 
max_ouçut_buf_ac˚ss
 = 
	`MAX
(
ouçut_buf_ac˚ss
, max_output_buf_access);

888 
max_dˇche2_ac˚ss
=
	`MAX
(
dˇche2_ac˚ss
,max_dcache2_access);

889 
max_Æu1_ac˚ss
=
	`MAX
(
ülu1_ac˚ss
,max_alu1_access);

890 
max_Æu2_ac˚ss
=
	`MAX
(
ülu2_ac˚ss
,max_alu2_access);

891 
max_Álu1_ac˚ss
=
	`MAX
(
Álu1_ac˚ss
,max_falu1_access);

892 
max_Álu2_ac˚ss
=
	`MAX
(
Álu2_ac˚ss
,max_falu2_access);

893 
max_úesu…bus_ac˚ss
=
	`MAX
(
úesu…bus_ac˚ss
,max_iresultbus_access);

894 
max_‰esu…bus_ac˚ss
=
	`MAX
(
‰esu…bus_ac˚ss
,max_fresultbus_access);

896 
max_du∂iˇti⁄_ac˚ss
=
	`MAX
(
du∂iˇti⁄_ac˚ss
,max_duplication_access);

897 
max_com∑ª_ac˚ss
=
	`MAX
(
com∑ª_ac˚ss
,max_compare_access);

899 if(
cuºít
->
ª«me_ac˚ss
) {

900 
RENAME_powî_cc3
[
thªadid
]+=((()
cuºít
->
ª«me_ac˚ss
 + ((()
	`MAX
(0,(
ruu_decode_width
)-cuºít->ª«me_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_decode_width))*
powî
.
ª«me_powî
;

901 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
ª«me_ac˚ss
 + ((()
	`MAX
(0,(
ruu_decode_width
)-cuºít->ª«me_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_decode_width))*
powî
.
ª«me_powî
;)

903 
	`IFCC3
({

904 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
ª«me_powî
;

905 
RENAME_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
ª«me_powî
;

908 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
úíame
+=
hŸ•Ÿ_ãmp
/2;

909 
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
‰íame
+=
hŸ•Ÿ_ãmp
/2;)

912 i‡(
cuºít
->
fqøm_ac˚ss
) {

913 
FQRAM_powî_cc3
[
thªadid
]+=((()
cuºít
->
fqøm_ac˚ss
 + ((()
	`MAX
(0,(
ruu_decode_width
)+
ruu_issue_width
-cuºít->fqøm_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_issue_width+‘uu_decode_width)))*
powî
.
fqøm_powî
;

914 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
fqøm_ac˚ss
 + ((()
	`MAX
(0,(
ruu_decode_width
)+
ruu_issue_width
-cuºít->fqøm_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_issue_width+‘uu_decode_width)))*
powî
.
fqøm_powî
;)

916 
	`IFCC3
({

917 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
fqøm_powî
;

918 
FQRAM_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
fqøm_powî
;

920 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
fqueue
+=
hŸ•Ÿ_ãmp
;)

923 i‡(
cuºít
->
iqøm_ac˚ss
) {

924 
IQRAM_powî_cc3
[
thªadid
]+=((()
cuºít
->
iqøm_ac˚ss
 + ((()
	`MAX
(0,(
ruu_decode_width
)+
ruu_issue_width
-cuºít->iqøm_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_issue_width+‘uu_decode_width)))*
powî
.
iqøm_powî
;

925 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
iqøm_ac˚ss
 + ((()
	`MAX
(0,(
ruu_decode_width
)+
ruu_issue_width
-cuºít->iqøm_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_issue_width+‘uu_decode_width)))*
powî
.
iqøm_powî
;)

927 
	`IFCC3
({

928 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
fqøm_powî
;

929 
IQRAM_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
iqøm_powî
;

931 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
iqueue
+=
hŸ•Ÿ_ãmp
;)

935 i‡(
cuºít
->
rob1_ac˚ss
) {

936 
ROB1_powî_cc3
[
thªadid
]+=((()
cuºít
->
rob1_ac˚ss
 + ((()
	`MAX
(0,
ruu_commô_width
-cuºít->rob1_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_commô_width)*
powî
.
rob1_powî
;

937 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
rob1_ac˚ss
 + ((()
	`MAX
(0,
ruu_commô_width
-cuºít->rob1_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_commô_width)*
powî
.
rob1_powî
;)

939 
	`IFCC3
({

940 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
rob1_powî
;

941 
ROB1_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
rob1_powî
;

943 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
rob
+=
hŸ•Ÿ_ãmp
;)

946 i‡(
cuºít
->
rob2_ac˚ss
) {

947 
ROB2_powî_cc3
[
thªadid
]+=((()
cuºít
->
rob2_ac˚ss
+ ((()
	`MAX
(0,(
ruu_decode_width
)+
ruu_commô_width
-cuºít->rob2_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_commô_width+‘uu_decode_width)))*
powî
.
rob2_powî
;

948 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
rob2_ac˚ss
+ ((()
	`MAX
(0,(
ruu_decode_width
)+
ruu_commô_width
-cuºít->rob2_ac˚ss))*
tu∫off_Á˘‹
))/()‘uu_commô_width+‘uu_decode_width)))*
powî
.
rob2_powî
;)

950 
	`IFCC3
({

951 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
rob2_powî
;

952 
ROB2_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
rob2_powî
;

954 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
rob
+=
hŸ•Ÿ_ãmp
;)

956 
CLOCK1_powî_cc3
[
thªadid
] +
powî
.
˛ock1_powî
;

957 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[0].
˛ock1
+=
powî
.
˛ock1_powî
;)

959 
CLOCK2_powî_cc3
[
thªadid
] +
powî
.
˛ock2_powî
;

960 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[0].
˛ock2
+=
powî
.
˛ock2_powî
;)

962 
CLOCK3_powî_cc3
[
thªadid
] +
powî
.
˛ock3_powî
;

963 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[0].
˛ock3
+=
powî
.
˛ock3_powî
;)

965 if(
cuºít
->
b¥ed_ac˚ss
) {

966 i‡(
cuºít
->
b¥ed_ac˚ss
 < 2){

967 
BPRED_powî_cc3
[
thªadid
]+=0.6*
powî
.
b¥ed_powî
;

968 
hŸ•Ÿ_ãmp
=0.6*
powî
.
b¥ed_powî
;

971 
BPRED_powî_cc3
[
thªadid
]+=(()
cuºít
->
b¥ed_ac˚ss
/2.0Ë* 
powî
.
b¥ed_powî
;

972 
	`IFCC3
(
hŸ•Ÿ_ãmp
=(()
cuºít
->
b¥ed_ac˚ss
/2.0Ë* 
powî
.
b¥ed_powî
;)

975 
	`IFCC3
({

976 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
b¥ed_powî
;

977 
BPRED_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
b¥ed_powî
;

979 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
b¥ed
+=
hŸ•Ÿ_ãmp
;)

982 if(
cuºít
->
i£À˘i⁄_ac˚ss
) {

983 
ISELECTION_powî_cc3
[
thªadid
]+=
powî
.
i£À˘i⁄
;

984 
	`IFCC3
(
hŸ•Ÿ_ãmp
=
powî
.
i£À˘i⁄
;)

986 
	`IFCC3
({

987 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
i£À˘i⁄
;

988 
ISELECTION_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
i£À˘i⁄
;

990 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
iqueue
+=
hŸ•Ÿ_ãmp
;)

993 if(
cuºít
->
f£À˘i⁄_ac˚ss
) {

994 
FSELECTION_powî_cc3
[
thªadid
]+=
powî
.
f£À˘i⁄
;

995 
	`IFCC3
(
hŸ•Ÿ_ãmp
=
powî
.
f£À˘i⁄
;)

997 
	`IFCC3
({

998 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
f£À˘i⁄
;

999 
FSELECTION_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
f£À˘i⁄
;

1001 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
fqueue
+=
hŸ•Ÿ_ãmp
;)

1004 if(
cuºít
->
iwakeup_ac˚ss
) {

1005 
IWAKEUP_powî_cc3
[
thªadid
]+=
powî
.
iwakeup_powî
;

1006 
	`IFCC3
(
hŸ•Ÿ_ãmp
=
powî
.
iwakeup_powî
;)

1008 
	`IFCC3
({

1009 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
iwakeup_powî
;

1010 
FWAKEUP_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
iwakeup_powî
;

1012 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
iqueue
+=
hŸ•Ÿ_ãmp
;)

1015 if(
cuºít
->
fwakeup_ac˚ss
) {

1016 
FWAKEUP_powî_cc3
[
thªadid
]+=
powî
.
fwakeup_powî
;

1017 
	`IFCC3
(
hŸ•Ÿ_ãmp
=
powî
.
fwakeup_powî
;)

1019 
	`IFCC3
({

1020 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
fwakeup_powî
;

1021 
FWAKEUP_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
fwakeup_powî
;

1023 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
fqueue
+=
hŸ•Ÿ_ãmp
;)

1025 if(
cuºít
->
lsq_wakeup_ac˚ss
) {

1026 
LSQ_powî_cc3
[
thªadid
]+=
powî
.
lsq_wakeup_powî
;

1027 
	`IFCC3
(
hŸ•Ÿ_ãmp
=
powî
.
lsq_wakeup_powî
;)

1029 
	`IFCC3
({

1030 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
lsq_wakeup_powî
;

1031 
LSQ_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
lsq_wakeup_powî
;

1033 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
lsq
+=
hŸ•Ÿ_ãmp
;)

1035 #ifde‡
INPUT_OUTPUT_BUFFER


1036 if(
cuºít
->
öput_buf_ac˚ss
) {

1037 
öput_buf_powî_cc3
[
thªadid
]+
cuºít
->
öput_buf_ac˚ss
*
powî
.
öput_buf_powî
;

1039 
	`IFCC3
({

1040 
öput_buf_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
öput_buf_powî
;

1043 if(
cuºít
->
ouçut_buf_ac˚ss
) {

1044 
ouçut_buf_powî_cc3
[
thªadid
]+=
cuºít
->
ouçut_buf_ac˚ss
*
powî
.
ouçut_buf_powî
;

1046 
	`IFCC3
({

1047 
ouçut_buf_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
ouçut_buf_powî
;

1051 #ifde‡
STATIC_AF


1052 if(
cuºít
->
lsq_¥eg_ac˚ss
) {

1053 
LSQ_powî_cc3
[
thªadid
]+=((()
cuºít
->
lsq_¥eg_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
)-cuºít->lsq_¥eg_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS))*
powî
.
lsq_rs_powî
;

1054 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
lsq_¥eg_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
)-cuºít->lsq_¥eg_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS))*
powî
.
lsq_rs_powî
;)

1056 
	`IFCC3
({

1057 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
lsq_rs_powî
;

1058 
LSQ_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
lsq_rs_powî
;

1060 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
lsq
+=
hŸ•Ÿ_ãmp
;)

1063 if(
cuºít
->
lsq_¥eg_ac˚ss
) {

1064 
LSQ_powî_cc3
[
thªadid
]+=((()
cuºít
->
lsq_¥eg_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
)-cuºít->lsq_¥eg_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS))*(
powî
.
lsq_rs_powî_nobô
 + 
lsq_af_b
*powî.
lsq_rs_bôlöe
);

1065 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
lsq_¥eg_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
)-cuºít->lsq_¥eg_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS))*(
powî
.
lsq_rs_powî_nobô
 + 
lsq_af_b
*powî.
lsq_rs_bôlöe
);)

1067 
	`IFCC3
({

1068 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
lsq_rs_powî
;

1069 
LSQ_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
lsq_rs_powî
;

1071 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
lsq
+=
hŸ•Ÿ_ãmp
;)

1074 if(
cuºít
->
úegfûe_ac˚ss
) {

1075 
IREGFILE_powî_cc3
[
thªadid
]+=((()
cuºít
->
úegfûe_ac˚ss
 + ((()
	`MAX
(0,3*
ruu_commô_width
 -cuºít->úegfûe_ac˚ss))*
tu∫off_Á˘‹
))/(3.0*(Ïuu_commô_width))*(
powî
.
úegfûe_powî_nobô
 + 
úegfûe_af_b
*powî.
úegfûe_bôlöe
);

1076 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
úegfûe_ac˚ss
 + ((()
	`MAX
(0,3*
ruu_commô_width
 -cuºít->úegfûe_ac˚ss))*
tu∫off_Á˘‹
))/(3.0*(Ïuu_commô_width))*(
powî
.
úegfûe_powî_nobô
 + 
úegfûe_af_b
*powî.
úegfûe_bôlöe
);)

1078 
	`IFCC3
({

1079 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
úegfûe_powî
;

1080 
IREGFILE_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
úegfûe_powî
;

1083 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
úeg0
+=
hŸ•Ÿ_ãmp
/2;

1084 
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
úeg1
+=
hŸ•Ÿ_ãmp
/2;)

1086 if(
cuºít
->
‰egfûe_ac˚ss
) {

1087 
FREGFILE_powî_cc3
[
thªadid
]+=((()
cuºít
->
‰egfûe_ac˚ss
 + ((()
	`MAX
(0,3*
ruu_commô_width
 - cuºít->
úegfûe_ac˚ss
))*
tu∫off_Á˘‹
))/(3.0*(Ïuu_commô_width))*(
powî
.
‰egfûe_powî_nobô
 + 
‰egfûe_af_b
*powî.
‰egfûe_bôlöe
);

1088 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
‰egfûe_ac˚ss
 + ((()
	`MAX
(0,3*
ruu_commô_width
 - cuºít->
úegfûe_ac˚ss
))*
tu∫off_Á˘‹
))/(3.0*(Ïuu_commô_width))*(
powî
.
‰egfûe_powî_nobô
 + 
‰egfûe_af_b
*powî.
‰egfûe_bôlöe
);)

1090 
	`IFCC3
({

1091 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
‰egfûe_powî
;

1092 
FREGFILE_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
‰egfûe_powî
;

1094 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
‰eg
+=
hŸ•Ÿ_ãmp
;)

1098 if(
cuºít
->
iˇche_ac˚ss
) {

1099 
ICACHE_powî_cc3
[
thªadid
]+=
powî
.
iˇche_powî
+powî.
ôlb
;

1100 
	`IFCC3
(
hŸ•Ÿ_ãmp
=
powî
.
iˇche_powî
;)

1101 
	`IFCC3
(
hŸ•Ÿ_ãmp2
=
powî
.
ôlb
;)

1103 
	`IFCC3
({

1104 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*(
powî
.
iˇche_powî
);

1105 
hŸ•Ÿ_ãmp2
=
tu∫off_Á˘‹
*(
powî
.
ôlb
);

1106 
ICACHE_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*(
powî
.
iˇche_powî
+powî.
ôlb
);

1108 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
iˇche
+=
hŸ•Ÿ_ãmp
;)

1109 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
ôlb
+=
hŸ•Ÿ_ãmp2
;)

1111 if(
cuºít
->
dˇche_ac˚ss
) {

1112 
DCACHE_powî_cc3
[
thªadid
]+=((()
cuºít
->
dˇche_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)-cuºít->dˇche_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS+DIR_FIFO_PORTS))*(
powî
.
dˇche_powî
 +Öowî.
déb
);

1113 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
dˇche_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)-cuºít->dˇche_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS+DIR_FIFO_PORTS))*(
powî
.
dˇche_powî
);)

1114 
	`IFCC3
(
hŸ•Ÿ_ãmp2
=((()
cuºít
->
dˇche_ac˚ss
 + ((()
	`MAX
(0,(
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)-cuºít->dˇche_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_memp‹t/CLUSTERS+DIR_FIFO_PORTS))*(
powî
.
déb
);)

1116 
	`IFCC3
({

1117 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*(
powî
.
dˇche_powî
);

1118 
hŸ•Ÿ_ãmp2
=
tu∫off_Á˘‹
*(
powî
.
déb
);

1119 
DCACHE_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*(
powî
.
dˇche_powî
+powî.
déb
);

1121 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
dl1ˇche
+=
hŸ•Ÿ_ãmp
;)

1123 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
dtb0
+=
hŸ•Ÿ_ãmp2
/2;

1124 
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
dtb1
+=
hŸ•Ÿ_ãmp2
/2;)

1126 if(
cuºít
->
dˇche2_ac˚ss
) {

1127 
DCACHE2_powî_cc3
[
thªadid
]+=((()
cuºít
->
dˇche2_ac˚ss
 + ((()
	`MAX
(0,(
DIR_FIFO_PORTS
)-cuºít->dˇche2_ac˚ss))*
tu∫off_Á˘‹
))/(()DIR_FIFO_PORTS))*
powî
.
dˇche2_powî
;

1128 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
dˇche2_ac˚ss
 + ((()
	`MAX
(0,(
DIR_FIFO_PORTS
)-cuºít->dˇche2_ac˚ss))*
tu∫off_Á˘‹
))/(()DIR_FIFO_PORTS))*
powî
.
dˇche2_powî
;)

1130 
	`IFCC3
({

1131 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
dˇche2_powî
;

1132 
DCACHE2_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
dˇche2_powî
;

1137 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[0].
ul2ˇche
+=
hŸ•Ÿ_ãmp
;)

1138 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[0].
sysötf
+=
hŸ•Ÿ_ãmp
;)

1140 if(
cuºít
->
ülu1_ac˚ss
) {

1141 
ALU1_powî_cc3
[
thªadid
]+=((()
cuºít
->
ülu1_ac˚ss
 + ((()
	`MAX
(0,(
ªs_ülu
/
CLUSTERS
)-cuºít->ülu1_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_ülu/CLUSTERS))*
powî
.
ülu1_powî
;

1142 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
ülu1_ac˚ss
 + ((()
	`MAX
(0,(
ªs_ülu
/
CLUSTERS
)-cuºít->ülu1_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_ülu/CLUSTERS))*
powî
.
ülu1_powî
;)

1144 
	`IFCC3
({

1145 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
ülu1_powî
;

1146 
ALU1_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
ülu1_powî
;

1151 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
ülu0
+=
hŸ•Ÿ_ãmp
/3;

1152 
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
ülu1
+=
hŸ•Ÿ_ãmp
/3;

1154 
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
ülu3
+=
hŸ•Ÿ_ãmp
/3;)

1159 if(
cuºít
->
ülu2_ac˚ss
) {

1160 
ALU2_powî_cc3
[
thªadid
]+=((()
cuºít
->
ülu2_ac˚ss
 + ((()
	`MAX
(0,(
ªs_imu…
/
CLUSTERS
)-cuºít->ülu2_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_imu…/CLUSTERS))*
powî
.
ülu2_powî
;

1161 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
ülu2_ac˚ss
 + ((()
	`MAX
(0,(
ªs_imu…
/
CLUSTERS
)-cuºít->ülu2_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_imu…/CLUSTERS))*
powî
.
ülu2_powî
;)

1163 
	`IFCC3
({

1164 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
ülu2_powî
;

1165 
ALU2_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
ülu2_powî
;

1167 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
ülu2
+=
hŸ•Ÿ_ãmp
;)

1170 if(
cuºít
->
Álu1_ac˚ss
) {

1171 
FALU1_powî_cc3
[
thªadid
]+=((()
cuºít
->
Álu1_ac˚ss
 + ((()
	`MAX
(0,(
ªs_ÂÆu
/
CLUSTERS
)-cuºít->Álu1_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_ÂÆu/CLUSTERS))*
powî
.
Álu1_powî
;

1172 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
Álu1_ac˚ss
 + ((()
	`MAX
(0,(
ªs_ÂÆu
/
CLUSTERS
)-cuºít->Álu1_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_ÂÆu/CLUSTERS))*
powî
.
Álu1_powî
;)

1174 
	`IFCC3
({

1175 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
Álu1_powî
;

1176 
FALU1_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
Álu1_powî
;

1178 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
Ádd
+=
hŸ•Ÿ_ãmp
;)

1181 if(
cuºít
->
Álu2_ac˚ss
) {

1182 
FALU2_powî_cc3
[
thªadid
]+=((()
cuºít
->
Álu2_ac˚ss
 + ((()
	`MAX
(0,(
ªs_Âmu…
/
CLUSTERS
)-cuºít->Álu2_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_Âmu…/CLUSTERS))*
powî
.
Álu2_powî
;

1183 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
Álu2_ac˚ss
 + ((()
	`MAX
(0,(
ªs_Âmu…
/
CLUSTERS
)-cuºít->Álu2_ac˚ss))*
tu∫off_Á˘‹
))/((Ïes_Âmu…/CLUSTERS))*
powî
.
Álu2_powî
;)

1185 
	`IFCC3
({

1186 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
Álu2_powî
;

1187 
FALU2_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
Álu2_powî
;

1189 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
fmul
+=
hŸ•Ÿ_ãmp
;)

1192 #ifde‡
STATIC_AF


1193 if(
cuºít
->
úesu…bus_ac˚ss
) {

1194 
IRESULTBUS_powî_cc3
[
thªadid
]+=((()
cuºít
->
úesu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->úesu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
powî
.
úesu…bus
;

1195 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
úesu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->úesu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
powî
.
úesu…bus
;)

1197 
	`IFCC3
({

1198 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
úesu…bus
;

1199 
IRESULTBUS_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
úesu…bus
;

1201 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
úesu…bus
+=
hŸ•Ÿ_ãmp
;)

1204 if(
cuºít
->
úesu…bus_ac˚ss
) {

1205 
IRESULTBUS_powî_cc3
[
thªadid
]+=((()
cuºít
->
úesu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->úesu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
úesu…bus_af_b
*
powî
.
úesu…bus
;

1206 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
úesu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->úesu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
úesu…bus_af_b
*
powî
.
úesu…bus
;)

1208 
	`IFCC3
({

1209 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
úesu…bus
;

1210 
IRESULTBUS_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
úesu…bus
;

1212 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
úesu…bus
+=
hŸ•Ÿ_ãmp
;)

1216 #ifde‡
STATIC_AF


1217 if(
cuºít
->
‰esu…bus_ac˚ss
) {

1218 
FRESULTBUS_powî_cc3
[
thªadid
]+=((()
cuºít
->
‰esu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->‰esu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
powî
.
‰esu…bus
;

1219 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
‰esu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->‰esu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
powî
.
‰esu…bus
;)

1221 
	`IFCC3
({

1222 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
‰esu…bus
;

1223 
FRESULTBUS_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
‰esu…bus
;

1225 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
‰esu…bus
+=
hŸ•Ÿ_ãmp
;)

1227 if(
cuºít
->
‰esu…bus_ac˚ss
) {

1228 
FRESULTBUS_powî_cc3
[
thªadid
]+=((()
cuºít
->
‰esu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->‰esu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
‰esu…bus_af_b
*
powî
.
‰esu…bus
;

1229 
	`IFCC3
(
hŸ•Ÿ_ãmp
=((()
cuºít
->
‰esu…bus_ac˚ss
 + ((()
	`MAX
(0,
ruu_issue_width
-cuºít->‰esu…bus_ac˚ss))*
tu∫off_Á˘‹
))/(Ïuu_issue_width)*
‰esu…bus_af_b
*
powî
.
‰esu…bus
;)

1231 
	`IFCC3
({

1232 
hŸ•Ÿ_ãmp
=
tu∫off_Á˘‹
*
powî
.
‰esu…bus
;

1233 
FRESULTBUS_powî_cc3
[
thªadid
]+=
tu∫off_Á˘‹
*
powî
.
‰esu…bus
;

1235 
	`IFCC3
(
hŸ•Ÿ_≥Ωîiod
[
thªadid
].
‰esu…bus
+=
hŸ•Ÿ_ãmp
;)

1243 if(!
dißbÀ_øy
){

1244 i‡(
du∂iˇti⁄_ac˚ss
)

1245 
du∂iˇti⁄_powî_cc3
 +
powî
.
du∂iˇti⁄_powî
;

1247 
du∂iˇti⁄_powî_cc3
 +
tu∫off_Á˘‹
*
powî
.
du∂iˇti⁄_powî
;

1252 i‡(
com∑ª_ac˚ss
)

1253 
com∑ª_powî_cc3
 +
powî
.
com∑ª_powî
;

1255 
com∑ª_powî_cc3
 +
tu∫off_Á˘‹
*
powî
.
com∑ª_powî
;

1258 
tŸÆ_cy˛e_powî
 = 
ª«me_powî
 + 
iqøm_powî
 + 
fqøm_powî
 + 
˛ock1_powî
 + 
˛ock2_powî
 + 
˛ock3_powî
 + 
rob1_powî
 + 
rob2_powî
 + 
b¥ed_powî
 + 
iwakeup_powî
 +

1259 
fwakeup_powî
 + 
i£À˘i⁄_powî
 + 
f£À˘i⁄_powî
 +

1260 
lsq_powî
 + 
úegfûe_powî
 + 
‰egfûe_powî
 + 
iˇche_powî
 + 
dˇche_powî
 +

1261 #ifde‡
INPUT_OUTPUT_BUFFER


1262 
öput_buf_powî
 + 
ouçut_buf_powî
 +

1264 
Æu1_powî
 + 
Æu2_powî
 + 
Álu1_powî
 + 
Álu2_powî
 + 
úesu…bus_powî
 + 
‰esu…bus_powî
 + 
du∂iˇti⁄_powî
 + 
com∑ª_powî
;

1266 
TOTAL_powî_cc3
[
thªadid
] = 
RENAME_powî_cc3
 [thªadid]+ 
IQRAM_powî_cc3
[thªadid] + 
FQRAM_powî_cc3
[threadid] +

1267 
CLOCK1_powî_cc3
[
thªadid
] + 
CLOCK2_powî_cc3
[thªadid] + 
CLOCK3_powî_cc3
[threadid] +

1268 
ROB1_powî_cc3
[
thªadid
] + 
ROB2_powî_cc3
[thªadid] + 
BPRED_powî_cc3
[threadid] +

1269 
IWAKEUP_powî_cc3
 [
thªadid
]+ 
FWAKEUP_powî_cc3
[thªadid] + 
ISELECTION_powî_cc3
[threadid] +

1270 
FSELECTION_powî_cc3
[
thªadid
] +

1271 
LSQ_powî_cc3
[
thªadid
] + 
IREGFILE_powî_cc3
[thªadid] + 
FREGFILE_powî_cc3
 [threadid]+

1272 
ICACHE_powî_cc3
[
thªadid
] + 
DCACHE_powî_cc3
[thªadid] + 
ALU1_powî_cc3
[threadid] +

1273 
ALU2_powî_cc3
 [
thªadid
]+ 
FALU1_powî_cc3
 [thªadid]+ 
FALU2_powî_cc3
[threadid] +

1274 
IRESULTBUS_powî_cc3
[
thªadid
] + 
FRESULTBUS_powî_cc3
 [threadid] +

1275 #ifde‡
INPUT_OUTPUT_BUFFER


1276 
öput_buf_powî_cc3
[
thªadid
] + 
ouçut_buf_powî_cc3
[threadid] +

1278 
DCACHE2_powî_cc3
[
thªadid
]+ 
du∂iˇti⁄_powî_cc3
 + 
com∑ª_powî_cc3
;

1280 
max_cy˛e_powî_cc3
 = 
	`MAX
(max_cy˛e_powî_cc3,
TOTAL_powî_cc3
[
thªadid
]);

1281 
	}
}

1283 *
	$gíBuf„r
(*
buf
)

1285 
i
;

1286 
	`°r˝y
(
buf„r2
, 
buf
);

1287 
i
 = 0; i < 
CLUSTERS
; i++)

1289 if(
i
 !
CLUSTERS
-1)

1290 
	`•rötf
(
buf„r1
,"_%d + ", 
i
);

1292 
	`•rötf
(
buf„r1
,"_%d", 
i
);

1293 
	`°rˇt
(
buf„r2
, 
buf„r1
);

1294 if(
i
 !
CLUSTERS
-1)

1295 
	`°rˇt
(
buf„r2
, 
buf
);

1297  
buf„r2
;

1298 
	}
}

1301 
	$powî_ªg_°©s
(
°©_sdb_t
 *
sdb
)

1303 
lcou¡
;

1305 
	`°©_ªg_doubÀ
(
sdb
, "ª«me_powî", "tŸÆÖowî ußgêo‡ª«mêunô", &
ª«me_powî
, 0, 
NULL
);

1306 
	`°©_ªg_doubÀ
(
sdb
, "iqøm_powî", "tŸÆÖowî ußgêo‡öãgî queuêøm", &
iqøm_powî
, 0, 
NULL
);

1307 
	`°©_ªg_doubÀ
(
sdb
, "fqøm_powî", "tŸÆÖowî ußgêo‡Â queuêøm", &
fqøm_powî
, 0, 
NULL
);

1310 
	`°©_ªg_doubÀ
(
sdb
, "˛ock1_powî", "tŸÆÖowî ußgêo‡˛ock fr-íd", &
˛ock1_powî
, 0, 
NULL
);

1311 
	`°©_ªg_doubÀ
(
sdb
, "˛ock2_powî", "tŸÆÖowî ußgêo‡˛ock i¡", &
˛ock2_powî
, 0, 
NULL
);

1312 
	`°©_ªg_doubÀ
(
sdb
, "˛ock3_powî", "tŸÆÖowî ußgêo‡˛ock fp", &
˛ock3_powî
, 0, 
NULL
);

1314 
	`°©_ªg_doubÀ
(
sdb
, "rob1_powî", "tŸÆÖowî ußgêo‡rob wakeup", &
rob1_powî
, 0, 
NULL
);

1315 
	`°©_ªg_doubÀ
(
sdb
, "rob2_powî", "tŸÆÖowî ußgêo‡robÑam", &
rob2_powî
, 0, 
NULL
);

1316 
	`°©_ªg_doubÀ
(
sdb
, "b¥ed_powî", "tŸÆÖowî ußgêo‡b¥ed unô", &
b¥ed_powî
, 0, 
NULL
);

1317 
	`°©_ªg_doubÀ
(
sdb
, "iwakeup_powî", "tŸÆÖowî ußgêo‡öàwakeup", &
iwakeup_powî
, 0, 
NULL
);

1318 
	`°©_ªg_doubÀ
(
sdb
, "fwakeup_powî", "tŸÆÖowî ußgêo‡Â wakeup", &
fwakeup_powî
, 0, 
NULL
);

1319 
	`°©_ªg_doubÀ
(
sdb
, "i£À˘i⁄_powî", "tŸÆÖowî ußgêo‡öà£À˘i⁄", &
i£À˘i⁄_powî
, 0, 
NULL
);

1320 
	`°©_ªg_doubÀ
(
sdb
, "f£À˘i⁄_powî", "tŸÆÖowî ußgêo‡Â sñe˘i⁄", &
f£À˘i⁄_powî
, 0, 
NULL
);

1321 
	`°©_ªg_doubÀ
(
sdb
, "lsq_powî", "tŸÆÖowî ußgêo‡lﬂd/°‹êqueue", &
lsq_powî
, 0, 
NULL
);

1322 
	`°©_ªg_doubÀ
(
sdb
, "úegfûe_powî", "tŸÆÖowî ußgêo‡öàªgfûe", &
úegfûe_powî
, 0, 
NULL
);

1323 
	`°©_ªg_doubÀ
(
sdb
, "‰egfûe_powî", "tŸÆÖowî ußgêo‡ÂÑegfûe", &
‰egfûe_powî
, 0, 
NULL
);

1324 
	`°©_ªg_doubÀ
(
sdb
, "iˇche_powî", "tŸÆÖowî ußgêo‡iˇche", &
iˇche_powî
, 0, 
NULL
);

1325 
	`°©_ªg_doubÀ
(
sdb
, "dˇche_powî", "tŸÆÖowî ußgêo‡dˇche", &
dˇche_powî
, 0, 
NULL
);

1326 
	`°©_ªg_doubÀ
(
sdb
, "dˇche2_powî", "tŸÆÖowî ußgêo‡dˇche2", &
dˇche2_powî
, 0, 
NULL
);

1327 #ifde‡
INPUT_OUTPUT_BUFFER


1328 
	`°©_ªg_doubÀ
(
sdb
, "öput_buf_powî", "tŸÆÖowî ußgêo‡öpuàbuf„r's", &
öput_buf_powî
, 0, 
NULL
);

1329 
	`°©_ªg_doubÀ
(
sdb
, "ouçut_buf_powî", "tŸÆÖowî ußgêo‡ouçuàbuf„r's", &
ouçut_buf_powî
, 0, 
NULL
);

1331 
	`°©_ªg_doubÀ
(
sdb
, "Æu1_powî", "tŸÆÖowî ußgêo‡Æu1", &
Æu1_powî
, 0, 
NULL
);

1332 
	`°©_ªg_doubÀ
(
sdb
, "Æu2_powî", "tŸÆÖowî ußgêo‡Æu2", &
Æu2_powî
, 0, 
NULL
);

1333 
	`°©_ªg_doubÀ
(
sdb
, "Álu1_powî", "tŸÆÖowî ußgêo‡Álu1", &
Álu1_powî
, 0, 
NULL
);

1334 
	`°©_ªg_doubÀ
(
sdb
, "Álu2_powî", "tŸÆÖowî ußgêo‡Álu2", &
Álu2_powî
, 0, 
NULL
);

1335 
	`°©_ªg_doubÀ
(
sdb
, "úesu…bus_powî", "tŸÆÖowî ußgêo‡úesu…bus", &
úesu…bus_powî
, 0, 
NULL
);

1336 
	`°©_ªg_doubÀ
(
sdb
, "‰esu…bus_powî", "tŸÆÖowî ußgêo‡‰esu…bus", &
‰esu…bus_powî
, 0, 
NULL
);

1338 
	`°©_ªg_doubÀ
(
sdb
, "du∂iˇti⁄_powî", "tŸÆÖowî ußgêo‡du∂iˇt‹", &
du∂iˇti⁄_powî
, 0, 
NULL
);

1339 
	`°©_ªg_doubÀ
(
sdb
, "com∑ª_powî", "tŸÆÖowî ußgêo‡com∑øt‹", &
com∑ª_powî
, 0, 
NULL
);

1340 
	`°©_ªg_doubÀ
(
sdb
, "˛ock_powî", "tŸÆÖowî ußgêo‡˛ock", &
˛ock_powî
, 0, 
NULL
);

1342 
	`°©_ªg_f‹muœ
(
sdb
, "avg_ª«me_powî", "avgÖowî ußgêo‡ª«mêunô", "ª«me_powî/sim_cy˛e", 
NULL
);

1343 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iqøm_powî", "avgÖowî ußgêo‡öàissueqÑam", "iqøm_powî/sim_cy˛e", 
NULL
);

1344 
	`°©_ªg_f‹muœ
(
sdb
, "avg_fqøm_powî", "avgÖowî ußgêo‡Â issueqÑam", "fqøm_powî/sim_cy˛e", 
NULL
);

1345 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock1_powî", "avgÖowî ußgêo‡˛ock1", "˛ock1_powî/sim_cy˛e", 
NULL
);

1346 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock2_powî", "avgÖowî ußgêo‡˛ock2", "˛ock2_powî/sim_cy˛e", 
NULL
);

1347 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock3_powî", "avgÖowî ußgêo‡˛ock3", "˛ock3_powî/sim_cy˛e", 
NULL
);

1348 
	`°©_ªg_f‹muœ
(
sdb
, "avg_rob1_powî", "avgÖowî ußgêo‡rob wakeup", "rob1_powî/sim_cy˛e", 
NULL
);

1349 
	`°©_ªg_f‹muœ
(
sdb
, "avg_rob2_powî", "avgÖowî ußgêo‡robÑam", "rob2_powî/sim_cy˛e", 
NULL
);

1350 
	`°©_ªg_f‹muœ
(
sdb
, "avg_b¥ed_powî", "avgÖowî ußgêo‡b¥ed unô", "b¥ed_powî/sim_cy˛e", 
NULL
);

1351 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iwakeup_powî", "avgÖowî ußgêo‡öàwakeup", "iwakeup_powî/sim_cy˛e", 
NULL
);

1352 
	`°©_ªg_f‹muœ
(
sdb
, "avg_fwakeup_powî", "avgÖowî ußgêo‡Â wakeup", "fwakeup_powî/sim_cy˛e", 
NULL
);

1353 
	`°©_ªg_f‹muœ
(
sdb
, "avg_i£À˘i⁄_powî", "avgÖowî ußgêo‡öà£À˘i⁄", "i£À˘i⁄_powî/sim_cy˛e", 
NULL
);

1354 
	`°©_ªg_f‹muœ
(
sdb
, "avg_f£À˘i⁄_powî", "avgÖowî ußgêo‡Â sñe˘i⁄", "f£À˘i⁄_powî/sim_cy˛e", 
NULL
);

1355 
	`°©_ªg_f‹muœ
(
sdb
, "avg_lsq_powî", "avgÖowî ußgêo‡lsq", "lsq_powî/sim_cy˛e", 
NULL
);

1356 
	`°©_ªg_f‹muœ
(
sdb
, "avg_úegfûe_powî", "avgÖowî ußgêo‡öàªgfûe", "úegfûe_powî/sim_cy˛e", 
NULL
);

1357 
	`°©_ªg_f‹muœ
(
sdb
, "avg_‰egfûe_powî", "avgÖowî ußgêo‡ÂÑegfûe", "‰egfûe_powî/sim_cy˛e", 
NULL
);

1358 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iˇche_powî", "avgÖowî ußgêo‡iˇche", "iˇche_powî/sim_cy˛e", 
NULL
);

1359 
	`°©_ªg_f‹muœ
(
sdb
, "avg_dˇche_powî", "avgÖowî ußgêo‡dˇche", "dˇche_powî/sim_cy˛e", 
NULL
);

1360 
	`°©_ªg_f‹muœ
(
sdb
, "avg_dˇche2_powî", "avgÖowî ußgêo‡dˇche2", "dˇche2_powî/sim_cy˛e", 
NULL
);

1361 #ifde‡
INPUT_OUTPUT_BUFFER


1362 
	`°©_ªg_f‹muœ
(
sdb
, "avg_öput_buf_powî", "avgÖowî ußgêo‡öpuàbuf„r's", "öput_buf_powî/sim_cy˛e", 
NULL
);

1363 
	`°©_ªg_f‹muœ
(
sdb
, "avg_ouçut_buf_powî", "avgÖowî ußgêo‡ouçuàbuf„r's", "ouçut_buf_powî/sim_cy˛e", 
NULL
);

1365 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Æu1_powî", "avgÖowî ußgêo‡Æu1", "Æu1_powî/sim_cy˛e", 
NULL
);

1366 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Æu2_powî", "avgÖowî ußgêo‡Æu2", "Æu2_powî/sim_cy˛e", 
NULL
);

1367 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Álu1_powî", "avgÖowî ußgêo‡Álu1", "Álu1_powî/sim_cy˛e", 
NULL
);

1368 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Álu2_powî", "avgÖowî ußgêo‡Álu2", "Álu2_powî/sim_cy˛e", 
NULL
);

1369 
	`°©_ªg_f‹muœ
(
sdb
, "avg_úesu…bus_powî", "avgÖowî ußgêo‡úesu…bus", "úesu…bus_powî/sim_cy˛e", 
NULL
);

1370 
	`°©_ªg_f‹muœ
(
sdb
, "avg_‰esu…bus_powî", "avgÖowî ußgêo‡‰esu…bus", "‰esu…bus_powî/sim_cy˛e", 
NULL
);

1372 
	`°©_ªg_f‹muœ
(
sdb
, "avg_du∂iˇti⁄_powî", "avgÖowî ußgêo‡du∂iˇt‹", "du∂iˇti⁄_powî/sim_cy˛e", 
NULL
);

1373 
	`°©_ªg_f‹muœ
(
sdb
, "avg_com∑ª_powî", "avgÖowî ußgêo‡com∑øt‹", "com∑ª_powî/sim_cy˛e", 
NULL
);

1374 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock_powî", "avgÖowî ußgêo‡˛ock", "˛ock_powî/sim_cy˛e", 
NULL
);

1376 
	`°©_ªg_f‹muœ
(
sdb
, "tŸÆ_powî", "tŸÆÖowîÖî cy˛ê(WË(cumuœtive)",
	`x°r
(
TOTAL_CYCLE_POWER
), 
NULL
);

1377 
	`°©_ªg_f‹muœ
(
sdb
, "avg_tŸÆ_powî_cy˛e", "avîagêtŸÆÖowîÖî cy˛ê(W)",
	`x°r
(
TOTAL_CYCLE_POWER
/
sim_cy˛e
), 
NULL
);

1378 
	`°©_ªg_f‹muœ
(
sdb
, "avg_tŸÆ_powî_ö¢", "avîagêtŸÆÖowîÖî in¢ (nŸáccuøã)",
	`x°r
(
TOTAL_CYCLE_POWER
/
sim_tŸÆ_ö¢
), 
NULL
);

1380 
lcou¡
 =0;Ücou¡<
CLUSTERS
;lcount++)

1382 
	`•rötf
(
buf„r1
,"CLOCK1_powî_cc3_%d",
lcou¡
);

1383 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡CLOCK1", &
CLOCK1_powî_cc3
[
lcou¡
], 0, 
NULL
);

1384 
	`•rötf
(
buf„r1
,"CLOCK2_powî_cc3_%d",
lcou¡
);

1385 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡CLOCK2", &
CLOCK2_powî_cc3
[
lcou¡
], 0, 
NULL
);

1386 
	`•rötf
(
buf„r1
,"CLOCK3_powî_cc3_%d",
lcou¡
);

1387 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡CLOCK3", &
CLOCK3_powî_cc3
[
lcou¡
], 0, 
NULL
);

1388 
	`•rötf
(
buf„r1
,"RENAME_powî_cc3_%d",
lcou¡
);

1389 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡RENAME", &
RENAME_powî_cc3
[
lcou¡
], 0, 
NULL
);

1390 
	`•rötf
(
buf„r1
,"IQRAM_powî_cc3_%d",
lcou¡
);

1391 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡IQRAM ", &
IQRAM_powî_cc3
[
lcou¡
], 0, 
NULL
);

1392 
	`•rötf
(
buf„r1
,"FQRAM_powî_cc3_%d",
lcou¡
);

1393 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ FQRAM", &
FQRAM_powî_cc3
[
lcou¡
], 0, 
NULL
);

1394 
	`•rötf
(
buf„r1
,"ROB1_powî_cc3_%d",
lcou¡
);

1395 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ ROB1", &
ROB1_powî_cc3
[
lcou¡
], 0, 
NULL
);

1396 
	`•rötf
(
buf„r1
,"ROB2_powî_cc3_%d",
lcou¡
);

1397 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ROB2 ", &
ROB2_powî_cc3
[
lcou¡
], 0, 
NULL
);

1398 
	`•rötf
(
buf„r1
,"BPRED_powî_cc3_%d",
lcou¡
);

1399 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ BPRED", &
BPRED_powî_cc3
[
lcou¡
], 0, 
NULL
);

1400 
	`•rötf
(
buf„r1
,"IWAKEUP_powî_cc3_%d",
lcou¡
);

1401 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡IWAKEUP ", &
IWAKEUP_powî_cc3
[
lcou¡
], 0, 
NULL
);

1402 
	`•rötf
(
buf„r1
,"FWAKEUP_powî_cc3_%d",
lcou¡
);

1403 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡FWAKEUP", &
FWAKEUP_powî_cc3
[
lcou¡
], 0, 
NULL
);

1404 
	`•rötf
(
buf„r1
,"ISELECTION_powî_cc3_%d",
lcou¡
);

1405 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ISELECTION", &
ISELECTION_powî_cc3
[
lcou¡
], 0, 
NULL
);

1406 
	`•rötf
(
buf„r1
,"FSELECTION_powî_cc3_%d",
lcou¡
);

1407 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡FSELECTION", &
FSELECTION_powî_cc3
[
lcou¡
], 0, 
NULL
);

1408 
	`•rötf
(
buf„r1
,"LSQ_powî_cc3_%d",
lcou¡
);

1409 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡LSQ", &
LSQ_powî_cc3
[
lcou¡
], 0, 
NULL
);

1410 
	`•rötf
(
buf„r1
,"IREGFILE_powî_cc3_%d",
lcou¡
);

1411 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡IREGFILE", &
IREGFILE_powî_cc3
[
lcou¡
], 0, 
NULL
);

1412 
	`•rötf
(
buf„r1
,"FREGFILE_powî_cc3_%d",
lcou¡
);

1413 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡FREGFILE", &
FREGFILE_powî_cc3
[
lcou¡
], 0, 
NULL
);

1414 
	`•rötf
(
buf„r1
,"ALU1_powî_cc3_%d",
lcou¡
);

1415 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ALU1", &
ALU1_powî_cc3
[
lcou¡
], 0, 
NULL
);

1416 
	`•rötf
(
buf„r1
,"ALU2_powî_cc3_%d",
lcou¡
);

1417 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ALU2", &
ALU2_powî_cc3
[
lcou¡
], 0, 
NULL
);

1418 
	`•rötf
(
buf„r1
,"FALU1_powî_cc3_%d",
lcou¡
);

1419 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡FALU1", &
FALU1_powî_cc3
[
lcou¡
], 0, 
NULL
);

1420 
	`•rötf
(
buf„r1
,"FALU2_powî_cc3_%d",
lcou¡
);

1421 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡FALU2", &
FALU2_powî_cc3
[
lcou¡
], 0, 
NULL
);

1422 
	`•rötf
(
buf„r1
,"IRESULTBUS_powî_cc3_%d",
lcou¡
);

1423 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡IRESULTBUS", &
IRESULTBUS_powî_cc3
[
lcou¡
], 0, 
NULL
);

1424 
	`•rötf
(
buf„r1
,"FRESULTBUS_powî_cc3_%d",
lcou¡
);

1425 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡FRESULTBUS", &
FRESULTBUS_powî_cc3
[
lcou¡
], 0, 
NULL
);

1426 
	`•rötf
(
buf„r1
,"ICACHE_powî_cc3_%d",
lcou¡
);

1427 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ICACHE", &
ICACHE_powî_cc3
[
lcou¡
], 0, 
NULL
);

1428 
	`•rötf
(
buf„r1
,"DCACHE_powî_cc3_%d",
lcou¡
);

1429 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡DCACHE", &
DCACHE_powî_cc3
[
lcou¡
], 0, 
NULL
);

1430 
	`•rötf
(
buf„r1
,"DCACHE2_powî_cc3_%d",
lcou¡
);

1431 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡DCACHE2", &
DCACHE2_powî_cc3
[
lcou¡
], 0, 
NULL
);

1432 #ifde‡
INPUT_OUTPUT_BUFFER


1433 
	`•rötf
(
buf„r1
,"öput_buf_powî_cc3_%d",
lcou¡
);

1434 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡öpuàbuf„r", &
öput_buf_powî_cc3
[
lcou¡
], 0, 
NULL
);

1435 
	`•rötf
(
buf„r1
,"ouçut_buf_powî_cc3_%d",
lcou¡
);

1436 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡ouçuàbuf„r", &
ouçut_buf_powî_cc3
[
lcou¡
], 0, 
NULL
);

1438 
	`•rötf
(
buf„r1
,"DUPLICATION_powî_cc3_%d",
lcou¡
);

1439 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡du∂iˇt‹_cc3", &
du∂iˇti⁄_powî_cc3
, 0, 
NULL
);

1440 
	`•rötf
(
buf„r1
,"COMPARE_powî_cc3_%d",
lcou¡
);

1441 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgêo‡com∑øt‹_cc3", &
com∑ª_powî_cc3
, 0, 
NULL
);

1442 
	`•rötf
(
buf„r1
,"TOTAL_powî_cc3_%d",
lcou¡
);

1443 
	`°©_ªg_doubÀ
(
sdb
, 
buf„r1
, "tŸÆÖowî ußgê", &
TOTAL_powî_cc3
[
lcou¡
], 0, 
NULL
);

1444 
	`•rötf
(
buf„r1
,"AVG_TOTAL_powî_cc3_%d",
lcou¡
);

1445 
	`•rötf
(
buf„r2
,"TOTAL_powî_cc3_%d/sim_cy˛e", 
lcou¡
);

1446 
	`°©_ªg_f‹muœ
(
sdb
, 
buf„r1
, "avîagêtŸÆÖowîÖî cy˛e_cc3", 
buf„r2
, 
NULL
);

1447 
	`•rötf
(
buf„r1
,"AVG_TOTAL_powî_ö¢_cc3_%d",
lcou¡
);

1448 
	`•rötf
(
buf„r2
,"TOTAL_powî_cc3_%d/sim_tŸÆ_ö¢", 
lcou¡
);

1449 
	`°©_ªg_f‹muœ
(
sdb
, 
buf„r1
, "avîagêtŸÆÖowîÖî in¢_cc3“Ÿáccuøã)",
buf„r2
, 
NULL
);

1452 
	`°©_ªg_f‹muœ
(
sdb
, "˛ock1_powî_cc3", "tŸÆÖowî ußgêo‡˛ock1_cc3", 
	`gíBuf„r
("CLOCK1_powî_cc3"), 
NULL
);

1453 
	`°©_ªg_f‹muœ
(
sdb
, "˛ock2_powî_cc3", "tŸÆÖowî ußgêo‡˛ock2_cc3", 
	`gíBuf„r
("CLOCK2_powî_cc3"), 
NULL
);

1454 
	`°©_ªg_f‹muœ
(
sdb
, "˛ock3_powî_cc3", "tŸÆÖowî ußgêo‡˛ock3_cc3", 
	`gíBuf„r
("CLOCK3_powî_cc3"), 
NULL
);

1455 
	`°©_ªg_f‹muœ
(
sdb
, "ª«me_powî_cc3", "tŸÆÖowî ußgêo‡ª«mêunô_cc3", 
	`gíBuf„r
("RENAME_powî_cc3"), 
NULL
);

1456 
	`°©_ªg_f‹muœ
(
sdb
, "iqøm_powî_cc3", "tŸÆÖowî ußgêo‡öàissueqÑam_cc3", 
	`gíBuf„r
("IQRAM_powî_cc3"), 
NULL
);

1457 
	`°©_ªg_f‹muœ
(
sdb
, "fqøm_powî_cc3", "tŸÆÖowî ußgêo‡Â issueqÑam_cc3", 
	`gíBuf„r
("FQRAM_powî_cc3"), 
NULL
);

1458 
	`°©_ªg_f‹muœ
(
sdb
, "rob1_powî_cc3", "tŸÆÖowî ußgêo‡rob wakeup_cc3", 
	`gíBuf„r
("ROB1_powî_cc3"), 
NULL
);

1459 
	`°©_ªg_f‹muœ
(
sdb
, "rob2_powî_cc3", "tŸÆÖowî ußgêo‡robÑam_cc3", 
	`gíBuf„r
("ROB2_powî_cc3"), 
NULL
);

1460 
	`°©_ªg_f‹muœ
(
sdb
, "b¥ed_powî_cc3", "tŸÆÖowî ußgêo‡b¥ed unô_cc3", 
	`gíBuf„r
("BPRED_powî_cc3"), 
NULL
);

1461 
	`°©_ªg_f‹muœ
(
sdb
, "iwakeup_powî_cc3", "tŸÆÖowî ußgêo‡öàwakeup_cc3", 
	`gíBuf„r
("IWAKEUP_powî_cc3"), 
NULL
);

1462 
	`°©_ªg_f‹muœ
(
sdb
, "fwakeup_powî_cc3", "tŸÆÖowî ußgêo‡Â wakeup_cc3", 
	`gíBuf„r
("FWAKEUP_powî_cc3"), 
NULL
);

1463 
	`°©_ªg_f‹muœ
(
sdb
, "i£À˘i⁄_powî_cc3", "tŸÆÖowî ußgêo‡öà£À˘i⁄_cc3", 
	`gíBuf„r
("ISELECTION_powî_cc3"), 
NULL
);

1464 
	`°©_ªg_f‹muœ
(
sdb
, "f£À˘i⁄_powî_cc3", "tŸÆÖowî ußgêo‡Â sñe˘i⁄_cc3", 
	`gíBuf„r
("FSELECTION_powî_cc3"), 
NULL
);

1465 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_powî_cc3", "tŸÆÖowî ußgêo‡lsq_cc3", 
	`gíBuf„r
("LSQ_powî_cc3"), 
NULL
);

1466 
	`°©_ªg_f‹muœ
(
sdb
, "úegfûe_powî_cc3", "tŸÆÖowî ußgêo‡öàªgfûe_cc3", 
	`gíBuf„r
("IREGFILE_powî_cc3"), 
NULL
);

1467 
	`°©_ªg_f‹muœ
(
sdb
, "‰egfûe_powî_cc3", "tŸÆÖowî ußgêo‡ÂÑegfûe_cc3", 
	`gíBuf„r
("FREGFILE_powî_cc3"), 
NULL
);

1468 
	`°©_ªg_f‹muœ
(
sdb
, "Æu1_powî_cc3", "tŸÆÖowî ußgêo‡Æu1_cc3", 
	`gíBuf„r
("ALU1_powî_cc3"), 
NULL
);

1469 
	`°©_ªg_f‹muœ
(
sdb
, "Æu2_powî_cc3", "tŸÆÖowî ußgêo‡Æu2_cc3", 
	`gíBuf„r
("ALU2_powî_cc3"), 
NULL
);

1470 
	`°©_ªg_f‹muœ
(
sdb
, "Álu1_powî_cc3", "tŸÆÖowî ußgêo‡Álu1_cc3", 
	`gíBuf„r
("FALU1_powî_cc3"), 
NULL
);

1471 
	`°©_ªg_f‹muœ
(
sdb
, "Álu2_powî_cc3", "tŸÆÖowî ußgêo‡Álu2_cc3", 
	`gíBuf„r
("FALU2_powî_cc3"), 
NULL
);

1472 
	`°©_ªg_f‹muœ
(
sdb
, "úesu…bus_powî_cc3", "tŸÆÖowî ußgêo‡úesu…bus_cc3", 
	`gíBuf„r
("IRESULTBUS_powî_cc3"), 
NULL
);

1473 
	`°©_ªg_f‹muœ
(
sdb
, "‰esu…bus_powî_cc3", "tŸÆÖowî ußgêo‡‰esu…bus_cc3", 
	`gíBuf„r
("FRESULTBUS_powî_cc3"), 
NULL
);

1474 
	`°©_ªg_f‹muœ
(
sdb
, "iˇche_powî_cc3", "tŸÆÖowî ußgêo‡iˇche_cc3", 
	`gíBuf„r
("ICACHE_powî_cc3"), 
NULL
);

1475 
	`°©_ªg_f‹muœ
(
sdb
, "dˇche_powî_cc3", "tŸÆÖowî ußgêo‡dˇche_cc3", 
	`gíBuf„r
("DCACHE_powî_cc3"), 
NULL
);

1476 
	`°©_ªg_f‹muœ
(
sdb
, "dˇche2_powî_cc3", "tŸÆÖowî ußgêo‡dˇche2_cc3", 
	`gíBuf„r
("DCACHE2_powî_cc3"), 
NULL
);

1477 #ifde‡
INPUT_OUTPUT_BUFFER


1478 
	`°©_ªg_f‹muœ
(
sdb
, "öput_buf_powî_cc3", "tŸÆÖowî ußgêo‡öpuàbuf„r_cc3", 
	`gíBuf„r
("öput_buf_powî_cc3"), 
NULL
);

1479 
	`°©_ªg_f‹muœ
(
sdb
, "ouçut_buf_powî_cc3", "tŸÆÖowî ußgêo‡ouçuàbuf„r_cc3", 
	`gíBuf„r
("ouçut_buf_powî_cc3"), 
NULL
);

1481 
	`°©_ªg_f‹muœ
(
sdb
, "du∂iˇti⁄_powî_cc3", "tŸÆÖowî ußgêo‡du∂iˇt‹_cc3", 
	`gíBuf„r
("DUPLICATION_powî_cc3"), 
NULL
);

1482 
	`°©_ªg_f‹muœ
(
sdb
, "com∑ª_powî_cc3", "tŸÆÖowî ußgêo‡com∑øt‹_cc3", 
	`gíBuf„r
("COMPARE_powî_cc3"), 
NULL
);

1484 
	`°©_ªg_f‹muœ
(
sdb
, "avg_ª«me_powî_cc3", "avgÖowî ußgêo‡ª«mêunô_cc3", "ª«me_powî_cc3/sim_cy˛e", 
NULL
);

1485 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iqøm_powî_cc3", "avgÖowî ußgêo‡öàissueqÑam_cc3", "iqøm_powî_cc3/sim_cy˛e", 
NULL
);

1486 
	`°©_ªg_f‹muœ
(
sdb
, "avg_fqøm_powî_cc3", "avgÖowî ußgêo‡Â issueqÑam_cc3", "fqøm_powî_cc3/sim_cy˛e", 
NULL
);

1487 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock1_powî_cc3", "avgÖowî ußgêo‡˛ock1_cc3", "˛ock1_powî_cc3/sim_cy˛e", 
NULL
);

1488 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock2_powî_cc3", "avgÖowî ußgêo‡˛ock2_cc3", "˛ock2_powî_cc3/sim_cy˛e", 
NULL
);

1489 
	`°©_ªg_f‹muœ
(
sdb
, "avg_˛ock3_powî_cc3", "avgÖowî ußgêo‡˛ock3_cc3", "˛ock3_powî_cc3/sim_cy˛e", 
NULL
);

1490 
	`°©_ªg_f‹muœ
(
sdb
, "avg_rob1_powî_cc3", "avgÖowî ußgêo‡rob wakeup_cc3", "rob1_powî_cc3/sim_cy˛e", 
NULL
);

1491 
	`°©_ªg_f‹muœ
(
sdb
, "avg_rob2_powî_cc3", "avgÖowî ußgêo‡robÑam_cc3", "rob2_powî_cc3/sim_cy˛e", 
NULL
);

1492 
	`°©_ªg_f‹muœ
(
sdb
, "avg_b¥ed_powî_cc3", "avgÖowî ußgêo‡b¥ed unô_cc3", "b¥ed_powî_cc3/sim_cy˛e", 
NULL
);

1493 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iwakeup_powî_cc3", "avgÖowî ußgêo‡öàwakeup_cc3", "iwakeup_powî_cc3/sim_cy˛e", 
NULL
);

1494 
	`°©_ªg_f‹muœ
(
sdb
, "avg_fwakeup_powî_cc3", "avgÖowî ußgêo‡Â wakeup_cc3", "fwakeup_powî_cc3/sim_cy˛e", 
NULL
);

1495 
	`°©_ªg_f‹muœ
(
sdb
, "avg_i£À˘i⁄_powî_cc3", "avgÖowî ußgêo‡öà£À˘i⁄_cc3", "i£À˘i⁄_powî_cc3/sim_cy˛e", 
NULL
);

1496 
	`°©_ªg_f‹muœ
(
sdb
, "avg_f£À˘i⁄_powî_cc3", "avgÖowî ußgêo‡Â sñe˘i⁄_cc3", "f£À˘i⁄_powî_cc3/sim_cy˛e", 
NULL
);

1497 
	`°©_ªg_f‹muœ
(
sdb
, "avg_lsq_powî_cc3", "avgÖowî ußgêo‡ö°ru˘i⁄Üsq_cc3", "lsq_powî_cc3/sim_cy˛e", 
NULL
);

1498 
	`°©_ªg_f‹muœ
(
sdb
, "avg_úegfûe_powî_cc3", "avgÖowî ußgêo‡öàªgfûe_cc3", "úegfûe_powî_cc3/sim_cy˛e", 
NULL
);

1499 
	`°©_ªg_f‹muœ
(
sdb
, "avg_‰egfûe_powî_cc3", "avgÖowî ußgêo‡ÂÑegfûe_cc3", "‰egfûe_powî_cc3/sim_cy˛e", 
NULL
);

1500 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iˇche_powî_cc3", "avgÖowî ußgêo‡iˇche_cc3", "iˇche_powî_cc3/sim_cy˛e", 
NULL
);

1501 
	`°©_ªg_f‹muœ
(
sdb
, "avg_dˇche_powî_cc3", "avgÖowî ußgêo‡dˇche_cc3", "dˇche_powî_cc3/sim_cy˛e", 
NULL
);

1502 
	`°©_ªg_f‹muœ
(
sdb
, "avg_dˇche2_powî_cc3", "avgÖowî ußgêo‡dˇche2_cc3", "dˇche2_powî_cc3/sim_cy˛e", 
NULL
);

1503 #ifde‡
INPUT_OUTPUT_BUFFER


1504 
	`°©_ªg_f‹muœ
(
sdb
, "avg_öput_buf_powî_cc3", "avgÖowî ußgêo‡öput_buf_cc3", "öput_buf_powî_cc3/sim_cy˛e", 
NULL
);

1505 
	`°©_ªg_f‹muœ
(
sdb
, "avg_ouçut_buf_powî_cc3", "avgÖowî ußgêo‡ouçut_buf_cc3", "ouçut_buf_powî_cc3/sim_cy˛e", 
NULL
);

1507 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Æu1_powî_cc3", "avgÖowî ußgêo‡Æu1_cc3", "Æu1_powî_cc3/sim_cy˛e", 
NULL
);

1508 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Æu2_powî_cc3", "avgÖowî ußgêo‡Æu2_cc3", "Æu2_powî_cc3/sim_cy˛e", 
NULL
);

1509 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Álu1_powî_cc3", "avgÖowî ußgêo‡Álu1_cc3", "Álu1_powî_cc3/sim_cy˛e", 
NULL
);

1510 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Álu2_powî_cc3", "avgÖowî ußgêo‡Álu2_cc3", "Álu2_powî_cc3/sim_cy˛e", 
NULL
);

1511 
	`°©_ªg_f‹muœ
(
sdb
, "avg_úesu…bus_powî_cc3", "avgÖowî ußgêo‡úesu…bus_cc3", "úesu…bus_powî_cc3/sim_cy˛e", 
NULL
);

1512 
	`°©_ªg_f‹muœ
(
sdb
, "avg_‰esu…bus_powî_cc3", "avgÖowî ußgêo‡‰esu…bus_cc3", "‰esu…bus_powî_cc3/sim_cy˛e", 
NULL
);

1513 
	`°©_ªg_f‹muœ
(
sdb
, "avg_du∂iˇti⁄_powî_cc3", "avgÖowî ußgêo‡du∂iˇt‹_cc3", "du∂iˇti⁄_powî_cc3/sim_cy˛e", 
NULL
);

1514 
	`°©_ªg_f‹muœ
(
sdb
, "avg_com∑ª_powî_cc3", "avgÖowî ußgêo‡com∑øt‹_cc3", "com∑ª_powî_cc3/sim_cy˛e", 
NULL
);

1515 
	`°©_ªg_f‹muœ
(
sdb
, "tŸÆ_powî_cy˛e_cc3", "tŸÆÖowîÖî cy˛e_cc3",
	`x°r
(
TOTAL_CYCLE_POWER_CC3
), 
NULL
);

1516 
	`°©_ªg_f‹muœ
(
sdb
, "avg_tŸÆ_powî_cy˛e_cc3", "avîagêtŸÆÖowîÖî cy˛e_cc3",
	`x°r
(
TOTAL_CYCLE_POWER_CC3
/
sim_cy˛e
), 
NULL
);

1517 
	`°©_ªg_f‹muœ
(
sdb
, "avg_tŸÆ_powî_ö¢_cc3", "avîagêtŸÆÖowîÖî in¢_cc3“Ÿáccuøã)",
	`x°r
(
TOTAL_CYCLE_POWER_CC3
/
sim_tŸÆ_ö¢
), 
NULL
);

1519 
	`°©_ªg_f‹muœ
(
sdb
, "ª«me_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿ª«me",
	`x°r
((
ª«me_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1520 
	`°©_ªg_f‹muœ
(
sdb
, "iqøm_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿öàissueqÑam",
	`x°r
((
iqøm_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1521 
	`°©_ªg_f‹muœ
(
sdb
, "fqøm_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Â issueqÑam",
	`x°r
((
fqøm_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1522 
	`°©_ªg_f‹muœ
(
sdb
, "rob1_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿rob wakeup",
	`x°r
((
rob1_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1523 
	`°©_ªg_f‹muœ
(
sdb
, "rob2_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿robÑam",
	`x°r
((
rob2_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1524 
	`°©_ªg_f‹muœ
(
sdb
, "b¥ed_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿b¥ed",
	`x°r
((
b¥ed_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1525 
	`°©_ªg_f‹muœ
(
sdb
, "lsq_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿lsq",
	`x°r
((
lsq_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1526 
	`°©_ªg_f‹muœ
(
sdb
, "iwakeup_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿öàwakeup",
	`x°r
((
iwakeup_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1527 
	`°©_ªg_f‹muœ
(
sdb
, "fwakeup_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Â wakeup",
	`x°r
((
fwakeup_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1528 
	`°©_ªg_f‹muœ
(
sdb
, "i£À˘i⁄_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿öà£À˘i⁄",
	`x°r
((
i£À˘i⁄_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1529 
	`°©_ªg_f‹muœ
(
sdb
, "f£À˘i⁄_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Â sñe˘i⁄",
	`x°r
((
f£À˘i⁄_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1530 
	`°©_ªg_f‹muœ
(
sdb
, "úegfûe_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿öàªgfûe",
	`x°r
((
úegfûe_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1531 
	`°©_ªg_f‹muœ
(
sdb
, "‰egfûe_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿ÂÑegfûe",
	`x°r
((
‰egfûe_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1532 
	`°©_ªg_f‹muœ
(
sdb
, "iˇche_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿iˇche",
	`x°r
((
iˇche_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1533 
	`°©_ªg_f‹muœ
(
sdb
, "úesu…bus_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿úesu…bus",
	`x°r
((
úesu…bus_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1534 
	`°©_ªg_f‹muœ
(
sdb
, "‰esu…bus_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿‰esu…bus",
	`x°r
((
‰esu…bus_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1535 
	`°©_ªg_f‹muœ
(
sdb
, "Æu1_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Æu1",
	`x°r
((
Æu1_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1536 
	`°©_ªg_f‹muœ
(
sdb
, "Æu2_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Æu2",
	`x°r
((
Æu2_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1537 
	`°©_ªg_f‹muœ
(
sdb
, "Álu1_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Álu1",
	`x°r
((
Álu1_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1538 
	`°©_ªg_f‹muœ
(
sdb
, "Álu2_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿Álu2",
	`x°r
((
Álu2_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1539 
	`°©_ªg_f‹muœ
(
sdb
, "dˇche_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿dˇche",
	`x°r
((
dˇche_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1540 
	`°©_ªg_f‹muœ
(
sdb
, "dˇche2_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿dˇche2",
	`x°r
((
dˇche2_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1541 #ifde‡
INPUT_OUTPUT_BUFFER


1542 
	`°©_ªg_f‹muœ
(
sdb
, "öput_buf_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿öput_buf",
	`x°r
((
öput_buf_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1543 
	`°©_ªg_f‹muœ
(
sdb
, "ouçut_buf_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿ouçut_buf",
	`x°r
((
ouçut_buf_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1545 
	`°©_ªg_f‹muœ
(
sdb
, "˛ock1_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿˛ock1",
	`x°r
((
˛ock1_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1546 
	`°©_ªg_f‹muœ
(
sdb
, "˛ock2_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿˛ock2",
	`x°r
((
˛ock2_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1547 
	`°©_ªg_f‹muœ
(
sdb
, "˛ock3_‰a˘i⁄", "cc3 Pî˚¡agêo‡powî dissù©ed i¿˛ock3",
	`x°r
((
˛ock3_powî_cc3
*100)/
TOTAL_CYCLE_POWER_CC3
),
NULL
);

1549 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_ª«me_ac˚ss", "tŸÆÇumbîác˚s£†o‡ª«mêunô", &
tŸÆ_ª«me_ac˚ss
, 0, 
NULL
);

1550 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_iqøm_ac˚ss", "tŸÆÇumbîác˚s£†o‡öàissueqÑam", &
tŸÆ_iqøm_ac˚ss
, 0, 
NULL
);

1551 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_fqøm_ac˚ss", "tŸÆÇumbîác˚s£†o‡Â issueqÑam", &
tŸÆ_fqøm_ac˚ss
, 0, 
NULL
);

1552 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_rob1_ac˚ss", "tŸÆÇumbîác˚s£†o‡rob wakeup", &
tŸÆ_rob1_ac˚ss
, 0, 
NULL
);

1553 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_rob2_ac˚ss", "tŸÆÇumbîác˚s£†o‡rob wakeup", &
tŸÆ_rob2_ac˚ss
, 0, 
NULL
);

1554 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_b¥ed_ac˚ss", "tŸÆÇumbîác˚s£†o‡b¥ed unô", &
tŸÆ_b¥ed_ac˚ss
, 0, 
NULL
);

1555 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_iwakeup_ac˚ss", "tŸÆÇumbîác˚s£†o‡öàwakeup", &
tŸÆ_iwakeup_ac˚ss
, 0, 
NULL
);

1556 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_fwakeup_ac˚ss", "tŸÆÇumbîác˚s£†o‡Â wakeup", &
tŸÆ_fwakeup_ac˚ss
, 0, 
NULL
);

1557 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_i£À˘i⁄_ac˚ss", "tŸÆÇumbîác˚s£†o‡öà£À˘i⁄", &
tŸÆ_i£À˘i⁄_ac˚ss
, 0, 
NULL
);

1558 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_f£À˘i⁄_ac˚ss", "tŸÆÇumbîác˚s£†o‡Â sñe˘i⁄", &
tŸÆ_f£À˘i⁄_ac˚ss
, 0, 
NULL
);

1559 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_lsq_ac˚ss", "tŸÆÇumbîác˚s£†o‡lﬂd/°‹êqueue", &
tŸÆ_lsq_ac˚ss
, 0, 
NULL
);

1560 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_úegfûe_ac˚ss", "tŸÆÇumbîác˚s£†o‡öàªgfûe", &
tŸÆ_úegfûe_ac˚ss
, 0, 
NULL
);

1561 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_‰egfûe_ac˚ss", "tŸÆÇumbîác˚s£†o‡ÂÑegfûe", &
tŸÆ_‰egfûe_ac˚ss
, 0, 
NULL
);

1562 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_iˇche_ac˚ss", "tŸÆÇumbîác˚s£†o‡iˇche", &
tŸÆ_iˇche_ac˚ss
, 0, 
NULL
);

1563 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_dˇche_ac˚ss", "tŸÆÇumbîác˚s£†o‡dˇche", &
tŸÆ_dˇche_ac˚ss
, 0, 
NULL
);

1564 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_dˇche2_ac˚ss", "tŸÆÇumbîác˚s£†o‡dˇche2", &
tŸÆ_dˇche2_ac˚ss
, 0, 
NULL
);

1565 #ifde‡
INPUT_OUTPUT_BUFFER


1566 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_öput_buf_ac˚ss", "tŸÆÇumbîác˚s£†o‡öput_buf", &
tŸÆ_öput_buf_ac˚ss
, 0, 
NULL
);

1567 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_ouçut_buf_ac˚ss", "tŸÆÇumbîác˚s£†o‡ouçut_buf", &
tŸÆ_ouçut_buf_ac˚ss
, 0, 
NULL
);

1569 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_Æu1_ac˚ss", "tŸÆÇumbîác˚s£†o‡Æu1", &
tŸÆ_Æu1_ac˚ss
, 0, 
NULL
);

1570 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_Æu2_ac˚ss", "tŸÆÇumbîác˚s£†o‡Æu2", &
tŸÆ_Æu2_ac˚ss
, 0, 
NULL
);

1571 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_Álu1_ac˚ss", "tŸÆÇumbîác˚s£†o‡Álu1", &
tŸÆ_Álu1_ac˚ss
, 0, 
NULL
);

1572 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_Álu2_ac˚ss", "tŸÆÇumbîác˚s£†o‡Álu2", &
tŸÆ_Álu2_ac˚ss
, 0, 
NULL
);

1573 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_úesu…bus_ac˚ss", "tŸÆÇumbîác˚s£†o‡úesu…bus", &
tŸÆ_úesu…bus_ac˚ss
, 0, 
NULL
);

1574 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_‰esu…bus_ac˚ss", "tŸÆÇumbîác˚s£†o‡‰esu…bus", &
tŸÆ_‰esu…bus_ac˚ss
, 0, 
NULL
);

1575 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_du∂iˇti⁄_ac˚ss", "tŸÆÇumbîác˚s£†o‡ö°ru˘i⁄ du∂iˇti⁄", &
tŸÆ_du∂iˇti⁄_ac˚ss
, 0, 
NULL
);

1576 
	`°©_ªg_cou¡î
(
sdb
, "tŸÆ_com∑ª_ac˚ss", "tŸÆÇumbîác˚s£†o‡ö°ru˘i⁄ com∑ª", &
tŸÆ_com∑ª_ac˚ss
, 0, 
NULL
);

1578 
	`°©_ªg_f‹muœ
(
sdb
, "avg_ª«me_ac˚ss", "avgÇumbîác˚s£†o‡ª«mêunô", "tŸÆ_ª«me_ac˚ss/sim_cy˛e", 
NULL
);

1579 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iqøm_ac˚ss", "avgÇumbîác˚s£†o‡öàissueqÑam", "tŸÆ_iqøm_ac˚ss/sim_cy˛e", 
NULL
);

1580 
	`°©_ªg_f‹muœ
(
sdb
, "avg_fqøm_ac˚ss", "avgÇumbîác˚s£†o‡Â issueqÑam", "tŸÆ_fqøm_ac˚ss/sim_cy˛e", 
NULL
);

1581 
	`°©_ªg_f‹muœ
(
sdb
, "avg_rob1_ac˚ss", "avgÇumbîác˚s£†o‡rob wakeup", "tŸÆ_rob1_ac˚ss/sim_cy˛e", 
NULL
);

1582 
	`°©_ªg_f‹muœ
(
sdb
, "avg_rob2_ac˚ss", "avgÇumbîác˚s£†o‡robÑam", "tŸÆ_rob2_ac˚ss/sim_cy˛e", 
NULL
);

1583 
	`°©_ªg_f‹muœ
(
sdb
, "avg_b¥ed_ac˚ss", "avgÇumbîác˚s£†o‡b¥ed unô", "tŸÆ_b¥ed_ac˚ss/sim_cy˛e", 
NULL
);

1584 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iwakeup_ac˚ss", "avgÇumbîác˚s£†o‡öàwakeup", "tŸÆ_iwakeup_ac˚ss/sim_cy˛e", 
NULL
);

1585 
	`°©_ªg_f‹muœ
(
sdb
, "avg_fwakeup_ac˚ss", "avgÇumbîác˚s£†o‡Â wakeup", "tŸÆ_fwakeup_ac˚ss/sim_cy˛e", 
NULL
);

1586 
	`°©_ªg_f‹muœ
(
sdb
, "avg_i£À˘i⁄_ac˚ss", "avgÇumbîác˚s£†o‡öà£À˘i⁄", "tŸÆ_i£À˘i⁄_ac˚ss/sim_cy˛e", 
NULL
);

1587 
	`°©_ªg_f‹muœ
(
sdb
, "avg_f£À˘i⁄_ac˚ss", "avgÇumbîác˚s£†o‡Â sñe˘i⁄", "tŸÆ_f£À˘i⁄_ac˚ss/sim_cy˛e", 
NULL
);

1588 
	`°©_ªg_f‹muœ
(
sdb
, "avg_lsq_ac˚ss", "avgÇumbîác˚s£†o‡lsq", "tŸÆ_lsq_ac˚ss/sim_cy˛e", 
NULL
);

1589 
	`°©_ªg_f‹muœ
(
sdb
, "avg_úegfûe_ac˚ss", "avgÇumbîác˚s£†o‡öàªgfûe", "tŸÆ_úegfûe_ac˚ss/sim_cy˛e", 
NULL
);

1590 
	`°©_ªg_f‹muœ
(
sdb
, "avg_‰egfûe_ac˚ss", "avgÇumbîác˚s£†o‡ÂÑegfûe", "tŸÆ_‰egfûe_ac˚ss/sim_cy˛e", 
NULL
);

1591 
	`°©_ªg_f‹muœ
(
sdb
, "avg_iˇche_ac˚ss", "avgÇumbîác˚s£†o‡iˇche", "tŸÆ_iˇche_ac˚ss/sim_cy˛e", 
NULL
);

1592 
	`°©_ªg_f‹muœ
(
sdb
, "avg_dˇche_ac˚ss", "avgÇumbîác˚s£†o‡dˇche", "tŸÆ_dˇche_ac˚ss/sim_cy˛e", 
NULL
);

1593 
	`°©_ªg_f‹muœ
(
sdb
, "avg_dˇche2_ac˚ss", "avgÇumbîác˚s£†o‡dˇche2", "tŸÆ_dˇche2_ac˚ss/sim_cy˛e", 
NULL
);

1594 #ifde‡
INPUT_OUTPUT_BUFFER


1595 
	`°©_ªg_f‹muœ
(
sdb
, "avg_öput_buf_ac˚ss", "avgÇumbîác˚s£†o‡öput_buf", "tŸÆ_öput_buf_ac˚ss/sim_cy˛e", 
NULL
);

1596 
	`°©_ªg_f‹muœ
(
sdb
, "avg_ouçut_buf_ac˚ss", "avgÇumbîác˚s£†o‡ouçut_buf", "tŸÆ_ouçut_buf_ac˚ss/sim_cy˛e", 
NULL
);

1598 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Æu1_ac˚ss", "avgÇumbîác˚s£†o‡Æu1", "tŸÆ_Æu1_ac˚ss/sim_cy˛e", 
NULL
);

1599 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Æu2_ac˚ss", "avgÇumbîác˚s£†o‡Æu2", "tŸÆ_Æu2_ac˚ss/sim_cy˛e", 
NULL
);

1600 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Álu1_ac˚ss", "avgÇumbîác˚s£†o‡Álu1", "tŸÆ_Álu1_ac˚ss/sim_cy˛e", 
NULL
);

1601 
	`°©_ªg_f‹muœ
(
sdb
, "avg_Álu2_ac˚ss", "avgÇumbîác˚s£†o‡Álu2", "tŸÆ_Álu2_ac˚ss/sim_cy˛e", 
NULL
);

1602 
	`°©_ªg_f‹muœ
(
sdb
, "avg_úesu…bus_ac˚ss", "avgÇumbîác˚s£†o‡úesu…bus", "tŸÆ_úesu…bus_ac˚ss/sim_cy˛e", 
NULL
);

1603 
	`°©_ªg_f‹muœ
(
sdb
, "avg_‰esu…bus_ac˚ss", "avgÇumbîác˚s£†o‡‰esu…bus", "tŸÆ_‰esu…bus_ac˚ss/sim_cy˛e", 
NULL
);

1605 
	`°©_ªg_f‹muœ
(
sdb
, "avg_du∂iˇti⁄_ac˚ss", "avgÇumbîác˚s£†o‡ö°ru˘i⁄ du∂iˇti⁄", "tŸÆ_du∂iˇti⁄_ac˚ss/sim_cy˛e", 
NULL
);

1606 
	`°©_ªg_f‹muœ
(
sdb
, "avg_com∑ª_ac˚ss", "avgÇumbîác˚s£†o‡ö°ru˘i⁄ com∑ª", "tŸÆ_com∑ª_ac˚ss/sim_cy˛e", 
NULL
);

1608 
	`°©_ªg_cou¡î
(
sdb
, "max_ª«me_ac˚ss", "maxÇumbîác˚s£†o‡ª«mêunô", &
max_ª«me_ac˚ss
, 0, 
NULL
);

1609 
	`°©_ªg_cou¡î
(
sdb
, "max_iqøm_ac˚ss", "maxÇumbîác˚s£†o‡öàissueqÑam", &
max_iqøm_ac˚ss
, 0, 
NULL
);

1610 
	`°©_ªg_cou¡î
(
sdb
, "max_fqøm_ac˚ss", "maxÇumbîác˚s£†o‡Â issueqÑam", &
max_fqøm_ac˚ss
, 0, 
NULL
);

1611 
	`°©_ªg_cou¡î
(
sdb
, "max_rob1_ac˚ss", "maxÇumbîác˚s£†o‡rob wakeup", &
max_rob1_ac˚ss
, 0, 
NULL
);

1612 
	`°©_ªg_cou¡î
(
sdb
, "max_rob2_ac˚ss", "maxÇumbîác˚s£†o‡robÑam", &
max_rob2_ac˚ss
, 0, 
NULL
);

1613 
	`°©_ªg_cou¡î
(
sdb
, "max_b¥ed_ac˚ss", "maxÇumbîác˚s£†o‡b¥ed unô", &
max_b¥ed_ac˚ss
, 0, 
NULL
);

1614 
	`°©_ªg_cou¡î
(
sdb
, "max_iwakeup_ac˚ss", "maxÇumbîác˚s£†o‡öàwakeup", &
max_iwakeup_ac˚ss
, 0, 
NULL
);

1615 
	`°©_ªg_cou¡î
(
sdb
, "max_fwakeup_ac˚ss", "maxÇumbîác˚s£†o‡Â wakeup", &
max_fwakeup_ac˚ss
, 0, 
NULL
);

1616 
	`°©_ªg_cou¡î
(
sdb
, "max_i£À˘i⁄_ac˚ss", "maxÇumbîác˚s£†o‡öà£À˘i⁄", &
max_i£À˘i⁄_ac˚ss
, 0, 
NULL
);

1617 
	`°©_ªg_cou¡î
(
sdb
, "max_f£À˘i⁄_ac˚ss", "maxÇumbîác˚s£†o‡Â sñe˘i⁄", &
max_f£À˘i⁄_ac˚ss
, 0, 
NULL
);

1618 
	`°©_ªg_cou¡î
(
sdb
, "max_lsq_ac˚ss", "maxÇumbîác˚s£†o‡lﬂd/°‹êqueue", &
max_lsq_ac˚ss
, 0, 
NULL
);

1619 
	`°©_ªg_cou¡î
(
sdb
, "max_úegfûe_ac˚ss", "maxÇumbîác˚s£†o‡öàªgfûe", &
max_úegfûe_ac˚ss
, 0, 
NULL
);

1620 
	`°©_ªg_cou¡î
(
sdb
, "max_‰egfûe_ac˚ss", "maxÇumbîác˚s£†o‡ÂÑegfûe", &
max_‰egfûe_ac˚ss
, 0, 
NULL
);

1621 
	`°©_ªg_cou¡î
(
sdb
, "max_iˇche_ac˚ss", "maxÇumbîác˚s£†o‡iˇche", &
max_iˇche_ac˚ss
, 0, 
NULL
);

1622 
	`°©_ªg_cou¡î
(
sdb
, "max_dˇche_ac˚ss", "maxÇumbîác˚s£†o‡dˇche", &
max_dˇche_ac˚ss
, 0, 
NULL
);

1623 
	`°©_ªg_cou¡î
(
sdb
, "max_dˇche2_ac˚ss", "maxÇumbîác˚s£†o‡dˇche2", &
max_dˇche2_ac˚ss
, 0, 
NULL
);

1624 #ifde‡
INPUT_OUTPUT_BUFFER


1625 
	`°©_ªg_cou¡î
(
sdb
, "max_öput_buf_ac˚ss", "maxÇumbîác˚s£†o‡öput_buf", 
max_öput_buf_ac˚ss
, 0,
NULL
);

1626 
	`°©_ªg_cou¡î
(
sdb
, "max_ouçut_buf_ac˚ss", "maxÇumbîác˚s£†o‡ouçut_buf", 
max_ouçut_buf_ac˚ss
, 0, 
NULL
);

1628 
	`°©_ªg_cou¡î
(
sdb
, "max_Æu1_ac˚ss", "maxÇumbîác˚s£†o‡Æu1", &
max_Æu1_ac˚ss
, 0, 
NULL
);

1629 
	`°©_ªg_cou¡î
(
sdb
, "max_Æu2_ac˚ss", "maxÇumbîác˚s£†o‡Æu2", &
max_Æu2_ac˚ss
, 0, 
NULL
);

1630 
	`°©_ªg_cou¡î
(
sdb
, "max_Álu1_ac˚ss", "maxÇumbîác˚s£†o‡Álu1", &
max_Álu1_ac˚ss
, 0, 
NULL
);

1631 
	`°©_ªg_cou¡î
(
sdb
, "max_Álu2_ac˚ss", "maxÇumbîác˚s£†o‡Álu2", &
max_Álu2_ac˚ss
, 0, 
NULL
);

1632 
	`°©_ªg_cou¡î
(
sdb
, "max_úesu…bus_ac˚ss", "maxÇumbîác˚s£†o‡úesu…bus", &
max_úesu…bus_ac˚ss
, 0, 
NULL
);

1633 
	`°©_ªg_cou¡î
(
sdb
, "max_‰esu…bus_ac˚ss", "maxÇumbîác˚s£†o‡‰esu…bus", &
max_‰esu…bus_ac˚ss
, 0, 
NULL
);

1635 
	`°©_ªg_cou¡î
(
sdb
, "max_du∂iˇti⁄_ac˚ss", "maxÇumbîác˚s£†o‡ö°ru˘i⁄ du∂iˇti⁄", &
max_du∂iˇti⁄_ac˚ss
, 0, 
NULL
);

1636 
	`°©_ªg_cou¡î
(
sdb
, "max_com∑ª_ac˚ss", "maxÇumbîác˚s£†o‡ö°ru˘i⁄ com∑ª", &
max_com∑ª_ac˚ss
, 0, 
NULL
);

1638 
	`°©_ªg_doubÀ
(
sdb
, "max_cy˛e_powî_cc3", "maximum cy˛êpowî ußgêo‡cc3", &
max_cy˛e_powî_cc3
, 0, 
NULL
);

1639 
	}
}

1648 
	$squ¨ify
(
rows
, 
cﬁs
)

1650 
sˇÀ_Á˘‹
 = 1;

1652 if(
rows
 =
cﬁs
)

1660 
rows
 > 
cﬁs
) {

1661 
rows
 =Ñows/2;

1662 
cﬁs
 = cols*2;

1670 i‡(
rows
/2 <
cﬁs
)

1671 (()
	`pow
(2.0,()
sˇÀ_Á˘‹
));

1672 
sˇÀ_Á˘‹
++;

1676 
	}
}

1680 
	$squ¨ify_√w
(
rows
, 
cﬁs
)

1682 
sˇÀ_Á˘‹
 = 0.0;

1684 if(
rows
==
cﬁs
)

1685 (
	`pow
(2.0,
sˇÀ_Á˘‹
));

1687 
rows
 > 
cﬁs
) {

1688 
rows
 =Ñows/2;

1689 
cﬁs
 = cols*2;

1690 i‡(
rows
 <
cﬁs
)

1691 (
	`pow
(2.0,
sˇÀ_Á˘‹
));

1692 
sˇÀ_Á˘‹
++;

1695 
cﬁs
 > 
rows
) {

1696 
rows
 =Ñows*2;

1697 
cﬁs
 = cols/2;

1698 i‡(
cﬁs
 <
rows
)

1699 (
	`pow
(2.0,
sˇÀ_Á˘‹
));

1700 
sˇÀ_Á˘‹
--;

1705 
	}
}

1707 
	$dump_powî_°©s
(
powî
)

1708 
powî_ªsu…_ty≥
 *
powî
;

1710 
tŸÆ_powî
;

1711 
b¥ed_powî
;

1712 
ª«me_powî
;

1713 
iqøm_powî
;

1714 
fqøm_powî
;

1715 
˛ock1_powî
;

1716 
˛ock2_powî
;

1717 
˛ock3_powî
;

1718 
rob1_powî
;

1719 
rob2_powî
;

1720 
øt_powî
;

1721 
d˛_powî
;

1722 
lsq_powî
;

1723 
iwakeup_powî
;

1724 
fwakeup_powî
;

1725 
i£À˘i⁄_powî
;

1726 
f£À˘i⁄_powî
;

1727 
lsq_wakeup_powî
;

1728 
lsq_rs_powî
;

1729 
úegfûe_powî
;

1730 
‰egfûe_powî
;

1733 
iˇche_powî
;

1734 
dˇche_powî
;

1735 
dˇche2_powî
;

1736 
déb_powî
;

1737 
ôlb_powî
;

1738 
ambõ¡_powî
 = 2.0;

1741 
du∂iˇti⁄_powî
;

1742 
com∑ª_powî
;

1743 #ifde‡
INPUT_OUTPUT_BUFFER


1744 
öput_buf_powî
 = 
powî
.input_buf_power;

1745 
ouçut_buf_powî
 = 
powî
.output_buf_power;

1748 
iˇche_powî
 = 
powî
->icache_power;

1750 
dˇche_powî
 = 
powî
->dcache_power;

1752 
dˇche2_powî
 = 
powî
->dcache2_power;

1754 
ôlb_powî
 = 
powî
->
ôlb
;

1755 
déb_powî
 = 
powî
->
déb
;

1757 
b¥ed_powî
 = 
powî
->
btb
 +Öowî->
loˇl_¥edi˘
 +Öowî->
globÆ_¥edi˘
 +

1758 
powî
->
choo£r
 +Öowî->
øs
 +Öowî->
btb_gc
 +Öowî->
loˇl_¥edi˘_gc
 +

1759 
powî
->
globÆ_¥edi˘_gc
 +Öowî->
choo£r_gc
 +Öowî->
øs_gc
;

1761 
øt_powî
 = 
powî
->
øt_decodî
 +

1762 
powî
->
øt_w‹dlöe
 +Öowî->
øt_bôlöe
 +Öowî->
øt_£n£amp
 +Öowî->
øt_gc
;

1764 
d˛_powî
 = 
powî
->
d˛_com∑ª
 +Öowî->
d˛_≥ncode
;

1766 
ª«me_powî
 = 
powî
->
øt_powî
 +Öowî->
d˛_powî
 +Öowî->
ö°_decodî_powî
;

1767 
rob1_powî
 = 
powî
->rob1_power;

1768 
rob2_powî
 = 
powî
->rob2_power;

1769 
˛ock1_powî
 = 
powî
->clock1_power;

1770 
˛ock2_powî
 = 
powî
->clock2_power;

1771 
˛ock3_powî
 = 
powî
->clock3_power;

1772 
iqøm_powî
 = 
powî
->iqram_power;

1773 
fqøm_powî
 = 
powî
->fqram_power;

1775 
iwakeup_powî
 = 
powî
->
iwakeup_ègdrive
 +Öowî->
iwakeup_ègm©ch
 +

1776 
powî
->
iwakeup_‹m©ch
;

1777 
fwakeup_powî
 = 
powî
->
fwakeup_ègdrive
 +Öowî->
fwakeup_ègm©ch
 +

1778 
powî
->
fwakeup_‹m©ch
;

1780 
i£À˘i⁄_powî
 = 
powî
->
i£À˘i⁄
;

1781 
f£À˘i⁄_powî
 = 
powî
->
f£À˘i⁄
;

1783 
lsq_rs_powî
 = 
powî
->
lsq_rs_decodî
 +

1784 
powî
->
lsq_rs_w‹dlöe
 +Öowî->
lsq_rs_bôlöe
 +Öowî->
lsq_rs_£n£amp


1785 + 
powî
->
lsq_rs_gc
;

1787 
lsq_wakeup_powî
 = 
powî
->
lsq_wakeup_ègdrive
 +Öowî->
lsq_wakeup_gc
 +

1788 
powî
->
lsq_wakeup_ègm©ch
 +Öowî->
lsq_wakeup_‹m©ch
;

1790 
lsq_powî
 = 
lsq_wakeup_powî
 + 
lsq_rs_powî
;

1799 
úegfûe_powî
 = 
powî
->
úegfûe_decodî
 +

1800 
powî
->
úegfûe_w‹dlöe
 +Öowî->
úegfûe_bôlöe
 +

1801 
powî
->
úegfûe_£n£amp
 +Öowî->
úegfûe_gc
;

1802 
‰egfûe_powî
 = 
powî
->
‰egfûe_decodî
 +

1803 
powî
->
‰egfûe_w‹dlöe
 +Öowî->
‰egfûe_bôlöe
 +

1804 
powî
->
‰egfûe_£n£amp
 +Öowî->
‰egfûe_gc
;

1807 
du∂iˇti⁄_powî
 = 
powî
->
d_Êù_Ê›_powî
 +Öowî->
two_to_1_mux_powî
;

1808 
com∑ª_powî
 = 
powî
->compare_power;

1810 
tŸÆ_powî
 = 
b¥ed_powî
 + 
iqøm_powî
 + 
fqøm_powî
 + 
˛ock1_powî
 + 
˛ock2_powî
 + 
˛ock3_powî
 + 
rob1_powî
 + 
rob2_powî
 + 
ª«me_powî
 + 
iwakeup_powî
 + 
fwakeup_powî
 + 
úegfûe_powî
 + 
‰egfûe_powî
 +

1811 
powî
->
úesu…bus
 +Öowî->
‰esu…bus
 + 
lsq_powî
 +

1812 
iˇche_powî
 + 
dˇche_powî
 + 
dˇche2_powî
 +

1813 
déb_powî
 + 
ôlb_powî
 + 
powî
->
ülu1_powî
 +

1814 
powî
->
ülu2_powî
 +Öowî->
Álu1_powî
 +Öowî->
Álu2_powî
 +

1815 #ifde‡
INPUT_OUTPUT_BUFFER


1816 
öput_buf_powî
 + 
ouçut_buf_powî
 +

1818 
du∂iˇti⁄_powî
 + 
com∑ª_powî
;

1820 
	`Ârötf
(
°dîr
,"\nProcessor Parameters:\n");

1821 
	`Ârötf
(
°dîr
,"IssuêWidth: %d\n",
ruu_issue_width
);

1822 
	`Ârötf
(
°dîr
,"Wödow Size: %d\n",
RUU_size
);

1823 
	`Ârötf
(
°dîr
,"Numbî o‡VútuÆ Regi°îs: %d\n",
MD_NUM_IREGS
);

1824 
	`Ârötf
(
°dîr
,"Numbî o‡Physiˇ»Regi°îs: %d\n",
RUU_size
);

1825 
	`Ârötf
(
°dîr
,"D©≠©h Width: %d\n",
d©a_width
);

1827 
	`Ârötf
(
°dîr
,"TŸÆ Powî C⁄sum±i⁄: %g\n",
tŸÆ_powî
+
ambõ¡_powî
);

1828 
	`Ârötf
(
°dîr
,"Bønch Pªdi˘‹ Powî C⁄sum±i⁄: %g (%.3g%%)\n",
b¥ed_powî
,100*b¥ed_powî/
tŸÆ_powî
);

1829 
	`Ârötf
(
°dîr
," bønchÅ¨gë buf„∏powî (W): %g\n",
powî
->
btb
+powî->
btb_gc
);

1830 
	`Ârötf
(
°dîr
,"Üoˇ»¥edi˘Öowî (W): %g\n",
powî
->
loˇl_¥edi˘
+powî->
loˇl_¥edi˘_gc
);

1831 
	`Ârötf
(
°dîr
," globÆÖªdi˘Öowî (W): %g\n",
powî
->
globÆ_¥edi˘
+powî->
globÆ_¥edi˘_gc
);

1832 
	`Ârötf
(
°dîr
," choo£∏powî (W): %g\n",
powî
->
choo£r
+powî->
choo£r_gc
);

1833 
	`Ârötf
(
°dîr
," RASÖowî (W): %g\n",
powî
->
øs
+powî->
øs_gc
);

1834 
	`Ârötf
(
°dîr
,"RíamêLogi¯Powî C⁄sum±i⁄: %g (%.3g%%)\n",
ª«me_powî
,100*ª«me_powî/
tŸÆ_powî
);

1835 
	`Ârötf
(
°dîr
,"ROB Wakeu∞Powî C⁄sum±i⁄: %g (%.3g%%)\n",
rob1_powî
,100*rob1_powî/
tŸÆ_powî
);

1836 
	`Ârötf
(
°dîr
,"ROB RAM Powî C⁄sum±i⁄: %g (%.3g%%)\n",
rob2_powî
,100*rob2_powî/
tŸÆ_powî
);

1837 
	`Ârötf
(
°dîr
,"Clock1 Powî C⁄sum±i⁄: %g (%.3g%%)\n",
˛ock1_powî
,100*˛ock1_powî/
tŸÆ_powî
);

1838 
	`Ârötf
(
°dîr
,"Clock2 Powî C⁄sum±i⁄: %g (%.3g%%)\n",
˛ock2_powî
,100*˛ock2_powî/
tŸÆ_powî
);

1839 
	`Ârötf
(
°dîr
,"Clock3 Powî C⁄sum±i⁄: %g (%.3g%%)\n",
˛ock3_powî
,100*˛ock3_powî/
tŸÆ_powî
);

1840 
	`Ârötf
(
°dîr
," In°ru˘i⁄ DecodêPowî (W): %g\n",
powî
->
ö°_decodî_powî
);

1841 
	`Ârötf
(
°dîr
," RAT decode_powî (W): %g\n",
powî
->
øt_decodî
);

1842 
	`Ârötf
(
°dîr
," RAT w‹dlöe_powî (W): %g\n",
powî
->
øt_w‹dlöe
);

1843 
	`Ârötf
(
°dîr
," RAT bôlöe_powî (W): %g\n",
powî
->
øt_bôlöe
);

1844 
	`Ârötf
(
°dîr
," RAT gc_powî (W): %g\n",
powî
->
øt_gc
);

1845 
	`Ârötf
(
°dîr
," DCL Com∑øt‹†(W): %g\n",
powî
->
d˛_com∑ª
);

1846 
	`Ârötf
(
°dîr
,"I¡ wakeu∞Powî C⁄sum±i⁄: %g (%.3g%%)\n", 
iwakeup_powî
, 100*iwakeup_powî/
tŸÆ_powî
);

1847 
	`Ârötf
(
°dîr
,"F∞wakeu∞Powî C⁄sum±i⁄: %g (%.3g%%)\n", 
fwakeup_powî
, 100*fwakeup_powî/
tŸÆ_powî
);

1848 
	`Ârötf
(
°dîr
,"I¡ sñe˘i⁄ Powî C⁄sum±i⁄: %g (%.3g%%)\n", 
i£À˘i⁄_powî
, 100*i£À˘i⁄_powî/
tŸÆ_powî
);

1849 
	`Ârötf
(
°dîr
,"F∞£À˘i⁄ Powî C⁄sum±i⁄: %g (%.3g%%)\n", 
f£À˘i⁄_powî
, 100*f£À˘i⁄_powî/
tŸÆ_powî
);

1850 
	`Ârötf
(
°dîr
,"I¡ issueqÑam Powî C⁄sum±i⁄: %g (%.3g%%)\n", 
iqøm_powî
, 100*iqøm_powî/
tŸÆ_powî
);

1851 
	`Ârötf
(
°dîr
,"F∞issueqÑam Powî C⁄sum±i⁄: %g (%.3g%%)\n", 
fqøm_powî
, 100*fqøm_powî/
tŸÆ_powî
);

1852 
	`Ârötf
(
°dîr
,"Lﬂd/St‹êQueuêPowî C⁄sum±i⁄: %g (%.3g%%)\n",
lsq_powî
,100*lsq_powî/
tŸÆ_powî
);

1853 
	`Ârötf
(
°dîr
,"Åagdrivê(W): %g\n",
powî
->
lsq_wakeup_ègdrive
);

1854 
	`Ârötf
(
°dîr
,"Åagm©ch (W): %g\n",
powî
->
lsq_wakeup_ègm©ch
);

1855 
	`Ârötf
(
°dîr
," wakeup_g¯(W): %g\n",
powî
->
lsq_wakeup_gc
);

1856 
	`Ârötf
(
°dîr
," decode_powî (W): %g\n",
powî
->
lsq_rs_decodî
);

1857 
	`Ârötf
(
°dîr
," w‹dlöe_powî (W): %g\n",
powî
->
lsq_rs_w‹dlöe
);

1858 
	`Ârötf
(
°dîr
," bôlöe_powî (W): %g\n",
powî
->
lsq_rs_bôlöe
);

1859 
	`Ârötf
(
°dîr
,"Ñs_g¯(W): %g\n",
powî
->
lsq_rs_gc
);

1860 
	`Ârötf
(
°dîr
,"I¡ Regi°î FûêPowî C⁄sum±i⁄: %g (%.3g%%)\n",
úegfûe_powî
,100*úegfûe_powî/
tŸÆ_powî
);

1861 
	`Ârötf
(
°dîr
," decode_powî (W): %g\n",
powî
->
úegfûe_decodî
);

1862 
	`Ârötf
(
°dîr
," w‹dlöe_powî (W): %g\n",
powî
->
úegfûe_w‹dlöe
);

1863 
	`Ârötf
(
°dîr
," bôlöe_powî (W): %g\n",
powî
->
úegfûe_bôlöe
);

1864 
	`Ârötf
(
°dîr
,"Ñegfûe_g¯(W): %g\n",
powî
->
úegfûe_gc
);

1865 
	`Ârötf
(
°dîr
,"F∞Regi°î FûêPowî C⁄sum±i⁄: %g (%.3g%%)\n",
‰egfûe_powî
,100*‰egfûe_powî/
tŸÆ_powî
);

1866 
	`Ârötf
(
°dîr
," decode_powî (W): %g\n",
powî
->
‰egfûe_decodî
);

1867 
	`Ârötf
(
°dîr
," w‹dlöe_powî (W): %g\n",
powî
->
‰egfûe_w‹dlöe
);

1868 
	`Ârötf
(
°dîr
," bôlöe_powî (W): %g\n",
powî
->
‰egfûe_bôlöe
);

1869 
	`Ârötf
(
°dîr
,"Ñegfûe_g¯(W): %g\n",
powî
->
‰egfûe_gc
);

1870 
	`Ârötf
(
°dîr
,"iResu… Bu†Powî C⁄sum±i⁄: %g (%.3g%%)\n",
powî
->
úesu…bus
,100*powî->úesu…bus/
tŸÆ_powî
);

1871 
	`Ârötf
(
°dîr
,"fResu… Bu†Powî C⁄sum±i⁄: %g (%.3g%%)\n",
powî
->
‰esu…bus
,100*powî->‰esu…bus/
tŸÆ_powî
);

1872 
	`Ârötf
(
°dîr
,"TŸÆ Clock Powî: %g (%.3g%%)\n",
powî
->
˛ock_powî
,100*powî->˛ock_powî/
tŸÆ_powî
);

1873 
	`Ârötf
(
°dîr
,"I¡ ALU1 Powî: %g (%.3g%%)\n",
powî
->
ülu1_powî
,100*powî->ülu1_powî/
tŸÆ_powî
);

1874 
	`Ârötf
(
°dîr
,"I¡ ALU2 Powî: %g (%.3g%%)\n",
powî
->
ülu2_powî
,100*powî->ülu2_powî/
tŸÆ_powî
);

1875 
	`Ârötf
(
°dîr
,"FP ALU1 Powî: %g (%.3g%%)\n",
powî
->
Álu1_powî
,100*powî->Álu1_powî/
tŸÆ_powî
);

1876 
	`Ârötf
(
°dîr
,"FP ALU2 Powî: %g (%.3g%%)\n",
powî
->
Álu2_powî
,100*powî->Álu2_powî/
tŸÆ_powî
);

1877 
	`Ârötf
(
°dîr
,"In°ru˘i⁄ CachêPowî C⁄sum±i⁄: %g (%.3g%%)\n",
iˇche_powî
,100*iˇche_powî/
tŸÆ_powî
);

1878 
	`Ârötf
(
°dîr
," decode_powî (W): %g\n",
powî
->
iˇche_decodî
);

1879 
	`Ârötf
(
°dîr
," w‹dlöe_powî (W): %g\n",
powî
->
iˇche_w‹dlöe
);

1880 
	`Ârötf
(
°dîr
," bôlöe_powî (W): %g\n",
powî
->
iˇche_bôlöe
);

1881 
	`Ârötf
(
°dîr
," sí£amp_powî (W): %g\n",
powî
->
iˇche_£n£amp
);

1882 
	`Ârötf
(
°dîr
,"Åag¨øy_powî (W): %g\n",
powî
->
iˇche_èg¨øy
);

1883 
	`Ârötf
(
°dîr
," iˇche_g¯(W): %g\n",
powî
->
iˇche_gc
);

1884 
	`Ârötf
(
°dîr
,"Iéb_powî (W): %g (%.3g%%)\n",
powî
->
ôlb
,100*powî->ôlb/
tŸÆ_powî
);

1885 
	`Ârötf
(
°dîr
,"D©®CachêPowî C⁄sum±i⁄: %g (%.3g%%)\n",
dˇche_powî
,100*dˇche_powî/
tŸÆ_powî
);

1886 
	`Ârötf
(
°dîr
," decode_powî (W): %g\n",
powî
->
dˇche_decodî
);

1887 
	`Ârötf
(
°dîr
," w‹dlöe_powî (W): %g\n",
powî
->
dˇche_w‹dlöe
);

1888 
	`Ârötf
(
°dîr
," bôlöe_powî (W): %g\n",
powî
->
dˇche_bôlöe
);

1889 
	`Ârötf
(
°dîr
," sí£amp_powî (W): %g\n",
powî
->
dˇche_£n£amp
);

1890 
	`Ârötf
(
°dîr
,"Åag¨øy_powî (W): %g\n",
powî
->
dˇche_èg¨øy
);

1891 
	`Ârötf
(
°dîr
," dˇche_g¯(W): %g\n",
powî
->
dˇche_gc
);

1892 
	`Ârötf
(
°dîr
,"Déb_powî (W): %g (%.3g%%)\n",
powî
->
déb
,100*powî->déb/
tŸÆ_powî
);

1893 
	`Ârötf
(
°dîr
,"Levñ 2 CachêPowî C⁄sum±i⁄: %g (%.3g%%)\n",
dˇche2_powî
,100*dˇche2_powî/
tŸÆ_powî
);

1894 
	`Ârötf
(
°dîr
," decode_powî (W): %g\n",
powî
->
dˇche2_decodî
);

1895 
	`Ârötf
(
°dîr
," w‹dlöe_powî (W): %g\n",
powî
->
dˇche2_w‹dlöe
);

1896 
	`Ârötf
(
°dîr
," bôlöe_powî (W): %g\n",
powî
->
dˇche2_bôlöe
);

1897 
	`Ârötf
(
°dîr
," sí£amp_powî (W): %g\n",
powî
->
dˇche2_£n£amp
);

1898 
	`Ârötf
(
°dîr
,"Åag¨øy_powî (W): %g\n",
powî
->
dˇche2_èg¨øy
);

1899 
	`Ârötf
(
°dîr
," dˇche2_g¯(W): %g\n",
powî
->
dˇche2_gc
);

1900 #ifde‡
INPUT_OUTPUT_BUFFER


1901 
	`Ârötf
(
°dîr
,"öpuàbuf„∏powî (W): %g (%.3g%%)\n", 
powî
->
öput_buf_powî
, 100*powî->öput_buf_powî/
tŸÆ_powî
);

1902 
	`Ârötf
(
°dîr
,"ouçuàbuf„∏powî (W): %g (%.3g%%)\n", 
powî
->
ouçut_buf_powî
, 100*powî->ouçut_buf_powî/
tŸÆ_powî
);

1908 
	`Ârötf
(
°dîr
,"In°ru˘i⁄ Du∂iˇti⁄ Powî C⁄sum±i⁄: %g (%.3g%%)\n",
du∂iˇti⁄_powî
,100*du∂iˇti⁄_powî/
tŸÆ_powî
);

1909 
	`Ârötf
(
°dîr
," d_Êù_Ê›_powî (W): %g\n",
powî
->
d_Êù_Ê›_powî
);

1910 
	`Ârötf
(
°dîr
,"Åwo_to_1_mux_powî (W): %g\n",
powî
->
two_to_1_mux_powî
);

1913 
	`Ârötf
(
°dîr
,"In°ru˘i⁄ Com∑øt‹ Powî C⁄sum±i⁄: %g (%.3g%%)\n",
com∑ª_powî
,100*com∑ª_powî/
tŸÆ_powî
);

1915 
	}
}

1928 
	$drivî_size
(
drivög_ˇp
, 
desúedri£time
) {

1929 
nsize
, 
psize
;

1930 
Rpdrive
;

1932 
Rpdrive
 = 
desúedri£time
/(
drivög_ˇp
*
	`log
(
VSINV
)*-1.0);

1933 
psize
 = 
	`ª°owidth
(
Rpdrive
,
PCH
);

1934 
nsize
 = 
	`ª°owidth
(
Rpdrive
,
NCH
);

1935 i‡(
psize
 > 
Ww‹ddrivemax
) {

1936 
psize
 = 
Ww‹ddrivemax
;

1938 i‡(
psize
 < 4.0 * 
LSCALE
)

1939 
psize
 = 4.0 * 
LSCALE
;

1941  (
psize
);

1943 
	}
}

1947 
	$¨øy_decodî_powî
(
rows
,
cﬁs
,
¥ede˛ígth
,
Ω‹ts
,
wp‹ts
,
ˇche
)

1948 
rows
,
cﬁs
;

1949 
¥ede˛ígth
;

1950 
Ω‹ts
,
wp‹ts
;

1951 
ˇche
;

1953 
CtŸÆ
=0;

1954 
Ceq
=0;

1955 
num°ack
;

1956 
decode_bôs
=0;

1957 
p‹ts
;

1958 
rowsb
;

1961 
p‹ts
 = 
Ω‹ts
 + 
wp‹ts
;

1963 
rowsb
 = ()
rows
;

1966 
decode_bôs
=
	`˚û
((
	`logtwo
(
rowsb
)));

1974 
Ceq
 = 2.0*(
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1)) +

1975 
	`g©eˇp
(
Wdec3to8n
+
Wdec3to8p
,10.0)*
rowsb
;

1978 
CtŸÆ
+=
p‹ts
*
decode_bôs
*
Ceq
;

1980 if(
vîbo£
)

1981 
	`Ârötf
(
°dîr
,"Decodî -- Drivög decodî† =%g\n",.3*
CtŸÆ
*
PowîÁ˘‹
);

1987 
num°ack
 = 
	`˚û
((1.0/3.0)*
	`logtwo
(
rows
));

1989 i‡(
num°ack
<=0)Çumstack = 1;

1990 i‡(
num°ack
>5)Çumstack = 5;

1993 
Ceq
 = (3.0*
	`døöˇp
(
Wdec3to8p
,
PCH
,1Ë+døöˇp(
Wdec3to8n
,
NCH
,3) +

1994 
	`g©eˇp
(
WdecNORn
+
WdecNORp
,((
num°ack
*40)+20.0)))*
rowsb
;

1996 
CtŸÆ
+=
p‹ts
*
Ceq
;

1998 if(
vîbo£
)

1999 
	`Ârötf
(
°dîr
,"Decodî -- DrivögÇ‹ w/Ç™d =%g\n",.3*
p‹ts
*
Ceq
*
PowîÁ˘‹
);

2004 
Ceq
 = (
	`g©eˇp
(
Wdecövn
+
Wdecövp
,20.0)+

2005 
num°ack
*
	`døöˇp
(
WdecNORn
,
NCH
,1)+

2006 
	`døöˇp
(
WdecNORp
,
PCH
,
num°ack
));

2008 if(
vîbo£
)

2009 
	`Ârötf
(
°dîr
,"Decodî -- Drivög invîã∏w/Ç‹ =%g\n",.3*
p‹ts
*
Ceq
*
PowîÁ˘‹
);

2011 
CtŸÆ
+=
p‹ts
*
Ceq
;

2015 (.3*
CtŸÆ
*
PowîÁ˘‹
);

2016 
	}
}

2018 
	$sim∂e_¨øy_decodî_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)

2019 
rows
,
cﬁs
;

2020 
Ω‹ts
,
wp‹ts
;

2021 
ˇche
;

2023 
¥ede˛ígth
=0.0;

2024 (
	`¨øy_decodî_powî
(
rows
,
cﬁs
,
¥ede˛ígth
,
Ω‹ts
,
wp‹ts
,
ˇche
));

2025 
	}
}

2028 
	$¨øy_w‹dlöe_powî
(
rows
,
cﬁs
,
w‹dlöñígth
,
Ω‹ts
,
wp‹ts
,
ˇche
)

2029 
rows
,
cﬁs
;

2030 
w‹dlöñígth
;

2031 
Ω‹ts
,
wp‹ts
;

2032 
ˇche
;

2034 
CtŸÆ
=0;

2035 
Ceq
=0;

2036 
Clöe
=0;

2037 
Clöî
, 
Clöew
=0;

2038 
desúedri£time
,
psize
,
nsize
;

2039 
p‹ts
;

2040 
cﬁsb
;

2042 
p‹ts
 = 
Ω‹ts
+
wp‹ts
;

2044 
cﬁsb
 = ()
cﬁs
;

2051 
desúedri£time
 = 
Pîiod
/16;

2052 
Clöe
 = (
	`g©eˇµass
(
Wmem˚Œr
,1.0))*
cﬁsb
 + 
w‹dlöñígth
*
CM3mëÆ
;

2053 
psize
 = 
	`drivî_size
(
Clöe
,
desúedri£time
);

2057 
nsize
 = 
psize
 * 
Wdecövn
/
Wdecövp
;

2059 if(
vîbo£
)

2060 
	`Ârötf
(
°dîr
,"W‹dlöêDrivî Size†--Çsizê=%f,Ösizê=%f\n",
nsize
,
psize
);

2062 
Ceq
 = 
	`døöˇp
(
Wdecövn
,
NCH
,1Ë+ døöˇp(
Wdecövp
,
PCH
,1) +

2063 
	`g©eˇp
(
nsize
+
psize
,20.0);

2065 
CtŸÆ
+=
p‹ts
*
Ceq
;

2067 if(
vîbo£
)

2068 
	`Ârötf
(
°dîr
,"W‹dlöê-- Invîã∏-> Drivî =%g\n",
p‹ts
*
Ceq
*
PowîÁ˘‹
);

2077 
Clöî
 = (
	`g©eˇµass
(
Wmem˚Œr
,(
BôWidth
-2*Wmem˚Œr)/2.0))*
cﬁsb
+

2078 
w‹dlöñígth
*
CM3mëÆ
+

2079 2.0*(
	`døöˇp
(
nsize
,
NCH
,1Ë+ døöˇp(
psize
,
PCH
,1));

2080 
Clöew
 = (2.0*
	`g©eˇµass
(
Wmem˚Œw
,(
BôWidth
-2*Wmem˚Œw)/2.0))*
cﬁsb
+

2081 
w‹dlöñígth
*
CM3mëÆ
+

2082 2.0*(
	`døöˇp
(
nsize
,
NCH
,1Ë+ døöˇp(
psize
,
PCH
,1));

2084 if(
vîbo£
) {

2085 
	`Ârötf
(
°dîr
,"W‹dlöê-- Löê =%g\n",1e12*
Clöe
);

2086 
	`Ârötf
(
°dîr
,"W‹dlöê-- Löê--ác˚s†-- g©eˇ∞ =%g\n",1e12*
cﬁsb
*2*
	`g©eˇµass
(
Wmem˚Œa
,(
BôWidth
-2*Wmemcella)/2.0));

2087 
	`Ârötf
(
°dîr
,"W‹dlöê-- Löê-- drivî -- døöˇ∞=%g\n",1e12*
	`døöˇp
(
nsize
,
NCH
,1Ë+ døöˇp(
psize
,
PCH
,1));

2088 
	`Ârötf
(
°dîr
,"W‹dlöê-- Löê-- mëÆ =%g\n",1e12*
w‹dlöñígth
*
CM3mëÆ
);

2090 
CtŸÆ
+=
Ω‹ts
*
Clöî
+
wp‹ts
*
Clöew
;

2095 (
CtŸÆ
*
PowîÁ˘‹
);

2096 
	}
}

2098 
	$sim∂e_¨øy_w‹dlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)

2099 
rows
,
cﬁs
;

2100 
Ω‹ts
,
wp‹ts
;

2101 
ˇche
;

2103 
w‹dlöñígth
;

2104 
p‹ts
 = 
Ω‹ts
 + 
wp‹ts
;

2105 
w‹dlöñígth
 = 
cﬁs
 * (
RegCñlWidth
 + 2 * 
p‹ts
 * 
BôlöeS∑cög
);

2106 (
	`¨øy_w‹dlöe_powî
(
rows
,
cﬁs
,
w‹dlöñígth
,
Ω‹ts
,
wp‹ts
,
ˇche
));

2107 
	}
}

2110 
	$¨øy_bôlöe_powî
(
rows
,
cﬁs
,
bôlöñígth
,
Ω‹ts
,
wp‹ts
,
ˇche
)

2111 
rows
,
cﬁs
;

2112 
bôlöñígth
;

2113 
Ω‹ts
,
wp‹ts
;

2114 
ˇche
;

2116 
CtŸÆ
=0;

2117 
Ccﬁmux
=0;

2118 
Cbôrowr
=0;

2119 
Cbôroww
=0;

2120 
C¥îow
=0;

2121 
Cwrôebôdrive
=0;

2122 
C¥eg©e
=0;

2123 
Clöî
=0;

2124 
Clöew
=0;

2125 
p‹ts
;

2126 
rowsb
;

2127 
cﬁsb
;

2129 
desúedri£time
, 
Clöe
, 
psize
, 
nsize
;

2131 
p‹ts
 = 
Ω‹ts
 + 
wp‹ts
;

2133 
rowsb
 = ()
rows
;

2134 
cﬁsb
 = ()
cﬁs
;

2138 
Cbôrowr
 = 
	`døöˇp
(
Wmem˚Œr
,
NCH
,1);

2139 
Cbôroww
 = 
	`døöˇp
(
Wmem˚Œw
,
NCH
,1);

2148 
desúedri£time
 = 
Pîiod
/8;

2150 
Clöe
 = 
rowsb
*
Cbôrowr
+
CM2mëÆ
*
bôlöñígth
;

2151 
psize
 = 
	`drivî_size
(
Clöe
,
desúedri£time
);

2154 
psize
 =Ösizê+Ösizê* 
Wdecövn
/
Wdecövp
;

2156 if(
vîbo£
)

2157 
	`¥ötf
("C¥îowáutÿ =%g (psizê=%g)\n",
	`døöˇp
(
psize
,
PCH
,1),psize);

2159 
C¥îow
 = 
	`døöˇp
(
psize
,
PCH
,1);

2163 
C¥eg©e
 = 4.0*
	`g©eˇp
(
psize
,10.0);

2164 
globÆ_˛ockˇp
+=
Ω‹ts
*
cﬁs
*2.0*
C¥eg©e
;

2165 
gc
[
gcc
++] = 
Ω‹ts
*
cﬁs
*2.0*
C¥eg©e
;

2171 
Clöe
 = 
rowsb
*
Cbôroww
+
CM2mëÆ
*
bôlöñígth
;

2173 
psize
 = 
	`drivî_size
(
Clöe
,
desúedri£time
);

2174 
nsize
 = 
psize
 * 
Wdecövn
/
Wdecövp
;

2176 
Cwrôebôdrive
 = 2.0*(
	`døöˇp
(
psize
,
PCH
,1)+døöˇp(
nsize
,
NCH
,1));

2187 #ifde‡
STATIC_AF


2188 i‡(
ˇche
 == 0) {

2190 
Clöî
 = 
rowsb
*
Cbôrowr
+
CM2mëÆ
*
bôlöñígth
+
C¥îow
;

2191 
Clöew
 = 
rowsb
*
Cbôroww
+
CM2mëÆ
*
bôlöñígth
+
Cwrôebôdrive
;

2195 
Ccﬁmux
 = 
	`g©eˇp
(
MSCALE
*(29.9+7.8),0.0)+gatecap(MSCALE*(47.0+12.0),0.0);

2196 
CtŸÆ
+=(1.0-
POPCOUNT_AF
)*
Ω‹ts
*
cﬁs
*(
Clöî
+
Ccﬁmux
+2.0*
C¥eg©e
);

2197 
CtŸÆ
+=.3*
wp‹ts
*
cﬁs
*(
Clöew
+
Cwrôebôdrive
);

2200 
Clöî
 = 
rowsb
*
Cbôrowr
+
CM2mëÆ
*
bôlöñígth
+
C¥îow
 + 
	`døöˇp
(
Wbômuxn
,
NCH
,1);

2201 
Clöew
 = 
rowsb
*
Cbôroww
+
CM2mëÆ
*
bôlöñígth
+
Cwrôebôdrive
;

2202 
Ccﬁmux
 = (
	`døöˇp
(
Wbômuxn
,
NCH
,1))+2.0*
	`g©eˇp
(
W£n£Q1to4
,10.0);

2203 
CtŸÆ
+=.5*
Ω‹ts
*2.0*
cﬁs
*(
Clöî
+
Ccﬁmux
+2.0*
C¥eg©e
);

2204 
CtŸÆ
+=.5*
wp‹ts
*2.0*
cﬁs
*(
Clöew
+
Cwrôebôdrive
);

2207 i‡(
ˇche
 == 0) {

2209 
Clöî
 = 
rowsb
*
Cbôrowr
+
CM2mëÆ
*
bôlöñígth
+
C¥îow
;

2210 
Clöew
 = 
rowsb
*
Cbôroww
+
CM2mëÆ
*
bôlöñígth
+
Cwrôebôdrive
;

2214 
Ccﬁmux
 = 
	`g©eˇp
(
MSCALE
*(29.9+7.8),0.0)+gatecap(MSCALE*(47.0+12.0),0.0);

2215 
CtŸÆ
 +
Ω‹ts
*
cﬁs
*(
Clöî
+
Ccﬁmux
+2.0*
C¥eg©e
);

2216 
CtŸÆ
 +.3*
wp‹ts
*
cﬁs
*(
Clöew
+
Cwrôebôdrive
);

2219 
Clöî
 = 
rowsb
*
Cbôrowr
+
CM2mëÆ
*
bôlöñígth
+
C¥îow
 + 
	`døöˇp
(
Wbômuxn
,
NCH
,1);

2220 
Clöew
 = 
rowsb
*
Cbôroww
+
CM2mëÆ
*
bôlöñígth
+
Cwrôebôdrive
;

2221 
Ccﬁmux
 = (
	`døöˇp
(
Wbômuxn
,
NCH
,1))+2.0*
	`g©eˇp
(
W£n£Q1to4
,10.0);

2222 
CtŸÆ
+=.5*
Ω‹ts
*2.0*
cﬁs
*(
Clöî
+
Ccﬁmux
+2.0*
C¥eg©e
);

2223 
CtŸÆ
+=.5*
wp‹ts
*2.0*
cﬁs
*(
Clöew
+
Cwrôebôdrive
);

2227 if(
vîbo£
) {

2228 
	`Ârötf
(
°dîr
,"Bôlöê-- Pªch¨gê =%g\n",1e12*
C¥eg©e
);

2229 
	`Ârötf
(
°dîr
,"Bôlöê-- Löê =%g\n",1e12*(
Clöî
+
Clöew
));

2230 
	`Ârötf
(
°dîr
,"Bôlöê-- Löê--ác˚s†døöˇ∞ =%g\n",1e12*
rowsb
*
Cbôrowr
);

2231 
	`Ârötf
(
°dîr
,"Bôlöê-- Löê--Öªch¨gêdøöˇ∞ =%g\n",1e12*
C¥îow
);

2232 
	`Ârötf
(
°dîr
,"Bôlöê-- Löê-- mëÆ =%g\n",1e12*
bôlöñígth
*
CM2mëÆ
);

2233 
	`Ârötf
(
°dîr
,"Bôlöê-- Cﬁmux =%g\n",1e12*
Ccﬁmux
);

2235 
	`Ârötf
(
°dîr
,"\n");

2239 if(
ˇche
==0)

2240 (
CtŸÆ
*
PowîÁ˘‹
);

2242 (
CtŸÆ
*
Sí£PowîÁ˘‹
*.4);

2244 
	}
}

2247 
	$sim∂e_¨øy_bôlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)

2248 
rows
,
cﬁs
;

2249 
Ω‹ts
,
wp‹ts
;

2250 
ˇche
;

2252 
bôlöñígth
;

2254 
p‹ts
 = 
Ω‹ts
 + 
wp‹ts
;

2256 
bôlöñígth
 = 
rows
 * (
RegCñlHeight
 + 
p‹ts
 * 
W‹dlöeS∑cög
);

2258  (
	`¨øy_bôlöe_powî
(
rows
,
cﬁs
,
bôlöñígth
,
Ω‹ts
,
wp‹ts
,
ˇche
));

2260 
	}
}

2263 
	$£n£amp_powî
(
cﬁs
)

2265 (()
cﬁs
 * (
Vdd
*
vdd_ªdu˘i⁄
)/8 * .5e-3);

2266 
	}
}

2270 
	$com∑ª_ˇp
(
com∑ª_bôs
)

2272 
c1
, 
c2
;

2274 
c2
 = (
com∑ª_bôs
)*(
	`døöˇp
(
Wcom≤
,
NCH
,1)+draincap(Wcompn,NCH,2))+

2275 
	`døöˇp
(
WevÆövp
,
PCH
,1Ë+ døöˇp(
WevÆövn
,
NCH
,1);

2278 
c1
 = (
com∑ª_bôs
)*(
	`døöˇp
(
Wcom≤
,
NCH
,1)+draincap(Wcompn,NCH,2)+

2279 
	`døöˇp
(
Wcomµªequ
,
NCH
,1)) +

2280 
	`g©eˇp
(
WdecNORn
,1.0)+

2281 
	`g©eˇp
(
WdecNORp
,3.0);

2283 (
c1
 + 
c2
);

2284 
	}
}

2287 
	$d˛_com∑ª_powî
(
com∑ª_bôs
)

2289 
CtŸÆ
;

2290 
num_com∑øt‹s
;

2292 
num_com∑øt‹s
 = ((
ruu_decode_width
) - 1) * ((ruu_decode_width));

2294 
CtŸÆ
 = 
num_com∑øt‹s
 * 
	`com∑ª_ˇp
(
com∑ª_bôs
);

2296 (
CtŸÆ
*
PowîÁ˘‹
*
AF
);

2297 
	}
}

2299 
	$sim∂e_¨øy_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)

2300 
rows
,
cﬁs
;

2301 
Ω‹ts
,
wp‹ts
;

2302 
ˇche
;

2304 if(
ˇche
==0)

2305 –
	`sim∂e_¨øy_decodî_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)+

2306 
	`sim∂e_¨øy_w‹dlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)+

2307 
	`sim∂e_¨øy_bôlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
));

2309 –
	`sim∂e_¨øy_decodî_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)+

2310 
	`sim∂e_¨øy_w‹dlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)+

2311 
	`sim∂e_¨øy_bôlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
)+

2312 
	`£n£amp_powî
(
cﬁs
));

2313 
	}
}

2316 
	$ˇm_ègdrive
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
)

2317 
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
;

2319 
CtŸÆ
, 
Céˇp
, 
Cblˇp
, 
Cwlˇp
;

2320 
èglöñígth
;

2321 
w‹dlöñígth
;

2322 
nsize
, 
psize
;

2323 
p‹ts
;

2324 
CtŸÆ
=0;

2326 
p‹ts
 = 
Ω‹ts
 + 
wp‹ts
;

2328 
èglöñígth
 = 
rows
 *

2329 (
CamCñlHeight
 + 
p‹ts
 * 
M©chlöeS∑cög
);

2331 
w‹dlöñígth
 = 
cﬁs
 *

2332 (
CamCñlWidth
 + 
p‹ts
 * 
TaglöeS∑cög
);

2335 
Céˇp
 = 
CmëÆ
 * 
èglöñígth
 +

2336 
rows
 * 
	`g©eˇµass
(
Wcom∑ªn2
,2.0) +

2337 
	`døöˇp
(
Wcompdrivîn
,
NCH
,1)+døöˇp(
Wcompdrivîp
,
PCH
,1);

2340 
Cblˇp
 = 
CmëÆ
 * 
èglöñígth
 +

2341 
rows
 * 
	`døöˇp
(
Wmem˚Œr
,
NCH
,2);

2344 
psize
 = 
	`drivî_size
(
CmëÆ
 * 
w‹dlöñígth
 + 2 * 
cﬁs
 * 
	`g©eˇp
(
Wmem˚Œr
,2.0),
Pîiod
/8);

2345 
nsize
 = 
psize
 * 
Wdecövn
/
Wdecövp
;

2348 
Cwlˇp
 = 
CmëÆ
 * 
w‹dlöñígth
 +

2349 
	`døöˇp
(
nsize
,
NCH
,1)+døöˇp(
psize
,
PCH
,1) +

2350 2 * 
cﬁs
 * 
	`g©eˇp
(
Wmem˚Œr
,2.0);

2352 
CtŸÆ
 +(
Ω‹ts
 * 
cﬁs
 * 2 * 
Céˇp
) +

2353 (
wp‹ts
 * ((
cﬁs
 * 2 * 
Cblˇp
Ë+ (
rows
 * 
Cwlˇp
)));

2355 (
CtŸÆ
*
PowîÁ˘‹
*
AF
);

2356 
	}
}

2358 
	$ˇm_ègm©ch
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
)

2359 
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
;

2361 
CtŸÆ
, 
Cmlˇp
;

2362 
m©chlöñígth
;

2363 
p‹ts
;

2364 
CtŸÆ
=0;

2366 
p‹ts
 = 
Ω‹ts
 + 
wp‹ts
;

2368 
m©chlöñígth
 = 
cﬁs
 *

2369 (
CamCñlWidth
 + 
p‹ts
 * 
TaglöeS∑cög
);

2371 
Cmlˇp
 = 2 * 
cﬁs
 * 
	`døöˇp
(
Wcom∑ªn1
,
NCH
,2) +

2372 
CmëÆ
 * 
m©chlöñígth
 + 
	`døöˇp
(
Wm©chpchg
,
NCH
,1) +

2373 
	`g©eˇp
(
Wm©chövn
+
Wm©chövp
,10.0) +

2374 
	`g©eˇp
(
Wm©ch«ndn
+
Wm©ch«ndp
,10.0);

2376 
CtŸÆ
 +
Ω‹ts
 * 
rows
 * 
Cmlˇp
;

2378 
globÆ_˛ockˇp
 +
Ω‹ts
 * 
rows
 * 
	`g©eˇp
(
Wm©chpchg
,5.0);

2379 
gc
[
gcc
++] = 
Ω‹ts
 * 
rows
 * 
	`g©eˇp
(
Wm©chpchg
,5.0);

2382 if(
ruu_issue_width
 >= 8)

2383 
CtŸÆ
 +2 * 
	`g©eˇp
(
Wm©chn‹n
+
Wm©chn‹p
,10.0);

2385 (
CtŸÆ
*
PowîÁ˘‹
*
AF
);

2386 
	}
}

2388 
	$ˇm_¨øy
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
)

2389 
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
;

2391 (
	`ˇm_ègdrive
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
) +

2392 
	`ˇm_ègm©ch
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
));

2393 
	}
}

2396 
	$£À˘i⁄_powî
(
wö_íåõs
)

2398 
CtŸÆ
, 
C‹
, 
C≥ncode
;

2399 
num_¨bôî
=1;

2401 
CtŸÆ
=0;

2403 
wö_íåõs
 > 4)

2405 
wö_íåõs
 = ()
	`˚û
(()win_entries / 4.0);

2406 
num_¨bôî
 +
wö_íåõs
;

2409 
C‹
 = 4 * 
	`døöˇp
(
WSñORn
,
NCH
,1Ë+ døöˇp(
WSñOR¥equ
,
PCH
,1);

2411 
C≥ncode
 = 
	`døöˇp
(
WSñPn
,
NCH
,1Ë+ døöˇp(
WSñPp
,
PCH
,1) +

2412 2*
	`døöˇp
(
WSñPn
,
NCH
,1Ë+ døöˇp(
WSñPp
,
PCH
,2) +

2413 3*
	`døöˇp
(
WSñPn
,
NCH
,1Ë+ døöˇp(
WSñPp
,
PCH
,3) +

2414 4*
	`døöˇp
(
WSñPn
,
NCH
,1Ë+ døöˇp(
WSñPp
,
PCH
,4) +

2415 4*
	`g©eˇp
(
WSñE¬
+
WSñE≈
,20.0) +

2416 4*
	`døöˇp
(
WSñE¬
,
NCH
,1Ë+ 4*døöˇp(
WSñE≈
,
PCH
,1);

2418 
CtŸÆ
 +
ruu_issue_width
 * 
num_¨bôî
*(
C‹
+
C≥ncode
);

2420 (
CtŸÆ
*
PowîÁ˘‹
*
AF
);

2421 
	}
}

2424 
	$tŸÆ_˛ockpowî
(
dõ_Àngth
)

2427 
˛ocklöñígth
;

2428 
Clöe
,
Clöe2
,
CtŸÆ
;

2429 
pùîeg_˛ockˇp
=0;

2430 
globÆ_buf„rˇp
 = 0;

2431 
Clockpowî
;

2432 
k
;

2434 
num_pùîegs
;

2436 
≈ªg_width
 = ()
	`˚û
(
	`logtwo
(()((
IPREG_size
+
FPREG_size
))));

2444 
num_pùîegs
 = 
ruu_issue_width
*
ö°_Àngth
 + 
d©a_width
;

2446 
num_pùîegs
 +
ruu_issue_width
*(
ö°_Àngth
 + 3 * 
RUU_size
);

2448 
num_pùîegs
 +
ruu_issue_width
*(
ö°_Àngth
 + 3 * 
RUU_size
);

2450 
num_pùîegs
 +
ruu_issue_width
*(3 * 
≈ªg_width
 + 
	`pow2
(
›code_Àngth
));

2452 
num_pùîegs
 +
ruu_issue_width
*(2*
d©a_width
 + 
	`pow2
(
›code_Àngth
));

2454 
num_pùîegs
 +
ruu_issue_width
*(
d©a_width
 + 
	`pow2
(
›code_Àngth
));

2456 
num_pùîegs
 +
ruu_issue_width
*(
d©a_width
 + 
	`pow2
(
›code_Àngth
));

2458 
num_pùîegs
 +
ruu_issue_width
*(
d©a_width
 + 
	`pow2
(
›code_Àngth
));

2461 
num_pùîegs
 =Çum_piperegs * 1.5;

2463 
pùîeg_˛ockˇp
 = 
num_pùîegs
 * 4*
	`g©eˇp
(10.0,0);

2466 
Clöe2
 = 
CmëÆ
 * (.03 * 
dõ_Àngth
 * dõ_Àngth/
BôlöeS∑cög
) * 1e6 * 1e6;

2469 
˛ocklöñígth
 = 
dõ_Àngth
*(.5 + 4 * (.25 + 2*(.25) + 4 * (.125)));

2470 
Clöe
 = 20 * 
CmëÆ
 * (
˛ocklöñígth
) * 1e6;

2471 
globÆ_buf„rˇp
 = 12*
	`g©eˇp
(1000.0,10.0)+16*gatecap(200,10.0)+16*8*2*gatecap(100.0,10.00) + 2*gatecap(.29*1e6,10.0);

2473 
CtŸÆ
 = 
Clöe
+ 
pùîeg_˛ockˇp
+
globÆ_buf„rˇp
;

2475 
c⁄°™t_Á˘‹
 = (
Clöe
+
globÆ_buf„rˇp
)/(Clöe+globÆ_buf„rˇp+
pùîeg_˛ockˇp
);

2477 if(
vîbo£
)

2478 
	`Ârötf
(
°dîr
,"num_pùîeg†=%f\n",
num_pùîegs
);

2481 
Clockpowî
 = 
CtŸÆ
*
PowîÁ˘‹
 ;

2482 
˛ockp
 = 
Clockpowî
;

2483 
pùîegg
 = 
pùîeg_˛ockˇp
*
PowîÁ˘‹
;

2484 
globbufg
 = 
globÆ_buf„rˇp
*
PowîÁ˘‹
;

2485 
˛öeg
 = 
Clöe
*
PowîÁ˘‹
;

2487 if(
vîbo£
) {

2488 
	`Ârötf
(
°dîr
,"GlobÆ Clock Powî: %g\n",
Clockpowî
);

2489 
	`Ârötf
(
°dîr
," GlobÆ MëÆ Löe† (W): %g\n",
Clöe
*
PowîÁ˘‹
);

2490 
	`Ârötf
(
°dîr
," GlobÆ MëÆ Löe†(3%%Ë(W): %g\n",
Clöe2
*
PowîÁ˘‹
);

2491 
	`Ârötf
(
°dîr
," GlobÆ Clock Buf„r†(W): %g\n",
globÆ_buf„rˇp
*
PowîÁ˘‹
);

2492 
	`Ârötf
(
°dîr
," GlobÆ Clock C≠ (Im∂icôË(W): %g\n",
pùîeg_˛ockˇp
*
PowîÁ˘‹
);

2493 
	`Ârötf
(
°dîr
," GlobÆ Clock C≠ (Ex∂icôË(W): %g\n",
globÆ_˛ockˇp
*
PowîÁ˘‹
+ 
ªs_ülu
*
I_ADD_CLOCK
+ 
ªs_imu…
*
I_MULT_CLOCK
 + 
ªs_ÂÆu
*
F_ADD_CLOCK
 + 
ªs_Âmu…
*
F_MULT_CLOCK
);

2494 
	`Ârötf
(
°dîr
,"Bªaku∞-\¿ IALU1 : %g\¿ IALU2 : %g\¿ FALU1 : %g\¿ FALU2 : %g\n",
ªs_ülu
*
I_ADD_CLOCK
, 
ªs_imu…
*
I_MULT_CLOCK
, 
ªs_ÂÆu
*
F_ADD_CLOCK
, 
ªs_Âmu…
*
F_MULT_CLOCK
);

2495 
k
=0;k<
gcc
;k++) {

2496 
	`Ârötf
(
°dîr
," %†: %g\n",
g˙ame
[
k
],
gc
[k]*
PowîÁ˘‹
);

2499 (
Clockpowî
);

2501 
	}
}

2504 
	$globÆ_˛ockpowî
(
dõ_Àngth
)

2507 
˛ocklöñígth
;

2508 
Clöe
,
Clöe2
,
CtŸÆ
;

2509 
globÆ_buf„rˇp
 = 0;

2511 
Clöe2
 = 
CmëÆ
 * (.03 * 
dõ_Àngth
 * dõ_Àngth/
BôlöeS∑cög
) * 1e6 * 1e6;

2513 
˛ocklöñígth
 = 
dõ_Àngth
*(.5 + 4 * (.25 + 2*(.25) + 4 * (.125)));

2514 
Clöe
 = 20 * 
CmëÆ
 * (
˛ocklöñígth
) * 1e6;

2515 
globÆ_buf„rˇp
 = 12*
	`g©eˇp
(1000.0,10.0)+16*gatecap(200,10.0)+16*8*2*gatecap(100.0,10.00) + 2*gatecap(.29*1e6,10.0);

2516 
CtŸÆ
 = 
Clöe
+
globÆ_buf„rˇp
;

2518 if(
vîbo£
) {

2519 
	`Ârötf
(
°dîr
,"GlobÆ Clock Powî: %g\n",
CtŸÆ
*
PowîÁ˘‹
);

2520 
	`Ârötf
(
°dîr
," GlobÆ MëÆ Löe† (W): %g\n",
Clöe
*
PowîÁ˘‹
);

2521 
	`Ârötf
(
°dîr
," GlobÆ MëÆ Löe†(3%%Ë(W): %g\n",
Clöe2
*
PowîÁ˘‹
);

2522 
	`Ârötf
(
°dîr
," GlobÆ Clock Buf„r†(W): %g\n",
globÆ_buf„rˇp
*
PowîÁ˘‹
);

2525 (
CtŸÆ
*
PowîÁ˘‹
);

2527 
	}
}

2530 
	$compuã_ªsu…bus_powî
()

2532 
CtŸÆ
, 
Clöe
;

2534 
ªgfûe_height
;

2537 
≈ªg_width
 = ()
	`˚û
(
	`logtwo
(()((
IPREG_size
+
FPREG_size
))));

2539 
CtŸÆ
=0;

2541 
ªgfûe_height
 = (
IPREG_size
Ë* (
RegCñlHeight
 +

2542 
W‹dlöeS∑cög
 * 3 * 
ruu_issue_width
);

2545 
Clöe
 = 
CmëÆ
 * (
ªgfûe_height
 + .5 * (
ªs_ülu
/
CLUSTERS
Ë* 3200.0 * 
LSCALE
);

2552 
CtŸÆ
 +2.0 * (
d©a_width
 + 
≈ªg_width
Ë* (
ruu_issue_width
)* 
Clöe
;

2554 #ifde‡
STATIC_AF


2555 (
CtŸÆ
*
PowîÁ˘‹
*
AF
);

2557 (
CtŸÆ
*
PowîÁ˘‹
);

2560 
	}
}

2569 
	$d_Êù_Ê›_ˇp
 (
di•©ch_du≥d_bôs
)

2571 
c_dff
;

2575 
c_dff
 = (
di•©ch_du≥d_bôs
) *

2577 (
	`døöˇp
(
WDFFn
,
NCH
,1Ë+ døöˇp(
WDFFp
,
PCH
,2) +

2578 
	`døöˇp
(
WDFFp
,
PCH
,1Ë+ 
	`g©eˇp
(
WDFFn
,10) +

2581 
	`døöˇp
(
WDFFn
,
NCH
,1) + draincap(WDFFn,NCH,2) +

2582 
	`døöˇp
(
WDFFp
,
PCH
,1Ë+ 
	`g©eˇp
(
WDFFn
 + WDFFp,20) +

2585 
	`døöˇp
(
WDFFn
,
NCH
,1) + draincap(WDFFn,NCH,2) +

2586 
	`døöˇp
(
WDFFp
,
PCH
,1Ë+ 
	`g©eˇp
(
WDFFn
 + WDFFp,20) +

2589 
	`døöˇp
(
WDFFn
,
NCH
,1Ë+ døöˇp(
WDFFp
,
PCH
,1) +

2590 
	`g©eˇp
(
WDFFn
 + 
WDFFp
,0.0)

2593 (
c_dff
);

2594 
	}
}

2597 
	$two_to_1_mux_ˇp
 (
di•©ch_du≥d_bôs
)

2599 
c_21mux
;

2601 
c_21mux
 = (
di•©ch_du≥d_bôs
) *

2603 (
	`døöˇp
(
W2to1muxn
,
NCH
,1Ë+ døöˇp(
W2to1muxp
,
PCH
,1) +

2604 
	`g©eˇp
(
W2to1muxn
 + 
W2to1muxp
,20) +

2607 
	`døöˇp
(
W2to1muxn
,
PCH
,1Ë+ døöˇp(
W2to1muxp
,
NCH
,1) +

2608 
	`g©eˇp
(
W2to1muxn
 + 
W2to1muxp
,0.0) +

2611 
	`døöˇp
(
W2to1muxn
,
PCH
,1Ë+ døöˇp(
W2to1muxp
,
NCH
,1) +

2612 
	`g©eˇp
(
W2to1muxn
 + 
W2to1muxp
,0.0)

2615 (
c_21mux
);

2616 
	}
}

2620 
	$d_Êù_Ê›_powî
 ()

2622 
C_dff_tŸÆ
;

2623 
d_Êù_Ê›_pwr
;

2625 
C_dff_tŸÆ
 = 
	`d_Êù_Ê›_ˇp
(
DISPATCH_DUPED_BITS
);

2627 #ifde‡
STATIC_AF


2628 
d_Êù_Ê›_pwr
 = 
C_dff_tŸÆ
 * 
PowîÁ˘‹
 * 
AF
;

2630 
d_Êù_Ê›_pwr
 = 
C_dff_tŸÆ
 * 
PowîÁ˘‹
;

2633 (
d_Êù_Ê›_pwr
);

2635 
	}
}

2639 
	$two_to_1_mux_powî
 ()

2641 
C_21mux_tŸÆ
;

2642 
two_to_1_mux_pwr
;

2644 
C_21mux_tŸÆ
 = 
	`two_to_1_mux_ˇp
(
DISPATCH_DUPED_BITS
);

2646 #ifde‡
STATIC_AF


2647 
two_to_1_mux_pwr
 = 
C_21mux_tŸÆ
 * 
PowîÁ˘‹
 * 
AF
;

2649 
two_to_1_mux_pwr
 = 
C_21mux_tŸÆ
 * 
PowîÁ˘‹
;

2652 (
two_to_1_mux_pwr
);

2654 
	}
}

2661 
	$commô_com∑ª_ˇp
 (
commô_com∑ª_bôs
)

2663 
c1
, 
c2
, 
c3
;

2665 
c2
 = (
commô_com∑ª_bôs
)*(
	`døöˇp
(
Wcom≤
,
NCH
,1)+draincap(Wcompn,NCH,2))+

2666 
	`døöˇp
(
WevÆövp
,
PCH
,1Ë+ døöˇp(
WevÆövn
,
NCH
,1);

2669 
c1
 = (
commô_com∑ª_bôs
)*(
	`døöˇp
(
Wcom≤
,
NCH
,1)+draincap(Wcompn,NCH,2)+

2670 
	`døöˇp
(
Wcomµªequ
,
NCH
,1)) +

2671 
	`g©eˇp
(
WdecNORn
,1.0)+

2672 
	`g©eˇp
(
WdecNORp
,3.0);

2676 
c3
 = (
commô_com∑ª_bôs
)*

2677 2 * (
	`døöˇp
(
Wcompövp1
,
PCH
,1Ë+ døöˇp(
Wcompövn1
,
NCH
,1) +

2678 
	`g©eˇp
(
Wcompövp1
 + 
Wcompövn1
,0.0));

2680 (
c1
 + 
c2
 + 
c3
);

2681 
	}
}

2685 
	$commô_com∑ª_powî
 ()

2687 
C_com∑ª_tŸÆ
;

2688 
com∑ª_pwr
;

2690 
C_com∑ª_tŸÆ
 = 
	`commô_com∑ª_ˇp
(
COMMIT_COMPARE_BITS
);

2692 #ifde‡
STATIC_AF


2693 
com∑ª_pwr
 = 
C_com∑ª_tŸÆ
 * 
PowîÁ˘‹
 * 
AF
;

2695 
com∑ª_pwr
 = 
C_com∑ª_tŸÆ
 * 
PowîÁ˘‹
;

2698 (
com∑ª_pwr
);

2700 
	}
}

2703 
	$ˇlcuœã_powî
(
powî_ªsu…_ty≥
 *
powî
)

2705 
˛ockpowî
;

2706 
¥ede˛ígth
, 
w‹dlöñígth
, 
bôlöñígth
;

2707 
ndwl
, 
ndbl
, 
n•d
, 
¡wl
, 
¡bl
, 
¡•d
, 
c
,
b
,
a
,
ˇche
, 
rowsb
, 
cﬁsb
;

2708 
åowsb
, 
tcﬁsb
, 
ègsize
;

2709 
va_size
 = 48;

2711 
gcc
 = 0;

2713 
PowîÁ˘‹
 = 
powî
->Powerfactor;

2714 
Sí£PowîÁ˘‹
 = 
powî
->SensePowerfactor;

2715 
vdd_ªdu˘i⁄
 = 
powî
->vdd_reduction;

2717 
POWER_SCALE
 = (
GEN_POWER_SCALE
 * 
NORMALIZE_SCALE
 * 
PowîÁ˘‹
);

2718 
I_ADD
 = ((.37 - .091Ë* 
POWER_SCALE
);

2719 
I_ADD32
 = (((.37 - .091)/2)*
POWER_SCALE
);

2720 
I_MULT16
 = ((.31-.095)*
POWER_SCALE
);

2721 
I_SHIFT
 = ((.21-.089)*
POWER_SCALE
);

2722 
I_LOGIC
 = ((.04-.015)*
POWER_SCALE
);

2723 
F_ADD
 = ((1.307-.452)*
POWER_SCALE
);

2724 
F_MULT
 = ((1.307-.452)*
POWER_SCALE
);

2726 
I_ADD_CLOCK
 = (.091*
POWER_SCALE
);

2727 
I_MULT_CLOCK
 = (.095*
POWER_SCALE
);

2728 
I_SHIFT_CLOCK
(.089*
POWER_SCALE
);

2729 
I_LOGIC_CLOCK
(.015*
POWER_SCALE
);

2730 
F_ADD_CLOCK
 = (.452*
POWER_SCALE
);

2731 
F_MULT_CLOCK
 = (.452*
POWER_SCALE
);

2733 if(
vdd_ªdu˘i⁄
 == 1)

2734 
Pîiod
 = (1/
Mhz
);

2736 
Pîiod
 = (2/
Mhz
);

2738 
≈ªg_width
 = ()
	`˚û
(
	`logtwo
(()((
IPREG_size
)+(
FPREG_size
))));

2742 
time_ªsu…_ty≥
 
time_ªsu…
;

2743 
time_∑ømëî_ty≥
 
time_∑ømëîs
;

2746 
sˇÀ_Á˘‹
;

2748 
globÆ_˛ockˇp
 = 0;

2750 
ˇche
=0;

2755 
powî
->
com∑ª_powî
 = 
	`commô_com∑ª_powî
 ();

2760 
powî
->
d_Êù_Ê›_powî
 = 
	`d_Êù_Ê›_powî
 ();

2761 
powî
->
two_to_1_mux_powî
 = 
	`two_to_1_mux_powî
 ();

2762 
powî
->
du∂iˇti⁄_powî
 =Öowî->
d_Êù_Ê›_powî
 +Öowî->
two_to_1_mux_powî
;

2767 
powî
->
ülu1_powî
 = (
ªs_ülu
 /
CLUSTERS
)* (
I_ADD
+
I_ADD_CLOCK
);

2768 
powî
->
ülu2_powî
 = (
ªs_imu…
 /
CLUSTERS
)* (
I_MULT16
+
I_MULT_CLOCK
);

2769 
powî
->
Álu1_powî
 = (
ªs_ÂÆu
 /
CLUSTERS
)* (
F_ADD
+
F_ADD_CLOCK
);

2770 
powî
->
Álu2_powî
 = (
ªs_Âmu…
 /
CLUSTERS
)* (
F_MULT
+
F_MULT_CLOCK
);

2773 
nvªg_width
 = ()
	`˚û
(
	`logtwo
(()(
MD_NUM_IREGS
*2.0)));

2774 
≈ªg_width
 = ()
	`˚û
(
	`logtwo
(()((
IPREG_size
+
FPREG_size
))));

2781 
¥ede˛ígth
 = 2*
MD_NUM_IREGS
 *

2782 (
R©CñlHeight
 + 3 * (
ruu_decode_width
Ë* 
W‹dlöeS∑cög
);

2784 
w‹dlöñígth
 = 
≈ªg_width
 *

2785 (
R©CñlWidth
 +

2786 6 * (
ruu_decode_width
Ë* 
BôlöeS∑cög
 +

2787 
R©Shi·RegWidth
*
R©NumShi·
);

2789 
bôlöñígth
 = 2*
MD_NUM_IREGS
 * (
R©CñlHeight
 + 3 * (
ruu_decode_width
Ë* 
W‹dlöeS∑cög
);

2791 if(
vîbo£
)

2792 
	`Ârötf
(
°dîr
,"ratÖower stats\n");

2793 
powî
->
øt_decodî
 = 
	`¨øy_decodî_powî
(2*
MD_NUM_IREGS
,
≈ªg_width
,
¥ede˛ígth
,2*(
ruu_decode_width
),‘uu_decode_width),
ˇche
);

2794 
powî
->
øt_w‹dlöe
 = 
	`¨øy_w‹dlöe_powî
(2*
MD_NUM_IREGS
,
≈ªg_width
,
w‹dlöñígth
,2*(
ruu_decode_width
),‘uu_decode_width),
ˇche
);

2795 
powî
->
øt_bôlöe
 = 
	`¨øy_bôlöe_powî
(2*
MD_NUM_IREGS
,
≈ªg_width
,
bôlöñígth
,2*(
ruu_decode_width
),‘uu_decode_width),
ˇche
);

2799 
	`°r˝y
(
g˙ame
[
gcc
-1],"rat");

2800 
powî
->
øt_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2801 
powî
->
øt_£n£amp
 = 0;

2803 
powî
->
d˛_com∑ª
 = 
	`d˛_com∑ª_powî
(
nvªg_width
);

2804 
powî
->
d˛_≥ncode
 = 0;

2805 
powî
->
ö°_decodî_powî
 = (
ruu_decode_width
Ë* 
	`sim∂e_¨øy_decodî_powî
(
›code_Àngth
,1,1,1,
ˇche
);

2807 
powî
->
iwakeup_ègdrive
 =
	`ˇm_ègdrive
((
IIQ_size
),
≈ªg_width
,
ruu_issue_width
,ruu_issue_width);

2808 
powî
->
iwakeup_ègm©ch
 =
	`ˇm_ègm©ch
((
IIQ_size
),
≈ªg_width
,
ruu_issue_width
,ruu_issue_width);

2809 
	`°r˝y
(
g˙ame
[
gcc
-1],"IIQ");

2810 
powî
->
iwakeup_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2811 
powî
->
iwakeup_‹m©ch
 =0;

2813 
powî
->
fwakeup_ègdrive
 =
	`ˇm_ègdrive
((
FIQ_size
),
≈ªg_width
,
ruu_issue_width
,ruu_issue_width);

2814 
powî
->
fwakeup_ègm©ch
 =
	`ˇm_ègm©ch
((
FIQ_size
),
≈ªg_width
,
ruu_issue_width
,ruu_issue_width);

2815 
	`°r˝y
(
g˙ame
[
gcc
-1],"FIQ");

2816 
powî
->
fwakeup_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2817 
powî
->
fwakeup_‹m©ch
 =0;

2819 
powî
->
i£À˘i⁄
 = 
	`£À˘i⁄_powî
(
IIQ_size
);

2820 
powî
->
f£À˘i⁄
 = 
	`£À˘i⁄_powî
(
FIQ_size
);

2823 
¥ede˛ígth
 = (
IPREG_size
Ë* (
RegCñlHeight
 + 3 * 
ruu_issue_width
 * 
W‹dlöeS∑cög
);

2825 
w‹dlöñígth
 = 
d©a_width
 *

2826 (
RegCñlWidth
 +

2827 6 * 
ruu_issue_width
 * 
BôlöeS∑cög
);

2829 
bôlöñígth
 = (
IPREG_size
 )* (
RegCñlHeight
 + 3 * 
ruu_issue_width
 * 
W‹dlöeS∑cög
);

2831 if(
vîbo£
)

2832 
	`Ârötf
(
°dîr
,"iregfileÖower stats\n");

2834 
powî
->
úegfûe_decodî
 = 
	`¨øy_decodî_powî
((
IPREG_size
),
d©a_width
,
¥ede˛ígth
,2*
ruu_issue_width
,ruu_issue_width,
ˇche
);

2835 
powî
->
úegfûe_w‹dlöe
 = 
	`¨øy_w‹dlöe_powî
((
IPREG_size
),
d©a_width
,
w‹dlöñígth
,2*
ruu_issue_width
,ruu_issue_width,
ˇche
);

2836 
powî
->
úegfûe_bôlöe
 = 
	`¨øy_bôlöe_powî
((
IPREG_size
),
d©a_width
,
bôlöñígth
,2*
ruu_issue_width
,ruu_issue_width,
ˇche
);

2837 
	`°r˝y
(
g˙ame
[
gcc
-1],"iregfile");

2838 
powî
->
úegfûe_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2839 
powî
->
úegfûe_£n£amp
 =0;

2841 
¥ede˛ígth
 = (
FPREG_size
Ë* (
RegCñlHeight
 + 3 * 
ruu_issue_width
 * 
W‹dlöeS∑cög
);

2843 
w‹dlöñígth
 = 
d©a_width
 *

2844 (
RegCñlWidth
 +

2845 6 * 
ruu_issue_width
 * 
BôlöeS∑cög
);

2847 
bôlöñígth
 = (
FPREG_size
Ë* (
RegCñlHeight
 + 3 * 
ruu_issue_width
 * 
W‹dlöeS∑cög
);

2849 if(
vîbo£
)

2850 
	`Ârötf
(
°dîr
,"fregfileÖower stats\n");

2852 
powî
->
‰egfûe_decodî
 = 
	`¨øy_decodî_powî
((
FPREG_size
),
d©a_width
,
¥ede˛ígth
,2*
ruu_issue_width
,ruu_issue_width,
ˇche
);

2853 
powî
->
‰egfûe_w‹dlöe
 = 
	`¨øy_w‹dlöe_powî
((
FPREG_size
),
d©a_width
,
w‹dlöñígth
,2*
ruu_issue_width
,ruu_issue_width,
ˇche
);

2854 
powî
->
‰egfûe_bôlöe
 = 
	`¨øy_bôlöe_powî
((
FPREG_size
),
d©a_width
,
bôlöñígth
,2*
ruu_issue_width
,ruu_issue_width,
ˇche
);

2855 
	`°r˝y
(
g˙ame
[
gcc
-1],"fregfile");

2856 
powî
->
‰egfûe_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2857 
powî
->
‰egfûe_£n£amp
 =0;

2860 
powî
->
lsq_wakeup_ègdrive
 =
	`ˇm_ègdrive
((
LSQ_size
),
d©a_width
,(
ªs_memp‹t
/
CLUSTERS
),(res_memport/CLUSTERS));

2861 
powî
->
lsq_wakeup_ègm©ch
 =
	`ˇm_ègm©ch
((
LSQ_size
),
d©a_width
,(
ªs_memp‹t
/
CLUSTERS
),(res_memport/CLUSTERS));

2862 
	`°r˝y
(
g˙ame
[
gcc
-1],"LSQ");

2863 
powî
->
lsq_wakeup_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2864 
powî
->
lsq_wakeup_‹m©ch
 =0;

2866 
w‹dlöñígth
 = 
d©a_width
 *

2867 (
RegCñlWidth
 +

2868 4 *–
ªs_memp‹t
/
CLUSTERS
Ë* 
BôlöeS∑cög
);

2870 
bôlöñígth
 = (
IIQ_size
Ë* (
RegCñlHeight
 + 4 *–
ªs_memp‹t
/
CLUSTERS
Ë* 
W‹dlöeS∑cög
);

2873 if(
vîbo£
)

2874 
	`Ârötf
(
°dîr
,"lsq stationÖower stats\n");

2875 
powî
->
lsq_rs_decodî
 = 
	`¨øy_decodî_powî
((
LSQ_size
),
d©a_width
,
¥ede˛ígth
,(
ªs_memp‹t
/
CLUSTERS
),‘es_memp‹t/CLUSTERS),
ˇche
);

2876 
powî
->
lsq_rs_w‹dlöe
 = 
	`¨øy_w‹dlöe_powî
((
LSQ_size
),
d©a_width
,
w‹dlöñígth
,(
ªs_memp‹t
/
CLUSTERS
),‘es_memp‹t/CLUSTERS),
ˇche
);

2877 
powî
->
lsq_rs_bôlöe
 = 
	`¨øy_bôlöe_powî
((
LSQ_size
),
d©a_width
,
bôlöñígth
,(
ªs_memp‹t
/
CLUSTERS
),‘es_memp‹t/CLUSTERS),
ˇche
);

2878 
	`°r˝y
(
g˙ame
[
gcc
-1],"lsq");

2879 
powî
->
lsq_rs_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2880 
powî
->
lsq_rs_£n£amp
 =0;

2882 
powî
->
úesu…bus
 = 
	`compuã_ªsu…bus_powî
();

2883 
powî
->
‰esu…bus
 = 
	`compuã_ªsu…bus_powî
();

2886 
time_∑ømëîs
.
ˇche_size
 = 
btb_c⁄fig
[0] * (
d©a_width
/8) * btb_config[1];

2887 
time_∑ømëîs
.
block_size
 = (
d©a_width
/8);

2888 
time_∑ømëîs
.
assocütivôy
 = 
btb_c⁄fig
[1];

2889 
time_∑ømëîs
.
numbî_of_£ts
 = 
btb_c⁄fig
[0];

2892 
	`ˇlcuœã_time
(&
time_ªsu…
,&
time_∑ømëîs
);

2893 
	`ouçut_d©a
(&
time_ªsu…
,&
time_∑ømëîs
);

2896 
ndwl
=
time_ªsu…
.
be°_Ndwl
;

2897 
ndbl
=
time_ªsu…
.
be°_Ndbl
;

2898 
n•d
=
time_ªsu…
.
be°_N•d
;

2899 
¡wl
=
time_ªsu…
.
be°_Ntwl
;

2900 
¡bl
=
time_ªsu…
.
be°_Ntbl
;

2901 
¡•d
=
time_ªsu…
.
be°_Nt•d
;

2902 
c
 = 
time_∑ømëîs
.
ˇche_size
;

2903 
b
 = 
time_∑ømëîs
.
block_size
;

2904 
a
 = 
time_∑ømëîs
.
assocütivôy
;

2906 
ˇche
=1;

2909 
rowsb
 = 
c
/(8*
b
*
a
*
ndbl
*
n•d
);

2910 
cﬁsb
 = 8*
b
*
a
*
n•d
/
ndwl
;

2912 if(
vîbo£
) {

2913 
	`Ârötf
(
°dîr
,"%d KB %d-way btb (%d-byã block size):\n",
c
,
a
,
b
);

2914 
	`Ârötf
(
°dîr
,"ndw»=%d,Çdb»=%d,Ç•d =%d\n",
ndwl
,
ndbl
,
n•d
);

2915 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
ndwl
*
ndbl
,
rowsb
,
cﬁsb
);

2918 
¥ede˛ígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2919 
w‹dlöñígth
 = 
cﬁsb
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

2920 
bôlöñígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2922 if(
vîbo£
)

2923 
	`Ârötf
(
°dîr
,"btbÖower stats\n");

2924 
powî
->
btb
 = 
ndwl
*
ndbl
*(
	`¨øy_decodî_powî
(
rowsb
,
cﬁsb
,
¥ede˛ígth
,1,1,
ˇche
Ë+ 
	`¨øy_w‹dlöe_powî
‘owsb,cﬁsb,
w‹dlöñígth
,1,1,ˇcheË+ 
	`¨øy_bôlöe_powî
‘owsb,cﬁsb,
bôlöñígth
,1,1,ˇcheË+ 
	`£n£amp_powî
(colsb));

2925 
	`°r˝y
(
g˙ame
[
gcc
-1],"btb");

2926 
powî
->
btb_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2928 
ˇche
=1;

2930 
sˇÀ_Á˘‹
 = 
	`squ¨ify
(
twﬁev_c⁄fig
[0],twolev_config[2]);

2931 
¥ede˛ígth
 = (
twﬁev_c⁄fig
[0] / 
sˇÀ_Á˘‹
)* (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2932 
w‹dlöñígth
 = 
twﬁev_c⁄fig
[2] * 
sˇÀ_Á˘‹
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

2933 
bôlöñígth
 = (
twﬁev_c⁄fig
[0] / 
sˇÀ_Á˘‹
Ë* (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2935 if(
vîbo£
)

2936 
	`Ârötf
(
°dîr
,"localÖredictÖower stats\n");

2938 
powî
->
loˇl_¥edi˘
 = 
	`¨øy_decodî_powî
(
twﬁev_c⁄fig
[0]/
sˇÀ_Á˘‹
,twﬁev_c⁄fig[2]*sˇÀ_Á˘‹,
¥ede˛ígth
,1,1,
ˇche
Ë+ 
	`¨øy_w‹dlöe_powî
—wﬁev_c⁄fig[0]/sˇÀ_Á˘‹,twﬁev_c⁄fig[2]*sˇÀ_Á˘‹,
w‹dlöñígth
,1,1,ˇcheË+ 
	`¨øy_bôlöe_powî
—wﬁev_c⁄fig[0]/sˇÀ_Á˘‹,twﬁev_c⁄fig[2]*sˇÀ_Á˘‹,
bôlöñígth
,1,1,ˇcheË+ 
	`£n£amp_powî
(twolev_config[2]*scale_factor);

2939 
	`°r˝y
(
g˙ame
[
gcc
-1],"locpred");

2940 
powî
->
loˇl_¥edi˘_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2942 
sˇÀ_Á˘‹
 = 
	`squ¨ify
(
twﬁev_c⁄fig
[1],3);

2944 
¥ede˛ígth
 = (
twﬁev_c⁄fig
[1] / 
sˇÀ_Á˘‹
)* (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2945 
w‹dlöñígth
 = 3 * 
sˇÀ_Á˘‹
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

2946 
bôlöñígth
 = (
twﬁev_c⁄fig
[1] / 
sˇÀ_Á˘‹
Ë* (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2949 if(
vîbo£
)

2950 
	`Ârötf
(
°dîr
,"localÖredictÖower stats\n");

2951 
powî
->
loˇl_¥edi˘
 +
	`¨øy_decodî_powî
(
twﬁev_c⁄fig
[1]/
sˇÀ_Á˘‹
,3*sˇÀ_Á˘‹,
¥ede˛ígth
,1,1,
ˇche
Ë+ 
	`¨øy_w‹dlöe_powî
—wﬁev_c⁄fig[1]/sˇÀ_Á˘‹,3*sˇÀ_Á˘‹,
w‹dlöñígth
,1,1,ˇcheË+ 
	`¨øy_bôlöe_powî
—wﬁev_c⁄fig[1]/sˇÀ_Á˘‹,3*sˇÀ_Á˘‹,
bôlöñígth
,1,1,ˇcheË+ 
	`£n£amp_powî
(3*scale_factor);

2952 
	`°r˝y
(
g˙ame
[
gcc
-1],"locpred");

2953 
powî
->
loˇl_¥edi˘_gc
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

2956 if(
vîbo£
)

2957 
	`Ârötf
(
°dîr
,"bimod_c⁄fig[0] =%d\n",
bimod_c⁄fig
[0]);

2959 
sˇÀ_Á˘‹
 = 
	`squ¨ify
(
bimod_c⁄fig
[0],2);

2961 
¥ede˛ígth
 = 
bimod_c⁄fig
[0]/
sˇÀ_Á˘‹
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2962 
w‹dlöñígth
 = 2*
sˇÀ_Á˘‹
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

2963 
bôlöñígth
 = 
bimod_c⁄fig
[0]/
sˇÀ_Á˘‹
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2966 if(
vîbo£
)

2967 
	`Ârötf
(
°dîr
,"globalÖredictÖower stats\n");

2968 
powî
->
globÆ_¥edi˘
 = 
	`¨øy_decodî_powî
(
bimod_c⁄fig
[0]/
sˇÀ_Á˘‹
,2*sˇÀ_Á˘‹,
¥ede˛ígth
,1,1,
ˇche
Ë+ 
	`¨øy_w‹dlöe_powî
(bimod_c⁄fig[0]/sˇÀ_Á˘‹,2*sˇÀ_Á˘‹,
w‹dlöñígth
,1,1,ˇcheË+ 
	`¨øy_bôlöe_powî
(bimod_c⁄fig[0]/sˇÀ_Á˘‹,2*sˇÀ_Á˘‹,
bôlöñígth
,1,1,ˇcheË+ 
	`£n£amp_powî
(2*scale_factor);

2969 
	`°r˝y
(
g˙ame
[
gcc
-1],"glopred");

2970 
powî
->
globÆ_¥edi˘_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2972 
sˇÀ_Á˘‹
 = 
	`squ¨ify
(
comb_c⁄fig
[0],2);

2974 
¥ede˛ígth
 = 
comb_c⁄fig
[0]/
sˇÀ_Á˘‹
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2975 
w‹dlöñígth
 = 2*
sˇÀ_Á˘‹
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

2976 
bôlöñígth
 = 
comb_c⁄fig
[0]/
sˇÀ_Á˘‹
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

2978 if(
vîbo£
)

2979 
	`Ârötf
(
°dîr
,"chooserÖredictÖower stats\n");

2980 
powî
->
choo£r
 = 
	`¨øy_decodî_powî
(
comb_c⁄fig
[0]/
sˇÀ_Á˘‹
,2*sˇÀ_Á˘‹,
¥ede˛ígth
,1,1,
ˇche
Ë+ 
	`¨øy_w‹dlöe_powî
(comb_c⁄fig[0]/sˇÀ_Á˘‹,2*sˇÀ_Á˘‹,
w‹dlöñígth
,1,1,ˇcheË+ 
	`¨øy_bôlöe_powî
(comb_c⁄fig[0]/sˇÀ_Á˘‹,2*sˇÀ_Á˘‹,
bôlöñígth
,1,1,ˇcheË+ 
	`£n£amp_powî
(2*scale_factor);

2981 
	`°r˝y
(
g˙ame
[
gcc
-1],"choopred");

2982 
powî
->
choo£r_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2984 if(
vîbo£
)

2985 
	`Ârötf
(
°dîr
,"RASÖredictÖower stats\n");

2986 
powî
->
øs
 = 
	`sim∂e_¨øy_powî
(
øs_size
,
d©a_width
,1,1,0);

2987 
	`°r˝y
(
g˙ame
[
gcc
-1],"ras");

2988 
powî
->
øs_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
;

2991 
ègsize
 = 
va_size
 - (()
	`logtwo
(
ˇche_dl1
[0]->
n£ts
Ë+ (Óogtwo(ˇche_dl1[0]->
bsize
));

2994 if(
vîbo£
)

2995 
	`Ârötf
(
°dîr
,"dtlbÖredictÖower stats\n");

2996 
powî
->
déb
 = (
ªs_memp‹t
/
CLUSTERS
)*(
	`ˇm_¨øy
(déb->
n£ts
, 
va_size
 - ()
	`logtwo
(()déb->
bsize
),1,1Ë+ 
	`sim∂e_¨øy_powî
(déb->n£ts,
ègsize
,1,1,
ˇche
));

2997 
	`°r˝y
(
g˙ame
[
gcc
-1],"dtlb");

2998 
	`°r˝y
(
g˙ame
[
gcc
-2],"dtlb");

2999 
powî
->
déb_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
+gc[gcc-2]*Powerfactor;

3000 
powî
->
déb
 +powî->
déb_gc
;

3002 i‡(
vîbo£
)

3003 
	`Ârötf
(
°dîr
,"ROBÖower stats\n");

3005 
powî
->
rob1_powî
 = 
	`ˇm_¨øy
(
RUU_size
, ()
	`logtwo
(()((
IPREG_size
+
FPREG_size
))), 0, 
ruu_commô_width
);

3006 
	`°r˝y
(
g˙ame
[
gcc
-1],"rob1");

3007 
powî
->
rob1_powî
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

3009 
powî
->
rob2_powî
 = 
	`sim∂e_¨øy_powî
(
RUU_size
, 20 , 
ruu_commô_width
, (
ruu_decode_width
), 
ˇche
);

3010 
	`°r˝y
(
g˙ame
[
gcc
-1],"rob2");

3011 
powî
->
rob2_powî
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

3013 i‡(
vîbo£
)

3014 
	`Ârötf
(
°dîr
,"IssueqÑamÖower stats\n");

3017 if(
INORDER_CHECKER
 && 
CHECKER_NUMBER
 && 
vdd_ªdu˘i⁄
 != 1){

3019 
powî
->
iqøm_powî
 = 
	`sim∂e_¨øy_powî
(1, 100 , 
ruu_issue_width
, (
ruu_decode_width
), 
ˇche
);

3020 
	`°r˝y
(
g˙ame
[
gcc
-1],"iqram");

3021 
powî
->
iqøm_powî
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

3025 
powî
->
fqøm_powî
 = 
	`sim∂e_¨øy_powî
(1, 100 , 
ruu_issue_width
, (
ruu_decode_width
), 
ˇche
);

3026 
	`°r˝y
(
g˙ame
[
gcc
-1],"fqram");

3027 
powî
->
fqøm_powî
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

3029 
powî
->
iqøm_powî
 -
	`sim∂e_¨øy_decodî_powî
((
IIQ_size
), 100 , 
ruu_issue_width
, (
ruu_decode_width
), 
ˇche
);

3030 
powî
->
fqøm_powî
 -
	`sim∂e_¨øy_decodî_powî
((
FIQ_size
), 100 , 
ruu_issue_width
, (
ruu_decode_width
), 
ˇche
);

3035 
powî
->
iqøm_powî
 = 
	`sim∂e_¨øy_powî
((
IIQ_size
), 100 , 
ruu_issue_width
, (
ruu_decode_width
), 
ˇche
);

3036 
	`°r˝y
(
g˙ame
[
gcc
-1],"iqram");

3037 
powî
->
iqøm_powî
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

3041 
powî
->
fqøm_powî
 = 
	`sim∂e_¨øy_powî
((
FIQ_size
), 100 , 
ruu_issue_width
, (
ruu_decode_width
), 
ˇche
);

3042 
	`°r˝y
(
g˙ame
[
gcc
-1],"fqram");

3043 
powî
->
fqøm_powî
 +
gc
[
gcc
-1]*
PowîÁ˘‹
;

3050 
ègsize
 = 
va_size
 - (()
	`logtwo
(
ˇche_û1
[0]->
n£ts
Ë+ (Óogtwo(ˇche_û1[0]->
bsize
));

3052 
¥ede˛ígth
 = 
ôlb
->
n£ts
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3053 
w‹dlöñígth
 = 
	`logtwo
(()
ôlb
->
bsize
Ë* (
RegCñlWidth
 + 
BôlöeS∑cög
);

3054 
bôlöñígth
 = 
ôlb
->
n£ts
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3056 if(
vîbo£
)

3057 
	`Ârötf
(
°dîr
,"itlbÖredictÖower stats\n");

3058 
powî
->
ôlb
 = 
	`ˇm_¨øy
(ôlb->
n£ts
, 
va_size
 - ()
	`logtwo
(()ôlb->
bsize
),1,1Ë+ 
	`sim∂e_¨øy_powî
(ôlb->n£ts,
ègsize
,1,1,
ˇche
);

3059 
	`°r˝y
(
g˙ame
[
gcc
-1],"itlb");

3060 
	`°r˝y
(
g˙ame
[
gcc
-2],"itlb");

3061 
powî
->
ôlb_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
+gc[gcc-2]*Powerfactor;

3062 
powî
->
ôlb
 +powî->
ôlb_gc
;

3065 
ˇche
=1;

3068 
time_∑ømëîs
.
ˇche_size
 = 
ˇche_û1
[0]->
n£ts
 * cache_û1[0]->
bsize
 * cache_û1[0]->
assoc
;

3069 
time_∑ømëîs
.
block_size
 = 
ˇche_û1
[0]->
bsize
;

3070 
time_∑ømëîs
.
assocütivôy
 = 
ˇche_û1
[0]->
assoc
;

3071 
time_∑ømëîs
.
numbî_of_£ts
 = 
ˇche_û1
[0]->
n£ts
;

3078 
	`ˇlcuœã_time
(&
time_ªsu…
,&
time_∑ømëîs
);

3079 
	`ouçut_d©a
(&
time_ªsu…
,&
time_∑ømëîs
);

3081 
ndwl
=
time_ªsu…
.
be°_Ndwl
;

3082 
ndbl
=
time_ªsu…
.
be°_Ndbl
;

3083 
n•d
=
time_ªsu…
.
be°_N•d
;

3084 
¡wl
=
time_ªsu…
.
be°_Ntwl
;

3085 
¡bl
=
time_ªsu…
.
be°_Ntbl
;

3086 
¡•d
=
time_ªsu…
.
be°_Nt•d
;

3088 
c
 = 
time_∑ømëîs
.
ˇche_size
;

3089 
b
 = 
time_∑ømëîs
.
block_size
;

3090 
a
 = 
time_∑ømëîs
.
assocütivôy
;

3092 
rowsb
 = 
c
/(8*
b
*
a
*
ndbl
*
n•d
);

3093 
cﬁsb
 = 8*
b
*
a
*
n•d
/
ndwl
;

3097 
ègsize
 = 
va_size
 - (()
	`logtwo
(
ˇche_û1
[0]->
n£ts
Ë+ (Óogtwo(ˇche_û1[0]->
bsize
));

3098 
åowsb
 = 
c
/(8*
b
*
a
*
¡bl
*
¡•d
);

3099 
tcﬁsb
 = 
a
 * (
ègsize
 + 1 + 6Ë* 
¡•d
/
¡wl
;

3101 if(
vîbo£
) {

3102 
	`Ârötf
(
°dîr
,"%d KB %d-way cachê(%d-byã block size):\n",
c
,
a
,
b
);

3103 
	`Ârötf
(
°dîr
,"ndw»=%d,Çdb»=%d,Ç•d =%d\n",
ndwl
,
ndbl
,
n•d
);

3104 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
ndwl
*
ndbl
,
rowsb
,
cﬁsb
);

3105 
	`Ârötf
(
°dîr
,"ègsizê=%d\n",
ègsize
);

3108 
¥ede˛ígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3109 
w‹dlöñígth
 = 
cﬁsb
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

3110 
bôlöñígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3112 if(
vîbo£
)

3113 
	`Ârötf
(
°dîr
,"icacheÖower stats\n");

3114 
powî
->
iˇche_decodî
 = 
ndwl
*
ndbl
*
	`¨øy_decodî_powî
(
rowsb
,
cﬁsb
,
¥ede˛ígth
,1,1,
ˇche
);

3115 
powî
->
iˇche_w‹dlöe
 = 
ndwl
*
ndbl
*
	`¨øy_w‹dlöe_powî
(
rowsb
,
cﬁsb
,
w‹dlöñígth
,1,1,
ˇche
);

3116 
powî
->
iˇche_bôlöe
 = 
ndwl
*
ndbl
*
	`¨øy_bôlöe_powî
(
rowsb
,
cﬁsb
,
bôlöñígth
,1,1,
ˇche
);

3117 
	`°r˝y
(
g˙ame
[
gcc
-1],"icache");

3118 
powî
->
iˇche_£n£amp
 = 
ndwl
*
ndbl
*
	`£n£amp_powî
(
cﬁsb
);

3119 
powî
->
iˇche_èg¨øy
 = 
¡wl
*
¡bl
*(
	`sim∂e_¨øy_powî
(
åowsb
,
tcﬁsb
,1,1,
ˇche
));

3120 
	`°r˝y
(
g˙ame
[
gcc
-1],"il1_tag");

3121 
powî
->
iˇche_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
+gc[gcc-2]*Powerfactor;

3123 
powî
->
iˇche_powî
 =Öowî->
iˇche_decodî
 +Öowî->
iˇche_w‹dlöe
 +Öowî->
iˇche_bôlöe
 +Öowî->
iˇche_£n£amp
 +Öowî->
iˇche_èg¨øy
 +Öowî->
iˇche_gc
;

3127 
time_∑ømëîs
.
ˇche_size
 = 
ˇche_dl1
[0]->
n£ts
 * cache_dl1[0]->
bsize
 * cache_dl1[0]->
assoc
;

3128 
time_∑ømëîs
.
block_size
 = 
ˇche_dl1
[0]->
bsize
;

3129 
time_∑ømëîs
.
assocütivôy
 = 
ˇche_dl1
[0]->
assoc
;

3130 
time_∑ømëîs
.
numbî_of_£ts
 = 
ˇche_dl1
[0]->
n£ts
;

3138 
	`ˇlcuœã_time
(&
time_ªsu…
,&
time_∑ømëîs
);

3139 
	`ouçut_d©a
(&
time_ªsu…
,&
time_∑ømëîs
);

3141 
ndwl
=
time_ªsu…
.
be°_Ndwl
;

3142 
ndbl
=
time_ªsu…
.
be°_Ndbl
;

3143 
n•d
=
time_ªsu…
.
be°_N•d
;

3144 
¡wl
=
time_ªsu…
.
be°_Ntwl
;

3145 
¡bl
=
time_ªsu…
.
be°_Ntbl
;

3146 
¡•d
=
time_ªsu…
.
be°_Nt•d
;

3147 
c
 = 
time_∑ømëîs
.
ˇche_size
;

3148 
b
 = 
time_∑ømëîs
.
block_size
;

3149 
a
 = 
time_∑ømëîs
.
assocütivôy
;

3151 
ˇche
=1;

3153 
rowsb
 = 
c
/(8*
b
*
a
*
ndbl
*
n•d
);

3154 
cﬁsb
 = 8*
b
*
a
*
n•d
/
ndwl
;

3157 
ègsize
 = 
va_size
 - (()
	`logtwo
(
ˇche_dl1
[0]->
n£ts
Ë+ (Óogtwo(ˇche_dl1[0]->
bsize
));

3160 
åowsb
 = 
c
/(8*
b
*
a
*
¡bl
*
¡•d
);

3161 
tcﬁsb
 = 
a
 * (
ègsize
 + 1 + 6Ë* 
¡•d
/
¡wl
;

3163 if(
vîbo£
) {

3164 
	`Ârötf
(
°dîr
,"%d KB %d-way cachê(%d-byã block size):\n",
c
,
a
,
b
);

3165 
	`Ârötf
(
°dîr
,"ndw»=%d,Çdb»=%d,Ç•d =%d\n",
ndwl
,
ndbl
,
n•d
);

3166 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
ndwl
*
ndbl
,
rowsb
,
cﬁsb
);

3167 
	`Ârötf
(
°dîr
,"ègsizê=%d\n",
ègsize
);

3169 
	`Ârötf
(
°dîr
,"\¬tw»=%d,Çtb»=%d,Çt•d =%d\n",
¡wl
,
¡bl
,
¡•d
);

3170 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
¡wl
*
¡bl
,
åowsb
,
tcﬁsb
);

3173 
¥ede˛ígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3174 
w‹dlöñígth
 = 
cﬁsb
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

3175 
bôlöñígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3177 if(
vîbo£
)

3178 
	`Ârötf
(
°dîr
,"dcacheÖower stats\n");

3179 
powî
->
dˇche_decodî
 = (
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)*
ndwl
*
ndbl
*
	`¨øy_decodî_powî
(
rowsb
,
cﬁsb
,
¥ede˛ígth
,1,1,
ˇche
);

3180 
powî
->
dˇche_w‹dlöe
 = (
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)*
ndwl
*
ndbl
*
	`¨øy_w‹dlöe_powî
(
rowsb
,
cﬁsb
,
w‹dlöñígth
,1,1,
ˇche
);

3181 
powî
->
dˇche_bôlöe
 = (
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)*
ndwl
*
ndbl
*
	`¨øy_bôlöe_powî
(
rowsb
,
cﬁsb
,
bôlöñígth
,1,1,
ˇche
);

3182 
	`°r˝y
(
g˙ame
[
gcc
-1],"dcache");

3183 
powî
->
dˇche_£n£amp
 = (
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)*
ndwl
*
ndbl
*
	`£n£amp_powî
(
cﬁsb
);

3184 
powî
->
dˇche_èg¨øy
 = (
ªs_memp‹t
/
CLUSTERS
+
DIR_FIFO_PORTS
)*
¡wl
*
¡bl
*(
	`sim∂e_¨øy_powî
(
åowsb
,
tcﬁsb
,1,1,
ˇche
));

3185 
	`°r˝y
(
g˙ame
[
gcc
-1],"dl1_tag");

3186 
powî
->
dˇche_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
+gc[gcc-2]*Powerfactor;

3188 
powî
->
dˇche_powî
 =Öowî->
dˇche_decodî
 +Öowî->
dˇche_w‹dlöe
 +Öowî->
dˇche_bôlöe
 +Öowî->
dˇche_£n£amp
 +Öowî->
dˇche_èg¨øy
 +Öowî->
dˇche_gc
;

3190 
˛ockpowî
 = 
	`tŸÆ_˛ockpowî
(0.0030);

3191 
powî
->
˛ock_powî
 = 
˛ockpowî
;

3192 if(
vîbo£
) {

3193 
	`Ârötf
(
°dîr
,"úesu… bu†powî =%f\n",
powî
->
úesu…bus
);

3194 
	`Ârötf
(
°dîr
,"‰esu… bu†powî =%f\n",
powî
->
‰esu…bus
);

3195 
	`Ârötf
(
°dîr
,"globÆ clockÖowî =%f\n",
˛ockpowî
);

3198 
time_∑ømëîs
.
ˇche_size
 = 
ˇche_dl2
->
n£ts
/
CLUSTERS
 * cache_dl2->
bsize
 * cache_dl2->
assoc
;

3199 
time_∑ømëîs
.
block_size
 = 
ˇche_dl2
->
bsize
;

3200 
time_∑ømëîs
.
assocütivôy
 = 
ˇche_dl2
->
assoc
;

3201 
time_∑ømëîs
.
numbî_of_£ts
 = 
ˇche_dl2
->
n£ts
/
CLUSTERS
;

3203 
	`ˇlcuœã_time
(&
time_ªsu…
,&
time_∑ømëîs
);

3204 
	`ouçut_d©a
(&
time_ªsu…
,&
time_∑ømëîs
);

3206 
ndwl
=
time_ªsu…
.
be°_Ndwl
;

3207 
ndbl
=
time_ªsu…
.
be°_Ndbl
;

3208 
n•d
=
time_ªsu…
.
be°_N•d
;

3209 
¡wl
=
time_ªsu…
.
be°_Ntwl
;

3210 
¡bl
=
time_ªsu…
.
be°_Ntbl
;

3211 
¡•d
=
time_ªsu…
.
be°_Nt•d
;

3212 
c
 = 
time_∑ømëîs
.
ˇche_size
;

3213 
b
 = 
time_∑ømëîs
.
block_size
;

3214 
a
 = 
time_∑ømëîs
.
assocütivôy
;

3216 
rowsb
 = 
c
/(8*
b
*
a
*
ndbl
*
n•d
);

3217 
cﬁsb
 = 8*
b
*
a
*
n•d
/
ndwl
;

3219 
ègsize
 = 
va_size
 - (()
	`logtwo
(
ˇche_dl2
->
n£ts
/
CLUSTERS
Ë+ (Óogtwo(ˇche_dl2->
bsize
));

3220 
åowsb
 = 
c
/(8*
b
*
a
*
¡bl
*
¡•d
);

3221 
tcﬁsb
 = 
a
 * (
ègsize
 + 1 + 6Ë* 
¡•d
/
¡wl
;

3223 if(
vîbo£
) {

3224 
	`Ârötf
(
°dîr
,"%d KB %d-way cachê(%d-byã block size):\n",
c
,
a
,
b
);

3225 
	`Ârötf
(
°dîr
,"ndw»=%d,Çdb»=%d,Ç•d =%d\n",
ndwl
,
ndbl
,
n•d
);

3226 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
ndwl
*
ndbl
,
rowsb
,
cﬁsb
);

3227 
	`Ârötf
(
°dîr
,"ègsizê=%d\n",
ègsize
);

3230 
¥ede˛ígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3231 
w‹dlöñígth
 = 
cﬁsb
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

3232 
bôlöñígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

3234 if(
vîbo£
)

3235 
	`Ârötf
(
°dîr
,"dcache2Öower stats\n");

3236 
powî
->
dˇche2_decodî
 = 
	`¨øy_decodî_powî
(
rowsb
,
cﬁsb
,
¥ede˛ígth
,1,1,
ˇche
);

3237 
powî
->
dˇche2_w‹dlöe
 = 
	`¨øy_w‹dlöe_powî
(
rowsb
,
cﬁsb
,
w‹dlöñígth
,1,1,
ˇche
);

3238 
powî
->
dˇche2_bôlöe
 = 
	`¨øy_bôlöe_powî
(
rowsb
,
cﬁsb
,
bôlöñígth
,1,1,
ˇche
);

3239 
	`°r˝y
(
g˙ame
[
gcc
-1],"dcache2");

3240 
powî
->
dˇche2_£n£amp
 = 
	`£n£amp_powî
(
cﬁsb
);

3241 
powî
->
dˇche2_èg¨øy
 = 
	`sim∂e_¨øy_powî
(
åowsb
,
tcﬁsb
,1,1,
ˇche
);

3242 
	`°r˝y
(
g˙ame
[
gcc
-1],"dl2_tag");

3243 
powî
->
dˇche2_gc
 = 
gc
[
gcc
-1]*
PowîÁ˘‹
+gc[gcc-2]*Powerfactor;

3245 
	`Ârötf
(
°dîr
,"Dˇche2_g¯powî %f\n",
powî
->
dˇche2_gc
);

3246 
powî
->
dˇche2_powî
 =Öowî->
dˇche2_decodî
 +Öowî->
dˇche2_w‹dlöe
 +Öowî->
dˇche2_bôlöe
 +Öowî->
dˇche2_£n£amp
 +Öowî->
dˇche2_èg¨øy
 +Öowî->
dˇche2_gc
;

3247 #ifde‡
INPUT_OUTPUT_BUFFER


3248 
powî
->
öput_buf_powî
 = 
	`¨øy_w‹dlöe_powî
(
öput_buf„r_size
, 1, 64, 1, 1, 
ˇche
) +

3249 
	`¨øy_bôlöe_powî
(
öput_buf„r_size
, 1, 64, 1, 1, 
ˇche
Ë+ 
gc
[
gcc
-1]*
PowîÁ˘‹
;

3250 
	`°r˝y
(
g˙ame
[
gcc
-1],"input_buf");

3252 
powî
->
ouçut_buf_powî
 = 
	`¨øy_w‹dlöe_powî
(
ouçut_buf„r_size
, 1, 64, 1, 1, 
ˇche
) +

3253 
	`¨øy_bôlöe_powî
(
ouçut_buf„r_size
, 1, 64, 1, 1, 
ˇche
Ë+ 
gc
[
gcc
-1]*
PowîÁ˘‹
;

3254 
	`°r˝y
(
g˙ame
[
gcc
-1],"output_buf");

3257 
powî
->
øt_decodî
 *
¸ossovî_sˇlög
;

3258 
powî
->
øt_w‹dlöe
 *
¸ossovî_sˇlög
;

3259 
powî
->
øt_bôlöe
 *
¸ossovî_sˇlög
;

3260 
powî
->
øt_gc
 *
¸ossovî_sˇlög
;

3262 
powî
->
d˛_com∑ª
 *
¸ossovî_sˇlög
;

3263 
powî
->
d˛_≥ncode
 *
¸ossovî_sˇlög
;

3264 
powî
->
ö°_decodî_powî
 *
¸ossovî_sˇlög
;

3266 
powî
->
iqøm_powî
 *
¸ossovî_sˇlög
;

3267 
powî
->
fqøm_powî
 *
¸ossovî_sˇlög
;

3268 
powî
->
rob1_powî
 *
¸ossovî_sˇlög
;

3269 
powî
->
rob2_powî
 *
¸ossovî_sˇlög
;

3271 
powî
->
iwakeup_ègdrive
 *
¸ossovî_sˇlög
;

3272 
powî
->
iwakeup_ègm©ch
 *
¸ossovî_sˇlög
;

3273 
powî
->
iwakeup_‹m©ch
 *
¸ossovî_sˇlög
;

3274 
powî
->
iwakeup_gc
 *
¸ossovî_sˇlög
;

3275 
powî
->
fwakeup_ègdrive
 *
¸ossovî_sˇlög
;

3276 
powî
->
fwakeup_ègm©ch
 *
¸ossovî_sˇlög
;

3277 
powî
->
fwakeup_‹m©ch
 *
¸ossovî_sˇlög
;

3278 
powî
->
fwakeup_gc
 *
¸ossovî_sˇlög
;

3280 
powî
->
i£À˘i⁄
 *
¸ossovî_sˇlög
;

3281 
powî
->
f£À˘i⁄
 *
¸ossovî_sˇlög
;

3283 
powî
->
úegfûe_decodî
 *
¸ossovî_sˇlög
;

3284 
powî
->
úegfûe_w‹dlöe
 *
¸ossovî_sˇlög
;

3285 
powî
->
úegfûe_bôlöe
 *
¸ossovî_sˇlög
;

3286 
powî
->
úegfûe_£n£amp
 *
¸ossovî_sˇlög
;

3287 
powî
->
úegfûe_gc
 *
¸ossovî_sˇlög
;

3288 
powî
->
‰egfûe_decodî
 *
¸ossovî_sˇlög
;

3289 
powî
->
‰egfûe_w‹dlöe
 *
¸ossovî_sˇlög
;

3290 
powî
->
‰egfûe_bôlöe
 *
¸ossovî_sˇlög
;

3291 
powî
->
‰egfûe_£n£amp
 *
¸ossovî_sˇlög
;

3292 
powî
->
‰egfûe_gc
 *
¸ossovî_sˇlög
;

3302 
powî
->
lsq_wakeup_ègdrive
 *
¸ossovî_sˇlög
;

3303 
powî
->
lsq_wakeup_ègm©ch
 *
¸ossovî_sˇlög
;

3304 
powî
->
lsq_wakeup_gc
 *
¸ossovî_sˇlög
;

3306 
powî
->
lsq_rs_decodî
 *
¸ossovî_sˇlög
;

3307 
powî
->
lsq_rs_w‹dlöe
 *
¸ossovî_sˇlög
;

3308 
powî
->
lsq_rs_bôlöe
 *
¸ossovî_sˇlög
;

3309 
powî
->
lsq_rs_£n£amp
 *
¸ossovî_sˇlög
;

3310 
powî
->
lsq_rs_gc
 *
¸ossovî_sˇlög
;

3312 
powî
->
‰esu…bus
 *
¸ossovî_sˇlög
;

3314 
powî
->
btb
 *
¸ossovî_sˇlög
;

3315 
powî
->
btb_gc
 *
¸ossovî_sˇlög
;

3316 
powî
->
loˇl_¥edi˘
 *
¸ossovî_sˇlög
;

3317 
powî
->
loˇl_¥edi˘_gc
 *
¸ossovî_sˇlög
;

3318 
powî
->
globÆ_¥edi˘
 *
¸ossovî_sˇlög
;

3319 
powî
->
globÆ_¥edi˘_gc
 *
¸ossovî_sˇlög
;

3320 
powî
->
choo£r
 *
¸ossovî_sˇlög
;

3321 
powî
->
choo£r_gc
 *
¸ossovî_sˇlög
;

3322 
powî
->
øs
 *
¸ossovî_sˇlög
;

3323 
powî
->
øs_gc
 *
¸ossovî_sˇlög
;

3325 
powî
->
déb
 *
¸ossovî_sˇlög
;

3326 
powî
->
déb_gc
 *
¸ossovî_sˇlög
;

3328 
powî
->
ôlb
 *
¸ossovî_sˇlög
;

3329 
powî
->
ôlb_gc
 *
¸ossovî_sˇlög
;

3332 
powî
->
iˇche_decodî
 *
¸ossovî_sˇlög
;

3333 
powî
->
iˇche_w‹dlöe
*
¸ossovî_sˇlög
;

3334 
powî
->
iˇche_bôlöe
 *
¸ossovî_sˇlög
;

3335 
powî
->
iˇche_£n£amp
*
¸ossovî_sˇlög
;

3336 
powî
->
iˇche_èg¨øy
*
¸ossovî_sˇlög
;

3337 
powî
->
iˇche_gc
 *
¸ossovî_sˇlög
;

3339 
powî
->
iˇche_powî
 *
¸ossovî_sˇlög
;

3341 
powî
->
dˇche_decodî
 *
¸ossovî_sˇlög
;

3342 
powî
->
dˇche_w‹dlöe
 *
¸ossovî_sˇlög
;

3343 
powî
->
dˇche_bôlöe
 *
¸ossovî_sˇlög
;

3344 
powî
->
dˇche_£n£amp
 *
¸ossovî_sˇlög
;

3345 
powî
->
dˇche_èg¨øy
 *
¸ossovî_sˇlög
;

3346 
powî
->
dˇche_gc
 *
¸ossovî_sˇlög
;

3348 
powî
->
dˇche_powî
 *
¸ossovî_sˇlög
;

3350 
powî
->
˛ock_powî
 *
¸ossovî_sˇlög
;

3352 
powî
->
dˇche2_decodî
 *
¸ossovî_sˇlög
;

3353 
powî
->
dˇche2_w‹dlöe
 *
¸ossovî_sˇlög
;

3354 
powî
->
dˇche2_bôlöe
 *
¸ossovî_sˇlög
;

3355 
powî
->
dˇche2_£n£amp
 *
¸ossovî_sˇlög
;

3356 
powî
->
dˇche2_èg¨øy
 *
¸ossovî_sˇlög
;

3357 
powî
->
dˇche2_gc
 *
¸ossovî_sˇlög
;

3359 
powî
->
dˇche2_powî
 *
¸ossovî_sˇlög
;

3360 #ifde‡
INPUT_OUTPUT_BUFFER


3361 
powî
->
öput_buf_powî
 *
¸ossovî_sˇlög
;

3362 
powî
->
ouçut_buf_powî
 *
¸ossovî_sˇlög
;

3365 
powî
->
tŸÆ_powî
 =Öowî->
loˇl_¥edi˘
 +Öowî->
globÆ_¥edi˘
 +

3366 
powî
->
choo£r
 +Öowî->
btb
 +Öowî->
øs
 +

3367 
powî
->
øt_decodî
 +Öowî->
øt_w‹dlöe
 +

3368 
powî
->
øt_bôlöe
 +Öowî->
øt_£n£amp
 +

3369 
powî
->
d˛_com∑ª
 +Öowî->
d˛_≥ncode
 +

3370 
powî
->
ö°_decodî_powî
 +

3371 
powî
->
iqøm_powî
 +Öowî->
fqøm_powî
 +

3372 
powî
->
rob1_powî
 +Öowî->
rob2_powî
 +

3373 
powî
->
iwakeup_ègdrive
 +Öowî->
iwakeup_ègm©ch
 +

3374 
powî
->
fwakeup_ègdrive
 +Öowî->
fwakeup_ègm©ch
 +

3375 
powî
->
i£À˘i⁄
 +Öowî->
f£À˘i⁄
 +

3376 
powî
->
úegfûe_decodî
 +Öowî->
úegfûe_w‹dlöe
 +

3377 
powî
->
úegfûe_bôlöe
 +Öowî->
úegfûe_£n£amp
 +

3378 
powî
->
‰egfûe_decodî
 +Öowî->
‰egfûe_w‹dlöe
 +

3379 
powî
->
‰egfûe_bôlöe
 +Öowî->
‰egfûe_£n£amp
 +

3380 
powî
->
lsq_wakeup_ègdrive
 +Öowî->
lsq_wakeup_ègm©ch
 +

3381 
powî
->
lsq_rs_decodî
 +Öowî->
lsq_rs_w‹dlöe
 +

3382 
powî
->
lsq_rs_bôlöe
 +Öowî->
lsq_rs_£n£amp
 +

3383 
powî
->
úesu…bus
 +Öowî->
‰esu…bus
 +

3384 
powî
->
ülu1_powî
 +Öowî->
ülu2_powî
 +Öowî->
Álu1_powî
 +Öowî->
Álu2_powî
 +

3386 
powî
->
iˇche_powî
 +

3387 
powî
->
ôlb
 +

3388 
powî
->
dˇche_powî
 +

3389 
powî
->
déb
 +

3390 
powî
->
dˇche2_powî
 +

3391 
powî
->
loˇl_¥edi˘_gc
 +Öowî->
globÆ_¥edi˘_gc
 +Öowî->
choo£r_gc
 +

3392 
powî
->
btb_gc
 +Öowî->
øs_gc
 +

3393 
powî
->
øt_gc
 +Öowî->
iwakeup_gc
 +Öowî->
fwakeup_gc
 +

3394 
powî
->
úegfûe_gc
 +Öowî->
‰egfûe_gc
 +Öowî->
lsq_wakeup_gc
 +

3395 #ifde‡
INPUT_OUTPUT_BUFFER


3396 
powî
->
öput_buf_powî
 +Öowî->
ouçut_buf_powî
 +

3398 
powî
->
lsq_rs_gc
 +Öowî->
du∂iˇti⁄_powî
 +Öowî->
com∑ª_powî
;

3400 
powî
->
˛ock_powî
 *(1-
c⁄°™t_Á˘‹
);

3403 
powî
->
loˇl_¥edi˘
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3404 
powî
->
globÆ_¥edi˘
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3406 
powî
->
choo£r
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3407 
powî
->
btb
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3408 
powî
->
øs
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3410 
powî
->
øt_decodî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3411 
powî
->
øt_w‹dlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3413 
powî
->
øt_bôlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3414 
powî
->
øt_£n£amp
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3416 
powî
->
d˛_com∑ª
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3417 
powî
->
d˛_≥ncode
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3419 
powî
->
ö°_decodî_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3421 
powî
->
iqøm_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3422 
powî
->
fqøm_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3424 
powî
->
rob1_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3425 
powî
->
rob2_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3427 
powî
->
iwakeup_ègdrive
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3428 
powî
->
iwakeup_ègm©ch
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3430 
powî
->
fwakeup_ègdrive
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3431 
powî
->
fwakeup_ègm©ch
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3433 
powî
->
i£À˘i⁄
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3434 
powî
->
f£À˘i⁄
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3436 
powî
->
úegfûe_decodî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3437 
powî
->
úegfûe_w‹dlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3439 
powî
->
úegfûe_bôlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3440 
powî
->
úegfûe_£n£amp
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3442 
powî
->
‰egfûe_decodî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3443 
powî
->
‰egfûe_w‹dlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3445 
powî
->
‰egfûe_bôlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3446 
powî
->
‰egfûe_£n£amp
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3448 
powî
->
lsq_wakeup_ègdrive
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3449 
powî
->
lsq_wakeup_ègm©ch
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3451 
powî
->
lsq_rs_decodî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3452 
powî
->
lsq_rs_w‹dlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3454 
powî
->
lsq_rs_bôlöe
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3455 
powî
->
lsq_rs_£n£amp
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3457 
powî
->
úesu…bus
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3458 
powî
->
‰esu…bus
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3460 
powî
->
ülu1_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3461 
powî
->
ülu2_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3462 
powî
->
Álu1_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3463 
powî
->
Álu2_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3465 
powî
->
iˇche_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3467 
powî
->
ôlb
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3469 
powî
->
dˇche_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3471 
powî
->
déb
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3473 
powî
->
dˇche2_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3475 
powî
->
loˇl_¥edi˘_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3476 
powî
->
globÆ_¥edi˘_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3477 
powî
->
choo£r_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3479 
powî
->
btb_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3480 
powî
->
øs_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3482 
powî
->
øt_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3483 
powî
->
iwakeup_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3484 
powî
->
fwakeup_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3486 
powî
->
úegfûe_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3487 
powî
->
‰egfûe_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3488 
powî
->
lsq_wakeup_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3490 
powî
->
lsq_rs_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3491 
powî
->
ôlb_gc
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3492 
powî
->
déb_gc
*(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3493 #ifde‡
INPUT_OUTPUT_BUFFER


3494 
powî
->
öput_buf_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3495 
powî
->
ouçut_buf_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3499 
powî
->
du∂iˇti⁄_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3500 
powî
->
com∑ª_powî
 *(1 + (powî->
˛ock_powî
/powî->
tŸÆ_powî
));

3502 
powî
->
˛ock_powî
 =Öowî->˛ock_powî*
c⁄°™t_Á˘‹
/(1-constant_factor);

3503 
powî
->
˛ock1_powî
 =Öowî->
˛ock_powî
*0.2;

3504 
powî
->
˛ock2_powî
 =Öowî->
˛ock_powî
*0.5;

3505 
powî
->
˛ock3_powî
 =Öowî->
˛ock_powî
*0.3;

3508 
powî
->
tŸÆ_powî
 =Öowî->
loˇl_¥edi˘
 +Öowî->
globÆ_¥edi˘
 +

3509 
powî
->
choo£r
 +Öowî->
btb
 +Öowî->
øs
 +

3510 
powî
->
øt_decodî
 +Öowî->
øt_w‹dlöe
 +

3511 
powî
->
øt_bôlöe
 +Öowî->
øt_£n£amp
 +

3512 
powî
->
d˛_com∑ª
 +Öowî->
d˛_≥ncode
 +

3513 
powî
->
ö°_decodî_powî
 +

3514 
powî
->
iqøm_powî
 +Öowî->
fqøm_powî
 +

3515 
powî
->
rob1_powî
 +Öowî->
rob2_powî
 +

3516 
powî
->
iwakeup_ègdrive
 +Öowî->
iwakeup_ègm©ch
 +Öowî->
iwakeup_‹m©ch
 +

3517 
powî
->
fwakeup_ègdrive
 +Öowî->
fwakeup_ègm©ch
 +Öowî->
fwakeup_‹m©ch
 +

3518 
powî
->
i£À˘i⁄
 +Öowî->
f£À˘i⁄
 +

3519 
powî
->
úegfûe_decodî
 +Öowî->
úegfûe_w‹dlöe
 +

3520 
powî
->
úegfûe_bôlöe
 +Öowî->
úegfûe_£n£amp
 +

3521 
powî
->
‰egfûe_decodî
 +Öowî->
‰egfûe_w‹dlöe
 +

3522 
powî
->
‰egfûe_bôlöe
 +Öowî->
‰egfûe_£n£amp
 +

3523 
powî
->
lsq_wakeup_ègdrive
 +Öowî->
lsq_wakeup_ègm©ch
 +

3524 
powî
->
lsq_rs_decodî
 +Öowî->
lsq_rs_w‹dlöe
 +

3525 
powî
->
lsq_rs_bôlöe
 +Öowî->
lsq_rs_£n£amp
 +

3526 
powî
->
úesu…bus
 +Öowî->
‰esu…bus
 +

3527 
powî
->
ülu1_powî
 +Öowî->
ülu2_powî
 +Öowî->
Álu1_powî
 +Öowî->
Álu2_powî
 +

3529 
powî
->
˛ock1_powî
 +Öowî->
˛ock2_powî
 +Öowî->
˛ock3_powî
 +

3530 
powî
->
iˇche_powî
 +

3531 
powî
->
ôlb
 +

3532 
powî
->
dˇche_powî
 +

3533 
powî
->
déb
 +

3534 
powî
->
dˇche2_powî
 +

3535 
powî
->
loˇl_¥edi˘_gc
 +Öowî->
globÆ_¥edi˘_gc
 +Öowî->
choo£r_gc
 +

3536 
powî
->
btb_gc
 +Öowî->
øs_gc
 +

3537 
powî
->
øt_gc
 +Öowî->
iwakeup_gc
 +Öowî->
fwakeup_gc
 +

3538 
powî
->
úegfûe_gc
 +Öowî->
‰egfûe_gc
 +Öowî->
lsq_wakeup_gc
 +

3539 #ifde‡
INPUT_OUTPUT_BUFFER


3540 
powî
->
öput_buf_powî
 +Öowî->
ouçut_buf_powî
 +

3542 
powî
->
lsq_rs_gc
 +Öowî->
du∂iˇti⁄_powî
 +Öowî->
com∑ª_powî
;

3544 
powî
->
b¥ed_powî
 =Öowî->
btb
 +Öowî->
loˇl_¥edi˘
 +Öowî->
globÆ_¥edi˘
 +Öowî->
choo£r
 +Öowî->
øs
 +

3545 
powî
->
btb_gc
 +Öowî->
loˇl_¥edi˘_gc
 +Öowî->
globÆ_¥edi˘_gc
 +Öowî->
choo£r_gc
 +Öowî->
øs_gc
;

3547 
	`Ârötf
(
°dîr
,"xyz B¥ed\t%f\n",
powî
->
b¥ed_powî
);

3549 
powî
->
øt_powî
 =Öowî->
øt_decodî
 +

3550 
powî
->
øt_w‹dlöe
 +Öowî->
øt_bôlöe
 +Öowî->
øt_£n£amp
 +Öowî->
øt_gc
;

3552 
powî
->
d˛_powî
 =Öowî->
d˛_com∑ª
 +Öowî->
d˛_≥ncode
;

3554 
powî
->
ª«me_powî
 =Öowî->
øt_powî
 +

3555 
powî
->
d˛_powî
 +

3556 
powî
->
ö°_decodî_powî
;

3558 if(
ruu_ö‹dî_issue
)

3560 
powî
->
øt_powî
 = 0;

3561 
powî
->
d˛_powî
 = 0;

3562 
powî
->
ö°_decodî_powî
 = 0;

3563 
powî
->
rob2_powî
 = 0;

3564 
powî
->
rob1_powî
 = 0;

3567 
	`Ârötf
(
°dîr
,"xyz Ríame\t%f\n",
powî
->
ª«me_powî
);

3568 
	`Ârötf
(
°dîr
,"xyz ROB wakeup\t%f\n",
powî
->
rob1_powî
);

3569 
	`Ârötf
(
°dîr
,"xyz ROBÑam\t%f\n",
powî
->
rob2_powî
);

3570 
	`Ârötf
(
°dîr
,"xyz IQÑam\t%f\n",
powî
->
iqøm_powî
);

3571 
	`Ârötf
(
°dîr
,"xyz FQÑam\t%f\n",
powî
->
fqøm_powî
);

3573 
powî
->
iwakeup_powî
 =Öowî->
iwakeup_ègdrive
 +Öowî->
iwakeup_ègm©ch
 +

3574 
powî
->
iwakeup_‹m©ch
 +Öowî->
iwakeup_gc
;

3575 
powî
->
fwakeup_powî
 =Öowî->
fwakeup_ègdrive
 +Öowî->
fwakeup_ègm©ch
 +

3576 
powî
->
fwakeup_‹m©ch
 +Öowî->
fwakeup_gc
;

3577 if(
ruu_ö‹dî_issue
)

3579 
powî
->
iwakeup_ègdrive
 = 0;

3580 
powî
->
iwakeup_ègm©ch
 = 0;

3581 
powî
->
iwakeup_‹m©ch
 = 0;

3582 
powî
->
iwakeup_gc
 = 0;

3583 
powî
->
fwakeup_ègdrive
 = 0;

3584 
powî
->
fwakeup_ègm©ch
 = 0;

3585 
powî
->
fwakeup_‹m©ch
 = 0;

3586 
powî
->
fwakeup_gc
 = 0;

3587 
powî
->
i£À˘i⁄
 = 0;

3588 
powî
->
f£À˘i⁄
 = 0;

3591 
	`Ârötf
(
°dîr
,"xyz iwakeup\t%f\n",
powî
->
iwakeup_powî
);

3592 
	`Ârötf
(
°dîr
,"xyz fwakeup\t%f\n",
powî
->
fwakeup_powî
);

3593 
	`Ârötf
(
°dîr
,"xyz i£À˘\t%f\n",
powî
->
i£À˘i⁄
);

3594 
	`Ârötf
(
°dîr
,"xyz f£À˘\t%f\n",
powî
->
f£À˘i⁄
);

3596 
powî
->
lsq_rs_powî
 =Öowî->
lsq_rs_decodî
 +

3597 
powî
->
lsq_rs_w‹dlöe
 +Öowî->
lsq_rs_bôlöe
 +

3598 
powî
->
lsq_rs_£n£amp
 +Öowî->
lsq_rs_gc
;

3600 
powî
->
lsq_rs_powî_nobô
 =Öowî->
lsq_rs_decodî
 +

3601 
powî
->
lsq_rs_w‹dlöe
 +Öowî->
lsq_rs_£n£amp
 +Öowî->
lsq_rs_gc
;

3603 
powî
->
lsq_wakeup_powî
 =Öowî->
lsq_wakeup_ègdrive
 +Öowî->
lsq_wakeup_ègm©ch
 +Öowî->
lsq_wakeup_gc
;

3605 
powî
->
lsq_powî
 =Öowî->
lsq_wakeup_powî
 +Öowî->
lsq_rs_powî
;

3607 
	`Ârötf
(
°dîr
,"xyzÜsq \t%f\n",
powî
->
lsq_powî
);

3610 
powî
->
úegfûe_powî
 =Öowî->
úegfûe_decodî
 +

3611 
powî
->
úegfûe_w‹dlöe
 +Öowî->
úegfûe_bôlöe
 +

3612 
powî
->
úegfûe_£n£amp
 +Öowî->
úegfûe_gc
;

3614 
powî
->
úegfûe_powî_nobô
 =Öowî->
úegfûe_decodî
 +

3615 
powî
->
úegfûe_w‹dlöe
 +Öowî->
úegfûe_£n£amp
 +Öowî->
úegfûe_gc
;

3617 
powî
->
‰egfûe_powî
 =Öowî->
‰egfûe_decodî
 +

3618 
powî
->
‰egfûe_w‹dlöe
 +Öowî->
‰egfûe_bôlöe
 +

3619 
powî
->
‰egfûe_£n£amp
 +Öowî->
‰egfûe_gc
;

3621 
powî
->
‰egfûe_powî_nobô
 =Öowî->
‰egfûe_decodî
 +

3622 
powî
->
‰egfûe_w‹dlöe
 +Öowî->
‰egfûe_£n£amp
 +Öowî->
‰egfûe_gc
;

3624 
	`Ârötf
(
°dîr
,"xyz iªgf\t%f\n",
powî
->
úegfûe_powî
);

3625 
	`Ârötf
(
°dîr
,"xyz fªgf\t%f\n",
powî
->
‰egfûe_powî
);

3626 
	`Ârötf
(
°dîr
,"xyz iÆu1\t%f\nxyz iÆu2\t%f\nxyz fÆu1\t%f\nxyz fÆu2\t%f\n",
powî
->
ülu1_powî
,Öowî->
ülu2_powî
,Öowî->
Álu1_powî
,Öowî->
Álu2_powî
);

3627 
	`Ârötf
(
°dîr
,"xyz iªsu…b\t%f\n",
powî
->
úesu…bus
);

3628 
	`Ârötf
(
°dîr
,"xyz fªsu…b\t%f\n",
powî
->
‰esu…bus
);

3629 
	`Ârötf
(
°dîr
,"xyz iéb\t%f\n",
powî
->
ôlb
);

3630 
	`Ârötf
(
°dîr
,"xyz déb\t%f\n",
powî
->
déb
);

3631 
	`Ârötf
(
°dîr
,"xyz iˇche\t%f\n",
powî
->
iˇche_powî
);

3632 
	`Ârötf
(
°dîr
,"xyz dˇche\t%f\n",
powî
->
dˇche_powî
);

3633 
	`Ârötf
(
°dîr
,"xyz clock\t%f\n",
powî
->
˛ock_powî
);

3634 
	`Ârötf
(
°dîr
,"xyz dˇche2\t%f\n",
powî
->
dˇche2_powî
);

3635 
	`Ârötf
(
°dîr
,"xyz clock-‰\t%f\n",
powî
->
˛ock1_powî
);

3636 
	`Ârötf
(
°dîr
,"xyz clock-öt\t%f\n",
powî
->
˛ock2_powî
);

3637 
	`Ârötf
(
°dîr
,"xyz clock-Â\t%f\n",
powî
->
˛ock3_powî
);

3639 
	`Ârötf
(
°dîr
,"xyz du∂iˇti⁄\t%f\n",
powî
->
du∂iˇti⁄_powî
);

3640 
	`Ârötf
(
°dîr
,"xyz com∑ª\t%f\n",
powî
->
com∑ª_powî
);

3641 #ifde‡
INPUT_OUTPUT_BUFFER


3642 
	`Ârötf
(
°dîr
,"xyz i≈uàbuf„∏powî\t%f\n", 
powî
->
öput_buf_powî
);

3643 
	`Ârötf
(
°dîr
,"xyz ouçuàbuf„∏powî\t%f\n", 
powî
->
ouçut_buf_powî
);

3646 
	`Ârötf
(
°dîr
,"xyzÅŸÆ\t%f\n",
powî
->
tŸÆ_powî
);

3648 
	`dump_powî_°©s
(
powî
);

3650 
	}
}

3652 
	$powî_vÆue
(
FILE
 *
Â
){

3654 
	`Ârötf
(
Â
, "%.2f\t%.2f\t%.2f\t%.2f\t%.2f\t", 
TOTAL_powî_cc3
[0],TOTAL_powî_cc3[1],TOTAL_powî_cc3[2],TOTAL_powî_cc3[3], (
DCACHE2_powî_cc3
[0]+DCACHE2_power_cc3[1]+DCACHE2_power_cc3[2]+DCACHE2_power_cc3[3]));

3655 
	}
}

	@power.h

54 
	~"Êp.h
"

55 
	~"°©s.h
"

58 
	~"smt.h
"

60 #ifde‡
OPTICAL_INTERCONNECT


73 
	#LONG
 1

	)

74 
	#SHORT
 2

	)

76 
	#OUTPUTTYPE
 
LONG


	)

80 
	#DYNAMIC_AF


	)

86 
	#ADDRESS_BITS
 64

	)

87 
	#BITOUT
 64

	)

91 
	#MAXN
 8

	)

92 
	#MAXSUBARRAYS
 8

	)

93 
	#MAXSPD
 8

	)

96 
	#COMMIT_COMPARE_BITS
 64

	)

99 
	#DISPATCH_DUPED_BITS
 64

	)

102 
	#exp10_nick
(
__x
Ë(
	`exp
(__x*
	`log
(10)))

	)

111 
	#TRUE
 1

	)

112 
	#FALSE
 0

	)

113 
	#OK
 1

	)

114 
	#ERROR
 0

	)

115 
	#BIGNUM
 1e30

	)

116 
	#DIVIDE
(
a
,
b
Ë((b)==0)? 0:◊)/(b)

	)

117 #i‚de‡
MAX


118 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

120 #i‚de‡
MIN


121 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

126 
	#RISE
 1

	)

127 
	#FALL
 0

	)

128 
	#NCH
 1

	)

129 
	#PCH
 0

	)

133 
	#Vdd_nosˇÀ
 1.0

	)

134 
	#Vdd_CHK_nosˇÀ
 0.6

	)

135 
	#Vt_LEAD_nosˇÀ
 0.1453841578

	)

136 
	#Vt_CHK_nosˇÀ
 0.1453841578

	)

145 
	#FUDGEFACTOR
 1

	)

154 
	#GEN_POWER_FACTOR
 1.31

	)

156 
	#TECH_POINT045


	)

158 #i‡
deföed
(
TECH_POINT045
)

159 
	#CSCALE
 (470.7Ë

	)

160 
	#RSCALE
 (437.0Ë

	)

161 
	#LSCALE
 0.05625

	)

162 
	#Leff
 0.018

	)

163 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

164 
	#VSCALE
 0.2

	)

165 
	#VTSCALE
 0.13761

	)

166 
	#SSCALE
 0.764

	)

167 
	#GEN_POWER_SCALE
 (1/(
GEN_POWER_FACTOR
*GEN_POWER_FACTOR*GEN_POWER_FACTOR))

	)

169 
	#VTSCALE_LEAD
 0.13761

	)

170 
	#VTSCALE_CHK
 0.13761

	)

172 
	#L28
 10

	)

173 
	#L33
 0.1

	)

174 
	#L35
 58

	)

175 
	#L36
 0.6

	)

176 
	#L37
 1900

	)

180 
	#L33_LEAD
 
L37
*
	`exp10_nick
(-1*(
Vt_LEAD_nosˇÀ
*
VTSCALE_LEAD
*1000/(
L35
*
L36
))Ë

	)

181 
	#L33_CHK
 
L37
*
	`exp10_nick
(-1*(
Vt_CHK_nosˇÀ
*
VTSCALE_CHK
*1000/(
L35
*
L36
)))

	)

188 
	#NMOSSTATICPOWER_LEAD
 
Vdd_nosˇÀ
*
VSCALE
*0.0736*1e-6

	)

189 
	#NMOSSTATICPOWER_CHK
 
Vdd_CHK_nosˇÀ
*
VSCALE
*0.0736*1e-6

	)

190 
	#SRAMDENSITY
 (1718*1e6/1e8Ë

	)

191 
	#LOGICDENSITY
 (309*1e6/1e8Ë

	)

192 
	#ITRS_VT
 0.0257

	)

193 #ñi‡
deföed
(
TECH_POINT10
)

194 
	#CSCALE
 (84.2172Ë

	)

196 
	#RSCALE
 (80.0000Ë

	)

197 
	#LSCALE
 0.1250

	)

198 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

199 
	#VSCALE
 0.38

	)

200 
	#VTSCALE_LEAD
 0.49

	)

201 
	#VTSCALE_CHK
 0.49

	)

202 
	#SSCALE
 0.80

	)

203 
	#GEN_POWER_SCALE
 (1/
GEN_POWER_FACTOR
)

	)

204 #ñi‡
deföed
(
TECH_POINT18
)

205 
	#CSCALE
 (19.7172Ë

	)

206 
	#RSCALE
 (20.0000Ë

	)

207 
	#LSCALE
 0.2250

	)

208 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

209 
	#VSCALE
 0.4

	)

210 
	#VTSCALE_LEAD
 0.5046

	)

211 
	#VTSCALE_CHK
 0.5046

	)

212 
	#SSCALE
 0.85

	)

213 
	#GEN_POWER_SCALE
 1

	)

214 #ñi‡
deföed
(
TECH_POINT25
)

215 
	#CSCALE
 (10.2197Ë

	)

216 
	#RSCALE
 (10.2571Ë

	)

217 
	#LSCALE
 0.3571

	)

218 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

219 
	#VSCALE
 0.45

	)

220 
	#VTSCALE_LEAD
 0.5596

	)

221 
	#VTSCALE_CHK
 0.5596

	)

222 
	#SSCALE
 0.90

	)

223 
	#GEN_POWER_SCALE
 
GEN_POWER_FACTOR


	)

224 #ñi‡
deföed
(
TECH_POINT35a
)

225 
	#CSCALE
 (5.2197Ë

	)

226 
	#RSCALE
 (5.2571Ë

	)

227 
	#LSCALE
 0.4375

	)

228 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

229 
	#VSCALE
 0.5

	)

230 
	#VTSCALE_LEAD
 0.6147

	)

231 
	#VTSCALE_CHK
 0.6147

	)

232 
	#SSCALE
 0.95

	)

233 
	#GEN_POWER_SCALE
 (
GEN_POWER_FACTOR
*GEN_POWER_FACTOR)

	)

234 #ñi‡
deföed
(
TECH_POINT35
)

235 
	#CSCALE
 (5.2197Ë

	)

236 
	#RSCALE
 (5.2571Ë

	)

237 
	#LSCALE
 0.4375

	)

238 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

239 
	#VSCALE
 0.5

	)

240 
	#VTSCALE_LEAD
 0.6147

	)

241 
	#VTSCALE_CHK
 0.6147

	)

242 
	#SSCALE
 0.95

	)

243 
	#GEN_POWER_SCALE
 (
GEN_POWER_FACTOR
*GEN_POWER_FACTOR)

	)

244 #ñi‡
deföed
(
TECH_POINT40
)

245 
	#CSCALE
 1.0

	)

246 
	#RSCALE
 1.0

	)

247 
	#LSCALE
 0.5

	)

248 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

249 
	#VSCALE
 1.0

	)

250 
	#VTSCALE_LEAD
 1.0

	)

251 
	#VTSCALE_CHK
 1.0

	)

252 
	#SSCALE
 1.0

	)

253 
	#GEN_POWER_SCALE
 (
GEN_POWER_FACTOR
*GEN_POWER_FACTOR*GEN_POWER_FACTOR)

	)

256 
	#CSCALE
 1.0

	)

257 
	#RSCALE
 1.0

	)

258 
	#LSCALE
 1.0

	)

259 
	#ASCALE
 (
LSCALE
*LSCALEË

	)

260 
	#VSCALE
 1.0

	)

261 
	#VTSCALE_LEAD
 1.0

	)

262 
	#VTSCALE_CHK
 1.0

	)

263 
	#SSCALE
 1.0

	)

264 
	#GEN_POWER_SCALE
 (
GEN_POWER_FACTOR
*GEN_POWER_FACTOR*GEN_POWER_FACTOR*GEN_POWER_FACTOR)

	)

270 
	#¸ossovî_sˇlög
 1.2;

	)

276 
	#tu∫off_Á˘‹
 0.1

	)

294 #i‚de‡
NMOSSTATICPOWER_LEAD


295 
	#NMOSSTATICPOWER_LEAD
 0

	)

298 
	#KBOLTZMANN
 1.381E-023

	)

299 
	#ELEMENTARY_CHARGE_Q
 1.602E-019

	)

300 
	#ITRS_TEMP
 (
ITRS_VT
*
ELEMENTARY_CHARGE_Q
/
KBOLTZMANN
Ë

	)

302 
	#PMOSSTATICPOWER_LEAD
 (2*(
NMOSSTATICPOWER_LEAD
)Ë

	)

303 
	#TIMEPMOSLEAK
 0.5

	)

304 
	#TIMENMOSLEAK
 0.5

	)

305 
	#CMOSSTATICPOWER_LEAD
 ((
TIMENMOSLEAK
*(
NMOSSTATICPOWER_LEAD
)+
TIMEPMOSLEAK
*(
PMOSSTATICPOWER_LEAD
))/2)

	)

308 
	#SRAMGATEWL
 3*1

	)

309 
	#LOGICGATEWL
 3*1.2

	)

312 
	#SRAMPOWERPERUM2_LEAD
 ( (
CMOSSTATICPOWER_LEAD
Ë* (
SRAMGATEWL
Ë*(0.8*
LSCALE
Ë* (
SRAMDENSITY
Ë)

	)

313 
	#SRAMPOWERPERUM2PERTEMP_LEAD
 (
SRAMPOWERPERUM2_LEAD
/(
ITRS_TEMP
*ITRS_TEMP))

	)

316 
	#LOGICPOWERPERUM2_LEAD
 ( (
CMOSSTATICPOWER_LEAD
Ë* (
LOGICGATEWL
)*(0.8*
LSCALE
Ë* (
LOGICDENSITY
Ë)

	)

317 
	#LOGICPOWERPERUM2PERTEMP_LEAD
 (
LOGICPOWERPERUM2_LEAD
/(
ITRS_TEMP
*ITRS_TEMP))

	)

319 
	#LEAKAGEPOWERFROMTEMP
(
Á˘‹
,
t
Ë(Á˘‹*—)*—))

	)

324 #i‚de‡
NMOSSTATICPOWER_CHK


325 
	#NMOSSTATICPOWER_CHK
 0

	)

328 
	#PMOSSTATICPOWER_CHK
 (2*(
NMOSSTATICPOWER_CHK
))

	)

329 
	#CMOSSTATICPOWER_CHK
 ((
TIMENMOSLEAK
*(
NMOSSTATICPOWER_CHK
)+
TIMEPMOSLEAK
*(
PMOSSTATICPOWER_CHK
))/2)

	)

331 
	#SRAMPOWERPERUM2_CHK
 ( (
CMOSSTATICPOWER_CHK
Ë* (
SRAMGATEWL
Ë*(0.8*
LSCALE
Ë* (
SRAMDENSITY
Ë)

	)

332 
	#SRAMPOWERPERUM2PERTEMP_CHK
 (
SRAMPOWERPERUM2_CHK
/(
ITRS_TEMP
*ITRS_TEMP))

	)

334 
	#LOGICPOWERPERUM2_CHK
 ( (
CMOSSTATICPOWER_CHK
Ë* (
LOGICGATEWL
)*(0.8*
LSCALE
Ë* (
LOGICDENSITY
Ë)

	)

335 
	#LOGICPOWERPERUM2PERTEMP_CHK
 (
LOGICPOWERPERUM2_CHK
/(
ITRS_TEMP
*ITRS_TEMP))

	)

348 
	#Cw‹dmëÆ
 (1.8e-15 * (
CSCALE
 * 
ASCALE
))

	)

351 
	#CbômëÆ
 (4.4e-15 * (
CSCALE
 * 
ASCALE
))

	)

354 
	#CmëÆ
 
CbômëÆ
/16

	)

356 
	#CM3mëÆ
 
CbômëÆ
/16

	)

357 
	#CM2mëÆ
 
CbômëÆ
/16

	)

364 
	#CndifÁªa
 0.137e-15

	)

367 
	#CpdifÁªa
 0.343e-15

	)

370 
	#Cndiffside
 0.275e-15

	)

373 
	#Cpdiffside
 0.275e-15

	)

376 
	#CndiffovÕ
 0.138e-15

	)

379 
	#CpdiffovÕ
 0.138e-15

	)

382 
	#CnoxideovÕ
 0.263e-15

	)

385 
	#CpoxideovÕ
 0.338e-15

	)

388 #i‚de‡
Leff


389 
	#Leff
 (0.8 * 
LSCALE
)

	)

393 
	#Cg©e
 1.95e-15

	)

396 
	#Cg©ïass
 1.45e-15

	)

403 
	#Cpﬁywúe
 (0.25e-15 * 
CSCALE
 * 
LSCALE
)

	)

406 
	#Rnch™√l°©ic
 (25800 * 
LSCALE
)

	)

409 
	#Rpch™√l°©ic
 (61200 * 
LSCALE
)

	)

411 
	#Rnch™√l⁄
 (9723 * 
LSCALE
)

	)

413 
	#Rpch™√l⁄
 (22400 * 
LSCALE
)

	)

416 
	#RbômëÆ
 (0.320 * (
RSCALE
 * 
ASCALE
))

	)

419 
	#Rw‹dmëÆ
 (0.080 * (
RSCALE
 * 
ASCALE
))

	)

421 
	#Vdd
 (5 * 
VSCALE
Ë

	)

422 
	#Vdd_CHK
 (5 * 
VSCALE
Ë

	)

426 
	#Mhz
 
ba£_¥oc_‰eq


	)

430 
	#kri£
 (0.4e-9 * 
LSCALE
)

	)

431 
	#t£n£d©a
 (5.8e-10 * 
LSCALE
)

	)

432 
	#t£n£èg
 (2.6e-10 * 
LSCALE
)

	)

433 
	#tÁŒd©a
 (7e-10 * 
LSCALE
)

	)

434 
	#tÁŒèg
 (7e-10 * 
LSCALE
)

	)

435 
	#Vbô¥e
 (3.3 * 
SSCALE
)

	)

436 
	#Vt_Àad
 (1.09 * 
VTSCALE_LEAD
)

	)

437 
	#Vt_chk
 (1.09 * 
VTSCALE_CHK
)

	)

438 
	#Vbô£n£
 (0.10 * 
SSCALE
)

	)

442 
	#Sí£PowîÁ˘‹3
 (
Mhz
)*(
Vbô£n£
)*(Vbô£n£)

	)

443 
	#Sí£PowîÁ˘‹2
 (
Mhz
)*(
Vbô¥e
-
Vbô£n£
)*(Vbô¥e-Vbô£n£)

	)

446 
	#AF
 .5

	)

447 
	#POPCOUNT_AF
 (23.9/64.0)

	)

452 
	#VSINV
 0.456

	)

453 
	#VTHINV100x60
 0.438

	)

454 
	#VTHNAND60x90
 0.561

	)

455 
	#VTHNOR12x4x1
 0.503

	)

456 
	#VTHNOR12x4x2
 0.452

	)

457 
	#VTHNOR12x4x3
 0.417

	)

458 
	#VTHNOR12x4x4
 0.390

	)

459 
	#VTHOUTDRINV
 0.437

	)

460 
	#VTHOUTDRNOR
 0.431

	)

461 
	#VTHOUTDRNAND
 0.441

	)

462 
	#VTHOUTDRIVE
 0.425

	)

463 
	#VTHCOMPINV
 0.437

	)

464 
	#VTHMUXDRV1
 0.437

	)

465 
	#VTHMUXDRV2
 0.486

	)

466 
	#VTHMUXDRV3
 0.437

	)

467 
	#VTHEVALINV
 0.267

	)

468 
	#VTHSENSEEXTDRV
 0.437

	)

471 
	#Wdecdrivï
 (57.0 * 
LSCALE
)

	)

472 
	#Wdecdriví
 (40.0 * 
LSCALE
)

	)

473 
	#Wdec3to8n
 (14.4 * 
LSCALE
)

	)

474 
	#Wdec3to8p
 (14.4 * 
LSCALE
)

	)

475 
	#WdecNORn
 (5.4 * 
LSCALE
)

	)

476 
	#WdecNORp
 (30.5 * 
LSCALE
)

	)

477 
	#Wdecövn
 (5.0 * 
LSCALE
)

	)

478 
	#Wdecövp
 (10.0 * 
LSCALE
)

	)

480 
	#Ww‹ddrivemax
 (100.0 * 
LSCALE
)

	)

481 
	#Wmem˚Œa
 (2.4 * 
LSCALE
)

	)

482 
	#Wmem˚Œr
 (4.0 * 
LSCALE
)

	)

483 
	#Wmem˚Œw
 (2.1 * 
LSCALE
)

	)

484 
	#Wmem˚ŒbsˇÀ
 2

	)

485 
	#Wbô¥ìqu
 (10.0 * 
LSCALE
)

	)

487 
	#Wbômuxn
 (10.0 * 
LSCALE
)

	)

488 
	#W£n£Q1to4
 (4.0 * 
LSCALE
)

	)

489 
	#Wcompövp1
 (10.0 * 
LSCALE
)

	)

490 
	#Wcompövn1
 (6.0 * 
LSCALE
)

	)

491 
	#Wcompövp2
 (20.0 * 
LSCALE
)

	)

492 
	#Wcompövn2
 (12.0 * 
LSCALE
)

	)

493 
	#Wcompövp3
 (40.0 * 
LSCALE
)

	)

494 
	#Wcompövn3
 (24.0 * 
LSCALE
)

	)

495 
	#WevÆövp
 (20.0 * 
LSCALE
)

	)

496 
	#WevÆövn
 (80.0 * 
LSCALE
)

	)

498 
	#Wcom≤
 (20.0 * 
LSCALE
)

	)

499 
	#Wcomµ
 (30.0 * 
LSCALE
)

	)

500 
	#Wcomµªequ
 (40.0 * 
LSCALE
)

	)

501 
	#Wmuxdrv12n
 (30.0 * 
LSCALE
)

	)

502 
	#Wmuxdrv12p
 (50.0 * 
LSCALE
)

	)

503 
	#WmuxdrvNANDn
 (20.0 * 
LSCALE
)

	)

504 
	#WmuxdrvNANDp
 (80.0 * 
LSCALE
)

	)

505 
	#WmuxdrvNORn
 (60.0 * 
LSCALE
)

	)

506 
	#WmuxdrvNORp
 (80.0 * 
LSCALE
)

	)

507 
	#Wmuxdrv3n
 (200.0 * 
LSCALE
)

	)

508 
	#Wmuxdrv3p
 (480.0 * 
LSCALE
)

	)

509 
	#Woutdrv£ 
 (12.0 * 
LSCALE
)

	)

510 
	#Woutdrv£Õ
 (20.0 * 
LSCALE
)

	)

511 
	#Woutdrv«ndn
 (24.0 * 
LSCALE
)

	)

512 
	#Woutdrv«ndp
 (10.0 * 
LSCALE
)

	)

513 
	#Woutdrvn‹n
 (6.0 * 
LSCALE
)

	)

514 
	#Woutdrvn‹p
 (40.0 * 
LSCALE
)

	)

515 
	#Woutdrivîn
 (48.0 * 
LSCALE
)

	)

516 
	#Woutdrivîp
 (80.0 * 
LSCALE
)

	)

518 
	#Wcomp˚Œpd2
 (2.4 * 
LSCALE
)

	)

519 
	#Wcompdrivîn
 (400.0 * 
LSCALE
)

	)

520 
	#Wcompdrivîp
 (800.0 * 
LSCALE
)

	)

521 
	#Wcom∑ªn2
 (40.0 * 
LSCALE
)

	)

522 
	#Wcom∑ªn1
 (20.0 * 
LSCALE
)

	)

523 
	#Wm©chpchg
 (10.0 * 
LSCALE
)

	)

524 
	#Wm©chövn
 (10.0 * 
LSCALE
)

	)

525 
	#Wm©chövp
 (20.0 * 
LSCALE
)

	)

526 
	#Wm©ch«ndn
 (20.0 * 
LSCALE
)

	)

527 
	#Wm©ch«ndp
 (10.0 * 
LSCALE
)

	)

528 
	#Wm©chn‹n
 (20.0 * 
LSCALE
)

	)

529 
	#Wm©chn‹p
 (10.0 * 
LSCALE
)

	)

531 
	#WSñORn
 (10.0 * 
LSCALE
)

	)

532 
	#WSñOR¥equ
 (40.0 * 
LSCALE
)

	)

533 
	#WSñPn
 (10.0 * 
LSCALE
)

	)

534 
	#WSñPp
 (15.0 * 
LSCALE
)

	)

535 
	#WSñE¬
 (5.0 * 
LSCALE
)

	)

536 
	#WSñE≈
 (10.0 * 
LSCALE
)

	)

538 
	#W£n£extdrv1p
 (40.0*
LSCALE
)

	)

539 
	#W£n£extdrv1n
 (24.0*
LSCALE
)

	)

540 
	#W£n£extdrv2p
 (200.0*
LSCALE
)

	)

541 
	#W£n£extdrv2n
 (120.0*
LSCALE
)

	)

544 
	#Wmösizí
 (2.4*
LSCALE
Ë

	)

545 
	#Wmösizï
 (4.8*
LSCALE
Ë

	)

546 
	#W2to1muxn
 (10.0*
LSCALE
Ë

	)

547 
	#W2to1muxp
 (20.0*
LSCALE
Ë

	)

548 
	#WDFFn
 (2.0*
LSCALE
Ë

	)

549 
	#WDFFp
 (5.6*
LSCALE
)

	)

552 
	#BôWidth
 (16.0 * 
LSCALE
)

	)

555 
	#BôHeight
 (16.0 * 
LSCALE
)

	)

557 
	#Cout
 (0.5e-12 * 
LSCALE
)

	)

560 
	#R©CñlHeight
 (40.0 * 
LSCALE
)

	)

561 
	#R©CñlWidth
 (70.0 * 
LSCALE
)

	)

562 
	#R©Shi·RegWidth
 (120.0 * 
LSCALE
)

	)

563 
	#R©NumShi·
 4

	)

564 
	#BôlöeS∑cög
 (6.0 * 
LSCALE
)

	)

565 
	#W‹dlöeS∑cög
 (6.0 * 
LSCALE
)

	)

567 
	#RegCñlHeight
 (16.0 * 
LSCALE
)

	)

568 
	#RegCñlWidth
 (8.0 * 
LSCALE
)

	)

570 
	#CamCñlHeight
 (40.0 * 
LSCALE
)

	)

571 
	#CamCñlWidth
 (25.0 * 
LSCALE
)

	)

572 
	#M©chlöeS∑cög
 (6.0 * 
LSCALE
)

	)

573 
	#TaglöeS∑cög
 (6.0 * 
LSCALE
)

	)

579 
	#NORMALIZE_SCALE
 (1.0/(733.0e6*1.45*1.45))

	)

604 
	mãch
;

605 
	miw
;

606 
	mwösize
;

607 
	mnvªg
;

608 
	m≈ªg
;

609 
	mnvªg_width
;

610 
	m≈ªg_width
;

611 
	md©a_width
;

612 } 
	t∑ømëî_ty≥
;

615 
	mbtb
;

616 
	mbtb_gc
;

617 
	mloˇl_¥edi˘
;

618 
	mloˇl_¥edi˘_gc
;

619 
	mglobÆ_¥edi˘
;

620 
	mglobÆ_¥edi˘_gc
;

621 
	mchoo£r
;

622 
	mchoo£r_gc
;

623 
	møs
;

624 
	møs_gc
;

625 
	møt_drivî
;

626 
	møt_decodî
;

627 
	møt_w‹dlöe
;

628 
	møt_bôlöe
;

629 
	møt_£n£amp
;

630 
	møt_gc
;

631 
	md˛_com∑ª
;

632 
	md˛_≥ncode
;

633 
	mö°_decodî_powî
;

634 
	miwakeup_ègdrive
;

635 
	miwakeup_ègm©ch
;

636 
	miwakeup_‹m©ch
;

637 
	miwakeup_gc
;

638 
	mfwakeup_ègdrive
;

639 
	mfwakeup_ègm©ch
;

640 
	mfwakeup_‹m©ch
;

641 
	mfwakeup_gc
;

642 
	mlsq_wakeup_ègdrive
;

643 
	mlsq_wakeup_ègm©ch
;

644 
	mlsq_wakeup_‹m©ch
;

645 
	mlsq_wakeup_gc
;

646 
	mi£À˘i⁄
;

647 
	mf£À˘i⁄
;

648 
	múegfûe_drivî
;

649 
	múegfûe_decodî
;

650 
	múegfûe_w‹dlöe
;

651 
	múegfûe_bôlöe
;

652 
	múegfûe_£n£amp
;

653 
	múegfûe_gc
;

654 
	m‰egfûe_drivî
;

655 
	m‰egfûe_decodî
;

656 
	m‰egfûe_w‹dlöe
;

657 
	m‰egfûe_bôlöe
;

658 
	m‰egfûe_£n£amp
;

659 
	m‰egfûe_gc
;

672 
	mlsq_rs_drivî
;

673 
	mlsq_rs_decodî
;

674 
	mlsq_rs_w‹dlöe
;

675 
	mlsq_rs_bôlöe
;

676 
	mlsq_rs_£n£amp
;

677 
	mlsq_rs_gc
;

679 
	múesu…bus
;

680 
	m‰esu…bus
;

682 
	miˇche_decodî
;

683 
	miˇche_w‹dlöe
;

684 
	miˇche_bôlöe
;

685 
	miˇche_£n£amp
;

686 
	miˇche_èg¨øy
;

687 
	miˇche_gc
;

689 
	miˇche
;

691 
	mdˇche_decodî
;

692 
	mdˇche_w‹dlöe
;

693 
	mdˇche_bôlöe
;

694 
	mdˇche_£n£amp
;

695 
	mdˇche_èg¨øy
;

696 
	mdˇche_gc
;

698 
	mdéb
;

699 
	môlb
;

700 
	mdéb_gc
;

701 
	môlb_gc
;

703 
	mdˇche2_decodî
;

704 
	mdˇche2_w‹dlöe
;

705 
	mdˇche2_bôlöe
;

706 
	mdˇche2_£n£amp
;

707 
	mdˇche2_èg¨øy
;

708 
	mdˇche2_gc
;

710 
	mtŸÆ_powî
;

711 
	mtŸÆ_powî_nodˇche2
;

712 
	mülu1_powî
;

713 
	mülu2_powî
;

714 
	mÁlu1_powî
;

715 
	mÁlu2_powî
;

716 
	mb¥ed_powî
;

717 
	mª«me_powî
;

718 
	miqøm_powî
;

719 
	mfqøm_powî
;

720 
	m˛ock1_powî
;

721 
	m˛ock2_powî
;

722 
	m˛ock3_powî
;

723 
	mrob1_powî
;

724 
	mrob2_powî
;

725 
	møt_powî
;

726 
	md˛_powî
;

727 
	mlsq_powî
;

728 
	miwakeup_powî
;

729 
	mfwakeup_powî
;

730 
	mlsq_wakeup_powî
;

735 
	mlsq_rs_powî
;

736 
	mlsq_rs_powî_nobô
;

737 
	mi£À˘i⁄_powî
;

738 
	mf£À˘i⁄_powî
;

739 
	múegfûe_powî
;

740 
	m‰egfûe_powî
;

741 
	múegfûe_powî_nobô
;

742 
	m‰egfûe_powî_nobô
;

743 
	mªsu…_powî
;

744 
	miˇche_powî
;

745 
	mdˇche_powî
;

746 
	mdˇche2_powî
;

747 #ifde‡
INPUT_OUTPUT_BUFFER


748 
	möput_buf_powî
;

749 
	mouçut_buf_powî
;

752 
	m˛ock_powî
;

754 #i‚de‡
MAX_IC_INDEX


755 
	#MAX_IC_INDEX
 8

	)

758 
	mlök_rx_powî
[
MAX_IC_INDEX
];

759 
	mlök_rx_powî_˛
[
MAX_IC_INDEX
];

760 
	mlök_tx_powî
[
MAX_IC_INDEX
];

761 
	mlök_tx_powî_˛
[
MAX_IC_INDEX
];

762 
	mqøm_powî
[
MAX_IC_INDEX
];

763 
	mqøm_powî_˛
[
MAX_IC_INDEX
];

766 
	mcom∑ª_powî
;

767 
	md_Êù_Ê›_powî
;

768 
	mtwo_to_1_mux_powî
;

769 
	mdu∂iˇti⁄_powî
;

770 
	mPowîÁ˘‹
;

771 
	mSí£PowîÁ˘‹
;

773 
	mvdd_ªdu˘i⁄
;

775 } 
	tpowî_ªsu…_ty≥
;

780 
	mˇche_size
;

781 
	mnumbî_of_£ts
;

782 
	massocütivôy
;

783 
	mblock_size
;

784 } 
	ttime_∑ømëî_ty≥
;

787 
	mac˚ss_time
,
	mcy˛e_time
;

788 
	mbe°_Ndwl
,
	mbe°_Ndbl
;

789 
	mbe°_N•d
;

790 
	mbe°_Ntwl
,
	mbe°_Ntbl
;

791 
	mbe°_Nt•d
;

792 
	mdecodî_dñay_d©a
,
	mdecodî_dñay_èg
;

793 
	mdec_d©a_drivî
,
	mdec_d©a_3to8
,
	mdec_d©a_öv
;

794 
	mdec_èg_drivî
,
	mdec_èg_3to8
,
	mdec_èg_öv
;

795 
	mw‹dlöe_dñay_d©a
,
	mw‹dlöe_dñay_èg
;

796 
	mbôlöe_dñay_d©a
,
	mbôlöe_dñay_èg
;

797 
	m£n£_amp_dñay_d©a
,
	m£n£_amp_dñay_èg
;

798 
	m£n£ext_drivî_dñay_d©a
;

799 
	mcom∑ª_∑π_dñay
;

800 
	mdrive_mux_dñay
;

801 
	m£lb_dñay
;

802 
	md©a_ouçut_dñay
;

803 
	mdrive_vÆid_dñay
;

804 
	m¥ech¨ge_dñay
;

806 } 
	ttime_ªsu…_ty≥
;

809 
logtwo
(
x
);

810 
g©eˇp
(
width
,
wúñígth
);

811 
g©eˇµass
(
width
,
wúñígth
);

812 
døöˇp
(
width
,
nch™√l
,
°ack
);

813 
ª°owidth
(
ªs
,
nch™√l
);

814 
sim∂e_¨øy_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
);

815 
sim∂e_¨øy_decodî_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
);

816 
sim∂e_¨øy_bôlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
);

817 
sim∂e_¨øy_w‹dlöe_powî
(
rows
,
cﬁs
,
Ω‹ts
,
wp‹ts
,
ˇche
);

818 
squ¨ify_√w
(
rows
,
cﬁs
);

819 
˛ór_ac˚ss_°©s
();

824 
powî_ªg_°©s
(
°©_sdb_t
 *
sdb
);

825 
ˇlcuœã_time
(
time_ªsu…_ty≥
*, 
time_∑ømëî_ty≥
*);

826 
ouçut_d©a
(
time_ªsu…_ty≥
*, 
time_∑ømëî_ty≥
*);

827 
ˇlcuœã_powî
(
powî_ªsu…_ty≥
*);

828 
p›_cou¡
(
quad_t
 
bôs
);

829 
p›_cou¡_¶ow
(
quad_t
 
bôs
);

832 
powî_˛ór
();

833 
sim_cyc
();

834 
powî_vÆue
(
FILE
 *
Â
);

	@ptrace.c

84 
	~<°dio.h
>

85 
	~<°dlib.h
>

87 
	~"ho°.h
"

88 
	~"misc.h
"

89 
	~"machöe.h
"

90 
	~"ønge.h
"

91 
	~"±ø˚.h
"

94 
FILE
 *
	g±ø˚_outfd
 = 
NULL
;

97 
	g±ø˚_a˘ive
 = 
TRUE
;

100 
ønge_ønge_t
 
	g±ø˚_ønge
;

103 
	g±ø˚_⁄eshŸ
 = 
FALSE
;

107 
	$±ø˚_›í
(*
‚ame
,

108 *
ønge
)

110 *
îr°r
;

113 i‡(!
ønge
)

116 
îr°r
 = 
	`ønge_∑r£_ønge
(":", &
±ø˚_ønge
);

117 i‡(
îr°r
)

118 
	`∑nic
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

119 
±ø˚_a˘ive
 = 
TRUE
;

123 
îr°r
 = 
	`ønge_∑r£_ønge
(
ønge
, &
±ø˚_ønge
);

124 i‡(
îr°r
)

125 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

126 
±ø˚_a˘ive
 = 
FALSE
;

129 i‡(
±ø˚_ønge
.
°¨t
.
±y≥
 !±ø˚_ønge.
íd
.ptype)

130 
	`Áèl
("rangeÉndpointsáreÇot ofÅhe sameÅype");

133 i‡(!
‚ame
 || !
	`°rcmp
(fname, "-") || !strcmp(fname, "stderr"))

134 
±ø˚_outfd
 = 
°dîr
;

135 i‡(!
	`°rcmp
(
‚ame
, "stdout"))

136 
±ø˚_outfd
 = 
°dout
;

139 
±ø˚_outfd
 = 
	`f›í
(
‚ame
, "w");

140 i‡(!
±ø˚_outfd
)

141 
	`Áèl
("ˇ¬Ÿ o≥¿pùëø˚ ouçuàfûê`%s'", 
‚ame
);

143 
	}
}

147 
	$±ø˚_˛o£
()

149 i‡(
±ø˚_outfd
 !
NULL
 &&Öåa˚_outfd !
°dîr
 &&Öåa˚_outfd !
°dout
)

150 
	`f˛o£
(
±ø˚_outfd
);

151 
	}
}

155 
	$__±ø˚_√wö°
(
i£q
,

156 
md_ö°_t
 
ö°
,

157 
md_addr_t
 
pc
,

158 
md_addr_t
 
addr
)

160 
	`myÂrötf
(
±ø˚_outfd
, "+ %u 0x%08∞0x%08∞", 
i£q
, 
pc
, 
addr
);

161 
	`md_¥öt_ö¢
(
ö°
, 
addr
, 
±ø˚_outfd
);

162 
	`Ârötf
(
±ø˚_outfd
, "\n");

164 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

165 
	`fÊush
(
±ø˚_outfd
);

166 
	}
}

170 
	$__±ø˚_√wu›
(
i£q
,

171 *
u›_desc
,

172 
md_addr_t
 
pc
,

173 
md_addr_t
 
addr
)

175 
	`myÂrötf
(
±ø˚_outfd
,

176 "+ %u 0x%08∞0x%08∞[%s]\n", 
i£q
, 
pc
, 
addr
, 
u›_desc
);

178 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

179 
	`fÊush
(
±ø˚_outfd
);

180 
	}
}

184 
	$__±ø˚_ídö°
(
i£q
)

186 
	`Ârötf
(
±ø˚_outfd
, "- %u\n", 
i£q
);

188 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

189 
	`fÊush
(
±ø˚_outfd
);

190 
	}
}

194 
	$__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
)

196 
	`Ârötf
(
±ø˚_outfd
, "@ %.0f\n", ()
cy˛e
);

198 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

199 
	`fÊush
(
±ø˚_outfd
);

200 
	}
}

204 
	$__±ø˚_√w°age
(
i£q
,

205 *
p°age
,

206 
≥víts
)

208 
	`Ârötf
(
±ø˚_outfd
, "* %u %†0x%08x\n", 
i£q
, 
p°age
, 
≥víts
);

210 i‡(
±ø˚_outfd
 =
°dîr
 ||Öåa˚_outfd =
°dout
)

211 
	`fÊush
(
±ø˚_outfd
);

212 
	}
}

	@ptrace.h

83 #i‚de‡
PTRACE_H


84 
	#PTRACE_H


	)

86 
	~"ho°.h
"

87 
	~"misc.h
"

88 
	~"machöe.h
"

89 
	~"ønge.h
"

109 
	#PST_IFETCH
 "IF"

	)

110 
	#PST_DISPATCH
 "DA"

	)

111 
	#PST_EXECUTE
 "EX"

	)

112 
	#PST_WRITEBACK
 "WB"

	)

113 
	#PST_COMMIT
 "CT"

	)

116 
	#PEV_CACHEMISS
 0x00000001

	)

117 
	#PEV_TLBMISS
 0x00000002

	)

118 
	#PEV_MPOCCURED
 0x00000004

	)

119 
	#PEV_MPDETECT
 0x00000008

	)

120 
	#PEV_AGEN
 0x00000010

	)

123 
FILE
 *
±ø˚_outfd
;

126 
±ø˚_a˘ive
;

129 
ønge_ønge_t
 
±ø˚_ønge
;

132 
±ø˚_⁄eshŸ
;

136 
±ø˚_›í
(*
ønge
,

137 *
‚ame
);

141 
±ø˚_˛o£
();

145 
	#±ø˚_check_a˘ive
(
PC
, 
ICNT
, 
CYCLE
Ë\

	)

146 ((
	g±ø˚_outfd
 !
NULL
 \

147 && !
ønge_cmp_ønge1
(&
±ø˚_ønge
, (
PC
), (
ICNT
), (
CYCLE
))) \

148 ? (!
	g±ø˚_⁄eshŸ
 ? (
	g±ø˚_a˘ive
 = 
±ø˚_⁄eshŸ
 = 
TRUE
Ë: 
FALSE
)\

149 : (
±ø˚_a˘ive
 = 
FALSE
))

152 
	#±ø˚_√wö°
(
A
,
B
,
C
,
D
Ë\

	)

153 i‡(
	g±ø˚_a˘ive
Ë
__±ø˚_√wö°
((
A
),(
B
),(
C
),(
D
))

154 
	#±ø˚_√wu›
(
A
,
B
,
C
,
D
Ë\

	)

155 i‡(
	g±ø˚_a˘ive
Ë
__±ø˚_√wu›
((
A
),(
B
),(
C
),(
D
))

156 
	#±ø˚_ídö°
(
A
Ë\

	)

157 i‡(
	g±ø˚_a˘ive
Ë
__±ø˚_ídö°
((
A
))

158 
	#±ø˚_√wcy˛e
(
A
Ë\

	)

159 i‡(
	g±ø˚_a˘ive
Ë
__±ø˚_√wcy˛e
((
A
))

160 
	#±ø˚_√w°age
(
A
,
B
,
C
Ë\

	)

161 i‡(
	g±ø˚_a˘ive
Ë
__±ø˚_√w°age
((
A
),(
B
),(
C
))

163 
	#±ø˚_a˘ive
(
A
,
I
,
C
Ë\

	)

164 (
	g±ø˚_outfd
 !
NULL
 && !
ønge_cmp_ønge
(&
±ø˚_ønge
, (
A
), (
I
), (
C
)))

168 
__±ø˚_√wö°
(
i£q
,

169 
md_ö°_t
 
ö°
,

170 
md_addr_t
 
pc
,

171 
md_addr_t
 
addr
);

175 
__±ø˚_√wu›
(
i£q
,

176 *
u›_desc
,

177 
md_addr_t
 
pc
,

178 
md_addr_t
 
addr
);

182 
__±ø˚_ídö°
(
i£q
);

186 
__±ø˚_√wcy˛e
(
tick_t
 
cy˛e
);

190 
__±ø˚_√w°age
(
i£q
,

191 *
p°age
,

192 
≥víts
);

	@range.c

95 
	~<°dio.h
>

96 
	~<°dlib.h
>

97 
	~<°rög.h
>

98 
	~<î∫o.h
>

100 
	~"ho°.h
"

101 
	~"misc.h
"

102 
	~"machöe.h
"

103 
	~"symbﬁ.h
"

104 
	~"lﬂdî.h
"

105 
	~"ønge.h
"

108 
	~"smt.h
"

110 #ifde‡
SMT_SS


111 
	~"c⁄ãxt.h
"

118 
	$ønge_∑r£_pos
(*
p°r
,

119 
ønge_pos_t
 *
pos
)

121 *
s
, *
ídp
;

122 
sym_sym_t
 *
sym
;

124 #ifde‡
SMT_SS


125 
thªadid
 = 0;

126 
c⁄ãxt
 *
cuºít
;

127 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

132 i‡(
p°r
[0] == '@')

135 
pos
->
±y≥
 = 
±_addr
;

136 
s
 = 
p°r
 + 1;

138 i‡(
p°r
[0] == '#')

141 
pos
->
±y≥
 = 
±_cy˛e
;

142 
s
 = 
p°r
 + 1;

147 
pos
->
±y≥
 = 
±_ö°
;

148 
s
 = 
p°r
;

152 
î∫o
 = 0;

153 
pos
->po†(
cou¡î_t
)
	`°πoul
(
s
, &
ídp
, 0);

154 i‡(!
î∫o
 && !*
ídp
)

157  
NULL
;

161 
î∫o
 = 0;

162 
pos
->po†(
cou¡î_t
)
	`°πod
(
s
, &
ídp
);

163 i‡(!
î∫o
 && !*
ídp
)

167  
NULL
;

171 #ifde‡
SMT_SS


172 
	`sym_lﬂdsyms
(
cuºít
->
ld_¥og_‚ame
, 
FALSE
,cuºít->
id
);

174 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
FALSE
);

176 
sym
 = 
	`sym_böd_«me
(
s
, 
NULL
, 
sdb_™y
);

177 i‡(
sym
 !
NULL
)

179 
pos
->po†(
cou¡î_t
)
sym
->
addr
;

180  
NULL
;

185 
	}
}

189 
	$ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

190 
FILE
 *
°ªam
)

192 
pos
->
±y≥
)

194 
±_addr
:

195 
	`myÂrötf
(
°ªam
, "@0x%08p", (
md_addr_t
)
pos
->pos);

197 
±_ö°
:

198 
	`Ârötf
(
°ªam
, "%.0f", ()
pos
->pos);

200 
±_cy˛e
:

201 
	`Ârötf
(
°ªam
, "#%.0f", ()
pos
->pos);

204 
	`∑nic
("bogusÉxecutionÖositionÅype");

206 
	}
}

210 
	$ønge_∑r£_ønge
(*
r°r
,

211 
ønge_ønge_t
 *
ønge
)

213 *
pos1
, *
pos2
, *
p
, 
buf
[512], *
îr°r
;

216 
	`°r˝y
(
buf
, 
r°r
);

217 
pos1
 = 
buf
;

220 
p
 = 
buf
;

221 *
p
 != ':' && *p != '\0')

223 
p
++;

225 i‡(*
p
 != ':')

227 *
p
 = '\0';

230 
pos2
 = 
p
 + 1;

233 i‡(*
pos1
 && *pos1 != ':')

235 
îr°r
 = 
	`ønge_∑r£_pos
(
pos1
, &
ønge
->
°¨t
);

236 i‡(
îr°r
)

237  
îr°r
;

242 
ønge
->
°¨t
.
±y≥
 = 
±_ö°
;

243 
ønge
->
°¨t
.
pos
 = 0;

247 i‡(*
pos2
)

249 i‡(*
pos2
 == '+')

251 
dñè
;

252 *
ídp
;

255 
î∫o
 = 0;

256 
dñè
 = 
	`°πﬁ
(
pos2
 + 1, &
ídp
, 0);

257 i‡(!
î∫o
 && !*
ídp
)

260 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

261 
ønge
->
íd
.
pos
 =Ñ™ge->
°¨t
.po†+ 
dñè
;

271 
îr°r
 = 
	`ønge_∑r£_pos
(
pos2
, &
ønge
->
íd
);

272 i‡(
îr°r
)

273  
îr°r
;

279 
ønge
->
íd
.
±y≥
 =Ñ™ge->
°¨t
.ptype;

280 #ifde‡
HOST_HAS_QWORD


281 
ønge
->
íd
.
pos
 = 
	`ULL
(0x7fffffffffffffff);

283 
ønge
->
íd
.
pos
 = 281474976645120.0;

288  
NULL
;

289 
	}
}

293 
	$ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

294 
FILE
 *
°ªam
)

296 
	`ønge_¥öt_pos
(&
ønge
->
°¨t
, 
°ªam
);

297 
	`Ârötf
(
°ªam
, ":");

298 
	`ønge_¥öt_pos
(&
ønge
->
íd
, 
°ªam
);

299 
	}
}

303 
	$ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

304 
cou¡î_t
 
vÆ
)

306 i‡(
vÆ
 < 
pos
->pos)

308 i‡(
vÆ
 =
pos
->pos)

312 
	}
}

316 
	$ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

317 
cou¡î_t
 
vÆ
)

319 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

320 
	`∑nic
("invalidÑange");

322 i‡(
vÆ
 < 
ønge
->
°¨t
.
pos
)

324 i‡(
ønge
->
°¨t
.
pos
 <
vÆ
 && vÆ <ønge->
íd
.pos)

328 
	}
}

332 
	$ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

333 
md_addr_t
 
addr
,

334 
cou¡î_t
 
icou¡
,

335 
cou¡î_t
 
cy˛e
)

337 i‡(
ønge
->
°¨t
.
±y≥
 !ønge->
íd
.ptype)

338 
	`∑nic
("invalidÑange");

340 
ønge
->
°¨t
.
±y≥
)

342 
±_addr
:

343 i‡(
addr
 < (
md_addr_t
)
ønge
->
°¨t
.
pos
)

345 i‡((
md_addr_t
)
ønge
->
°¨t
.
pos
 <
addr
 &&ádd∏<(md_addr_tÏ™ge->
íd
.pos)

350 
±_ö°
:

351 i‡(
icou¡
 < 
ønge
->
°¨t
.
pos
)

353 i‡(
ønge
->
°¨t
.
pos
 <
icou¡
 && icou¡ <ønge->
íd
.pos)

358 
±_cy˛e
:

359 i‡(
cy˛e
 < 
ønge
->
°¨t
.
pos
)

361 i‡(
ønge
->
°¨t
.
pos
 <
cy˛e
 && cy˛ê<ønge->
íd
.pos)

367 
	`∑nic
("bogusÑangeÅype");

369 
	}
}

	@range.h

83 #i‚de‡
RANGE_H


84 
	#RANGE_H


	)

86 
	~<°dio.h
>

88 
	~"ho°.h
"

89 
	~"misc.h
"

90 
	~"machöe.h
"

92 
	eønge_±y≥_t
 {

93 
	m±_addr
 = 0,

94 
	m±_ö°
,

95 
	m±_cy˛e
,

96 
	m±_NUM


107 
	sønge_pos_t
 {

108 
ønge_±y≥_t
 
	m±y≥
;

109 
cou¡î_t
 
	mpos
;

113 
	sønge_ønge_t
 {

114 
ønge_pos_t
 
	m°¨t
;

115 
ønge_pos_t
 
	míd
;

120 
ønge_∑r£_pos
(*
p°r
,

121 
ønge_pos_t
 *
pos
);

125 
ønge_¥öt_pos
(
ønge_pos_t
 *
pos
,

126 
FILE
 *
°ªam
);

130 
ønge_∑r£_ønge
(*
r°r
,

131 
ønge_ønge_t
 *
ønge
);

135 
ønge_¥öt_ønge
(
ønge_ønge_t
 *
ønge
,

136 
FILE
 *
°ªam
);

140 
ønge_cmp_pos
(
ønge_pos_t
 *
pos
,

141 
cou¡î_t
 
vÆ
);

145 
ønge_cmp_ønge
(
ønge_ønge_t
 *
ønge
,

146 
cou¡î_t
 
vÆ
);

151 
ønge_cmp_ønge1
(
ønge_ønge_t
 *
ønge
,

152 
md_addr_t
 
addr
,

153 
cou¡î_t
 
icou¡
,

154 
cou¡î_t
 
cy˛e
);

	@regs.c

91 
	~<°dio.h
>

92 
	~<°dlib.h
>

93 
	~<°rög.h
>

95 
	~"ho°.h
"

96 
	~"misc.h
"

97 
	~"machöe.h
"

98 
	~"lﬂdî.h
"

99 
	~"ªgs.h
"

103 
ªgs_t
 *

104 
	$ªgs_¸óã
()

106 
ªgs_t
 *
ªgs
;

108 
ªgs
 = 
	`ˇŒoc
(1, (
ªgs_t
));

109 i‡(!
ªgs
)

110 
	`Áèl
("out of virtual memory");

112  
ªgs
;

113 
	}
}

117 
	$ªgs_öô
(
ªgs_t
 *
ªgs
)

120 
	`mem£t
(
ªgs
, 0, (*regs));

123 
	}
}

131 
	uªgs_FP_t
 {

132 
md_g¥_t
 
	ml
[
MD_NUM_FREGS
];

133 
md_SS_FLOAT_TYPE
 
	mf
[
SS_NUM_REGS
];

134 
SS_DOUBLE_TYPE
 
	md
[
SS_NUM_REGS
/2];

138 
md_ªgs_FP_t
 
ªgs_F
;

141 
SS_WORD_TYPE
 
ªgs_HI
;

144 
SS_WORD_TYPE
 
ªgs_LO
;

147 
ªgs_FCC
;

150 
SS_ADDR_TYPE
 
ªgs_PC
;

154 
	$ªgs_dump
(
FILE
 *
°ªam
)

156 
i
;

159 i‡(!
°ªam
)

160 
°ªam
 = 
°dîr
;

163 
	`Ârötf
(
°ªam
, "Processor state:\n");

164 
	`Ârötf
(
°ªam
, " PC: 0x%08x\n", 
ªgs_PC
);

165 
i
=0; i<
SS_NUM_REGS
; i += 2)

167 
	`Ârötf
(
°ªam
, " R[%2d]: %12d/0x%08x",

168 
i
, 
ªgs_R
[i],Ñegs_R[i]);

169 
	`Ârötf
(
°ªam
, " R[%2d]: %12d/0x%08x\n",

170 
i
+1, 
ªgs_R
[i+1],Ñegs_R[i+1]);

172 
	`Ârötf
(
°ªam
, " HI: %10d/0x%08x LO: %10d/0x%08x\n",

173 
ªgs_HI
,Ñegs_HI, 
ªgs_LO
,Ñegs_LO);

174 
i
=0; i<
SS_NUM_REGS
; i += 2)

176 
	`Ârötf
(
°ªam
, " F[%2d]: %12d/0x%08x",

177 
i
, 
ªgs_F
.
l
[i],Ñegs_F.l[i]);

178 
	`Ârötf
(
°ªam
, " F[%2d]: %12d/0x%08x\n",

179 
i
+1, 
ªgs_F
.
l
[i+1],Ñegs_F.l[i+1]);

181 
	`Ârötf
(
°ªam
, " FCC: 0x%08x\n", 
ªgs_FCC
);

182 
	}
}

185 
SS_WORD_TYPE
 
	gªgs_R
[
SS_NUM_REGS
];

188 
ªgs_FP
 
	gªgs_F
;

191 
SS_WORD_TYPE
 
	gªgs_HI
;

193 
SS_WORD_TYPE
 
	gªgs_LO
;

196 
	gªgs_FCC
;

199 
SS_ADDR_TYPE
 
	gªgs_PC
;

	@regs.h

97 #i‚de‡
REGS_H


98 
	#REGS_H


	)

100 
	~"ho°.h
"

101 
	~"misc.h
"

102 
	~"machöe.h
"

144 
	scomm⁄_ªgs_t
 {

145 
	mªgs_lock
;

146 
md_addr_t
 
	maddªss
;

147 
	msubs¸ibe_vÆue
;

148 
	msubs¸ibed
;

151 
comm⁄_ªgs_t
 
	gcomm⁄_ªgs_s
[4][
NUM_COM_REGS
];

153 
	sªgs_t
 {

154 #ifde‡
SMT_SS


155 
	mthªadid
;

157 
md_g¥_t
 
	mªgs_R
;

158 
md_Âr_t
 
	mªgs_F
;

159 
md_˘æ_t
 
	mªgs_C
;

160 
md_addr_t
 
	mªgs_PC
;

161 
md_addr_t
 
	mªgs_NPC
;

165 
ªgs_t
 *
ªgs_¸óã
();

169 
ªgs_öô
(
ªgs_t
 *
ªgs
);

173 
ªgs_dump
(
ªgs_t
 *
ªgs
,

174 
FILE
 *
°ªam
);

178 
ªgs_de°roy
(
ªgs_t
 *
ªgs
);

	@resource.c

93 
	~<°dio.h
>

94 
	~<°dlib.h
>

95 
	~<as£π.h
>

97 
	~"ho°.h
"

98 
	~"misc.h
"

99 
	~"ªsour˚.h
"

101 
	~"smt.h
"

103 
	~"c⁄ãxt.h
"

107 #ifde‡
PORT_PER_BANK


108 
	gRES_CACHE_PORTS
;

109 
ªs_mem_p‹t_b™k
;

111 
	#RES_CACHE_PORTS
 16

	)

113 
	gp‹t_b™k
[
RES_CACHE_PORTS
]={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};

122 
	#MAGIC_N
 2000

	)

123 #ifde‡
GENERIC_FU


124 
	#IGNORE_ISS_RESTR
 1

	)

126 
	#IGNORE_ISS_RESTR
 0

	)

130 
	#LDSTADDERS
 
RES_CACHE_PORTS


	)

133 #ifde‡ 
ISSUE_STAT


134 
	g‰ì_Ÿhî_˛
;

137 
	gªsCœssSèπ
[10], 
	gªsCœssIndex
;

140 
ªs_poﬁ
 *

141 
	$ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
)

143 
i
, 
j
, 
k
, 
ödex
, 
nö°s
;

144 
ªs_desc
 *
ö°_poﬁ
;

145 
ªs_poﬁ
 *
ªs
;

147 
ªsCœssIndex
++;

149 
nö°s
=0,
i
=0; i<
ndesc
; i++)

151 i‡(
poﬁ
[
i
].
qu™tôy
 > 
MAX_INSTS_PER_CLASS
)

152 
	`Áèl
("too many functional units, increase MAX_INSTS_PER_CLASS");

153 
ªsCœssSèπ
[
ªsCœssIndex
++] = 
nö°s
;

154 
nö°s
 +
poﬁ
[
i
].
qu™tôy
;

156 
ªsCœssSèπ
[
ªsCœssIndex
] = 
nö°s
;

158 
ö°_poﬁ
 = (
ªs_desc
 *)
	`ˇŒoc
(
nö°s
, (res_desc));

159 i‡(!
ö°_poﬁ
)

160 
	`Áèl
("out of virtual memory");

162 
ödex
=0,
i
=0; i<
ndesc
; i++)

164 
j
=0; j<
poﬁ
[
i
].
qu™tôy
; j++)

166 
ö°_poﬁ
[
ödex
] = 
poﬁ
[
i
];

167 
ö°_poﬁ
[
ödex
].
qu™tôy
 = 1;

168 
ö°_poﬁ
[
ödex
].
busy
 = 0;

169 
k
=0; k<
MAX_RES_CLASSES
 && 
ö°_poﬁ
[
ödex
].
x
[k].
˛ass
; k++)

170 
ö°_poﬁ
[
ödex
].
x
[
k
].
ma°î
 = &inst_pool[index];

171 
ödex
++;

174 
	`as£π
(
ödex
 =
nö°s
);

176 
ªs
 = (
ªs_poﬁ
 *)
	`ˇŒoc
(1, (res_pool));

177 i‡(!
ªs
)

178 
	`Áèl
("out of virtual memory");

179 
ªs
->
«me
 =Çame;

180 
ªs
->
num_ªsour˚s
 = 
nö°s
;

181 
ªs
->
ªsour˚s
 = 
ö°_poﬁ
;

183 
i
=0; i<
nö°s
; i++)

185 
ªs_ãm∂©e
 *
∂©e
;

186 
j
=0; j<
MAX_RES_CLASSES
; j++)

188 
∂©e
 = &
ªs
->
ªsour˚s
[
i
].
x
[
j
];

189 i‡(
∂©e
->
˛ass
)

191 
	`as£π
(
∂©e
->
˛ass
 < 
MAX_RES_CLASSES
);

192 
ªs
->
èbÀ
[
∂©e
->
˛ass
][ªs->
√¡s
[plate->class]++] =Ölate;

198  
ªs
;

199 
	}
}

207 
ªs_ãm∂©e
 *

208 
	$ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
, 
thªadid
)

212 
i
;

213 
lo
, 
hi
;

214 
≥r
;

218 
≥r
 = 
poﬁ
->
√¡s
[
˛ass
]/
CLUSTERS
;

219 
lo
 = 
thªadid
*
≥r
;

220 
hi
 = (
thªadid
+1)*
≥r
;

222 
	`as£π
(
˛ass
 < 
MAX_RES_CLASSES
);

224 
	`as£π
(
poﬁ
->
èbÀ
[
˛ass
][0]);

226 
i

lo
; i< 
hi
; i++)

228 i‡(
poﬁ
->
èbÀ
[
˛ass
][
i
] && !poﬁ->èbÀ[˛ass][i]->
ma°î
->
busy
)

230  
poﬁ
->
èbÀ
[
˛ass
][
i
];

235  
NULL
;

236 
	}
}

240 
	$ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
)

242 
i
, 
j
;

244 i‡(!
°ªam
)

245 
°ªam
 = 
°dîr
;

247 
	`Ârötf
(
°ªam
, "Resour˚Öoﬁ: %s:\n", 
poﬁ
->
«me
);

248 
	`Ârötf
(
°ªam
, "\tc⁄èö†%dÑesour˚ in°™˚s\n", 
poﬁ
->
num_ªsour˚s
);

249 
i
=0; i<
MAX_RES_CLASSES
; i++)

251 
	`Ârötf
(
°ªam
, "\tclass: %d: %d matching instances\n",

252 
i
, 
poﬁ
->
√¡s
[i]);

253 
	`Ârötf
(
°ªam
, "\tmatching: ");

254 
j
=0; j<
MAX_INSTS_PER_CLASS
; j++)

256 i‡(!
poﬁ
->
èbÀ
[
i
][
j
])

258 
	`Ârötf
(
°ªam
, "\t%s (busy for %d cycles) ",

259 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
«me
,

260 
poﬁ
->
èbÀ
[
i
][
j
]->
ma°î
->
busy
);

262 
	`as£π
(
j
 =
poﬁ
->
√¡s
[
i
]);

263 
	`Ârötf
(
°ªam
, "\n");

265 
	}
}

	@resource.h

98 #i‚de‡
RESOURCE_H


99 
	#RESOURCE_H


	)

101 
	~<°dio.h
>

104 
	#MAX_RES_CLASSES
 32

	)

107 
	#MAX_INSTS_PER_CLASS
 1024

	)

110 
	sªs_desc
 {

111 *
	m«me
;

112 
	mqu™tôy
;

113 
	mbusy
;

114 
	mu§_id
;

115 
	mdu∂iˇã
;

116 
	sªs_ãm∂©e
 {

117 
	m˛ass
;

120 
	m›œt
;

122 
	missuñ©
;

125 
ªs_desc
 *
	mma°î
;

126 } 
	mx
[
MAX_RES_CLASSES
];

130 
	sªs_poﬁ
 {

131 *
	m«me
;

132 
	mnum_ªsour˚s
;

133 
ªs_desc
 *
	mªsour˚s
;

135 
	m√¡s
[
MAX_RES_CLASSES
];

136 
ªs_ãm∂©e
 *
	mèbÀ
[
MAX_RES_CLASSES
][
MAX_INSTS_PER_CLASS
];

140 
ªs_poﬁ
 *
ªs_¸óã_poﬁ
(*
«me
, 
ªs_desc
 *
poﬁ
, 
ndesc
);

148 
ªs_ãm∂©e
 *
ªs_gë
(
ªs_poﬁ
 *
poﬁ
, 
˛ass
, 
öãæóf
);

151 
ªs_dump
(
ªs_poﬁ
 *
poﬁ
, 
FILE
 *
°ªam
);

	@sim-bpred.c

79 
	~<°dio.h
>

80 
	~<°dlib.h
>

81 
	~<m©h.h
>

83 
	~"ho°.h
"

84 
	~"misc.h
"

85 
	~"machöe.h
"

86 
	~"ªgs.h
"

87 
	~"mem‹y.h
"

88 
	~"lﬂdî.h
"

89 
	~"sysˇŒ.h
"

90 
	~"dlôe.h
"

91 
	~"›ti⁄s.h
"

92 
	~"°©s.h
"

93 
	~"b¥ed.h
"

94 
	~"sim.h
"

101 
ªgs_t
 
	gªgs
;

104 
mem_t
 *
	gmem
 = 
NULL
;

107 
	gmax_ö°s
;

110 *
	g¥ed_ty≥
;

113 
	gbimod_√…
 = 1;

114 
	gbimod_c⁄fig
[1] =

118 
	gtwﬁev_√…
 = 4;

119 
	gtwﬁev_c⁄fig
[4] =

120 { 1, 1024, 8, 
FALSE
};

123 
	gcomb_√…
 = 1;

124 
	gcomb_c⁄fig
[1] =

128 
	gøs_size
 = 8;

131 
	gbtb_√…
 = 2;

132 
	gbtb_c⁄fig
[2] =

136 
b¥ed_t
 *
	g¥ed
;

139 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

142 
cou¡î_t
 
	gsim_num_bønches
 = 0;

147 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

149 
	`›t_ªg_hódî
(
odb
,

154 
	`›t_ªg_nŸe
(
odb
,

171 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

172 &
max_ö°s
, 0,

173  
TRUE
, 
NULL
);

175 
	`›t_ªg_°rög
(
odb
, "-bpred",

177 &
¥ed_ty≥
, "bimod",

178  
TRUE
, 
NULL
);

180 
	`›t_ªg_öt_li°
(
odb
, "-bpred:bimod",

182 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

183  
bimod_c⁄fig
,

184  
TRUE
, 
NULL
, 
FALSE
);

186 
	`›t_ªg_öt_li°
(
odb
, "-bpred:2lev",

189 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

190  
twﬁev_c⁄fig
,

191  
TRUE
, 
NULL
, 
FALSE
);

193 
	`›t_ªg_öt_li°
(
odb
, "-bpred:comb",

195 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

196  
comb_c⁄fig
,

197  
TRUE
, 
NULL
, 
FALSE
);

199 
	`›t_ªg_öt
(
odb
, "-bpred:ras",

201 &
øs_size
,Ñas_size,

202  
TRUE
, 
NULL
);

204 
	`›t_ªg_öt_li°
(
odb
, "-bpred:btb",

206 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

207  
btb_c⁄fig
,

208  
TRUE
, 
NULL
, 
FALSE
);

209 
	}
}

213 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

215 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "taken"))

218 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

220 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "nottaken"))

223 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdNŸTakí
, 0, 0, 0, 0, 0, 0, 0, 0, 0);

225 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "bimod"))

227 i‡(
bimod_√…
 != 1)

228 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

229 i‡(
btb_√…
 != 2)

230 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

233 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2bô
,

234  
bimod_c⁄fig
[0],

240  
btb_c⁄fig
[0],

241  
btb_c⁄fig
[1],

242  
øs_size
);

244 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "2lev"))

247 i‡(
twﬁev_√…
 != 4)

248 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

249 i‡(
btb_√…
 != 2)

250 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

252 
¥ed
 = 
	`b¥ed_¸óã
(
BPªd2Levñ
,

254  
twﬁev_c⁄fig
[0],

255  
twﬁev_c⁄fig
[1],

257  
twﬁev_c⁄fig
[2],

258  
twﬁev_c⁄fig
[3],

259  
btb_c⁄fig
[0],

260  
btb_c⁄fig
[1],

261  
øs_size
);

263 i‡(!
	`my°ricmp
(
¥ed_ty≥
, "comb"))

266 i‡(
twﬁev_√…
 != 4)

267 
	`Áèl
("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

268 i‡(
bimod_√…
 != 1)

269 
	`Áèl
("bad bimodÖredictor config (<table_size>)");

270 i‡(
comb_√…
 != 1)

271 
	`Áèl
("bad combiningÖredictor config (<meta_table_size>)");

272 i‡(
btb_√…
 != 2)

273 
	`Áèl
("bad btb config (<num_sets> <associativity>)");

275 
¥ed
 = 
	`b¥ed_¸óã
(
BPªdComb
,

276  
bimod_c⁄fig
[0],

277  
twﬁev_c⁄fig
[0],

278  
twﬁev_c⁄fig
[1],

279  
comb_c⁄fig
[0],

280  
twﬁev_c⁄fig
[2],

281  
twﬁev_c⁄fig
[3],

282  
btb_c⁄fig
[0],

283  
btb_c⁄fig
[1],

284  
øs_size
);

287 
	`Áèl
("ˇ¬ŸÖ¨£Öªdi˘‹Åy≥ `%s'", 
¥ed_ty≥
);

288 
	}
}

292 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

294 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

296 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

297 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

299 &
sim_num_ªfs
, 0, 
NULL
);

300 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

302 &
sim_ñ≠£d_time
, 0, 
NULL
);

303 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

305 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

307 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_branches",

309 &
sim_num_bønches
, 0, 
NULL
);

310 
	`°©_ªg_f‹muœ
(
sdb
, "sim_IPB",

312 "sim_num_ö¢ / sim_num_bønches", 
NULL
);

315 i‡(
¥ed
)

316 
	`b¥ed_ªg_°©s
(
¥ed
, 
sdb
);

317 
	}
}

321 
	$sim_öô
()

323 
sim_num_ªfs
 = 0;

326 
	`ªgs_öô
(&
ªgs
);

329 
mem
 = 
	`mem_¸óã
("mem");

330 
	`mem_öô
(
mem
);

331 
	}
}

335 
	$b¥ed_m°©e_obj
(
FILE
 *
°ªam
,

336 *
cmd
,

337 
ªgs_t
 *
ªgs
,

338 
mem_t
 *
mem
)

341 
	`sim_¥öt_°©s
(
°ªam
);

344  
NULL
;

345 
	}
}

349 
	$sim_lﬂd_¥og
(*
‚ame
,

350 
¨gc
, **
¨gv
,

351 **
ívp
)

354 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

357 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
b¥ed_m°©e_obj
);

358 
	}
}

362 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

365 
	}
}

369 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

372 
	}
}

376 
	$sim_unöô
()

379 
	}
}

391 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

394 #unde‡
SET_TPC


395 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

398 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

401 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

402 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

404 #i‡
deföed
(
TARGET_PISA
)

407 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

408 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

409 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

410 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

411 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

412 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

415 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

416 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

417 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

418 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

419 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

420 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

422 #ñi‡
deföed
(
TARGET_ALPHA
)

425 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

426 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

427 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

428 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

431 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

432 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

433 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

434 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

437 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

441 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

442 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

443 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

444 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

445 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

446 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

447 #ifde‡
HOST_HAS_QUAD


448 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

449 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_QUAD
(
mem
, 
addr
 = (
SRC
)))

452 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

453 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

454 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

455 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

456 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

457 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

458 #ifde‡
HOST_HAS_QUAD


459 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

460 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_QUAD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

464 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

468 
	$sim_maö
()

470 
md_ö°_t
 
ö°
;

471 
md_addr_t
 
addr
, 
èrgë_PC
;

472 
md_›code
 
›
;

473 
is_wrôe
;

474 
°ack_idx
;

475 
md_Áu…_ty≥
 
Áu…
;

477 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/Öredictors **\n");

480 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

483 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

484 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

485 
sim_num_ö¢
, &
ªgs
, 
mem
);

487 
TRUE
)

490 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

491 #ifde‡
TARGET_ALPHA


492 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

496 
	`mem_ac˚ss
(
mem
, 
Ród
, 
ªgs
.
ªgs_PC
, &
ö°
, (
md_ö°_t
));

499 
sim_num_ö¢
++;

502 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

505 
Áu…
 = 
md_Áu…_n⁄e
;

508 
	`MD_SET_OPCODE
(
›
, 
ö°
);

511 
›
)

513 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

514 
OP
: \

515 
	`SYMCAT
(
OP
,
_IMPL
); \

517 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

518 
OP
: \

519 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

520 
	#CONNECT
(
OP
)

	)

521 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

522 { 
Áu…
 = (
FAULT
); ; }

523 
	~"machöe.def
"

525 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

528 i‡(
Áu…
 !
md_Áu…_n⁄e
)

529 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

531 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

533 
sim_num_ªfs
++;

534 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

535 
is_wrôe
 = 
TRUE
;

538 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_CTRL
)

540 
md_addr_t
 
¥ed_PC
;

541 
b¥ed_upd©e_t
 
upd©e_ªc
;

543 
sim_num_bønches
++;

545 i‡(
¥ed
)

548 
¥ed_PC
 = 
	`b¥ed_lookup
(
¥ed
,

549  
ªgs
.
ªgs_PC
,

550  
èrgë_PC
,

551  
›
,

552  
	`MD_IS_CALL
(
›
),

553  
	`MD_IS_RETURN
(
›
),

554  &
upd©e_ªc
,

555  &
°ack_idx
);

558 i‡(!
¥ed_PC
)

561 
¥ed_PC
 = 
ªgs
.
ªgs_PC
 + (
md_ö°_t
);

564 
	`b¥ed_upd©e
(
¥ed
,

565  
ªgs
.
ªgs_PC
,

566  
ªgs
.
ªgs_NPC
,

567  
ªgs
.
ªgs_NPC
 !‘egs.
ªgs_PC
 +

568 (
md_ö°_t
)),

569  
¥ed_PC
 !(
ªgs
.
ªgs_PC
 +

570 (
md_ö°_t
)),

571  
¥ed_PC
 =
ªgs
.
ªgs_NPC
,

572  
›
,

573  &
upd©e_ªc
);

578 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

579 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

580 
addr
, 
sim_num_ö¢
, sim_num_insn))

581 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

584 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

585 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

588 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

591 
	}
}

	@sim-cache.c

109 
	~<°dio.h
>

110 
	~<°dlib.h
>

111 
	~<°rög.h
>

112 
	~<m©h.h
>

113 
	~<as£π.h
>

115 
	~"ho°.h
"

116 
	~"misc.h
"

117 
	~"machöe.h
"

118 
	~"ªgs.h
"

119 
	~"mem‹y.h
"

120 
	~"ˇche.h
"

121 
	~"lﬂdî.h
"

122 
	~"sysˇŒ.h
"

123 
	~"dlôe.h
"

124 
	~"sim.h
"

135 
ªgs_t
 
	gªgs
;

138 
mem_t
 *
	gmem
 = 
NULL
;

141 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

144 
	gmax_ö°s
;

147 
ˇche_t
 *
	gˇche_û1
 = 
NULL
;

150 
ˇche_t
 *
	gˇche_û2
 = 
NULL
;

153 
ˇche_t
 *
	gˇche_dl1
 = 
NULL
;

156 
ˇche_t
 *
	gˇche_dl2
 = 
NULL
;

159 
ˇche_t
 *
	gôlb
 = 
NULL
;

162 
ˇche_t
 *
	gdéb
 = 
NULL
;

165 
	#MAX_PCSTAT_VARS
 8

	)

166 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

167 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

168 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

171 
	#STATVAL
(
STAT
Ë\

	)

172 ((
	gSTAT
)->
	gsc
 =
sc_öt
 \

173 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

174 : ((
STAT
)->
sc
 =
sc_uöt
 \

175 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

176 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

177 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

178 : (
∑nic
("bad stat class"), 0))))

182 
	$dl1_ac˚ss_‚
(
mem_cmd
 
cmd
,

183 
md_addr_t
 
baddr
,

184 
bsize
,

185 
ˇche_blk_t
 *
blk
,

186 
tick_t
 
now
)

188 i‡(
ˇche_dl2
)

191  
	`ˇche_ac˚ss
(
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

192  
now
, 
NULL
, NULL);

199 
	}
}

203 
	$dl2_ac˚ss_‚
(
mem_cmd
 
cmd
,

204 
md_addr_t
 
baddr
,

205 
bsize
,

206 
ˇche_blk_t
 *
blk
,

207 
tick_t
 
now
)

212 
	}
}

216 
	$û1_ac˚ss_‚
(
mem_cmd
 
cmd
,

217 
md_addr_t
 
baddr
,

218 
bsize
,

219 
ˇche_blk_t
 *
blk
,

220 
tick_t
 
now
)

222 i‡(
ˇche_û2
)

225  
	`ˇche_ac˚ss
(
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
,

226  
now
, 
NULL
, NULL);

233 
	}
}

237 
	$û2_ac˚ss_‚
(
mem_cmd
 
cmd
,

238 
md_addr_t
 
baddr
,

239 
bsize
,

240 
ˇche_blk_t
 *
blk
,

241 
tick_t
 
now
)

246 
	}
}

250 
	$ôlb_ac˚ss_‚
(
mem_cmd
 
cmd
,

251 
md_addr_t
 
baddr
,

252 
bsize
,

253 
ˇche_blk_t
 *
blk
,

254 
tick_t
 
now
)

256 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

259 
	`as£π
(
phy_∑ge_±r
);

262 *
phy_∑ge_±r
 = 0;

265 
	}
}

269 
	$déb_ac˚ss_‚
(
mem_cmd
 
cmd
,

270 
md_addr_t
 
baddr
,

271 
bsize
,

272 
ˇche_blk_t
 *
blk
,

273 
tick_t
 
now
)

275 
md_addr_t
 *
phy_∑ge_±r
 = (md_addr_à*)
blk
->
u£r_d©a
;

278 
	`as£π
(
phy_∑ge_±r
);

281 *
phy_∑ge_±r
 = 0;

284 
	}
}

287 *
	gˇche_dl1_›t
 ;

288 *
	gˇche_dl2_›t
 ;

289 *
	gˇche_û1_›t
 ;

290 *
	gˇche_û2_›t
 ;

291 *
	gôlb_›t
 ;

292 *
	gdéb_›t
 ;

293 
	gÊush_⁄_sysˇŒs
 ;

294 
	gcom¥ess_iˇche_addrs
 ;

297 
	gpc°©_√…
 = 0;

298 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

301 #ifde‡
TARGET_PISA


302 
	#IACOMPRESS
(
A
Ë\

	)

303 (
	gcom¥ess_iˇche_addrs
 ? ((((
	gA
Ë- 
	gld_ãxt_ba£
Ë>> 1Ë+Üd_ãxt_ba£Ë: (
A
))

304 
	#ISCOMPRESS
(
SZ
Ë\

	)

305 (
com¥ess_iˇche_addrs
 ? ((
SZ
) >> 1) : (SZ))

307 
	#IACOMPRESS
(
A
Ë(A)

	)

308 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

313 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

315 
	`›t_ªg_hódî
(
odb
,

324 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

325 &
max_ö°s
, 0,

326  
TRUE
, 
NULL
);

328 
	`›t_ªg_°rög
(
odb
, "-cache:dl1",

330 &
ˇche_dl1_›t
, "dl1:256:32:1:l", 
TRUE
, 
NULL
);

331 
	`›t_ªg_nŸe
(
odb
,

345 
	`›t_ªg_°rög
(
odb
, "-cache:dl2",

347 &
ˇche_dl2_›t
, "ul2:1024:64:4:l", 
TRUE
, 
NULL
);

348 
	`›t_ªg_°rög
(
odb
, "-cache:il1",

350 &
ˇche_û1_›t
, "û1:256:32:1:l", 
TRUE
, 
NULL
);

351 
	`›t_ªg_nŸe
(
odb
,

364 
	`›t_ªg_°rög
(
odb
, "-cache:il2",

366 &
ˇche_û2_›t
, "dl2", 
TRUE
, 
NULL
);

367 
	`›t_ªg_°rög
(
odb
, "-tlb:itlb",

369 &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

370 
	`›t_ªg_°rög
(
odb
, "-tlb:dtlb",

372 &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

373 
	`›t_ªg_Êag
(
odb
, "-flush", "flush caches on system calls",

374 &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

375 
	`›t_ªg_Êag
(
odb
, "-icompress",

377 &
com¥ess_iˇche_addrs
, 
FALSE
,

378  
TRUE
, 
NULL
);

380 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

382 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

383  
FALSE
, 
NULL
, 
TRUE
);

385 
	}
}

389 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
,

390 
¨gc
, **
¨gv
)

392 
«me
[128], 
c
;

393 
n£ts
, 
bsize
, 
assoc
;

396 i‡(!
	`my°ricmp
(
ˇche_dl1_›t
, "none"))

398 
ˇche_dl1
 = 
NULL
;

401 i‡(
	`°rcmp
(
ˇche_dl2_›t
, "none"))

402 
	`Áèl
("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

403 
ˇche_dl2
 = 
NULL
;

407 i‡(
	`ssˇnf
(
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c",

408 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

409 
	`Áèl
("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

410 
ˇche_dl1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

411  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

412 
dl1_ac˚ss_‚
, 1);

415 i‡(!
	`my°ricmp
(
ˇche_dl2_›t
, "none"))

416 
ˇche_dl2
 = 
NULL
;

419 i‡(
	`ssˇnf
(
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c",

420 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

421 
	`Áèl
("badÜ2 D-cacheÖarms: "

423 
ˇche_dl2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

424  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

425 
dl2_ac˚ss_‚
, 1);

430 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "none"))

432 
ˇche_û1
 = 
NULL
;

435 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

436 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

437 
ˇche_û2
 = 
NULL
;

439 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl1"))

441 i‡(!
ˇche_dl1
)

442 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ1ás it's undefined");

443 
ˇche_û1
 = 
ˇche_dl1
;

446 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

447 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

448 
ˇche_û2
 = 
NULL
;

450 i‡(!
	`my°ricmp
(
ˇche_û1_›t
, "dl2"))

452 i‡(!
ˇche_dl2
)

453 
	`Áèl
("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

454 
ˇche_û1
 = 
ˇche_dl2
;

457 i‡(
	`°rcmp
(
ˇche_û2_›t
, "none"))

458 
	`Áèl
("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

459 
ˇche_û2
 = 
NULL
;

463 i‡(
	`ssˇnf
(
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c",

464 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

465 
	`Áèl
("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

466 
ˇche_û1
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

467  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

468 
û1_ac˚ss_‚
, 1);

471 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "none"))

472 
ˇche_û2
 = 
NULL
;

473 i‡(!
	`my°ricmp
(
ˇche_û2_›t
, "dl2"))

475 i‡(!
ˇche_dl2
)

476 
	`Áèl
("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

477 
ˇche_û2
 = 
ˇche_dl2
;

481 i‡(
	`ssˇnf
(
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c",

482 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

483 
	`Áèl
("badÜ2 I-cacheÖarms: "

485 
ˇche_û2
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

486  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
(
c
),

487 
û2_ac˚ss_‚
, 1);

492 i‡(!
	`my°ricmp
(
ôlb_›t
, "none"))

493 
ôlb
 = 
NULL
;

496 i‡(
	`ssˇnf
(
ôlb_›t
, "%[^:]:%d:%d:%d:%c",

497 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

498 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

499 
ôlb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

500  (
md_addr_t
), 
assoc
,

501 
	`ˇche_ch¨2pﬁicy
(
c
), 
ôlb_ac˚ss_‚
,

506 i‡(!
	`my°ricmp
(
déb_›t
, "none"))

507 
déb
 = 
NULL
;

510 i‡(
	`ssˇnf
(
déb_›t
, "%[^:]:%d:%d:%d:%c",

511 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

512 
	`Áèl
("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

513 
déb
 = 
	`ˇche_¸óã
(
«me
, 
n£ts
, 
bsize
, 
FALSE
,

514  (
md_addr_t
), 
assoc
,

515 
	`ˇche_ch¨2pﬁicy
(
c
), 
déb_ac˚ss_‚
,

518 
	}
}

522 
	$sim_öô
()

524 
sim_num_ªfs
 = 0;

527 
	`ªgs_öô
(&
ªgs
);

530 
mem
 = 
	`mem_¸óã
("mem");

531 
	`mem_öô
(
mem
);

532 
	}
}

536 
	$ˇche_m°©e_obj
(
FILE
 *
°ªam
,

537 *
cmd
,

538 
ªgs_t
 *
ªgs
,

539 
mem_t
 *
mem
)

542 
	`sim_¥öt_°©s
(
°ªam
);

545  
NULL
;

546 
	}
}

550 
	$sim_lﬂd_¥og
(*
‚ame
,

551 
¨gc
, **
¨gv
,

552 **
ívp
)

555 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

558 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
ˇche_m°©e_obj
);

559 
	}
}

563 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

566 
	}
}

570 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

572 
i
;

575 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

577 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

578 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

580 &
sim_num_ªfs
, 0, 
NULL
);

581 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

583 &
sim_ñ≠£d_time
, 0, 
NULL
);

584 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

586 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

589 i‡(
ˇche_û1


590 && (
ˇche_û1
 !
ˇche_dl1
 && cache_û1 !
ˇche_dl2
))

591 
	`ˇche_ªg_°©s
(
ˇche_û1
, 
sdb
);

592 i‡(
ˇche_û2


593 && (
ˇche_û2
 !
ˇche_dl1
 && cache_û2 !
ˇche_dl2
))

594 
	`ˇche_ªg_°©s
(
ˇche_û2
, 
sdb
);

595 i‡(
ˇche_dl1
)

596 
	`ˇche_ªg_°©s
(
ˇche_dl1
, 
sdb
);

597 i‡(
ˇche_dl2
)

598 
	`ˇche_ªg_°©s
(
ˇche_dl2
, 
sdb
);

599 i‡(
ôlb
)

600 
	`ˇche_ªg_°©s
(
ôlb
, 
sdb
);

601 i‡(
déb
)

602 
	`ˇche_ªg_°©s
(
déb
, 
sdb
);

604 
i
=0; i<
pc°©_√…
; i++)

606 
buf
[512], 
buf1
[512];

607 
°©_°©_t
 *
°©
;

612 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

613 i‡(!
°©
)

614 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

617 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

618 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

619 
°©
->
«me
);

622 
pc°©_°©s
[
i
] = 
°©
;

623 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

626 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

627 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

628 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

630  (
PF_COUNT
|
PF_PDF
),

632  
NULL
);

634 
	`ld_ªg_°©s
(
sdb
);

635 
	`mem_ªg_°©s
(
mem
, 
sdb
);

636 
	}
}

640 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

643 
	}
}

647 
	$sim_unöô
()

650 
	}
}

661 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

664 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

667 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

668 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

670 #i‡
deföed
(
TARGET_PISA
)

673 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

674 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

675 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

676 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

677 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

678 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

681 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

682 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

683 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

684 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

685 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

686 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

688 #ñi‡
deföed
(
TARGET_ALPHA
)

691 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

692 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

693 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

694 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

697 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

698 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

699 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

700 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

703 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

707 
	#__READ_CACHE
(
addr
, 
SRC_T
Ë\

	)

708 ((
	gdéb
 \

709 ? 
ˇche_ac˚ss
(
déb
, 
Ród
, (
addr
), 
NULL
, \

710 (
SRC_T
), 0, 
NULL
, NULL) \

712 (
	gˇche_dl1
 \

713 ? 
ˇche_ac˚ss
(
ˇche_dl1
, 
Ród
, (
addr
), 
NULL
, \

714 (
SRC_T
), 0, 
NULL
, NULL) \

717 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

718 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
	gaddr
 = (
SRC
), \

719 
__READ_CACHE
(
addr
, 
byã_t
), 
	$MEM_READ_BYTE
(
mem
, 
addr
))

720 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

721 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

722 
	`__READ_CACHE
(
addr
, 
hÆf_t
), 
	$MEM_READ_HALF
(
mem
, 
addr
))

723 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

724 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

725 
	`__READ_CACHE
(
addr
, 
w‹d_t
), 
	$MEM_READ_WORD
(
mem
, 
addr
))

726 #ifde‡
HOST_HAS_QUAD


727 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

728 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
SRC
), \

729 
	`__READ_CACHE
(
addr
, 
quad_t
), 
	$MEM_READ_QUAD
(
mem
, 
addr
))

732 
	#__WRITE_CACHE
(
addr
, 
DST_T
Ë\

	)

733 ((
déb
 \

734 ? 
	`ˇche_ac˚ss
(
déb
, 
Wrôe
, (
addr
), 
NULL
, \

735 (
DST_T
), 0, 
NULL
, NULL) \

737 (
ˇche_dl1
 \

738 ? 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
Wrôe
, (
addr
), 
NULL
, \

739 (
DST_T
), 0, 
NULL
, NULL) \

742 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

743 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

744 
	`__WRITE_CACHE
(
addr
, 
byã_t
), 
	`MEM_WRITE_BYTE
(
mem
,áddr, (
SRC
)))

745 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

746 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

747 
	`__WRITE_CACHE
(
addr
, 
hÆf_t
), 
	`MEM_WRITE_HALF
(
mem
,áddr, (
SRC
)))

748 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

749 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

750 
	`__WRITE_CACHE
(
addr
, 
w‹d_t
), 
	`MEM_WRITE_WORD
(
mem
,áddr, (
SRC
)))

751 #ifde‡
HOST_HAS_QUAD


752 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

753 ((
FAULT
Ë
md_Áu…_n⁄e
, 
addr
 = (
DST
), \

754 
	`__WRITE_CACHE
(
addr
, 
quad_t
), 
	`MEM_WRITE_QUAD
(
mem
,áddr, (
SRC
)))

758 
md_Áu…_ty≥


759 
	$dˇche_ac˚ss_‚
(
mem_t
 *
mem
,

760 
mem_cmd
 
cmd
,

761 
md_addr_t
 
addr
,

762 *
p
,

763 
nbyãs
)

765 i‡(
déb
)

766 
	`ˇche_ac˚ss
(
déb
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

767 i‡(
ˇche_dl1
)

768 
	`ˇche_ac˚ss
(
ˇche_dl1
, 
cmd
, 
addr
, 
NULL
, 
nbyãs
, 0, NULL, NULL);

769  
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

770 
	}
}

773 
	#SYSCALL
(
INST
Ë\

	)

774 (
	gÊush_⁄_sysˇŒs
 \

775 ? ((
	gdéb
 ? 
	$ˇche_Êush
(
déb
, 0) : 0), \

776 (
ˇche_dl1
 ? 
	$ˇche_Êush
(
ˇche_dl1
, 0) : 0), \

777 (
ˇche_dl2
 ? 
	$ˇche_Êush
(
ˇche_dl2
, 0) : 0), \

778 
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
)) \

779 : 
	$sys_sysˇŒ
(&
ªgs
, 
dˇche_ac˚ss_‚
, 
mem
, 
INST
, 
TRUE
))

783 
	$sim_maö
()

785 
i
;

786 
md_ö°_t
 
ö°
;

787 
md_addr_t
 
addr
;

788 
md_›code
 
›
;

789 
is_wrôe
;

790 
md_Áu…_ty≥
 
Áu…
;

792 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation w/ caches **\n");

795 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

798 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

799 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

800 
sim_num_ö¢
, &
ªgs
, 
mem
);

802 
TRUE
)

805 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

806 #ifde‡
TARGET_ALPHA


807 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

811 i‡(
ôlb
)

812 
	`ˇche_ac˚ss
(
ôlb
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

813 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

814 i‡(
ˇche_û1
)

815 
	`ˇche_ac˚ss
(
ˇche_û1
, 
Ród
, 
	`IACOMPRESS
(
ªgs
.
ªgs_PC
),

816 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 0, NULL, NULL);

817 
	`mem_ac˚ss
(
mem
, 
Ród
, 
ªgs
.
ªgs_PC
, &
ö°
, (
md_ö°_t
));

820 
sim_num_ö¢
++;

823 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

826 
Áu…
 = 
md_Áu…_n⁄e
;

829 
	`MD_SET_OPCODE
(
›
, 
ö°
);

832 
›
)

834 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

835 
OP
: \

836 
	`SYMCAT
(
OP
,
_IMPL
); \

838 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

839 
OP
: \

840 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

841 
	#CONNECT
(
OP
)

	)

842 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

843 { 
Áu…
 = (
FAULT
); ; }

844 
	~"machöe.def
"

846 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

849 i‡(
Áu…
 !
md_Áu…_n⁄e
)

850 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

852 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

854 
sim_num_ªfs
++;

855 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

856 
is_wrôe
 = 
TRUE
;

860 
i
=0; i < 
pc°©_√…
; i++)

862 
cou¡î_t
 
√wvÆ
;

863 
dñè
;

866 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

867 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

868 i‡(
dñè
 != 0)

870 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

871 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

877 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

878 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

879 
addr
, 
sim_num_ö¢
, sim_num_insn))

880 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

883 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

884 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

887 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

890 
	}
}

	@sim-cheetah.c

100 
	~<°dio.h
>

101 
	~<°dlib.h
>

102 
	~<m©h.h
>

104 
	~"ho°.h
"

105 
	~"misc.h
"

106 
	~"machöe.h
"

107 
	~"ªgs.h
"

108 
	~"mem‹y.h
"

109 
	~"lﬂdî.h
"

110 
	~"sysˇŒ.h
"

111 
	~"dlôe.h
"

112 
	~"›ti⁄s.h
"

113 
	~"°©s.h
"

114 
	~"libchìèh/libchìèh.h
"

115 
	~"sim.h
"

127 
	#LIBCHEETAH_MAX_INST
 2147483647

	)

130 
ªgs_t
 
	gªgs
;

133 
mem_t
 *
	gmem
 = 
NULL
;

136 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

139 
	gmax_ö°s
;

142 *
	gª∂_°r
;

145 *
	gc⁄f_°r
;

148 
	gmö_£ts
;

151 
	gmax_£ts
;

154 
	glöe_size
;

157 
	gmax_assoc
;

160 
	gˇche_öãrvÆ
;

163 
	gmax_ˇche
;

166 
	gˇche_size
;

169 *
	gªf_°ªam
;

172 
	#REFS_INST
 0x01

	)

173 
	#REFS_DATA
 0x02

	)

174 
	gªfs
;

178 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

180 
	`›t_ªg_hódî
(
odb
,

190 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

191 &
max_ö°s
, 
LIBCHEETAH_MAX_INST
,

192  
TRUE
, 
NULL
);

194 
	`›t_ªg_°rög
(
odb
, "-refs",

196 &
ªf_°ªam
, "d©a", 
TRUE
, 
NULL
);

198 
	`›t_ªg_°rög
(
odb
, "-R", "replacementÖolicy, i.e.,Üru or opt",

199 &
ª∂_°r
, "Ãu", 
TRUE
, 
NULL
);

201 
	`›t_ªg_°rög
(
odb
, "-C", "cache configuration, i.e., fa, sa, or dm",

202 &
c⁄f_°r
, "ß", 
TRUE
, 
NULL
);

204 
	`›t_ªg_öt
(
odb
, "-a", "minÇumber of sets (log base 2,Üine size for DM)",

205 &
mö_£ts
, 7, 
TRUE
, 
NULL
);

207 
	`›t_ªg_öt
(
odb
, "-b", "maxÇumber of sets (log base 2,Üine size for DM)",

208 &
max_£ts
, 14, 
TRUE
, 
NULL
);

210 
	`›t_ªg_öt
(
odb
, "-l", "line size ofÅhe caches (log base 2)",

211 &
löe_size
, 4, 
TRUE
, 
NULL
);

213 
	`›t_ªg_öt
(
odb
, "-n", "max degree ofássociativityÅoánalyze (log base 2)",

214 &
max_assoc
, 1, 
TRUE
, 
NULL
);

216 
	`›t_ªg_öt
(
odb
, "-in", "cache size intervalsát which missÑatio is shown",

217 &
ˇche_öãrvÆ
, 512, 
TRUE
, 
NULL
);

219 
	`›t_ªg_öt
(
odb
, "-M", "maximum cache size of interest",

220 &
max_ˇche
, 524288, 
TRUE
, 
NULL
);

222 
	`›t_ªg_öt
(
odb
, "-c", "size of cache (log base 2) for DMánalysis",

223 &
ˇche_size
, 16, 
TRUE
, 
NULL
);

224 
	}
}

227 
	glib_¨gc
 = 0;

228 *
	glib_¨gv
[16];

232 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

234 
buf
[512];

236 
	`Ârötf
(
°dîr
,

240 i‡(
max_ö°s
 =0 || max_ö°†> 
LIBCHEETAH_MAX_INST
)

242 
	`w¨n
("sim-cheetah can onlyÖrocess %d instructions",

243 
LIBCHEETAH_MAX_INST
);

244 
max_ö°s
 = 
LIBCHEETAH_MAX_INST
;

247 i‡(!
	`°rcmp
(
ªf_°ªam
, "none"))

248 
ªfs
 = 0;

249 i‡(!
	`°rcmp
(
ªf_°ªam
, "inst"))

250 
ªfs
 = 
REFS_INST
;

251 i‡(!
	`°rcmp
(
ªf_°ªam
, "data"))

252 
ªfs
 = 
REFS_DATA
;

253 i‡(!
	`°rcmp
(
ªf_°ªam
, "unified"))

254 
ªfs
 = (
REFS_INST
|
REFS_DATA
);

256 
	`Áèl
("badÑeference stream specifier, use {inst|data|unified}");

259 
lib_¨gc
 = 0;

261 
	`•rötf
(
buf
, "-R%s", 
ª∂_°r
);

262 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

264 
	`•rötf
(
buf
, "-C%s", 
c⁄f_°r
);

265 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

267 
	`•rötf
(
buf
, "-a%d", 
mö_£ts
);

268 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

270 
	`•rötf
(
buf
, "-b%d", 
max_£ts
);

271 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

273 
	`•rötf
(
buf
, "-l%d", 
löe_size
);

274 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

276 
	`•rötf
(
buf
, "-n%d", 
max_assoc
);

277 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

279 
	`•rötf
(
buf
, "-i%d", 
ˇche_öãrvÆ
);

280 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

282 
	`•rötf
(
buf
, "-M%d", 
max_ˇche
);

283 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

285 
	`•rötf
(
buf
, "-c%d", 
ˇche_size
);

286 
lib_¨gv
[
lib_¨gc
++] = 
	`my°rdup
(
buf
);

287 
	}
}

291 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

293 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

295 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

296 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

298 &
sim_num_ªfs
, 0, 
NULL
);

299 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

301 (*)&
sim_ñ≠£d_time
, 0, 
NULL
);

302 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

304 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

305 
	}
}

309 
	$sim_öô
()

311 
sim_num_ªfs
 = 0;

314 
	`ªgs_öô
(&
ªgs
);

317 
mem
 = 
	`mem_¸óã
("mem");

318 
	`mem_öô
(
mem
);

319 
	}
}

323 
	$chìèh_m°©e_obj
(
FILE
 *
°ªam
,

324 *
cmd
,

325 
ªgs_t
 *
ªgs
,

326 
mem_t
 *
mem
)

328 
sim_íd_time
 = 
	`time
((
time_t
 *)
NULL
);

329 
sim_ñ≠£d_time
 = 
	`MAX
(
sim_íd_time
 - 
sim_°¨t_time
, 1);

332 
	`Ârötf
(
°ªam
, "\nsim: ** simulation statistics **\n");

333 
	`°©_¥öt_°©s
(
sim_sdb
, 
°ªam
);

336 
	`chìèh_°©s
(
°ªam
, 
TRUE
);

339  
NULL
;

340 
	}
}

344 
	$sim_lﬂd_¥og
(*
‚ame
,

345 
¨gc
, **
¨gv
,

346 **
ívp
)

349 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

352 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
chìèh_m°©e_obj
);

355 
	`chìèh_öô
(
lib_¨gc
, 
lib_¨gv
);

356 
	}
}

360 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

363 
	`chìèh_c⁄fig
(
°ªam
);

364 
	}
}

368 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

371 
	`chìèh_°©s
(
°ªam
, 
FALSE
);

372 
	}
}

376 
	$sim_unöô
()

379 
	}
}

391 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

394 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

397 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

398 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

400 #i‡
deföed
(
TARGET_PISA
)

403 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

404 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

405 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

406 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

407 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

408 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

411 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

412 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

413 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

414 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

415 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

416 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

418 #ñi‡
deföed
(
TARGET_ALPHA
)

421 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

422 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

423 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

424 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

427 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

428 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

429 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

430 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

433 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

437 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

438 (
	gaddr
 = (
SRC
), \

439 ((
	gªfs
 & 
	gREFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

440 (
FAULT
Ë
md_Áu…_n⁄e
, 
	$MEM_READ_BYTE
(
mem
, 
addr
))

441 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

442 (
addr
 = (
SRC
), \

443 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

444 (
FAULT
Ë
md_Áu…_n⁄e
, 
	$MEM_READ_HALF
(
mem
, 
addr
))

445 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

446 (
addr
 = (
SRC
), \

447 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

448 (
FAULT
Ë
md_Áu…_n⁄e
, 
	$MEM_READ_WORD
(
mem
, 
addr
))

449 #ifde‡
HOST_HAS_QUAD


450 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

451 (
addr
 = (
SRC
), \

452 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

453 (
FAULT
Ë
md_Áu…_n⁄e
, 
	$MEM_READ_QUAD
(
mem
, 
addr
))

456 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

457 (
addr
 = (
DST
), \

458 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

459 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_BYTE
(
mem
, 
addr
, (
SRC
)))

460 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

461 (
addr
 = (
DST
), \

462 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

463 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_HALF
(
mem
, 
addr
, (
SRC
)))

464 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

465 (
addr
 = (
DST
), \

466 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

467 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_WORD
(
mem
, 
addr
, (
SRC
)))

468 #ifde‡
HOST_HAS_QUAD


469 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

470 (
addr
 = (
DST
), \

471 ((
ªfs
 & 
REFS_DATA
Ë? 
	$chìèh_ac˚ss
(
addr
) : ()0), \

472 (
FAULT
Ë
md_Áu…_n⁄e
, 
	`MEM_WRITE_QUAD
(
mem
, 
addr
, (
SRC
)))

476 
md_Áu…_ty≥


477 
	$chìèh_ac˚ss_‚
(
mem_t
 *
mem
,

478 
mem_cmd
 
cmd
,

479 
md_addr_t
 
addr
,

480 *
p
,

481 
nbyãs
)

483 i‡(
ªfs
 & 
REFS_DATA
)

484 
	`chìèh_ac˚ss
(
addr
);

485  
	`mem_ac˚ss
(
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

486 
	}
}

489 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
chìèh_ac˚ss_‚
, 
mem
, INST, 
TRUE
)

	)

493 
	$sim_maö
()

495 
md_ö°_t
 
ö°
;

496 
md_addr_t
 
addr
;

497 
md_›code
 
›
;

498 
is_wrôe
;

499 
md_Áu…_ty≥
 
Áu…
;

501 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

504 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

507 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

508 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

509 
sim_num_ö¢
, &
ªgs
, 
mem
);

511 
TRUE
)

514 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

515 #ifde‡
TARGET_ALPHA


516 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

520 i‡(
ªfs
 & 
REFS_INST
)

521 
	`chìèh_ac˚ss
(
ªgs
.
ªgs_PC
);

522 
	`mem_ac˚ss
(
mem
, 
Ród
, 
ªgs
.
ªgs_PC
, &
ö°
, (
md_ö°_t
));

525 
sim_num_ö¢
++;

528 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

531 
Áu…
 = 
md_Áu…_n⁄e
;

534 
	`MD_SET_OPCODE
(
›
, 
ö°
);

537 
›
)

539 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

540 
OP
: \

541 
	`SYMCAT
(
OP
,
_IMPL
); \

543 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

544 
OP
: \

545 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

546 
	#CONNECT
(
OP
)

	)

547 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

548 { 
Áu…
 = (
FAULT
); ; }

549 
	~"machöe.def
"

551 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

554 i‡(
Áu…
 !
md_Áu…_n⁄e
)

555 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

557 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

559 
sim_num_ªfs
++;

560 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

561 
is_wrôe
 = 
TRUE
;

565 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

566 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

567 
addr
, 
sim_num_ö¢
, sim_num_insn))

568 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

571 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

572 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

575 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

578 
	}
}

	@sim-eio.c

79 
	~<°dio.h
>

80 
	~<°dlib.h
>

81 
	~<m©h.h
>

83 
	~"ho°.h
"

84 
	~"misc.h
"

85 
	~"machöe.h
"

86 
	~"ªgs.h
"

87 
	~"mem‹y.h
"

88 
	~"lﬂdî.h
"

89 
	~"sysˇŒ.h
"

90 
	~"dlôe.h
"

91 
	~"›ti⁄s.h
"

92 
	~"°©s.h
"

93 
	~"eio.h
"

94 
	~"ønge.h
"

95 
	~"sim.h
"

105 
ªgs_t
 
	gªgs
;

108 
mem_t
 *
	gmem
 = 
NULL
;

111 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

114 
	gmax_ö°s
;

117 
	gÁ°fwd_cou¡
;

120 
	gÁ°fwdög
 = 
FALSE
;

123 *
	gåa˚_‚ame
;

124 
FILE
 *
	gåa˚_fd
 = 
NULL
;

127 
	gchk±_a˘ive
 = 
FALSE
;

128 *
	gchk±_‚ame
;

129 
FILE
 *
	gchk±_fd
 = 
NULL
;

130 
ønge_ønge_t
 
	gchk±_ønge
;

133 
	gchk±_√…
 = 0;

134 *
	gchk±_›ts
[2];

138 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

140 
	`›t_ªg_hódî
(
odb
,

153 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

154 &
max_ö°s
, 0,

155  
TRUE
, 
NULL
);

157 
	`›t_ªg_öt
(
odb
, "-fastfwd", "number of insts skipped beforeÅracing starts",

158 &
Á°fwd_cou¡
, 0,

159  
TRUE
, 
NULL
);

161 
	`›t_ªg_°rög
(
odb
, "-trace", "EIOÅrace file output fileÇame",

162 &
åa˚_‚ame
, 
NULL
,

163  
TRUE
, 
NULL
);

165 
	`›t_ªg_°rög_li°
(
odb
, "-dump",

167 
chk±_›ts
, 2, &
chk±_√…
, 
NULL
,

168  
FALSE
, 
NULL
, FALSE);

170 
	`›t_ªg_nŸe
(
odb
,

186 );
	}
}

190 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

192 i‡(
Á°fwd_cou¡
 < 0 || fastfwd_count >= 2147483647)

193 
	`Áèl
("bad fa° f‹w¨d cou¡: %d", 
Á°fwd_cou¡
);

194 
	}
}

198 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

200 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

202 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

203 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

205 &
sim_num_ªfs
, 0, 
NULL
);

206 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

208 &
sim_ñ≠£d_time
, 0, 
NULL
);

209 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

211 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

212 
	`ld_ªg_°©s
(
sdb
);

213 
	`mem_ªg_°©s
(
mem
, 
sdb
);

214 
	}
}

218 
	$sim_öô
()

220 
sim_num_ªfs
 = 0;

223 
	`ªgs_öô
(&
ªgs
);

226 
mem
 = 
	`mem_¸óã
("mem");

227 
	`mem_öô
(
mem
);

228 
	}
}

232 
	$sim_lﬂd_¥og
(*
‚ame
,

233 
¨gc
, **
¨gv
,

234 **
ívp
)

237 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

239 i‡(
chk±_√…
 == 2)

241 *
îr°r
;

244 i‡(!
sim_eio_fd
)

245 
	`Áèl
("checkpoints can only be generated whileÑunningán EIOÅrace");

248 i‡(
åa˚_‚ame
 !
NULL
)

249 
	`Áèl
("checkpoints cannot be generated with generatingán EIOÅrace");

253 
îr°r
 = 
	`ønge_∑r£_ønge
(
chk±_›ts
[1], &
chk±_ønge
);

254 i‡(
îr°r
)

255 
	`Áèl
("cannotÖarseÖipetraceÑange, use: {<start>}:{<end>}");

258 
chk±_‚ame
 = 
chk±_›ts
[0];

259 
chk±_fd
 = 
	`eio_¸óã
(
chk±_‚ame
);

262 
chk±_a˘ive
 = 
TRUE
;

265 i‡(
åa˚_‚ame
 !
NULL
)

267 
	`Ârötf
(
°dîr
, "sim:ÅracingÉxecutionÅo EIO file `%s'...\n",

268 
åa˚_‚ame
);

271 
åa˚_fd
 = 
	`eio_¸óã
(
åa˚_‚ame
);

275 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

276 
	}
}

281 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

284 
	}
}

288 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

291 
	}
}

295 
	$sim_unöô
()

297 i‡(
åa˚_fd
 !
NULL
)

298 
	`eio_˛o£
(
åa˚_fd
);

299 
	}
}

311 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

314 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

317 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

318 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

320 #i‡
deföed
(
TARGET_PISA
)

323 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

324 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

325 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

326 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

327 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

328 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

331 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

332 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

333 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

334 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

335 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

336 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

338 #ñi‡
deföed
(
TARGET_ALPHA
)

341 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

342 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

343 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

344 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

347 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

348 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

349 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

350 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

353 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

357 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

358 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

359 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

360 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

361 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

362 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

363 #ifde‡
HOST_HAS_QUAD


364 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

365 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_QUAD
(
mem
, 
addr
 = (
SRC
)))

368 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

369 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

370 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

371 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

372 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

373 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

374 #ifde‡
HOST_HAS_QUAD


375 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

376 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_QUAD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

380 
	#SYSCALL
(
INST
Ë\

	)

381 ((
	gåa˚_fd
 !
NULL
 && !
Á°fwdög
) \

382 ? 
eio_wrôe_åa˚
(
åa˚_fd
, 
sim_num_ö¢
, \

383 &
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
) \

384 : 
	$sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, 
INST
, 
TRUE
))

388 
	$sim_maö
()

390 
md_ö°_t
 
ö°
;

391 
md_addr_t
 
addr
;

392 
md_›code
 
›
;

393 
boﬁ_t
 
is_wrôe
;

394 
md_Áu…_ty≥
 
Áu…
;

397 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

400 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

401 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

402 
sim_num_ö¢
, &
ªgs
, 
mem
);

406 i‡(
Á°fwd_cou¡
 > 0)

408 
icou¡
;

410 
	`Ârötf
(
°dîr
, "sim: ** fa° f‹w¨dög %d in°†**\n", 
Á°fwd_cou¡
);

412 
Á°fwdög
 = 
TRUE
;

413 
icou¡
=0; icou¡ < 
Á°fwd_cou¡
; icount++)

416 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

417 #ifde‡
TARGET_ALPHA


418 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

422 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
ªgs
.
ªgs_PC
, 
md_ö°_t
);

425 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

428 
Áu…
 = 
md_Áu…_n⁄e
;

431 
	`MD_SET_OPCODE
(
›
, 
ö°
);

434 
›
)

436 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

437 
OP
: \

438 
	`SYMCAT
(
OP
,
_IMPL
); \

440 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

441 
OP
: \

442 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

443 
	#CONNECT
(
OP
)

	)

444 #unde‡
DECLARE_FAULT


445 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

446 { 
Áu…
 = (
FAULT
); ; }

447 
	~"machöe.def
"

449 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

452 i‡(
Áu…
 !
md_Áu…_n⁄e
)

453 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

456 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

458 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

459 
is_wrôe
 = 
TRUE
;

463 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

464 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

465 
addr
, 
sim_num_ö¢
, sim_num_insn))

466 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

469 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

470 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

473 
Á°fwdög
 = 
FALSE
;

475 i‡(
åa˚_fd
 !
NULL
)

477 
	`Ârötf
(
°dîr
, "sim: writing EIO file initial checkpoint...\n");

478 i‡(
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
åa˚_fd
) != -1)

479 
	`∑nic
("checkpoint code is broken");

482 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

485 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

487 
TRUE
)

490 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

491 #ifde‡
TARGET_ALPHA


492 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

496 i‡(
chk±_a˘ive


497 && !
	`ønge_cmp_ønge1
(&
chk±_ønge
, 
ªgs
.
ªgs_NPC
,

498 
sim_num_ö¢
, sim_num_insn))

500 
	`Ârötf
(
°dîr
, "sim: writing checkpoint file `%s' @ inst %.0f...\n",

501 
chk±_‚ame
, ()
sim_num_ö¢
);

504 
	`eio_wrôe_chk±
(&
ªgs
, 
mem
, 
chk±_fd
);

507 
	`eio_˛o£
(
chk±_fd
);

510 
	`l⁄gjmp
(
sim_exô_buf
, 0+1);

514 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
ªgs
.
ªgs_PC
, 
md_ö°_t
);

517 
sim_num_ö¢
++;

520 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

523 
Áu…
 = 
md_Áu…_n⁄e
;

526 
	`MD_SET_OPCODE
(
›
, 
ö°
);

529 
›
)

531 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

532 
OP
: \

533 
	`SYMCAT
(
OP
,
_IMPL
); \

535 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

536 
OP
: \

537 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

538 
	#CONNECT
(
OP
)

	)

539 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

540 { 
Áu…
 = (
FAULT
); ; }

541 
	~"machöe.def
"

543 
	`∑nic
("bogus opcode");

546 i‡(
Áu…
 !
md_Áu…_n⁄e
)

547 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

549 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

551 
sim_num_ªfs
++;

552 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

553 
is_wrôe
 = 
TRUE
;

557 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

558 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

559 
addr
, 
sim_num_ö¢
, sim_num_insn))

560 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

563 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

564 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

567 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

570 
	}
}

	@sim-fast.c

102 
	~<°dio.h
>

103 
	~<°dlib.h
>

104 
	~<m©h.h
>

120 #unde‡
NO_INSN_COUNT


122 #ifde‡
__GNUC__


129 
	~"ho°.h
"

130 
	~"misc.h
"

131 
	~"machöe.h
"

132 
	~"ªgs.h
"

133 
	~"mem‹y.h
"

134 
	~"lﬂdî.h
"

135 
	~"sysˇŒ.h
"

136 
	~"dlôe.h
"

137 
	~"sim.h
"

140 
ªgs_t
 
	gªgs
;

143 
mem_t
 *
	gmem
 = 
NULL
;

145 #ifde‡
TARGET_ALPHA


147 
mem_t
 *
	gdec
 = 
NULL
;

152 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

154 
	`›t_ªg_hódî
(
odb
,

163 
	}
}

167 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

169 i‡(
dlôe_a˘ive
)

170 
	`Áèl
("sim-fast doesÇot support DLite debugging");

171 
	}
}

175 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

177 #i‚de‡
NO_INSN_COUNT


178 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

180 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

182 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

184 &
sim_ñ≠£d_time
, 0, 
NULL
);

185 #i‚de‡
NO_INSN_COUNT


186 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

188 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

190 
	`ld_ªg_°©s
(
sdb
);

191 
	`mem_ªg_°©s
(
mem
, 
sdb
);

192 
	}
}

196 
	$sim_öô
()

199 
	`ªgs_öô
(&
ªgs
);

202 
mem
 = 
	`mem_¸óã
("mem");

203 
	`mem_öô
(
mem
);

204 
	}
}

208 
	$sim_lﬂd_¥og
(*
‚ame
,

209 
¨gc
, **
¨gv
,

210 **
ívp
)

213 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

215 #ifde‡
TARGET_ALPHA


218 
i
, 
num_ö¢
 = (
ld_ãxt_size
 + 3) / 4;

220 
	`Ârötf
(
°dîr
, "**Öª-decodög %u in°s...", 
num_ö¢
);

223 
dec
 = 
	`mem_¸óã
("dec");

225 
i
=0; i < 
num_ö¢
; i++)

227 
md_›code
 
›
;

228 
md_ö°_t
 
ö°
;

229 
md_addr_t
 
PC
;

232 
PC
 = 
ld_ãxt_ba£
 + 
i
 * (
md_ö°_t
);

235 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
PC
, 
md_ö°_t
);

238 
	`MD_SET_OPCODE
(
›
, 
ö°
);

241 
	`MEM_WRITE_WORD
(
dec
, 
PC
 << 1, (
w‹d_t
)
›
);

242 
	`MEM_WRITE_WORD
(
dec
, (
PC
 << 1)+(
w‹d_t
), 
ö°
);

244 
	`Ârötf
(
°dîr
, "done\n");

247 
	}
}

251 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

254 
	}
}

258 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

261 
	}
}

265 
	$sim_unöô
()

268 
	}
}

275 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

278 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

281 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

282 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

284 #i‡
deföed
(
TARGET_PISA
)

287 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

288 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

289 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

290 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

291 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

292 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

295 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

296 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

297 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

298 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

299 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

300 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

302 #ñi‡
deföed
(
TARGET_ALPHA
)

305 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

306 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

307 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

308 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

311 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

312 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

313 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

314 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

317 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

321 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

322 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_BYTE
(
mem
, (
SRC
)))

323 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

324 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_HALF
(
mem
, (
SRC
)))

325 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

326 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_WORD
(
mem
, (
SRC
)))

327 #ifde‡
HOST_HAS_QUAD


328 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

329 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_QUAD
(
mem
, (
SRC
)))

332 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

333 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_BYTE
(
mem
, (
DST
), (
SRC
)))

334 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

335 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_HALF
(
mem
, (
DST
), (
SRC
)))

336 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

337 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_WORD
(
mem
, (
DST
), (
SRC
)))

338 #ifde‡
HOST_HAS_QUAD


339 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

340 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_QUAD
(
mem
, (
DST
), (
SRC
)))

344 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

346 #i‚de‡
NO_INSN_COUNT


347 
	#INC_INSN_CTR
(Ë
sim_num_ö¢
++

	)

349 
	#INC_INSN_CTR
(Ë

	)

352 #ifde‡
TARGET_ALPHA


353 
	#ZERO_FP_REG
(Ë
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0

	)

355 
	#ZERO_FP_REG
(Ë

	)

360 
	$sim_maö
()

362 #ifde‡
USE_JUMP_TABLE


372 *
›_jump
[ ] = {

373 &&
›code_NA
,

374 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

375 &&
›code_
##
OP
,

376 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

377 &&
›code_
##
OP
,

378 
	#CONNECT
(
OP
)

	)

379 
	~"machöe.def
"

384 
md_ö°_t
 
ö°
;

387 
md_›code
 
›
;

389 
	`Ârötf
(
°dîr
, "sim: ** starting *fast* functional simulation **\n");

392 i‡(
sim_sw≠_byãs
 || 
sim_sw≠_w‹ds
)

393 
	`Áèl
("sim: *fast* functional simulation cannot swap bytes or words");

395 #ifde‡
USE_JUMP_TABLE


397 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
;

400 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
ªgs
.
ªgs_NPC
, 
md_ö°_t
);

403 
	`MD_SET_OPCODE
(
›
, 
ö°
);

404 *
›_jump
[
›
];

406 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

407 
›code_
##
OP
: \

409 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0; \

410 
	`ZERO_FP_REG
(); \

413 
	`INC_INSN_CTR
(); \

416 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
; \

419 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
); \

422 
	`SYMCAT
(
OP
,
_IMPL
); \

425 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
ªgs
.
ªgs_NPC
, 
md_ö°_t
); \

428 
	`MD_SET_OPCODE
(
›
, 
ö°
); \

429 *
›_jump
[
›
];

431 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

432 
›code_
##
OP
: \

433 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

434 
	#CONNECT
(
OP
)

	)

435 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

437 
	~"machöe.def
"

439 
›code_NA
:

440 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

443 
	`∑nic
("exited sim-fast mainÜoop");

448 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

450 
TRUE
)

453 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

454 #ifde‡
TARGET_ALPHA


455 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

459 #i‚de‡
NO_INSN_COUNT


460 
sim_num_ö¢
++;

463 #ifde‡
TARGET_ALPHA


465 
›
 = (
md_›code
)
	`__UNCHK_MEM_READ
(
dec
, 
ªgs
.
ªgs_PC
 << 1, 
w‹d_t
);

466 
ö°
 =

467 
	`__UNCHK_MEM_READ
(
dec
, (
ªgs
.
ªgs_PC
 << 1)+(
w‹d_t
), 
md_ö°_t
);

470 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
ªgs
.
ªgs_PC
, 
md_ö°_t
);

473 
	`MD_SET_OPCODE
(
›
, 
ö°
);

477 
›
)

479 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

480 
OP
: \

481 
	`SYMCAT
(
OP
,
_IMPL
); \

483 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

484 
OP
: \

485 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

486 
	#CONNECT
(
OP
)

	)

487 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

489 
	~"machöe.def
"

491 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

495 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

496 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

500 
	}
}

	@sim-ooo.c

113 
	~"hódîs.h
"

115 
	~"maö.h
"

116 
	~"sim-out‹dî.h
"

117 
	~"ö°M™ù.h
"

121 
cou¡î_t
 
	gTŸÆB¨rõrs
 = 0;

122 
cou¡î_t
 
	gTŸÆLocks
 = 0;

123 
cou¡î_t
 
	gpuª_num_ö¢
 = 0;

124 
cou¡î_t
 
	gtŸÆ_num_ö¢
 = 0;

125 
cou¡î_t
 
	gª«me_ac˚ss
 = 0;

126 
cou¡î_t
 
	giqøm_ac˚ss
 = 0;

127 
cou¡î_t
 
	gfqøm_ac˚ss
 = 0;

128 
cou¡î_t
 
	grob1_ac˚ss
 = 0;

129 
cou¡î_t
 
	grob2_ac˚ss
 = 0;

130 
cou¡î_t
 
	gb¥ed_ac˚ss
 = 0;

131 
cou¡î_t
 
	giwakeup_ac˚ss
 = 0;

132 
cou¡î_t
 
	gfwakeup_ac˚ss
 = 0;

133 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss
 = 0;

134 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss
 = 0;

135 
cou¡î_t
 
	gúegfûe_ac˚ss
 = 0;

136 
cou¡î_t
 
	g‰egfûe_ac˚ss
 = 0;

138 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

139 
cou¡î_t
 
	giˇche_ac˚ss
 = 0;

140 
cou¡î_t
 
	gdˇche_ac˚ss
 = 0;

141 
cou¡î_t
 
	gdˇche2_ac˚ss
 = 0;

142 
cou¡î_t
 
	giˇche2_ac˚ss
 = 0;

144 
cou¡î_t
 
	gülu1_ac˚ss
 = 0;

145 
cou¡î_t
 
	gülu2_ac˚ss
 = 0;

146 
cou¡î_t
 
	gÁlu1_ac˚ss
 = 0;

147 
cou¡î_t
 
	gÁlu2_ac˚ss
 = 0;

148 
cou¡î_t
 
	gúesu…bus_ac˚ss
 = 0;

149 
cou¡î_t
 
	g‰esu…bus_ac˚ss
 = 0;

150 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

151 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

153 
	gpcb_blk_cou¡
 = 0;

156 
cou¡î_t
 
	g¶ìpCou¡
[
MAXTHREADS
];

160 
cou¡î_t
 
	gdu∂iˇti⁄_ac˚ss
, 
	gDUPLICATION_ac˚ss
[
CLUSTERS
], 
	gdu∂iˇti⁄_tŸÆ
 = 0;

161 
cou¡î_t
 
	gcom∑ª_ac˚ss
, 
	gCOMPARE_ac˚ss
[
CLUSTERS
], 
	gcom∑ª_tŸÆ
 = 0;

165 
cou¡î_t
 
¥edi˘_commô
 (
RUU_°©i⁄
 *
rs
);

168 
	gb¥ed_btb_u£_ma°îid
 = 0;

169 
ûök_run
;

170 
em3d_run
;

172 #ifde‡
DIRECTORY


173 #ifde‡
POPNET


174 
maöP›√t
();

175 
p›√tMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
°Time
, 
msgNo
);

176 
p›√tBuf„rS∑˚
(
s1
, 
s2
, 
›t
);

178 
cou¡î_t
 
p›√tMsgNo
;

179 
	gmshr_≥ndög_evít
[
MAXTHREADS
];

181 
cou¡î_t
 
	gßme_L1_L2_fifo_fuŒ
;

182 
cou¡î_t
 
	gL1_mshr_fuŒ
;

183 
cou¡î_t
 
	gœ°_L1_mshr_fuŒ
[
MAXTHREADS
];

184 
cou¡î_t
 
	gL2_mshr_fuŒ
;

185 
cou¡î_t
 
	gœ°_L2_mshr_fuŒ
;

186 
cou¡î_t
 
	gL2_mshr_fuŒ_¥e„tch
;

187 
cou¡î_t
 
	gL1_fifo_fuŒ
;

188 
cou¡î_t
 
	gœ°_L1_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

189 
cou¡î_t
 
	gDú_fifo_fuŒ
;

190 
cou¡î_t
 
	gœ°_Dú_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

191 
cou¡î_t
 
	gI≈ut_queue_fuŒ
;

192 
cou¡î_t
 
	gœ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

193 
cou¡î_t
 
	gOuçut_queue_fuŒ
;

195 
cou¡î_t
 
	gSèŒ_L1_mshr
;

196 
cou¡î_t
 
	gSèŒ_L2_mshr
;

197 
cou¡î_t
 
	gSèŒ_L1_fifo
;

198 
cou¡î_t
 
	gSèŒ_dú_fifo
;

199 
cou¡î_t
 
	gSèŒ_öput_queue
;

200 
cou¡î_t
 
	gSèŒ_ouçut_queue
;

202 
cou¡î_t
 
«ck_cou¡î
, 
L1_Êù_cou¡î
, 
Êù_cou¡î
, 
e_to_m
;

203 
cou¡î_t
 
	gtŸÆMeshH›Cou¡
, 
	gtŸÆMeshH›Dñay
, 
	gtŸÆEvítCou¡
, 
	gtŸÆEvítPro˚ssTime
;

204 
cou¡î_t
 
	gtŸÆO±H›Cou¡
, 
	gtŸÆO±H›Dñay
;

205 
cou¡î_t
 
	glﬂd_lök_sh¨ed
, 
	glﬂd_lök_ex˛usive
;

206 
tick_t
 
tŸÆmissh™dÀtime
;

207 
cou¡î_t
 
L1_¥e„tch_u£fuŒ
;

208 
tŸÆevítcou¡num
;

209 
tŸÆ_L1_¥e„tch
;

210 
cou¡î_t
 
wrôe_back_óæy
;

211 
tŸÆ_L1_fú°_¥e„tch
;

212 
tŸÆ_L1_£c_¥e„tch
;

213 
tŸÆªqcou¡num
;

214 
tŸÆmisscou¡num
;

215 
cou¡î_t
 
loˇl_ˇche_ac˚ss
, 
ªmŸe_ˇche_ac˚ss
, 
loˇldúe˘‹y
, 
ªmŸedúe˘‹y
;

216 
cou¡î_t
 
övﬁve_2_h›s
, 
övﬁve_2_h›_touch
, 
övﬁve_2_h›_wb
, 
övﬁve_2_h›s_wm
, 
övﬁve_4_h›s_wm
, 
övﬁve_2_h›s_upgøde
, 
övﬁve_4_h›s
, 
övﬁve_4_h›s_miss
, 
övﬁve_2_h›s_miss
, 
övﬁve_4_h›s_upgøde
;

217 
cou¡î_t
 
	gtŸÆS∂ôNo
, 
	gtŸÆS∂ôWM
;

218 
cou¡î_t
 
d©a_¥iv©e_wrôe
, 
d©a_¥iv©e_ªad
, 
d©a_sh¨ed_wrôe
, 
d©a_sh¨ed_ªad
;

219 
cou¡î_t
 
tŸÆ_Æl_˛o£
, 
tŸÆ_Æl_Æmo°˛o£
, 
tŸÆ_nŸ_Æl_˛o£
, 
tŸÆ_p_c_evíts
, 
tŸÆ_c⁄sumîs
, 
tŸÆ_∑ckës_ö_√ighb‹
, 
tŸÆ_∑ckës_©_c‹√rs
;

220 
cou¡î_t
 
tŸÆ_d©a_c⁄sumîs
, 
tŸÆ_d©a_˛o£
, 
tŸÆ_d©a_Ár
, 
tŸÆ_d©a_©_c‹√r
;

221 
cou¡î_t
 
sh¨î_num
[
MAXTHREADS
];

222 
avîage_öside_≥r˚¡
;

223 
avîage_outside_≥r˚¡
;

224 
avîage_outside_abs_≥r˚¡
;

225 
avîage_c‹√r_≥r˚¡
;

227 
	gmem_p‹t_œt
[8];

230 
	#PULL_BACK


	)

232 
	#WATER_NSQUARED
 0

	)

233 
	#LSQ_LATENCY
 4

	)

234 
	#DUP_NO
 2

	)

236 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

237 
	#LSQSIZE
 1024

	)

238 
	#RUUSIZE
 1024

	)

241 
	#_rŸr
(
x
Ë(xË((xË& 1)?(((x)>>1)|0x80000000):((x)>>1)

	)

243 
quõs˚Såu˘
 
	gquõs˚AddrSåu˘
[
CLUSTERS
];

244 
md_addr_t
 
	gTempIn°r
 = 0x1A2B3C4D;

245 
	gac˚ss_mem
 = 0;

246 
	gac˚ss_mem_id
 = -1;

247 
	g°›≥d_num_thªads
 = 0;

248 
	gRódFromWB
 = 0;

249 
cou¡î_t
 
	gˇcheMiss
[
MAXTHREADS
], 
	ghôInOthîCache
[MAXTHREADS];

250 
cou¡î_t
 
	gm_sqPª„tchC¡
 = 0;

251 
	gexecuãMaxIn¢
;

252 
	gdl2A˘uÆlyAc˚s£d
, 
	gm¨kedLöeRïœ˚d
;

253 
	gquõn£Wakeup
[
MAXTHREADS
];

254 
	gsimIn¢
[
MAXTHREADS
];

255 
	gÊushImpSèts
 = 0;

258 
	gthªadF‹ked
[4], 
	gÆlF‹ked
, 
	g°‹eC⁄dFaû
, 
	gtimeToRëu∫
 = 0;

259 
cou¡î_t
 
	gSt‹eC⁄dôi⁄FaûNum
;

260 
	gcﬁÀ˘SètB¨rõr
, 
	gcﬁÀ˘SètSt›
[
MAXTHREADS
];

261 
	gªÆSimCy˛e
;

262 
	ga˘uÆPro˚ss
;

263 
	gdißbÀ_øy
 = 1;

264 
	gfu_busy
[
CLUSTERS
], 
	gwb_d⁄e
[CLUSTERS], 
	gissue_d⁄e
[CLUSTERS], 
	g„tch_d⁄e
[CLUSTERS], 
	gcommô_d⁄e
[CLUSTERS], 
	gdi•©ch_d⁄e
[CLUSTERS];

265 
cou¡î_t
 
	gbrRecovîy
[
CLUSTERS
], 
	gexåaIn¢
[CLUSTERS];

267 #i‡ 
deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

268 
	g°ÆlNoBusSlŸ
;

269 
busSlŸCou¡
;

270 
	gbusU£d
;

271 
cou¡î_t
 
	gbusOccu∑ncy
 = 0;

275 #ifde‡
PULL_BACK


276 
cou¡î_t
 
	gpuŒbackBubbÀ
[
MAXTHREADS
], 
	gpuŒbackWaôCy˛e
[MAXTHREADS], 
	gpuŒbackD⁄eThisCy˛e
[MAXTHREADS], 
	gpuŒbackHôPªd
[MAXTHREADS], 
	gdl1MissThisCy˛e
[MAXTHREADS], 
	gdl1HôThisCy˛e
[MAXTHREADS], 
	gpuŒbackCy˛eCou¡
[MAXTHREADS],

277 
	gpuŒbackCou¡
[
MAXTHREADS
];

278 
cou¡î_t
 
	g¥edHôHô
[
MAXTHREADS
], 
	g¥edHôMiss
[MAXTHREADS], 
	g¥edMissHô
[MAXTHREADS], 
	g¥edMissMiss
[MAXTHREADS];

281 #ifde‡ 
MSHR


282 
	gmshr_size
 = 0;

283 
	gmshr_fuŒ
 = 0;

284 
	gmshr_cou¡
;

286 #ifde‡ 
MSHR_DIST


287 
	gmshr_size_di°
[
MSHRSIZE
];

289 
	gmshr_fuŒ_cou¡
;

291 #ifde‡
EUP_NETWORK


292 
cou¡î_t
 
	gEUP_íåy_fuŒ
;

296 
	gm_shLQSize
;

297 
	gm_shSQSize
;

298 
cou¡î_t
 
	gm_tŸÆSèŒ
[
MAXTHREADS
];

299 
cou¡î_t
 
	gm_sqLQFuŒ
[
MAXTHREADS
];

300 
cou¡î_t
 
	gm_sqSQFuŒ
[
MAXTHREADS
];

301 
cou¡î_t
 
	gm_RUUFuŒ
[
MAXTHREADS
];

302 
cou¡î_t
 
	gm_ªgFuŒ
[
MAXTHREADS
];

303 
cou¡î_t
 
	gm_issueFuŒ
[
MAXTHREADS
];

304 
cou¡î_t
 
	gm_û1Miss
[
MAXTHREADS
];

305 
cou¡î_t
 
	gm_„tchEm±y
[
MAXTHREADS
];

306 
cou¡î_t
 
	gm_STLC
[
MAXTHREADS
];

307 
cou¡î_t
 
	gm_å≠
[
MAXTHREADS
];

308 
cou¡î_t
 
	gm_LﬂdSèŒMiss
[
MAXTHREADS
];

309 
cou¡î_t
 
	gm_St‹eSèŒMiss
[
MAXTHREADS
];

310 
cou¡î_t
 
	gm_LﬂdSèŒHô
[
MAXTHREADS
];

311 
cou¡î_t
 
	gm_St‹eSèŒHô
[
MAXTHREADS
];

312 
cou¡î_t
 
	gm_LﬂdRólMiss
[
MAXTHREADS
];

313 
cou¡î_t
 
	gm_St‹eRólMiss
[
MAXTHREADS
];

314 
cou¡î_t
 
	gm_LﬂdRólHô
[
MAXTHREADS
];

315 
cou¡î_t
 
	gm_St‹eRólHô
[
MAXTHREADS
];

316 
cou¡î_t
 
	gm_LﬂdMiss
[
MAXTHREADS
];

317 
cou¡î_t
 
	gm_St‹eMiss
[
MAXTHREADS
];

318 
cou¡î_t
 
	gm_St‹eUpd©eMiss
[
MAXTHREADS
];

319 
cou¡î_t
 
	gm_upd©e_miss_dïíd_°¨t
[
MAXTHREADS
];

320 
cou¡î_t
 
	gm_upd©e_miss_Êag
[
MAXTHREADS
];

321 
cou¡î_t
 
	gUpd©eDïídCy˛e
;

322 
cou¡î_t
 
m_upd©e_miss
[
MAXTHREADS
];

324 
cou¡î_t
 
	gm_commôSèŒ
[
MAXTHREADS
];

326 
cou¡î_t
 
	gövÆid©i⁄_ª∂ay
[
MAXTHREADS
];

327 
cou¡î_t
 
	glﬂdLﬂdRïœyCou¡
[
MAXTHREADS
];

328 
	gövÆid©i⁄SèŒ
[
MAXTHREADS
], 
	gövÆid©eOthîCache
;

329 
	gcommôSèŒ
[
MAXTHREADS
];

332 
checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
);

333 
cou¡î_t
 
	glﬂdReje˘Rïœy
[
MAXTHREADS
], 
	glﬂdReje˘Cou¡
[MAXTHREADS], 
	glﬂdReje˘Sèt
[MAXTHREADS], 
	gm_sqNumLdRïœy
[MAXTHREADS], 
	gª∂ayIndex
[MAXTHREADS];

334 
	gªje˘RëryCy˛e
 = 3;

335 
cou¡î_t
 
	gldIssueCou¡
, 
	gld°Reje˘i⁄Cou¡
[
MAXTHREADS
];

337 
	g£qC⁄sRïœy
[
MAXTHREADS
], 
	g£qC⁄sIn¢Rïœy
[MAXTHREADS];

338 
cou¡î_t
 
	gtŸÆRUUsize
[
MAXTHREADS
], 
	gtŸÆLQsize
[MAXTHREADS], 
	gtŸÆSQsize
[MAXTHREADS];

339 
	gavgRUUsize
[
MAXTHREADS
], 
	gavgLQsize
[MAXTHREADS], 
	gavgSQsize
[MAXTHREADS];

341 
mè_maxthªads
;

342 
numThªads
[
MAXTHREADS
];

343 
	gcﬁÀ˘_°©s
 = 0;

344 
	gCOHERENT_CACHE
;

345 
	gMSI
;

346 
	g•ec_bíchm¨ks
;

347 
cou¡î_t
 
num_of_övÆid©i⁄s
;

349 
	gcﬁÀ˘_b¨rõr_°©s
[
CLUSTERS
];

350 
	gcﬁÀ˘_lock_°©s
[
CLUSTERS
];

351 
	g‰ìzeCou¡î
;

352 
	g°›sim
;

353 
	gÁ°fwd
;

356 
	goc_‹_cc_ac˚ss
 = 2;

357 #ifdef 
EDA


359 
ˇche_t
 *
	gˇche_dl0
[
THREADS_PER_JOB
];

361 
cou¡î_t
 
	gªcovîyCou¡
[8];

362 
cou¡î_t
 
	gnumBCQEm±y
[8];

365 
cou¡î_t
 
	göãrvÆCou¡
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

366 
cou¡î_t
 
	gtŸÆRñCE
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

367 
cou¡î_t
 
	gn⁄SktIn¢
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

368 
cou¡î_t
 
	gnumSyncIn°
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

369 
cou¡î_t
 
	gpuª_sync_ö¢
 = 0;

370 
cou¡î_t
 
	gpuª_skt_ö¢
 = 0;

373 
	$dl0_˛ónup
 ()

375 
i
;

377 
i
 = 0; i < 
numc⁄ãxts
; i++)

379 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
i
];

380 
jobId
 = 
cuºít
->
jobThdId
;

382 i‡(
cuºít
->
ma°îid
 != 0)

385 i‡(
cuºít
->
sim_num_ö¢
 > 
öãrvÆCou¡
[
jobId
])

387 
	`ÊushSñe˘ive
 (
ˇche_dl0
[
jobId
], jobId);

388 
öãrvÆCou¡
[
jobId
] +
DL0_CLEAUP_INTERVAL
;

391 
	}
}

394 
‹a˛e_°‹e_queue
 
	gOSQ
[8][
OSQ_size
];

395 
	gOSQ_num
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

396 
	gOSQ_hód
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

399 
	$födOSQ
 (
md_addr_t
 
addr
, 
width
, 
id
)

401 
i
, 
j
;

403 
i
 = (
OSQ_hód
[
id
] + 
OSQ_size
 - 1Ë% OSQ_size, 
j
 = 
OSQ_num
[id]; j > 0; j--, i = (i + OSQ_size - 1) % OSQ_size)

405 
bigWidth
 = 
OSQ
[
id
][
i
].
memWidth
 > 
width
 ? OSQ[id][i].memWidth : width;

406 
md_addr_t
 
lAddr
 = 
addr
 & ~(
bigWidth
 - 1);

407 
md_addr_t
 
osqAddr
 = 
OSQ
[
id
][
i
].
memAddr
 & ~(
bigWidth
 - 1);

409 i‡(
osqAddr
 =
lAddr
)

410  
i
;

413 
	}
}

415 #ifde‡ 
DECOUPLED_PREFETCH


416 
md_addr_t
 
	g¥efQueue
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

417 
md_addr_t
 
	g¥efQueue_pc
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

418 
cou¡î_t
 
	g¥efQueue_ö°Num
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

419 
	g¥efQueue_isWr⁄gP©h
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

420 
	g¥efQueue_hód
[
MAXTHREADS
] = 0;

421 
	g¥efQueue_èû
[
MAXTHREADS
] = 0;

422 
	g¥efQueue_size
[
MAXTHREADS
] = 0;

423 
	gmemMissC≠
 = 0;

424 
cou¡î_t
 
	gtŸÆPªfMissL©ícy
 = 0;

425 
	g¥efMissCou¡
 = 0;

426 
cou¡î_t
 
	gde˝PªfSèŒCou¡
 = 0;

427 
md_addr_t
 
	gœ°PªfAddr
 = 0;

433 
	gBRANCH_Q_NUM
;

434 
	gCHECKER_NUMBER
 = 0;

435 
	gPCB_BLK_SIZE
 = 128;

436 
	gINORDER_CHECKER
 = 0;

437 
	gOUTSTANDING_STORE_NUM
 = 128;

438 
	gcheckîVDD
, 
	gcheckîFªq
;

441 
gë_‰ì_ªg
 (, );

442 
commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
);

443 
com∂ëeWrôe
 ();

444 
öôP¨ÆÀlSimuœti⁄
 ();

445 
com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
);

446 
com∂ëeSt‹e_l
 (
thªadid
, 
md_addr_t
 
addr
, 
width
);

448 
md_Áu…_ty≥
 
WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
);

451 
£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
);

452 
fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
);

456 
li°ñt
 *
	gi‰ìli°_hód
[
MAXTHREADS
], *
	gi‰ìli°_èû
[MAXTHREADS];

457 
li°ñt
 *
	gf‰ìli°_hód
[
MAXTHREADS
], *
	gf‰ìli°_èû
[MAXTHREADS];

473 
	ghŸ•Ÿ_cy˛e_ßm∂ög_ötvl
;

476 
	gmax_ö°s
;

477 
	gmax_b¨rõr
;

480 
	g±ø˚_√…
 = 0;

481 *
	g±ø˚_›ts
[2];

484 
	gruu_ifq_size
;

487 
	gruu_bønch_≥«…y
;

490 
	g„tch_•ìd
;

494 *
	g¥ed_ty≥
;

500 *
	g¥ed_ty≥2
;

504 c⁄° 
	gcomböed2
 = 
FALSE
;

508 c⁄° 
	ghi°_imm
 = 
FALSE
;

516 
	gbimod_√…
 = 1;

517 
	gbimod_c⁄fig
[1] = { 2048 };

520 
	gtwﬁev_√…
 = 4;

521 
	gtwﬁev_c⁄fig
[4] = { 1, 1024, 8, 
FALSE
 };

524 
	gcomb_√…
 = 1;

525 
	gcomb_c⁄fig
[1] = { 1024 };

528 
	gtwobcgskew_√…
 = 6;

529 
	gtwobcgskew_c⁄fig
[6] = { 32768, 32768, 0, 22,

536 
	gtwobcgskew_√…2
 = 6;

537 
	gtwobcgskew_c⁄fig2
[6] = { 4096, 4096, 0, 12,

543 
	gøs_size
 = 8;

546 
	gbtb_√…
 = 2;

547 
	gbtb_c⁄fig
[2] = { 512, 4 };

550 
	gruu_decode_width
;

551 
	gruu_issue_width
;

555 
	gruu_ö‹dî_issue
;

556 
	gLSQ_NUM_MORE_THAN_TWO
;

559 
	gruu_ö˛ude_•ec
 = 
TRUE
;

562 
	gruu_commô_width
;

565 
	gRUU_size
 = 
RUUSIZE
;

568 
	gLSQ_size
 = 
LSQSIZE
;

570 
	gLSQ_size_˛u°î
;

572 #ifdef 
EDA


574 *
	gˇche_dl0_›t
;

577 
	gˇche_dl0_œt
;

581 *
	gˇche_dl1_›t
;

584 
	gˇche_dl1_œt
;

587 *
	gˇche_dl2_›t
;

590 
	gˇche_dl2_œt
;

592 
	gmesh_size
;

594 *
	gˇche_û1_›t
;

597 
	gˇche_û1_œt
;

600 *
	gˇche_û2_›t
;

603 
	gˇche_û2_œt
;

606 
	gÊush_⁄_sysˇŒs
;

609 
	gcom¥ess_iˇche_addrs
;

612 
	gmem_√…
 = 2;

613 
	gmem_œt
[2] = { 18, 2 };

616 
	gmem_bus_width
;

617 
	gmem_bus_•ìd
;

618 
	gmem_p‹t_num
;

621 *
	gôlb_›t
;

624 *
	gdéb_›t
;

627 
	géb_miss_œt
;

630 
	g√tw‹k_ª˚ivî
;

631 
	g√tw‹k_c⁄Êi˘
;

634 
	gªs_ülu
 = 0;

637 
	gªs_imu…
 = 0;

639 #ifde‡
PORT_PER_BANK


641 
	gªs_memb™k
 = 0;

644 
	gªs_mem_p‹t_b™k
 = 0;

646 
	gªs_memb™k_˛u°î
;

651 
	gªs_memp‹t
 = 0;

654 
	gªs_ÂÆu
 = 0;

657 
	gªs_Âmu…
 = 0;

660 
	gªs_ülu_˛u°î
 = 0;

661 
	gªs_imu…_˛u°î
 = 0;

662 
	gªs_ÂÆu_˛u°î
 = 0;

663 
	gªs_Âmu…_˛u°î
 = 0;

666 
	gd©a_width
 = 64;

669 
powî_ªsu…_ty≥
 
powî
;

673 
	ga˘ivec⁄ãxts
;

675 
	gthªad_„tch
 = 
THREADFETCHLIMIT
;

676 
	gö°_thªad_„tch
 = 
FETCHLIMIT
;

677 
	gthªad_commô
 = 0;

679 
	#ICACHEBANKS
 8

	)

681 
	gib™k
 = 0;

684 
	g¥i‹ôy¶Ÿ
 = 0;

685 
	g¥i‹ôy
[
MAXTHREADS
];

688 
	gkey
[
MAXTHREADS
];

691 #ifde‡ 
PWR_CLUSTER


692 
cou¡î_t
 
	giqøm_ac˚ss_˛
[
CLUSTERS
];

693 
cou¡î_t
 
	gfqøm_ac˚ss_˛
[
CLUSTERS
];

694 
cou¡î_t
 
	giwakeup_ac˚ss_˛
[
CLUSTERS
];

695 
cou¡î_t
 
	gfwakeup_ac˚ss_˛
[
CLUSTERS
];

696 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

697 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

698 
cou¡î_t
 
	gúegfûe_ac˚ss_˛
[
CLUSTERS
];

699 
cou¡î_t
 
	g‰egfûe_ac˚ss_˛
[
CLUSTERS
];

700 
cou¡î_t
 
	gülu1_ac˚ss_˛
[
CLUSTERS
];

701 
cou¡î_t
 
	gülu2_ac˚ss_˛
[
CLUSTERS
];

702 
cou¡î_t
 
	gÁlu1_ac˚ss_˛
[
CLUSTERS
];

703 
cou¡î_t
 
	gÁlu2_ac˚ss_˛
[
CLUSTERS
];

704 
cou¡î_t
 
	gúesu…bus_ac˚ss_˛
[
CLUSTERS
];

705 
cou¡î_t
 
	g‰esu…bus_ac˚ss_˛
[
CLUSTERS
];

708 
cou¡î_t
 
	glsq_°‹e_d©a_ac˚ss
 = 0;

710 #ifde‡
DE_CENTRALIZED_POWER_BUG


711 
cou¡î_t
 
	glsq_¥eg_ac˚ss_˛
[
LSQ_PARTS
];

712 
cou¡î_t
 
	glsq_wakeup_ac˚ss_˛
[
LSQ_PARTS
];

713 
cou¡î_t
 
	glsq_ac˚ss_˛
[
LSQ_PARTS
];

714 
	gexåa_lsq
 = 0;

715 
	gexåa_lsq_cou¡
 = 0;

716 
	gdi•_°‹e_°Æl
 = 0;

718 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

719 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

720 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

723 #ifde‡
RES1_FULL_MASK


724 
	giq_˛_fuŒ_mask
;

725 
	gfq_˛_fuŒ_mask
;

726 
	gúeg_˛_fuŒ_mask
;

727 
	g‰eg_˛_fuŒ_mask
;

728 
	gªs1_˛_thrd_mask
[
MAXTHREADS
];

731 
cou¡î_t
 
	glsq_tŸÆ_p›_cou¡_cy˛e
 = 0;

732 
cou¡î_t
 
	glsq_num_p›_cou¡_cy˛e
 = 0;

733 
cou¡î_t
 
	gúegfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

734 
cou¡î_t
 
	gúegfûe_num_p›_cou¡_cy˛e
 = 0;

735 
cou¡î_t
 
	g‰egfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

736 
cou¡î_t
 
	g‰egfûe_num_p›_cou¡_cy˛e
 = 0;

737 
cou¡î_t
 
	gúesu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

738 
cou¡î_t
 
	gúesu…bus_num_p›_cou¡_cy˛e
 = 0;

739 
cou¡î_t
 
	g‰esu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

740 
cou¡î_t
 
	g‰esu…bus_num_p›_cou¡_cy˛e
 = 0;

742 #ifde‡
PROCESS_MODEL


743 
	gLa°Sh¨edAddªss
;

744 
	gLa°Sh¨edSize
;

749 
	#MAX_PCSTAT_VARS
 8

	)

750 
	gpc°©_√…
 = 0;

751 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

754 #ifde‡
TARGET_PISA


755 
	#IACOMPRESS
(
A
Ë\

	)

756 (
	gcom¥ess_iˇche_addrs
 ? ((((
	gA
Ë- 
	gcuºít
->
	gld_ãxt_ba£
Ë>> 1Ë+ cuºít->ld_ãxt_ba£Ë: (
A
))

757 
	#ISCOMPRESS
(
SZ
Ë\

	)

758 (
com¥ess_iˇche_addrs
 ? ((
SZ
) >> 1) : (SZ))

760 
	#IACOMPRESS
(
A
Ë(A)

	)

761 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

764 
bugcom∑t_mode
;

771 
	#FU_IALU_INDEX
 0

	)

772 
	#FU_IMULT_INDEX
 1

	)

773 
	#FU_MEMPORT_INDEX
 2

	)

774 
	#FU_FPALU_INDEX
 3

	)

775 
	#FU_FPMULT_INDEX
 4

	)

778 
ªs_desc
 
	gfu_c⁄fig
[] = {

786 {
I¡ALU
, 1, 1}

796 #i‡
deföed
(
MULT_DOES_ADD
)

797 {
I¡ALU
, 1, 1},

799 {
I¡MULT
, 3, 1},

800 {
I¡DIV
, 20, 19}

810 {
RdP‹t
, 2, 1},

811 {
WrP‹t
, 2, 1}

821 {
FlﬂtADD
, 2, 1},

822 {
FlﬂtCMP
, 2, 1},

823 {
FlﬂtCVT
, 2, 1}

833 {
FlﬂtMULT
, 4, 1},

834 {
FlﬂtDIV
, 12, 12},

835 {
FlﬂtSQRT
, 24, 24}

843 
	#PRED_BR_CHANGES
 0

	)

844 
	#PRED_JR_CHANGES
 0

	)

845 
	#DYNAMIC_CHANGE
 0

	)

846 
	#METRIC_CHANGE
 0

	)

847 
	#LINEAR_PHASE
 0

	)

849 #ifde‡
ALLOW_ANY_CLUSTER


850 
	#SMALLEST_CONFIG
 
CLUSTERS


	)

852 
	#SMALLEST_CONFIG
 4

	)

854 
	ga˘uÆ_˛u°îs
 = 
CLUSTERS
;

859 #ifde‡
PORT_PER_BANK


860 
	gCACHEPORTS
;

861 
	gRES_CACHEPORTS
;

862 
RES_CACHE_PORTS
;

863 
	ga˘uÆ_ˇchï‹ts
;

865 
	ga˘uÆ_ˇchï‹ts
;

868 #ifde‡ 
CENTRALIZED_STEER


869 
	gdi•©ch_˛u°î
 = 0;

871 #ifde‡
DISPATCH_CLUSTER


872 
	gdi•©ch_˛
[
CLUSTERS
];

877 #ifde‡
N_WAY_STEER


878 #i‚de‡
FIXED_N_WAY


880 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

884 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

886 
	g°ìr_˛u°î_thrd
[
MAXTHREADS
][
CLUSTERS
];

887 
	gabs_°ìr
 = 0;

888 
°ìr_öô
 ();

890 #ifde‡ 
CLUSTER_PRIORITY


891 
	g¥i‹ôy_˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

893 #ifde‡ 
THRD_PROFILE


894 #ifde‡
mix_8_f


895 
	gn_limô_thrd
[] = { 8, 8, 8, 8, 8, 4, 2, 2 };

897 #ifde‡
mix_8_i


898 
	gn_limô_thrd
[] = { 8, 8, 8, 2, 4, 2, 2, 4 };

900 #ifde‡
mix_8_if


901 
	gn_limô_thrd
[] = { 2, 2, 2, 4, 8, 8, 8, 8 };

903 #ifde‡
mix_8_m


904 
	gn_limô_thrd
[] = { 2, 2, 2, 2, 8, 8, 8, 8 };

906 #ifde‡
mix_4_i


907 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

909 #ifde‡
mix_4_f


910 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

912 #ifde‡
mix1_4_m


913 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

915 #ifde‡
mix2_4_m


916 
	gn_limô_thrd
[] = { 2, 2, 8, 8 };

919 
	gn_limô_thrd
[
MAXTHREADS
];

921 #ifde‡ 
CMC_START_N_WAY


922 
	gn_°¨t_cmc
[
MAXTHREADS
];

923 
	gn_°¨t_thrd_cmc
[
MAXTHREADS
];

925 
	gn_°¨t_thrd
[
MAXTHREADS
];

926 
	g√ighb‹_limô_thrd
[
MAXTHREADS
];

928 #ifde‡ 
N_WAY_ADAPT


929 
	gcﬁd_°¨t
 = 1;

930 
	gùc_ﬁd
[
MAXTHREADS
];

931 
	gn_limô_thrd_ﬁd
[
MAXTHREADS
];

932 
	gsim_num_ö¢_ﬁd
[
MAXTHREADS
];

933 
upd©e_n_limô
 ();

935 #ifde‡
THRD_PRIO_ADAPT


936 
¥i‹ôy_n_way
 ();

938 #ifde‡
ADAPT_LIMIT


939 
	gad≠t_limô_thrd
[
MAXTHREADS
];

942 #ifde‡
PDG_THRD_ADAPT


943 
pdg_thrd_n_way
 ();

945 #ifde‡
PDG_THRD_PRIO_ADAPT


946 
pdg_¥i‹ôy_n_way
 ();

948 #ifde‡
COMM_OPER_LIMIT


949 #ifde‡
AVG_LIMIT


950 
	gavg_high_limô
 = 
CLUSTERS
;

951 
	gavg_high_limô_cou¡
 = 0;

953 
	ghigh_limô_thrd
[
MAXTHREADS
];

954 
	ghigh_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

955 
	ghigh_limô_di°
[
CLUSTERS
 + 1];

958 #ifde‡
PDG_ADAPT


959 
pdg_n_way
 ();

961 
	gn_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

962 
	gn_limô_di°
[
CLUSTERS
 + 1];

965 #ifde‡ 
CLUSTER_PRIORITY


967 
	g¥i‹ôy_˛
[
CLUSTERS
];

970 #ifde‡ 
PRIORITY_STEER


972 
	g¥i‹ôy_˛
[
CLUSTERS
];

974 #ifde‡ 
COMMUNICATION_STEER


975 #ifde‡
OPER_COMM_RATIO


976 
	g˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

977 
	g˛_num
[
MAXTHREADS
];

981 #ifde‡ 
THRD_WAY_CACHE


982 
	gn_ˇche_°¨t_thrd
[
MAXTHREADS
];

983 
	gn_ˇche_limô_thrd
[
MAXTHREADS
];

985 #ifde‡
N_WAY_CACHE_ADAPT


986 #ifde‡
PER_THREAD


987 
	govîÆl_n_ˇche_limô
;

988 
	g°¨t_up
;

989 
	gˇche_dl1_mis£s_ﬁd
[
MAXTHREADS
];

990 
	gˇche_dl1_hôs_ﬁd
[
MAXTHREADS
];

991 
	gˇche_dl1_miss_øã_ﬁd
[
MAXTHREADS
];

992 
	gn_ˇche_limô_ﬁd
[
MAXTHREADS
];

993 
	gn_ˇche_limô_di°
[
MAXTHREADS
][32];

994 
	gn_ˇche_limô_cou¡
;

996 #ifde‡ 
MEM_REF_PER


997 
	gˇche_miss_°abÀ_thrd
[
MAXTHREADS
];

1000 
	govîÆl_n_ˇche_limô
;

1001 
	g°¨t_up
 = 1;

1002 
	gˇche_dl1_mis£s_ﬁd
;

1003 
	gˇche_dl1_hôs_ﬁd
;

1004 
	gˇche_dl1_miss_øã_ﬁd
;

1005 
	gn_ˇche_limô_ﬁd
;

1006 
	gn_ˇche_limô_di°
[32];

1007 
	gn_ˇche_limô_cou¡
;

1009 #ifde‡ 
MEM_REF


1010 
	gˇche_miss_°abÀ
;

1016 #ifde‡ 
MEM_REF_STAT


1017 
	gmem_ªf_thrd
[
MAXTHREADS
];

1018 
	gmem_ªf
;

1021 #ifde‡
CMP_STEER


1022 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1025 #ifde‡
N_WAY_STEER


1026 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1029 
	gabs_ªs_°ìr
 = 0;

1030 
	gnum_°ìr
 = 0;

1032 
	göt_di°û±hªsh
 = (Ë(
MIN_INSN_INT
 / 6);

1033 
	gdi°û±abÀ
[
ITABLESIZE
];

1034 
èg_id_t
 
	gdi°û±abÀègid
[
ITABLESIZE
];

1035 
	gdi°ûpcou¡î
[
ITABLESIZE
];

1036 
	gdi°ûpßm∂es
[
ITABLESIZE
];

1037 
	gdi°ûpcou¡
 = 0;

1038 
	göt_di°ûp
 = 0;

1040 
	gskù≥d_br
 = 0;

1041 
	gdi°ûp
 = 0;

1042 
	gdi°ûp_vÆid
 = 0;

1044 
	gö¢16
 = 0;

1045 
	gö¢4
 = 0;

1047 
	gö¢_öãrvÆ
 = 
MIN_INSN_INT
;

1048 
	gh_ªgs
[
NUM_H_REGS
];

1050 
	gnum_£¡
 = 0;

1051 
	gnum_åùs
 = 1;

1052 
	gœ°˛u°î
 = 0;

1053 
	gö°£qnum
 = 0;

1055 
	gπhªsh
;

1056 
	gbπhªsh
;

1057 
	gm°hªsh
;

1058 
	gim°hªsh
;

1059 
	gcy˘hªsh
;

1060 
	g∫oi£
;

1061 
	gb∫oi£
;

1062 
	gm¢oi£
;

1063 
	gim¢oi£
;

1065 
	gªgdñay
 = 0;

1066 
	gªgå™s
 = 0;

1067 
	gtŸÆœt
 = 0;

1068 
	gtŸlds
 = 0;

1070 
	gÊushes
 = 0;

1071 
	gnum_Êushes
 = 0;

1072 
	g‰ì_˛u°î
 = 0;

1085 
	#CYCNOISE
 10

	)

1086 
	#NUMCYCTHRESH
 5

	)

1088 
	#STATINT
 
MIN_INSN_INT


	)

1090 
	gIIQ_size
 = 
IQSIZE
;

1091 
	gFIQ_size
 = 
FQSIZE
;

1092 
	gIPREG_size
 = 
IPREGSIZE
;

1093 
	gFPREG_size
 = 
FPREGSIZE
;

1095 
	gIIQ_size_˛u°î
;

1096 
	gFIQ_size_˛u°î
;

1097 
	gIPREG_size_˛u°î
;

1098 
	gFPREG_size_˛u°î
;

1101 #ifde‡
RAW


1102 
	gøwq_size
 = 
RAWSIZE
;

1104 #ifde‡ 
COMM_BUFF


1105 
	gtimewödow
 = 
TIMEWINDOW
;

1108 
	gn⁄_¸ô
 = 0;

1109 
	g¸ô
 = 0;

1110 
	gèb2_c‹r
 = 0;

1111 
	gèb2_öc‹r
 = 0;

1112 
	gèb2_miss
 = 0;

1113 
	gèb_c‹r
 = 0;

1114 
	gèb_öc‹r
 = 0;

1115 
	gèb_miss
 = 0;

1116 
	gèbÀ_ègs
[
MAXTHREADS
][
TABLESIZE
];

1117 
	gèbÀ_num
[
MAXTHREADS
][
TABLESIZE
];

1118 
	gèbÀ2_ègs
[
MAXTHREADS
][
TABLE2SIZE
];

1119 
	gèbÀ2_num
[
MAXTHREADS
][
TABLE2SIZE
];

1122 
	#DEV_PERIOD
 10

	)

1124 
	#DEDICATED_ADDER
 0

	)

1126 
	#DED_ADDER_LAT_DIFF
 0

	)

1128 
	gadd_Æu
 = 0;

1129 
	gn⁄add_Æu
 = 0;

1131 
	#PERFECT
 0

	)

1132 
	#PERFECTLAT
 1

	)

1133 
	gnŸw¨m
 = 1;

1134 
	gcy˛echeck
;

1138 #ifde‡
RAW


1139 
	gøwq
;

1140 
	gøwq_˛
[
CLUSTERS
];

1141 
	gøwqªady
 = 0;

1142 
	gøwqªady_˛
[
CLUSTERS
];

1143 
	gøwq_fuŒ
 = 0;

1144 
	gøwq_°Æl
 = 0;

1146 
	giissueq
;

1147 
	gfissueq
;

1149 #ifde‡
PWR_WAKE


1150 
	gúódy
 = 0;

1151 
	g‰ódy
 = 0;

1152 
	glsqªady
 = 0;

1153 
	giuƒódy
 = 0;

1154 
	gfuƒódy
 = 0;

1155 
	glsquƒódy
 = 0;

1156 
	gIREADY_cou¡
 = 0;

1157 
	gFREADY_cou¡
 = 0;

1158 
	gLSQREADY_cou¡
 = 0;

1159 
	gúódy_˛
[
CLUSTERS
];

1160 
	g‰ódy_˛
[
CLUSTERS
];

1161 
	glsqªady_˛
[
CLUSTERS
];

1162 
	giuƒódy_˛
[
CLUSTERS
];

1163 
	gfuƒódy_˛
[
CLUSTERS
];

1166 #ifde‡ 
SPLIT_LSQ


1167 
	glsq_˛
[
LSQ_PARTS
];

1168 
	glsquƒódy_˛
[
CLUSTERS
];

1173 #ifde‡ 
PARTITIONED_LSQ


1174 
	glsq_∑π_b™k
;

1175 
	glsq_∑π_˛
 = 
CLUSTERS
 / 
LSQ_PARTS
;

1176 
	glsq_∑π_thrd
;

1179 
	gúegfûe
;

1180 
	g‰egfûe
;

1181 
	gúegfûe_˛
[
CLUSTERS
];

1182 
	gõxåa_˛
[
CLUSTERS
];

1183 
	g‰egfûe_˛
[
CLUSTERS
];

1184 
	g„xåa_˛
[
CLUSTERS
];

1185 
	giissueq_˛
[
CLUSTERS
];

1186 
	gfissueq_˛
[
CLUSTERS
];

1187 
	gnum_°‹eq
[
CLUSTERS
];

1188 
	gmax_°‹eq
[
CLUSTERS
];

1189 
	gdi•_dñay
 = 0;

1191 
	göchk
 = 0;

1192 
	göchk2
 = 0;

1193 
	göchk3
 = 0;

1194 
cou¡î_t
 
	göûpchk
 = 0;

1195 
	gcycchk
 = 0;

1196 
	gcycchk2
 = 0;

1197 
	gcycchk3
 = 0;

1198 
	gbrchk
 = 0;

1199 
	gªfchk
 = 0;

1200 
	gö¢chk±
 = 0;

1201 
	gcy˛echk±
 = 0;

1202 
	gbrchk±
 = 0;

1203 
	gªfchk±
 = 0;

1204 
	gimischk±
 = 0;

1205 
	gmischk±
 = 0;

1206 
	gdñchk±
 = 0;

1207 
	g‹igöÆ_bsize
 = 0;

1208 
	gˇche_dl1_£t_shi·
 = 0;

1209 
	gpha£
 = 
SMALLEST_CONFIG
;

1210 
	gcy˛e_cou¡
[
NUMPHASES
 + 1];

1211 
	g°abÀ_cou¡
 = 0;

1212 
	g°›_ex∂
 = 0;

1214 
	gõxåa
;

1215 
	g„xåa
;

1216 
	givÆid
;

1217 
	gfvÆid
;

1219 
	gtŸ_úeg
 = 0;

1220 
	gtŸ_‰eg
 = 0;

1221 
	gtŸ_õxt
 = 0;

1222 
	gtŸ_„xt
 = 0;

1223 
	gtŸ_ö⁄dup
 = 0;

1224 
	gtŸ_‚⁄dup
 = 0;

1226 
	gcomm_dñay
 = 0;

1227 
	gnum_sögÀ
 = 0;

1228 
	giss_°Æl
 = 0;

1229 
	g„_°Æl
 = 0;

1230 
	gn_ªady
 = 0;

1231 
	gnum_£mi_f
 = 0;

1232 
	gnum_qw°Æl
 = 0;

1233 
	gö_this
 = 0;

1234 
	gnum_‰ìd
 = 0;

1235 
	gtŸ_dñ
 = 0;

1236 
	gtŸ_dñ_bw
 = 0;

1237 
	gnum_bw_of
 = 0;

1238 
	gºobö
 = 0;

1240 
	gmö_addr
 = 5600000000ULL;

1241 
	gmax_addr
 = 0;

1243 
	g°ddev
 = 0;

1244 
	gb™0
 = 0;

1245 
	gb™1
 = 0;

1246 
	gb™2
 = 0;

1247 
	gb™3
 = 0;

1248 
	gbö_acc_tŸ
 = 0;

1249 
	gbö_mis_tŸ
 = 0;

1250 
	gbö_acc
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1251 
	gbö_lds
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1252 
	gbö_tﬁ
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1253 
	gbö_mis
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1264 
	gaddr0
, 
	gaddr1
, 
	gaddr2
;

1266 
	#HIST
 4

	)

1267 
	gnum_issued
 = 0;

1268 
	giss_øã
[
HIST
];

1269 
	gissue_øã
 = 0;

1270 
	gtﬁ
[4][3];

1271 
	gtﬁ0
 = 0;

1272 
	gtﬁ1
 = 0;

1273 
	gtﬁ2
 = 0;

1274 
	gtŸ_tﬁ
 = 0;

1275 
	gtŸ_tﬁ0
 = 0;

1276 
	gtŸ_tﬁ1
 = 0;

1277 
	gtŸ_tﬁ2
 = 0;

1278 
	gtŸ_tﬁ3
 = 0;

1279 
	gb™k_c⁄f
 = 0;

1280 
	g°_b™k_c⁄f
 = 0;

1282 #ifde‡
PORT_PER_BANK


1283 
	gmiss_num
[
MAXCACHEPORTS
];

1284 
	gªf_num
[
MAXCACHEPORTS
];

1286 
	gmiss_num
[
CACHEPORTS
];

1287 
	gªf_num
[
CACHEPORTS
];

1289 
	gªf_N
;

1291 
	gdi•_time
[
MD_TOTAL_REGS
];

1292 
	gli„time1
 = 0;

1293 
	gli„time2
 = 0;

1294 
	gwaôtime1
 = 0;

1295 
	gwaôtime2
 = 0;

1296 
	gc⁄swaôtime1
 = 0;

1297 
	gc⁄swaôtime2
 = 0;

1298 
	gnum1
 = 0;

1299 
	gnum2
 = 0;

1300 
	gnum11
 = 0;

1301 
	gnum22
 = 0;

1302 
	ghi°o
[122];

1304 
	gdi•_°Æls
 = 0;

1305 
	gˇu£1
 = 0;

1306 
	gˇu£2
 = 0;

1307 
	gˇu£3
 = 0;

1308 
	gˇu£4
 = 0;

1309 
	gˇu£5
 = 0;

1312 
	gIISSUEQ_cou¡
 = 0;

1313 
	gIISSUEQ_fcou¡
 = 0;

1314 
	gFISSUEQ_cou¡
 = 0;

1315 
	gFISSUEQ_fcou¡
 = 0;

1316 
	gIPREG_cou¡
 = 0;

1317 
	gIexåa_cou¡
 = 0;

1318 
	gIPREG_fcou¡
 = 0;

1319 
	gFPREG_cou¡
 = 0;

1320 
	gFexåa_cou¡
 = 0;

1321 
	gFPREG_fcou¡
 = 0;

1323 
	gúegfûe_˛_cou¡
[
CLUSTERS
];

1324 
	gõxåa_˛_cou¡
[
CLUSTERS
];

1325 
	g‰egfûe_˛_cou¡
[
CLUSTERS
];

1326 
	g„xåa_˛_cou¡
[
CLUSTERS
];

1327 
	giissueq_˛_cou¡
[
CLUSTERS
];

1328 
	gfissueq_˛_cou¡
[
CLUSTERS
];

1330 #ifde‡ 
SPLIT_LSQ


1331 
	glsq_˛_cou¡
[
LSQ_PARTS
];

1334 
	gno_di•_˛u°î
 = 0;

1335 
	gdi•_di°
[
TOTALFETCHLIMIT
 + 1];

1337 #ifde‡
RAW


1338 
	gøwq_cou¡
 = 0;

1339 
	gøwq_fcou¡
 = 0;

1340 
	gøwq_˛_cou¡
[
CLUSTERS
];

1341 
	gøwq_di°
[
RAWSIZE
 / 
CLUSTERS
];

1344 
	#P_TOTAL_REGS
 
IPREGSIZE
+
FPREGSIZE
+1

	)

1351 
	gp_tŸÆ_ªgs
 = 
P_TOTAL_REGS
;

1353 #ifde‡
RABMAP


1354 
	gö°_u£_exåa
[
P_TOTAL_REGS
];

1355 
	g…›m≠_exåa
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1356 
	g…›m≠_¥eg
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1359 
	gshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1360 
	g•ecshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1361 
	gshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1362 
	g•ecshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1363 
	gshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1364 
	g•ecshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1365 
	gshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1366 
	g•ecshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1367 
	gshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1368 
	g•ecshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1369 
	gÀv2¥ed1
[
LEV2SIZE
];

1370 
	gÀv2¥ed2
[
LEV2SIZE
];

1371 
	gÀv2¥ed3
[
LEV2SIZE
];

1372 
	gÀv2¥ed4
[
LEV2SIZE
];

1373 
	gÀv2¥ed5
[
LEV2SIZE
];

1375 
	gb™k_¥ed_c‹r
 = 0;

1376 
	gb™k_¥ed_wr⁄g
 = 0;

1377 
	gac_b™k_¥ed_c‹r
 = 0;

1378 
	gac_b™k_¥ed_wr⁄g
 = 0;

1380 #ifde‡
CACHE_MISS_STAT


1381 
	g•ec_rdb_miss
 = 0;

1382 
	g•ec_wrb_miss
 = 0;

1383 
	gcou¡_îr‹
 = 0;

1387 
powî_∑ømëî_c›y
 ();

1389 
bö_öô
 ();

1390 
ˇche_öô
 ();

1391 
ûp_öô
 ();

1392 
b™k¥ed_öô
 ();

1393 
ªg_öô
 ();

1394 
ˇche_ch™ge_c⁄fig
 ();

1395 
rög_‰ì
 ();

1396 
ˇche_upd©e
 ();

1397 
compuã_queue
 ();

1398 
ªg_cou¡
 ();

1399 
b¥ed_öô
 ();

1402 
sim∂e_ˇche_Êush
 (
ˇche_t
 *);

1403 
˛u°î_check
 (
md_addr_t
);

1404 
b™k_upd©e
 (
md_addr_t
, , );

1405 
°_rög_œt
 (
RUU_°©i⁄
 *);

1406 
rög_œt
 (, , , );

1407 
c›y_‰om
 ();

1408 
‰ìli°_ö£π
 (, );

1409 
check_RUU_LSQ_m©ch
 ();

1410 
check_ªg
 ();

1411 
powî_˛ór
 ();

1412 
sim_cyc
 ();

1413 
ˇlcuœã_¥i‹ôy
 ();

1414 
ö£π_fûlq
 (, 
md_addr_t
);

1416 #ifde‡
CYCLE_JUMP


1417 
cy˛e_jump
 ();

1418 
rög_‰ì_jump
 ();

1420 
gíîÆ_°©
 ();

1422 #ifde‡
EVENT_CACHE_UPDATE


1423 
mshr_öô
 ();

1431 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

1434 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

1437 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

1440 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

1443 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

1446 
cou¡î_t
 
	gsim_num_bønches
 = 0;

1449 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

1451 #ifde‡
TG


1452 
cou¡î_t
 
	gtg_øã
;

1453 
cou¡î_t
 
	gtŸÆ_∑ckës_gíî©i⁄
;

1454 
cou¡î_t
 
	gtŸÆ_ªad_∑ckës_gíî©i⁄
;

1455 
cou¡î_t
 
	gtŸÆ_wrôe_∑ckës_gíî©i⁄
;

1458 
cou¡î_t
 
	gsim_cy˛e
 = 0;

1459 
cou¡î_t
 
	gglobÆ_d©a_∑ckës_gíî©i⁄
 = 0;

1460 
cou¡î_t
 
	gTŸÆMëaPackësInAŒ
 = 0;

1461 
cou¡î_t
 
	gTŸÆD©aPackësInAŒ
 = 0;

1462 
cou¡î_t
 
	gTŸÆSyncD©aPackës
 = 0;

1463 
cou¡î_t
 
	gTŸÆSyncMëaPackës
 = 0;

1464 
cou¡î_t
 
	gMëaPackës_1
;

1465 
cou¡î_t
 
	gD©aPackës_1
;

1466 
cou¡î_t
 
	gw¨mupEndCy˛e
 = 0;

1467 
cou¡î_t
 
	gd©a_∑ckës_sync
 = 0;

1468 
cou¡î_t
 
	gmëa_∑ckës_sync
 = 0;

1469 
cou¡î_t
 
	gd©a_∑ckës_£ndög
[100][100];

1470 
cou¡î_t
 
	gmëa_∑ckës_£ndög
[100][100];

1471 
cou¡î_t
 
	glök_£r_œt
[100][100];

1472 
cou¡î_t
 
	gmëa_eví_ªq_˛o£
[36];

1473 
cou¡î_t
 
	gmëa_odd_ªq_˛o£
[36];

1474 
cou¡î_t
 
	g›tiˇl_d©a_∑ckës
 = 0;

1475 
cou¡î_t
 
	g›tiˇl_mëa_∑ckës
 = 0;

1476 
cou¡î_t
 
	gmesh_d©a_∑ckës
 = 0;

1477 
cou¡î_t
 
	gmesh_mëa_∑ckës
 = 0;

1479 
cou¡î_t
 
	g∑øŒñ_sim_cy˛e
 = 1;

1480 
	gdi•2
, 
	gdi•1
;

1483 
cou¡î_t
 
	gIFQ_cou¡
;

1484 
cou¡î_t
 
	gIFQ_fcou¡
;

1485 
cou¡î_t
 
	gRUU_cou¡
;

1486 
cou¡î_t
 
	gRUU_fcou¡
;

1487 
cou¡î_t
 
	gLSQ_cou¡
;

1488 
cou¡î_t
 
	gLSQ_fcou¡
;

1490 
cou¡î_t
 
	gpÊ2Hô
 = 0;

1491 
cou¡î_t
 
	gpÊ2SecMiss
 = 0;

1492 
cou¡î_t
 
	gpÊ2PrimMiss
 = 0;

1494 #ifde‡ 
COUNT_LSQ


1495 
	gn⁄_issue_LSQ_cou¡
;

1496 
	gn⁄_issue_LSQ_fcou¡
;

1500 
cou¡î_t
 
	gsim_övÆid_addrs
;

1507 
	g±ø˚_£q
 = 0;

1515 
	g¥ed_≥r„˘
 = 
FALSE
;

1518 *
	gb¥ed_•ec_›t
;

1520 { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

1523 
ˇche_t
 *
	gˇche_û1
[
CLUSTERS
];

1526 
ˇche_t
 *
	gˇche_û2
;

1529 
ˇche_t
 *
	gˇche_dl1
[
CLUSTERS
];

1532 
ˇche_t
 *
	gˇche_dl2
;

1535 
ˇche_t
 *
	gôlb
[
CLUSTERS
];

1538 
ˇche_t
 *
	gdéb
[
CLUSTERS
];

1543 #ifde‡
LOAD_PREDICTOR


1545 
b¥ed_t
 *
	gld¥ed
;

1546 
	gld¥ed_•ec_upd©e
 = 0;

1547 
	gld¥ed_cou¡
 = 0, 
	gld¥ed_hô
 = 0;

1548 
	govî_miss
 = 0, 
	gundî_miss
 = 0;

1549 
	gˇche_miss
;

1550 
	gld_miss_thrd
[
MAXTHREADS
];

1552 #ifde‡
PDG


1553 
	gnum_pdg
 = 0;

1554 
	gpdg_di°
[
MAXTHREADS
 + 1];

1559 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

1562 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

1563 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

1564 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

1568 
	#STATVAL
(
STAT
Ë\

	)

1569 ((
	gSTAT
)->
	gsc
 =
sc_öt
 \

1570 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

1571 : ((
STAT
)->
sc
 =
sc_uöt
 \

1572 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

1573 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

1574 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

1575 : (
∑nic
("bad stat class"), 0))))

1577 
	gClu°îSåu˘
[
CLUSTERS
][CLUSTERS];

1578 
ThrdAc˚ssP©ã∫
[
MAXTHREADS
][
CLUSTERS
];

1579 
FILE
 *
outFûe
;

1580 
≥riodic_ad≠èti⁄
 ();

1582 
	g°›_„tch
 = 0;

1583 
	gœ°SimCy˛e
 = 0;

1586 
	g°¨tTakögSèti°ics
 = 0;

1588 
	#PERFECTBANKPREDICTOR
 1

	)

1591 
	$öôClu°îInfo
 ()

1593 
i
, 
l
;

1595 
i
 = 0; i < 
CLUSTERS
; i++)

1596 
l
 = 0;Ü < 
CLUSTERS
;Ü++)

1597 
Clu°îSåu˘
[
i
][
l
] = -1;

1599 
	}
}

1601 
	gHavePröãd
 = 0;

1604 
	$PrötClu°îInfo
 ()

1606 
gg
, 
º
;

1608 
º
 = 0;Ñ∏< 
CLUSTERS
;Ñr++)

1610 
	`¥ötf
 ("\n");

1611 
gg
 = 0; gg < 
CLUSTERS
; gg++)

1612 
	`¥ötf
 ("%d", 
Clu°îSåu˘
[
º
][
gg
]);

1614 
	}
}

1619 
	$mem_ac˚ss_œãncy
 (
blk_sz
)

1621 #ifde‡
MEM_MOD


1622 
chunks
 = (
ˇche_dl1
[0]->
bsize
)*
mem_p‹t_num
/ 
mem_bus_width
;

1624 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

1627 
	`as£π
 (
chunks
 > 0);

1629  ( 
mem_œt
[0] +

1630 – (()5/
mem_bus_•ìd
Ë* (
chunks
 - 1)));

1632 
	}
}

1634 #ifde‡
L2_COMM_LAT


1635 
	#L2_COMM_LAT_LOCATION
(
baddr
Ë(badd∏& (
CLUSTERS
 - 1))

	)

1643 
RUU_°©i⁄
 *
	grsCacheAc˚ss
 = 
NULL
;

1644 
FILE
 *
	gÂ_åa˚
;

1647 
dl1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1648 
md_addr_t
 
baddr
,

1649 
bsize
,

1650 
ˇche_blk_t
 *
blk
,

1651 
tick_t
 
now
,

1652 
thªadid


1653 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1654 , 
˛u°î


1658 
	gœt
;

1659 
	gwhich_thªad
, 
	gi
;

1660 
	gÊag
 = 0;

1661 
	gwhich_thªad
 = 
thªadid
;

1663 #ifde‡ 
STREAM_PREFETCHER


1665 
œunch_•
 (
baddr
, 
thªadid
);

1668 i‡(
	gˇche_dl2
)

1672 #ifde‡
DIRECTORY


1673 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, NULL, 
which_thªad
);

1675 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, 
which_thªad
);

1678 
	gdˇche2_ac˚ss
++;

1679 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1680 i‡(
	gcmd
 =
Ród
)

1681  
œt
;

1688 i‡(
	gcmd
 =
Ród
)

1689  
mem_ac˚ss_œãncy
 (
bsize
);

1695 
dl2_¥e„tch_a˘ive
;

1699 
dl2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1700 
md_addr_t
 
baddr
,

1701 
bsize
,

1702 
ˇche_blk_t
 *
blk
,

1703 
tick_t
 
now
,

1704 
thªadid


1705 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1706 , 
˛u°î


1710 #ifde‡ 
STREAM_PREFETCHER


1712 i‡(!
	gdl2_¥e„tch_a˘ive
)

1714 
ö£π_•
 (
baddr
, 
thªadid
);

1718 
	gœt
;

1723 #ifde‡
MEM_MOD


1724 
	g§c
, 
	gp‹t_num
, 
	gx
, 
	gy
;

1725 
	g§c
 = (
baddr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

1726 
	gx
 = (
§c
 /
mesh_size
);

1727 
	gy
 = (
§c
 %
mesh_size
);

1728 
	gp‹t_num
 = (
x
/(
mesh_size
/2))*2+
y
/(mesh_size/(
mem_p‹t_num
/2));

1729 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

1730 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()5/
mem_bus_•ìd
);

1732 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
);

1734  
	gœt
;

1742 
û1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1743 
md_addr_t
 
baddr
,

1744 
bsize
,

1745 
ˇche_blk_t
 *
blk
,

1746 
tick_t
 
now
,

1747 
thªadid


1748 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1749 , 
˛u°î


1753 
	gœt
 = 0;

1754 
	gm©chnum
 = 0;

1756 i‡(
	gˇche_û2
)

1759 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL,

1760 #ifde‡
DIRECTORY


1761  
NULL
,

1763 
thªadid
 
IF_L2_COMM_LAT_CL
 (
˛u°î
));

1765 
	gdˇche2_ac˚ss
++;

1766 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1768 i‡(
	gcmd
 =
Ród
)

1769  
œt
;

1771 
∑nic
 ("writesÅo instruction memoryÇot supported");

1776 i‡(
	gcmd
 =
Ród
)

1777  
mem_ac˚ss_œãncy
 (
bsize
);

1779 
∑nic
 ("writesÅo instruction memoryÇot supported");

1781  
	gœt
;

1786 
û2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1787 
md_addr_t
 
baddr
,

1788 
bsize
,

1789 
ˇche_blk_t
 *
blk
,

1790 
tick_t
 
now
,

1791 
thªadid


1792 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1793 , 
˛u°î


1799 
	gœt
 = 0;

1800 i‡(
	gcmd
 =
Ród
)

1802 #ifde‡
MEM_MOD


1803 
§c
, 
p‹t_num
, 
x
, 
y
;

1804 
	g§c
 = (
baddr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

1805 
	gx
 = (
§c
 /
mesh_size
);

1806 
	gy
 = (
§c
 %
mesh_size
);

1807 
	gp‹t_num
 = (
x
/(
mesh_size
/2))*2+
y
/(mesh_size/(
mem_p‹t_num
/2));

1808 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

1809 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()5/
mem_bus_•ìd
);

1810  
	gœt
;

1812  
mem_ac˚ss_œãncy
 (
bsize
);

1816 
∑nic
 ("writesÅo instruction memoryÇot supported");

1827 
ôlb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1828 
md_addr_t
 
baddr
,

1829 
bsize
,

1830 
ˇche_blk_t
 *
blk
,

1831 
tick_t
 
now
,

1832 
thªadid


1833 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1834 , 
˛u°î


1838 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

1841 
as£π
 (
phy_∑ge_±r
);

1844 *
	gphy_∑ge_±r
 = 0;

1847  
	géb_miss_œt
;

1852 
déb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1853 
md_addr_t
 
baddr
,

1854 
bsize
,

1855 
ˇche_blk_t
 *
blk
,

1856 
tick_t
 
now
,

1857 
thªadid


1858 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1859 , 
˛u°î


1863 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

1866 
as£π
 (
phy_∑ge_±r
);

1869 *
	gphy_∑ge_±r
 = 0;

1872  
	géb_miss_œt
;

1878 
	$sim_ªg_›ti⁄s
 (
›t_odb_t
 *
odb
)

1880 
	`›t_ªg_hódî
 (
odb
,

1885 
	`›t_ªg_uöt
 (
odb
, "-max:ö°", "maximumÇumbî o‡ö°'†tÿexecuã/thªad", (*Ë(&
max_ö°s
), 0,

1886  
TRUE
, 
NULL
);

1889 
	`›t_ªg_uöt
 (
odb
, "-max:b¨rõr", "maximumÇumbî o‡b¨rõr†tÿexecuã", (*Ë(&
max_b¨rõr
), 0,

1890  
TRUE
, 
NULL
);

1893 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:meshsize", "mesh sizêo‡thê√tw‹k", &
mesh_size
, 4,

1894  
TRUE
, 
NULL
);

1897 
	`›t_ªg_°rög_li°
 (
odb
, "-±ø˚", "gíî©êpùëø˚, i.e., <‚ame|°dout|°dîr> <ønge>", 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

1898  
FALSE
, 
NULL
, FALSE);

1901 
	`›t_ªg_nŸe
 (
odb
, "####### Network configuration #######\n");

1902 #ifde‡
OPTICAL_INTERCONNECT


1903 
	`›t_ªg_nŸe
 (
odb
, "Optical interconnect\n");

1905 #ifde‡
POPNET


1906 
	`›t_ªg_nŸe
 (
odb
, "Popnet interconnect\n");

1908 #ifde‡
CONF_BIT


1909 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation\n");

1911 #ifde‡
INV_ACK_CON


1912 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation for Invalidation\n");

1914 #ifde‡
WB_SPLIT


1915 
	`›t_ªg_nŸe
 (
odb
, "Write back split\n");

1917 #ifde‡
WB_SPLIT_NET


1918 
	`›t_ªg_nŸe
 (
odb
, "Write back split inÇetworkÜevel\n");

1920 #ifde‡
PSEUDO_SCHEDULE


1921 
	`›t_ªg_nŸe
 (
odb
, "InorderÖrobability-based scheduling (IRD)\n");

1923 #ifde‡
PSEUDO_SCHEDULE_REORDER


1924 
	`›t_ªg_nŸe
 (
odb
, "ReorderÖrobability-based scheduling (RRD)\n");

1926 #ifde‡
PSEUDO_SCHEDULE_DATA


1927 
	`›t_ªg_nŸe
 (
odb
, "Intelligent delay (IDD)\n");

1929 #ifde‡
L1_L2_CONF


1930 
	`›t_ªg_nŸe
 (
odb
, "L1ánd L2Ñeply conflictÑesolution\n");

1932 #ifde‡
ORDER_NODE


1933 
	`›t_ªg_nŸe
 (
odb
, "Ordering byÇode\n");

1935 #ifde‡
ORDER_ADDR


1936 
	`›t_ªg_nŸe
 (
odb
, "Ordering byáddr\n");

1938 
	`›t_ªg_nŸe
 (
odb
, "######Çetwork configurationÉnd ######\n");

1940 
	`›t_ªg_nŸe
 (
odb
,

1956 
	`›t_ªg_öt
 (
odb
, "-„tch:ifqsize", "ö°ru˘i⁄ fëch queuêsizê(ö in°s)", &
ruu_ifq_size
, 16,

1957  
TRUE
, 
NULL
);

1959 
	`›t_ªg_öt
 (
odb
, "-„tch:m∂©", "exå®bønch mis-¥edi˘i⁄Ü©ícy", &
ruu_bønch_≥«…y
, 7,

1960  
TRUE
, 
NULL
);

1962 
	`›t_ªg_öt
 (
odb
, "-„tch:•ìd", "•ìd o‡‰⁄t-íd o‡machöêªœtivêtÿexecuti⁄ c‹e", &
„tch_•ìd
, 1,

1963  
TRUE
, 
NULL
);

1967 
	`›t_ªg_nŸe
 (
odb
,

1978 
	`›t_ªg_°rög
 (
odb
, "-b¥ed", "bønchÖªdi˘‹Åy≥ {nŸèkí|èkí|≥r„˘|bimod|2Àv|comb|2bcgskew}", &
¥ed_ty≥
, "comb",

1979  
TRUE
, 
NULL
);

1981 
	`›t_ªg_Êag
 (
odb
, "-b¥ed:btb_u£_ma°îid", "u£ ma°îid i¿∂a˚ o‡thªadid whí i¡îa˘ög wôh BTB, givög youÖî-¥o˚s†ö°ód o‡≥r-thªadÉ¡rõs", &
b¥ed_btb_u£_ma°îid
, 
TRUE
,

1982  
TRUE
, 
NULL
);

1984 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:bimod", "bimodÆÖªdi˘‹ c⁄fig (<èbÀ size>)", 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

1985  
bimod_c⁄fig
,

1986  
TRUE
, 
NULL
, 
FALSE
);

1988 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2Àv", "2-ÀvñÖªdi˘‹ c⁄fig " "(<l1size> <l2size> <hi°_size> <x‹>)", 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

1989  
twﬁev_c⁄fig
,

1990  
TRUE
, 
NULL
, 
FALSE
);

1992 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:comb", "comböögÖªdi˘‹ c⁄fig (<mëa_èbÀ_size>)", 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

1993  
comb_c⁄fig
,

1994  
TRUE
, 
NULL
, 
FALSE
);

1997 
	`›t_ªg_öt
 (
odb
, "-di•1", "2bcgskewÅabÀ di•œ˚míàf‹Üev 1", &
di•1
, 0,

1998  
TRUE
, 
NULL
);

2001 
	`›t_ªg_öt
 (
odb
, "-di•2", "2bcgskewÅabÀ di•œ˚míàf‹Üev 2", &
di•2
, 0,

2002  
TRUE
, 
NULL
);

2005 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2bcgskew", "2Bc-gskewÖªdi˘‹ c⁄fig (<bim_size> <size> <bim_hi°_size> <g0_hi°_size> <g1_hi°_size> <mëa_hi°_size>)", 
twobcgskew_c⁄fig
, 
twobcgskew_√…
, &twobcgskew_nelt,

2006  
twobcgskew_c⁄fig
,

2007  
TRUE
, 
NULL
, 
FALSE
);

2010 
	`›t_ªg_öt
 (
odb
, "-b¥ed:øs", "ªtu∫áddªs†°ack sizê(0 f‹Çÿªtu∫ sèck)", &
øs_size
,Ñas_size,

2011  
TRUE
, 
NULL
);

2013 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:btb", "BTB c⁄fig (<num_£ts> <assocütivôy>)", 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

2014  
btb_c⁄fig
,

2015  
TRUE
, 
NULL
, 
FALSE
);

2017 
	`›t_ªg_°rög
 (
odb
, "-b¥ed:•ec_upd©e", "•ecuœtivê¥edi˘‹†upd©êö {ID|WB} (deÁu…Ç⁄-•ec)", &
b¥ed_•ec_›t
, 
NULL
,

2018  
TRUE
, 
NULL
);

2022 
	`›t_ªg_öt
 (
odb
, "-comböed2", "u£ 2 comböedÖªdi˘‹s?", &
comböed2
, 
FALSE
,

2023  
TRUE
, 
NULL
);

2025 
	`›t_ªg_öt
 (
odb
, "-hi°_imm", "upd©êbønch hi°‹y immedüãly?", &
hi°_imm
, 
FALSE
,

2026  
TRUE
, 
NULL
);

2030 
	`›t_ªg_öt
 (
odb
, "-decode:width", "ö°ru˘i⁄ decodêB/W (ö°s/cy˛e)", &
ruu_decode_width
, 5,

2031  
TRUE
, 
NULL
);

2033 #i‚de‡
REMOVE_MY_CODE


2035 
	`›t_ªg_öt
 (
odb
, "-thrdf:limô", "Numbî o‡thªad fëch (thrd/cy˛e<=8)", &
thªad_„tch
, 
THREADFETCHLIMIT
,

2036  
TRUE
, 
NULL
);

2038 
	`›t_ªg_öt
 (
odb
, "-ö°thrdf:width", "ö°ru˘i⁄ fëch B/wÖîÅhªad (ö°s/cy˛e<=decode_width)", &
ö°_thªad_„tch
, 8,

2039  
TRUE
, 
NULL
);

2042 
	`›t_ªg_öt
 (
odb
, "-ùªgf:size", "öãgîÖhysiˇ»ªgi°î fûêsizê’î clu°î)", &
IPREG_size_˛u°î
, 80,

2043  
TRUE
, 
NULL
);

2045 
	`›t_ªg_öt
 (
odb
, "-Âªgf:size", "ÊﬂtögÖoöàphysiˇ»ªgi°î fûêsizê’î clu°î)", &
FPREG_size_˛u°î
, 80,

2046  
TRUE
, 
NULL
);

2048 
	`›t_ªg_öt
 (
odb
, "-iqueue:size", "öãgî queuêsizê(ö°sË’î clu°î)", &
IIQ_size_˛u°î
, 32,

2049  
TRUE
, 
NULL
);

2051 
	`›t_ªg_öt
 (
odb
, "-fqueue:size", "ÊﬂtögÖoöàqueuêsizê(ö°sË’î clu°î)", &
FIQ_size_˛u°î
, 32,

2052  
TRUE
, 
NULL
);

2054 #ifde‡
RAW


2055 
	`›t_ªg_öt
 (
odb
, "-øwqueue:size", "ªmŸêac˚s†queuêsizê(ö°s)", &
øwq_size
, 
RAWSIZE
,

2056  
TRUE
, 
NULL
);

2059 #ifde‡
ISSUE_PER_CLUSTER


2060 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/˛u°î/cy˛e)", &
ruu_issue_width
, 4,

2061  
TRUE
, 
NULL
);

2063 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/cy˛e)", &
ruu_issue_width
, 4,

2064  
TRUE
, 
NULL
);

2067 
	`›t_ªg_Êag
 (
odb
, "-issue:ö‹dî", "ru¿pùñöêwôh in-‹dî issue", &
ruu_ö‹dî_issue
, 
FALSE
,

2068  
TRUE
, 
NULL
);

2070 
	`›t_ªg_Êag
 (
odb
, "-issue:wr⁄g∑th", "issuêö°ru˘i⁄†dow¿wr⁄gÉxecuti⁄Ö©hs", &
ruu_ö˛ude_•ec
, 
TRUE
,

2071  
TRUE
, 
NULL
);

2074 
	`›t_ªg_öt
 (
odb
, "-commô:width", "ö°ru˘i⁄ commô B/W (ö°s/thªad/cy˛e)", &
ruu_commô_width
, 4,

2075  
TRUE
, 
NULL
);

2078 
	`›t_ªg_öt
 (
odb
, "-ruu:size", "ªgi°î upd©êunô (RUUËsize", &
RUU_size
, 16,

2079  
TRUE
, 
NULL
);

2082 
	`›t_ªg_öt
 (
odb
, "-lsq:size", "lﬂd/°‹êqueuê(LSQËsizê’î clu°î)", &
LSQ_size_˛u°î
, 8,

2083  
TRUE
, 
NULL
);

2085 
	`›t_ªg_öt
 (
odb
, "-lq:size", "lﬂd queuê(LQËsize", &
m_shLQSize
, 8,

2086  
TRUE
, 
NULL
);

2088 
	`›t_ªg_öt
 (
odb
, "-sq:size", "°‹êqueuê(SQËsize", &
m_shSQSize
, 8,

2089  
TRUE
, 
NULL
);

2091 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:vdd", "checkî vdd", &
checkîVDD
, 0.6,

2092  
TRUE
, 
NULL
);

2094 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:‰eq", "checkîÑu¬ögáàwh© fø˘i⁄ o‡fuŒ fªq", &
checkîFªq
, 0.5,

2095  
TRUE
, 
NULL
);

2098 
	`›t_ªg_nŸe
 (
odb
,

2108 #ifdef 
EDA


2109 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl0", "l0 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl0_›t
, "dl0:128:32:4:l",

2110  
TRUE
, 
NULL
);

2112 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl0œt", "l0 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl0_œt
, 1,

2113  
TRUE
, 
NULL
);

2116 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl1", "l1 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl1_›t
, "dl1:128:32:4:l",

2117  
TRUE
, 
NULL
);

2119 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl1œt", "l1 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl1_œt
, 1,

2120  
TRUE
, 
NULL
);

2122 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl2", "l2 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

2123  
TRUE
, 
NULL
);

2125 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl2œt", "l2 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl2_œt
, 6,

2126  
TRUE
, 
NULL
);

2128 #ifde‡
TG


2129 
	`›t_ªg_öt
 (
odb
, "-ˇche:tgøã", "åaffi¯gíî©i⁄Ñ©e", &
tg_øã
, 100,

2130  
TRUE
, 
NULL
);

2132 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û1", "l1 in° cachêc⁄fig, i.e., {<c⁄fig>|dl1|dl2|n⁄e}", &
ˇche_û1_›t
, "il1:512:32:1:l",

2133  
TRUE
, 
NULL
);

2135 
	`›t_ªg_nŸe
 (
odb
,

2145 
	`›t_ªg_öt
 (
odb
, "-ˇche:û1œt", "l1 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û1_œt
, 1,

2146  
TRUE
, 
NULL
);

2148 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û2", "l2 in°ru˘i⁄ cachêc⁄fig, i.e., {<c⁄fig>|dl2|n⁄e}", &
ˇche_û2_›t
, "dl2",

2149  
TRUE
, 
NULL
);

2151 
	`›t_ªg_öt
 (
odb
, "-ˇche:û2œt", "l2 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û2_œt
, 6,

2152  
TRUE
, 
NULL
);

2154 #ifde‡
L2_COMM_LAT


2155 
	`›t_ªg_Êag
 (
odb
, "-ˇche:l2commœt", "whëhîÅÿhavê®di°ribuãd L2 wôh communiˇti⁄Ü©ícõ†added", &
l2_comm_œt_íabÀd
, 
FALSE
, 
TRUE
, 
NULL
);

2158 
	`›t_ªg_Êag
 (
odb
, "-ˇche:Êush", "Êush cache†⁄ sy°em cÆls", &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

2160 
	`›t_ªg_Êag
 (
odb
, "-ˇche:icom¥ess", "c⁄vîà64-bô in°áddªs£†tÿ32-bô in°ÉquivÆíts", &
com¥ess_iˇche_addrs
, 
FALSE
,

2161  
TRUE
, 
NULL
);

2164 
	`›t_ªg_öt_li°
 (
odb
, "-mem:œt", "mem‹yác˚s†œãncy (<fú°_chunk> <öãr_chunk>)", 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

2165  
TRUE
, 
NULL
, 
FALSE
);

2167 
	`›t_ªg_öt
 (
odb
, "-mem:width", "mem‹yác˚s†bu†width (ö byãs)", &
mem_bus_width
, 8,

2168  
TRUE
, 
NULL
);

2169 
	`›t_ªg_Êﬂt
 (
odb
, "-mem:•ìd", "mem‹yác˚s†bu†•ìd (ö GHz)", &
mem_bus_•ìd
, 1.25,

2170  
TRUE
, 
NULL
);

2171 
	`›t_ªg_öt
 (
odb
, "-mem:p‹ts", "mem‹yác˚s†p‹ànumbî", &
mem_p‹t_num
, 4,

2172  
TRUE
, 
NULL
);

2175 
	`›t_ªg_°rög
 (
odb
, "-éb:ôlb", "ö°ru˘i⁄ TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

2177 
	`›t_ªg_°rög
 (
odb
, "-éb:déb", "d©®TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

2179 
	`›t_ªg_öt
 (
odb
, "-éb:œt", "ö°/d©®TLB mis†œãncy (ö cy˛es)", &
éb_miss_œt
, 30,

2180  
TRUE
, 
NULL
);

2182 #ifde‡
NET_ALGR


2186 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:ªc_Ægr", "ª˚ivîálg‹ism f‹Çëw‹k", &
√tw‹k_ª˚ivî
, 0,

2187  
TRUE
, 
NULL
);

2188 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:√t_Ægr", "c⁄Êi˘i⁄álg‹ism f‹Çëw‹k", &
√tw‹k_c⁄Êi˘
, 0,

2189  
TRUE
, 
NULL
);

2193 
	`›t_ªg_öt
 (
odb
, "-ªs:ülu", "tŸÆÇumbî o‡öãgî ALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ülu_˛u°î
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

2194  
TRUE
, 
NULL
);

2196 #i‚de‡
ALU_MERGE


2197 
	`›t_ªg_öt
 (
odb
, "-ªs:imu…", "tŸÆÇumbî o‡öãgî mu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_imu…_˛u°î
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

2198  
TRUE
, 
NULL
);

2201 
	`›t_ªg_öt
 (
odb
, "-maxThrds", "Maximum Numbî o‡Thªad†AŒowed", &
mè_maxthªads
, 1, 
TRUE
, 
NULL
);

2203 
	`›t_ªg_Êag
 (
odb
, "-Cohîít_Cache", "CohîíàCache", &
COHERENT_CACHE
, 1, 
TRUE
, 
NULL
);

2205 
	`›t_ªg_Êag
 (
odb
, "-MSI_¥Ÿ", "MSI PrŸocﬁ", &
MSI
, 0, 
TRUE
, 
NULL
);

2207 
	`›t_ªg_Êag
 (
odb
, "-SPEC", "SPEC Bíchm¨ks", &
•ec_bíchm¨ks
, 1, 
TRUE
, 
NULL
);

2209 #ifde‡ 
PORT_PER_BANK


2210 
	`›t_ªg_öt
 (
odb
, "-ªs:memb™k", "numbî o‡d©®ˇchêb™k†avaûabÀ (≥∏Clu°îÅÿCPU)", &
ªs_memb™k_˛u°î
, 2,

2211  
TRUE
, 
NULL
);

2213 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (≥∏b™k)", &
ªs_mem_p‹t_b™k
, 1,

2214  
TRUE
, 
NULL
);

2216 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (tÿCPU)", &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

2217  
TRUE
, 
NULL
);

2220 
	`›t_ªg_öt
 (
odb
, "-ªs:ÂÆu", "tŸÆÇumbî o‡ÊﬂtögÖoöàALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ÂÆu_˛u°î
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

2221  
TRUE
, 
NULL
);

2223 #i‚de‡
ALU_MERGE


2224 
	`›t_ªg_öt
 (
odb
, "-ªs:Âmu…", "tŸÆÇumbî o‡ÊﬂtögÖoöàmu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_Âmu…_˛u°î
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

2225  
TRUE
, 
NULL
);

2228 
	`›t_ªg_°rög_li°
 (
odb
, "-pc°©", "¥ofûê°©(sËagaö°Åexàaddr'†(mu… u£†ok)", 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

2229  
FALSE
, 
NULL
, 
TRUE
);

2231 
	`›t_ªg_Êag
 (
odb
, "-bugcom∑t", "›î©êö backw¨d-com∑tibÀ bug†modê(f‹Åe°ög o∆y)", &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

2233 
	`›t_ªg_öt
 (
sim_odb
, "-hŸ•Ÿ:ßm∂ög_ötvl", "how m™y cy˛e†bëwì¿ˇŒ†tÿupd©e_hŸ•Ÿ_°©s", &
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
,

2234  10000, 
FALSE
, 
NULL
);

2236 
	`›t_ªg_öt
 (
odb
, "-øy:dißbÀd", "øyá˘ive", &
dißbÀ_øy
, 1,

2237  
TRUE
, 
NULL
);

2239 
	`˛u°î_ªg_›ti⁄s
 (
odb
);

2240 
	`hŸ•Ÿ_ªg_›ti⁄s
 (
odb
);

2243 #ifde‡
MC


2244 
	`√tw‹k_ªg_›ti⁄s
 (
odb
);

2246 #ifde‡
OPTICAL_INTERCONNECT


2247 
	`›tiˇl_›ti⁄s
 (
odb
);

2250 
	}
}

2254 
	$sim_check_›ti⁄s
 (
›t_odb_t
 *
odb
,

2255 
¨gc
, **
¨gv
)

2257 
«me
[128], 
c
;

2258 
n£ts
, 
bsize
, 
assoc
;

2260 
i
;

2261 
c⁄ãxt
 *
cuºít
;

2263 #ifde‡
LOAD_PREDICTOR


2265 
ld¥ed
 = 
	`b¥ed_¸óã
 (
LDPªd2bô
,

2266  
bimod_c⁄fig
[0],

2278 #ifde‡
ISU_N2


2279 i‡(
ruu_issue_width
 < 1)

2280 
	`Áèl
 ("issue width must beÖositiveÇon-zero");

2282 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width - 1)) != 0)

2283 
	`Áèl
 ("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

2288 
IIQ_size
 = 
IIQ_size_˛u°î
;

2289 
FIQ_size
 = 
FIQ_size_˛u°î
;

2290 
IPREG_size
 = 
IPREG_size_˛u°î
;

2291 
FPREG_size
 = 
FPREG_size_˛u°î
;

2293 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2295 i‡(
IIQ_size
 < 1)

2296 
	`Áèl
 ("integer queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2298 i‡(
FIQ_size
 < 1)

2299 
	`Áèl
 ("floatingÖoint queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2301 #i‚de‡
REG_RENAME_CONFIGUARE


2302 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2305 i‡(
IPREG_size
 < 1)

2306 
	`Áèl
 ("integerÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2308 i‡(
FPREG_size
 < 1)

2309 
	`Áèl
 ("floatingÖointÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2311 #ifde‡
RAW


2312 
øwq_size
 = 
IIQ_size
;

2313 i‡(
øwq_size
 < 1 ||Ñawq_sizê> 
RAWSIZE
)

2314 
	`Áèl
 ("ªmŸêac˚s†queuê(%dËmu° bêposôivên⁄-zîÿ™dÜes†th™ RAWSIZE (%d)", 
øwq_size
, 
RAWSIZE
);

2317 i‡(
ruu_commô_width
 < 1)

2318 
	`Áèl
 ("commit width must beÖositiveÇon-zero");

2320 i‡(
RUU_size
 < 2 || (RUU_sizê> 
RUUSIZE
))

2321 
	`Áèl
 ("RUU sizêmu° bê®posôivênumbî > 1ánd < %d", 
RUUSIZE
);

2323 
LSQ_size
 = 
LSQ_size_˛u°î
;

2325 i‡(
LSQ_size
 < 2 || (LSQ_sizê> 
LSQSIZE
))

2326 
	`Áèl
 ("LSQ sizêmu° bê®posôivênumbî > 1ánd < %d", 
LSQSIZE
);

2328 #ifdef 
EDA


2330 i‡(!
	`my°ricmp
 (
ˇche_dl0_›t
, "none"))

2332 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2333 
ˇche_dl0
[
i
] = 
NULL
;

2337 i‡(
	`ssˇnf
 (
ˇche_dl0_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2338 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2340 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2342 
ˇche_dl0
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2343  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2344 
dl0_ac˚ss_‚
, 
ˇche_dl0_œt
, 
i
);

2345 #ifde‡
CACHE_SET_STAT


2346 i‡(
ˇche_dl0
[
i
]->
n£ts
 > 
MAXCACHESET
)

2347 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2354 i‡(!
	`my°ricmp
 (
ˇche_dl1_›t
, "none"))

2357 i‡(
	`°rcmp
 (
ˇche_dl2_›t
, "none"))

2358 
	`Áèl
 ("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

2359 
ˇche_dl2
 = 
NULL
;

2363 i‡(
	`ssˇnf
 (
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2364 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2366 
i
 = 0; i < 
CLUSTERS
; i++)

2368 
ˇche_dl1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2369  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2370 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
, 
i
);

2372 #ifde‡
CACHE_SET_STAT


2373 i‡(
ˇche_dl1
[
i
]->
n£ts
 > 
MAXCACHESET
)

2374 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2377 
ˇche_dl1_£t_shi·
 = 
ˇche_dl1
[0]->
£t_shi·
;

2378 
‹igöÆ_bsize
 = 
bsize
;

2380 i‡(!
	`my°ricmp
 (
ˇche_dl2_›t
, "none"))

2381 
ˇche_dl2
 = 
NULL
;

2384 i‡(
	`ssˇnf
 (
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2385 
	`Áèl
 ("badÜ2 D-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2387 
ˇche_dl2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2388  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2389 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
, -1);

2394 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "none"))

2396 
ˇche_û1
[0] = 
NULL
;

2399 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2400 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2401 
ˇche_û2
 = 
NULL
;

2403 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl1"))

2406 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2407 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2408 
ˇche_û2
 = 
NULL
;

2410 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl2"))

2412 i‡(!
ˇche_dl2
)

2413 
	`Áèl
 ("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

2414 
ˇche_û1
[0] = 
ˇche_dl2
;

2417 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2418 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2419 
ˇche_û2
 = 
NULL
;

2423 i‡(
	`ssˇnf
 (
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2424 
	`Áèl
 ("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2426 
i
 = 0; i < 
CLUSTERS
; i++)

2428 
ˇche_û1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2429  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2430 
û1_ac˚ss_‚
, 
ˇche_û1_œt
, 
i
);

2433 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "none"))

2434 
ˇche_û2
 = 
NULL
;

2435 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "dl2"))

2437 i‡(!
ˇche_dl2
)

2438 
	`Áèl
 ("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

2439 
ˇche_û2
 = 
ˇche_dl2
;

2443 i‡(
	`ssˇnf
 (
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2444 
	`Áèl
 ("badÜ2 I-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2446 
ˇche_û2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2447  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2448 
û2_ac˚ss_‚
, 
ˇche_û2_œt
, -1);

2453 
i
 = 0; i < 
CLUSTERS
; i++)

2455 i‡(
	`ssˇnf
 (
ôlb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2456 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2458 
ôlb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2459   (
md_addr_t
), 
assoc
,

2460 
	`ˇche_ch¨2pﬁicy
 (
c
), 
ôlb_ac˚ss_‚
,

2461  1, 
i
);

2464 
i
 = 0; i < 
CLUSTERS
; i++)

2466 i‡(
	`ssˇnf
 (
déb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2467 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2468 
déb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2469   (
md_addr_t
), 
assoc
,

2470 
	`ˇche_ch¨2pﬁicy
 (
c
), 
déb_ac˚ss_‚
,

2471  1, 
i
);

2474 i‡(
ˇche_dl1_œt
 < 1)

2475 
	`Áèl
 ("l1 data cacheÜatency must be greaterÅhan zero");

2477 i‡(
ˇche_dl2_œt
 < 1)

2478 
	`Áèl
 ("l2 data cacheÜatency must be greaterÅhan zero");

2480 i‡(
ˇche_û1_œt
 < 1)

2481 
	`Áèl
 ("l1 instruction cacheÜatency must be greaterÅhan zero");

2483 i‡(
ˇche_û2_œt
 < 1)

2484 
	`Áèl
 ("l2 instruction cacheÜatency must be greaterÅhan zero");

2486 i‡(
mem_√…
 != 2)

2487 
	`Áèl
 ("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

2489 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

2490 
	`Áèl
 ("all memoryáccessÜatencies must be greaterÅhan zero");

2492 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width - 1)) != 0)

2493 
	`Áèl
 ("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

2495 i‡(
éb_miss_œt
 < 1)

2496 
	`Áèl
 ("TLB missÜatency must be greaterÅhan zero");

2498 
ªs_ülu
 = 
ªs_ülu_˛u°î
 * 
CLUSTERS
;

2500 i‡(
ªs_ülu
 < 1)

2501 
	`Áèl
 ("number of integer ALU's must be greaterÅhan zero");

2502 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

2503 
	`Áèl
 ("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

2505 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

2507 #i‚de‡
ALU_MERGE


2508 
ªs_imu…
 = 
ªs_imu…_˛u°î
 * 
CLUSTERS
;

2509 i‡(
ªs_imu…
 < 1)

2510 
	`Áèl
 ("number of integer multiplier/dividers must be greaterÅhan zero");

2511 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

2512 
	`Áèl
 ("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

2513 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

2516 #ifde‡
PORT_PER_BANK


2517 
ªs_memb™k
 = 
ªs_memb™k_˛u°î
 * 
CLUSTERS
;

2519 i‡(
ªs_memb™k
 < 1)

2520 
	`Áèl
 ("number of memory system banks must be greaterÅhan zero");

2523 #ifde‡ 
PARTITIONED_LSQ


2524 
lsq_∑π_b™k
 = 
ªs_memb™k
 / 
LSQ_PARTS
;

2526 i‡(
ªs_mem_p‹t_b™k
 < 1)

2527 
	`Áèl
 ("number of memory systemÖorts/bank must be greaterÅhan zero");

2528 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAX_INSTS_PER_CLASS
)

2529 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2530 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAXCACHEPORTS
)

2531 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAXCACHEPORTS");

2532 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

2534 i‡(
ªs_memp‹t
 < 1)

2535 
	`Áèl
 ("number of memory systemÖorts must be greaterÅhan zero");

2536 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

2537 
	`Áèl
 ("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2538 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

2541 
ªs_ÂÆu
 = 
ªs_ÂÆu_˛u°î
 * 
CLUSTERS
;

2542 i‡(
ªs_ÂÆu
 < 1)

2543 
	`Áèl
 ("number of floatingÖoint ALU's must be greaterÅhan zero");

2544 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

2545 
	`Áèl
 ("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

2546 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

2548 #i‚de‡
ALU_MERGE


2549 
ªs_Âmu…
 = 
ªs_Âmu…_˛u°î
 * 
CLUSTERS
;

2550 i‡(
ªs_Âmu…
 < 1)

2551 
	`Áèl
 ("number of floatingÖoint multiplier/dividers must be > zero");

2552 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

2553 
	`Áèl
 ("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

2554 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

2556 #ifde‡
TOKENB


2557 i‡(
tokíB
)

2558 
	`tc_öô
 (
MAXTHREADS
, 
ˇche_dl2
->
assoc
 * cache_dl2->
n£ts
, cache_dl2->
bsize
);

2559 i‡(
LSQ_PARTS
 !(
n_way_ˇche
 * 
MAXTHREADS
))

2560 
	`Áèl
 ("This only supports 1 cacheÖerÅhread");

2562 #ifde‡
MC


2563 
	`√tw‹k_check_›ti⁄s
 ();

2565 
	`˛u°î_check_›ti⁄s
 ();

2566 
	`öô_lök_des¸_èbÀs
 ();

2567 
	`öô_routög_èbÀ
 ();

2568 
	`¨bôøry_routög_èbÀ_öô
 ();

2569 
	}
}

2573 
	$sim_aux_c⁄fig
 (
FILE
 * 
°ªam
)

2576 
	}
}

2579 
cou¡î_t
 
	gtŸÆUpgødes
 = 0;

2580 
cou¡î_t
 
	gtŸÆNëUpgødes
 = 0;

2581 
cou¡î_t
 
	gtŸÆUpgødesUßbÀ
 = 0;

2582 
cou¡î_t
 
	gtŸÆUpgødesBíeficül
 = 0;

2584 
cou¡î_t
 
	gtŸÆNëWrôes
 = 0;

2585 
cou¡î_t
 
	gtŸÆWrôesUßbÀ
 = 0;

2586 
cou¡î_t
 
	gtŸÆWrôesBíeficül
 = 0;

2587 
cou¡î_t
 
	gex˛usive_somewhîe
 = 0;

2588 
cou¡î_t
 
	g‰⁄t_wrôe
 = 0;

2589 #ifde‡
EUP_NETWORK


2590 
cou¡î_t
 
	gEUP_íåy_fuŒ
 = 0;

2593 
cou¡î_t
 
	gtŸÆL2WrôeReqHôs
 = 0;

2594 
cou¡î_t
 
	gtŸÆL2WrôeReqNoSh¨î
 = 0;

2595 
cou¡î_t
 
	gtŸÆL2WrôeReqDúty
 = 0;

2596 
cou¡î_t
 
	gdñayL2WrôeReqDúty
 = 0;

2597 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨ed
 = 0;

2598 
cou¡î_t
 
	gdñayL2WrôeReqSh¨ed
 = 0;

2600 
cou¡î_t
 
	gtŸÆL2RódReqHôs
 = 0;

2601 
cou¡î_t
 
	gtŸÆL2RódReqNoSh¨î
 = 0;

2602 
cou¡î_t
 
	gtŸÆL2RódReqDúty
 = 0;

2603 
cou¡î_t
 
	gdñayL2RódReqDúty
 = 0;

2605 
cou¡î_t
 
	gtŸÆL2RódReqSh¨ed
 = 0;

2606 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨edWT
 = 0;

2607 
cou¡î_t
 
	gtŸÆL2WrôeReqDútyWT
 = 0;

2608 
cou¡î_t
 
	gtŸÆL2RódReqDútyWT
 = 0;

2610 
cou¡î_t
 
	gtŸÆL1LöePªfU£
 = 0;

2611 
cou¡î_t
 
	gtŸÆL1LöePªfNoU£
 = 0;

2612 
cou¡î_t
 
	gtŸÆL1LöeRódU£
 = 0;

2613 
cou¡î_t
 
	gtŸÆL1LöeRódNoU£
 = 0;

2614 
cou¡î_t
 
	gtŸÆL1LöeWrôeU£
 = 0;

2615 
cou¡î_t
 
	gtŸÆL1LöeWrôeNoU£
 = 0;

2617 
cou¡î_t
 
	gtŸÆL1LöeExlU£d
 = 0;

2618 
cou¡î_t
 
	gtŸÆL1LöeExlInv
 = 0;

2619 
cou¡î_t
 
	gtŸÆL1LöeExlDr›
 = 0;

2621 
cou¡î_t
 
	gtŸÆL2ReqPrimMiss
 = 0;

2622 
cou¡î_t
 
	gtŸÆL2ReqSecMiss
 = 0;

2623 
cou¡î_t
 
	gtŸÆL2ReqHô
 = 0;

2624 
cou¡î_t
 
	gtŸÆL2ReqInTøns
 = 0;

2625 
cou¡î_t
 
	gtŸÆL2OwnReqInTøns
 = 0;

2626 
cou¡î_t
 
	gtŸÆL2ReqInInv
 = 0;

2628 
cou¡î_t
 
	gdñayL2ReqPrimMiss
 = 0;

2629 
cou¡î_t
 
	gdñayL2ReqSecMiss
 = 0;

2630 
cou¡î_t
 
	gdñayL2ReqHô
 = 0;

2631 
cou¡î_t
 
	gdñayL2ReqInTøns
 = 0;

2632 
cou¡î_t
 
	gdñayL2OwnReqInTøns
 = 0;

2633 
cou¡î_t
 
	gdñayL2ReqInInv
 = 0;

2635 
cou¡î_t
 
	gtŸÆWrôeReq
 = 0;

2636 
cou¡î_t
 
	gtŸÆWrôeReqInv
 = 0;

2637 
cou¡î_t
 
	gtŸÆWrôeDñay
 = 0;

2638 
cou¡î_t
 
	gtŸÆWrôeInvDñay
 = 0;

2639 
cou¡î_t
 
	gtŸÆUpgødeReq
 = 0;

2640 
cou¡î_t
 
	gtŸÆUpgødeReqInv
 = 0;

2641 
cou¡î_t
 
	gtŸÆUpgødeDñay
 = 0;

2642 
cou¡î_t
 
	gtŸÆUpgødeInvDñay
 = 0;

2644 
cou¡î_t
 
	gcou¡N⁄AŒocRódE¨ly
 = 0;

2648 
	$sim_ªg_°©s
 (
°©_sdb_t
 *
sdb
)

2650 
i
, 
j
;

2653 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög c⁄si°ícyÑïœy in°ru˘i⁄s", &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

2654 
	`°©_ªg_cou¡î
 (
sdb
, "puª_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
puª_num_ö¢
,Öuª_num_ö¢, 
NULL
);

2655 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãd in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
tŸÆ_num_ö¢
,ÅŸÆ_num_ö¢, 
NULL
);

2656 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆB¨rõrs", "tŸÆÇumbî o‡b¨rõrs", &
TŸÆB¨rõrs
, 0, 
NULL
);

2657 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆLocks", "tŸÆÇumbî o‡locks", &
TŸÆLocks
, 0, 
NULL
);

2658 #ifdef 
EDA


2659 
	`°©_ªg_cou¡î
 (
sdb
, "puª_sync_ö¢", "tŸÆÇumbî o‡maöÅhªad syn¯ö°ru˘i⁄†commôãd", &
puª_sync_ö¢
,Öuª_sync_ö¢, 
NULL
);

2660 
	`°©_ªg_cou¡î
 (
sdb
, "puª_skt_ö¢", "tŸÆÇumbî o‡maöÅhªad skàö°ru˘i⁄†commôãd", &
puª_skt_ö¢
,Öuª_skt_ö¢, 
NULL
);

2662 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†commôãd", &
sim_num_ªfs
, 0, 
NULL
);

2663 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_lﬂds", "tŸÆÇumbî o‡lﬂd†commôãd", &
sim_num_lﬂds
, 0, 
NULL
);

2664 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_num_°‹es", "tŸÆÇumbî o‡°‹e†commôãd", "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

2665 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_bønches", "tŸÆÇumbî o‡bønche†commôãd", &
sim_num_bønches
, 0, 
NULL
);

2666 
	`°©_ªg_öt
 (
sdb
, "sim_ñ≠£d_time", "tŸÆ simuœti⁄Åimêö sec⁄ds", &
sim_ñ≠£d_time
, 0, 
NULL
);

2667 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_ö°_øã", "simuœti⁄ s≥ed (ö in°s/£c)", "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

2668 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†execuãd", &
sim_tŸÆ_ö¢
, 0, 
NULL
);

2669 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†execuãd", &
sim_tŸÆ_ªfs
, 0, 
NULL
);

2670 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_lﬂds", "tŸÆÇumbî o‡lﬂd†execuãd", &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

2671 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_tŸÆ_°‹es", "tŸÆÇumbî o‡°‹e†execuãd", "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

2672 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_bønches", "tŸÆÇumbî o‡bønche†execuãd", &
sim_tŸÆ_bønches
, 0, 
NULL
);

2674 
	`°©_ªg_cou¡î
 (
sdb
, "sim_cy˛e", "tŸÆ simuœti⁄Åimêö cy˛es", &
sim_cy˛e
, 0, 
NULL
);

2675 
	`°©_ªg_cou¡î
 (
sdb
, "ªÆSimCy˛e", "", &
ªÆSimCy˛e
, 0, 
NULL
);

2676 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_IPC", "ö°ru˘i⁄†≥∏cy˛e", "sim_num_ö¢ / sim_cy˛e", 
NULL
);

2677 
	`°©_ªg_f‹muœ
 (
sdb
, "ªÆSimIPC", "", "puª_num_ö¢ /ÑólSimCy˛e", 
NULL
);

2678 
	`°©_ªg_f‹muœ
 (
sdb
, "maöEf„˘iveIPC", "", "puª_num_ö¢ / (ªÆSimCy˛ê- maö_thªad_°Æl_cou¡)", 
NULL
);

2679 
	`°©_ªg_cou¡î
 (
sdb
, "num_of_övÆid©i⁄s", "Numbî_Of_VÆid©i⁄s", &
num_of_övÆid©i⁄s
, 0, 
NULL
);

2681 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

2682 
	`°©_ªg_cou¡î
 (
sdb
, "busU£d", "Numbî o‡time†bu†i†u£d", &
busU£d
, 0, 
NULL
);

2683 
	`°©_ªg_cou¡î
 (
sdb
, "busOccu∑ncy", "Occu∑ncy o‡bu†öÇumbî o‡cy˛es", &
busOccu∑ncy
, 0, 
NULL
);

2684 
	`°©_ªg_f‹muœ
 (
sdb
, "busOccu∑ncyPîCy˛e", "Bu†occu∑ncyÖî cy˛e", "busOccu∑ncy /ÑólSimCy˛e", 
NULL
);

2685 
	`°©_ªg_cou¡î
 (
sdb
, "°ÆlNoBusSlŸ", "°ÆlNoBusSlŸ", &
°ÆlNoBusSlŸ
, 0, 
NULL
);

2687 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_CPI", "cy˛e†≥∏ö°ru˘i⁄", "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

2688 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_exec_BW", "tŸÆ in°ru˘i⁄†(mis-•e¯+ commôãdË≥∏cy˛e", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2689 
	`°©_ªg_cou¡î
 (
sdb
, "ldIssueCou¡", "tŸÆÜd issuê©tmït", &
ldIssueCou¡
, 0, 
NULL
);

2690 #ifde‡
PULL_BACK


2691 
ch2
[32];

2693 
i
 = 0; i < 
numc⁄ãxts
; i++)

2695 
	`•rötf
 (
ch2
, "puŒbackCy˛eC¡_%d", 
i
);

2696 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
puŒbackCy˛eCou¡
[
i
], 0, 
NULL
);

2699 #ifde‡
DIRECTORY


2700 
	`°©_ªg_cou¡î
 (
sdb
, "max_lsq_num", "", &
LSQ_NUM_MORE_THAN_TWO
, 0, 
NULL
);

2701 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†öáŒ", &
TŸÆD©aPackësInAŒ
, 0, 
NULL
);

2702 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†öáŒ", &
TŸÆMëaPackësInAŒ
, 0, 
NULL
);

2703 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_sync_cou¡s", "tŸÆÇum o‡d©®syn¯∑ckë†öáŒ", &
TŸÆSyncD©aPackës
, 0, 
NULL
);

2704 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mëa_sync_cou¡s", "tŸÆÇum o‡më®syn¯∑ckë†öáŒ", &
TŸÆSyncMëaPackës
, 0, 
NULL
);

2705 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›tiˇl_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†ö o±iˇ»√tw‹k", &
›tiˇl_d©a_∑ckës
, 0, 
NULL
);

2706 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›tiˇl_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†ö o±iˇ»√tw‹k", &
›tiˇl_mëa_∑ckës
, 0, 
NULL
);

2707 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†ö meshÇëw‹k", &
mesh_d©a_∑ckës
, 0, 
NULL
);

2708 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†ö meshÇëw‹k", &
mesh_mëa_∑ckës
, 0, 
NULL
);

2709 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_evít_cou¡", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆevítcou¡num
, 0, 
NULL
);

2710 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_wb_óæy", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
wrôe_back_óæy
, 0, 
NULL
);

2711 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_¥e„tch
, 0, 
NULL
);

2712 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_fú°_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_fú°_¥e„tch
, 0, 
NULL
);

2713 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_£c_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_£c_¥e„tch
, 0, 
NULL
);

2714 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_u£fuŒ", "tŸÆÇum o‡u£fuŒ L1Öª„tch", &
L1_¥e„tch_u£fuŒ
, 0, 
NULL
);

2715 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªq_evít_cou¡", "tŸÆÇum o‡ªque°ÉvíàöôÆ cª©ed", &
tŸÆªqcou¡num
, 0, 
NULL
);

2716 
	`°©_ªg_cou¡î
 (
sdb
, "St‹eC⁄dôi⁄FaûNum", "TŸÆ st‹êc⁄dôi⁄Æ faûedÇum", &
St‹eC⁄dôi⁄FaûNum
, 0, 
NULL
);

2717 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆUpgødes
, 0, 
NULL
);

2718 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_evít_cou¡", "tŸÆÇum o‡mis†evíàötü»¸óãd", &
tŸÆmisscou¡num
, 0, 
NULL
);

2719 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆNëUpgødes
, 0, 
NULL
);

2720 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesUßbÀ", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesUßbÀ
, 0, 
NULL
);

2721 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesBíeficül", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesBíeficül
, 0, 
NULL
);

2722 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesU£2", "tŸÆÇumbî o‡upgøde†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôNo
, 0, 
NULL
);

2724 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆSyncd©a", "tŸÆÇumbî o‡d©®∑ckë†duêtÿsync", &
d©a_∑ckës_sync
, 0, 
NULL
);

2725 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆSyncmëa", "tŸÆÇumbî o‡më®∑ckë†duêtÿsync", &
mëa_∑ckës_sync
, 0, 
NULL
);

2727 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëWrôes", "tŸÆÇumbî o‡Wrôe†£í", &
tŸÆNëWrôes
, 0, 
NULL
);

2728 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesUßbÀ", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesUßbÀ
, 0, 
NULL
);

2729 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesBíeficül", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesBíeficül
, 0, 
NULL
);

2730 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesU£2", "tŸÆÇumbî o‡Wrôe†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôWM
, 0, 
NULL
);

2731 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNoEx˛usive", "tŸÆÇumbî o‡Wrôe†unußbÀ beˇu£ o‡ex˛usivêsomewhîêñ£", &
ex˛usive_somewhîe
, 0, 
NULL
);

2732 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆFr⁄tWrôe", "tŸÆÇumbî o‡Wrôe†unußvÀ beˇu£ o‡‰⁄àwrôe", &
‰⁄t_wrôe
, 0, 
NULL
);

2734 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqHôs", "tŸÆÇum o‡wrôêevíts", &
tŸÆL2WrôeReqHôs
, 0, 
NULL
);

2735 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqNoSh¨î", "tŸÆÇum o‡wrôêªq wôhÇÿsh¨îs", &
tŸÆL2WrôeReqNoSh¨î
, 0, 
NULL
);

2736 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDúty", "tŸÆÇum o‡wrôêªq wôh ju° o√ sh¨î", &
tŸÆL2WrôeReqDúty
, 0, 
NULL
);

2737 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqDúty", "Exå®dñayÅÿcom∂ëêwrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2WrôeReqDúty
, 0, 
NULL
);

2738 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDútyWT", "tŸÆÅime†wrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2WrôeReqDútyWT
, 0, 
NULL
);

2739 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨ed", "tŸÆÇum o‡wrôêªq wôh mu…ùÀ sh¨îs", &
tŸÆL2WrôeReqSh¨ed
, 0, 
NULL
);

2740 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqSh¨ed", "Exå®dñayÅÿcom∂ëêwrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
dñayL2WrôeReqSh¨ed
, 0, 
NULL
);

2741 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨edWT", "tŸÆÅime†wrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
tŸÆL2WrôeReqSh¨edWT
, 0, 
NULL
);

2743 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqHôs", "tŸÆÇum o‡RódÉvíts", &
tŸÆL2RódReqHôs
, 0, 
NULL
);

2744 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqNoSh¨î", "tŸÆÇum o‡RódÑeq wôhÇÿsh¨îs", &
tŸÆL2RódReqNoSh¨î
, 0, 
NULL
);

2745 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDúty", "tŸÆÇum o‡RódÑeq wôh ju° o√ sh¨î", &
tŸÆL2RódReqDúty
, 0, 
NULL
);

2746 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2RódReqDúty", "Exå®dñayÅÿcom∂ëêRódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2RódReqDúty
, 0, 
NULL
);

2747 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDútyWT", "tŸÆÅime†RódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2RódReqDútyWT
, 0, 
NULL
);

2748 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqSh¨ed", "tŸÆÇum o‡ªadÑeq wôh mu…ùÀ sh¨îs", &
tŸÆL2RódReqSh¨ed
, 0, 
NULL
);

2750 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfU£", "tŸÆ L1Üöê¥e„tche†u£ful", &
tŸÆL1LöePªfU£
, 0, 
NULL
);

2751 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfNoU£", "tŸÆ L1Üöê¥e„tche†nŸ u£ful", &
tŸÆL1LöePªfNoU£
, 0, 
NULL
);

2752 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódU£", "tŸÆ L1Üöêªad mis£†u£ful", &
tŸÆL1LöeRódU£
, 0, 
NULL
);

2753 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódNoU£", "tŸÆ L1Üöêªad mis£†nŸ u£ful", &
tŸÆL1LöeRódNoU£
, 0, 
NULL
);

2754 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeU£", "tŸÆ L1Üöêwrôêmis£†u£ful", &
tŸÆL1LöeWrôeU£
, 0, 
NULL
);

2755 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeNoU£", "tŸÆ L1Üöêwrôêmis£†nŸ u£ful", &
tŸÆL1LöeWrôeNoU£
, 0, 
NULL
);

2757 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlU£d", "tŸÆ L1ÜöêöÉx˛usivêmodêu£ful", &
tŸÆL1LöeExlU£d
, 0, 
NULL
);

2758 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlInv", "tŸÆ L1ÜöêöÉx˛usivêmodêövÆid©ed wôhouàu£", &
tŸÆL1LöeExlInv
, 0, 
NULL
);

2759 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlDr›", "tŸÆ L1ÜöêöÉx˛usivêmodêdr›ed wôhouàu£", &
tŸÆL1LöeExlDr›
, 0, 
NULL
);

2761 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqPrimMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
tŸÆL2ReqPrimMiss
, 0, 
NULL
);

2762 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqSecMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
tŸÆL2ReqSecMiss
, 0, 
NULL
);

2763 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqHô", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
tŸÆL2ReqHô
, 0, 
NULL
);

2764 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInTøns", "TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2ReqInTøns
, 0, 
NULL
);

2765 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2OwnReqInTøns", "TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2OwnReqInTøns
, 0, 
NULL
);

2766 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInInv", "TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
tŸÆL2ReqInInv
, 0, 
NULL
);

2768 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqPrimMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
dñayL2ReqPrimMiss
, 0, 
NULL
);

2769 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqSecMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
dñayL2ReqSecMiss
, 0, 
NULL
);

2770 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqHô", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
dñayL2ReqHô
, 0, 
NULL
);

2771 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
dñayL2ReqInTøns
, 0, 
NULL
);

2772 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2OwnReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
dñayL2OwnReqInTøns
, 0, 
NULL
);

2773 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInInv", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
dñayL2ReqInInv
, 0, 
NULL
);

2775 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆWrôeReq
, 0, 
NULL
);

2776 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆWrôeReqInv
, 0, 
NULL
);

2777 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆWrôeDñay
, 0, 
NULL
);

2778 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆWrôeInvDñay
, 0, 
NULL
);

2780 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆUpgødeReq
, 0, 
NULL
);

2781 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆUpgødeReqInv
, 0, 
NULL
);

2782 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆUpgødeDñay
, 0, 
NULL
);

2783 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆUpgødeInvDñay
, 0, 
NULL
);

2784 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDïídDñay", "Timê•íàö dïíd dñay f‹ upd©êªque°†tÿL2", &
Upd©eDïídCy˛e
, 0, 
NULL
);

2786 
	`°©_ªg_cou¡î
 (
sdb
, "cou¡N⁄AŒocRódE¨ly", "Numbî o‡time†®ªad mis†ªque° from L1 ha†bì¿£rvi˚dÉ¨ly wôhouàÆloˇti⁄", &
cou¡N⁄AŒocRódE¨ly
, 0, 
NULL
);

2787 #ifde‡
TG


2788 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_∑ckës_gíî©i⁄
, 0, 
NULL
);

2789 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªad_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_ªad_∑ckës_gíî©i⁄
, 0, 
NULL
);

2790 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_wrôe_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_wrôe_∑ckës_gíî©i⁄
, 0, 
NULL
);

2792 
	`°©_ªg_cou¡î
 (
sdb
, "L1_mshr_fuŒ", "tŸÆÇumbî o‡L1 msh∏ovîÊow", &
L1_mshr_fuŒ
, 0, 
NULL
);

2793 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_mshr", "tŸÆ sèŒ cy˛e†f‹ L1 msh∏ovîÊow", &
SèŒ_L1_mshr
, 0, 
NULL
);

2794 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ", "tŸÆÇumbî o‡L2 msh∏ovîÊow", &
L2_mshr_fuŒ
, 0, 
NULL
);

2795 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L2_mshr", "tŸÆ sèŒ cy˛e†f‹ L2 msh∏ovîÊow", &
SèŒ_L2_mshr
, 0, 
NULL
);

2796 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ_¥e„tch", "tŸÆÇumbî o‡L2 msh∏ovîÊow whíÖª„tch", &
L2_mshr_fuŒ_¥e„tch
, 0, 
NULL
);

2797 
	`°©_ªg_cou¡î
 (
sdb
, "L1_fifo_fuŒ", "tŸÆÇumbî o‡L1 fifÿovîÊow", &
L1_fifo_fuŒ
, 0, 
NULL
);

2798 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_fifo", "tŸÆ sèŒ cy˛e†f‹ L1 fifÿovîÊow", &
SèŒ_L1_fifo
, 0, 
NULL
);

2799 
	`°©_ªg_cou¡î
 (
sdb
, "Dú_fifo_fuŒ", "tŸÆÇumbî o‡dú fifÿovîÊow", &
Dú_fifo_fuŒ
, 0, 
NULL
);

2800 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_dú_fifo", "tŸÆ sèŒ cy˛e†f‹ dú fifÿovîÊow", &
SèŒ_dú_fifo
, 0, 
NULL
);

2801 
	`°©_ªg_cou¡î
 (
sdb
, "I≈ut_queue_fuŒ", "tŸÆÇumbî o‡öpuàqueuêovîÊow", &
I≈ut_queue_fuŒ
, 0, 
NULL
);

2802 
	`°©_ªg_cou¡î
 (
sdb
, "Ouçut_queue_fuŒ", "tŸÆÇumbî o‡ouçuàqueuêovîÊow", &
Ouçut_queue_fuŒ
, 0, 
NULL
);

2803 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_öput_queue", "tŸÆ sèŒ cy˛e†duêtÿöpuàqueuêovîÊow", &
SèŒ_öput_queue
, 0, 
NULL
);

2804 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_ouçut_queue", "tŸÆ sèŒ cy˛e†duêtÿouçuàqueuêovîÊow", &
SèŒ_ouçut_queue
, 0, 
NULL
);

2805 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_lﬂd_lök_sh¨ed", "tŸÆÜﬂdÜök sh¨ed", &
lﬂd_lök_sh¨ed
, 0, 
NULL
);

2806 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_lﬂd_lök_ex˛usive", "tŸÆÜﬂdÜök sh¨ed", &
lﬂd_lök_ex˛usive
, 0, 
NULL
);

2807 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆmissh™dÀtime
, 0, 
NULL
);

2808 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
«ck_cou¡î
, 0, 
NULL
);

2809 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
Êù_cou¡î
, 0, 
NULL
);

2810 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
L1_Êù_cou¡î
, 0, 
NULL
);

2811 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_ª∂y_bíefô", "tŸÆÇum o‡d©®ª∂y bíefô", &
e_to_m
, 0, 
NULL
);

2812 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_miss_h™dÀ_timê/ÅŸÆ_evít_cou¡", 
NULL
);

2813 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_ac˚ss", "tŸÆ mesh_√tw‹kác˚ss", &
tŸÆMeshH›Cou¡
, 0, 
NULL
);

2814 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_dñay", "tŸÆ mesh_√tw‹k dñay", &
tŸÆMeshH›Dñay
, 0, 
NULL
);

2815 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_mesh_√tw‹k_time", "cy˛e†≥∏mesh_√tw‹kác˚ss", "tŸÆ_mesh_√tw‹k_dñay /ÅŸÆ_mesh_√tw‹k_ac˚ss", 
NULL
);

2816 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_ac˚ss", "tŸÆ o±_√tw‹kác˚ss", &
tŸÆO±H›Cou¡
, 0, 
NULL
);

2817 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_dñay", "tŸÆ o±_√tw‹k dñay", &
tŸÆO±H›Dñay
, 0, 
NULL
);

2818 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_›t_√tw‹k_time", "cy˛e†≥∏›t_√tw‹kác˚ss", "tŸÆ_›t_√tw‹k_dñay /ÅŸÆ_›t_√tw‹k_ac˚ss", 
NULL
);

2819 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_loˇl_ˇche_ac˚ss", "tŸÆÜoˇ»dl2 cachêac˚s†numbî", &
loˇl_ˇche_ac˚ss
, 0, 
NULL
);

2820 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªmŸe_ˇche_ac˚ss", "tŸÆÑemŸêdl2 cachêac˚s†numbî", &
ªmŸe_ˇche_ac˚ss
, 0, 
NULL
);

2821 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_wb", "tŸÆÅwÿh›†övﬁve†duêtÿwrôêback", &
övﬁve_2_h›_wb
, 0, 
NULL
);

2822 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_touch", "tŸÆÅwÿh›†övﬁve†duêtÿtouch", &
övﬁve_2_h›_touch
, 0, 
NULL
);

2823 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s
, 0, 
NULL
);

2824 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s
, 0, 
NULL
);

2825 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves_wm", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_wm
, 0, 
NULL
);

2826 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves_wm", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_wm
, 0, 
NULL
);

2827 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_miss", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_miss
, 0, 
NULL
);

2828 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_miss", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_miss
, 0, 
NULL
);

2829 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_upgøde", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_upgøde
, 0, 
NULL
);

2830 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_upgøde", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_upgøde
, 0, 
NULL
);

2831 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_ªad", "tŸÆÖriv©êd©®f‹Ñód miss", &
d©a_¥iv©e_ªad
, 0, 
NULL
);

2832 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_wrôe", "tŸÆÖriv©êd©®f‹ wrôêmiss", &
d©a_¥iv©e_wrôe
, 0, 
NULL
);

2833 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_ªad", "tŸÆ sh¨ed d©®f‹Ñód miss", &
d©a_sh¨ed_ªad
, 0, 
NULL
);

2834 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_wrôe", "tŸÆ sh¨ed d©®f‹ wrôêmiss", &
d©a_sh¨ed_wrôe
, 0, 
NULL
);

2835 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_˛o£", "tŸÆÇumbî†o‡Æ»˛o£d c⁄sumîs", &
tŸÆ_Æl_˛o£
, 0, 
NULL
);

2836 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_nŸ_Æl_˛o£", "tŸÆÇumbî†o‡nŸáŒ clo£d c⁄sumîs", &
tŸÆ_nŸ_Æl_˛o£
, 0, 
NULL
);

2837 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_p_c_evíts", "tŸÆÖrodu˚∏™d c⁄sumî†evít†(shouldÉquÆÅÿ4 h›s)", &
tŸÆ_p_c_evíts
, 0, 
NULL
);

2838 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_c⁄sumîs", "tŸÆÇumbî†o‡c⁄sumîs", &
tŸÆ_c⁄sumîs
, 0, 
NULL
);

2839 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_ö_√ighb‹", "tŸÆÖackë†¨êöÇeighb‹hood", &
tŸÆ_∑ckës_ö_√ighb‹
, 0, 
NULL
);

2840 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_©_c‹√rs", "tŸÆÖackë†¨ê© c‹√rs", &
tŸÆ_∑ckës_©_c‹√rs
, 0, 
NULL
);

2841 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_Æmo°˛o£", "tŸÆÇumbî†o‡Æ»˛o£dánd c‹√∏c⁄sumîs", &
tŸÆ_Æl_Æmo°˛o£
, 0, 
NULL
);

2842 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_c⁄sumîs", "tŸÆ d©®∑ckë†o‡c⁄sumîs", &
tŸÆ_d©a_c⁄sumîs
, 0, 
NULL
);

2843 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_©_c‹√r", "tŸÆ d©®∑ckë†suµly fromáàc‹√rs", &
tŸÆ_d©a_©_c‹√r
, 0, 
NULL
);

2844 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_˛o£", "tŸÆ d©®∑ckë†¨êsuµlõd from clo£by sour˚s", &
tŸÆ_d©a_˛o£
, 0, 
NULL
);

2845 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_Ár", "tŸÆ d©®∑ckë†¨êsumµlõd from f¨ sour˚s", &
tŸÆ_d©a_Ár
, 0, 
NULL
);

2846 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_öside_≥r˚¡", "avîagêösidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_öside_≥r˚¡
, 0, 
NULL
);

2847 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_outside_≥r˚¡
, 0, 
NULL
);

2848 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_abs_≥r˚¡", "avîagêabsﬁuéy outsidê∑ckë†≥r˚¡(Á∏- c‹√r)", &
avîage_outside_abs_≥r˚¡
, 0, 
NULL
);

2849 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_c‹√r_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(c‹√r: should bêdivided byÅŸÆ_nŸ_Æl_˛os)", &
avîage_c‹√r_≥r˚¡
, 0, 
NULL
);

2850 #ifde‡
INV_ACK_CON


2851 
	`°©_ªg_doubÀ
 (
sdb
, "≥ndög_övÆid_cy˛es", "how m™y cy˛e†tÿövÆid©êthêˇchêlöe", &
≥ndög_övÆid_cy˛es
, 0, 
NULL
);

2853 
i
 = 0; i < 100; i++)

2855 
j
 = 0; j < 100; j++)

2857 
	`•rötf
 (
ch2
, "d©a_∑ckës_£ndög_%d_%d", 
i
, 
j
);

2858 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
d©a_∑ckës_£ndög
[
i
][
j
], 0, 
NULL
);

2861 
i
 = 0; i < 100; i++)

2863 
j
 = 0; j < 100; j++)

2865 
	`•rötf
 (
ch2
, "mëa_∑ckës_£ndög_%d_%d", 
i
, 
j
);

2866 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
mëa_∑ckës_£ndög
[
i
][
j
], 0, 
NULL
);

2869 
i
 = 0; i < 36; i++)

2871 
	`•rötf
 (
ch2
, "mëa_eví_˛o£_%d", 
i
);

2872 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
mëa_eví_ªq_˛o£
[
i
], 0, 
NULL
);

2874 
i
 = 0; i < 36; i++)

2876 
	`•rötf
 (
ch2
, "mëa_odd_˛o£_%d", 
i
);

2877 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
mëa_odd_ªq_˛o£
[
i
], 0, 
NULL
);

2879 
i
 = 0; i < 
numc⁄ãxts
; i++)

2881 
	`•rötf
 (
ch2
, "sh¨î_böcou¡_%d", 
i
);

2882 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
sh¨î_num
[
i
], 0, 
NULL
);

2885 #ifde‡
MC


2887 
	`›tiˇl_ªg_°©s
 (
sdb
);

2889 #ifde‡
OPTICAL_INTERCONNECT


2890 
	`›tiˇl_ªg_°©s
 (
sdb
);

2894 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_cou¡", "cumuœtivêIFQ occu∑ncy", &
IFQ_cou¡
, 0, 
NULL
);

2895 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_fcou¡", "cumuœtivêIFQ fuŒ cou¡", &
IFQ_fcou¡
, 0, 
NULL
);

2896 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_occu∑ncy", "avg IFQ occu∑ncy (ö¢'s)", "IFQ_cou¡ / sim_cy˛e", 
NULL
);

2897 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_øã", "avg IFQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2898 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_œãncy", "avg IFQ occu∑¡Ü©ícy (cy˛e's)", "ifq_occu∑ncy / ifq_øã", 
NULL
);

2899 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËIFQ wa†fuŒ", "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

2901 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_cou¡", "cumuœtivêRUU occu∑ncy", &
RUU_cou¡
, 0, 
NULL
);

2902 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_fcou¡", "cumuœtivêRUU fuŒ cou¡", &
RUU_fcou¡
, 0, 
NULL
);

2903 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_occu∑ncy", "avg RUU occu∑ncy (ö¢'s)", "RUU_cou¡ / sim_cy˛e", 
NULL
);

2904 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_øã", "avg RUU di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2905 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_œãncy", "avg RUU occu∑¡Ü©ícy (cy˛e's)", "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

2906 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËRUU wa†fuŒ", "RUU_fcou¡ / sim_cy˛e", 
NULL
);

2908 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_cou¡", "cumuœtivêLSQ occu∑ncy", &
LSQ_cou¡
, 0, 
NULL
);

2909 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_fcou¡", "cumuœtivêLSQ fuŒ cou¡", &
LSQ_fcou¡
, 0, 
NULL
);

2910 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_occu∑ncy", "avg LSQ occu∑ncy (ö¢'s)", "LSQ_cou¡ / sim_cy˛e", 
NULL
);

2911 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_øã", "avg LSQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2912 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_œãncy", "avg LSQ occu∑¡Ü©ícy (cy˛e's)", "lsq_occu∑ncy /Üsq_øã", 
NULL
);

2913 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËLSQ wa†fuŒ", "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

2914 
	`°©_ªg_cou¡î
 (
sdb
, "dl2A˘uÆlyAc˚s£d", "", &
dl2A˘uÆlyAc˚s£d
, 0, 
NULL
);

2916 
	`°©_ªg_cou¡î
 (
sdb
, "¥e„tchLﬂd", "", &
m_sqPª„tchC¡
, 0, 
NULL
);

2918 
i
 = 0; i < 
numc⁄ãxts
; i++)

2920 
ch
[20], 
fm
[30], 
ch2
[20];

2922 
	`•rötf
 (
ch2
, "brRecovîy_%d", 
i
);

2923 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ wr⁄g bønches", &
brRecovîy
[
i
], 0, 
NULL
);

2925 
	`•rötf
 (
ch2
, "exåaIn¢_%d", 
i
);

2926 
	`°©_ªg_cou¡î
 (
sdb
, "exåaIn¢", "tŸÆÇumbî o‡wr⁄gÖ©h in¢Éxecuãd", &
exåaIn¢
[
i
], 0, 
NULL
);

2929 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2931 
ch2
[20];

2933 #ifdef 
EDA


2934 
	`•rötf
 (
ch2
, "n⁄SktIn¢_%d", 
i
);

2935 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆ N⁄ skñë⁄ in°ru˘i⁄†execuãd", &
n⁄SktIn¢
[
i
], 0, 
NULL
);

2936 
	`•rötf
 (
ch2
, "ªcovîyCou¡_%d", 
i
);

2937 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "Recovîy cou¡", &
ªcovîyCou¡
[
i
], 0, 
NULL
);

2938 
	`•rötf
 (
ch2
, "°ÆlCC_BOQEm±y_%d", 
i
);

2939 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "C‹ª˘√s†c‹ê„tch sèŒ duêtÿBOQÉm±y", &
numBCQEm±y
[
i
], 0, 
NULL
);

2940 
	`•rötf
 (
ch2
, "tŸÆRñCE_%d", 
i
);

2941 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆ Dl0 cachêevi˘i⁄s.", &
tŸÆRñCE
[
i
], 0, 
NULL
);

2942 
	`•rötf
 (
ch2
, "numSyncIn°_%d", 
i
);

2943 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆÇum o‡synchr⁄iz©i⁄ in°ru˘i⁄s", &
numSyncIn°
[
i
], 0, 
NULL
);

2947 
i
 = 0; i < 
MAXTHREADS
; i++)

2949 
ch2
[20];

2952 
	`•rötf
 (
ch2
, "thªad_sim_ö¢_%d", 
i
);

2953 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "≥∏thªad simÇum in¢", &
simIn¢
[
i
], 0, 
NULL
);

2954 
	`•rötf
 (
ch2
, "SèŒCou¡_%d", 
i
);

2955 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ sèŒ cou¡", &
¶ìpCou¡
[
i
], 0, 
NULL
);

2956 
	`•rötf
 (
ch2
, "quõn£Wakeup_%d", 
i
);

2957 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
quõn£Wakeup
[
i
], 0, 
NULL
);

2958 
	`•rötf
 (
ch2
, "£qC⁄sRïœy_%d", 
i
);

2959 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sRïœy
[
i
], 0, 
NULL
);

2960 
	`•rötf
 (
ch2
, "£qC⁄sIn¢Rïœy_%d", 
i
);

2961 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sIn¢Rïœy
[
i
], 0, 
NULL
);

2962 
	`•rötf
 (
ch2
, "ld°Reje˘i⁄Cou¡_%d", 
i
);

2963 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
ld°Reje˘i⁄Cou¡
[
i
], 0, 
NULL
);

2964 
	`•rötf
 (
ch2
, "TrueRïœy_%d", 
i
);

2965 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqNumLdRïœy
[
i
], 0, 
NULL
);

2967 
	`•rötf
 (
ch2
, "InvÆid©i⁄Rïœy_%d", 
i
);

2968 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
övÆid©i⁄_ª∂ay
[
i
], 0, 
NULL
);

2970 #ifde‡
RELAXED_CONSISTENCY


2971 
	`•rötf
 (
ch2
, "lﬂdLﬂdRïœy_%d", 
i
);

2972 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
lﬂdLﬂdRïœyCou¡
[
i
], 0, 
NULL
);

2974 
	`•rötf
 (
ch2
, "avgRUUsize_%d", 
i
);

2975 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgRUUsize
[
i
], 0, 
NULL
);

2976 
	`•rötf
 (
ch2
, "avgLQsize_%d", 
i
);

2977 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgLQsize
[
i
], 0, 
NULL
);

2978 
	`•rötf
 (
ch2
, "avgSQsize_%d", 
i
);

2979 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgSQsize
[
i
], 0, 
NULL
);

2980 
	`•rötf
 (
ch2
, "CommôSèŒ_%d", 
i
);

2981 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_commôSèŒ
[
i
], 0, 
NULL
);

2982 
	`•rötf
 (
ch2
, "TŸÆSèŒ_%d", 
i
);

2983 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_tŸÆSèŒ
[
i
], 0, 
NULL
);

2984 
	`•rötf
 (
ch2
, "RUUSèŒ_%d", 
i
);

2985 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_RUUFuŒ
[
i
], 0, 
NULL
);

2986 
	`•rötf
 (
ch2
, "LQSèŒ_%d", 
i
);

2987 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqLQFuŒ
[
i
], 0, 
NULL
);

2988 
	`•rötf
 (
ch2
, "SQSèŒ_%d", 
i
);

2989 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqSQFuŒ
[
i
], 0, 
NULL
);

2990 
	`•rötf
 (
ch2
, "St‹eMissSèŒ_%d", 
i
);

2991 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eMiss
[
i
], 0, 
NULL
);

2992 
	`•rötf
 (
ch2
, "LQHôSèŒ_%d", 
i
);

2993 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdRólHô
[
i
], 0, 
NULL
);

2994 
	`•rötf
 (
ch2
, "LQMissSèŒ_%d", 
i
);

2995 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdRólMiss
[
i
], 0, 
NULL
);

2996 
	`•rötf
 (
ch2
, "SQHôSèŒ_%d", 
i
);

2997 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eRólHô
[
i
], 0, 
NULL
);

2998 
	`•rötf
 (
ch2
, "SQMissSèŒ_%d", 
i
);

2999 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eRólMiss
[
i
], 0, 
NULL
);

3000 
	`•rötf
 (
ch2
, "St‹eSèŒMiss_%d", 
i
);

3001 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eSèŒMiss
[
i
], 0, 
NULL
);

3002 
	`•rötf
 (
ch2
, "St‹eSèŒHô_%d", 
i
);

3003 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eSèŒHô
[
i
], 0, 
NULL
);

3004 
	`•rötf
 (
ch2
, "LﬂdSèŒMiss_%d", 
i
);

3005 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdSèŒMiss
[
i
], 0, 
NULL
);

3006 
	`•rötf
 (
ch2
, "LﬂdSèŒHô_%d", 
i
);

3007 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdSèŒHô
[
i
], 0, 
NULL
);

3008 
	`•rötf
 (
ch2
, "St‹eUpd©eMissSèŒ_%d", 
i
);

3009 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eUpd©eMiss
[
i
], 0, 
NULL
);

3010 
	`•rötf
 (
ch2
, "LﬂdMissSèŒ_%d", 
i
);

3011 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdMiss
[
i
], 0, 
NULL
);

3012 
	`•rötf
 (
ch2
, "RegSèŒ_%d", 
i
);

3013 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_ªgFuŒ
[
i
], 0, 
NULL
);

3014 
	`•rötf
 (
ch2
, "IssueSèŒ_%d", 
i
);

3015 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_issueFuŒ
[
i
], 0, 
NULL
);

3016 
	`•rötf
 (
ch2
, "Il1missSèŒ_%d", 
i
);

3017 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_û1Miss
[
i
], 0, 
NULL
);

3018 
	`•rötf
 (
ch2
, "FëchSèŒ_%d", 
i
);

3019 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_„tchEm±y
[
i
], 0, 
NULL
);

3020 
	`•rötf
 (
ch2
, "STLCSèŒ_%d", 
i
);

3021 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_STLC
[
i
], 0, 
NULL
);

3022 
	`•rötf
 (
ch2
, "TøpSèŒ_%d", 
i
);

3023 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_å≠
[
i
], 0, 
NULL
);

3026 #ifde‡
LOAD_PREDICTOR


3028 i‡(
ld¥ed
)

3029 
	`b¥ed_ªg_°©s
 (
ld¥ed
, 
sdb
, 0);

3033 
i
 = 0; i < 
numc⁄ãxts
; i++)

3035 
	`ld_ªg_°©s
 (
sdb
, 
i
);

3036 
	`mem_ªg_°©s
 (
thec⁄ãxts
[
i
]->
mem
, 
sdb
);

3039 
i
 = 0; i < 
MAXTHREADS
; i++)

3041 i‡(
ˇche_dl1
[
i
])

3042 
	`ˇche_ªg_°©s
 (
ˇche_dl1
[
i
], 
sdb
, i);

3043 i‡(
ˇche_û1
[
i
])

3044 
	`ˇche_ªg_°©s
 (
ˇche_û1
[
i
], 
sdb
, i);

3045 i‡(
ôlb
[
i
])

3046 
	`ˇche_ªg_°©s
 (
ôlb
[
i
], 
sdb
, i);

3047 i‡(
déb
[
i
])

3048 
	`ˇche_ªg_°©s
 (
déb
[
i
], 
sdb
, i);

3052 i‡(
ˇche_dl2
)

3053 
	`ˇche_ªg_°©s
 (
ˇche_dl2
, 
sdb
, 0);

3056 
	`powî_ªg_°©s
 (
sdb
);

3059 
	`°©_ªg_cou¡î
 (
sdb
, "sim_övÆid_addrs", "tŸÆÇ⁄-•ecuœtivêbogu†addªs£†£í (debug v¨)", &
sim_övÆid_addrs
, 0, 
NULL
);

3061 
i
 = 0; i < 
pc°©_√…
; i++)

3063 
buf
[512], 
buf1
[512];

3064 
°©_°©_t
 *
°©
;

3068 
°©
 = 
	`°©_föd_°©
 (
sdb
, 
pc°©_v¨s
[
i
]);

3069 i‡(!
°©
)

3070 
	`Áèl
 ("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

3073 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

3074 
	`Áèl
 ("`-pc°©' sèti°iˇ»v¨übÀ `%s' i†nŸá¿öãgø»ty≥", 
°©
->
«me
);

3077 
pc°©_°©s
[
i
] = 
°©
;

3078 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
 (
°©
);

3081 
	`•rötf
 (
buf
, "%s_by_pc", 
°©
->
«me
);

3082 
	`•rötf
 (
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

3083 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
 (
sdb
, 
buf
, 
buf1
,

3085  (
PF_COUNT
 | 
PF_PDF
),

3087  
NULL
);

3091 #ifde‡
TOKENB


3092 i‡(
tokíB
)

3093 
	`tc_ªg_°©s
 (
sdb
);

3095 
	`˛u°î_ªg_°©s
 (
sdb
);

3096 
	}
}

3099 
lsq_öô
 ();

3100 
r¶ök_öô
 (
∆öks
);

3101 
rs_ˇche_öô
 ();

3102 
evítq_öô
 ();

3103 
ªadyq_öô
 ();

3104 
cv_öô
 (
thªadid
);

3105 
ruu_öô
 (
thªadid
);

3106 
åa˚r_öô
 (
thªadid
);

3107 
„tch_öô
 (
thªadid
);

3109 #ifde‡
DIRECTORY


3110 
dú_evítq_öô
();

3115 
	$sim_öô
 ()

3117 
i
;

3119 
sim_num_ªfs
 = 0;

3121 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

3124 i‡(
bimod_√…
 != 1)

3125 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3126 i‡(
btb_√…
 != 2)

3127 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3130 
i
 = 0; i < 
numc⁄ãxts
; i++)

3132 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

3133  
bimod_c⁄fig
[0],

3139  
btb_c⁄fig
[0],

3140  
btb_c⁄fig
[1],

3141  
øs_size
);

3144 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

3147 i‡(
twﬁev_√…
 != 4)

3148 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3149 i‡(
btb_√…
 != 2)

3150 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3152 
i
 = 0; i < 
numc⁄ãxts
; i++)

3154 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

3156  
twﬁev_c⁄fig
[0],

3157  
twﬁev_c⁄fig
[1],

3159  
twﬁev_c⁄fig
[2],

3160  
twﬁev_c⁄fig
[3],

3161  
btb_c⁄fig
[0],

3162  
btb_c⁄fig
[1],

3163  
øs_size
);

3166 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

3169 i‡(
twﬁev_√…
 != 4)

3170 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3171 i‡(
bimod_√…
 != 1)

3172 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3173 i‡(
comb_√…
 != 1)

3174 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

3175 i‡(
btb_√…
 != 2)

3176 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3178 
i
 = 0; i < 
numc⁄ãxts
; i++)

3180 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

3181  
bimod_c⁄fig
[0],

3182  
twﬁev_c⁄fig
[0],

3183  
twﬁev_c⁄fig
[1],

3184  
comb_c⁄fig
[0],

3185  
twﬁev_c⁄fig
[2],

3186  
twﬁev_c⁄fig
[3],

3187  
btb_c⁄fig
[0],

3188  
btb_c⁄fig
[1],

3189  
øs_size
);

3193 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


3194 #i‚de‡
CENTRALIZED_CACHE_BANK


3195 i‡(
ªs_memb™k
 < 
CLUSTERS
)

3197 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3198 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d < CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3199 
	`exô
 (1);

3202 i‡(
ªs_memb™k
 !
CLUSTERS
)

3204 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3205 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d ! CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3206 
	`exô
 (1);

3211 #ifde‡
PORT_PER_BANK


3212 
CACHEPORTS
 = 
RES_CACHEPORTS
 = 
RES_CACHE_PORTS
 = 
ªs_memb™k
;

3213 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

3216 #ifde‡
ISSUE_PER_CLUSTER


3222 
i
 = 0; i < 
numc⁄ãxts
; i++)

3224 i‡(
i
 == 0)

3226 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
Vdd
 * Vdd;

3227 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* (
Vdd
 / 2) * (Vdd / 2);

3228 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 1;

3232 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * 
Vdd
 * checkerVDD * Vdd;

3233 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * (
Vdd
 / 2) * checkerVDD * (Vdd / 2);

3234 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 
checkîVDD
;

3237 
	`ˇlcuœã_powî
 (&(
thec⁄ãxts
[
i
]->
powî
));

3239 i‡(
i
)

3241 
thec⁄ãxts
[
i
]->
powî
.
b¥ed_powî
 = 0;

3242 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_powî
 =Åhecontexts[0]->power.dcache2_power;

3244 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_decodî
 =Åhecontexts[0]->power.dcache2_decoder;

3245 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_w‹dlöe
 =Åhecontexts[0]->power.dcache2_wordline;

3246 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_bôlöe
 =Åhecontexts[0]->power.dcache2_bitline;

3247 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_£n£amp
 =Åhecontexts[0]->power.dcache2_senseamp;

3248 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_èg¨øy
 =Åhecontexts[0]->power.dcache2_tagarray;

3249 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_gc
 =Åhecontexts[0]->power.dcache2_gc;

3253 i‡(
hŸ•Ÿ_a˘ive
)

3254 
	`hŸ•Ÿ_öô
 ();

3255 
	}
}

3259 
simoo_ªg_obj
 (
ªgs_t
 *
ªgs
,

3260 
is_wrôe
,

3261 
md_ªg_ty≥
 
π
,

3262 
ªg
,

3263 
evÆ_vÆue_t
 *
vÆ
);

3267 
simoo_mem_obj
 (
mem_t
 *
mem
,

3268 
is_wrôe
,

3269 
md_addr_t
 
addr
,

3270 *
p
,

3271 
nbyãs
);

3275 
simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

3276 *
cmd
,

3277 
ªgs_t
 *
ªgs
,

3278 
mem_t
 *
mem
);

3281 
	#MAX_RS_LINKS
 65536

	)

3282 
cou¡î_t
 
	grs_lök_num
 = 0;

3284 
	gMAX_BR_NUM
;

3288 
	$sim_lﬂd_thªads
 (
¨gc
, **
¨gv
,

3289 **
ívp
)

3291 
j
, 
¨g_°©us
 = 1;

3292 
c⁄ãxt
 *
cuºít
;

3294 
numc⁄ãxts
 = 0;

3295 
j
 = 0; (j < 
¨gc
Ë&& (
numc⁄ãxts
 < 
MAXTHREADS
Ë&& 
¨g_°©us
; j++)

3297 
	`Ârötf
 (
°dîr
, "öôülizög c⁄ãxà%d\n", 
numc⁄ãxts
);

3299 
¨g_°©us
 = 
	`ªad_thªad_¨gs
 (
ívp
, 
¨gv
[
j
], &
numc⁄ãxts
);

3301 
cuºít
 = 
thec⁄ãxts
[
j
];

3303 
cuºít
->
a˘uÆid
 = 0;

3306 
	`ld_lﬂd_¥og
 (
cuºít
->
‚ame
, cuºít->
¨gc
, cuºít->
¨gv
, 
ívp
, &(cuºít->
ªgs
), cuºít->
mem
, 
TRUE
, 
j
);

3310 i‡(
±ø˚_√…
 == 2)

3313 
	`±ø˚_›í
 ( 
±ø˚_›ts
[0],Ötrace_opts[1]);

3315 i‡(
±ø˚_√…
 == 0)

3320 
	`Áèl
 ("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

3323 
MAX_BR_NUM
 = 
ruu_ifq_size
 + 
RUU_size
;

3328 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
 ("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
 (fu_config));

3329 
	`r¶ök_öô
 (
MAX_RS_LINKS
);

3330 
	`rs_ˇche_öô
();

3331 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
;

3332 
j
 = 0; j < 
numc⁄ãxts
; j++)

3333 
	`åa˚r_öô
 (
j
);

3334 
j
 = 0; j < 
numc⁄ãxts
; j++)

3335 
	`„tch_öô
 (
j
);

3336 
j
 = 0; j < 
numc⁄ãxts
; j++)

3337 
	`cv_öô
 (
j
);

3338 
	`evítq_öô
 ();

3339 
	`ªadyq_öô
 ();

3341 #ifde‡
DIRECTORY


3342 
	`dú_evítq_öô
();

3343 
j
 = 0; j < 
numc⁄ãxts
+
mesh_size
*2; j++)

3345 
dú_fifo_hód
[
j
] = 0;

3346 
dú_fifo_èû
[
j
] = 0;

3347 
dú_fifo_num
[
j
] = 0;

3348 
dú_fifo_p‹tu£
[
j
] = 0;

3349 
l1_fifo_hód
[
j
] = 0;

3350 
l1_fifo_èû
[
j
] = 0;

3351 
l1_fifo_num
[
j
] = 0;

3352 
l1_fifo_p‹tu£
[
j
] = 0;

3353 
mshr_≥ndög_evít
[
j
] = 0;

3354 
œ°_L1_mshr_fuŒ
[
j
] = 0;

3355 
œ°_L1_fifo_fuŒ
[
j
] = 0;

3356 
œ°_Dú_fifo_fuŒ
[
j
] = 0;

3357 
œ°_I≈ut_queue_fuŒ
[
j
] = 0;

3359 
œ°_L2_mshr_fuŒ
 = 0;

3360 
ßme_L1_L2_fifo_fuŒ
 = 0;

3361 
L1_mshr_fuŒ
 = 0;

3362 
L2_mshr_fuŒ
 = 0;

3363 
L2_mshr_fuŒ_¥e„tch
 = 0;

3364 
L1_fifo_fuŒ
 = 0;

3365 
Dú_fifo_fuŒ
 = 0;

3366 
I≈ut_queue_fuŒ
 = 0;

3367 
Ouçut_queue_fuŒ
 = 0;

3369 
SèŒ_L1_mshr
 = 0;

3370 
SèŒ_L2_mshr
 = 0;

3371 
SèŒ_L1_fifo
 = 0;

3372 
SèŒ_dú_fifo
 = 0;

3373 
SèŒ_öput_queue
 = 0;

3374 
SèŒ_ouçut_queue
 = 0;

3377 
j
 = 0; j < 
numc⁄ãxts
; j++)

3379 
	`ruu_öô
 (
j
);

3380 
	`lsq_öô
 (
j
);

3383 
j
 = 0; j < 
numc⁄ãxts
; j++)

3385 
¥i‹ôy
[
j
] = j;

3386 
key
[
j
] = 0;

3387 #ifde‡
INTERVAL_BASED


3388 
öãrvÆ_¥i‹ôy
[
j
] = j;

3389 
öãrvÆ_key
[
j
] = 0;

3393 #ifde‡ 
CLUSTER_PRIORITY


3394 
j
 = 0; j < 
CLUSTERS
; j++)

3395 
¥i‹ôy_˛
[
j
] = j;

3398 #ifde‡ 
PRIORITY_STEER


3399 
j
 = 0; j < 
CLUSTERS
; j++)

3400 
¥i‹ôy_˛
[
j
] = j;

3403 #ifde‡ 
STEER_DISPATCH_STAT


3404 
j
 = 0; j < 
numc⁄ãxts
; j++)

3405 
ªady_°ìr_thrd_max
[
j
] = 
ªady_°ìr_thrd_mö
[j] = 
ªady_°ìr_thrd_vÆue
[j] = 
MAXDEV
 / 2;

3408 #i‡
	`deföed
(
DLITE_SUPPORT
)

3410 
	`dlôe_öô
 (
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

3412 
	}
}

3416 
	$sim_aux_°©s
 (
FILE
 * 
°ªam
)

3419 
	}
}

3423 
	$sim_unöô
 ()

3425 i‡(
±ø˚_√…
 > 0)

3426 
	`±ø˚_˛o£
 ();

3429 
	}
}

3436 #i‚de‡ 
STEER_DISPATCH_STAT


3438 
	#OPERANDS_READY
(
RS
Ë\

	)

3439 ((
	gRS
)->
	gidï_ªady
[0] && (RS)->idep_ready[1] && (RS)->idep_ready[2])

3443 
	#ONE_OPERANDS_READY
(
RS
Ë\

	)

3444 ((
	gRS
)->
	gidï_ªady
[0] || (RS)->idep_ready[1])

3449 
	$ruu_öô
 (
thªadid
)

3451 
i
 = 0;

3452 
c⁄ãxt
 *
cuºít
;

3454 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3455 
cuºít
->
RUU
 = 
	`ˇŒoc
 (
RUU_size
,  (
RUU_°©i⁄
));

3456 i‡(!
cuºít
->
RUU
)

3457 
	`Áèl
 ("out of virtual memory");

3459 
i
 = 0; i < 
RUU_size
; i++)

3461 
cuºít
->
RUU
[
i
].
ödex
 = i;

3462 
cuºít
->
RUU
[
i
].
thªadid
 =Åhreadid;

3464 
cuºít
->
RUU_num
 = 0;

3465 
cuºít
->
RUU_hód
 = cuºít->
RUU_èû
 = 0;

3466 
cuºít
->
RUU_cou¡_thrd
 = 0;

3467 
cuºít
->
RUU_fcou¡_thrd
 = 0;

3468 
RUU_cou¡
 = 0;

3469 
RUU_fcou¡
 = 0;

3471 i‡(
thªadid
)

3473 
cuºít
->
cy˛e_mask
 = 0xffffffff;

3474 
cuºít
->
œãncy_Á˘‹
 = 1;

3475 
cuºít
->
maö_thªad
 = 1;

3476 
ˇche_dl1
[
thªadid
]->
hô_œãncy
 *
cuºít
->
œãncy_Á˘‹
;

3479 
i
 = 0; i < 
CLUSTERS
; i++)

3481 
úegfûe_˛_cou¡
[
i
] = 0;

3482 
õxåa_˛_cou¡
[
i
] = 0;

3483 
‰egfûe_˛_cou¡
[
i
] = 0;

3484 
„xåa_˛_cou¡
[
i
] = 0;

3485 
iissueq_˛_cou¡
[
i
] = 0;

3486 
fissueq_˛_cou¡
[
i
] = 0;

3487 #ifde‡
RAW


3488 
øwq_˛_cou¡
[
i
] = 0;

3491 
	}
}

3495 
	$ruu_dum≥¡
 (
RUU_°©i⁄
 *
rs
,

3496 
ödex
,

3497 
FILE
 * 
°ªam
,

3498 
hódî
)

3500 i‡(!
°ªam
)

3501 
°ªam
 = 
°dîr
;

3503 i‡(
hódî
)

3504 
	`Ârötf
 (
°ªam
, "idx: %2d: opcode: %s, in°: `", 
ödex
, 
	`MD_OP_NAME
 (
rs
->
›
));

3506 
	`Ârötf
 (
°ªam
, " opcode: %s, in°: `", 
	`MD_OP_NAME
 (
rs
->
›
));

3507 
	`md_¥öt_ö¢
 (
rs
->
IR
,Ñs->
PC
, 
°ªam
);

3508 
	`Ârötf
 (
°ªam
, "'\n");

3509 
	`myÂrötf
 (
°ªam
, " PC: 0x%08p, NPC: 0x%08∞’ªd_PC: 0x%08p)\n", 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

3510 
	`Ârötf
 (
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecovî_ö°: %s\n", 
rs
->
ö_LSQ
 ? "t" : "f",Ñs->
ó_comp
 ? "t" : "f",Ñs->
ªcovî_ö°
 ? "t" : "f");

3511 
	`myÂrötf
 (
°ªam
, " s≥c_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n", 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

3512 
	`Ârötf
 (
°ªam
, " seq: 0x%08x,Öåa˚_£q: 0x%08x\n", 
rs
->
£q
,Ñs->
±ø˚_£q
);

3513 
	`Ârötf
 (
°ªam
, " queued: %s, issued: %s, com∂ëed: %s\n", 
rs
->
queued
 ? "t" : "f",Ñs->
issued
 ? "t" : "f",Ñs->
com∂ëed
 ? "t" : "f");

3514 
	`Ârötf
 (
°ªam
, " o≥ønd†ªady: %s\n", 
	`OPERANDS_READY
 (
rs
) ? "t" : "f");

3515 
	}
}

3519 
	$ruu_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

3521 
num
, 
hód
;

3522 
RUU_°©i⁄
 *
rs
;

3524 
c⁄ãxt
 *
cuºít
;

3526 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3528 i‡(!
°ªam
)

3529 
°ªam
 = 
°dîr
;

3531 
	`Ârötf
 (
°ªam
, "** Thªad %d **\n", 
thªadid
);

3532 
	`Ârötf
 (
°ªam
, "** RUU state **\n");

3533 
	`Ârötf
 (
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
cuºít
->
RUU_hód
, cuºít->
RUU_èû
);

3534 
	`Ârötf
 (
°ªam
, "RUU_num: %d\n", 
cuºít
->
RUU_num
);

3536 
num
 = 
cuºít
->
RUU_num
;

3537 
hód
 = 
cuºít
->
RUU_hód
;

3538 
num
)

3540 
rs
 = &(
cuºít
->
RUU
[
hód
]);

3541 
	`ruu_dum≥¡
 (
rs
,Ñ†- 
cuºít
->
RUU
, 
°ªam
, 
TRUE
);

3542 
hód
 = (hód + 1Ë% 
RUU_size
;

3543 
num
--;

3545 
	}
}

3549 
	$lsq_öô
 (
thªadid
)

3551 
i
 = 0;

3552 
c⁄ãxt
 *
cuºít
;

3554 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3556 
cuºít
->
LSQ
 = 
	`ˇŒoc
 (
LSQ_size
,  (
RUU_°©i⁄
));

3557 i‡(!
cuºít
->
LSQ
)

3558 
	`Áèl
 ("out of virtual memory");

3559 
i
 = 0; i < 
LSQ_size
; i++)

3561 
cuºít
->
LSQ
[
i
].
ödex
 = i;

3562 
cuºít
->
LSQ
[
i
].
thªadid
 =Åhreadid;

3564 
cuºít
->
LSQ_num
 = 0;

3565 
cuºít
->
LSQ_hód
 = cuºít->
LSQ_èû
 = 0;

3566 
cuºít
->
LSQ_cou¡
 = 0;

3567 
cuºít
->
LSQ_fcou¡
 = 0;

3568 
cuºít
->
m_shLQNum
 = 0;

3569 
cuºít
->
m_shSQNum
 = 0;

3570 
m_tŸÆSèŒ
[
thªadid
] = 0;

3571 
m_sqLQFuŒ
[
thªadid
] = 0;

3572 
m_sqSQFuŒ
[
thªadid
] = 0;

3573 
m_RUUFuŒ
[
thªadid
] = 0;

3574 
m_commôSèŒ
[
thªadid
] = 0;

3576 
	}
}

3581 #ifde‡
COUNT_LSQ


3582 
	gn⁄_issue_LSQ_num
;

3590 
	#STORE_OP_INDEX
 0

	)

3591 
	#STORE_ADDR_INDEX
 1

	)

3593 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

3594 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

3610 
RS_lök
 *
	gr¶ök_‰ì_li°
;

3611 
RS_lök
 *
	gr¶ök_li°
[
MAX_RS_LINKS
];

3614 #ifde‡
DIRECTORY


3615 
RS_li°
 *
	grs_ˇche_li°
[
MAXTHREADS
][
MSHR_SIZE
];

3618 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

3619 
cou¡î_t
 
	grs_lök_id
 = 0;

3622 
	#RSLINK_INIT
(
RSL
, 
RS
Ë\

	)

3623 ((
	gRSL
).
	g√xt
 = 
NULL
, (RSL).
	grs
 = (
RS
), (RSL).
	gèg
 = (RS)->
èg
)

3626 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

3629 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

3632 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

3635 
	#RSLINK_NEW
(
DST
, 
RS
Ë\

	)

3636 { 
RS_lök
 *
	gn_lök
; \

3637 i‡(!
	gr¶ök_‰ì_li°
) \

3638 
∑nic
("out ofÑsÜinks"); \

3639 
	grs_lök_num
++; \

3640 
	gn_lök
 = 
r¶ök_‰ì_li°
; \

3641 
	gr¶ök_‰ì_li°
 = 
r¶ök_‰ì_li°
->
√xt
; \

3642 
	gn_lök
->
	g√xt
 = 
NULL
; \

3643 
	gn_lök
->
	grs
 = (
RS
);Ç_lök->
	gèg
 = 
n_lök
->
rs
->
èg
; \

3644 
	gn_lök
->
	gœ°_u£
 = 
sim_cy˛e
; \

3645 (
	gDST
Ë
n_lök
; \

3649 
	#RSLINK_FREE
(
LINK
Ë\

	)

3650 { 
RS_lök
 *
	gf_lök
 = (
LINK
); \

3651 
	gf_lök
->
	grs
 = 
NULL
; f_lök->
	gèg
 = 0; \

3652 
	gf_lök
->
	g√xt
 = 
r¶ök_‰ì_li°
; \

3653 
	gr¶ök_‰ì_li°
 = 
f_lök
; \

3654 
	grs_lök_num
--; \

3659 
	#RSLINK_FREE_LIST
(
LINK
Ë\

	)

3660 { 
RS_lök
 *
	gÊ_lök
, *
	gÊ_lök_√xt
; \

3661 
	gÊ_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

3663 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

3664 
RSLINK_FREE
(
Ê_lök
); \

3670 
	$r¶ök_öô
 (
∆öks
)

3672 
i
;

3673 
RS_lök
 *
lök
;

3675 
r¶ök_‰ì_li°
 = 
NULL
;

3676 
i
 = 0; i < 
∆öks
; i++)

3678 
lök
 = 
	`ˇŒoc
 (1,  (
RS_lök
));

3679 i‡(!
lök
)

3680 
	`Áèl
 ("out of virtual memory");

3681 
r¶ök_li°
[
i
] = 
lök
;

3682 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

3683 
r¶ök_‰ì_li°
 = 
lök
;

3685 
	}
}

3687 
RS_lök
 * 
	$födMax_r¶ök
()

3689 
i
, 
max_id
;

3690 
RS_lök
 *
lök
;

3691 
cou¡î_t
 
max
 = 0;

3693 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

3695 if(
r¶ök_li°
[
i
]->
œ°_u£
 > 
max
)

3697 
max
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

3698 
max_id
 = 
i
;

3701  
r¶ök_li°
[
max_id
];

3702 
	}
}

3704 
RS_lök
 * 
	$födMö_r¶ök
()

3706 
i
, 
mö_id
;

3707 
RS_lök
 *
lök
;

3708 
cou¡î_t
 
mö
 = 
WAIT_TIME
;

3710 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

3712 if(
r¶ök_li°
[
i
]->
œ°_u£
 < 
mö
)

3714 
mö
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

3715 
mö_id
 = 
i
;

3718  
r¶ök_li°
[
mö_id
];

3719 
	}
}

3721 #ifde‡
DIRECTORY


3723 
	$rs_ˇche_öô
()

3725 
i
, 
n
;

3726 
n
 = 0;Ç < 
MAXTHREADS
;Ç++)

3728 
i
=0; i<
MSHR_SIZE
; i++)

3729 
rs_ˇche_li°
[
n
][
i
] = 
NULL
;

3731 
	}
}

3738 
	$check_fu_busy
 ()

3740 
i
;

3742 
i
 = 0; i < 
numc⁄ãxts
; i++)

3744 
fu_busy
[
i
] = 0;

3748 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

3750 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
)

3751 
fu_busy
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]++;

3753 
	}
}

3763 
	$ruu_ªÀa£_fu
 ()

3765 
i
;

3768 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

3771 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

3773 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

3775 #ifde‡ 
PWR_ALU


3776 #ifde‡
ALU_MERGE


3777 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

3779 
ülu1_ac˚ss
++;

3780 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

3782 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

3784 
Álu1_ac˚ss
++;

3785 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

3788 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

3790 
ülu1_ac˚ss
++;

3791 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

3793 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IMULT_INDEX
)

3795 
ülu2_ac˚ss
++;

3796 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu2_ac˚ss
++;

3799 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

3801 
Álu1_ac˚ss
++;

3802 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

3805 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPMULT_INDEX
)

3807 
Álu2_ac˚ss
++;

3808 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu2_ac˚ss
++;

3816 
	}
}

3818 #ifde‡
DIRECTORY


3819 #ifde‡
CONF_RES_RESEND


3820 
QUEUE_EVENT
 *
	gª∂y_queue
[
MAXTHREADS
], *
	g£nd_queue
[MAXTHREADS];

3822 
DIRECTORY_EVENT
 *
	gdú_evít_queue
;

3823 
DIRECTORY_EVENT
 *
	gevít_li°
[
L2_MSHR_SIZE
];

3826 
	$dú_evítq_öô
()

3828 
n
 = 0;

3829 #ifde‡
CONF_RES_RESEND


3830 
n
 = 0;Ç<
MAXTHREADS
;Ç++)

3832 
ª∂y_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

3833 
£nd_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

3834 
	`öôQueue
(
ª∂y_queue
[
n
]);

3835 
	`öôQueue
(
£nd_queue
[
n
]);

3838 
dú_evít_queue
 = 
NULL
;

3839 
n
 = 0;Ç<
L2_MSHR_SIZE
;Ç++)

3840 
evít_li°
[
n
] = 
NULL
;

3841 
	}
}

3843 #ifde‡
CONF_RES_RESEND


3845 
	$öôQueue
(
QUEUE_EVENT
 *
queue
)

3847 
i
;

3848 if(!
queue
) ;

3849 
queue
->
‰ì_E¡rõs
 = 
QUEUE_SIZE
;

3850 
i
=0; i<
QUEUE_SIZE
; i++)

3852 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 0;

3853 
queue
->
Queue_íåy
[
i
].
evít
 = 
NULL
;

3855 
	}
}

3859 
	$buf„r_fuŒ_check
(
DIRECTORY_EVENT
 *
evít
)

3861 
vc
 = 0, 
›ti⁄s
 = -1, 
buf„r_fuŒ
 = 0;

3862 if((
evít
->
des1
*
mesh_size
+evít->
des2
 !evít->
§c1
*mesh_size+evít->
§c2
Ë&& (evít->
öput_buf„r_fuŒ
Ë&& (evít->
›î©i⁄
 =
MISS_WRITE
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 ||Évít->›î©i⁄ =
MISS_IL1
))

3864 #ifde‡
MC


3865 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

3867 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

3868 
buf„r_fuŒ
 = 1;

3870 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

3872 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3873 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

3874 if(
vc
 == -1)

3875 
buf„r_fuŒ
 = 1;

3878 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

3881 
buf„r_fuŒ
 = 
	`CombNëw‹kBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1),Évít->
›î©i⁄
, &
vc
);

3883 if(
buf„r_fuŒ
)

3885 #ifde‡
POPNET


3886 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3887 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

3890 #ifde‡
POPNET


3891 
vc
 == -1

3893 #ifde‡
OPTICAL_INTERCONNECT


3894 
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
)

3900 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3902 
I≈ut_queue_fuŒ
 ++;

3903 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

3909 
evít
->
öput_buf„r_fuŒ
 = 0;

3910 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

3911 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

3912 if(
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3914 
SèŒ_öput_queue
 +
sim_cy˛e
 - 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
];

3915 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

3922 
	}
}

3923 
	$dú_evítq_√xãvít
()

3925 
DIRECTORY_EVENT
 *
evít
, *
ev
, *
√xt
, *
¥ev
;

3926 
i
, 
ö£π_Êag
 = 0;

3927 
evít
 = 
dú_evít_queue
;

3928 
ev
 = 
NULL
;

3929 
evít
!=
NULL
)

3931 
√xt
 = 
evít
->next;

3933 i‡(
evít
->
whí
 <
sim_cy˛e
)

3935 
ö£π_Êag
 = 
	`buf„r_fuŒ_check
(
evít
);

3936 if(
ö£π_Êag
 == 0)

3938 if(
evít
 =
dú_evít_queue
)

3940 
dú_evít_queue
 = 
evít
->
√xt
;

3941 
evít
->
√xt
 = 
NULL
;

3942 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

3944 if(
evít
->
≥ndög_Êag
 == 0)

3946 
evít
->
≥ndög_Êag
 = 1;

3947 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] ++;

3950 
evít
->
√xt
 = 
dú_evít_queue
;

3951 
dú_evít_queue
 = 
evít
;

3952 
ev
 = 
evít
;

3953 
evít
 =Évít->
√xt
;

3954 
ßme_L1_L2_fifo_fuŒ
 ++;

3958 if(
evít
->
≥ndög_Êag
 == 1)

3959 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] --;

3960 
evít
 = 
dú_evít_queue
;

3966 
ev
->
√xt
 = 
evít
->next;

3967 
evít
->
√xt
 = 
NULL
;

3968 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

3970 if(
evít
->
≥ndög_Êag
 == 0)

3972 
evít
->
≥ndög_Êag
 = 1;

3973 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] ++;

3975 
evít
->
√xt
 = 
dú_evít_queue
;

3976 
dú_evít_queue
 = 
evít
;

3977 
ev
 = 
evít
;

3978 
evít
 =Évít->
√xt
;

3979 
ßme_L1_L2_fifo_fuŒ
 ++;

3983 if(
evít
->
≥ndög_Êag
 == 1)

3984 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] --;

3985 
evít
 = 
ev
->
√xt
;

3989 if(
ö£π_Êag
 == 1)

3991 
ev
 = 
evít
;

3992 
evít
 =Évít->
√xt
;

3994 if(
ö£π_Êag
 == 2)

3996 if(
evít
 =
dú_evít_queue
)

3998 
dú_evít_queue
 = 
evít
->
√xt
;

3999 
evít
->
√xt
 = 
NULL
;

4000 
	`dú_evítq_ö£π
(
evít
);

4001 
evít
 = 
dú_evít_queue
;

4005 
ev
->
√xt
 = 
evít
->next;

4006 
evít
->
√xt
 = 
NULL
;

4007 
	`dú_evítq_ö£π
(
evít
);

4008 
evít
 = 
ev
->
√xt
;

4015 
ev
 = 
evít
;

4016 
evít
 =Évít->
√xt
;

4020 
	}
}

4033 #ifde‡
DIRECTORY


4034 
RS_lök
 *
	gevít_queue
;

4036 
RS_lök
 *
	gevít_queue
;

4040 
	$evítq_öô
 ()

4042 
evít_queue
 = 
NULL
;

4043 
	}
}

4048 
	$evítq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4050 
RS_lök
 *
ev
;

4052 
c⁄ãxt
 *
cuºít
;

4054 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4056 i‡(!
°ªam
)

4057 
°ªam
 = 
°dîr
;

4059 
	`Ârötf
 (
°ªam
, "**Évent queue state **\n");

4061 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

4064 i‡(
	`RSLINK_VALID
 (
ev
))

4066 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4068 
	`Ârötf
 (
°ªam
, "idx: %2d: @ %.0f\n", 
rs
->
ödex
, (Ë
ev
->
x
.
whí
);

4069 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
FALSE
);

4072 
	}
}

4079 
evítq_queue_evít
 (
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí


4080 #ifde‡
DIRECTORY


4081 , 
œt
)

4086 
RS_lök
 *
	g¥ev
, *
	gev
, *
	g√w_ev
;

4088 i‡(
	grs
->
	gcom∂ëed
)

4089 
∑nic
 ("event completed");

4091 i‡(
	gwhí
 <
sim_cy˛e
)

4092 
∑nic
 ("event occurred inÅheÖast");

4095 
RSLINK_NEW
 (
√w_ev
, 
rs
);

4096 
	g√w_ev
->
	gx
.
	gwhí
 = 
whí
;

4098 #ifde‡
DIRECTORY


4099 if(
	grs
 =
NULL
)

4100 
¥ötf
("RSÖrobÀm %Œd\n", 
sim_cy˛e
);

4103 
	g¥ev
 = 
NULL
, 
	gev
 = 
evít_queue
;Év &&Év->
	gx
.
	gwhí
 < whí;Öªv = 
ev
,Év =Év->
√xt
);

4105 i‡(
	g¥ev
)

4108 
	g√w_ev
->
	g√xt
 = 
¥ev
->
√xt
;

4109 
	g¥ev
->
	g√xt
 = 
√w_ev
;

4114 
	g√w_ev
->
	g√xt
 = 
evít_queue
;

4115 
	gevít_queue
 = 
√w_ev
;

4124 
RUU_°©i⁄
 *

4125 
	$evítq_√xt_evít
 ()

4127 
RS_lök
 *
ev
;

4128 
RS_lök
 *
ãmp_ev
, *
¥ed_ev
 = 
NULL
;

4130 
ãmp_ev
 = 
evít_queue
;

4132 
ãmp_ev
 && !
thec⁄ãxts
[ãmp_ev->
rs
->
thªadid
]->
a˘ive_this_cy˛e
)

4134 
¥ed_ev
 = 
ãmp_ev
;

4135 
ãmp_ev
 =Åemp_ev->
√xt
;

4138 i‡(
ãmp_ev
 &&Åemp_ev->
x
.
whí
 <
sim_cy˛e
)

4141 
ev
 = 
ãmp_ev
;

4142 i‡(
ãmp_ev
 =
evít_queue
)

4144 
evít_queue
 =Évít_queue->
√xt
;

4148 
¥ed_ev
->
√xt
 = 
ãmp_ev
->next;

4152 i‡(
	`RSLINK_VALID
 (
ev
))

4154 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4157 
	`RSLINK_FREE
 (
ev
);

4160  
rs
;

4165 
	`RSLINK_FREE
 (
ev
);

4168  
	`evítq_√xt_evít
 ();

4174  
NULL
;

4176 
	}
}

4178 
	$ch™geInEvítQueue
 (
RUU_°©i⁄
 * 
rs
, 
thªadid
)

4182 
RS_lök
 *
ev
 = 
evít_queue
;

4183 
RS_lök
 *
¥ev
 = 
NULL
;

4185 
ev
 !
NULL
)

4187 i‡(
ev
->
rs
 ==Ñs)

4189 
¥ev
 = 
ev
;

4190 
ev
 =Év->
√xt
;

4193 i‡(
ev
 =
NULL
)

4195 
ev
->
x
.
whí
 = 
sim_cy˛e
;

4198 i‡(
¥ev
 =
NULL
)

4199 
evít_queue
 = 
ev
->
√xt
;

4201 
¥ev
->
√xt
 = 
ev
->next;

4203 
	`RSLINK_FREE
 (
ev
);

4204 
	}
}

4220 
RS_lök
 *
	gªady_queue
;

4224 
	$ªadyq_öô
 ()

4226 
ªady_queue
 = 
NULL
;

4227 
	}
}

4232 
	$ªadyq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4234 
RS_lök
 *
lök
;

4236 
c⁄ãxt
 *
cuºít
;

4238 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4240 i‡(!
°ªam
)

4241 
°ªam
 = 
°dîr
;

4243 
	`Ârötf
 (
°ªam
, "**Ñeady queue state **\n");

4245 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

4248 i‡(
	`RSLINK_VALID
 (
lök
))

4250 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
lök
);

4252 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
TRUE
);

4255 
	}
}

4271 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

4273 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

4276 i‡(
rs
->
queued
)

4277 
	`∑nic
("node isálready queued");

4279 
rs
->
queued
 = 
TRUE
;

4281 #ifde‡
REMOVE_COMPUTE_QUEUE


4282 #ifde‡
PWR_WAKE


4283 i‡(
rs
->
ö_LSQ
)

4285 
lsqªady
++;

4286 
rs
->
cou¡ed_lsqªady
 = 1;

4288 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

4290 
‰ódy
++;

4291 
rs
->
cou¡ed_‰ódy
 = 1;

4295 
úódy
++;

4296 
rs
->
cou¡ed_úódy
 = 1;

4302 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

4303 
√w_node
->
x
.
£q
 = 
rs
->seq;

4306 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

4308 i‡(
¥ev
)

4311 
√w_node
->
√xt
 = 
¥ev
->next;

4312 
¥ev
->
√xt
 = 
√w_node
;

4317 
√w_node
->
√xt
 = 
ªady_queue
;

4318 
ªady_queue
 = 
√w_node
;

4320 
	}
}

4325 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

4327 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

4330 i‡(
rs
->
queued
)

4331 
	`∑nic
 ("node isálready queued");

4332 
rs
->
queued
 = 
TRUE
;

4334 #ifde‡
PWR_WAKE


4335 #ifde‡
READY_ROB_STAT


4336 i‡(!
rs
->
ö_LSQ
)

4337 
ªady_thrd
[
rs
->
thªadid
]++;

4339 i‡(
rs
->
ö_LSQ
)

4341 
lsqªady
++;

4342 
lsqªady_˛
[
rs
->
˛u°î
]++;

4343 
rs
->
cou¡ed_lsqªady
 = 1;

4345 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

4347 
‰ódy
++;

4348 
‰ódy_˛
[
rs
->
˛u°î
]++;

4349 
rs
->
cou¡ed_‰ódy
 = 1;

4353 
úódy
++;

4354 
úódy_˛
[
rs
->
˛u°î
]++;

4355 
rs
->
cou¡ed_úódy
 = 1;

4360 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

4361 
√w_node
->
x
.
£q
 = 
rs
->seq;

4364 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_LONGLAT
 | 
F_CTRL
))

4367 
¥ev
 = 
NULL
;

4368 
node
 = 
ªady_queue
;

4373 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

4376 i‡(
¥ev
)

4379 
√w_node
->
√xt
 = 
¥ev
->next;

4380 
¥ev
->
√xt
 = 
√w_node
;

4385 
√w_node
->
√xt
 = 
ªady_queue
;

4386 
ªady_queue
 = 
√w_node
;

4388 
	}
}

4399 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

4402 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

4405 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

4412 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

4413 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] \

4414 : 
cuºít
->
¸óã_ve˘‹
[
N
])

4417 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

4418 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹_π
[
N
] \

4419 : 
cuºít
->
¸óã_ve˘‹_π
[
N
])

4422 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë(
cuºít
->
•ec_mode
 \

	)

4423 ? (
BITMAP_SET
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

4424 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

4425 : (
cuºít
->
¸óã_ve˘‹
[
N
] = (
L
)))

4432 
	#DNA
 (0)

	)

4434 #i‡
deföed
(
TARGET_PISA
)

4437 
	#DGPR
(
N
Ë(N)

	)

4438 
	#DGPR_D
(
N
Ë((NË&~1)

	)

4441 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

4442 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

4443 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

4446 
	#DHI
 (0+32+32)

	)

4447 
	#DLO
 (1+32+32)

	)

4448 
	#DFCC
 (2+32+32)

	)

4449 
	#DTMP
 (3+32+32)

	)

4451 #ñi‡
deföed
(
TARGET_ALPHA
)

4454 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

4457 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

4460 
	#DFPCR
 (0+32+32)

	)

4461 
	#DUNIQ
 (1+32+32)

	)

4462 
	#DTMP
 (2+32+32)

	)

4465 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4473 
	#SET_NPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_NPC
 = (EXPR))

	)

4476 #unde‡
SET_TPC


4477 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

4480 
	#CPC
 (
cuºít
->
ªgs
.
ªgs_PC
)

	)

4481 
	#SET_CPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_PC
 = (EXPR))

	)

4486 #ifde‡
TEST_BUG


4488 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

4489 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

4490 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

4491 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4492 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

4493 
BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

4494 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

4495 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

4496 #i‡
deföed
(
TARGET_PISA
)

4501 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4502 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

4503 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

4504 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4505 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

4506 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4507 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

4508 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

4509 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4510 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

4511 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

4512 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4513 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

4514 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4515 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

4516 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

4517 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4518 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

4519 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

4520 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4521 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)),\

4522 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4523 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

4524 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

4529 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

4530 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

4531 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

4532 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4533 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

4534 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0), \

4535 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

4536 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

4537 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

4538 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

4539 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

4540 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4541 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

4542 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1), \

4543 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

4544 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

4545 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

4546 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4547 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4548 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4549 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4550 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2), \

4551 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4552 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4554 #ñi‡
deföed
(
TARGET_ALPHA
)

4559 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

4560 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

4561 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

4562 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4563 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

4564 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

4565 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

4566 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

4567 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

4568 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

4569 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

4570 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4571 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

4572 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

4573 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

4574 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

4579 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

4580 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

4581 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

4582 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4583 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

4584 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0), \

4585 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

4586 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

4587 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

4588 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

4589 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

4590 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4591 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

4592 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

4593 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

4594 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

4595 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

4596 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4597 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4598 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4599 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4600 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

4601 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4602 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4605 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4609 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

4610 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

4611 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

4612 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4613 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

4614 
BITMAP_SET
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

4615 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

4616 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

4617 #i‡
deföed
(
TARGET_PISA
)

4622 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4623 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

4624 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

4625 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4626 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

4627 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4628 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

4629 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

4630 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4631 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

4632 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

4633 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4634 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

4635 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4636 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

4637 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

4638 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4639 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

4640 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

4641 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4642 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)), \

4643 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4644 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

4645 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

4650 
	#HI
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

4651 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

4652 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

4653 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4654 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

4655 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

4656 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

4657 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

4658 
	#LO
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

4659 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

4660 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

4661 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4662 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

4663 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

4664 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

4665 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

4666 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

4667 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4668 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4669 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4670 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4671 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 2),\

4672 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4673 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4675 #ñi‡
deföed
(
TARGET_ALPHA
)

4680 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

4681 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

4682 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

4683 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4684 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

4685 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

4686 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

4687 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

4688 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

4689 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

4690 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

4691 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4692 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

4693 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

4694 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

4695 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

4700 
	#FPCR
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

4701 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

4702 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

4703 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4704 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

4705 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 0),\

4706 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

4707 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

4708 
	#UNIQ
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

4709 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

4710 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

4711 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4712 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

4713 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

4714 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

4715 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

4716 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

4717 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4718 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4719 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4720 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4721 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

4722 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4723 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4726 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4735 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
Ë\

	)

4736 (
	gaddr
 = (
SRC
), \

4737 (
	gcuºít
->
	g•ec_mode
 \

4738 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

4739 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V), cuºít->
id
, 
ö°
))), \

4740 
	gSRC_V
)

4742 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

4743 
__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

4744 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

4745 
MD_SWAPH
(
__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

4746 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

4747 
MD_SWAPW
(
__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

4748 #ifde‡
HOST_HAS_QWORD


4749 
	#READ_QWORD
(
SRC
, 
FAULT
Ë\

	)

4750 
MD_SWAPQ
(
__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

4753 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
Ë\

	)

4754 (
	gDST_V
 = (
SRC
), 
	gaddr
 = (
DST
), \

4755 (
	gcuºít
->
	g•ec_mode
 \

4756 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

4757 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V), cuºít->
id
, 
ö°
))))

4759 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4760 
__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

4761 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4762 
__WRITE_SPECMEM
(
MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

4763 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4764 
__WRITE_SPECMEM
(
MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

4766 #ifde‡
HOST_HAS_QWORD


4767 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4768 
__WRITE_SPECMEM
(
MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

4772 
	#SYSCALL
(
INST
Ë\

	)

4774 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative syscall") : () 0), \

4775 
sys_sysˇŒ
(&(
cuºít
->
ªgs
), 
mem_ac˚ss
, cuºít->
mem
, 
INST
, 
TRUE
))

4777 
	#QUIESCE
(
INST
Ë\

	)

4779 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative quiescent instruction") : () 0), \

4780 
ˇŒ_quõs˚
(
cuºít
->
id
))

4785 
	$cv_öô
 (
thªadid
)

4787 
i
;

4788 
c⁄ãxt
 *
cuºít
;

4790 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4794 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

4796 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

4797 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 0;

4798 
cuºít
->
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

4799 
cuºít
->
•ec_¸óã_ve˘‹_π
[
i
] = 0;

4803 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

4805 
	}
}

4810 
	$cv_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4812 
i
;

4813 
CV_lök
 
ít
;

4815 
c⁄ãxt
 *
cuºít
;

4817 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4819 i‡(!
°ªam
)

4820 
°ªam
 = 
°dîr
;

4822 
	`Ârötf
 (
°ªam
, "** create vector state **\n");

4824 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

4826 
ít
 = 
	`CREATE_VECTOR
 (
i
);

4827 i‡(!
ít
.
rs
)

4828 
	`Ârötf
 (
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

4830 
	`Ârötf
 (
°ªam
, "[cv%02d]: from %s, idx: %d\n", 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),É¡.rs->
ödex
);

4832 
	}
}

4834 
ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
);

4837 
åa˚r_ªcovî
 (
thªadid
);

4838 
ªcFªeRegLi°
 (
thªadid
);

4841 #ifde‡
DIRECTORY


4842 
	$RS_block_li°
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
, 
íåy
, 
thªadid
)

4844 if(
rs
->
•ec_mode
) ;

4845 if(
íåy
 < 1 ||É¡ry > 
MSHR_SIZE
)

4846 
	`∑nic
("L1 MSHR: wrong mshrÉntry");

4848 
íåy
 =Éntry - 1;

4850 
RS_li°
 *
rs_li°
;

4851 
rs_li°
 = 
	`ˇŒoc
–1, (
RS_li°
));

4852 
rs_li°
->
rs
 =Ñs;

4853 
rs_li°
->
√xt
 = 
NULL
;

4854 
rs_li°
->
•ec_mode
 = 
rs
->spec_mode;

4855 
rs_li°
->
whí
 = when;

4856 
rs_li°
->
√xt
 = 
rs_ˇche_li°
[
thªadid
][
íåy
];

4857 
rs_ˇche_li°
[
thªadid
][
íåy
] = 
rs_li°
;

4858 
	}
}

4860 
	$RS_block_√xt
(
RS_li°
 *
cur
)

4862 if(!
cur
->
rs
) ;

4864 if(
cur
->
•ec_mode
 && !cur->
rs
->spec_mode)

4866 
cur
->
rs
->
ˇche_ªady
 = 0;

4867 if(((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
Ë&& (cur->rs->
issued
 || cur->rs->
queued
 || cur->rs->
com∂ëed
)) || (!(MD_OP_FLAGS(cur->rs->op) & F_LOAD) && !(cur->rs->issued && !cur->rs->queued)))

4868 
	`∑nic
("L1 MSHR: issue, queue, or commit flag is set!!!");

4870 if((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
))

4874 
	`ªadyq_íqueue
 (
cur
->
rs
);

4883 
cur
->
rs
->
wrôewaô
 = 2;

4884 
	}
}

4891 
	gcommô_idÀ
 = 0;

4892 
	gcommô_Êag
[
MAXTHREADS
] = {0};

4897 
	$ruu_commô
 ()

4900 
i
, 
j
, 
thªadid
, 
œt
, 
evíts
, 
commôãd
;

4901 
mm
;

4902 
c⁄ãxt
 *
cuºít
;

4903 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
, 
LSQ_ödex
;

4904 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

4905 
°‹e_›
 = 0, 
pcbSórch
;

4906 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

4907 #ifde‡
DIRECTORY


4908 
ªadSh¨eDú
 = 0;

4911 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

4912 
cou¡edThisCy˛e
 = 0;

4914 
md_addr_t
 
ãmpAddr
;

4915 
md_›code
 
ãmpOp
;

4917 
thªad_commô
 = 0;

4918 
isSTLC
;

4922 
j
 = 0; j <
numc⁄ãxts
; j++, 
thªad_commô
 = (thread_commit + 1) %Çumcontexts)

4924 #ifdef 
EDA


4925 i‡(
thec⁄ãxts
[
thªad_commô
]->
ma°îid
 == 2)

4928 i‡(
j
 > 0)

4930 
commô_d⁄e
[
j
 - 1] = 
commôãd
;

4931 if(!
commôãd
)

4932 
m_commôSèŒ
[
j
-1]++;

4934 i‡(
j
 =
numc⁄ãxts
)

4937 
thªadid
 = 
thªad_commô
;

4938 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4940 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

4941 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

4942 
commôãd
 = 0;

4943 
haha
 = 0;

4947 
cuºít
->
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

4949 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

4950 i‡(
busSlŸCou¡
 < 11)

4952 i‡(!
cou¡edThisCy˛e
)

4953 
°ÆlNoBusSlŸ
++;

4954 
cou¡edThisCy˛e
 = 1;

4958 
RUU_°©i⁄
 *
rs
 = &(
cuºít
->
RUU
[cuºít->
RUU_hód
]);

4961 
ãmpAddr
 = 0;

4962 
°‹e_›
 = 0;

4963 
ãmpOp
 = 0;

4964 
isSTLC
 = 0;

4966 #ifdef 
EDA


4967 i‡((
cuºít
->
ma°îid
 =1Ë&& (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& 
	`queueSize
 (cuºít->
¥edQueue
) == -1)

4970 #ifde‡ 
DIRECTORY


4971 if(
rs
->
wrôewaô
 =1 && !
mshr_≥ndög_evít
[
j
])

4976 i‡(!
rs
->
com∂ëed
)

4981 i‡(
cuºít
->
ma°îid
 =0 && 
rs
->
PC
 < 0x120000000)

4982 
	`∑nic
 ("Illegal instructionÅryingÅo commit\n");

4984 #ifde‡
SMD_USE_WRITE_BUF


4986 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
m_L1WBufC¡
[
thªadid
]))

4989 #ifde‡
SERIALIZATION_ACK


4990 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
numSt‹ePídög
[
thªadid
]

4991 #ifde‡
READ_PERMIT


4992 || 
numLﬂdPídög
[
thªadid
]

4998 
evíts
 = 0;

5001 i‡(
cuºít
->
RUU
[cuºít->
RUU_hód
].
ó_comp
)

5004 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[cuºít->
RUU_hód
].threadid)

5006 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5007 
ãmp_LSQ_num
--;

5008 i‡(!
ãmp_LSQ_num
)

5009 
	`∑nic
 ("RUUánd LSQ out of sync");

5011 i‡(
cuºít
->
LSQ_num
 <0 || !cuºít->
LSQ
[
LSQ_ödex
].
ö_LSQ
)

5012 
	`∑nic
 ("RUU out of sync with LSQ");

5014 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
com∂ëed
)

5019 #ifde‡
SEQUENTIAL_CONSISTENCY


5020 i‡(
övÆid©i⁄SèŒ
[
thªadid
])

5024 i‡(
commôSèŒ
[
thªadid
])

5028 #ifde‡
INV_ACK_CON


5029 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& (
≥ndög_övÆid©i⁄
[
thªadid
]))

5032 #ifde‡
SERIALIZATION_ACK


5033 if(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
numSt‹ePídög
[
thªadid
] <0 && 
rs
->
wrôewaô
 == 0)

5037 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5039 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
)

5040 
isSTLC
 = 1;

5041 #ifde‡
SMD_USE_WRITE_BUF


5042 i‡(
m_L1WBufC¡
[
thªadid
] >
SMD_L1_WBUF_SIZE
)

5044 if(
isSTLC
 && 
m_L1WBufC¡
[
thªadid
])

5048 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
PC
 = 
cuºít
->
LSQ
[
LSQ_ödex
].PC;

5049 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
IR
 = 
cuºít
->
LSQ
[
LSQ_ödex
].IR;

5050 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
›
 = 
cuºít
->
LSQ
[
LSQ_ödex
].op;

5051 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
lsqId
 = 
LSQ_ödex
;

5052 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
robId
 = 
rs
->
ödex
;

5053 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeVÆue
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
vÆ_ø
;

5054 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
addr
 = 
cuºít
->
LSQ
[
LSQ_ödex
].addr;

5055 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
sim_num_ö¢
 = 
cuºít
->
LSQ
[
LSQ_ödex
].sim_num_insn;

5056 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeSèπed
 = 0;

5057 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
föishTime
 = 0;

5058 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
isMiss
 = 0;

5059 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
íåyTime
 = 
sim_cy˛e
;

5060 if–
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5062 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 
isSTLC
);

5063 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 1;

5064 if(
isSTLC
 && 
°‹eC⁄dFaû
 == 0)

5065 
	`∑nic
("Store conditional should fail oná L1 miss");

5068 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 0;

5070 
m_L1WBufC¡
[
thªadid
]++;

5071 
m_L1WBuf_èû
[
thªadid
] = (m_L1WBuf_èû[thªadid]+1)%
SMD_L1_WBUF_SIZE
;

5074 #ifde‡
DIRECTORY


5075 if(
rs
->
wrôewaô
 == 2)

5077 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 0);

5078 
evíts
 |
PEV_CACHEMISS
;

5083 #ifde‡
DIRECTORY


5084 if(
rs
->
ˇche_ªady
 == 1)

5088 
°‹e_›
 = 1;

5089 
boﬁ
 = 0;

5090 
ªs_ãm∂©e
 *
fu
;

5091 
∑ª¡ID
;

5093 
∑ª¡ID
 = 
thªadid
;

5095 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
), 
thªadid
);

5096 #ifde‡ 
DCACHE_MSHR


5097 i‡(
fu
 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,ÅhªadidË&& !
boﬁ
)

5099 #ifde‡
MSHR


5100 i‡(
fu
 && !
mshr_fuŒ
 && !
boﬁ
)

5102 i‡(
fu
 && !
boﬁ
)

5106 i‡(
fu
->
ma°î
->
busy
)

5107 
	`∑nic
 ("functional unitálready in use");

5109 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

5110 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

5111 
fu
->
ma°î
->
du∂iˇã
 = 0;

5115 #i‚de‡
DIRECTORY


5116 #ifde‡
SEQUENTIAL_CONSISTENCY


5117 #ifdef 
EDA


5118 i‡(
cﬁÀ˘_°©s
 && 
cuºít
->
ma°îid
 == 0)

5120 i‡(
cﬁÀ˘_°©s
)

5123 
bx
, 
cx
, 
dx
;

5124 
c⁄ãxt
 *
tmpCxt
;

5125 
md_addr_t
 
mask
;

5127 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

5129 
bx
 = 0; bx < 
numc⁄ãxts
; bx++)

5131 
boﬁ
 = 0;

5133 
tmpCxt
 = 
thec⁄ãxts
[
bx
];

5134 #ifdef 
EDA


5135 i‡(
tmpCxt
->
ma°îid
 != 0)

5139 i‡(
tmpCxt
 !
cuºít
)

5141 
cx
 = 
tmpCxt
->
LSQ_hód
, 
dx
 = 0; dx !tmpCxt->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

5143 i‡((
	`MD_OP_FLAGS
 (
tmpCxt
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5145 i‡((
tmpCxt
->
LSQ
[
cx
].
addr
 & 
mask
Ë=(
cuºít
->LSQ[
LSQ_ödex
].addr & mask))

5147 i‡(!
tmpCxt
->
LSQ
[
cx
].
•ec_mode
 && !tmpCxt->LSQ[cx].
isPª„tch
)

5150 
	`fixS≥cSèã
 (
tmpCxt
->
LSQ
[
cx
].
¥od
[1]->
ödex
,ÅmpCxt->
id
);

5151 
tmpCxt
->
ªgs
 =ÅmpCxt->
LSQ
[
cx
].
¥od
[1]->
backupReg
;

5152 
	`£qC⁄si°™cyRïœy
 (
tmpCxt
->
LSQ
[
cx
].
¥od
[1]->
ödex
,ÅmpCxt->
id
);

5153 
övÆid©i⁄_ª∂ay
[
bx
]++;

5164 #ifde‡
RELAXED_CONSISTENCY


5165 #ifdef 
EDA


5166 i‡(
cﬁÀ˘_°©s
 && 
cuºít
->
ma°îid
 == 0)

5168 i‡(
cﬁÀ˘_°©s
)

5171 
bx
, 
cx
, 
dx
;

5172 
c⁄ãxt
 *
tmpCxt
;

5173 
md_addr_t
 
mask
;

5175 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

5177 
bx
 = 0; bx < 
numc⁄ãxts
; bx++)

5179 
boﬁ
 = 0;

5181 
tmpCxt
 = 
thec⁄ãxts
[
bx
];

5182 #ifdef 
EDA


5183 i‡(
tmpCxt
->
ma°îid
 != 0)

5187 i‡(
tmpCxt
 !
cuºít
)

5189 
cx
 = 
tmpCxt
->
LSQ_hód
, 
dx
 = 0; dx !tmpCxt->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

5191 i‡((
	`MD_OP_FLAGS
 (
tmpCxt
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5193 i‡((
tmpCxt
->
LSQ
[
cx
].
addr
 & 
mask
Ë=(
cuºít
->LSQ[
LSQ_ödex
].addr & mask))

5195 i‡(!
tmpCxt
->
LSQ
[
cx
].
•ec_mode
 &&ÅmpCxt->LSQ[cx].
issued
)

5197 
tmpCxt
->
LSQ
[
cx
].
övÆid©i⁄Re˚ived
 = 1;

5208 
ãmpOp
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
›
;

5209 i‡(
ˇche_dl1
[
thªadid
])

5212 
dˇche_ac˚ss
++;

5213 
cuºít
->
dˇche_ac˚ss
++;

5215 
övÆid©eOthîCache
 = 0;

5217 #ifde‡
DIRECTORY


5218 
m©chnum
;

5219 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

5220 if(
m©chnum
)

5222 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

5223 
rs
->
ˇche_ªady
 = 1;

5224 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

5229 #ifde‡
DIRECTORY


5230 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

5232 if(
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5234 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 1);

5235 if(
°‹eC⁄dFaû
 == 0)

5236 
	`∑nic
("Store conditional should fail oná L1 miss");

5237 
œt
 = 
ˇche_dl1_œt
;

5241 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Åhreadid);

5242 i‡(
œt
<
WAIT_TIME
)

5244 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 0);

5250 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Åhreadid);

5252 #ifdef 
DCACHE_MSHR


5253 if(
œt
 > 
ˇche_dl1_œt
)

5254 #ifde‡
DIRECTORY


5255 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
œt
, 0, 
rs
);

5257 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
œt
, 0, 
NULL
);

5260 i‡(
œt
 >
WAIT_TIME
)

5262 
rs
->
wrôewaô
 = 1;

5265 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

5267 
°‹eC⁄dFaû
 = 0;

5268 
	`com∂ëeSt‹e
 (
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
 (cuºít->LSQ[LSQ_ödex].
›
), 0);

5270 i‡(!
°‹eC⁄dFaû
)

5271 #ifdef 
EDA


5273 
wL
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

5274 
qw‹d_t
 
wD
 = 0;

5275 
	`f‹m©D©aR2M
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
, cuºít->LSQ[LSQ_ödex].
vÆ_ø
, &
wD
);

5277 
rsCacheAc˚ss
 = 
cuºít
->
LSQ
[
LSQ_ödex
];

5278 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~(
wL
 - 1)), &
wD
, wL, 
sim_cy˛e
, 
NULL
, NULL,Åhreadid);

5281 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

5286 
rsCacheAc˚ss
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5287 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

5291 i‡(
œt
 > 
ˇche_dl1_œt
)

5292 
evíts
 |
PEV_CACHEMISS
;

5297 
°_b™k_c⁄f
++;

5301 #ifde‡
DIRECTORY


5308 #ifde‡
DIRECTORY


5309 
ªadSh¨eDú
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
RódSh¨eDú
;

5312 #i‡
	`deföed
(
SMD_USE_WRITE_BUF
Ë&& deföed(
SEQUENTIAL_CONSISTENCY
)

5314 i‡(
m_L1WBufC¡
[
thªadid
])

5318 #ifde‡
DIRECTORY


5319 if(
rs
->
wrôewaô
 != 1)

5322 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
ﬁd¥eg
, 
thªadid
);

5324 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5327 
	`±ø˚_√w°age
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5328 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5330 i‡(
LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5332 
ãmp_LSQ_rs
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5333 
ãmp_LSQ_ödex
 = 
LSQ_ödex
;

5334 
ãmp_LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5336 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = cuºít->LSQ[(Ë(—emp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size)];

5337 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5338 
ãmp_LSQ_ödex
 = (ãmp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size;

5341 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = *
ãmp_LSQ_rs
;

5342 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5344 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5346 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5347 
cuºít
->
m_shLQNum
--;

5349 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5351 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5352 
cuºít
->
m_shSQNum
--;

5354 if(
ruu_ö‹dî_issue
)

5356 
i
=0;i<
MAX_ODEPS
;i++)

5358 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
⁄ames
[
i
] !
NA
)

5360 
ﬁök
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5362 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5363 
	`RSLINK_FREE
 (
ﬁök
);

5365 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

5370 
cuºít
->
LSQ_hód
 = (cuºít->LSQ_hód + 1Ë% 
LSQ_size
;

5371 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5372 
cuºít
->
LSQ_num
--;

5373 
ãmp_LSQ_num
--;

5374 #ifde‡
DIRECTORY


5380 #ifde‡
DIRECTORY


5381 if(
rs
->
wrôewaô
 != 1)

5384 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_CT
 && (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5387 
b¥ed_ac˚ss
++;

5388 i‡(!(
rs
->
du∂iˇã
))

5390 
cuºít
->
b¥ed_ac˚ss
++;

5393 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5394  
rs
->
PC
,

5395  
rs
->
√xt_PC
,

5396  
rs
->
√xt_PC
 !‘s->
PC
 +

5397  (
md_ö°_t
)),

5398  
rs
->
¥ed_PC
 !‘s->
PC
 +

5399  (
md_ö°_t
)),

5400  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5401  
rs
->
›
,

5402  &
rs
->
dú_upd©e
,

5403  
rs
->
thªadid
,

5404  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5408 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
ﬁd¥eg
, 
thªadid
);

5410 
cuºít
->
RUU
[cuºít->
RUU_hód
].
èg
++;

5412 
	`±ø˚_√w°age
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5413 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
);

5415 
tŸÆ_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
di•_time
);

5416 
max_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
di•_time
), max_slip_cycles);

5418 i‡(
rs
->
issue_time
)

5420 
tŸÆ_issue_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
issue_time
);

5421 
max_issue_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
issue_time
), max_issue_slip_cycles);

5424 if(
ruu_ö‹dî_issue
)

5426 
i
=0;i<
MAX_ODEPS
;i++)

5428 i‡(
rs
->
⁄ames
[
i
] !
NA
)

5430 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5432 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5433 
	`RSLINK_FREE
 (
ﬁök
);

5435 
rs
->
odï_li°
[
i
] = 
NULL
;

5440 
cuºít
->
RUU_hód
 = (cuºít->RUU_hód + 1Ë% 
RUU_size
;

5441 
cuºít
->
RUU_num
--;

5442 
commô_Êag
[
thªadid
] = 0;

5444 i‡(
rs
->
du∂iˇã
)

5446 
COMPARE_ac˚ss
[
thªadid
]++;

5447 
com∑ª_ac˚ss
++;

5450 if(!
ruu_ö‹dî_issue
)

5452 
rob2_ac˚ss
++;

5453 
cuºít
->
rob2_ac˚ss
++;

5455 
commôãd
++;

5457 
commô_idÀ
 = 0;

5458 
i
 = 0; i < 
MAX_ODEPS
; i++)

5460 i‡(
rs
->
odï_li°
[
i
])

5461 
	`∑nic
 ("retired instruction has odeps\n");

5463 #ifde‡
DIRECTORY


5467 
	`°©_add_ßm∂e
 (
commô_width_°©
, 
commôãd
);

5469 
	}
}

5481 
	$ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
)

5484 
mm
;

5485 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5486 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
;

5488 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

5489 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

5492 
shi·_right
 = 0;

5495 
brRecovîy
[
thªadid
]++;

5497 
di•_dñay
 = 0;

5500 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

5501 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

5502 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

5503 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

5506 i‡(!
cuºít
->
RUU_num
)

5507 
	`∑nic
 ("empty RUU");

5511 
RUU_ödex
 !
bønch_ödex
)

5514 i‡(!
ãmp_RUU_num
)

5515 
	`∑nic
 ("empty RUU");

5518 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

5520 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

5523 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5524 
ãmp_LSQ_num
--;

5525 i‡(!
ãmp_LSQ_num
)

5527 
	`Ârötf
 (
°dîr
, "Thªad %d, cy˛ê%lu\n", 
thªadid
, (Ë
sim_num_ö¢
);

5528 
	`∑nic
 ("RUUánd LSQ out of sync");

5531 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5532 
ãmp_LSQ_num
--;

5534 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5535 
ãmp_RUU_num
--;

5538 i‡(
mode
 == 0)

5541 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5542 
ãmp_RUU_num
--;

5547 
ãmp_RUU_num
 != 0)

5549 
exåaIn¢
[
thªadid
]++;

5551 i‡(!
ãmp_RUU_num
)

5552 
	`∑nic
 ("empty RUU");

5554 i‡(
mode
 =0 && 
RUU_ödex
 =
cuºít
->
RUU_hód
)

5555 
	`∑nic
 ("RUU headándÅail broken");

5557 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

5559 
cuºít
->
iissueq_thrd
--;

5560 
iissueq
--;

5561 
iissueq_˛
[
cuºít
->
id
]--;

5562 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

5564 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

5566 
cuºít
->
fissueq_thrd
--;

5567 
fissueq
--;

5568 
fissueq_˛
[
cuºít
->
id
]--;

5569 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

5572 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

5574 i‡(!
ãmp_LSQ_num
)

5575 
	`∑nic
 ("RUUánd LSQ out of sync");

5576 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

5578 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5579 
ãmp_LSQ_num
--;

5580 i‡(!
ãmp_LSQ_num
)

5581 
	`∑nic
 ("RUUánd LSQ out of sync");

5584 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

5586 
cuºít
->
iissueq_thrd
--;

5587 
iissueq
--;

5588 
iissueq_˛
[
cuºít
->
id
]--;

5589 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

5591 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

5593 
cuºít
->
fissueq_thrd
--;

5594 
fissueq
--;

5595 
fissueq_˛
[
cuºít
->
id
]--;

5596 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

5599 
i
 = 0; i < 
MAX_ODEPS
; i++)

5601 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

5603 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

5606 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

5607 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

5610 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5613 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5616 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5618 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5619 
cuºít
->
m_shLQNum
--;

5621 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5623 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5624 
cuºít
->
m_shSQNum
--;

5627 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

5628 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5629 
cuºít
->
LSQ_num
--;

5630 
ãmp_LSQ_num
--;

5634 
i
 = 0; i < 
MAX_ODEPS
; i++)

5636 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

5637 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

5640 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

5641 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

5642 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

5643 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

5645 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5646 
cuºít
->
RUU_num
--;

5647 
ãmp_RUU_num
--;

5650 if(!
ruu_ö‹dî_issue
)

5652 
rob2_ac˚ss
++;

5653 
cuºít
->
rob2_ac˚ss
++;

5656 
ö°£qnum
 = 
cuºít
->
RUU
[
bønch_ödex
].
ö°num
;

5657 
œ°˛u°î
 = 
cuºít
->
RUU
[
bønch_ödex
].
˛u°î
;

5658 
num_£¡
 = 1;

5660 i‡(
mode
 == 0)

5662 
cuºít
->
RUU_èû
 = (
bønch_ödex
 + 1Ë% 
RUU_size
;

5663 
	`c›y_‰om
 (
thªadid
);

5667 i‡(
cuºít
->
RUU_num
 != 0)

5668 
	`∑nic
 ("ROB must be completelyÉmpty");

5669 
cuºít
->
RUU_èû
 = cuºít->
RUU_hód
;

5675 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

5680 
ãmp_LSQ_ödex
 = 0;Åemp_LSQ_ödex < 
LSQ_size
;Åemp_LSQ_index++)

5681 i‡(
ãmp_LSQ_ödex
 !
cuºít
->
LSQ
[ãmp_LSQ_ödex].
ödex
)

5682 
	`∑nic
 ("LSQ index messed up");

5683 
	}
}

5697 
	$ruu_wrôeback
 ()

5699 
i
;

5700 
sum1
, 
sum2
, 
sum3
;

5701 
RUU_°©i⁄
 *
rs
;

5702 
dñay
;

5704 
c⁄ãxt
 *
cuºít
;

5708 
ãmp
;

5710 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

5712 
wb_d⁄e
[
ãmp
] = 0;

5716 (
rs
 = 
	`evítq_√xt_evít
 ()))

5718 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

5720 i‡(!
	`OPERANDS_READY
 (
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

5721 
	`∑nic
 ("inst completedánd !ready, !issued, or completed");

5723 
rs
->
com∂ëed
 = 
TRUE
;

5725 
wb_d⁄e
[
rs
->
thªadid
]++;

5728 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

5730 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

5732 
úesu…bus_ac˚ss
++;

5733 
cuºít
->
úesu…bus_ac˚ss
++;

5734 if(!
ruu_ö‹dî_issue
)

5736 
rob1_ac˚ss
++;

5737 
cuºít
->
rob1_ac˚ss
++;

5738 
iwakeup_ac˚ss
++;

5739 
cuºít
->
iwakeup_ac˚ss
++;

5741 
úegfûe_ac˚ss
++;

5742 
cuºít
->
úegfûe_ac˚ss
++;

5744 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

5747 
‰esu…bus_ac˚ss
++;

5748 
cuºít
->
‰esu…bus_ac˚ss
++;

5749 if(!
ruu_ö‹dî_issue
)

5751 
rob1_ac˚ss
++;

5752 
cuºít
->
rob1_ac˚ss
++;

5753 
fwakeup_ac˚ss
++;

5754 
cuºít
->
fwakeup_ac˚ss
++;

5756 
‰egfûe_ac˚ss
++;

5757 
cuºít
->
‰egfûe_ac˚ss
++;

5762 i‡(
rs
->
ªcovî_ö°
)

5764 i‡(
rs
->
ö_LSQ
)

5765 
	`∑nic
 ("mis-predictedÜoad or store?!?!?");

5767 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

5768 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

5769 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

5770 #ifde‡
DIRECTORY


5771 
thªadid
 = 
rs
->threadid;

5772 
i
 = 0;

5773 
i
=0;i<
MSHR_SIZE
;i++)

5775 
RS_li°
 *
¥ev
, *
cur
;

5776 
¥ev
=
NULL
, 
cur
 = 
rs_ˇche_li°
[
thªadid
][
i
]; cur; cur=cur->
√xt
)

5778 if(
cur
->
rs
 && cur->rs->
•ec_mode
)

5780 if(
¥ev
 =
NULL
)

5782 
rs_ˇche_li°
[
thªadid
][
i
] = 
cur
->
√xt
;

5783 
¥ev
 = 
NULL
;

5787 
¥ev
->
√xt
 = 
cur
->next;

5788 
cur
 = 
¥ev
;

5789 
¥ev
 = 
cur
;

5793 
¥ev
 = 
cur
;

5798 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

5799 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

5802 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_WB
 && !
rs
->
ö_LSQ
 && (
	`MD_OP_FLAGS
 (rs->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5805 
b¥ed_ac˚ss
++;

5806 i‡(!(
rs
->
du∂iˇã
))

5808 
cuºít
->
b¥ed_ac˚ss
++;

5810 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5811  
rs
->
PC
,

5812  
rs
->
√xt_PC
,

5813  
rs
->
√xt_PC
 !‘s->
PC
 +

5814  (
md_ö°_t
)),

5815  
rs
->
¥ed_PC
 !‘s->
PC
 +

5816  (
md_ö°_t
)),

5817  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5818  
rs
->
›
,

5819  &
rs
->
dú_upd©e
,

5820  
rs
->
thªadid
,

5821  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5825 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,Ñs->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

5827 
sum1
 = 
issue_øã
;

5828 
sum2
 = 0;

5829 
sum3
 = 0;

5831 
i
 = 0; i < 
MAX_ODEPS
; i++)

5833 i‡(
rs
->
⁄ames
[
i
] !
NA
)

5835 
CV_lök
 
lök
;

5836 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

5838 i‡(
rs
->
•ec_mode
)

5840 
lök
 = 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

5841 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

5843 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

5844 
cuºít
->
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

5849 
lök
 = 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

5850 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

5852 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

5853 
cuºít
->
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

5856 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5858 i‡(
	`RSLINK_VALID
 (
ﬁök
))

5860 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

5861 
	`∑nic
 ("output dependenceálready satisfied");

5862 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

5864 
ﬁök
->
rs
->
whí_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

5865 
ﬁök
->
rs
->
whí_idï_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

5867 
sum2
++;

5868 i‡(
	`OPERANDS_READY
 (
ﬁök
->
rs
))

5870 i‡(!
ﬁök
->
rs
->
ö_LSQ
 || ((
	`MD_OP_FLAGS
 (ﬁök->rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

5871 
	`ªadyq_íqueue
 (
ﬁök
->
rs
);

5872 
sum3
++;

5875 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5876 if(!
ruu_ö‹dî_issue
)

5877 
	`RSLINK_FREE
 (
ﬁök
);

5879 if(!
ruu_ö‹dî_issue
)

5880 
rs
->
odï_li°
[
i
] = 
NULL
;

5884 
	}
}

5894 
	#MAX_STD_UNKNOWNS
 
LSQSIZE


	)

5897 #ifde‡ 
LSQ_LOAD_FAST_ISSUE


5899 
	$lsq_ª‰esh
 ()

5901 
i
, 
j
, 
ödex
, 
idx
, 
num_°a_unknown_thªad
 = 0;

5903 
c⁄ãxt
 *
cuºít
;

5905 #ifdef 
LSQ_FIX_PARTIAL_BUG


5906 
°d_width
[
LSQSIZE
];

5909 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

5913 
cuºít
 = 
thec⁄ãxts
[
idx
];

5915 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
; (ò< cuºít->
LSQ_num
Ë&& (
num_°a_unknown_thªad
 < 
numc⁄ãxts
); i++, index = (ödex + 1Ë% 
LSQ_size
)

5917 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


5918 && !
cuºít
->
LSQ
[
ödex
].
issued


5919 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


5920 && !
cuºít
->
LSQ
[
ödex
].
ˇche_ªady
 &&

5921  
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5923 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

5929 
	}
}

5932 
	$lsq_ª‰esh
 ()

5934 
i
, 
idx
, 
j
, 
ödex
, 
n_°d_unknowns
;

5935 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

5936 
c⁄ãxt
 *
cuºít
;

5941 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

5946 
cuºít
 = 
thec⁄ãxts
[
idx
];

5947 
n_°d_unknowns
 = 0;

5948 
i
 = 0; i < 
LSQ_size
; i++)

5949 
°d_unknowns
[
i
] = 0;

5951 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
, 
n_°d_unknowns
 = 0; i < cuºít->
LSQ_num
; i++, index = (ödex + 1Ë% 
LSQ_size
)

5953 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5955 i‡(!
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5961 i‡(!
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5968 i‡(
n_°d_unknowns
 =
LSQ_size
)

5969 
	`Áèl
 ("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

5970 
°d_unknowns
[
n_°d_unknowns
++] = 
cuºít
->
LSQ
[
ödex
].
addr
;

5975 
j
 = 0; j < 
n_°d_unknowns
; j++)

5977 i‡(
°d_unknowns
[
j
] = 
cuºít
->
LSQ
[
ödex
].
addr
)

5978 
°d_unknowns
[
j
] = 0;

5984 ((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


5985 && !
cuºít
->
LSQ
[
ödex
].
issued


5986 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


5987 && 
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

5991 
j
 = 0; j < 
n_°d_unknowns
; j++)

5994 i‡(
°d_unknowns
[
j
] =
cuºít
->
LSQ
[
ödex
].
addr
)

5997 i‡(
j
 =
n_°d_unknowns
)

6000 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

6005 
	}
}

6012 
	$ruu_issue
 ()

6014 
k
, 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

6015 
RS_lök
 *
node
, *
√xt_node
;

6016 
ªs_ãm∂©e
 *
fu
;

6017 
öãr
 = -1;

6018 
this_cy˛e_issued
[
CLUSTERS
];

6019 
mm
;

6020 
dñay
 = 0;

6021 
boﬁ_t
 
bLSQHô
 = 
FALSE
;

6022 
boﬁ_t
 
bP¨tülHô
 = 
FALSE
;

6023 
nW1
;

6025 #ifde‡ 
MSHR


6026 
u£_mshr
 = 0;

6029 
∑ª¡ID
;

6031 
c⁄ãxt
 *
cuºít
;

6032 
thªadid
;

6035 
issueLimô
;

6037 
ãmp
;

6040 #ifde‡ 
PULL_BACK


6041 
puŒbackDñay
[
MAXTHREADS
];

6043 
k
 = 0; k < 
numc⁄ãxts
; k++)

6045 
puŒbackD⁄eThisCy˛e
[
k
] = 0;

6046 
dl1MissThisCy˛e
[
k
] = 
dl1HôThisCy˛e
[k] = 0;

6047 
puŒbackDñay
[
k
] = 0;

6049 i‡(
puŒbackWaôCy˛e
[
k
])

6051 
puŒbackWaôCy˛e
[
k
]--;

6054 i‡(
puŒbackBubbÀ
[
k
] && !
puŒbackWaôCy˛e
[k])

6056 
puŒbackCy˛eCou¡
[
k
]++;

6057 
puŒbackBubbÀ
[
k
]--;

6058 
puŒbackDñay
[
k
] = 1;

6064 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

6066 
issue_d⁄e
[
ãmp
] = 0;

6067 
this_cy˛e_issued
[
ãmp
] = 0;

6068 
lﬂdReje˘Cou¡
[
ãmp
] = 0;

6069 
ª∂ayIndex
[
ãmp
] = 0;

6072 
node
 = 
ªady_queue
;

6073 
ªady_queue
 = 
NULL
;

6077 
issueLimô
 = (
ruu_issue_width
 ) * 
numc⁄ãxts
;

6079 
n_issued
 = 0; 
node
 &&Ç_issued < 
issueLimô
;Çodê
√xt_node
)

6081 #ifde‡ 
MSHR


6082 
u£_mshr
 = 0;

6085 
√xt_node
 = 
node
->
√xt
;

6089 i‡(
	`RSLINK_VALID
 (
node
))

6091 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

6093 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

6094 
thªadid
 = 
rs
->threadid;

6095 i‡(!
	`OPERANDS_READY
 (
rs
Ë|| !rs->
queued
 ||Ñs->
issued
 ||Ñs->
com∂ëed
)

6096 
	`∑nic
 ("issued inst !ready, issued, or completed");

6098 
rs
->
queued
 = 
FALSE
;

6100 if(
ruu_ö‹dî_issue
)

6102 
rs_ödex
 = 
rs
->
ödex
;

6103 if(
i
 = 
rs
->
ö_LSQ
)

6105 if(
rs
->
¥od
[1] =
NULL
)

6106 
	`∑nic
("There isÇoáddressÖroducer ofÜoad/store\n");

6107 
rs_ödex
 = 
rs
->
¥od
[1]->
ödex
;

6110 
i
 = 
thec⁄ãxts
[
thªadid
]->
RUU_hód
; i < 
rs_ödex
; i = (i+1)%
RUU_size
)

6112 if(!
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
issued
)

6114 if(
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
ó_comp
 && !
cuºít
->RUU[i].
odï_li°
[0]->
rs
->
issued
)

6118 if(
i
 !
rs_ödex
)

6120 
	`ªadyq_íqueue
 (
rs
);

6121 
	`RSLINK_FREE
 (
node
);

6126 #ifde‡
TG


6127 i‡(
rs
->
ö_LSQ
)

6128 
	`åaffic_gíî©e
(
sim_cy˛e
, 
rs
->
addr
,Ñs);

6132 #ifde‡ 
PULL_BACK


6133 i‡(
puŒbackDñay
[
rs
->
thªadid
])

6135 
	`ªadyq_íqueue
 (
rs
);

6136 
	`RSLINK_FREE
 (
node
);

6141 i‡(
issue_d⁄e
[
thªadid
] =(
ruu_issue_width
 ))

6143 
	`ªadyq_íqueue
 (
rs
);

6144 
	`RSLINK_FREE
 (
node
);

6148 i‡(
lﬂdReje˘Cou¡
[
thªadid
])

6150 
	`ªadyq_íqueue
 (
rs
);

6151 
	`RSLINK_FREE
 (
node
);

6154 if(
rs
->
ˇche_ªady
 ==1)

6156 
	`ªadyq_íqueue
 (
rs
);

6157 
	`RSLINK_FREE
 (
node
);

6162 i‡(
rs
->
issue_time
 > 
sim_cy˛e
)

6164 
	`ªadyq_íqueue
 (
rs
);

6165 
	`RSLINK_FREE
 (
node
);

6169 i‡(((
rs
->
whí_ªady
[0] <
sim_cy˛e
Ë&& (rs->whí_ªady[1] <sim_cy˛eË&& (rs->whí_ªady[2] <sim_cy˛eË&& (rs->
whí_öq
 < sim_cy˛eË&& !rs->
ö_qwaô
))

6172 #ifde‡ 
PWR_WAKEUP_SELECT


6173 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

6175 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

6177 
i£À˘i⁄_ac˚ss
++;

6178 
cuºít
->
i£À˘i⁄_ac˚ss
++;

6180 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

6182 
f£À˘i⁄_ac˚ss
++;

6183 
cuºít
->
f£À˘i⁄_ac˚ss
++;

6187 
Œ_sc
 = 0;

6189 i‡(
rs
->
›
 =
STL_C
 ||Ñs->› =
LDL_L
)

6192 
Œ_sc
++;

6196 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

6201 
md_addr_t
 
addr
;

6203 #ifdef 
EDA


6204 i‡(
rs
->
pois⁄
[1].
dúty
 == 1)

6205 
addr
 = 
rs
->
pois⁄
[1].
d©a
 + 
	`SEXT
 (rs->
IR
 & 0xffff);

6208 
addr
 = 
rs
->addr;

6210 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6211 
i
;

6213 i‡(!
vÆid_addr
)

6214 
sim_övÆid_addrs
++;

6217 #ifde‡ 
MSHR


6218 
u£_mshr
 = 1;

6221 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6223 i‡(!
fu
)

6225 
	`ªadyq_íqueue
 (
rs
);

6226 
	`RSLINK_FREE
 (
node
);

6231 i‡(
fu
->
ma°î
->
busy
)

6232 
	`∑nic
 ("functional unitálready in use");

6235 i‡(
vÆid_addr
 && 
déb
[
thªadid
])

6237 
éb_œt
 = 0;

6238 
éb_œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid);

6239 if(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6241 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6242 
	`ªadyq_íqueue
 (
rs
);

6243 
	`RSLINK_FREE
 (
node
);

6248 #ifdef 
DCACHE_MSHR


6249 #ifdef 
EDA


6250 
isDL0Hô
 = 1;

6251 if(
cuºít
->
ma°îid
 =1 && (
isDL0Hô
 = 
	`isCacheHô
(
ˇche_dl0
[cuºít->
jobThdId
], 
addr
, 
thªadid
)Ë=0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[cuºít->
hñpThdId
]->
mshr
, 1))

6253 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,ÅhªadidË&& !
mshr_≥ndög_evít
[threadid])

6256 
	`ªadyq_íqueue
 (
rs
);

6257 
	`RSLINK_FREE
 (
node
);

6262 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6263 
rs
->
issued
 = 
TRUE
;

6264 
rs
->
issue_time
 = 
sim_cy˛e
;

6265 
rs
->
com∂ëed
 = 
TRUE
;

6266 
rs
->
föish_time
 = 
sim_cy˛e
;

6269 i‡(
vÆid_addr
 && (
rs
->
›
 !
STL_C
))

6271 
œt
 = 0;

6272 
rsCacheAc˚ss
 = 
rs
;

6273 
m©chnum
 = 0;

6274 
dˇche_ac˚ss
++;

6275 
cuºít
->
dˇche_ac˚ss
++;

6276 #ifde‡
DIRECTORY


6277 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6279 if(!
m©chnum
)

6281 i‡(
ˇche_dl1
[
thªadid
])

6282 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,

6283 #ifde‡
DIRECTORY


6284 
rs
,

6286 
rs
->
thªadid
);

6288 #ifdef 
DCACHE_MSHR


6289 if(
œt
 > 
ˇche_dl1_œt
)

6290 #ifde‡
DIRECTORY


6291 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
rs
);

6293 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
NULL
);

6298 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6299 if(
œt
>
ˇche_dl1_œt
)

6300 
rs
->
miss_Êag
 = 1;

6302 
rs
->
miss_Êag
 = 0;

6305 
rs
->
issued
 = 
TRUE
;

6306 
rs
->
com∂ëed
 = 
TRUE
;

6307 
rs
->
issue_time
 = 
sim_cy˛e
;

6308 
rs
->
föish_time
 = 
sim_cy˛e
;

6310 i‡(
rs
->
cou¡ed_iissueq
)

6312 
cuºít
->
iissueq_thrd
--;

6313 
iissueq
--;

6314 
iissueq_˛
[
rs
->
thªadid
]--;

6315 
rs
->
cou¡ed_iissueq
 = 0;

6317 i‡(
rs
->
cou¡ed_fissueq
)

6319 
cuºít
->
fissueq_thrd
--;

6320 
fissueq
--;

6321 
fissueq_˛
[
rs
->
thªadid
]--;

6322 
rs
->
cou¡ed_fissueq
 = 0;

6326 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

6327 
	`∑nic
 ("store createsÑesult");

6329 i‡(
rs
->
ªcovî_ö°
)

6330 
	`∑nic
 ("mis-predicted store");

6332 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

6333 
n_issued
++;

6336 
issue_d⁄e
[
rs
->
thªadid
]++;

6339 
cuºít
->
iqøm_ac˚ss
++;

6341 i‡(
rs
->
issue_time
 &&Ñs->issue_timê!
sim_cy˛e
)

6342 
	`w¨n
 ("already issueÅimed onánother cycle");

6344 
rs
->
issue_time
 = 
sim_cy˛e
;

6346 
k
 = 0; k < 
MAX_IDEPS
; k++)

6348 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6350 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6352 
úegfûe_ac˚ss
++;

6353 
cuºít
->
úegfûe_ac˚ss
++;

6354 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6355 i‡(
k
)

6356 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6358 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6359 
úegfûe_num_p›_cou¡_cy˛e
++;

6361 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6363 
‰egfûe_ac˚ss
++;

6364 
cuºít
->
‰egfûe_ac˚ss
++;

6365 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6366 i‡(
k
)

6367 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6369 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6370 
úegfûe_num_p›_cou¡_cy˛e
++;

6375 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6376 
cuºít
->
lsq_ac˚ss
++;

6377 
lsq_°‹e_d©a_ac˚ss
++;

6378 
cuºít
->
lsq_¥eg_ac˚ss
++;

6384 
i
 = 
rs
->
ödex
;

6385 
bLSQHô
 = 
FALSE
;

6386 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6390 
bLSQHô
 = 
FALSE
;

6391 i‡(
rs
->
isPª„tch
)

6394 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

6396 i‡(
i
 =
cuºít
->
LSQ_èû
)

6399 #ifdef 
LSQ_FIX_PARTIAL_BUG


6400 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6402 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6407 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

6409 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6410 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6412 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6413 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6415 i‡(
qwAddr1
 =
qwAddr2
)

6417 
bLSQHô
 = 
TRUE
;

6428 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6430 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
addr
 =addrË&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6434 && 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 < 
rs
->
di•_time
 && !cuºít->LSQ[i].
isPª„tch
)

6436 
bLSQHô
 = 
TRUE
;

6444 i‡(
bLSQHô
)

6446 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

6448 
m_sqNumLdRïœy
[
thªadid
]++;

6449 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

6450 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

6451 
lﬂdReje˘Cou¡
[
thªadid
]++;

6456 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 = 
rs
->
di•_time
;

6463 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
NA
)

6466 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

6468 
öãr
 = (
rs
->
addr
 >> 
ˇche_dl1
[rs->
thªadid
]->
£t_shi·
Ë& (
ªs_memb™k
 - 1);

6470 i‡(!
DEDICATED_ADDER
 || (
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
I¡ALU
))

6473 
öãr
 = 
MAGICN
 + 
rs
->
˛u°î
;

6477 i‡(
rs
->
ó_comp
)

6479 
öãr
 = 
RES_CACHEPORTS
 + 1;

6483 
öãr
 = 
RES_CACHEPORTS
 + 2;

6487 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6489 i‡(
fu
)

6491 
rs
->
issued
 = 
TRUE
;

6492 i‡(
rs
->
cou¡ed_iissueq
)

6494 
cuºít
->
iissueq_thrd
--;

6495 
iissueq
--;

6496 
iissueq_˛
[
rs
->
thªadid
]--;

6497 
rs
->
cou¡ed_iissueq
 = 0;

6499 i‡(
rs
->
cou¡ed_fissueq
)

6501 
cuºít
->
fissueq_thrd
--;

6502 
fissueq
--;

6503 
fissueq_˛
[
rs
->
thªadid
]--;

6504 
rs
->
cou¡ed_fissueq
 = 0;

6507 i‡(
fu
->
ma°î
->
busy
)

6508 
	`∑nic
 ("functional unitálready in use");

6510 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

6511 
fu
->
ma°î
->
du∂iˇã
 = 
rs
->duplicate;

6512 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6515 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

6517 
evíts
 = 0;

6518 
lﬂd_œt
 = 0;

6519 
md_addr_t
 
addr
;

6520 #ifdef 
EDA


6521 i‡(
rs
->
pois⁄
[1].
dúty
 == 1)

6522 
addr
 = 
rs
->
pois⁄
[1].
d©a
 + 
	`SEXT
 (rs->
IR
 & 0xffff);

6525 
addr
 = 
rs
->addr;

6527 i‡(
déb
[
thªadid
] && 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
))

6529 
éb_œt
 = 0;

6530 
éb_œt
 = 
	`ˇche_ac˚ss
(
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL, 
rs
->threadid);

6531 i‡(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6533 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6534 
fu
->
ma°î
->
busy
 = 0;

6535 
rs
->
issued
 = 
FALSE
;

6536 
	`ªadyq_íqueue
 (
rs
);

6537 
	`RSLINK_FREE
 (
node
);

6541 #ifde‡
DIRECTORY


6542 
m©chnum
;

6543 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6544 if(
m©chnum
 && !
rs
->
isPª„tch
 && !
mshr_≥ndög_evít
[
thªadid
])

6546 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6547 
rs
->
ˇche_ªady
 = 1;

6548 
fu
->
ma°î
->
busy
 = 0;

6549 
rs
->
issued
 = 
FALSE
;

6550 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

6552 
	`RSLINK_FREE
 (
node
);

6557 #ifdef 
DCACHE_MSHR


6558 #ifdef 
EDA


6559 
isDL0Hô
 = 1;

6560 if((
cuºít
->
ma°îid
 =0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0)) ||

6561 (
cuºít
->
ma°îid
 =1 && (
isDL0Hô
 = 
	`isCacheHô
(
ˇche_dl0
[cuºít->
jobThdId
], 
addr
, 
thªadid
)Ë=0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[cuºít->
hñpThdId
]->
mshr
, 1)))

6563 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid))

6566 
fu
->
ma°î
->
busy
 = 0;

6567 
rs
->
issued
 = 
FALSE
;

6568 
	`ªadyq_íqueue
 (
rs
);

6569 
	`RSLINK_FREE
 (
node
);

6574 
cuºít
->
lsq_ac˚ss
++;

6575 
cuºít
->
lsq_wakeup_ac˚ss
++;

6578 
ldIssueCou¡
++;

6579 #ifde‡
RELAXED_CONSISTENCY


6580 
i
 = 
rs
->
ödex
;

6581 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6584 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

6586 i‡(
i
 =
cuºít
->
LSQ_èû
)

6589 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6590 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6591 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

6593 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6594 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6596 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6597 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6599 i‡((
qwAddr1
 =
qwAddr2
Ë&& 
cuºít
->
LSQ
[
i
].
övÆid©i⁄Re˚ived
)

6601 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

6603 
m_sqNumLdRïœy
[
thªadid
]++;

6604 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

6605 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

6606 
lﬂdReje˘Cou¡
[
thªadid
]++;

6607 
övÆid©i⁄_ª∂ay
[
thªadid
]++;

6616 
ld°Rïœy
 = 1;

6618 i‡(!
rs
->
isPª„tch
)

6619 
ld°Rïœy
 = 
	`checkLSQf‹St
 (
rs
->
ödex
, 
cuºít
);

6621 i‡(!
ld°Rïœy
)

6624 #ifde‡
REMOVE_COMPUTE_QUEUE


6625 i‡(
rs
->
cou¡ed_iissueq
)

6627 
cuºít
->
iissueq_thrd
++;

6628 
iissueq
++;

6629 
rs
->
cou¡ed_iissueq
 = 1;

6631 i‡(
rs
->
cou¡ed_fissueq
)

6633 
cuºít
->
fissueq_thrd
++;

6634 
fissueq
++;

6635 
rs
->
cou¡ed_fissueq
 = 1;

6638 
rs
->
issued
 = 
FALSE
;

6639 
rs
->
issue_time
 = 
sim_cy˛e
 + 
ªje˘RëryCy˛e
;

6640 
	`ªadyq_íqueue
 (
rs
);

6641 
	`RSLINK_FREE
 (
node
);

6642 
ld°Reje˘i⁄Cou¡
[
thªadid
]++;

6647 
bLSQHô
 = 
FALSE
;

6648 
bP¨tülHô
 = 
FALSE
;

6650 
i
 = 
rs
->
ödex
;

6651 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6654 
lsq_œt
 = 0;

6655 i‡(
i
 !
cuºít
->
LSQ_hód
 && !
rs
->
isPª„tch
)

6662 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

6665 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
)

6666 #ifde‡
LSQ_LOAD_FAST_ISSUE


6668 && (
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
i
]))

6670 && (
cuºít
->
LSQ
[
i
].
thªadid
 =
rs
->thªadidË&& !cuºít->LSQ[i].
isPª„tch
)

6672 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6673 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6674 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6675 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6677 i‡(
qwAddr1
 =
qwAddr2
)

6679 
bLSQHô
 = 
TRUE
;

6680 i‡(
nW1
 > 
nW2
)

6684 
bP¨tülHô
 = 
TRUE
;

6690 i‡(
bLSQHô
)

6695 
lsq_œt
 = 
LSQ_LATENCY
;

6696 
rs
->
sqSt‹eF‹w¨dT
 = 
cuºít
->
LSQ
[
i
].
di•_time
;

6700 i‡(
i
 =
cuºít
->
LSQ_hód
)

6706 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6708 i‡(!
cuºít
->
•ec_mode
 && !
vÆid_addr
)

6709 
sim_övÆid_addrs
++;

6711 i‡(
ˇche_dl1
[
thªadid
] && 
vÆid_addr
 && !(
m©chnum
))

6714 
dˇche_ac˚ss
++;

6715 
cuºít
->
dˇche_ac˚ss
++;

6716 
rsCacheAc˚ss
 = 
rs
;

6717 #ifde‡
DIRECTORY


6718 
lﬂd_œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Ñs->threadid);

6720 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
->threadid);

6723 #ifdef 
DCACHE_MSHR


6725 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 == -1)

6726 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
rs
);

6727 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 != -1)

6728 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
NULL
);

6730 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

6731 
evíts
 |
PEV_CACHEMISS
;

6732 if(
lﬂd_œt
>
ˇche_dl1_œt
)

6733 
rs
->
miss_Êag
 = 1;

6735 
rs
->
miss_Êag
 = 0;

6739 
lﬂd_œt
 = 
fu
->
›œt
;

6742 #ifde‡ 
PULL_BACK


6743 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
 && !
rs
->
isPª„tch
)

6745 
dl1MissThisCy˛e
[
rs
->
thªadid
] = 1;

6746 i‡(
rs
->
›
 !
LDT
 &&Ñs->› !
LDS
)

6748 i‡(!
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
])

6750 i‡(
puŒbackWaôCy˛e
[
rs
->
thªadid
])

6751 
puŒbackBubbÀ
[
rs
->
thªadid
]++;

6753 
puŒbackBubbÀ
[
rs
->
thªadid
] = 2;

6754 
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
] = 1;

6756 i‡(!
puŒbackWaôCy˛e
[
rs
->
thªadid
])

6758 
puŒbackWaôCy˛e
[
rs
->
thªadid
] = 2;

6763 i‡(!
rs
->
isPª„tch
)

6765 
dl1HôThisCy˛e
[
rs
->
thªadid
] = 1;

6766 i‡(
rs
->
›
 =
LDT
 ||Ñs->› =
LDS
)

6768 
lﬂd_œt
 = 
ˇche_dl1_œt
 + 1;

6774 i‡(
PERFECT
)

6776 
lﬂd_œt
 = 
PERFECTLAT
;

6779 i‡(
lsq_œt
)

6781 
lﬂd_œt
 = 
lsq_œt
;

6783 i‡(
rs
->
isPª„tch
)

6785 
lﬂd_œt
 = 
ˇche_dl1_œt
;

6786 i‡(!
rs
->
•ec_mode
)

6787 
m_sqPª„tchC¡
++;

6791 i‡(
bP¨tülHô
)

6793 #ifde‡
DIRECTORY


6794 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5,Üoad_lat+5);

6796 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5);

6800 #ifde‡
DIRECTORY


6801 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
,Üoad_lat);

6803 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
);

6807 i‡(!
rs
->
ó_comp
)

6809 
rs
->
föish_time
 = (
sim_cy˛e
 + 
lﬂd_œt
);

6810 
rs
->
issue_time
 = 
sim_cy˛e
;

6814 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
, (‘s->
ó_comp
 ? 
PEV_AGEN
 : 0Ë| 
evíts
));

6819 #ifde‡
PWR_ACCESS


6820 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6821 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

6823 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

6826 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡ALU
)

6828 
ülu1_ac˚ss
++;

6829 
cuºít
->
ülu1_ac˚ss
++;

6831 i‡(
rs
->
ó_comp
)

6833 
add_Æu
++;

6837 
n⁄add_Æu
++;

6840 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡MULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
I¡DIV
))

6842 
ülu2_ac˚ss
++;

6843 
cuºít
->
ülu2_ac˚ss
++;

6845 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
FlﬂtMULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
FlﬂtDIV
))

6847 
Álu2_ac˚ss
++;

6848 
cuºít
->
Álu2_ac˚ss
++;

6852 
Álu1_ac˚ss
++;

6853 
cuºít
->
Álu1_ac˚ss
++;

6855 #ifde‡
DIRECTORY


6856 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
, 0);

6858 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
);

6860 
rs
->
föish_time
 = (
sim_cy˛e
 + 
fu
->
›œt
);

6861 
rs
->
issue_time
 = 
sim_cy˛e
;

6862 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

6866 
n_issued
++;

6867 
issue_d⁄e
[
rs
->
thªadid
]++;

6869 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6871 
fqøm_ac˚ss
++;

6872 
cuºít
->
fqøm_ac˚ss
++;

6876 
iqøm_ac˚ss
++;

6877 
cuºít
->
iqøm_ac˚ss
++;

6880 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6882 
k
 = 0; k < 
MAX_IDEPS
; k++)

6884 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6886 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6888 
úegfûe_ac˚ss
++;

6889 
cuºít
->
úegfûe_ac˚ss
++;

6890 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6891 i‡(
k
)

6892 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6894 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6895 
úegfûe_num_p›_cou¡_cy˛e
++;

6897 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6899 
‰egfûe_ac˚ss
++;

6900 
cuºít
->
úegfûe_ac˚ss
++;

6901 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6902 i‡(
k
)

6903 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6905 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6906 
úegfûe_num_p›_cou¡_cy˛e
++;

6913 
	`ªadyq_íqueue
 (
rs
);

6914 i‡(!
rs
->
•ec_mode
)

6915 
iss_°Æl
++;

6916 i‡(
öãr
 < 
RES_CACHEPORTS
)

6918 i‡(!
rs
->
•ec_mode
)

6919 
b™k_c⁄f
++;

6925 
rs
->
issued
 = 
TRUE
;

6926 i‡(
rs
->
cou¡ed_iissueq
)

6928 
cuºít
->
iissueq_thrd
--;

6929 
iissueq
--;

6930 
iissueq_˛
[
rs
->
thªadid
]--;

6931 
rs
->
cou¡ed_iissueq
 = 0;

6933 i‡(
rs
->
cou¡ed_fissueq
)

6935 
cuºít
->
fissueq_thrd
--;

6936 
fissueq
--;

6937 
fissueq_˛
[
rs
->
thªadid
]--;

6938 
rs
->
cou¡ed_fissueq
 = 0;

6940 #ifde‡
DIRECTORY


6941 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1, 0);

6943 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1);

6945 i‡(!
rs
->
ó_comp
 &&Ñs->
out1
)

6947 
rs
->
föish_time
 = (
sim_cy˛e
 + 1);

6948 
rs
->
issue_time
 = 
sim_cy˛e
;

6952 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

6953 
n_issued
++;

6954 
issue_d⁄e
[
rs
->
thªadid
]++;

6955 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6957 
fqøm_ac˚ss
++;

6958 
cuºít
->
fqøm_ac˚ss
++;

6962 
iqøm_ac˚ss
++;

6963 
cuºít
->
iqøm_ac˚ss
++;

6965 i‡((
rs
->
ö°num
 - 
cuºít
->
RUU
[cuºít->
RUU_hód
].ö°numË> 
DISTILP
)

6967 
di°ûp
++;

6968 i‡(!
rs
->
•ec_mode
)

6969 
di°ûp_vÆid
++;

6970 
rs
->
di°issue
 = 1;

6972 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6974 
k
 = 0; k < 
MAX_IDEPS
; k++)

6976 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6978 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6980 
úegfûe_ac˚ss
++;

6981 
cuºít
->
úegfûe_ac˚ss
++;

6982 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6983 i‡(
k
)

6984 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6986 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6987 
úegfûe_num_p›_cou¡_cy˛e
++;

6989 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6991 
‰egfûe_ac˚ss
++;

6992 
cuºít
->
‰egfûe_ac˚ss
++;

6994 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6995 i‡(
k
)

6996 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6998 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6999 
úegfûe_num_p›_cou¡_cy˛e
++;

7005 #ifdef 
EDA


7006 i‡(
cuºít
->
ma°îid
 == 1)

7008 i‡(
rs
->
pois⁄
[0].
dúty
 ||Ñs->poison[1].dirty)

7010 i‡(
rs
->
ó_comp
)

7012 
rs
->
pois⁄
[2].
dúty
 = 1;

7013 
rs
->
pois⁄
[2].
d©a
 =Ñs->pois⁄[1].d©®+ 
	`SEXT
 (rs->
IR
 & 0xffff);

7015 i‡(!
rs
->
ö_LSQ
)

7016 
	`ˇlcuœãWr⁄gVÆue
 (
rs
);

7018 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_LOAD
))

7019 
rs
->
pois⁄
[2].
dúty
 = 0;

7025 
	`ªadyq_íqueue
 (
rs
);

7028 
	`RSLINK_FREE
 (
node
);

7031 ; 
node
;Çodê
√xt_node
)

7033 
√xt_node
 = 
node
->
√xt
;

7035 i‡(
	`RSLINK_VALID
 (
node
))

7037 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

7039 
rs
->
queued
 = 
FALSE
;

7040 
	`ªadyq_íqueue
 (
rs
);

7042 
	`RSLINK_FREE
 (
node
);

7047 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

7049 i‡(
lﬂdReje˘Cou¡
[
ãmp
] & 
cﬁÀ˘_°©s
 == 1)

7052 
k
 = 
ª∂ayIndex
[
ãmp
];

7055 i‡(!
thec⁄ãxts
[
ãmp
]->
RUU
[
k
].
•ec_mode
)

7057 
	`fixS≥cSèã
 (
k
, 
ãmp
);

7058 
thec⁄ãxts
[
ãmp
]->
ªgs
 =Åhec⁄ãxts[ãmp]->
RUU
[
k
].
backupReg
;

7059 
	`£qC⁄si°™cyRïœy
 (
k
, 
ãmp
);

7060 
lﬂdReje˘Sèt
[
ãmp
]++;

7065 
num_issued
 = 
n_issued
;

7066 
	}
}

7074 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

7075 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

7076 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

7080 
	$r•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7082 
i
;

7084 
c⁄ãxt
 *
cuºít
;

7086 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7088 i‡(!
°ªam
)

7089 
°ªam
 = 
°dîr
;

7091 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêªgi°î c⁄ã¡†**\n", 
thªadid
);

7093 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7096 
i
 = 0; i < 
MD_NUM_IREGS
; i++)

7098 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

7100 
	`md_¥öt_úeg
 (
cuºít
->
•ec_ªgs_R
, 
i
, 
°ªam
);

7101 
	`Ârötf
 (
°ªam
, "\n");

7106 
i
 = 0; i < 
MD_NUM_FREGS
; i++)

7108 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

7110 
	`md_¥öt_Âªg
 (
cuºít
->
•ec_ªgs_F
, 
i
, 
°ªam
);

7111 
	`Ârötf
 (
°ªam
, "\n");

7116 
i
 = 0; i < 
MD_NUM_CREGS
; i++)

7118 #ifde‡
TEST_BUG


7119 i‡(
	`BITMAP_SET_P
 (
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7121 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7124 
	`md_¥öt_¸eg
 (
cuºít
->
•ec_ªgs_C
, 
i
, 
°ªam
);

7125 
	`Ârötf
 (
°ªam
, "\n");

7128 
	}
}

7140 
	$åa˚r_ªcovî
 (
thªadid
)

7142 
i
;

7143 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

7145 
c⁄ãxt
 *
cuºít
;

7147 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7151 i‡(!
cuºít
->
•ec_mode
)

7152 
	`∑nic
 ("Thªad %d, c™nŸÑecovî u∆es†ö s≥cuœtivêmode", 
thªadid
);

7153 
cuºít
->
•ec_mode
 = 
FALSE
;

7155 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7156 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7160 #ifde‡
TEST_BUG


7161 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7162 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7163 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7165 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7166 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7167 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7172 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7175 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
i
];É¡;É¡ = 
ít_√xt
)

7177 
ít_√xt
 = 
ít
->
√xt
;

7178 
ít
->
√xt
 = 
cuºít
->
buckë_‰ì_li°
;

7179 
cuºít
->
buckë_‰ì_li°
 = 
ít
;

7181 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7185 i‡(
±ø˚_a˘ive
)

7187 
cuºít
->
„tch_num
 != 0)

7189 
	`±ø˚_ídö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
);

7190 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

7191 
cuºít
->
„tch_num
--;

7195 
cuºít
->
„tch_num
 = 0;

7196 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

7197 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªcovî_PC
;

7198 
	}
}

7202 
	$åa˚r_öô
 (
thªadid
)

7204 
i
;

7206 
c⁄ãxt
 *
cuºít
;

7208 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7210 
cuºít
->
•ec_mode
 = 
FALSE
;

7211 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7212 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7215 #ifde‡
TEST_BUG


7216 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7217 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7218 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7220 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7221 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7222 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7224 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7225 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7226 
	}
}

7232 
	#HASH_ADDR
(
ADDR
Ë((((ADDRË>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

7244 
md_Áu…_ty≥


7245 
	$•ec_mem_ac˚ss
 (
mem_t
 *
mem
,

7246 
mem_cmd
 
cmd
,

7247 
md_addr_t
 
addr
,

7248 *
p
,

7249 
nbyãs
)

7251 
i
, 
ödex
;

7252 
•ec_mem_ít
 *
ít
, *
¥ev
;

7254 
c⁄ãxt
 *
cuºít
;

7255 
thªadid
 = 
mem
->threadid;

7257 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7263 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

7266 
i
 = 0; i < 
nbyãs
; i++)

7267 ((*Ë
p
)[
i
] = 0;

7269  
md_Áu…_n⁄e
;

7272 i‡(!((
addr
 >
cuºít
->
ld_ãxt_ba£
 &&ádd∏< (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& 
cmd
 =
Ród
Ë|| 
	`md_vÆid_addr
 (addr, cuºít->
ma°îid
)))

7275 
i
 = 0; i < 
nbyãs
; i++)

7276 ((*Ë
p
)[
i
] = 0;

7278  
md_Áu…_n⁄e
;

7282 
ödex
 = 
	`HASH_ADDR
 (
addr
);

7283 
¥ev
 = 
NULL
, 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
√xt
)

7285 i‡(
ít
->
addr
 ==áddr)

7288 i‡(
¥ev
 !
NULL
)

7291 
¥ev
->
√xt
 = 
ít
->next;

7292 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7293 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7300 i‡(!
ít
 && 
cmd
 =
Wrôe
)

7303 i‡(!
cuºít
->
buckë_‰ì_li°
)

7306 
cuºít
->
buckë_‰ì_li°
 = 
	`ˇŒoc
 (1,  (
•ec_mem_ít
));

7307 i‡(!
cuºít
->
buckë_‰ì_li°
)

7308 
	`Áèl
 ("thªad %d , ouào‡vútuÆ mem‹y", 
thªadid
);

7310 
ít
 = 
cuºít
->
buckë_‰ì_li°
;

7311 
cuºít
->
buckë_‰ì_li°
 = cuºít->buckë_‰ì_li°->
√xt
;

7313 i‡(!
bugcom∑t_mode
)

7316 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7317 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7318 
ít
->
addr
 =áddr;

7319 
ít
->
d©a
[0] = 0;

7320 
ít
->
d©a
[1] = 0;

7325 
nbyãs
)

7328 i‡(
cmd
 =
Ród
)

7330 i‡(
ít
)

7333 *((
byã_t
 *Ë
p
Ë*((byã_à*Ë(&
ít
->
d©a
[0]));

7339 *((
byã_t
 *Ë
p
Ë
	`MEM_READ_BYTE
 (
mem
, 
addr
);

7345 *((
byã_t
 *Ë(&
ít
->
d©a
[0])Ë*((byã_à*Ë
p
);

7349 i‡(
cmd
 =
Ród
)

7351 i‡(
ít
)

7354 *((
hÆf_t
 *Ë
p
Ë*((hÆf_à*Ë(&
ít
->
d©a
[0]));

7360 *((
hÆf_t
 *Ë
p
Ë
	`MEM_READ_HALF
 (
mem
, 
addr
);

7366 *((
hÆf_t
 *Ë& 
ít
->
d©a
[0]Ë*((hÆf_à*Ë
p
);

7370 i‡(
cmd
 =
Ród
)

7372 i‡(
ít
)

7375 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

7381 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

7387 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

7391 i‡(
cmd
 =
Ród
)

7393 i‡(
ít
)

7396 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

7397 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë*((w‹d_à*Ë& 
ít
->
d©a
[1]);

7403 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

7404 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë
	`MEM_READ_WORD
 (
mem
, 
addr
 +  (word_t));

7410 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

7411 *((
w‹d_t
 *Ë& 
ít
->
d©a
[1]Ë*(((w‹d_à*Ë
p
) + 1);

7415 
	`∑nic
 ("access sizeÇot supported in mis-speculative mode");

7418  
md_Áu…_n⁄e
;

7419 
	}
}

7423 
	$m•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7425 
i
, 
j
;

7426 
•ec_mem_ít
 *
ít
;

7428 
c⁄ãxt
 *
cuºít
;

7430 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7432 i‡(!
°ªam
)

7433 
°ªam
 = 
°dîr
;

7435 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêmem‹y c⁄ã¡†**\n", 
thªadid
);

7437 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7439 
j
 = 0; j < 
numc⁄ãxts
; j++)

7441 
	`Ârötf
 (
°ªam
, "thªad %d : \n", 
j
);

7442 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7445 
ít
 = 
thec⁄ãxts
[
j
]->
°‹e_hèbÀ
[
i
];É¡;É¡ =É¡->
√xt
)

7447 
	`myÂrötf
 (
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n", 
ít
->
addr
, (Ë(*((*Ëít->
d©a
)), *((*) &ent->data[0]), *(((*) &ent->data[0]) + 1));

7451 
	}
}

7455 
	$simoo_mem_obj
 (
mem_t
 *
mem
,

7456 
is_wrôe
,

7457 
md_addr_t
 
addr
,

7458 *
p
,

7459 
nbyãs
)

7461 
mem_cmd
 
cmd
;

7463 
thªadid
 = 
mem
->threadid;

7464 
c⁄ãxt
 *
cuºít
;

7466 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7468 i‡(!
is_wrôe
)

7469 
cmd
 = 
Ród
;

7471 
cmd
 = 
Wrôe
;

7474 *
îr°r
;

7476 
îr°r
 = 
	`mem_vÆid
 (
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

7477 i‡(
îr°r
)

7478  
îr°r
;

7482 i‡(
cuºít
->
•ec_mode
)

7483 
	`•ec_mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

7485 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadid
);

7488  
NULL
;

7489 
	}
}

7495 
	$ÊushWrôeBuf„r
 (
thªadid
)

7497 
ödex
;

7498 
wb_mem_ít
 *
ít
, *
¥ev
;

7499 
nbyãs
;

7500 
byã_t
 *
p
, *
q
;

7501 
md_addr_t
 
addr
;

7502 
ii
;

7504 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7506 
ít
 = 
cuºít
->
WBèbÀTaû
;É¡ !
NULL
;É¡ =É¡->
¥ev
)

7508 
p
 = 
ít
->
d©a
;

7509 
nbyãs
 = 
ít
->nbytes;

7510 
addr
 = 
ít
->addr;

7512 #i‡!
WATER_NSQUARED


7513 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7515 
nbyãs
-- > 0)

7517 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7518 
p
 + (
byã_t
);

7519 
addr
 + (
byã_t
);

7523 
ít
->
wrôeAÃódyD⁄e
 = 1;

7526 
	}
}

7530 
	$com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
)

7533 
byã_t
 *
p
, *
q
;

7534 
c⁄ãxt
 *
cuºít
;

7535 
wb_mem_ít
 *
ít
, *
¥ev
;

7538 
nbyãs
;

7539 
md_›code
 
›
;

7540 
md_addr_t
 
ö°
;

7541 
do_wrôe
 = 1;

7542 
jj
;

7543 
ac˚s£d
;

7545 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7546 
ít
 = 
cuºít
->
WBèbÀTaû
;

7548 i‡((
width
 & (width - 1)Ë!0 || (
addr
 & (width - 1)) != 0)

7551 
p
 = 
ít
->
d©a
;

7552 
nbyãs
 = 
ít
->nbytes;

7553 i‡(
addr
 !
ít
->addr)

7554 
	`¥ötf
("ít->add∏%Œd\n", 
ít
->
addr
);

7555 i‡(
addr
 !
ít
->addr)

7556 
	`∑nic
 ("write buffer miss-alignment\n");

7558 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

7559 
ö°
 = 
ít
->
ö°r
;

7561 
p
 = 
ít
->
d©a
;

7562 
nbyãs
 = 
ít
->nbytes;

7565 i‡(
›
 != 35)

7567 #i‡!
WATER_NSQUARED


7568 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7570 
nbyãs
-- > 0)

7572 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7573 
p
 + (
byã_t
);

7574 
addr
 + (
byã_t
);

7581 #i‡
WATER_NSQUARED


7582 
cuºít
->
waôF‹STLC
 = 0;

7584 i‡(!
isFaû
 && (
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 !0Ë&& (comm⁄_ªgs_s[cuºít->ma°îid][cuºít->a˘uÆid].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
)))

7586 
do_wrôe
 = 1;

7588 
jj
 = 0; jj < 
THREADS_PER_JOB
; jj++)

7590 i‡(
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
))

7592 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
ªgs_lock
 = 0;

7593 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 = 0;

7596 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7599 
nbyãs
-- > 0)

7601 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7602 
p
 + (
byã_t
);

7603 
addr
 + (
byã_t
);

7606 
°‹eC⁄dFaû
 = 0;

7610 
cuºít
->
ªgs
.
ªgs_R
[((
ö°
 >> 21) & 0x1f)] = 0;

7611 
do_wrôe
 = 0;

7612 
°‹eC⁄dFaû
 = 1;

7614 
cuºít
->
waôF‹STLC
 = 0;

7617 
ac˚s£d
 = 
ít
->accessed;

7618 
cuºít
->
numOfWBE¡ry
--;

7619 i‡((
ít
->
¥ev
 =
NULL
Ë&& (ít->
√xt
 == NULL))

7621 
cuºít
->
WBèbÀTaû
 = 
NULL
;

7622 
cuºít
->
WBèbÀHód
 = 
NULL
;

7623 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7624 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7626 i‡(
ít
->
√xt
 =
NULL
)

7628 
cuºít
->
WBèbÀTaû
 = 
ít
->
¥ev
;

7629 
ít
->
¥ev
->
√xt
 = 
NULL
;

7630 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7631 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7634 i‡(
ít
->
¥ev
 =
NULL
)

7636 
cuºít
->
WBèbÀHód
 = 
ít
->
√xt
;

7637 
ít
->
√xt
->
¥ev
 = 
NULL
;

7638 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7639 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7643 
ít
->
¥ev
->
√xt
 =Ént->next;

7644 
ít
->
√xt
->
¥ev
 =Ént->prev;

7645 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7646 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7648 
	}
}

7653 
	$commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
)

7655 
ödex
;

7656 
wb_mem_ít
 *
ít
;

7657 
c⁄ãxt
 *
cuºít
;

7658 
md_›code
 
›
;

7659 
œt
 = 0;

7660 
p‹t_œt
 = 0, 
now_œt
 = 0, 
p‹t_now
 = 0;

7663 
cuºít
 = 
thec⁄ãxts
[
thªadID
];

7664 i‡(!
COHERENT_CACHE
)

7666 
	`¥ötf
 ("This isÇot TRUE forÇon-coherent cache\n");

7667 
	`exô
 (0);

7669 
ödex
 = 0;

7670 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

7672 i‡(
ít
->
addr
 =add∏&& !ít->
com∂ëeCy˛e
)

7674 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

7675 i‡(
›
 == 35)

7677 
ít
->
com∂ëeCy˛e
 = 
sim_cy˛e
 + 
œt
;

7678 
ít
->
√edBusAc˚ss
 = 1;

7679 
ít
->
ac˚s£d
 =áccessed;

7683 
ít
->
com∂ëeCy˛e
 = completeCycle;

7684 
ít
->
√edBusAc˚ss
 =ÇeedBusAccess;

7685 
ít
->
ac˚s£d
 =áccessed;

7690 
	}
}

7694 #i‡
PROCESS_MODEL


7696 
	$checkF‹Sh¨edAddr
 (
addr
)

7698 
sh¨edAddªssLi°_s
 *
tmpPå
;

7700 
ödx
 = (Ë(((Ë
addr
 & 1016) >> 3);

7702 
ödx
 = 0;

7703 
tmpPå
 = 
sh¨edAddªssLi°
[
ödx
];

7704 i‡((
addr
 >
La°Sh¨edAddªss
Ë&& (add∏< (La°Sh¨edAddªs†+ 
La°Sh¨edSize
)))

7708 
tmpPå
 !
NULL
)

7710 i‡((
addr
 >
tmpPå
->
addªss
Ë&& (add∏< (tmpPå->addªs†+ÅmpPå->
size
)))

7712 
La°Sh¨edAddªss
 = 
tmpPå
->
addªss
;

7713 
La°Sh¨edSize
 = 
tmpPå
->
size
;

7716 
tmpPå
 =ÅmpPå->
√xt
;

7719 
	}
}

7722 
md_Áu…_ty≥


7723 
	$WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
)

7725 
md_›code
 
›
;

7726 
md_Áu…_ty≥
 
ªtu∫_ty≥
;

7728 
TempIn°r
 = 
ö°r
;

7729 
	`MD_SET_OPCODE
 (
›
, 
TempIn°r
);

7731 if(!
thec⁄ãxts
[
thªadID
]->
•ec_mode
 && (
addr
 <thec⁄ãxts[0]->
ld_°ack_ba£
Ë&& (add∏>Åhec⁄ãxts[0]->ld_°ack_ba£-
numc⁄ãxts
*
STACKSIZE
) && !(addr <=Åhecontexts[threadID]->ld_stack_base &&áddr >Åhecontexts[threadID]->ld_stack_base-STACKSIZE))

7732 
	`∑nic
("Stack boundaries breached: May beÅhe STACKSIZEÖarameter defined in context.h file is small forÅheápplication");

7734 #i‡
	`deföed
(
DO_COMPLETE_FASTFWD
Ë|| deföed(
PARALLEL_EMUL
)

7735 #i‡
PROCESS_MODEL


7736 i‡(
	`checkF‹Sh¨edAddr
 ((Ë
addr
))

7738 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
thec⁄ãxts
[0]->
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7739  
ªtu∫_ty≥
;

7742 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7743  
ªtu∫_ty≥
;

7747 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

7749 i‡(
›
 == 35)

7751 
thec⁄ãxts
[
thªadID
]->
waôF‹STLC
 = 1;

7753 
ªtu∫_ty≥
 = 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7754 #i‡
WATER_NSQUARED


7755 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7758 i‡(
ac˚ss_mem
 && 
ac˚ss_mem_id
 =
thªadID
)

7760 
	`ÊushWrôeBuf„r
 (
thªadID
);

7762  
ªtu∫_ty≥
;

7766 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7767  
ªtu∫_ty≥
;

7769 
	}
}

7773 
INLINE
 

7774 
	$ruu_lök_idï
 (
RUU_°©i⁄
 *
rs
,

7775 
idï_num
,

7776 
idï_«me
)

7778 
CV_lök
 
hód
;

7779 
RS_lök
 *
lök
;

7781 
thªadid
 = 
rs
->threadid;

7782 
c⁄ãxt
 *
cuºít
;

7784 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7786 
rs
->
¥od
[
idï_num
] = 
NULL
;

7787 
rs
->
idï_«me
[
idï_num
] = idep_name;

7789 i‡(
idï_«me
 =
NA
)

7792 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

7793 
rs
->
whí_ªady
[
idï_num
] = 0;

7794 
rs
->
whí_idï_ªady
[
idï_num
] = 
WAIT_TIME
;

7798 
hód
 = 
	`CREATE_VECTOR
 (
idï_«me
);

7801 i‡(!
hód
.
rs
 || hód.rs->
com∂ëed
)

7803 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

7804 
rs
->
whí_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

7805 
rs
->
whí_idï_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

7808 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

7809 
rs
->
¥od
[
idï_num
] = 
hód
.rs;

7811 
	`RSLINK_NEW
 (
lök
, 
rs
);

7812 
lök
->
x
.
›num
 = 
idï_num
;

7813 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

7814 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

7815 
	}
}

7818 
	$√edsWBÊush
 (
c⁄ãxt
 * 
cuºít
, 
md_›code
 
›
, 
md_addr_t
 
addr
)

7820 
nbyãs
 = 
	`GëMemAccWidth
 (
›
);

7822 i‡(
›
 =
LDQ_U
)

7823 
addr
 =áddr & ~7;

7825 
wb_mem_ít
 *
ít
;

7827 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

7829 i‡(
nbyãs
 == 1)

7831 i‡(!(
ít
->
nbyãs
 ==Çbytes))

7833 i‡((
ít
->
addr
 <addrË&& (”¡->add∏+É¡->
nbyãs
) >áddr))

7839 i‡(
nbyãs
 == 2)

7841 i‡(
ít
->
nbyãs
 !=Çbytes)

7843 i‡(
ít
->
nbyãs
 <Çbytes)

7845 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

7852 i‡((
addr
 >
ít
->addrË&& (add∏< (ít->add∏+É¡->
nbyãs
)))

7859 i‡(
nbyãs
 == 4)

7861 i‡(
nbyãs
 !
ít
->nbytes)

7863 i‡(
ít
->
nbyãs
 <Çbytes)

7865 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

7872 i‡(
nbyãs
 == 8)

7874 i‡(
nbyãs
 !
ít
->nbytes)

7876 i‡((
ít
->
nbyãs
 == 1) || (ent->nbytes == 2) || (ent->nbytes == 4))

7878 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

7887 
	}
}

7892 
INLINE
 

7893 
	$ruu_ö°Æl_odï
 (
RUU_°©i⁄
 *
rs
,

7894 
odï_num
,

7895 
odï_«me
)

7897 
CV_lök
 
cv
;

7899 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

7902 i‡(
odï_«me
 =
NA
)

7905 
rs
->
⁄ames
[
odï_num
] = 
NA
;

7910 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

7912 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

7915 
	`CVLINK_INIT
 (
cv
, 
rs
, 
odï_num
);

7916 
	`SET_CREATE_VECTOR
 (
odï_«me
, 
cv
);

7917 
	}
}

7921 
INLINE
 

7922 
	$ruu_ö°Æl_odï_skù
 (
RUU_°©i⁄
 *
rs
,

7923 
odï_num
,

7924 
odï_«me
)

7928 i‡(
odï_«me
 =
NA
)

7931 
rs
->
⁄ames
[
odï_num
] = 
NA
;

7936 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

7938 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

7940 
	}
}

7946 
	$simoo_ªg_obj
 (
ªgs_t
 *
xªgs
,

7947 
is_wrôe
,

7948 
md_ªg_ty≥
 
π
,

7949 
ªg
,

7950 
evÆ_vÆue_t
 *
vÆ
)

7953 
thªadid
 = 0;

7954 
c⁄ãxt
 *
cuºít
;

7956 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7958 
π
)

7960 
π_g¥
:

7961 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

7964 i‡(!
is_wrôe
)

7966 
vÆ
->
ty≥
 = 
ë_uöt
;

7967 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
 (
ªg
);

7970 
	`SET_GPR
 (
ªg
, 
	`evÆ_as_uöt
 (*
vÆ
));

7973 
π_Õr
:

7974 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

7978 
	`ab‹t
 ();

7981 
π_Âr
:

7983 
	`ab‹t
 ();

7986 
π_d¥
:

7988 
	`ab‹t
 ();

7993 
π_PC
:

7994 i‡(!
is_wrôe
)

7996 
vÆ
->
ty≥
 = 
ë_addr
;

7997 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8000 
cuºít
->
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
 (*
vÆ
);

8003 
π_NPC
:

8004 i‡(!
is_wrôe
)

8006 
vÆ
->
ty≥
 = 
ë_addr
;

8007 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8010 
cuºít
->
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
 (*
vÆ
);

8014 
	`∑nic
 ("bogusÑegister bank");

8018  
NULL
;

8019 
	}
}

8022 
ruu_„tch
 ();

8024 
	g°ÆlCau£
[
MAXTHREADS
] = {0};

8025 
cou¡î_t
 
	gmb_cou¡
 = 0;

8034 
	$ruu_di•©ch
 (
thªadid
)

8036 
i
;

8037 
ãmp˛
;

8038 
ãmµc
 = 0;

8039 
mm
, 
k
;

8040 
f‹˚_b™k
;

8041 
¶Ÿ
;

8043 
n_di•©ched
;

8044 
md_ö°_t
 
ö°
;

8045 
md_›code
 
›
;

8046 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

8047 
md_addr_t
 
èrgë_PC
 = 0;

8048 
md_addr_t
 
addr
 = 0;

8049 
RUU_°©i⁄
 *
rs
;

8050 
RUU_°©i⁄
 *
lsq
;

8053 
RUU_°©i⁄
 *
rs_dup
;

8054 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

8055 
°ack_ªcovî_idx
;

8056 
p£q
;

8057 
is_wrôe
 = 
FALSE
;

8058 
made_check
;

8059 
br_èkí
, 
br_¥ed_èkí
;

8060 
byã_t
 
ãmp_byã
;

8061 
hÆf_t
 
ãmp_hÆf
;

8062 
w‹d_t
 
ãmp_w‹d
;

8064 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

8065 
qw‹d_t
 
ãmp_qw‹d
 = 0;

8067 
qw‹d_t
 
ªgVÆ
;

8068 
hÆf_t
 
ushLdFœg
;

8070 
ªgs_t
 
ãmpReg
;

8073 
ªgs_t
 
ãmpRegPªv
;

8075 
md_Áu…_ty≥
 
Áu…
;

8077 
so·_îr‹
, 
ãmp_„tch_num
;

8080 
qw‹d_t
 
vÆ_ø
 = 0, 
vÆ_rb
 = 0, 
vÆ_rc
 = 0, 
vÆ_ø_ªsu…
 = 0;

8081 
	`c›y_to
 ();

8082 
	`b™k_lookup
 (
md_addr_t
, , );

8084 
c⁄ãxt
 *
cuºít
;

8085 
„tch_time
 = 0;

8087 
£c⁄d_run
 = 
TRUE
, 
no_d•_˛s
;

8089 
ö_LSQ
 = 0;

8090 
lsq_fuŒ
 = 0;

8092 
∑ª¡ID
;

8094 
ªsour˚_√ed
[4];

8096 
ªsour˚_√ed
[0] = 1;

8097 
ªsour˚_√ed
[1] = 1;

8098 
ªsour˚_√ed
[2] = 3;

8099 
ªsour˚_√ed
[3] = 3;

8101 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8103 
n_di•©ched
 = 0;

8104 
ãmp_„tch_num
 = 
cuºít
->
„tch_num
;

8106 
cuºít
->
„tch_ªdúe˘ed
 = 
FALSE
;

8107 
°ÆlCau£
[
thªadid
] = 0;

8109 i‡(
ãmp_„tch_num
 != 0)

8111 
made_check
 = 
FALSE
;

8112 
ãmp˛
 = 
a˘uÆ_˛u°îs
;

8116 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

8117 && 
cuºít
->
LSQ_num
 < 
LSQ_size
 && cuºít->
m_shLQNum
 < 
m_shLQSize


8118 #ifdef 
SMD_USE_WRITE_BUF


8119 && (
cuºít
->
m_shSQNum
 + 
m_L1WBufC¡
[
thªadid
]Ë< 
m_shSQSize


8121 && (
cuºít
->
m_shSQNum
Ë< 
m_shSQSize


8123 && (
cuºít
->
RUU_num
 < 
RUU_size
)

8124 && 
ãmp_„tch_num
 !0 && (
ruu_ö˛ude_•ec
 || !
cuºít
->
•ec_mode
))

8127 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8128 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

8130 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

8131 
ö_LSQ
 = 1;

8133 
ö_LSQ
 = 0;

8135 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8137 
ªsour˚_√ed
[0] = 0;

8138 
ªsour˚_√ed
[1] = 1;

8139 
ªsour˚_√ed
[2] = 0;

8140 
ªsour˚_√ed
[3] = 3;

8144 
ªsour˚_√ed
[0] = 1;

8145 
ªsour˚_√ed
[1] = 0;

8146 
ªsour˚_√ed
[2] = 3;

8147 
ªsour˚_√ed
[3] = 1;

8150 i‡(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesour˚_√ed[1])Ë&& (
úegfûe_˛
[thªadid] <((
IPREG_size
Ë-Ñesour˚_√ed[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8152 if(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesource_need[1]))))

8153 
°ÆlCau£
[
thªadid
] = 
SèŒIssueFuŒ
;

8154 if(!((
úegfûe_˛
[
thªadid
] <((
IPREG_size
Ë- 
ªsour˚_√ed
[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8155 
°ÆlCau£
[
thªadid
] = 
SèŒRegFuŒ
;

8159 i‡((
thec⁄ãxts
[
thªadid
]->
waôF‹BønchResﬁve
 =1Ë|| (thec⁄ãxts[thªadid]->
waôF‹STLC
))

8161 
°ÆlCau£
[
thªadid
] = 
SèŒSTLC
;

8170 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

8171 i‡(
busSlŸCou¡
 < 11)

8173 
°ÆlNoBusSlŸ
++;

8178 i‡(
cﬁÀ˘SètSt›
[
cuºít
->
id
])

8183 
j
, 
boﬁ
 = 0, 
tmp
, 
Œ_sc
 = 0;

8184 
c⁄ãxt
 *
tmpCxt
;

8185 
md_addr_t
 
mask
;

8187 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

8190 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8191 
dú_upd©e_±r
 = &(
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
dú_upd©e
);

8192 
°ack_ªcovî_idx
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->stack_recover_idx;

8193 
p£q
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
;

8194 
„tch_time
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->fetch_time;

8196 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
is_dup
 = 
TRUE
;

8197 if(
m_upd©e_miss_Êag
[
thªadid
])

8199 
m_upd©e_miss_Êag
[
thªadid
] = 0;

8200 if(
m_upd©e_miss_dïíd_°¨t
[
thªadid
])

8201 
Upd©eDïídCy˛e
 +(
sim_cy˛e
 - 
m_upd©e_miss_dïíd_°¨t
[
thªadid
]);

8202 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 0;

8206 i‡(
›
 =
STL_C
)

8209 
Œ_sc
++;

8213 i‡(
›
 =
LDL_L
)

8215 
Œ_sc
++;

8217 if(
	`MD_OP_FLAGS
(
›
Ë& 
F_FENCE
)

8218 
mb_cou¡
++;

8221 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_TRAP
)

8223 
	#OSF_SYS_gëthªadid
 500

	)

8224 
	#OSF_SYS_STATS
 530

	)

8225 
	#OSF_SYS_BARRIER_STATS
 531

	)

8226 
	#OSF_SYS_LOCK_STATS
 532

	)

8227 
	#OSF_SYS_BARRIER_INSTR
 533

	)

8228 
qw‹d_t
 
syscode
 = 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_V0
];

8229 if(
cuºít
->
•ec_mode
 || !(
syscode
 =
OSF_SYS_gëthªadid
 || syscodê=
OSF_SYS_STATS
 || syscodê=
OSF_SYS_BARRIER_STATS
 || syscodê=
OSF_SYS_BARRIER_INSTR
 || syscodê=
OSF_SYS_LOCK_STATS
))

8231 i‡(
cuºít
->
RUU_num
 != 0)

8233 
°ÆlCau£
[
thªadid
] = 
SèŒTøp
;

8238 i‡(
cuºít
->
•ec_mode
)

8239 
	`∑nic
 ("drainedánd speculative");

8242 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->regs_PC;

8243 
cuºít
->
¥ed_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->pred_PC;

8244 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8247 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

8248 
cuºít
->
•ec_ªgs_R
[
MD_REG_ZERO
] = 0;

8249 #ifde‡
TARGET_ALPHA


8250 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8251 
cuºít
->
•ec_ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8255 
addr
 = 0;

8256 
is_wrôe
 = 
FALSE
;

8259 #i‡
	`deföed
(
TARGET_PISA
)

8260 
vÆ_ø
 = 
	`GPR
 (
RS
);

8261 
vÆ_rb
 = 
	`GPR
 (
RT
);

8262 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8266 
Áu…
 = 
md_Áu…_n⁄e
;

8267 
so·_îr‹
 = 
FALSE
;

8270 
ãmpRegPªv
 = 
cuºít
->
ªgs
;

8273 
ushLdFœg
 = 0;

8275 
›
)

8277 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

8278 
OP
: \

8280 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

8281 
out1
 = 
O1
; 
out2
 = 
O2
; \

8282 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

8283 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

8284 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

8285 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

8286 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

8287 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

8289 if(
£c⁄d_run
Ë
	`SYMCAT
(
OP
,
_IMPL
); \

8291 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

8292 
OP
: \

8294 
›
 = 
MD_NOP_OP
; \

8296 
out1
 = 
NA
; 
out2
 = NA; \

8297 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

8300 
	#CONNECT
(
OP
Ë

	)

8306 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

8308 i‡(!
cuºít
->
•ec_mode
) \

8309 
Áu…
 = (
FAULT
); \

8313 
	#THREADID
 (
cuºít
->
id
)

	)

8314 
	~"machöe.def
"

8317 
›
 = 
MD_NOP_OP
;

8319 
out1
 = 
NA
;

8320 
out2
 = 
NA
;

8321 
ö1
 = 
NA
;

8322 
ö2
 = 
NA
;

8323 
ö3
 = 
NA
;

8326 i‡(!
cuºít
->
•ec_mode
)

8328 if(!(
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]))

8329 
puª_num_ö¢
++;

8330 
tŸÆ_num_ö¢
++;

8331 
sim_num_ö¢
++;

8332 
cuºít
->
sim_num_ö¢
++;

8335 i‡(
Áu…
 !
md_Áu…_n⁄e
)

8337 
	`Ârötf
 (
°dîr
, "sim_cy˛ê%ld\¿sim_ö¢ %ld,Åhrdid %d,Ö¯%lx, Next_p¯%lx\n", (Ë
sim_cy˛e
, (Ë
cuºít
->
sim_num_ö¢
, cuºít->
id
, (Ëcuºít->
ªgs
.
ªgs_PC
,

8338 (Ë
cuºít
->
ªgs
.
ªgs_PC
);

8339 
	`Ârötf
 (
°dîr
, "„tchÖ¯ %lx,„tch Next_p¯ %lx\n", (Ë
cuºít
->
„tch_ªgs_PC
, (Ëcuºít->
„tch_¥ed_PC
);

8340 
	`Áèl
 ("Thªad %d,Ç⁄-•ecuœtivêÁu… (%dËdëe˘ed @ %lx", 
thªadid
, 
Áu…
, (Ë
cuºít
->
ªgs
.
ªgs_PC
);

8344 #i‡
	`deföed
(
TARGET_PISA
)

8345 
vÆ_rc
 = 
	`GPR
 (
RD
);

8346 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RS
);

8347 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8348 i‡(
out1
 < 32)

8349 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

8351 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

8352 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

8353 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

8355 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

8358 
ãmpReg
 = 
cuºít
->
ªgs
;

8361 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
))

8363 
sim_tŸÆ_ªfs
++;

8364 i‡(!
cuºít
->
•ec_mode
)

8365 
sim_num_ªfs
++;

8367 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

8368 
is_wrôe
 = 
TRUE
;

8371 
sim_tŸÆ_lﬂds
++;

8372 i‡(!
cuºít
->
•ec_mode
)

8373 
sim_num_lﬂds
++;

8378 
br_èkí
 = (
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)));

8379 
br_¥ed_èkí
 = (
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)));

8382 i‡(
›
 !
MD_NOP_OP
)

8403 
DUPLICATION_ac˚ss
[
thªadid
]++;

8404 
du∂iˇti⁄_ac˚ss
++;

8406 
rs
 = &
cuºít
->
RUU
[cuºít->
RUU_èû
];

8408 #ifde‡
HOTLEAKAGE


8409 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

8411 if(!
ruu_ö‹dî_issue
)

8413 
ª«me_ac˚ss
++;

8414 
cuºít
->
ª«me_ac˚ss
++;

8417 
rs
->
thªadid
 =Åhreadid;

8418 
rs
->
IR
 = 
ö°
;

8419 
rs
->
›
 = op;

8420 
rs
->
ö°num
 = ++
ö°£qnum
;

8421 
rs
->
isSyncIn°
 = (
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]);

8423 
rs
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8424 
rs
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8425 
rs
->
¥ed_PC
 = 
cuºít
->pred_PC;

8426 
rs
->
ö_LSQ
 = 
FALSE
;

8427 
rs
->
ó_comp
 = 
FALSE
;

8428 
rs
->
ab™k
 = -1;

8429 
rs
->
pb™k
 = -1;

8430 
rs
->
ªcovî_ö°
 = 
FALSE
;

8431 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

8432 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

8433 
rs
->
•ec_mode
 = 
cuºít
->spec_mode;

8434 
rs
->
„tch_time
 = fetch_time;

8435 
rs
->
di•_time
 = 
sim_cy˛e
;

8436 
rs
->
föish_time
 = 0;

8437 
rs
->
ˇche_ªady
 = 0;

8438 
rs
->
ö_qwaô
 = 0;

8439 
rs
->
issue_time
 = 0;

8440 
rs
->
addr
 = 0;

8441 
rs
->
di°issue
 = 0;

8442 
rs
->
lsqE¡ry
 = 0;

8443 
rs
->
miss_Êag
 = 0;

8445 
rs
->
£q
 = ++(
cuºít
->
ö°_£q
);

8446 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

8447 
rs
->
±ø˚_£q
 = 
p£q
;

8448 
rs
->
cou¡ed_iissueq
 = 0;

8449 
rs
->
cou¡ed_fissueq
 = 0;

8450 
rs
->
övÆid©i⁄Re˚ived
 = 0;

8451 
rs
->
du∂iˇã
 = (1 - 
£c⁄d_run
);

8453 
rs
->
¥evRegVÆ
 = 
ªgVÆ
;

8455 
rs
->
backupReg
 = 
ãmpRegPªv
;

8456 #ifde‡
DIRECTORY


8457 
rs
->
wrôewaô
 = 0;

8458 
rs
->
RódSh¨eDú
 = 0;

8459 
rs
->
wrôemiss
 = 0;

8461 i‡(!
£c⁄d_run
)

8462 
rs
->
•ec_mode
 = 0;

8463 
rs
->
Áu…ög_ö°r
 = 
FALSE
;

8465 #ifde‡
PWR_WAKE


8466 
rs
->
cou¡ed_úódy
 = 0;

8467 
rs
->
cou¡ed_‰ódy
 = 0;

8468 
rs
->
cou¡ed_lsqªady
 = 0;

8471 
rs
->
‰ìd
 = 0;

8472 
rs
->
vÆ_ø
 = val_ra;

8473 
rs
->
vÆ_rb
 = val_rb;

8474 
rs
->
vÆ_rc
 = val_rc;

8475 
rs
->
vÆ_ø_ªsu…
 = val_ra_result;

8476 
rs
->
whí_ªady
[0] = 
WAIT_TIME
;

8477 
rs
->
whí_ªady
[1] = 
WAIT_TIME
;

8478 
rs
->
whí_ªady
[2] = 
WAIT_TIME
;

8479 
rs
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

8480 
rs
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

8481 
rs
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

8482 
rs
->
idï_«me
[0] = 0;

8483 
rs
->
idï_«me
[1] = 0;

8484 
rs
->
idï_«me
[2] = 0;

8485 
rs
->
isL1Miss
 = 0;

8487 #if 
	`deföed
(
EDA
Ë& deföed(
RUN_ORACLE
)

8488 i‡(
cuºít
->
ma°îid
 == 1)

8489 
rs
->
sim_num_ö¢
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->sim_num_insn;

8492 
rs
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

8493 
rs
->
outReg
 = 
out1
;

8495 
rs
->
¥evReg
 = 
ãmpReg
;

8497 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& !
£c⁄d_run
)

8498 
rs
->
›
 = 
MD_AGEN_OP
;

8501 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& 
£c⁄d_run
)

8503 
lsq
 = &
cuºít
->
LSQ
[cuºít->
LSQ_èû
];

8504 #ifde‡
HOTLEAKAGE


8505 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

8507 
rs
->
›
 = 
MD_AGEN_OP
;

8508 
rs
->
ó_comp
 = 
TRUE
;

8513 
lsq
->
sqSt‹eF‹w¨dT
 = -1;

8517 
lsq
->
ushFœg
 = 
ushLdFœg
;

8520 
lsq
->
thªadid
 =Åhreadid;

8521 
lsq
->
IR
 = 
ö°
;

8522 
lsq
->
›
 = op;

8523 
lsq
->
ö°num
 = 
ö°£qnum
;

8524 
lsq
->
isSyncIn°
 = (
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]);

8525 
lsq
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8526 
lsq
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8527 
lsq
->
¥ed_PC
 = 
cuºít
->pred_PC;

8528 
lsq
->
ö_LSQ
 = 
TRUE
;

8529 
lsq
->
ó_comp
 = 
FALSE
;

8530 
lsq
->
ö_qwaô
 = 0;

8531 
lsq
->
di°issue
 = 0;

8532 
lsq
->
‰ìd
 = 0;

8533 
lsq
->
ab™k
 = -1;

8534 
lsq
->
pb™k
 = -1;

8536 
lsq
->
ªcovî_ö°
 = 
FALSE
;

8537 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

8538 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

8539 
lsq
->
°ack_ªcovî_idx
 = 0;

8540 
lsq
->
•ec_mode
 = 
cuºít
->spec_mode;

8541 
lsq
->
„tch_time
 = fetch_time;

8542 
lsq
->
di•_time
 = 
sim_cy˛e
;

8543 
lsq
->
föish_time
 = 0;

8544 
lsq
->
ˇche_ªady
 = 0;

8545 
lsq
->
issue_time
 = 0;

8546 
lsq
->
cou¡ed_iissueq
 = 0;

8547 
lsq
->
cou¡ed_fissueq
 = 0;

8549 
lsq
->
övÆid©i⁄Re˚ived
 = 0;

8550 #ifde‡
PWR_WAKE


8551 
lsq
->
cou¡ed_úódy
 = 0;

8552 
lsq
->
cou¡ed_‰ódy
 = 0;

8553 
lsq
->
cou¡ed_lsqªady
 = 0;

8555 
mm
 = 0; mm < 
CLUSTERS
; mm++)

8557 
lsq
->
°_ªach
[
mm
] = 0;

8560 
lsq
->
backupReg
 = 
ãmpRegPªv
;

8561 
lsq
->
addr
 =áddr;

8562 
rs
->
addr
 =áddr;

8564 
rs
->
ab™k
 = 
lsq
->abank;

8565 i‡(!
BANKPRED
)

8567 
rs
->
pb™k
 =Ñs->
ab™k
;

8568 
lsq
->
pb™k
 =Üsq->
ab™k
;

8570 
rs
->
ab™k
 =Ñs->ab™k % 
CLUSTERS
;

8571 
lsq
->
ab™k
 = 
rs
->abank;

8572 
rs
->
pb™k
 =Ñs->pb™k % 
CLUSTERS
;

8573 
lsq
->
pb™k
 = 
rs
->pbank;

8574 i‡(!
lsq
->
•ec_mode
)

8576 i‡(
lsq
->
ab™k
 =lsq->
pb™k
)

8577 
ac_b™k_¥ed_c‹r
++;

8579 
ac_b™k_¥ed_wr⁄g
++;

8581 
lsq
->
£q
 = ++(
cuºít
->
ö°_£q
);

8582 
lsq
->
±ø˚_£q
 =Ötrace_seq++;

8583 
lsq
->
vÆ_ø
 = val_ra;

8584 
lsq
->
vÆ_rb
 = val_rb;

8585 
lsq
->
vÆ_rc
 = val_rc;

8586 
lsq
->
vÆ_ø_ªsu…
 = val_ra_result;

8587 
	`±ø˚_√wu›
 (
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

8588 
	`±ø˚_√w°age
 (
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

8589 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

8591 
lsq
->
whí_ªady
[0] = 
WAIT_TIME
;

8592 
lsq
->
whí_ªady
[1] = 
WAIT_TIME
;

8593 
lsq
->
whí_ªady
[2] = 
WAIT_TIME
;

8594 
lsq
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

8595 
lsq
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

8596 
lsq
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

8597 
lsq
->
idï_«me
[0] = 0;

8598 
lsq
->
idï_«me
[1] = 0;

8599 
lsq
->
idï_«me
[2] = 0;

8602 #if 
	`deföed
(
EDA
Ë& deföed(
RUN_ORACLE
)

8603 i‡(
cuºít
->
ma°îid
 == 1)

8604 
lsq
->
sim_num_ö¢
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->sim_num_insn;

8607 
lsq
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

8608 
lsq
->
outReg
 = 
out1
;

8611 
lsq
->
robE¡ry
 = 
rs
->
ödex
;

8612 
rs
->
lsqE¡ry
 = 
lsq
->
ödex
;

8613 
lsq
->
isPª„tch
 = 0;

8614 
lsq
->
isL1Miss
 = 0;

8616 
rs
->
ùªg
[0] = 0;

8617 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

8618 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

8620 
rs
->
˛u°î
 = 
lsq
->˛u°î = 
thªadid
;

8621 
cuºít
->
iissueq_thrd
++;

8622 
iissueq
++;

8623 
iissueq_˛
[
rs
->
thªadid
]++;

8625 #ifde‡ 
PWR_CLUSTER


8626 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8629 
lsq
->
cou¡ed_iissueq
 = 1;

8631 
lsq
->
pb™k
 =Üsq->
˛u°î
;

8632 
rs
->
pb™k
 =Ñs->
˛u°î
;

8634 
rs
->
whí_öq
 = 
sim_cy˛e
;

8635 
lsq
->
whí_öq
 = 
rs
->when_inq;

8637 
lsq
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

8638 
lsq
->
ùªg
[1] = 0;

8639 
lsq
->
ùªg
[2] = 0;

8641 
lsq
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

8642 
lsq
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

8647 
	`ruu_lök_idï
 (
rs
, 0, 
NA
);

8648 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8649 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8651 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
DTMP
);

8652 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
NA
);

8654 
rs
->
out1
 = 
DTMP
;

8655 
rs
->
›ªg
 = 0;

8656 
rs
->
ﬁd¥eg
 = 0;

8658 
	`ruu_lök_idï
 (
lsq
, 
STORE_OP_INDEX
, 
ö1
);

8659 
	`ruu_lök_idï
 (
lsq
, 
STORE_ADDR_INDEX
, 
DTMP
);

8660 
	`ruu_lök_idï
 (
lsq
, 2, 
NA
);

8662 
	`ruu_ö°Æl_odï
 (
lsq
, 0, 
out1
);

8663 
	`ruu_ö°Æl_odï
 (
lsq
, 1, 
out2
);

8664 
lsq
->
out1
 = out1;

8666 
n_di•©ched
++;

8668 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

8669 
cuºít
->
RUU_num
++;

8670 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 1Ë% 
LSQ_size
;

8671 
cuºít
->
LSQ_num
++;

8673 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

8676 i‡(
out1
 != 0 && out1 != 63)

8677 
cuºít
->
m_shLQNum
++;

8679 
lsq
->
isPª„tch
 = 1;

8682 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

8684 
cuºít
->
m_shSQNum
++;

8687 
lsq_ac˚ss
++;

8688 
cuºít
->
lsq_ac˚ss
++;

8689 
lsq_¥eg_ac˚ss
++;

8690 
cuºít
->
lsq_¥eg_ac˚ss
++;

8694 if(!
ruu_ö‹dî_issue
)

8696 
rob2_ac˚ss
++;

8697 
cuºít
->
rob2_ac˚ss
++;

8700 i‡(
	`OPERANDS_READY
 (
rs
))

8702 
n_ªady
++;

8703 
	`ªadyq_íqueue
 (
rs
);

8705 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
lsq
);

8707 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
	`OPERANDS_READY
 (
lsq
))

8709 
lsq_°‹e_d©a_ac˚ss
++;

8710 
	`ªadyq_íqueue
 (
lsq
);

8713 i‡(
›
 =
STL_C
 || o∞=
LDL_L
)

8722 
rs
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

8723 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

8724 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

8726 
rs
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

8727 
rs
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

8728 
rs
->
out1
 = out1;

8730 
rs
->
˛u°î
 =Ñs->
thªadid
;

8732 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8734 
cuºít
->
fissueq_thrd
++;

8735 
fissueq
++;

8736 
fissueq_˛
[
rs
->
thªadid
]++;

8737 #ifde‡ 
PWR_CLUSTER


8738 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8740 
rs
->
cou¡ed_fissueq
 = 1;

8741 
fqøm_ac˚ss
++;

8742 
cuºít
->
fqøm_ac˚ss
++;

8746 
cuºít
->
iissueq_thrd
++;

8747 
iissueq
++;

8748 
iissueq_˛
[
rs
->
thªadid
]++;

8749 #ifde‡ 
PWR_CLUSTER


8750 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8752 
rs
->
cou¡ed_iissueq
 = 1;

8753 
iqøm_ac˚ss
++;

8754 
cuºít
->
iqøm_ac˚ss
++;

8757 
rs
->
whí_öq
 = 
sim_cy˛e
;

8759 i‡(!
£c⁄d_run
)

8761 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

8762 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8763 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8764 i‡(
out1
)

8766 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
out1
);

8767 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
out2
);

8768 
rs
->
out1
 = out1;

8772 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
DTMP
);

8773 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
NA
);

8774 
rs
->
out1
 = 
DTMP
;

8779 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

8780 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8781 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8783 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
out1
);

8784 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
out2
);

8785 
rs
->
out1
 = out1;

8789 
n_di•©ched
++;

8791 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

8792 
cuºít
->
RUU_num
++;

8793 if(!
ruu_ö‹dî_issue
)

8795 
rob2_ac˚ss
++;

8796 
cuºít
->
rob2_ac˚ss
++;

8800 i‡(
	`OPERANDS_READY
 (
rs
))

8802 
n_ªady
++;

8803 
	`ªadyq_íqueue
 (
rs
);

8804 
cuºít
->
œ°_›
 = 
RSLINK_NULL
;

8808 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
rs
);

8815 
rs
 = 
NULL
;

8819 
sim_tŸÆ_ö¢
++;

8820 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

8821 
sim_tŸÆ_bønches
++;

8823 i‡(!
cuºít
->
•ec_mode
 && 
£c⁄d_run
)

8827 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

8829 
sim_num_bønches
++;

8831 i‡(!(
rs
->
du∂iˇã
))

8833 
cuºít
->
b¥ed_ac˚ss
++;

8834 
b¥ed_ac˚ss
++;

8837 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

8839 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

8840  
cuºít
->
ªgs
.
ªgs_PC
,

8841  
cuºít
->
ªgs
.
ªgs_NPC
,

8842  
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +

8843  (
md_ö°_t
)),

8844  
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +

8845  (
md_ö°_t
)),

8846  
cuºít
->
¥ed_PC
 =cuºít->
ªgs
.
ªgs_NPC
,

8847  
›
,

8848  &
rs
->
dú_upd©e
,

8849 
rs
->
thªadid
, (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[rs->thªadid]->
ma°îid
 :Ñs->threadid));

8852 i‡(
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
 && !cuºít->
„tch_ªdúe˘ed
)

8854 
cuºít
->
•ec_mode
 = 
TRUE
;

8855 
rs
->
ªcovî_ö°
 = 
TRUE
;

8856 
cuºít
->
ªcovî_PC
 = cuºít->
ªgs
.
ªgs_NPC
;

8857 
	`c›y_to
 (
thªadid
);

8862 
	`±ø˚_√w°age
 (
p£q
, 
PST_DISPATCH
, (
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

8863 i‡(
›
 =
MD_NOP_OP
)

8865 
	`±ø˚_ídö°
 (
p£q
);

8868 
i
 = 0; i < 
pc°©_√…
; i++)

8870 
cou¡î_t
 
√wvÆ
;

8871 
dñè
;

8874 
√wvÆ
 = 
	`STATVAL
 (
pc°©_°©s
[
i
]);

8875 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

8876 i‡(
dñè
 != 0)

8878 
	`°©_add_ßm∂es
 (
pc°©_sdi°s
[
i
], 
cuºít
->
ªgs
.
ªgs_PC
, 
dñè
);

8879 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

8883 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

8884 
cuºít
->
„tch_num
--;

8885 
ãmp_„tch_num
--;

8888 i‡(!
made_check
)

8890 i‡(
	`dlôe_check_bªak
 (0, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

8891 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

8896 
°ÆlCau£
[
thªadid
] = 
SèŒFëchEm±y
;

8897 i‡(!
n_di•©ched
)

8899 
m_tŸÆSèŒ
[
thªadid
]++;

8900 if(
°ÆlCau£
[
thªadid
])

8902 
°ÆlCau£
[
thªadid
])

8904 
SèŒRegFuŒ
 :

8905 
m_ªgFuŒ
[
thªadid
]++;

8907 
SèŒIssueFuŒ
 :

8908 
m_issueFuŒ
[
thªadid
]++;

8910 
SèŒFëchEm±y
 :

8911 if(
thec⁄ãxts
[
thªadid
]->
ruu_„tch_issue_dñay
)

8912 
m_û1Miss
[
thªadid
]++;

8914 
m_„tchEm±y
[
thªadid
]++;

8916 
SèŒSTLC
 :

8917 
m_STLC
[
thªadid
]++;

8919 
SèŒTøp
 :

8920 
m_å≠
[
thªadid
]++;

8922  : 
	`∑nic
("No stall cause found");

8925 i‡(
cuºít
->
m_shLQNum
 =
m_shLQSize
)

8927 
°ÆlCau£
[
thªadid
] = 
SèŒLQFuŒ
;

8928 
m_sqLQFuŒ
[
thªadid
]++;

8929 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

8930 
m_LﬂdRólMiss
[
thªadid
]++;

8932 
m_LﬂdRólHô
[
thªadid
]++;

8934 i‡(
m_shSQSize
 =(
cuºít
->
m_shSQNum


8935 #ifdef 
SMD_USE_WRITE_BUF


8936 +
m_L1WBufC¡
[
thªadid
]

8940 
°ÆlCau£
[
thªadid
] = 
SèŒSQFuŒ
;

8941 
m_sqSQFuŒ
[
thªadid
]++;

8942 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

8943 
m_St‹eRólMiss
[
thªadid
]++;

8945 
m_St‹eRólHô
[
thªadid
]++;

8947 if(
cuºít
->
RUU_num
 =
RUU_size
)

8949 
°ÆlCau£
[
thªadid
] = 
SèŒRUUFuŒ
;

8950 
m_RUUFuŒ
[
thªadid
]++;

8953 if((
°ÆlCau£
[
thªadid
] =
SèŒRUUFuŒ
 || sèŒCau£[thªadid] =
SèŒLQFuŒ
 || sèŒCau£[thªadid] =
SèŒSQFuŒ
 || sèŒCau£[thªadid] =
SèŒRegFuŒ
 || sèŒCau£[thªadid] =
SèŒIssueFuŒ
 || sèŒCau£[thªadid] =
SèŒSTLC
 || sèŒCau£[thªadid] =
SèŒTøp
))

8955 if(
cuºít
->
LSQ_num
)

8957 if(
	`MD_OP_FLAGS
(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
›
Ë& 
F_LOAD
)

8959 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

8960 
m_LﬂdSèŒMiss
[
thªadid
]++;

8962 
m_LﬂdSèŒHô
[
thªadid
]++;

8963 
m_LﬂdMiss
[
thªadid
]++;

8967 
m_St‹eMiss
[
thªadid
]++;

8968 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

8969 
m_St‹eSèŒMiss
[
thªadid
]++;

8971 
m_St‹eSèŒHô
[
thªadid
]++;

8972 if(
m_upd©e_miss
[
thªadid
])

8973 
m_St‹eUpd©eMiss
[
thªadid
]++;

8974 if(
m_upd©e_miss
[
thªadid
] && !
m_upd©e_miss_Êag
[threadid])

8976 
m_upd©e_miss_Êag
[
thªadid
] = 1;

8977 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 
sim_cy˛e
;

8981 if(
	`MD_OP_FLAGS
(
cuºít
->
RUU
[cuºít->
RUU_hód
].
›
Ë& 
F_FENCE
)

8983 
m_St‹eMiss
[
thªadid
]++;

8984 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

8985 
m_St‹eSèŒMiss
[
thªadid
]++;

8987 
m_St‹eSèŒHô
[
thªadid
]++;

8988 if(
m_upd©e_miss
[
thªadid
])

8989 
m_St‹eUpd©eMiss
[
thªadid
]++;

8990 if(
m_upd©e_miss
[
thªadid
] && !
m_upd©e_miss_Êag
[threadid])

8992 
m_upd©e_miss_Êag
[
thªadid
] = 1;

8993 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 
sim_cy˛e
;

8998  
n_di•©ched
;

8999 
	}
}

9007 
	$„tch_öô
 (
thªadid
)

9010 
i
 = 0;

9011 
c⁄ãxt
 *
cuºít
;

9013 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9015 
i
 = 0; i < 
ruu_ifq_size
; i++)

9017 
cuºít
->
„tch_d©a
[
i
] = (
„tch_ªc
 *Ë
	`ˇŒoc
 (1,  (fetch_rec));

9018 i‡(!
cuºít
->
„tch_d©a
[
i
])

9019 
	`Áèl
 ("out of virtual memory");

9020 
cuºít
->
„tch_d©a
[
i
]->
ödex
 = i;

9021 
cuºít
->
„tch_d©a
[
i
]->
thªadid
 =Åhreadid;

9023 
cuºít
->
„tch_num
 = 0;

9024 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

9025 
IFQ_cou¡
 = 0;

9026 
IFQ_fcou¡
 = 0;

9028 
	}
}

9030 
	gœ°_ö°_mis£d
 = 
FALSE
;

9031 
	gœ°_ö°_tmis£d
 = 
FALSE
;

9037 
	$ruu_„tch
 ()

9039 
i
 = 0, 
j
 = 0, 
k
 = 0, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

9040 
md_ö°_t
 
ö°
;

9041 
°ack_ªcovî_idx
;

9042 
bønch_˙t
, 
øy_mu…
;

9043 
md_addr_t
 
„tch_£t
 = 0, 
ö°_£t
;

9044 
ödex
;

9045 
md_›code
 
›
;

9047 
thªadid
, 
tID
 = 0;

9048 
c⁄ãxt
 *
cuºít
 = 0;

9049 
thªads„tched
 = 0;

9050 
ãmp
;

9052 i‡(
dißbÀ_øy
)

9053 
øy_mu…
 = 1;

9055 
øy_mu…
 = 2;

9058 
tID
 < 
numc⁄ãxts
)

9060 
cuºít
 = 
thec⁄ãxts
[
tID
];

9061 
tID
++;

9063 
thªadid
 = 
cuºít
->
id
;

9065 i‡(
cuºít
->
waô_f‹_„tch
 == 2)

9066 
cuºít
->
waô_f‹_„tch
 = 1;

9067 
„tch_d⁄e
[
thªadid
] = 0;

9069 
j
 = 0, 
d⁄e
 = 
FALSE
, 
bønch_˙t
 = 0;

9070 (
cuºít
->
„tch_num
 < 
ruu_ifq_size
-1)

9071 && !
d⁄e
 && !
cuºít
->
ruu_„tch_issue_dñay
 && cuºít->
ru¬ög
 && 
j
 < (
ruu_decode_width
 * 
„tch_•ìd
Ë&& cuºít->
a˘ive_this_cy˛e
 ; 
i
++, j++)

9073 i‡(!
j
)

9075 
iˇche_ac˚ss
++;

9076 
cuºít
->
iˇche_ac˚ss
++;

9080 
cuºít
->
„tch_ªgs_PC
 = cuºít->
„tch_¥ed_PC
;

9083 i‡(
cuºít
->
ld_ãxt_ba£
 <cuºít->
„tch_ªgs_PC
 && cuºít->„tch_ªgs_PC < (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& !(cuºít->„tch_ªgs_PC & ( (
md_ö°_t
) - 1)))

9086 #ifdef 
EDA


9087 if(
cuºít
->
ma°îid
 == 1)

9089 
	`MD_FETCH_INST
 (
ö°
, 
thec⁄ãxts
[
cuºít
->
hñpThdId
]->
mem
, cuºít->
„tch_ªgs_PC
);

9094 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
„tch_ªgs_PC
);

9096 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9098 
œt
 = 
ˇche_û1_œt
;

9101 i‡(!
j
)

9102 
„tch_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9103 
ö°_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9104 i‡(
„tch_£t
 !
ö°_£t
)

9107 #ifde‡ 
FIX2_BUG


9108 i‡(!
cuºít
->
waô_f‹_„tch
)

9111 i‡(
ˇche_û1
[
thªadid
])

9115 
rsCacheAc˚ss
 = 
NULL
;

9116 #ifde‡
DIRECTORY


9117 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9118 
	`¥ötf
("debug 1\n");

9119 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9120 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9121 
NULL
, NULL, NULL,
thªadid
);

9123 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
 (
cuºít
->
„tch_ªgs_PC
), 
NULL
, 
	`ISCOMPRESS
 ( (
md_ö°_t
)), 
sim_cy˛e
, NULL, NULL,Åhreadid);

9125 i‡(
œt
 > (
ˇche_û1_œt
))

9126 
œ°_ö°_mis£d
 = 
TRUE
;

9129 i‡(
ôlb
[
thªadid
])

9131 #ifde‡
DIRECTORY


9132 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9133 
	`¥ötf
("debug 2\n");

9134 
éb_œt
 = 
	`ˇche_ac˚ss
(
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9135 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9136 
NULL
, NULL, NULL, 
thªadid
);

9138 
éb_œt
 = 
	`ˇche_ac˚ss
 (
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
 (
cuºít
->
„tch_ªgs_PC
), 
NULL
, 
	`ISCOMPRESS
 ( (
md_ö°_t
)), 
sim_cy˛e
, NULL, NULL,Åhreadid);

9141 i‡(
éb_œt
 > 1)

9142 
œ°_ö°_tmis£d
 = 
TRUE
;

9144 
œt
 = 
	`max2
 (
éb_œt
,Üat);

9147 i‡(
œt
 !(
ˇche_û1_œt
))

9149 
cuºít
->
ruu_„tch_issue_dñay
 +(
œt
 - 1);

9150 #ifde‡ 
FIX2_BUG


9151 
cuºít
->
waô_f‹_„tch
 = 2;

9156 #ifde‡ 
FIX2_BUG


9162 
ö°
 = 
MD_NOP_INST
;

9165 i‡(
cuºít
->
¥ed
)

9167 
bønchIn°
 *
bønchInfo
 = 
NULL
;

9168 
md_›code
 
›
;

9171 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9176 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9178 
md_addr_t
 
bèrgë
;

9180 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)) == (F_CTRL | F_UNCOND | F_INDIRJMP))

9181 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * (
ö°
 & 0x00003fff);

9183 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * 
	`SEXT21
 (
ö°
 & 0x001fffff);

9185 
cuºít
->
„tch_¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
,

9186  
cuºít
->
„tch_ªgs_PC
,

9188  
›
,

9189  
	`MD_IS_CALL
 (
›
),

9190  
	`MD_IS_RETURN
 (
›
),

9191  &(
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
dú_upd©e
),

9192  &
°ack_ªcovî_idx
,

9193  
cuºít
->
id
,

9194  (
b¥ed_btb_u£_ma°îid
 ? 
cuºít
->
ma°îid
 : cuºít->
id
));

9197 
cuºít
->
„tch_¥ed_PC
 = 0;

9200 i‡(!
cuºít
->
„tch_¥ed_PC
)

9202 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9204 i‡(
cuºít
->
„tch_¥ed_PC
 !cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
))

9207 
bønch_˙t
++;

9208 i‡(
bønch_˙t
 >
„tch_•ìd
)

9209 
d⁄e
 = 
TRUE
;

9214 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9217 
cuºít
->
„tch_tŸÆ_ö¢
++;

9218 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
thªadid
 =Åhreadid;

9219 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
IR
 = 
ö°
;

9220 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
ªgs_PC
 = cuºít->
„tch_ªgs_PC
;

9221 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
¥ed_PC
 = cuºít->
„tch_¥ed_PC
;

9222 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
°ack_ªcovî_idx
 = stack_recover_idx;

9223 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
 =Ötrace_seq++;

9224 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
„tch_time
 = (Ë
sim_cy˛e
;

9226 
	`±ø˚_√wö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
ö°
, cuºít->„tch_d©a[cuºít->„tch_èû]->
ªgs_PC
, 0);

9227 
	`±ø˚_√w°age
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
PST_IFETCH
, ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0Ë| (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

9229 
cuºít
->
„tch_èû
 = (cuºít->„tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

9230 
cuºít
->
„tch_num
++;

9231 
„tch_d⁄e
[
thªadid
]++;

9234 #ifde‡ 
FIX2_BUG


9236 i‡(
cuºít
->
waô_f‹_„tch
 == 1)

9238 i‡(!
j
 && 
cuºít
->
ruu_„tch_issue_dñay
)

9239 
cuºít
->
waô_f‹_„tch
 = 2;

9241 
cuºít
->
waô_f‹_„tch
 = 0;

9245 
	}
}

9251 
	$simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

9252 *
cmd
,

9253 
ªgs_t
 *
ªgs
,

9254 
mem_t
 *
mem
)

9257 
thªadid
 = 
mem
->threadid;

9258 
c⁄ãxt
 *
cuºít
;

9260 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9262 i‡(!
cmd
 || !
	`°rcmp
 (cmd, "help"))

9263 
	`Ârötf
 (
°ªam
,

9275 i‡(!
	`°rcmp
 (
cmd
, "stats"))

9278 
	`sim_¥öt_°©s
 (
°ªam
);

9280 i‡(!
	`°rcmp
 (
cmd
, "res"))

9283 
	`ªs_dump
 (
fu_poﬁ
, 
°ªam
);

9285 i‡(!
	`°rcmp
 (
cmd
, "ruu"))

9288 
	`ruu_dump
 (
°ªam
, 
thªadid
);

9295 i‡(!
	`°rcmp
 (
cmd
, "eventq"))

9298 
	`evítq_dump
 (
°ªam
, 
thªadid
);

9300 i‡(!
	`°rcmp
 (
cmd
, "readyq"))

9303 
	`ªadyq_dump
 (
°ªam
, 
thªadid
);

9305 i‡(!
	`°rcmp
 (
cmd
, "cv"))

9308 
	`cv_dump
 (
°ªam
, 
thªadid
);

9310 i‡(!
	`°rcmp
 (
cmd
, "rspec"))

9313 
	`r•ec_dump
 (
°ªam
, 
thªadid
);

9315 i‡(!
	`°rcmp
 (
cmd
, "mspec"))

9318 
	`m•ec_dump
 (
°ªam
, 
thªadid
);

9329  
NULL
;

9330 
	}
}

9332 
	#TAKE_STATS_PHASE
 1

	)

9333 
	#DRAIN_PIPELINE_PHASE
 2

	)

9334 
	#RECONFIGURE_PHASE
 3

	)

9335 
	#NORMAL_PHASE
 4

	)

9336 
	#PRIVTOSHARED
 5

	)

9337 
	#SHAREDTOPRIV
 6

	)

9338 
	#EXTRA_PHASE
 7

	)

9339 
	gch™geC⁄fig
 = 0;

9340 
	gcuºítPha£
 = 
NORMAL_PHASE
;

9345 
ªgíî©e_„tch_queue
 ();

9346 
c›y_„tch_queue
 ();

9348 
ªgíî©e_f_queue
 ();

9349 
c›y_f_queue
 ();

9350 
bønch_addªss_c›y
 (
ma°îid
, 
chunkExecuãd
);

9355 
time_t
 
	g¥öt_time
, 
	gnow_time
;

9356 
ruu_ªÀa£_wrôebuf„r
 ();

9357 
ruu_wrôe_‰om_Wrôebuf„r
 ();

9358 #ifdef 
COLLECT_STAT_STARTUP


9359 
f°fwd_föeAdju°
 ();

9360 
f°fwd_cﬁÀ˘Sèts
();

9364 
	$sim_maö
 ()

9366 
unPrötLimô
 = 1;

9367 
i
, 
j
, 
k
, 
l
;

9368 
ãmp˛
, 
maxguy
, 
maxvÆ
, 
ªf_mis
, 
ªf_imis
, 
ªf_br
, 
ªf_ªfs
, 
ªf_cyc
, 
mm
, 
¬
;

9369 
gŸ_ªf_poöt
 = 0;

9370 
möguy
, 
mövÆ
;

9371 
cyc_cou¡
 = 0;

9372 
num_picks
[
NUMPHASES
 + 1];

9373 
sim_ñ≠£d_£c
;

9374 
di•©ched
 = 0;

9376 
thªadid
 = 0, 
thªad_°›
 = 0;

9377 
c⁄ãxt
 *
cuºít
;

9378 
kûœŒ
 = 0;

9379 
„tch_blocked
 = 1;

9380 
˙t
;

9382 
FILE
 *
Â
, *
Â1
;

9383 
brNum
, 
ldNum
;

9385 #ifde‡
DO_COMPLETE_FASTFWD


9386 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

9387 
x
, 
lo›ôî
;

9391 
	`sig«l
 (
SIGFPE
, 
SIG_IGN
);

9394 
«ck_cou¡î
 = 0;

9395 
Êù_cou¡î
 = 0;

9396 
L1_Êù_cou¡î
 = 0;

9397 
e_to_m
 = 0;

9398 
f
;

9399 
f
=0;f<8;f++)

9400 
mem_p‹t_œt
[
f
] = 0;

9401 
tŸÆevítcou¡num
 = 0;

9402 
tŸÆ_L1_¥e„tch
 = 0;

9403 
wrôe_back_óæy
 = 0;

9404 
tŸÆ_L1_fú°_¥e„tch
 = 0;

9405 
tŸÆ_L1_£c_¥e„tch
 = 0;

9406 
tŸÆªqcou¡num
 = 0;

9407 
tŸÆmisscou¡num
 = 0;

9408 
övﬁve_4_h›s
 = 0;

9409 
övﬁve_4_h›s_upgøde
 = 0;

9410 
övﬁve_4_h›s_miss
 = 0;

9411 
övﬁve_2_h›s
 = 0;

9412 
övﬁve_2_h›_touch
 = 0;

9413 
övﬁve_2_h›_wb
 = 0;

9414 
övﬁve_4_h›s_wm
 = 0;

9415 
tŸÆS∂ôWM
 = 0;

9416 
tŸÆS∂ôNo
 = 0;

9417 
övﬁve_2_h›s_wm
 = 0;

9418 
övﬁve_2_h›s_upgøde
 = 0;

9419 
övﬁve_2_h›s_miss
 = 0;

9420 
d©a_sh¨ed_ªad
 = 0;

9421 
d©a_¥iv©e_ªad
 = 0;

9422 
d©a_sh¨ed_wrôe
 = 0;

9423 
d©a_¥iv©e_wrôe
 = 0;

9424 
tŸÆ_Æl_˛o£
 = 0;

9425 
tŸÆ_Æl_Æmo°˛o£
 = 0;

9426 
tŸÆ_nŸ_Æl_˛o£
 = 0;

9427 
tŸÆ_p_c_evíts
 = 0;

9428 
tŸÆ_c⁄sumîs
 = 0;

9429 
tŸÆ_d©a_c⁄sumîs
 = 0;

9430 
tŸÆ_d©a_Ár
 = 0;

9431 
tŸÆ_d©a_©_c‹√r
 = 0;

9432 
tŸÆ_d©a_˛o£
 = 0;

9433 
tŸÆ_∑ckës_ö_√ighb‹
 = 0;

9434 
tŸÆ_∑ckës_©_c‹√rs
 = 0;

9435 
avîage_outside_≥r˚¡
 = 0;

9436 
avîage_outside_abs_≥r˚¡
 = 0;

9437 
avîage_öside_≥r˚¡
 = 0;

9438 
avîage_c‹√r_≥r˚¡
 = 0;

9439 #ifde‡
EUP_NETWORK


9440 
EUP_íåy_fuŒ
 = 0;

9441 
i
 = 0; i< 
numc⁄ãxts
; i++)

9442 
	`EUP_íåy_öô
(
i
);

9444 
i
 = 0; i< 
numc⁄ãxts
; i++)

9445 
sh¨î_num
[
i
] = 0;

9447 #i‡
PROCESS_MODEL


9448 
i
 = 0; i < 128; i++)

9450 
sh¨edAddªssLi°
[
i
] = 
NULL
;

9452 
La°Sh¨edAddªss
 = 0;

9453 
La°Sh¨edSize
 = 0;

9456 
	`öôClu°îInfo
 ();

9458 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

9459 
	`busInô
 ();

9462 
‚m
[256];

9463 
nm
[256];

9465 
	`°r˝y
 (
nm
, 
thec⁄ãxts
[0]->
‚ame
);

9467 
l
 = 0;Ü < 
MAXTHREADS
;Ü++)

9469 
numThªads
[
l
] = 
mè_maxthªads
;

9474 
n_limô_thrd
[0] =Ç_limit_thrd[1] =Ç_limit_thrd[2] =Ç_limit_thrd[3] = 1;

9478 
	`Ârötf
 (
°dîr
, "Issueq sizê - i¡ %d f∞%d\n", 
IIQ_size
, 
FIQ_size
);

9479 #ifde‡
REG_RENAME_CONFIGUARE


9480 
	`Ârötf
 (
°dîr
, "ª«mêPªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

9482 
	`Ârötf
 (
°dîr
, "Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

9484 
	`Ârötf
 (
°dîr
, "CLUSTERS %d\n", 
CLUSTERS
);

9485 
	`Ârötf
 (
°dîr
, "ROWCOUNT %d\n", 
ROWCOUNT
);

9486 
	`Ârötf
 (
°dîr
, "CENTRAL_CACHE %d\n", 
CENTRAL_CACHE
);

9487 
	`Ârötf
 (
°dîr
, "CENTRALCACHELAT %d\n", 
CENTRALCACHELAT
);

9488 
	`Ârötf
 (
°dîr
, "CACHELOC %d\n", 
CACHELOC
);

9489 
	`Ârötf
 (
°dîr
, "PRED_BR_CHANGES %d\n", 
PRED_BR_CHANGES
);

9490 
	`Ârötf
 (
°dîr
, "PRED_JR_CHANGES %d\n", 
PRED_JR_CHANGES
);

9491 
	`Ârötf
 (
°dîr
, "DYNAMIC_CHANGE %d\n", 
DYNAMIC_CHANGE
);

9492 
	`Ârötf
 (
°dîr
, "METRIC_CHANGE %d\n", 
METRIC_CHANGE
);

9493 
	`Ârötf
 (
°dîr
, "LINEAR_PHASE %d\n", 
LINEAR_PHASE
);

9494 
	`Ârötf
 (
°dîr
, "SMALLEST_CONFIG %d\n", 
SMALLEST_CONFIG
);

9495 
	`Ârötf
 (
°dîr
, "GRID %d\n", 
GRID
);

9496 
	`Ârötf
 (
°dîr
, "CACHEPORTS %d\n", 
CACHEPORTS
);

9497 
	`Ârötf
 (
°dîr
, "RES_CACHEPORTS %d\n", 
RES_CACHEPORTS
);

9498 
	`Ârötf
 (
°dîr
, "READY_COMM %d\n", 
READY_COMM
);

9499 
	`Ârötf
 (
°dîr
, "HOLY_REGS %d\n", 
HOLY_REGS
);

9500 
	`Ârötf
 (
°dîr
, "NUM_H_REGS %d\n", 
NUM_H_REGS
);

9501 
	`Ârötf
 (
°dîr
, "COPY_THRESH %d\n", 
COPY_THRESH
);

9502 
	`Ârötf
 (
°dîr
, "FIRST_FIT %d\n", 
FIRST_FIT
);

9503 
	`Ârötf
 (
°dîr
, "FIRST_FIT_ENFORCE %d\n", 
FIRST_FIT_ENFORCE
);

9504 
	`Ârötf
 (
°dîr
, "FIRST_VAL %d\n", 
FIRST_VAL
);

9505 
	`Ârötf
 (
°dîr
, "STEER_ENFORCE %d\n", 
STEER_ENFORCE
);

9506 
	`Ârötf
 (
°dîr
, "MOD_N %d\n", 
MOD_N
);

9507 
	`Ârötf
 (
°dîr
, "MOD_N_N %d\n", 
MOD_N_N
);

9508 
	`Ârötf
 (
°dîr
, "FIRST_MOD %d\n", 
FIRST_MOD
);

9509 
	`Ârötf
 (
°dîr
, "GROUPSIZE %d\n", 
GROUPSIZE
);

9510 
	`Ârötf
 (
°dîr
, "MOD_N_T %d\n", 
MOD_N_T
);

9511 
	`Ârötf
 (
°dîr
, "ANYWILLDO %d\n", 
ANYWILLDO
);

9512 
	`Ârötf
 (
°dîr
, "NEIGHBOR_SEEK %d\n", 
NEIGHBOR_SEEK
);

9513 
	`Ârötf
 (
°dîr
, "PICKMIDDLE %d\n", 
PICKMIDDLE
);

9514 
	`Ârötf
 (
°dîr
, "MIDTHRESH %d\n", 
MIDTHRESH
);

9515 
	`Ârötf
 (
°dîr
, "HOPTIME %d\n", 
HOPTIME
);

9516 
	`Ârötf
 (
°dîr
, "COMM_LATENCY %d\n", 
COMM_LATENCY
);

9517 #i‚de‡
CONFIG_BASED_ICS


9518 
	`Ârötf
 (
°dîr
, "FE_LAT %d\n", 
FE_LAT
);

9520 
	`Ârötf
 (
°dîr
, "CACHE_REFILL_LAT %d\n", 
CACHE_REFILL_LAT
);

9521 
	`Ârötf
 (
°dîr
, "MPRED_COMM_LAT %d\n", 
MPRED_COMM_LAT
);

9522 
	`Ârötf
 (
°dîr
, "LD_PROXIMITY %d\n", 
LD_PROXIMITY
);

9523 
	`Ârötf
 (
°dîr
, "LDPROX_FACTOR %d\n", 
LDPROX_FACTOR
);

9524 
	`Ârötf
 (
°dîr
, "STEER_2NONREADY %d\n", 
STEER_2NONREADY
);

9525 
	`Ârötf
 (
°dîr
, "STEER_CRITICAL %d\n", 
STEER_CRITICAL
);

9526 
	`Ârötf
 (
°dîr
, "ILOAD_MIN %d\n", 
ILOAD_MIN
);

9527 
	`Ârötf
 (
°dîr
, "IFACTOR %d\n", 
IFACTOR
);

9528 
	`Ârötf
 (
°dîr
, "RLOAD_MIN %d\n", 
RLOAD_MIN
);

9529 
	`Ârötf
 (
°dîr
, "RFACTOR %d\n", 
RFACTOR
);

9530 
	`Ârötf
 (
°dîr
, "DEP_FACTOR %d\n", 
DEP_FACTOR
);

9531 
	`Ârötf
 (
°dîr
, "LD_FACTOR %d\n", 
LD_FACTOR
);

9532 
	`Ârötf
 (
°dîr
, "IQBUF %d\n", 
IQBUF
);

9533 
	`Ârötf
 (
°dîr
, "REGFREE %d\n", 
REGFREE
);

9534 
	`Ârötf
 (
°dîr
, "FREE_CURR_REGS %d\n", 
FREE_CURR_REGS
);

9535 
	`Ârötf
 (
°dîr
, "FREE_INTERVAL %d\n", 
FREE_INTERVAL
);

9536 
	`Ârötf
 (
°dîr
, "DISPDELAY %d\n", 
DISPDELAY
);

9537 
	`Ârötf
 (
°dîr
, "RING_BW %d\n", 
RING_BW
);

9538 
	`Ârötf
 (
°dîr
, "TIMEWINDOW %d\n", 
TIMEWINDOW
);

9539 
	`Ârötf
 (
°dîr
, "ST_ADDR_COMM %d\n", 
ST_ADDR_COMM
);

9540 
	`Ârötf
 (
°dîr
, "ST_RING_BW %d\n", 
ST_RING_BW
);

9541 
	`Ârötf
 (
°dîr
, "RING_IC %d\n", 
RING_IC
);

9542 
	`Ârötf
 (
°dîr
, "IGNORE_COMM_LATENCY %d\n", 
IGNORE_COMM_LATENCY
);

9543 
	`Ârötf
 (
°dîr
, "TOL_COUNT %d\n", 
TOL_COUNT
);

9544 
	`Ârötf
 (
°dîr
, "STOREDELAY %d\n", 
STOREDELAY
);

9545 
	`Ârötf
 (
°dîr
, "BANKPRED %d\n", 
BANKPRED
);

9546 
	`Ârötf
 (
°dîr
, "BANKMISPREDLAT %d\n", 
BANKMISPREDLAT
);

9547 
	`Ârötf
 (
°dîr
, "BANKP_SPEC %d\n", 
BANKP_SPEC
);

9548 
	`Ârötf
 (
°dîr
, "LEV1SIZE %d\n", 
LEV1SIZE
);

9549 
	`Ârötf
 (
°dîr
, "LEV2SIZE %d\n", 
LEV2SIZE
);

9550 
	`Ârötf
 (
°dîr
, "XORSIZE %d\n", 
XORSIZE
);

9551 
	`Ârötf
 (
°dîr
, "WORD_INTERLEAVED %d\n", 
WORD_INTERLEAVED
);

9552 
	`Ârötf
 (
°dîr
, "WORDSIZE %d\n", 
WORDSIZE
);

9553 
	`Ârötf
 (
°dîr
, "SORT %d\n", 
SORT
);

9554 
	`Ârötf
 (
°dîr
, "NUMPHASES %d\n", 
NUMPHASES
);

9555 
	`Ârötf
 (
°dîr
, "MIN_INSN_INT %d\n", 
MIN_INSN_INT
);

9556 
	`Ârötf
 (
°dîr
, "STOP_EXPL_THRESH %d\n", 
STOP_EXPL_THRESH
);

9557 
	`Ârötf
 (
°dîr
, "ILPTAGCHECK %d\n", 
ILPTAGCHECK
);

9558 
	`Ârötf
 (
°dîr
, "DISTILP %d\n", 
DISTILP
);

9559 
	`Ârötf
 (
°dîr
, "DISTILPTHRESH %d\n", 
DISTILPTHRESH
);

9560 
	`Ârötf
 (
°dîr
, "SAMPLETHRESH %d\n", 
SAMPLETHRESH
);

9561 
	`Ârötf
 (
°dîr
, "BR_INT %d\n", 
BR_INT
);

9562 
	`Ârötf
 (
°dîr
, "ITABLESIZE %d\n", 
ITABLESIZE
);

9563 
	`Ârötf
 (
°dîr
, "OWINDOWSIZE %d\n", 
OWINDOWSIZE
);

9564 
	`Ârötf
 (
°dîr
, "ILPCLEARINT %d\n", 
ILPCLEARINT
);

9565 
	`Ârötf
 (
°dîr
, "STATPRINT %d\n", 
STATPRINT
);

9566 
	`Ârötf
 (
°dîr
, "CYCNOISE %d\n", 
CYCNOISE
);

9567 
	`Ârötf
 (
°dîr
, "NUMCYCTHRESH %d\n", 
NUMCYCTHRESH
);

9568 
	`Ârötf
 (
°dîr
, "STATINT %d\n", 
STATINT
);

9569 
	`Ârötf
 (
°dîr
, "FREE_REG_THRESH %d\n", 
FREE_REG_THRESH
);

9570 
	`Ârötf
 (
°dîr
, "TABLE2SIZE %d\n", 
TABLE2SIZE
);

9571 
	`Ârötf
 (
°dîr
, "TABLESIZE %d\n", 
TABLESIZE
);

9574 #ifde‡
DO_COMPLETE_FASTFWD


9575 
	`SèπSkñë⁄Ród
 (0);

9576 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9578 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9579 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9580 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9588 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9590 
lo›ôî
 = 0;Üoopiter < 20;Üoopiter++)

9592 
cou¡î_t
 
icou¡
;

9593 
md_ö°_t
 
ö°
;

9594 
md_›code
 
›
;

9595 
md_addr_t
 
èrgë_PC
;

9596 
md_addr_t
 
addr
;

9597 
is_wrôe
;

9598 
byã_t
 
ãmp_byã
;

9599 
hÆf_t
 
ãmp_hÆf
;

9600 
w‹d_t
 
ãmp_w‹d
;

9602 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

9603 
qw‹d_t
 
ãmp_qw‹d
 = 0;

9606 
md_Áu…_ty≥
 
Áu…
;

9608 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9610 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

9611 #ifde‡
TARGET_ALPHA


9612 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

9617 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

9620 
addr
 = 0;

9621 
is_wrôe
 = 
FALSE
;

9624 
Áu…
 = 
md_Áu…_n⁄e
;

9625 
sim_num_ö¢
++;

9627 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9629 
›
)

9631 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

9632 
OP
: \

9634 
out1
 = 
O1
; 
out2
 = 
O2
; \

9635 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

9637 
	`SYMCAT
(
OP
,
_IMPL
); \

9639 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

9640 
OP
: \

9642 
›
 = 
MD_NOP_OP
; \

9644 
out1
 = 
NA
; 
out2
 = NA; \

9645 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

9648 
	#CONNECT
(
OP
Ë

	)

9654 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

9656 i‡(!
cuºít
->
•ec_mode
) \

9657 
Áu…
 = (
FAULT
); \

9661 
	~"machöe.def
"

9664 
›
 = 
MD_NOP_OP
;

9666 
out1
 = 
NA
;

9667 
out2
 = 
NA
;

9668 
ö1
 = 
NA
;

9669 
ö2
 = 
NA
;

9670 
ö3
 = 
NA
;

9675 i‡(
Áu…
 !
md_Áu…_n⁄e
)

9676 
	`Áèl
 ("n⁄-•ecuœtivêÁu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

9678 #ifde‡
CACHE_PROFILE


9679 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_LOAD
)

9681 
œt
;

9682 #ifde‡
DIRECTORY


9683 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 
rs
, 0);

9685 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9687 i‡(
déb
)

9688 #ifde‡
DIRECTORY


9689 
œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, NULL, 0);

9691 
œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9693 
lﬂd_œt
 = 
	`max2
 (lﬂd_œt, 
œt
);

9694 i‡(
lﬂd_œt
 > 50)

9695 
	`PushMissPªdLﬂd
 (
cuºít
->
ªgs
.
ªgs_PC
, (Ë
lﬂd_œt
);

9697 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

9699 #ifde‡
DIRECTORY


9700 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 
rs
, 0);

9702 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9704 i‡(
déb
)

9705 #ifde‡
DIRECTORY


9706 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, NULL, 0);

9708 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9712 #ifde‡ 
BRANCH_PROFILE


9713 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9715 
b¥ed_upd©e_t
 
dú_upd©e
;

9716 
°ack_ªcovî_idx
;

9718 
cuºít
->
¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
, cuºít->
ªgs
.
ªgs_PC
, 1, 
›
, 
	`MD_IS_CALL
 (›), 
	`MD_IS_RETURN
 (›), &
dú_upd©e
, &
°ack_ªcovî_idx
, cuºít->
id
, (
b¥ed_btb_u£_ma°îid
 ? cuºít->
ma°îid
 : current->id));

9720 i‡(!
cuºít
->
¥ed_PC
)

9721 
cuºít
->
¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
);

9723 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

9724 
cuºít
->
ªgs
.
ªgs_PC
,

9725 
cuºít
->
ªgs
.
ªgs_NPC
,

9726 
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)),

9727 
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)), cuºít->¥ed_PC =cuºít->ªgs.
ªgs_NPC
, 
›
, &
dú_upd©e
, cuºít->
id
, (
b¥ed_btb_u£_ma°îid
 ? cuºít->
ma°îid
 : current->id));

9729 i‡(!(
›
 =
RETN
 || o∞=
JMP
 || o∞=
JSR
 || o∞=
BSR
 || o∞=
BR
))

9731 i‡(
cuºít
->
ªgs
.
ªgs_NPC
 =cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
))

9732 
	`ö£π_br_dú
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, (cuºít->
¥ed_PC
 !cuºít->ªgs.
ªgs_NPC
));

9734 
	`ö£π_br_dú
 (
cuºít
->
ªgs
.
ªgs_PC
, 1, (cuºít->
¥ed_PC
 !cuºít->ªgs.
ªgs_NPC
));

9738 #ifde‡ 
STORE_PROFILE


9739 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

9741 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

9743 
	`pushSt‹e
 (
cuºít
->
ªgs
.
ªgs_PC
, 
addr
, cuºít->
sim_num_ö¢
, 
memWidth
);

9746 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

9748 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

9750 i‡(
out1
 > 0 && out1 < 63)

9751 
	`vîifyLﬂd
 (
cuºít
->
ªgs
.
ªgs_PC
, 
addr
, cuºít->
sim_num_ö¢
, 
memWidth
);

9754 #ifde‡ 
INDIRECTJUMP_PROFILE


9755 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)Ë=(F_CTRL | F_UNCOND | F_INDIRJMPË&& (› !
RETN
)))

9756 
	`pushJump
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
);

9758 #ifde‡ 
FREQ_PROFILE


9759 
	`ö°ExecuãdFªq
 (
cuºít
->
ªgs
.
ªgs_PC
);

9762 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

9763 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

9765 i‡((
sim_num_ö¢
 % 500000000) == 0)

9767 
	`¥ötf
 ("[INFO]: sim_num_ö¢=%Œd\n", 
sim_num_ö¢
);

9768 
	`Ârötf
 (
°dîr
, "[INFO]: sim_num_ö¢=%Œd\n", 
sim_num_ö¢
);

9769 
	`fÊush
 (
°dîr
);

9770 
	`fÊush
 (
°dout
);

9777 #ifdef 
COLLECT_STAT_STARTUP


9778 #ifdef 
EDA


9779 i‡(
numc⁄ãxts
 != 3)

9780 
	`∑nic
 ("ForÉxecution in EDA modeÅhere should beÉxactly 3 initialÅhreads,Éach for correctness, optimisticánd oracle core.");

9784 #ifdef 
EDA


9785 
thªadid
 = 0;Åhreadid < 3;Åhreadid++)

9788 
thrdPîJobC¡
 = 1;

9789 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9790 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9791 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9794 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

9795 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9799 i‡(!
cuºít
->
Á°fwd_d⁄e
)

9801 
cou¡î_t
 
icou¡
;

9802 
md_ö°_t
 
ö°
;

9803 
md_›code
 
›
;

9804 
md_addr_t
 
èrgë_PC
;

9805 
md_addr_t
 
addr
;

9806 
is_wrôe
;

9807 
byã_t
 
ãmp_byã
;

9808 
hÆf_t
 
ãmp_hÆf
;

9809 
w‹d_t
 
ãmp_w‹d
;

9811 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

9812 
qw‹d_t
 
ãmp_qw‹d
 = 0;

9815 
md_Áu…_ty≥
 
Áu…
;

9817 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

9819 !
cuºít
->
Á°fwd_d⁄e
)

9822 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

9823 #ifde‡
TARGET_ALPHA


9824 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

9828 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

9829 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

9832 
addr
 = 0;

9833 
is_wrôe
 = 
FALSE
;

9836 
Áu…
 = 
md_Áu…_n⁄e
;

9839 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9842 
›
)

9844 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

9845 
OP
: \

9846 
	`SYMCAT
(
OP
,
_IMPL
); \

9848 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

9849 
OP
: \

9850 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

9851 
	#CONNECT
(
OP
)

	)

9852 #unde‡
DECLARE_FAULT


9853 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

9854 { 
Áu…
 = (
FAULT
); ; }

9855 
	~"machöe.def
"

9857 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

9860 i‡(
Áu…
 !
md_Áu…_n⁄e
)

9861 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

9864 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

9866 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

9868 
is_wrôe
 = 
TRUE
;

9870 #i‚de‡
PARALLEL_EMUL


9871 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

9874 #i‚de‡
PARALLEL_EMUL


9876 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

9881 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

9882 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

9886 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

9887 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

9892 #ifdef 
EDA


9893 
i
 = 0, 
j
 = 0; i < 
mè_maxthªads
; i++)

9895 i‡(
j
 =
THREADS_PER_JOB
)

9898 i‡(
thec⁄ãxts
[
i
]->
ma°îid
 == 0)

9900 
k
 = 0, 
l
 = 0; k < 
mè_maxthªads
; k++)

9902 i‡(
thec⁄ãxts
[
k
]->
ma°îid
 == 1)

9904 i‡(
l
 =
j
)

9906 
m
;

9908 
m
 = 0, 
l
 = 0; m < 
mè_maxthªads
; m++)

9910 i‡(
thec⁄ãxts
[
m
]->
ma°îid
 == 2)

9912 i‡(
l
 =
j
)

9914 
thec⁄ãxts
[
i
]->
jobThdId
 = 
j
;

9915 
thec⁄ãxts
[
k
]->
jobThdId
 = 
j
;

9916 
thec⁄ãxts
[
m
]->
jobThdId
 = 
j
;

9917 
thec⁄ãxts
[
i
]->
hñpThdId
 = 
k
;

9918 
thec⁄ãxts
[
k
]->
hñpThdId
 = 
i
;

9919 
thec⁄ãxts
[
m
]->
hñpThdId
 = -1;

9920 
thec⁄ãxts
[
i
]->
‹a˛eId
 = 
m
;

9921 
thec⁄ãxts
[
k
]->
‹a˛eId
 = 
m
;

9922 
thec⁄ãxts
[
m
]->
‹a˛eId
 = -1;

9924 
thec⁄ãxts
[
i
]->
¥edQueue
 = (
bønchC‹r
 *Ë
	`ˇŒoc
 (1,  (branchCorr));;

9925 
	`öôBønchC‹r
 (
thec⁄ãxts
[
i
]->
¥edQueue
);

9926 
thec⁄ãxts
[
k
]->
¥edQueue
 =Åhec⁄ãxts[
i
]->predQueue;

9927 
thec⁄ãxts
[
m
]->
¥edQueue
 =Åhec⁄ãxts[
i
]->predQueue;

9930 
l
++;

9935 
l
++;

9938 
j
++;

9942 
i
 = 0; i < 
numc⁄ãxts
; i++)

9944 
thec⁄ãxts
[
i
]->
jobThdId
 = i;

9945 
thec⁄ãxts
[
i
]->
hñpThdId
 = -1;

9946 
thec⁄ãxts
[
i
]->
‹a˛eId
 = -1;

9950 
	`¥ötf
 ("ff Stage 0 done\n");

9951 
	`fÊush
 (
°dout
);

9953 
	`f°fwd_cﬁÀ˘Sèts
();

9956 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9958 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9959 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9960 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9963 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

9964 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9968 i‡(
cuºít
->
Á°fwd_cou¡
 > 0)

9970 
cou¡î_t
 
icou¡
;

9971 
md_ö°_t
 
ö°
;

9972 
md_›code
 
›
;

9973 
md_addr_t
 
èrgë_PC
;

9974 
md_addr_t
 
addr
;

9975 
is_wrôe
;

9976 
byã_t
 
ãmp_byã
;

9977 
hÆf_t
 
ãmp_hÆf
;

9978 
w‹d_t
 
ãmp_w‹d
;

9980 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

9981 
qw‹d_t
 
ãmp_qw‹d
 = 0;

9984 
md_Áu…_ty≥
 
Áu…
;

9986 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

9988 
icou¡
 = 0; icou¡ < 
cuºít
->
Á°fwd_cou¡
; icount++)

9991 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

9992 #ifde‡
TARGET_ALPHA


9993 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

9997 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

10000 
addr
 = 0;

10001 
is_wrôe
 = 
FALSE
;

10004 
Áu…
 = 
md_Áu…_n⁄e
;

10007 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

10010 
›
)

10012 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

10013 
OP
: \

10014 
	`SYMCAT
(
OP
,
_IMPL
); \

10016 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

10017 
OP
: \

10018 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

10019 
	#CONNECT
(
OP
)

	)

10020 #unde‡
DECLARE_FAULT


10021 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

10022 { 
Áu…
 = (
FAULT
); ; }

10023 
	~"machöe.def
"

10025 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

10028 i‡(
Áu…
 !
md_Áu…_n⁄e
)

10029 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

10032 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

10034 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

10036 
is_wrôe
 = 
TRUE
;

10037 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

10040 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

10044 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

10045 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10048 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10049 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10056 
	`¥ötf
 ("ff stage 1 done\n");

10057 
	`fÊush
 (
°dout
);

10059 
	`Ârötf
 (
°dîr
, "sim: ** startingÖerformance simulation **\n");

10060 #ifde‡
LOAD_PREDICTOR


10061 
	`Ârötf
 (
°dîr
, " LOAD_PREDICTOR\n");

10062 #ifde‡
COUNT_MISS_ONLY


10063 
	`Ârötf
 (
°dîr
, "COUNT_MISS_ONLY \n");

10065 #ifde‡
PREDICT_LOAD_COMM


10066 
	`Ârötf
 (
°dîr
, "PREDICT_LOAD_COMM \n");

10068 #ifde‡
GATE_L1_MISS


10069 
	`Ârötf
 (
°dîr
, "GATE_L1_MISS \n");

10071 #ifde‡
GATE_L2_MISS


10072 
	`Ârötf
 (
°dîr
, "GATE_L2_MISS\n");

10074 #ifde‡
PDG


10075 
	`Ârötf
 (
°dîr
, "PDG \n");

10078 #ifde‡
ACTIVE_N_WAY


10079 
	`Ârötf
 (
°dîr
, " ACTIVE_N_WAY\n");

10080 #ifde‡
FIXED_N_WAY


10081 
	`Ârötf
 (
°dîr
, " FIXED_N_WAY\n");

10084 #ifde‡ 
SMT_TEST


10085 
	`Ârötf
 (
°dîr
, "SMT_TEST\n");

10087 #ifde‡ 
THRD_WAY_CACHE


10088 
	`Ârötf
 (
°dîr
, " THRD_WAY_CACHE\n");

10090 #ifde‡ 
N_WAY_CACHE


10091 
	`Ârötf
 (
°dîr
, " N_WAY_CACHE: deÁu… o∆y, %d\n", 
n_way_ˇche
);

10092 #ifde‡
SET_BASED


10093 
	`Ârötf
 (
°dîr
, "SET_BASED\n");

10096 #ifde‡
PARTITIONED_LSQ


10097 
	`Ârötf
 (
°dîr
, "PARTITIONED_LSQ\n");

10099 
	`Ârötf
 (
°dîr
, "(PARTITIONED_LSQÇot defined)\n");

10101 #ifde‡
CENTRALIZED_LSQ


10102 
	`Ârötf
 (
°dîr
, "CENTRALIZED_LSQ\n");

10104 #ifde‡
DE_CENTRALIZED_LSQ


10105 
	`Ârötf
 (
°dîr
, "DE_CENTRALIZED_LSQ\n");

10106 #ifde‡
DE_CENTRALIZED_POWER_BUG


10107 
	`Ârötf
 (
°dîr
, " DE_CENTRALIZED_POWER_BUG\n");

10109 #ifde‡ 
SPLIT_LSQ


10110 
	`Ârötf
 (
°dîr
, "SPLIT_LSQ\n");

10112 #ifde‡
DISTRIBUTE_STORE


10113 
	`Ârötf
 (
°dîr
, "DISTRIBUTE_STORE\n");

10115 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


10116 
	`Ârötf
 (
°dîr
, " PWR_DE_CENTRALIZED_LSQ\n");

10119 #ifde‡
ALLOW_ANY_CLUSTER


10120 
	`Ârötf
 (
°dîr
, "ALLOW_ANY_CLUSTER\n");

10122 #ifde‡ 
CLUSTER_PRIORITY


10123 
	`Ârötf
 (
°dîr
, "CLUSTER_PRIORITY\n");

10125 #ifde‡
DISTRIBUTED_STEER


10126 
	`Ârötf
 (
°dîr
, "DISTRIBUTED_STEER\n");

10128 #ifde‡
CENTRALIZED_STEER


10129 
	`Ârötf
 (
°dîr
, "CENTRALIZED_STEER\n");

10131 #ifde‡
MINIMUM_STEER


10132 
	`Ârötf
 (
°dîr
, "MINIMUM_STEER\n");

10134 #ifde‡
INIT_CENTRALIZED_STEER


10135 
	`Ârötf
 (
°dîr
, "INIT_CENTRALIZED_STEER\n");

10137 #ifde‡
CMP_STEER


10138 
	`Ârötf
 (
°dîr
, "CMP_STEER\n");

10140 #ifde‡
INIT_CMP_STEER


10141 
	`Ârötf
 (
°dîr
, "INIT_CMP_STEER\n");

10143 #ifde‡
N_WAY_STEER


10144 
	`Ârötf
 (
°dîr
, "N_WAY_STEER ,N_WAY:deÁu… %d \n", 
n_way
);

10145 #ifde‡
PRIVATE_STEER


10146 
	`Ârötf
 (
°dîr
, " PRIVATE_STEER\n");

10148 #ifde‡
N_WAY_ADAPT


10149 
	`Ârötf
 (
°dîr
, " N_WAY_ADAPT,ADAPT_RATE %d \n", 
ADAPT_RATE
);

10150 #ifde‡
STABLE_IPC_ADAPT


10151 
	`Ârötf
 (
°dîr
, "STABLE_IPC_ADAPT\n");

10153 #ifde‡
PERIODIC_INCREASE_ADAPT


10154 
	`Ârötf
 (
°dîr
, "PERIODIC_INCREASE_ADAPT\n");

10156 #ifde‡
DOUBLE_ADAPT


10157 
	`Ârötf
 (
°dîr
, "DOUBLE_ADAPT\n");

10159 #ifde‡
OVERALL_LIMIT


10160 
	`Ârötf
 (
°dîr
, "OVERALL_LIMIT\n");

10162 #ifde‡ 
PRIVATE_STEER


10163 
	`Ârötf
 (
°dîr
, "PRIVATE_STEER\n");

10166 #ifde‡
THRD_PRIO_ADAPT


10167 
	`Ârötf
 (
°dîr
, " THRD_PRIO_ADAPT\n");

10168 #ifde‡
ADAPT_LIMIT


10169 
	`Ârötf
 (
°dîr
, " ADAPT_LIMIT\n");

10172 #ifde‡
PDG_ADAPT


10173 
	`Ârötf
 (
°dîr
, " PDG_ADAPT\n");

10175 #ifde‡
PDG_STOP_ADAPT


10176 
	`Ârötf
 (
°dîr
, " PDG_STOP_ADAPT\n");

10178 #ifde‡
PDG_THRD_ADAPT


10179 
	`Ârötf
 (
°dîr
, " PDG_THRD_ADAPT\n");

10180 #ifde‡
PDG_THRD_AGGRESSIVE


10181 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10183 #ifde‡
PDG_THRD_SOFT


10184 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10187 #ifde‡
PDG_THRD_PRIO_ADAPT


10188 
	`Ârötf
 (
°dîr
, "PDG_THRD_PRIO_ADAPT \n");

10189 #ifde‡
COMM_OPER_LIMIT


10190 
	`Ârötf
 (
°dîr
, "COMM_OPER_LIMIT COMM_OPER_RATIO %2.2f\n", 
COMM_OPER_RATIO
);

10192 #ifde‡
ADAPT_NO_PRIO


10193 
	`Ârötf
 (
°dîr
, " ADAPT_NO_PRIO\n");

10195 #ifde‡
ADAPT_NO_COMM_OPER


10196 
	`Ârötf
 (
°dîr
, " ADAPT_NO_COMM_OPER\n");

10198 #ifde‡
AVG_LIMIT


10199 
	`Ârötf
 (
°dîr
, " AVG_LIMIT\n");

10201 #ifde‡
PDG_THRD_AGGRESSIVE


10202 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10204 #ifde‡
PDG_THRD_SOFT


10205 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10208 #ifde‡
INIT_N_WAY_CENTRAL


10209 
	`Ârötf
 (
°dîr
, " INIT_N_WAY_CENTRAL\n");

10211 #ifde‡
N_WAY_BALANCE


10212 
	`Ârötf
 (
°dîr
, "N_WAY_BALANCE \n");

10214 #ifde‡
THRD_PROFILE


10215 
	`Ârötf
 (
°dîr
, " THRD_PROFILE\n");

10217 #ifde‡
N_CACHE_FIXED


10218 
	`Ârötf
 (
°dîr
, "N_CACHE_FIXED \n");

10220 #ifde‡
PRIVATE_CACHE


10221 
	`Ârötf
 (
°dîr
, " PRIVATE_CACHE\n");

10224 #ifde‡
STEER_MEM_LSQ


10225 
	`Ârötf
 (
°dîr
, "STEER_MEM_LSQ\n");

10227 #ifde‡
STEER_MEM_NEIGHBOR


10228 
	`Ârötf
 (
°dîr
, "STEER_MEM_NEIGHBOR\n");

10230 #ifde‡
STEER_OPRANDS


10231 
	`Ârötf
 (
°dîr
, "STEER_OPRANDS\n");

10233 #ifde‡ 
STEER_FU


10234 
	`Ârötf
 (
°dîr
, "STEER_FU\n");

10236 #ifde‡
SELECTIVE_DISPATCH


10237 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH\n");

10239 #ifde‡
SELECTIVE_FETCH


10240 
	`Ârötf
 (
°dîr
, "SELECTIVE_FETCH\n");

10242 #ifde‡
SELECTIVE_DISPATCH_GATE


10243 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH_GATE\n");

10244 #ifde‡
UNREADY_PRIVATE


10245 
	`Ârötf
 (
°dîr
, " UNREADY_PRIVATE \n");

10247 #ifde‡
UNREADY_COUNT


10248 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT %d\n", 
UNREADY_COUNT_LIMIT
);

10250 #ifde‡
UNREADY_COUNT_ONLY


10251 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT_ONLY \n");

10253 #ifde‡
UNREADY_CHAIN_PRIVATE


10254 
	`Ârötf
 (
°dîr
, " UNREADY_CHAIN_PRIVATE %d\n", 
UNREADY_CHAIN_LIMIT
);

10257 #ifde‡ 
RAW


10258 
	`Ârötf
 (
°dîr
, "RAW ,deÁu… RAWSIZE %d\n", 
RAWSIZE
);

10260 #ifde‡ 
RABMAP


10261 
	`Ârötf
 (
°dîr
, "RABMAP \n");

10263 #ifde‡ 
RABCOMM


10264 
	`Ârötf
 (
°dîr
, "RABCOMM \n");

10266 #ifde‡ 
ALU_MERGE


10267 
	`Ârötf
 (
°dîr
, "ALU_MERGE \n");

10269 #ifde‡
INST_TRANS_RATE


10270 
	`Ârötf
 (
°dîr
, "INST_TRANS_RATE\n");

10271 #ifde‡
TRACE_REG


10272 
	`Ârötf
 (
°dîr
, " TRACE_REG\n");

10275 #ifde‡
IGNORE_ALL_COMM_LATENCY


10276 
	`Ârötf
 (
°dîr
, "IGNORE_ALL_COMM_LATENCY\n");

10278 #ifde‡
IGNORE_MEM_COMM_LATENCY


10279 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10281 #ifde‡
COUNT_COMMIT


10282 
	`Ârötf
 (
°dîr
, "COUNT_COMMIT\n");

10284 #ifde‡
CYCLE_JUMP


10285 
	`Ârötf
 (
°dîr
, "CYCLE_JUMP \n");

10287 #ifde‡
FETCH_ONE_BLOCK


10288 
	`Ârötf
 (
°dîr
, "FETCH_ONE_BLOCK \n");

10290 #ifde‡ 
MSHR


10291 
	`Ârötf
 (
°dîr
, "MSHR , MSHRSIZE %d\n", 
MSHRSIZE
);

10293 #ifde‡
GENERIC_FU


10294 
	`Ârötf
 (
°dîr
, "GENERIC_FU\n");

10296 #ifde‡
NO_EXTRA_REG


10297 
	`Ârötf
 (
°dîr
, "NO_EXTRA_REG\n");

10299 #ifde‡
NO_CACHE_BANK


10300 
	`Ârötf
 (
°dîr
, "NO_CACHE_BANK\n");

10302 #ifde‡
NO_QFILL_CONTENTION


10303 
	`Ârötf
 (
°dîr
, "NO_QFILL_CONTENTION\n");

10305 #ifde‡
NO_BUS_CONTENTION


10306 
	`Ârötf
 (
°dîr
, " NO_BUS_CONTENTION \n");

10308 #ifde‡
EVENT_CACHE_UPDATE


10309 
	`Ârötf
 (
°dîr
, "EVENT_CACHE_UPDATE\n");

10310 #ifde‡
APPROXIMATE_LAT


10311 
	`Ârötf
 (
°dîr
, " APPROXIMATE_LAT \n");

10313 #ifde‡ 
ACURATE_LAT


10314 
	`Ârötf
 (
°dîr
, " ACURATE_LAT \n");

10316 #ifde‡ 
MOST_ACURATE_LAT


10317 
	`Ârötf
 (
°dîr
, " MOST_ACURATE_LAT \n");

10320 #ifde‡
PORT_PER_BANK


10321 
	`Ârötf
 (
°dîr
, "PORT_PER_BANK\n");

10323 #ifde‡ 
LINE_INTERLEAVED


10324 
	`Ârötf
 (
°dîr
, "LINE_INTERLEAVED\n");

10326 #ifde‡ 
PWR_CLUSTER


10327 
	`Ârötf
 (
°dîr
, "PWR_CLUSTER,ISSUE_PER_CLUSTER \n");

10329 #ifde‡ 
CHECKS


10330 
	`Ârötf
 (
°dîr
, "CHECKS\n");

10332 #ifde‡ 
PWR__SMT_RR


10333 
	`Ârötf
 (
°dîr
, "PWR__SMT_RR\n");

10335 
	`Ârötf
 (
°dîr
, "REMOVE_ILP = %d\n", (Ë
REMOVE_ILP
);

10336 
	`Ârötf
 (
°dîr
, "HOPTIME = %d\n", (Ë
HOPTIME
);

10337 #ifde‡
CENTRALIZED_CACHE_BANK


10338 
	`Ârötf
 (
°dîr
, "CENTRALIZED_CACHE_BANK\n");

10340 #ifde‡
IGNORE_MEM_COMM_LATENCY


10341 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10343 
	`Ârötf
 (
°dîr
, "DO_DYNAMIC_ADAPTATION = %d\n", (Ë
DO_DYNAMIC_ADAPTATION
);

10344 
	`Ârötf
 (
°dîr
, "N_WAY = %d\n", 
n_way
);

10345 
	`Ârötf
 (
°dîr
, "n_way_ˇchê%d\n", 
n_way_ˇche
);

10346 #ifde‡
OPTICAL_FE_LINK


10347 
	`Ârötf
 (
°dîr
, "OPTICAL_FE_LINK\n");

10349 #ifde‡
MONOLETHIC_MACHINE


10350 
	`Ârötf
 (
°dîr
, "MONOLETHIC_MACHINE\n");

10353 #ifde‡
TOKENB


10354 
	`Ârötf
 (
°dîr
, "TOKENB\n");

10358 *
sim_°r_dump
;

10359 *
sim_dump
 = 
sim_°r_dump
;

10360 
°rFûeName
[256];

10361 i‡(!
sim_dump
)

10363 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

10364 
	`exô
 (1);

10367 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

10368 
	`°rˇt
 (
°rFûeName
, ".trc");

10369 
Â_åa˚
 = 
	`f›í
 (
°rFûeName
, "w");

10370 if(!
Â_åa˚
Ë
	`∑nic
("CouldÇot openÅrace file");

10373 #ifdef 
EDA


10374 
	`SèπSkñë⁄Ród
 (0);

10376 
	`Æloˇã_‰ì_evít_li°
();

10379 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10381 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10382 
cuºít
->
„tch_¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
;

10383 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

10385 
cuºít
->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_PC
 -  (
md_ö°_t
);

10386 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.ªgs_PC -  (
md_ö°_t
);

10387 #ifde‡
PDG


10388 
cuºít
->
a˘ive
 = 1;

10393 
	`bö_öô
 ();

10394 
	`ˇche_öô
 ();

10395 #ifde‡ 
STREAM_PREFETCHER


10396 
	`öô_•
 ();

10398 #ifde‡ 
L1_STREAM_PREFETCHER


10399 
	`l1öô_•
 ();

10402 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

10404 
di•_time
[
i
] = 0;

10407 
i
 = 0; i < 
numc⁄ãxts
; i++)

10409 
	`ªg_öô
 (
i
);

10410 
	`b¥ed_öô
 (
i
);

10413 #ifde‡
REG_RENAME_CONFIGUARE


10414 
	`Ârötf
 (
°dîr
, "TŸÆ Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

10417 
i
 = 0; i < 
CLUSTERS
; i++)

10419 
num_°‹eq
[
i
] = 0;

10420 
max_°‹eq
[
i
] = 0;

10423 
mm
 = 0; mm <
NUMPHASES
; mm++)

10425 
num_picks
[
mm
] = 0;

10428 i‡(
CENTRAL_CACHE
)

10430 
a˘uÆ_ˇchï‹ts
 = 
CACHEPORTS
;

10431 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10435 
	`ˇche_ch™ge_c⁄fig
 (
SMALLEST_CONFIG
);

10436 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10437 
a˘uÆ_ˇchï‹ts
 = (
CACHEPORTS
 * 
a˘uÆ_˛u°îs
Ë/ 
CLUSTERS
;

10440 
πhªsh
 = 
ö¢_öãrvÆ
 / 100;

10441 
bπhªsh
 = 
ö¢_öãrvÆ
 / 100;

10442 
m°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10443 
im°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10444 
cy˘hªsh
 = 
ö¢_öãrvÆ
 / 100;

10445 
∫oi£
 = 
ö¢_öãrvÆ
 / 20;

10446 
b∫oi£
 = 
ö¢_öãrvÆ
 / 50;

10447 
m¢oi£
 = 
ö¢_öãrvÆ
 / 100;

10448 
im¢oi£
 = 
ö¢_öãrvÆ
 / 200;

10450 #ifdef 
COLLECT_STAT_STARTUP


10451 
a˘uÆPro˚ss
 = 1;

10453 
a˘uÆPro˚ss
 = 
numc⁄ãxts
;

10455 
execuãMaxIn¢
 = 
max_ö°s
;

10461 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10463 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10464 
cuºít
->
a˘ive_this_cy˛e
 = 1;

10467 #ifdef 
SMD_USE_WRITE_BUF


10469 
thªadid
 = 0;Åhªadid < 
MAXTHREADS
;Åhreadid++)

10471 
i
 = 0; i < 
SMD_L1_WBUF_SIZE
; i++)

10473 
m_L1WBuf
[
thªadid
][
i
].
PC
 = 0;

10474 
m_L1WBuf
[
thªadid
][
i
].
lsqId
 = 0;

10475 
m_L1WBuf
[
thªadid
][
i
].
robId
 = 0;

10476 
m_L1WBuf
[
thªadid
][
i
].
robExId
 = 0;

10477 
m_L1WBuf
[
thªadid
][
i
].
addr
 = 0;

10478 
m_L1WBuf
[
thªadid
][
i
].
›
 = 0;

10479 
m_L1WBuf
[
thªadid
][
i
].
œt
 = 0;

10480 
m_L1WBuf
[
thªadid
][
i
].
sim_num_ö¢
 = 0;

10481 
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
 = 0;

10482 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 0;

10483 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 0;

10484 
m_L1WBuf
[
thªadid
][
i
].
íåyTime
 = 0;

10485 
m_L1WBuf
[
thªadid
][
i
].
wrôeVÆue
 = 0;

10486 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 0;

10488 
m_L1WBufC¡
[
thªadid
] = 0;

10489 
m_L1WBuf_hód
[
thªadid
] = 0;

10490 
m_L1WBuf_èû
[
thªadid
] = 0;

10493 #ifde‡
DIRECTORY


10494 #ifde‡
MC


10495 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

10496 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10497 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10498 
	`maöP›√t
();

10499 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

10501 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10502 
	`maöP›√t
();

10505 #ifde‡
OPTICAL_INTERCONNECT


10506 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10508 #ifde‡
POPNET


10509 
	`maöP›√t
();

10517 #ifdef 
DCACHE_MSHR


10518 
i
 = 0; i < 
numc⁄ãxts
; i++)

10519 
	`‰ìMSHR
(
ˇche_dl1
[
i
]->
mshr
);

10520 
	`‰ìL2MSHR
(
ˇche_dl2
->
mshr
);

10523 #ifde‡
POWER_ACCESS_STAT


10524 
lsq_¥eg_ac˚ss_cou¡
 +
lsq_¥eg_ac˚ss
;

10525 
lsq_wakeup_ac˚ss_cou¡
 +
lsq_wakeup_ac˚ss
;

10528 #ifdef 
EDA


10529 
	`dl0_˛ónup
 ();

10534 
	`±ø˚_check_a˘ive
 (
thec⁄ãxts
[0]->
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

10536 
	`±ø˚_√wcy˛e
 (
sim_cy˛e
);

10538 
i
 = 0; i<
numc⁄ãxts
; i++)

10542 
commô_Êag
[
i
] ++;

10545 
	`ruu_commô
 ();

10547 #ifde‡
SMD_USE_WRITE_BUF


10548 
	`ruu_ªÀa£_wrôebuf„r
 ();

10549 
	`ruu_wrôe_‰om_Wrôebuf„r
 ();

10553 
	`ruu_ªÀa£_fu
 ();

10555 
	`ruu_wrôeback
 ();

10558 i‡(!
bugcom∑t_mode
)

10560 
	`lsq_ª‰esh
 ();

10561 
	`ruu_issue
 ();

10564 
ggg
;

10566 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10568 
di•©ch_d⁄e
[
ggg
] = 0;

10569 i‡(
thec⁄ãxts
[
ggg
]->
a˘ive_this_cy˛e
)

10571 
di•©ch_d⁄e
[
ggg
] = 
di•©ched
 = 
	`ruu_di•©ch
 (ggg);

10575 i‡(!
ÆlF‹ked
)

10577 #ifdef 
COLLECT_STAT_STARTUP


10578 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10580 
cﬁÀ˘SètSt›
[
ggg
] = 0;

10583 
cﬁÀ˘SètB¨rõr
 = 0;

10584 
ÆlF‹ked
 = 1;

10586 
	`öôP¨ÆÀlSimuœti⁄
 ();

10587 
cﬁÀ˘_°©s
 = 1;

10592 i‡(
ÊushImpSèts
)

10594 
ÊushImpSèts
 = 0;

10595 
cﬁÀ˘_°©s
 = 1;

10596 
sim_num_ö¢
 = 0;

10597 
ªÆSimCy˛e
 = 0;

10599 
i
 = 0; i < 
MAXTHREADS
; i++)

10601 
m_sqLQFuŒ
[
i
] = 0;

10602 
m_sqSQFuŒ
[
i
] = 0;

10603 
m_sqNumLdRïœy
[
i
] = 0;

10604 
ld°Reje˘i⁄Cou¡
[
i
] = 0;

10605 
£qC⁄sRïœy
[
i
] = 0;

10606 
£qC⁄sIn¢Rïœy
[
i
] = 0;

10609 
övÆid©i⁄_ª∂ay
[
i
] = 0;

10611 
tŸÆRUUsize
[
i
] = 
tŸÆLQsize
[i] = 
tŸÆSQsize
[i] = 0;

10613 #ifde‡
RELAXED_CONSISTENCY


10614 
lﬂdLﬂdRïœyCou¡
[
i
] = 0;

10617 
m_sqPª„tchC¡
 = 0;

10620 i‡(
timeToRëu∫
)

10622 
	`f˛o£
 (
Â_åa˚
);

10624 
i
 = 0; i < 
numc⁄ãxts
; i++)

10625 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10626 
	`Ârötf
(
°dîr
,"[INFO 0]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

10630 
i
 = 0; i < 
numc⁄ãxts
; i++)

10632 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10634 
tŸÆRUUsize
[
i
] +
thec⁄ãxts
[i]->
RUU_num
;

10635 
avgRUUsize
[
i
] = (1.0 * 
tŸÆRUUsize
[i]Ë/ 
ªÆSimCy˛e
;

10637 
tŸÆLQsize
[
i
] +
thec⁄ãxts
[i]->
m_shLQNum
;

10638 
avgLQsize
[
i
] = (1.0 * 
tŸÆLQsize
[i]Ë/ 
ªÆSimCy˛e
;

10640 #ifdef 
SMD_USE_WRITE_BUF


10641 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
 + 
m_L1WBufC¡
[i];

10643 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
;

10645 
avgSQsize
[
i
] = (1.0 * 
tŸÆSQsize
[i]Ë/ 
ªÆSimCy˛e
;

10650 #ifde‡ 
CHECK_FETCH_QUEUE


10651 
	`check_„tch_queue
 ();

10654 i‡(
bugcom∑t_mode
)

10658 
	`lsq_ª‰esh
 ();

10662 
	`ruu_issue
 ();

10665 
	`ruu_„tch
 ();

10667 #ifde‡
DIRECTORY


10668 
	`dú_fifo_dequeue
();

10669 
	`dú_evítq_√xãvít
();

10670 #ifde‡
MC


10671 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

10672 
	`dúe˘RunSim
(
sim_cy˛e
);

10673 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10674 
	`p›√tRunSim
(
sim_cy˛e
);

10675 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

10677 
	`dúe˘RunSim
(
sim_cy˛e
);

10678 
	`p›√tRunSim
(
sim_cy˛e
);

10681 #ifde‡
OPTICAL_INTERCONNECT


10682 
	`dúe˘RunSim
(
sim_cy˛e
);

10684 #ifde‡
POPNET


10685 
	`p›√tRunSim
(
sim_cy˛e
);

10690 #ifde‡
MEM_MOD


10691 
f
, 
j
;

10692 
f
=0; f<8; f++)

10694 if(
mem_p‹t_œt
[
f
] != 0)

10695 
mem_p‹t_œt
[
f
] --;

10698 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "HYBRID"))

10700 
f
 = 0; f< 100; f++)

10701 
j
 = 0; j< 100; j++)

10702 if(
lök_£r_œt
[
f
][
j
] > 0)

10703 
lök_£r_œt
[
f
][
j
] --;

10706 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10708 
	`upd©e_powî_°©s
(
thec⁄ãxts
[0]->
powî
, 
thªadid
,Åhecontexts[threadid]);

10710 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10711 i‡(
cuºít
->
ruu_„tch_issue_dñay
)

10712 
cuºít
->
ruu_„tch_issue_dñay
--;

10714 
	`˛ór_ac˚ss_°©s
();

10720 #ifde‡ 
CHECKS


10721 
	`check_ªg
 ();

10724 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_cy˛e
 >
œ°_hŸ•Ÿ_cy˛e
 + 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
)

10726 
	`upd©e_hŸ•Ÿ_°©s
 (
sim_cy˛e
 - 
œ°_hŸ•Ÿ_cy˛e
);

10727 
œ°_hŸ•Ÿ_cy˛e
 = 
sim_cy˛e
;

10730 
	`check_fu_busy
 ();

10731 
â
;

10733 i‡(!
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
)

10735 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10737 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10738 #ifdef 
EDA


10739 i‡(
cuºít
->
ma°îid
 =0 && ((Ë(cuºít->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

10741 i‡(((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

10744 
	`Ârötf
 (
°dîr
, "Thªad %d ha†ex˚eded max_ö°s; kûlögáŒÅhªads.\n", 
thªadid
);

10745 
kûœŒ
 = 1;

10750 
thªadid
 = 0, 
thªad_°›
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10752 
tmp
 = 0, 
tid
;

10754 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10756 #ifdef 
EDA


10757 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && 
cuºít
->
ma°îid
 =0 && ((Ë(cuºít->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

10759 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
 && ((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

10762 
cuºít
->
föish_cy˛e
 = (Ë(
sim_cy˛e
 - 
cy˛echeck
);

10763 
cuºít
->
ru¬ög
 = 0;

10764 
°›≥d_num_thªads
++;

10766 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
 - 
°›≥d_num_thªads
;

10768 
thªad_°›
 = 1;

10769 
	`Ârötf
 (
°dîr
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

10770 
	`Ârötf
 (
°dîr
, "IPC_∑tül%d,≥∏thªad %4.3f, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

10772 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_hŸ•Ÿout_fd
 !
°dîr
)

10774 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

10777 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10779 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10780 i‡(
cuºít
->
föish_cy˛e
)

10781 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(cuºít->
föish_cy˛e
 - 
cy˛echeck
));

10783 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

10785 
	`Ârötf
 (
°dîr
, "\n");

10786 
	`Ârötf
 (
°dîr
, "num_ö¢_∑tül%d,≥∏thªad %lu, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
));

10788 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10790 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10791 i‡(
cuºít
->
föish_cy˛e
)

10792 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

10794 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

10796 
	`Ârötf
 (
°dîr
, "\n");

10797 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

10799 
	`Ârötf
 (
°dîr
, "********All finish simulation done**********\n");

10800 
	`Ârötf
 (
°dîr
, "föish_cy˛ê%lu,ÖîÅhªad , ", (Ë
sim_cy˛e
);

10801 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10803 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10804 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
föish_cy˛e
 - 
WARMUP
));

10806 
	`Ârötf
 (
°dîr
, "\n");

10810 
now_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

10812 i‡(!
sim_cy˛e
)

10813 
¥öt_time
 = 
now_time
;

10814 
sim_ñ≠£d_£c
 = 0;

10816 i‡((Ë
sim_num_ö¢
 && ((
°›≥d_num_thªads
 =
numc⁄ãxts
Ë|| 
thªad_°›
))

10818 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

10820 
sim_cy˛e
 -
w¨mupEndCy˛e
;

10821 
	`Ârötf
(
°dîr
,"[INFO 1]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

10826 
	#PERIOD
 100000

	)

10827 
	#INTERVAL
 10000

	)

10828 
	#NUM_CONFIG
 3

	)

10829 #i‡
DO_DYNAMIC_ADAPTATION


10831 i‡(
mè_maxthªads
 == 1)

10833 i‡(((
sim_num_ö¢
 % 
PERIOD
Ë>0Ë&& ((sim_num_ö¢ % PERIODË< 
NUM_CONFIG
 * 
INTERVAL
))

10834 
	`≥riodic_ad≠èti⁄
 ();

10838 
	#PRINT_STATISTICS
 0

	)

10839 #i‡
PRINT_STATISTICS


10840 
	`ch™geCacheC⁄fig
 ();

10843 #ifde‡
INTERVAL_BASED


10844 i‡(!((Ë
sim_cy˛e
 % 
ADAPT_INTERVAL
) && (() sim_cycle))

10847 #ifde‡ 
EXAMIN_N_WAY_ADAPT


10848 
	`upd©e_examö_n_limô
 ();

10850 #ifde‡ 
N_WAY_ADAPT


10851 
	`upd©e_n_limô
 ();

10853 #ifde‡
THRD_PRIO_ADAPT


10854 
	`¥i‹ôy_n_way
 ();

10856 #ifde‡
PDG_THRD_ADAPT


10857 
	`pdg_thrd_n_way
 ();

10859 #ifde‡
PDG_THRD_PRIO_ADAPT


10860 
	`pdg_¥i‹ôy_n_way
 ();

10862 #ifde‡
PDG_ADAPT


10863 
	`pdg_n_way
 ();

10865 #ifde‡
N_WAY_CACHE_ADAPT


10866 
	`n_way_ˇche_ad≠t
 ();

10868 #ifde‡
INTERVAL_BASED


10872 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

10873 
	`busFªe
 ();

10875 
sim_cy˛e
++;

10877 #ifde‡
DIRECTORY


10878 
	`ª£t_p‹ts
();

10882 #ifde‡
SEQUENTIAL_CONSISTENCY


10883 
i
 = 0; i < 
numc⁄ãxts
; i++)

10885 i‡(
övÆid©i⁄SèŒ
[
i
])

10886 
övÆid©i⁄SèŒ
[
i
]--;

10887 i‡(
commôSèŒ
[
i
])

10888 
commôSèŒ
[
i
]--;

10891 
ªÆSimCy˛e
++;

10892 
i
 = 0; i < 
numc⁄ãxts
; i++)

10894 i‡(!
ÆlF‹ked
)

10896 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (—hec⁄ãxts[i]->
¶ïtAt
 + 1000Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
))

10898 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

10899 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

10904 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (thec⁄ãxts[i]->
¶ïtAt
 + 100 + (
	`øndom
 (Ë% 20Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
))

10906 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

10907 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

10908 i‡(
cﬁÀ˘_°©s
)

10909 
quõn£Wakeup
[
i
]++;

10914 i‡(((!
max_b¨rõr
 && (
puª_num_ö¢
 > 
execuãMaxIn¢
)Ë|| (max_b¨rõ∏&& 
TŸÆB¨rõrs
 >max_b¨rõr)Ë&& 
cﬁÀ˘_°©s
)

10916 
i
 = 0; i < 
numc⁄ãxts
; i++)

10917 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10919 
	`Ârötf
(
°dîr
,"[INFO 2]: sim_num_ö¢=%Œu, b¨rõrs=%d", 
puª_num_ö¢
, 
TŸÆB¨rõrs
);

10922 i‡(
unPrötLimô
 < 
STATUS_NUM
 && (
puª_num_ö¢
 >(unPrötLimô * (
max_ö°s
 / STATUS_NUM))))

10924 #ifde‡
MC


10925 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

10927 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

10928 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

10930 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10932 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
);

10933 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\tmëa_∑ckës%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
, 
MëaPackës_1
);

10935 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

10937 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

10938 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

10941 #ifde‡
POPNET


10942 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
);

10943 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\tmëa_∑ckës%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
, 
MëaPackës_1
);

10945 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

10946 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

10949 
	`fÊush
 (
°dîr
);

10950 
	`fÊush
 (
°dout
);

10951 
	`¥ötf
("b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

10952 
	`Ârötf
(
°dîr
, "b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

10953 
	`fÊush
 (
°dîr
);

10954 
	`fÊush
 (
°dout
);

10955 
unPrötLimô
++;

10956 
globÆ_d©a_∑ckës_gíî©i⁄
 = 0;

10957 
D©aPackës_1
 = 0;

10958 
MëaPackës_1
 = 0;

10965 
	`gë_‰ì_ªg
 (
Ãegnum
, 
thªadid
)

10967 
ãmpvÆ
;

10968 
li°ñt
 *
ãmp
;

10970 
c⁄ãxt
 *
cuºít
;

10972 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10974 i‡((
Ãegnum
 < 1) || (lregnum > 62))

10976 i‡(
Ãegnum
 < 32)

10978 i‡(!
i‰ìli°_hód
[
thªadid
])

10980 
	`¥ötf
 ("Num o‡IREG=%d\n", 
úegfûe
);

10981 
	`Ârötf
 (
°dîr
, "Num o‡IREG=%d\n", 
úegfûe
);

10982 
	`∑nic
 ("Out ofÑegisters?!");

10985 
ãmp
 = 
i‰ìli°_hód
[
thªadid
];

10986 
ãmpvÆ
 = 
ãmp
->
¥eg
;

10987 
i‰ìli°_hód
[
thªadid
] = i‰ìli°_hód[thªadid]->
√xt
;

10988 i‡(!
i‰ìli°_hód
[
thªadid
])

10989 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

10990 i‡(
i‰ìli°_hód
[
thªadid
])

10991 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

10992 
	`‰ì
 (
ãmp
);

10993 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

10994 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

10995 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

10996 #ifde‡ 
REMOVE_REG_COUNT


10997 
úegfûe
++;

10999 
úegfûe_˛
[
thªadid
]++;

11000  
ãmpvÆ
;

11004 i‡(!
f‰ìli°_hód
[
thªadid
])

11006 
	`¥ötf
 ("Num o‡FREG=%d\n", 
‰egfûe
);

11007 
	`Ârötf
 (
°dîr
, "Num o‡FREG=%d\n", 
‰egfûe
);

11008 
	`∑nic
 ("Out ofÑegisters?!");

11011 
ãmp
 = 
f‰ìli°_hód
[
thªadid
];

11012 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11013 
f‰ìli°_hód
[
thªadid
] = f‰ìli°_hód[thªadid]->
√xt
;

11014 i‡(!
f‰ìli°_hód
[
thªadid
])

11015 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11016 i‡(
f‰ìli°_hód
[
thªadid
])

11017 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11018 
	`‰ì
 (
ãmp
);

11019 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11020 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11021 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11022 #ifde‡ 
REMOVE_REG_COUNT


11023 
‰egfûe
++;

11025 
‰egfûe_˛
[
thªadid
]++;

11026  
ãmpvÆ
;

11032 
	`‰ìli°_ö£π
 (
¥egnum
, 
thªadid
)

11034 
li°ñt
 *
ñt
;

11035 
li°ñt
 *
p
;

11036 
li°ñt
 *
q
;

11038 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11041 i‡(
thªadid
 == 0)

11043 
p
 = 
i‰ìli°_hód
[
thªadid
];

11044 
p
)

11046 
q
 = 
p
;

11047 
p
 =Ö->
√xt
;

11052 i‡(!
¥egnum
)

11054 i‡(
¥egnum
 <
IPREG_size
)

11056 #ifde‡ 
REMOVE_REG_COUNT


11057 
úegfûe
--;

11059 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11060 
ñt
->
¥eg
 = 
¥egnum
;

11061 i‡(
i‰ìli°_èû
[
thªadid
])

11063 
p
 = 
i‰ìli°_hód
[
thªadid
];

11064 
q
 = 
NULL
;

11065 
p
 && (p->
¥eg
 < 
¥egnum
))

11067 
q
 = 
p
;

11068 
p
 =Ö->
√xt
;

11070 i‡(!
p
 || !
SORT
)

11072 
i‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11073 
ñt
->
¥ev
 = 
i‰ìli°_èû
[
thªadid
];

11074 
ñt
->
√xt
 = 
NULL
;

11075 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11077 i‡(
q
)

11079 
q
->
√xt
 = 
ñt
;

11080 
ñt
->
¥ev
 = 
q
;

11081 
ñt
->
√xt
 = 
p
;

11082 
p
->
¥ev
 = 
ñt
;

11086 
ñt
->
√xt
 = 
i‰ìli°_hód
[
thªadid
];

11087 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11088 
ñt
->
¥ev
 = 
NULL
;

11089 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11094 
ñt
->
√xt
 = 
NULL
;

11095 
ñt
->
¥ev
 = 
NULL
;

11096 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11097 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11099 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11100 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11101 
úegfûe_˛
[
thªadid
]--;

11105 #ifde‡ 
REMOVE_REG_COUNT


11106 
‰egfûe
--;

11108 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11109 
ñt
->
¥eg
 = 
¥egnum
;

11110 i‡(
f‰ìli°_èû
[
thªadid
])

11112 
p
 = 
f‰ìli°_hód
[
thªadid
];

11113 
q
 = 
NULL
;

11114 
p
 && (p->
¥eg
 < 
¥egnum
))

11116 
q
 = 
p
;

11117 
p
 =Ö->
√xt
;

11119 i‡(!
p
 || !
SORT
)

11121 
f‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11122 
ñt
->
¥ev
 = 
f‰ìli°_èû
[
thªadid
];

11123 
ñt
->
√xt
 = 
NULL
;

11124 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11126 i‡(
q
)

11128 
q
->
√xt
 = 
ñt
;

11129 
ñt
->
¥ev
 = 
q
;

11130 
ñt
->
√xt
 = 
p
;

11131 
p
->
¥ev
 = 
ñt
;

11135 
ñt
->
√xt
 = 
f‰ìli°_hód
[
thªadid
];

11136 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11137 
ñt
->
¥ev
 = 
NULL
;

11138 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11143 
ñt
->
√xt
 = 
NULL
;

11144 
ñt
->
¥ev
 = 
NULL
;

11145 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11146 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11148 
‰egfûe_˛
[
thªadid
]--;

11149 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11150 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11155 
	`ªcFªeRegLi°
 (
thªadid
)

11157 
li°ñt
 *
p
;

11158 
li°ñt
 *
ãmp
;

11159 
cou¡
 = 0;

11160 
i
;

11162 
p
 = 
i‰ìli°_hód
[
thªadid
];

11163 i‡(
p
)

11165 
cou¡
++;

11166 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11168 
cou¡
++;

11169 
ãmp
 = 
p
;

11170 
p
 =Ö->
√xt
;

11171 
	`‰ì
 (
ãmp
);

11175 
p
 = 
f‰ìli°_hód
[
thªadid
];

11176 i‡(
p
)

11178 
cou¡
++;

11179 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11181 
cou¡
++;

11182 
ãmp
 = 
p
;

11183 
p
 =Ö->
√xt
;

11184 
	`‰ì
 (
ãmp
);

11188 
	`ªg_öô
 (
thªadid
);

11192 
	`numFªeReg
 (
thªadid
)

11194 
li°ñt
 *
p
;

11195 
cou¡
 = 0;

11197 
p
 = 
i‰ìli°_hód
[
thªadid
];

11198 i‡(
p
)

11200 
cou¡
++;

11201 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11203 
cou¡
++;

11204 
p
 =Ö->
√xt
;

11208 
p
 = 
f‰ìli°_hód
[
thªadid
];

11209 i‡(
p
)

11211 
cou¡
++;

11212 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11214 
cou¡
++;

11215 
p
 =Ö->
√xt
;

11218  
cou¡
;

11223 
	`c›y_to
 (
thªadid
)

11225 
i
;

11227 
c⁄ãxt
 *
cuºít
;

11229 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11231 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11233 
cuºít
->
…›m≠_chk
[
i
] = cuºít->
…›m≠
[i];

11235 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11237 i‡(
cuºít
->
±ﬁm≠
[
i
].
thªadid
 ==Åhreadid)

11239 
cuºít
->
±ﬁm≠_chk
[
i
].
Ãeg
 = cuºít->
±ﬁm≠
[i].lreg;

11240 
cuºít
->
±ﬁm≠_chk
[
i
].
thªadid
 = cuºít->
±ﬁm≠
[i].threadid;

11247 
	`c›y_‰om
 (
thªadid
)

11249 
i
;

11251 
c⁄ãxt
 *
cuºít
;

11253 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11255 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11257 
cuºít
->
…›m≠
[
i
] = cuºít->
…›m≠_chk
[i];

11263 
	`b¥ed_öô
 (
i
)

11266 i‡(
ruu_bønch_≥«…y
 < 1)

11267 
	`Áèl
 ("mis-predictionÖenalty must beátÜeast 1 cycle");

11269 i‡(
„tch_•ìd
 != 1)

11270 
	`Áèl
 ("front-end speed must be 1 for SMT version of simulator");

11272 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

11274 i‡(
bimod_√…
 != 1)

11275 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11276 i‡(
btb_√…
 != 2)

11277 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11278 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

11279  
bimod_c⁄fig
[0],

11285  
btb_c⁄fig
[0],

11286  
btb_c⁄fig
[1],

11287  
øs_size
);

11289 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

11292 i‡(
twﬁev_√…
 != 4)

11293 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11294 i‡(
btb_√…
 != 2)

11295 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11297 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

11299  
twﬁev_c⁄fig
[0],

11300  
twﬁev_c⁄fig
[1],

11302  
twﬁev_c⁄fig
[2],

11303  
twﬁev_c⁄fig
[3],

11304  
btb_c⁄fig
[0],

11305  
btb_c⁄fig
[1],

11306  
øs_size
);

11308 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

11311 i‡(
twﬁev_√…
 != 4)

11312 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11313 i‡(
bimod_√…
 != 1)

11314 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11315 i‡(
comb_√…
 != 1)

11316 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

11317 i‡(
btb_√…
 != 2)

11318 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11320 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

11321  
bimod_c⁄fig
[0],

11322  
twﬁev_c⁄fig
[0],

11323  
twﬁev_c⁄fig
[1],

11324  
comb_c⁄fig
[0],

11325  
twﬁev_c⁄fig
[2],

11326  
twﬁev_c⁄fig
[3],

11327  
btb_c⁄fig
[0],

11328  
btb_c⁄fig
[1],

11329  
øs_size
);

11332 i‡(!
b¥ed_•ec_›t
)

11333 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

11334 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "ID"))

11335 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

11336 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "WB"))

11337 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

11339 
	`Áèl
 ("bad speculative update stage specifier, use {ID|WB}");

11341 
	`b¥ed_ªg_°©s
 (
thec⁄ãxts
[
i
]->
¥ed
, 
sim_sdb
, i);

11346 
	`ªg_öô
 (
thªadid
)

11348 
i
;

11350 
c⁄ãxt
 *
cuºít
;

11352 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11354 
i‰ìli°_hód
[
thªadid
] = 
NULL
;

11355 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11356 
f‰ìli°_hód
[
thªadid
] = 
NULL
;

11357 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11359 #ifde‡ 
REMOVE_REG_COUNT


11362 
úegfûe
 = 
IPREG_size
;

11363 
‰egfûe
 = 
FPREG_size
;

11365 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11367 
	`‰ìli°_ö£π
 (
i
, 
thªadid
);

11368 
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 = 0;

11369 
cuºít
->
±ﬁm≠
[
i
].
thªadid
 = -1;

11371 
úegfûe_˛
[
thªadid
] = 0;

11372 
‰egfûe_˛
[
thªadid
] = 0;

11373 #i‚de‡ 
NO_REG_INIT


11375 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11376 
i
 = 0; i < 63; i++)

11378 
cuºít
->
…›m≠
[
i
] = 
	`gë_‰ì_ªg
 (i, 
thªadid
);

11380 
i
 = 63; i < 
MD_TOTAL_REGS
; i++)

11381 
cuºít
->
…›m≠
[
i
] = 0;

11388 
	`ªg_cou¡
 ()

11391 
úegfûe
 = 0;

11392 
‰egfûe
 = 0;

11393 
i
, 
j
;

11394 
c⁄ãxt
 *
cuºít
;

11396 
j
 = 0; j < 
numc⁄ãxts
; j++)

11398 
cuºít
 = 
thec⁄ãxts
[
j
];

11399 
i
 = 1; i < 
p_tŸÆ_ªgs
; i++)

11401 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 0Ë&& (cuºít->±ﬁm≠[i].Ãeg < 32Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11403 
úegfûe
++;

11405 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 31Ë&& (cuºít->±ﬁm≠[i].Ãeg < 63Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11407 
‰egfûe
++;

11411 i‡(
úegfûe
 < 31)

11412 
	`∑nic
 ("phys iregfileÜessÅhan 31");

11413 i‡(
‰egfûe
 < 31)

11414 
	`∑nic
 ("phys fregfileÜessÅhan 31");

11419 
	`öôP¨ÆÀlSimuœti⁄
 ()

11421 
˙t
, 
cx
, 
j
;

11422 
x
, 
y
, 
z
, 
max
;

11424 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

11425 
thec⁄ãxts
[
˙t
]->
°¨t_cy˛e
 = 
sim_cy˛e
;

11427 
cx
 = 0; cx < 
numc⁄ãxts
; cx++)

11429 
thec⁄ãxts
[
cx
]->
„tch_num
 = 0;

11430 
thec⁄ãxts
[
cx
]->
„tch_èû
 =Åhec⁄ãxts[cx]->
„tch_hód
 = 0;

11431 
thec⁄ãxts
[
cx
]->
„tch_¥ed_PC
 =Åhec⁄ãxts[cx]->
„tch_ªgs_PC
 =Åhec⁄ãxts[cx]->
ªgs
.
ªgs_NPC
;

11432 
cﬁÀ˘SètSt›
[
cx
] = 0;

11433 
thec⁄ãxts
[
cx
]->
sim_num_ö¢
 = 0;

11435 
cﬁÀ˘SètB¨rõr
 = 0;

11436 
ÆlF‹ked
 = 1;

11483 
	`checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
)

11486 
RUU_°©i⁄
 *
rs
 = &
cuºít
->
LSQ
[
i
];

11487 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

11489 i‡(
i
 !
cuºít
->
LSQ_hód
)

11493 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

11495 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
Ë&& (
	`STORE_ADDR_READY
 (&cuºít->LSQ[i])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->threadid))

11497 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

11498 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

11499 
md_addr_t
 
qwAddr1
 = 
rs
->
addr
 & ~(
nW
 - 1);

11500 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

11502 i‡(
qwAddr1
 =
qwAddr2
)

11504 i‡(
cuºít
->
LSQ
[
i
].
issued
)

11510 i‡(
i
 =
cuºít
->
LSQ_hód
)

11520 
	`£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
)

11522 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11523 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
, 
j
, 
°‹eCou¡
 = 
m_L1WBufC¡
[
thªadid
];

11524 
wb_mem_ít
 *
lök
;

11526 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

11527 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

11528 
shi·_right
 = 0;

11531 
£qC⁄sRïœy
[
cuºít
->
a˘uÆid
]++;

11533 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

11534 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

11535 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

11536 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

11538 i‡(!
cuºít
->
RUU_num
)

11539 
	`∑nic
 ("empty RUU");

11541 
RUU_ödex
 !
ª∂ay_ödex
)

11544 i‡(!
ãmp_RUU_num
)

11545 
	`∑nic
 ("empty RUU");

11548 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

11550 i‡(
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& 
F_STORE
)

11552 
width
 = 
	`GëMemAccWidth
(
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

11554 i‡((
width
 & (width - 1)Ë=0 && (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & (width - 1)Ë=0 && !cuºít->LSQ[LSQ_ödex].
isPª„tch
)

11555 
°‹eCou¡
++;

11557 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

11558 
ãmp_LSQ_num
--;

11560 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11561 
ãmp_RUU_num
--;

11564 
RUU_ödex
 !
cuºít
->
RUU_èû
)

11567 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

11569 
cuºít
->
iissueq_thrd
--;

11570 
iissueq
--;

11571 
iissueq_˛
[
cuºít
->
id
]--;

11572 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

11574 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

11576 
cuºít
->
fissueq_thrd
--;

11577 
fissueq
--;

11578 
fissueq_˛
[
cuºít
->
id
]--;

11579 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

11582 
cuºít
->
sim_num_ö¢
--;

11583 
sim_num_ö¢
--;

11584 
£qC⁄sIn¢Rïœy
[
cuºít
->
a˘uÆid
]++;

11586 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

11588 i‡(!
ãmp_LSQ_num
)

11589 
	`∑nic
 ("RUUánd LSQ out of sync");

11591 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

11593 
cuºít
->
iissueq_thrd
--;

11594 
iissueq
--;

11595 
iissueq_˛
[
cuºít
->
id
]--;

11596 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

11598 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

11600 
cuºít
->
fissueq_thrd
--;

11601 
fissueq
--;

11602 
fissueq_˛
[
cuºít
->
id
]--;

11603 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

11606 
i
 = 0; i < 
MAX_ODEPS
; i++)

11608 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

11609 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

11612 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
 || cuºít->LSQ[LSQ_ödex].› =
STQ_C
)

11614 
cuºít
->
waôF‹STLC
 = 0;

11616 #ifde‡
DIRECTORY


11617 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

11618 if(
m©chnum
)

11620 
m©chnum
 = matchnum-1;

11621 
RUU_°©i⁄
 *
rs_rob
 = &
cuºít
->
RUU
[
RUU_ödex
];

11622 
RUU_°©i⁄
 *
rs_lsq
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

11624 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
rs
 =
rs_rob
 || cache_dl1[thªadid]->mshr->mshrE¡ry[m©chnum].r†=
rs_lsq
)

11625 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
evít
->
rs
 = 
NULL
;

11627 
RS_li°
 *
cur
 = 
rs_ˇche_li°
[
thªadid
][
m©chnum
];

11629 
cur
)

11631 if(
cur
->
rs
 =
rs_rob
 || cur->r†=
rs_lsq
)

11632 
cur
->
rs
 = 
NULL
;

11633 
cur
 = cur->
√xt
;

11637 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

11638 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

11639 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

11640 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

11641 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

11643 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

11644 
cuºít
->
m_shLQNum
--;

11646 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

11648 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

11649 
cuºít
->
m_shSQNum
--;

11652 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

11653 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

11654 
cuºít
->
LSQ_num
--;

11655 
ãmp_LSQ_num
--;

11660 
i
 = 0; i < 
MAX_ODEPS
; i++)

11662 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

11663 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

11665 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

11666 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

11667 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

11668 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

11669 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11670 
cuºít
->
RUU_num
--;

11672 
cuºít
->
RUU_èû
 = 
ª∂ay_ödex
;

11675 
lök
 = 
cuºít
->
WBèbÀTaû
;

11677 i‡(
lök
 =
NULL
 || 
°‹eCou¡
 == 0)

11679 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
 = 
NULL
;

11680 i‡(
lök
 !
NULL
)

11682 
lök
 !
NULL
)

11684 
cuºít
->
numOfWBE¡ry
--;

11685 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

11686 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

11687 
lök
 =Üök->
¥ev
;

11688 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

11694 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
;

11695 
°‹eCou¡
--;

11696 
°‹eCou¡
)

11698 
cuºít
->
WBèbÀHód
 = cuºít->WBèbÀHód->
¥ev
;

11699 
°‹eCou¡
--;

11701 
lök
 = 
cuºít
->
WBèbÀHód
->
¥ev
;

11702 
cuºít
->
WBèbÀHód
->
¥ev
 = 
NULL
;

11704 
lök
 !
NULL
)

11706 
cuºít
->
numOfWBE¡ry
--;

11707 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

11708 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

11709 
lök
 =Üök->
¥ev
;

11710 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

11714 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11716 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

11717 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 
sim_cy˛e
;

11720 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

11721 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

11724 
md_›code
 
›
;

11726 
j
 = 
cuºít
->
„tch_num
;

11727 
i
 = 
cuºít
->
„tch_hód
; 
j
 > 0;)

11729 
	`MD_SET_OPCODE
 (
›
, 
cuºít
->
„tch_d©a
[
i
]->
IR
);

11730 
i
 = (ò+ 1Ë& (
ruu_ifq_size
 - 1);

11731 
j
--;

11733 
cuºít
->
„tch_num
 = 0;

11734 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

11735 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

11743 
	`fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
)

11746 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11747 
RUU_°©i⁄
 *
rs
;

11748 
i
, 
RUU_ödex
;

11750 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

11752 
RUU_ödex
 !
ª∂ay_ödex
)

11754 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11757 
RUU_ödex
 !
cuºít
->
RUU_èû
)

11759 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ªcovî_ö°
 && !cuºít->RUU[RUU_ödex].
com∂ëed
)

11761 
rs
 = &
cuºít
->
RUU
[
RUU_ödex
];

11762 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

11763 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

11764 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

11767 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11771 #ifde‡
SMD_USE_WRITE_BUF


11774 
	`ruu_ªÀa£_wrôebuf„r
 ()

11776 
thªadid
, 
i
, 
˙t
, 
j
;

11778 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11780 
j
 = 
m_L1WBufC¡
[
thªadid
];

11781 
˙t
 = 0;

11782 
i
 = 
m_L1WBuf_hód
[
thªadid
];

11784 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11785 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11787 
˙t
 !
j
)

11789 i‡(
sim_cy˛e
 >
m_L1WBuf
[
thªadid
][
i
].
föishTime
 && m_L1WBuf[thªadid][i].
wrôeSèπed
)

11791 if(
m_L1WBuf
[
thªadid
][
i
].
isMiss
 && 
	`MSHR_block_check
(
ˇche_dl1
[thªadid]->
mshr
, m_L1WBuf[thªadid][i].
addr
, cache_dl1[thªadid]->
£t_shi·
))

11793 if(!
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
)

11794 
	`com∂ëeSt‹e
(
thªadid
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
	`GëMemAccWidth
(m_L1WBuf[thªadid][i].
›
), 0);

11796 
m_L1WBufC¡
[
thªadid
]--;

11797 
m_L1WBuf_hód
[
thªadid
] = (m_L1WBuf_hód[thªadid] + 1Ë% 
SMD_L1_WBUF_SIZE
;

11798 
i
 = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
;

11799 
˙t
++;

11805 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11806 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11811 
	`ruu_wrôe_‰om_Wrôebuf„r
 ()

11813 
thªadid
, 
i
, 
˙t
;

11814 
ªs_ãm∂©e
 *
fu
;

11815 
œt
 = 0;

11816 
c⁄ãxt
 *
cuºít
;

11818 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11820 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11822 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11823 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11825 
˙t
 = 0, 
i
 = 
m_L1WBuf_hód
[
thªadid
]; c¡ < 
m_L1WBufC¡
[thªadid]; c¡++, i = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
)

11827 
œt
 = 0;

11829 i‡(!
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
)

11831 #ifdef 
DCACHE_MSHR


11832 
m©chnum
;

11833 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

11834 if(
m©chnum
)

11836 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

11840 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
m_L1WBuf
[
thªadid
][
i
].
›
),Åhreadid);

11842 i‡(
fu


11843 #ifdef 
DCACHE_MSHR


11844 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid)

11848 i‡(
fu
->
ma°î
->
busy
)

11849 
	`∑nic
 ("functional unitálready in use");

11851 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

11852 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

11853 
fu
->
ma°î
->
du∂iˇã
 = 0;

11855 i‡(
ˇche_dl1
[
thªadid
])

11857 
dˇche_ac˚ss
++;

11858 
cuºít
->
dˇche_ac˚ss
++;

11860 
övÆid©eOthîCache
 = 0;

11862 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

11864 if(
m_L1WBuf
[
thªadid
][
i
].
›
 =
STL_C
 && m_L1WBuf[thªadid][i].
commôD⁄e
)

11866 
œt
 = 
ˇche_dl1_œt
;

11870 if(
	`md_vÆid_addr
 (
m_L1WBuf
[
thªadid
][
i
].
addr
, 
cuºít
->
ma°îid
))

11871 #ifde‡
DIRECTORY


11872 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid);

11874 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

11878 #ifdef 
DCACHE_MSHR


11879 if(
œt
 > 
ˇche_dl1_œt
)

11881 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
œt
, 0, 
NULL
);

11882 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 1;

11884 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 
sim_cy˛e
;

11887 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 1;

11898 #ifdef 
EDA


11900 
	`assignFlﬂtRegs
 (
c⁄ãxt
 * 
cuºít
, 
RUU_°©i⁄
 *
rs
, 
A‹B
, 
dúty
)

11902 
md_›code
 
›
;

11903 
x
;

11904 
md_ö°_t
 
ö°
;

11906 
›
 = 
rs
->op;

11907 
ö°
 = 
rs
->
IR
;

11909 i‡(
A‹B
 == 2)

11911 
›
)

11913 
ITOFS
:

11914 
ITOFT
:

11915 
CVTTQ
:

11916 
CVTLQ
:

11917 
CPYS
:

11918 
CPYSN
:

11919 
CPYSE
:

11920 
CVTQL
:

11921 i‡(
dúty
)

11922 
	`SET_FPR_Q
 (
RC
, 
rs
->
pois⁄
[2].
d©a
);

11924 
	`SET_FPR_Q
 (
RC
, 
rs
->
vÆ_rc
);

11927 i‡(
dúty
)

11928 
	`SET_FPR
 (
RC
, 
rs
->
pois⁄
[2].
d©a
);

11930 
	`SET_FPR
 (
RC
, 
rs
->
vÆ_rc
);

11936 i‡(
A‹B
)

11938 
x
 = 
RB
;

11942 
x
 = 
RA
;

11945 
›
)

11947 
LDS
:

11948 
LDT
:

11949 
MF_FPCR
:

11951 
STS
:

11952 
STT
:

11953 
ITOFS
:

11954 
ITOFT
:

11955 
CMPTUN
:

11956 
CMPTEQ
:

11957 
CVTQS
:

11958 
CVTQT
:

11959 
CVTLQ
:

11960 
CVTQL
:

11961 
CPYS
:

11962 
CPYSN
:

11963 
CPYSE
:

11964 
MT_FPCR
:

11965 
FTOIT
:

11966 
FTOIS
:

11967 i‡(
dúty
)

11969 i‡(
A‹B
)

11970 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

11972 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

11976 i‡(
A‹B
)

11977 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_rb
);

11979 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_ø
);

11982 
FCMOVEQ
:

11983 
FCMOVGE
:

11984 
FCMOVGT
:

11985 
FCMOVLE
:

11986 
FCMOVLT
:

11987 
FCMOVNE
:

11988 i‡(
dúty
)

11990 i‡(
A‹B
)

11991 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

11993 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

11997 i‡(
A‹B
)

11998 
	`SET_FPR
 (
x
, 
rs
->
vÆ_rb
);

12000 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_ø
);

12004 i‡(
dúty
)

12006 i‡(
A‹B
)

12007 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12009 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12013 i‡(
A‹B
)

12014 
	`SET_FPR
 (
x
, 
rs
->
vÆ_rb
);

12016 
	`SET_FPR
 (
x
, 
rs
->
vÆ_ø
);

12024 
	`ˇlcuœãWr⁄gVÆue
 (
RUU_°©i⁄
 *
rs
)

12026 
i
, 
j
, 
k
, 
x
, 
y
, 
z
;

12027 
n_di•©ched
;

12028 
md_ö°_t
 
ö°
;

12029 
md_›code
 
›
;

12030 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

12031 
md_addr_t
 
èrgë_PC
;

12032 
md_addr_t
 
addr
;

12034 
byã_t
 
ãmp_byã
;

12035 
hÆf_t
 
ãmp_hÆf
;

12036 
w‹d_t
 
ãmp_w‹d
;

12038 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12039 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12041 
md_Áu…_ty≥
 
Áu…
;

12043 
pﬁluãd
[66];

12045 
qw‹d_t
 
vÆ_ø
, 
vÆ_rb
, 
vÆ_rc
, 
vÆ_ø_ªsu…
;

12046 
qw‹d_t
 
ªgVÆ
;

12047 
c⁄ãxt
 *
cuºít
, 
˘x
;

12048 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

12050 
˘x
 = *
thec⁄ãxts
[
rs
->
thªadid
];

12051 
cuºít
 = &
˘x
;

12052 
	`mem£t
 (&
cuºít
->
ªgs
, 0,  (current->regs));

12055 
ö°
 = 
rs
->
IR
;

12056 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12057 
cuºít
->
ªgs
.
ªgs_PC
 = 
rs
->
PC
;

12058 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

12060 i‡(!
rs
->
pois⁄
[0].
dúty
)

12062 i‡(
rs
->
ö1
 < 32)

12063 
	`SET_GPR
 (31 - 
rs
->
ö1
,Ñs->
vÆ_ø
);

12065 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 0, 0);

12069 i‡(
rs
->
ö1
 < 32)

12070 
	`SET_GPR
 (31 - 
rs
->
ö1
,Ñs->
pois⁄
[0].
d©a
);

12072 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 0, 1);

12074 i‡(!
rs
->
pois⁄
[1].
dúty
)

12076 i‡(
rs
->
ö2
 < 32)

12077 
	`SET_GPR
 (31 - 
rs
->
ö2
,Ñs->
vÆ_rb
);

12079 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 1, 0);

12083 i‡(
rs
->
ö2
 < 32)

12084 
	`SET_GPR
 (31 - 
rs
->
ö2
,Ñs->
pois⁄
[1].
d©a
);

12086 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 1, 1);

12090 
›
)

12092 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12093 
OP
: \

12095 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

12096 
out1
 = 
O1
; 
out2
 = 
O2
; \

12097 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

12098 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

12099 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

12100 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

12101 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

12102 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

12104 
	`SYMCAT
(
OP
,
_IMPL
); \

12106 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12107 
OP
: \

12109 
›
 = 
MD_NOP_OP
; \

12111 
out1
 = 
NA
; 
out2
 = NA; \

12112 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

12115 
	#CONNECT
(
OP
Ë

	)

12121 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12123 i‡(!
cuºít
->
•ec_mode
) \

12124 
Áu…
 = (
FAULT
); \

12128 
	#THREADID
 (
cuºít
->
id
)

	)

12129 
	~"machöe.def
"

12132 
›
 = 
MD_NOP_OP
;

12134 
out1
 = 
NA
;

12135 
out2
 = 
NA
;

12136 
ö1
 = 
NA
;

12137 
ö2
 = 
NA
;

12138 
ö3
 = 
NA
;

12142 i‡(
out1
 < 32)

12143 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

12145 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

12147 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

12148 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

12150 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

12152 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
 && !rs->
•ec_mode
 && !rs->
isWr⁄gP©h
)

12154 
rs
->
ch™geS≥cMode
 = 0;

12155 i‡(
rs
->
ÆtPC
 !rs->
√xt_PC
)

12157 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 =
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 =rs->
√xt_PC
))

12159 
rs
->
ch™geS≥cMode
 = 1;

12162 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 =
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 !rs->
√xt_PC
))

12164 
rs
->
ch™geS≥cMode
 = 2;

12170 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 !
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 =rs->
√xt_PC
))

12172 
rs
->
ch™geS≥cMode
 = 3;

12173 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

12176 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 !
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 !rs->
√xt_PC
))

12178 
rs
->
ch™geS≥cMode
 = 4;

12179 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

12186 i‡(
rs
->
ó_comp
)

12188 
rs
->
pois⁄
[2].
dúty
 = 1;

12189 
rs
->
pois⁄
[2].
d©a
 = 
addr
;

12191 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_STORE
)

12194 i‡(
vÆ_rc
 !
rs
->val_rc)

12196 
rs
->
pois⁄
[2].
dúty
 = 1;

12197 
rs
->
pois⁄
[2].
d©a
 = 
vÆ_rc
;

12201 
rs
->
pois⁄
[2].
dúty
 = 0;

12202 
rs
->
pois⁄
[2].
d©a
 = 0;

12204 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

12210 #ifdef 
COLLECT_STAT_STARTUP


12212 
	`f°fwd_cﬁÀ˘Sèts
()

12214 
b¨rõrCou¡
 = 0;

12215 
thªadid
;

12217 
	`¥ötf
("Fast-forwardingÅillÅhe collect stats system call\n");

12218 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12221 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12223 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12224 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12227 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12228 
	`∑nic
 ("Fast forwardÉrror\n");

12230 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12231 
	`∑nic
 ("Fast forwardÉrror\n");

12237 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12239 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12242 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12243 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12245 
md_ö°_t
 
ö°
;

12246 
md_›code
 
›
;

12247 
md_addr_t
 
èrgë_PC
;

12248 
md_addr_t
 
addr
;

12249 
is_wrôe
;

12250 
byã_t
 
ãmp_byã
;

12251 
hÆf_t
 
ãmp_hÆf
;

12252 
w‹d_t
 
ãmp_w‹d
;

12254 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12255 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12258 
md_Áu…_ty≥
 
Áu…
;

12261 #i‚de‡
PARALLEL_EMUL


12265 #ifde‡
PARALLEL_EMUL


12266 
sim_num_ö¢
++;

12269 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12270 #ifde‡
TARGET_ALPHA


12271 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12275 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12276 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12279 
addr
 = 0;

12280 
is_wrôe
 = 
FALSE
;

12283 
Áu…
 = 
md_Áu…_n⁄e
;

12286 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12289 
›
)

12291 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12292 
OP
: \

12293 
	`SYMCAT
(
OP
,
_IMPL
); \

12295 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12296 
OP
: \

12297 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12298 
	#CONNECT
(
OP
)

	)

12299 #unde‡
DECLARE_FAULT


12300 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12301 { 
Áu…
 = (
FAULT
); ; }

12302 
	~"machöe.def
"

12304 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12307 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12308 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12311 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12313 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12315 
is_wrôe
 = 
TRUE
;

12316 #i‚de‡
PARALLEL_EMUL


12317 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12320 #i‚de‡
PARALLEL_EMUL


12322 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12327 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12328 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12331 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12332 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12334 #i‚de‡
PARALLEL_EMUL


12335 i‡((
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12337 if(
cuºít
->
b¨rõrRóched
 == 2)

12339 
b¨rõrCou¡
++;

12340 
	`¥ötf
("Cros£dÅhêb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12342 
cuºít
->
b¨rõrRóched
 = 0;

12346 if(
cﬁÀ˘_°©s
)

12348 
	`¥ötf
("Föished fa°-f‹w¨dögáàb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12358 
	`f°fwd_föeAdju°
 ()

12360 
thªadid
;

12361 
cou¡
 = 0;

12362 
tŸÆIå
 = 2;

12363 
¥Id
 = 0;

12364 
md_addr_t
 
ãmpPC
[3] = { 0, 0, 0 };

12366 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12369 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12371 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12372 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12375 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12376 
	`∑nic
 ("Fast forwardÉrror\n");

12378 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12379 
	`∑nic
 ("Fast forwardÉrror\n");

12381 if(
ûök_run
)

12383 
cﬁÀ˘_°©s
 = 1;

12388 #ifdef 
EDA


12389 
¥Id
 = 0;ÖrId < 3;ÖrId++)

12392 
cou¡
 = 0;

12395 
thªadid
 = 0;thªadid < 
numc⁄ãxts
;Åhreadid = (threadid +Çumcontexts + 1) %Çumcontexts)

12397 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12399 i‡(
cuºít
->
ma°îid
 !
¥Id
)

12403 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12404 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12406 
cou¡î_t
 
icou¡
 = 0;

12407 
md_ö°_t
 
ö°
;

12408 
md_›code
 
›
;

12409 
md_addr_t
 
èrgë_PC
;

12410 
md_addr_t
 
addr
;

12411 
is_wrôe
;

12412 
byã_t
 
ãmp_byã
;

12413 
hÆf_t
 
ãmp_hÆf
;

12414 
w‹d_t
 
ãmp_w‹d
;

12416 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12417 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12420 
md_Áu…_ty≥
 
Áu…
;

12424 
icou¡
++;

12426 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12427 #ifde‡
TARGET_ALPHA


12428 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12432 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12433 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12436 
addr
 = 0;

12437 
is_wrôe
 = 
FALSE
;

12440 
Áu…
 = 
md_Áu…_n⁄e
;

12443 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12446 
›
)

12448 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12449 
OP
: \

12450 
	`SYMCAT
(
OP
,
_IMPL
); \

12452 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12453 
OP
: \

12454 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12455 
	#CONNECT
(
OP
)

	)

12456 #unde‡
DECLARE_FAULT


12457 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12458 { 
Áu…
 = (
FAULT
); ; }

12459 
	~"machöe.def
"

12461 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12464 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12465 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12468 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12470 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12472 
is_wrôe
 = 
TRUE
;

12473 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12476 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12480 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12481 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12484 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12485 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12487 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12490 i‡(
cou¡
 =0 && 
cuºít
->
°¨tRóched
)

12492 
cuºít
->
°¨tRóched
 = 0;

12494 if(
cuºít
->
jobThdId
 != 0)

12495 
	`∑nic
 ("CanÇot beÑeached by otherÅhreads");

12497 
cou¡
++;

12501 if(
cou¡
 == 5)

12504 if(
cou¡
 > 0 && count < 6)

12505 
cou¡
++;

12507 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12511 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12513 if(
cuºít
->
b¨rõrRóched
 =2 && cuºít->
jobThdId
 !(
THREADS_PER_JOB
-1))

12514 
	`∑nic
("End of barrierÑeached with wrong id");

12516 
cuºít
->
b¨rõrRóched
 = 0;

12520 i‡(
cou¡
 == 5)

12522 
cou¡
++;

12523 
ãmpPC
[
cuºít
->
ma°îid
] = cuºít->
ªgs
.
ªgs_PC
;

12527 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12529 i‡(
cuºít
->
jobThdId
 =(
THREADS_PER_JOB
-1))

12536 
	`¥ötf
("Job %d synchr⁄ized\n", 
¥Id
);

12537 
	`fÊush
(
°dout
);

	@sim-out_nn.c

113 
	~"hódîs.h
"

115 
	~"maö.h
"

116 
	~"sim-out‹dî.h
"

117 
	~"ö°M™ù.h
"

120 
cou¡î_t
 
	gTŸÆB¨rõrs
 = 0;

121 
cou¡î_t
 
	gTŸÆLocks
 = 0;

122 
cou¡î_t
 
	gpuª_num_ö¢
 = 0;

123 
cou¡î_t
 
	gtŸÆ_num_ö¢
 = 0;

124 
cou¡î_t
 
	gª«me_ac˚ss
 = 0;

125 
cou¡î_t
 
	giqøm_ac˚ss
 = 0;

126 
cou¡î_t
 
	gfqøm_ac˚ss
 = 0;

127 
cou¡î_t
 
	grob1_ac˚ss
 = 0;

128 
cou¡î_t
 
	grob2_ac˚ss
 = 0;

129 
cou¡î_t
 
	gb¥ed_ac˚ss
 = 0;

130 
cou¡î_t
 
	giwakeup_ac˚ss
 = 0;

131 
cou¡î_t
 
	gfwakeup_ac˚ss
 = 0;

132 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss
 = 0;

133 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss
 = 0;

134 
cou¡î_t
 
	gúegfûe_ac˚ss
 = 0;

135 
cou¡î_t
 
	g‰egfûe_ac˚ss
 = 0;

137 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

138 
cou¡î_t
 
	giˇche_ac˚ss
 = 0;

139 
cou¡î_t
 
	gdˇche_ac˚ss
 = 0;

140 
cou¡î_t
 
	gdˇche2_ac˚ss
 = 0;

141 
cou¡î_t
 
	giˇche2_ac˚ss
 = 0;

143 
cou¡î_t
 
	gülu1_ac˚ss
 = 0;

144 
cou¡î_t
 
	gülu2_ac˚ss
 = 0;

145 
cou¡î_t
 
	gÁlu1_ac˚ss
 = 0;

146 
cou¡î_t
 
	gÁlu2_ac˚ss
 = 0;

147 
cou¡î_t
 
	gúesu…bus_ac˚ss
 = 0;

148 
cou¡î_t
 
	g‰esu…bus_ac˚ss
 = 0;

149 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

150 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

152 
	gpcb_blk_cou¡
 = 0;

155 
cou¡î_t
 
	g¶ìpCou¡
[
MAXTHREADS
];

159 
cou¡î_t
 
	gdu∂iˇti⁄_ac˚ss
, 
	gDUPLICATION_ac˚ss
[
CLUSTERS
], 
	gdu∂iˇti⁄_tŸÆ
 = 0;

160 
cou¡î_t
 
	gcom∑ª_ac˚ss
, 
	gCOMPARE_ac˚ss
[
CLUSTERS
], 
	gcom∑ª_tŸÆ
 = 0;

164 
cou¡î_t
 
¥edi˘_commô
 (
RUU_°©i⁄
 *
rs
);

167 
	gb¥ed_btb_u£_ma°îid
 = 0;

168 
ûök_run
;

169 
em3d_run
;

171 #ifde‡
DIRECTORY


172 #ifde‡
POPNET


173 
maöP›√t
();

174 
p›√tMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
°Time
, 
msgNo
);

175 
p›√tBuf„rS∑˚
(
s1
, 
s2
, 
›t
);

177 
cou¡î_t
 
p›√tMsgNo
;

178 
	gmshr_≥ndög_evít
[
MAXTHREADS
];

180 
cou¡î_t
 
	gßme_L1_L2_fifo_fuŒ
;

181 
cou¡î_t
 
	gL1_mshr_fuŒ
;

182 
cou¡î_t
 
	gœ°_L1_mshr_fuŒ
[
MAXTHREADS
];

183 
cou¡î_t
 
	gL2_mshr_fuŒ
;

184 
cou¡î_t
 
	gœ°_L2_mshr_fuŒ
;

185 
cou¡î_t
 
	gL2_mshr_fuŒ_¥e„tch
;

186 
cou¡î_t
 
	gL1_fifo_fuŒ
;

187 
cou¡î_t
 
	gœ°_L1_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

188 
cou¡î_t
 
	gDú_fifo_fuŒ
;

189 
cou¡î_t
 
	gœ°_Dú_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

190 
cou¡î_t
 
	gI≈ut_queue_fuŒ
;

191 
cou¡î_t
 
	gœ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

192 
cou¡î_t
 
	gOuçut_queue_fuŒ
;

193 
cou¡î_t
 
	glock_fifo_fuŒ
;

194 
cou¡î_t
 
	glock_fifo_wr⁄g
;

195 
cou¡î_t
 
	glock_fifo_wrôeback
;

196 
cou¡î_t
 
	glock_fifo_bíefô
;

198 
cou¡î_t
 
	gSèŒ_L1_mshr
;

199 
cou¡î_t
 
	gSèŒ_L2_mshr
;

200 
cou¡î_t
 
	gSèŒ_L1_fifo
;

201 
cou¡î_t
 
	gSèŒ_dú_fifo
;

202 
cou¡î_t
 
	gSèŒ_öput_queue
;

203 
cou¡î_t
 
	gSèŒ_ouçut_queue
;

205 
cou¡î_t
 
	gWM_Miss
;

206 
cou¡î_t
 
	gWM_CÀ™
;

207 
cou¡î_t
 
	gWM_S
;

208 
cou¡î_t
 
	gWM_EM
;

209 
cou¡î_t
 
	gwrôe_sh¨ed_u£d_c⁄f
;

211 
cou¡î_t
 
	gSyncIn°CacheAc˚ss
;

212 
cou¡î_t
 
	gTe°CacheAc˚ss
;

213 
cou¡î_t
 
	gTe°SecCacheAc˚ss
;

214 
cou¡î_t
 
	gSëCacheAc˚ss
;

215 
cou¡î_t
 
	gSyncLﬂdRódMiss
;

216 
cou¡î_t
 
	gSyncLﬂdLRódMiss
;

217 
cou¡î_t
 
	gSyncLﬂdHô
;

218 
cou¡î_t
 
	gSyncLﬂdLHô
;

219 
cou¡î_t
 
	gSyncSt‹eCHô
;

220 
cou¡î_t
 
	gSyncSt‹eCWrôeMiss
;

221 
cou¡î_t
 
	gSyncSt‹eCWrôeUpgøde
;

222 
cou¡î_t
 
	gSyncSt‹eHô
;

223 
cou¡î_t
 
	gSyncSt‹eWrôeMiss
;

224 
cou¡î_t
 
	gSyncSt‹eWrôeUpgøde
;

225 
cou¡î_t
 
	gB¨St‹eWrôeMiss
;

226 
cou¡î_t
 
	gB¨St‹eWrôeUpgøde
;

227 
cou¡î_t
 
	gSync_L2_miss
;

230 
cou¡î_t
 
«ck_cou¡î
, 
L1_Êù_cou¡î
, 
Êù_cou¡î
, 
e_to_m
;

231 
cou¡î_t
 
	gtŸÆMeshH›Cou¡
, 
	gtŸÆMeshH›Dñay
, 
	gtŸÆEvítCou¡
, 
	gtŸÆEvítPro˚ssTime
;

232 
cou¡î_t
 
	gtŸÆO±H›Cou¡
, 
	gtŸÆO±H›Dñay
;

233 
cou¡î_t
 
	glﬂd_lök_sh¨ed
, 
	glﬂd_lök_ex˛usive
;

234 
tick_t
 
tŸÆmissh™dÀtime
;

235 
cou¡î_t
 
L1_¥e„tch_u£fuŒ
;

236 
tŸÆevítcou¡num
;

237 
tŸÆ_L1_¥e„tch
;

238 
cou¡î_t
 
wrôe_back_óæy
;

239 
tŸÆ_L1_fú°_¥e„tch
;

240 
tŸÆ_L1_£c_¥e„tch
;

241 
tŸÆªqcou¡num
;

242 
tŸÆmisscou¡num
;

243 
cou¡î_t
 
loˇl_ˇche_ac˚ss
, 
ªmŸe_ˇche_ac˚ss
, 
loˇldúe˘‹y
, 
ªmŸedúe˘‹y
;

244 
cou¡î_t
 
övﬁve_2_h›s
, 
övﬁve_2_h›_touch
, 
övﬁve_2_h›_wb
, 
övﬁve_2_h›s_wm
, 
övﬁve_4_h›s_wm
, 
övﬁve_2_h›s_upgøde
, 
övﬁve_4_h›s
, 
övﬁve_4_h›s_miss
, 
övﬁve_2_h›s_miss
, 
övﬁve_4_h›s_upgøde
;

245 
cou¡î_t
 
	gtŸÆS∂ôNo
, 
	gtŸÆS∂ôWM
;

246 
cou¡î_t
 
d©a_¥iv©e_wrôe
, 
d©a_¥iv©e_ªad
, 
d©a_sh¨ed_wrôe
, 
d©a_sh¨ed_ªad
;

247 
cou¡î_t
 
tŸÆ_Æl_˛o£
, 
tŸÆ_Æl_Æmo°˛o£
, 
tŸÆ_nŸ_Æl_˛o£
, 
tŸÆ_p_c_evíts
, 
tŸÆ_c⁄sumîs
, 
tŸÆ_∑ckës_ö_√ighb‹
, 
tŸÆ_∑ckës_©_c‹√rs
;

248 
cou¡î_t
 
tŸÆ_d©a_c⁄sumîs
, 
tŸÆ_d©a_˛o£
, 
tŸÆ_d©a_Ár
, 
tŸÆ_d©a_©_c‹√r
;

249 
cou¡î_t
 
sh¨î_num
[
MAXTHREADS
];

250 
avîage_öside_≥r˚¡
;

251 
avîage_outside_≥r˚¡
;

252 
avîage_outside_abs_≥r˚¡
;

253 
avîage_c‹√r_≥r˚¡
;

255 
	gmem_p‹t_œt
[8];

258 
	#PULL_BACK


	)

260 
	#WATER_NSQUARED
 0

	)

261 
	#LSQ_LATENCY
 4

	)

262 
	#DUP_NO
 2

	)

264 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

265 
	#LSQSIZE
 1024

	)

266 
	#RUUSIZE
 1024

	)

269 
	#_rŸr
(
x
Ë(xË((xË& 1)?(((x)>>1)|0x80000000):((x)>>1)

	)

271 
quõs˚Såu˘
 
	gquõs˚AddrSåu˘
[
CLUSTERS
];

272 
md_addr_t
 
	gTempIn°r
 = 0x1A2B3C4D;

273 
	gac˚ss_mem
 = 0;

274 
	gac˚ss_mem_id
 = -1;

275 
	g°›≥d_num_thªads
 = 0;

276 
	gRódFromWB
 = 0;

277 
cou¡î_t
 
	gˇcheMiss
[
MAXTHREADS
], 
	ghôInOthîCache
[MAXTHREADS];

278 
cou¡î_t
 
	gm_sqPª„tchC¡
 = 0;

279 
	gexecuãMaxIn¢
;

280 
	gdl2A˘uÆlyAc˚s£d
, 
	gm¨kedLöeRïœ˚d
;

281 
	gquõn£Wakeup
[
MAXTHREADS
];

282 
	gsimIn¢
[
MAXTHREADS
];

283 
	gÊushImpSèts
 = 0;

286 
	gthªadF‹ked
[4], 
	gÆlF‹ked
, 
	g°‹eC⁄dFaû
, 
	gtimeToRëu∫
 = 0;

287 
cou¡î_t
 
	gSt‹eC⁄dôi⁄FaûNum
;

288 
	gcﬁÀ˘SètB¨rõr
, 
	gcﬁÀ˘SètSt›
[
MAXTHREADS
];

289 
	gªÆSimCy˛e
;

290 
	ga˘uÆPro˚ss
;

291 
	gdißbÀ_øy
 = 1;

292 
	gfu_busy
[
CLUSTERS
], 
	gwb_d⁄e
[CLUSTERS], 
	gissue_d⁄e
[CLUSTERS], 
	g„tch_d⁄e
[CLUSTERS], 
	gcommô_d⁄e
[CLUSTERS], 
	gdi•©ch_d⁄e
[CLUSTERS];

293 
cou¡î_t
 
	gbrRecovîy
[
CLUSTERS
], 
	gexåaIn¢
[CLUSTERS];

295 #i‡ 
deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

296 
	g°ÆlNoBusSlŸ
;

297 
busSlŸCou¡
;

298 
	gbusU£d
;

299 
cou¡î_t
 
	gbusOccu∑ncy
 = 0;

303 #ifde‡
PULL_BACK


304 
cou¡î_t
 
	gpuŒbackBubbÀ
[
MAXTHREADS
], 
	gpuŒbackWaôCy˛e
[MAXTHREADS], 
	gpuŒbackD⁄eThisCy˛e
[MAXTHREADS], 
	gpuŒbackHôPªd
[MAXTHREADS], 
	gdl1MissThisCy˛e
[MAXTHREADS], 
	gdl1HôThisCy˛e
[MAXTHREADS], 
	gpuŒbackCy˛eCou¡
[MAXTHREADS],

305 
	gpuŒbackCou¡
[
MAXTHREADS
];

306 
cou¡î_t
 
	g¥edHôHô
[
MAXTHREADS
], 
	g¥edHôMiss
[MAXTHREADS], 
	g¥edMissHô
[MAXTHREADS], 
	g¥edMissMiss
[MAXTHREADS];

309 #ifde‡ 
MSHR


310 
	gmshr_size
 = 0;

311 
	gmshr_fuŒ
 = 0;

312 
	gmshr_cou¡
;

314 #ifde‡ 
MSHR_DIST


315 
	gmshr_size_di°
[
MSHRSIZE
];

317 
	gmshr_fuŒ_cou¡
;

319 #ifde‡
EUP_NETWORK


320 
cou¡î_t
 
	gEUP_íåy_fuŒ
;

323 
	#SYNC_IDEAL


	)

326 
	gm_shLQSize
;

327 
	gm_shSQSize
;

328 
cou¡î_t
 
	gm_tŸÆSèŒ
[
MAXTHREADS
];

329 
cou¡î_t
 
	gm_sqLQFuŒ
[
MAXTHREADS
];

330 
cou¡î_t
 
	gm_sqSQFuŒ
[
MAXTHREADS
];

331 
cou¡î_t
 
	gm_RUUFuŒ
[
MAXTHREADS
];

332 
cou¡î_t
 
	gm_ªgFuŒ
[
MAXTHREADS
];

333 
cou¡î_t
 
	gm_issueFuŒ
[
MAXTHREADS
];

334 
cou¡î_t
 
	gm_û1Miss
[
MAXTHREADS
];

335 
cou¡î_t
 
	gm_„tchEm±y
[
MAXTHREADS
];

336 
cou¡î_t
 
	gm_STLC
[
MAXTHREADS
];

337 
cou¡î_t
 
	gm_å≠
[
MAXTHREADS
];

338 
cou¡î_t
 
	gm_LﬂdSèŒMiss
[
MAXTHREADS
];

339 
cou¡î_t
 
	gm_St‹eSèŒMiss
[
MAXTHREADS
];

340 
cou¡î_t
 
	gm_LﬂdSèŒHô
[
MAXTHREADS
];

341 
cou¡î_t
 
	gm_St‹eSèŒHô
[
MAXTHREADS
];

342 
cou¡î_t
 
	gm_LﬂdRólMiss
[
MAXTHREADS
];

343 
cou¡î_t
 
	gm_St‹eRólMiss
[
MAXTHREADS
];

344 
cou¡î_t
 
	gm_LﬂdRólHô
[
MAXTHREADS
];

345 
cou¡î_t
 
	gm_St‹eRólHô
[
MAXTHREADS
];

346 
cou¡î_t
 
	gm_LﬂdMiss
[
MAXTHREADS
];

347 
cou¡î_t
 
	gm_St‹eMiss
[
MAXTHREADS
];

348 
cou¡î_t
 
	gm_St‹eUpd©eMiss
[
MAXTHREADS
];

349 
cou¡î_t
 
	gm_upd©e_miss_dïíd_°¨t
[
MAXTHREADS
];

350 
cou¡î_t
 
	gm_upd©e_miss_Êag
[
MAXTHREADS
];

351 
cou¡î_t
 
	gUpd©eDïídCy˛e
;

352 vﬁ©ûê
	g¥e„tch_Êag
 = 1;

353 
cou¡î_t
 
m_upd©e_miss
[
MAXTHREADS
];

354 
lock_waôög
[
MAXTHREADS
];

355 
b¨rõr_waôög
[
MAXTHREADS
];

357 
cou¡î_t
 
	gm_commôSèŒ
[
MAXTHREADS
];

359 
cou¡î_t
 
	gövÆid©i⁄_ª∂ay
[
MAXTHREADS
];

360 
cou¡î_t
 
	glﬂdLﬂdRïœyCou¡
[
MAXTHREADS
];

361 
	gövÆid©i⁄SèŒ
[
MAXTHREADS
], 
	gövÆid©eOthîCache
;

362 
	gcommôSèŒ
[
MAXTHREADS
];

365 
checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
);

366 
cou¡î_t
 
	glﬂdReje˘Rïœy
[
MAXTHREADS
], 
	glﬂdReje˘Cou¡
[MAXTHREADS], 
	glﬂdReje˘Sèt
[MAXTHREADS], 
	gm_sqNumLdRïœy
[MAXTHREADS], 
	gª∂ayIndex
[MAXTHREADS];

367 
	gªje˘RëryCy˛e
 = 3;

368 
cou¡î_t
 
	gldIssueCou¡
, 
	gld°Reje˘i⁄Cou¡
[
MAXTHREADS
];

370 
	g£qC⁄sRïœy
[
MAXTHREADS
], 
	g£qC⁄sIn¢Rïœy
[MAXTHREADS];

371 
cou¡î_t
 
	gtŸÆRUUsize
[
MAXTHREADS
], 
	gtŸÆLQsize
[MAXTHREADS], 
	gtŸÆSQsize
[MAXTHREADS];

372 
	gavgRUUsize
[
MAXTHREADS
], 
	gavgLQsize
[MAXTHREADS], 
	gavgSQsize
[MAXTHREADS];

374 
mè_maxthªads
;

375 
numThªads
[
MAXTHREADS
];

376 
	gcﬁÀ˘_°©s
 = 0;

377 
	gCOHERENT_CACHE
;

378 
	gMSI
;

379 
	g•ec_bíchm¨ks
;

380 
cou¡î_t
 
num_of_övÆid©i⁄s
;

382 
	gcﬁÀ˘_b¨rõr_°©s
[
CLUSTERS
];

383 
	gcﬁÀ˘_b¨rõr_ªÀa£
;

385 
	gcﬁÀ˘_lock_°©s
[
CLUSTERS
];

386 
md_addr_t
 
	gLockInôPC
;

387 
md_addr_t
 
	gœ°_pc
;

388 
md_addr_t
 
	gœ°_œ°_pc
;

389 
	g‰ìzeCou¡î
;

390 
	g°›sim
;

391 
	gÁ°fwd
;

394 
	goc_‹_cc_ac˚ss
 = 2;

395 #ifdef 
EDA


397 
ˇche_t
 *
	gˇche_dl0
[
THREADS_PER_JOB
];

399 
cou¡î_t
 
	gªcovîyCou¡
[8];

400 
cou¡î_t
 
	gnumBCQEm±y
[8];

403 
cou¡î_t
 
	göãrvÆCou¡
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

404 
cou¡î_t
 
	gtŸÆRñCE
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

405 
cou¡î_t
 
	gn⁄SktIn¢
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

406 
cou¡î_t
 
	gnumSyncIn°
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

407 
cou¡î_t
 
	gpuª_sync_ö¢
 = 0;

408 
cou¡î_t
 
	gpuª_skt_ö¢
 = 0;

411 
	$dl0_˛ónup
 ()

413 
i
;

415 
i
 = 0; i < 
numc⁄ãxts
; i++)

417 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
i
];

418 
jobId
 = 
cuºít
->
jobThdId
;

420 i‡(
cuºít
->
ma°îid
 != 0)

423 i‡(
cuºít
->
sim_num_ö¢
 > 
öãrvÆCou¡
[
jobId
])

425 
	`ÊushSñe˘ive
 (
ˇche_dl0
[
jobId
], jobId);

426 
öãrvÆCou¡
[
jobId
] +
DL0_CLEAUP_INTERVAL
;

429 
	}
}

432 
‹a˛e_°‹e_queue
 
	gOSQ
[8][
OSQ_size
];

433 
	gOSQ_num
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

434 
	gOSQ_hód
[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };

437 
	$födOSQ
 (
md_addr_t
 
addr
, 
width
, 
id
)

439 
i
, 
j
;

441 
i
 = (
OSQ_hód
[
id
] + 
OSQ_size
 - 1Ë% OSQ_size, 
j
 = 
OSQ_num
[id]; j > 0; j--, i = (i + OSQ_size - 1) % OSQ_size)

443 
bigWidth
 = 
OSQ
[
id
][
i
].
memWidth
 > 
width
 ? OSQ[id][i].memWidth : width;

444 
md_addr_t
 
lAddr
 = 
addr
 & ~(
bigWidth
 - 1);

445 
md_addr_t
 
osqAddr
 = 
OSQ
[
id
][
i
].
memAddr
 & ~(
bigWidth
 - 1);

447 i‡(
osqAddr
 =
lAddr
)

448  
i
;

451 
	}
}

453 #ifde‡ 
DECOUPLED_PREFETCH


454 
md_addr_t
 
	g¥efQueue
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

455 
md_addr_t
 
	g¥efQueue_pc
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

456 
cou¡î_t
 
	g¥efQueue_ö°Num
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

457 
	g¥efQueue_isWr⁄gP©h
[
MAXTHREADS
][
PREFETCH_QUEUE_SIZE
];

458 
	g¥efQueue_hód
[
MAXTHREADS
] = 0;

459 
	g¥efQueue_èû
[
MAXTHREADS
] = 0;

460 
	g¥efQueue_size
[
MAXTHREADS
] = 0;

461 
	gmemMissC≠
 = 0;

462 
cou¡î_t
 
	gtŸÆPªfMissL©ícy
 = 0;

463 
	g¥efMissCou¡
 = 0;

464 
cou¡î_t
 
	gde˝PªfSèŒCou¡
 = 0;

465 
md_addr_t
 
	gœ°PªfAddr
 = 0;

471 
	gBRANCH_Q_NUM
;

472 
	gCHECKER_NUMBER
 = 0;

473 
	gPCB_BLK_SIZE
 = 128;

474 
	gINORDER_CHECKER
 = 0;

475 
	gOUTSTANDING_STORE_NUM
 = 128;

476 
	gcheckîVDD
, 
	gcheckîFªq
;

479 
gë_‰ì_ªg
 (, );

480 
commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
);

481 
com∂ëeWrôe
 ();

482 
öôP¨ÆÀlSimuœti⁄
 ();

483 
com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
);

484 
com∂ëeSt‹e_l
 (
thªadid
, 
md_addr_t
 
addr
, 
width
);

486 
md_Áu…_ty≥
 
WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
);

489 
£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
);

490 
fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
);

494 
li°ñt
 *
	gi‰ìli°_hód
[
MAXTHREADS
], *
	gi‰ìli°_èû
[MAXTHREADS];

495 
li°ñt
 *
	gf‰ìli°_hód
[
MAXTHREADS
], *
	gf‰ìli°_èû
[MAXTHREADS];

511 
	ghŸ•Ÿ_cy˛e_ßm∂ög_ötvl
;

514 
	gmax_ö°s
;

515 
	gmax_b¨rõr
;

518 
	g±ø˚_√…
 = 0;

519 *
	g±ø˚_›ts
[2];

522 
	gruu_ifq_size
;

525 
	gruu_bønch_≥«…y
;

528 
	g„tch_•ìd
;

532 *
	g¥ed_ty≥
;

538 *
	g¥ed_ty≥2
;

542 c⁄° 
	gcomböed2
 = 
FALSE
;

546 c⁄° 
	ghi°_imm
 = 
FALSE
;

554 
	gbimod_√…
 = 1;

555 
	gbimod_c⁄fig
[1] = { 2048 };

558 
	gtwﬁev_√…
 = 4;

559 
	gtwﬁev_c⁄fig
[4] = { 1, 1024, 8, 
FALSE
 };

562 
	gcomb_√…
 = 1;

563 
	gcomb_c⁄fig
[1] = { 1024 };

566 
	gtwobcgskew_√…
 = 6;

567 
	gtwobcgskew_c⁄fig
[6] = { 32768, 32768, 0, 22,

574 
	gtwobcgskew_√…2
 = 6;

575 
	gtwobcgskew_c⁄fig2
[6] = { 4096, 4096, 0, 12,

581 
	gøs_size
 = 8;

584 
	gbtb_√…
 = 2;

585 
	gbtb_c⁄fig
[2] = { 512, 4 };

588 
	gruu_decode_width
;

589 
	gruu_issue_width
;

593 
	gruu_ö‹dî_issue
;

594 
	gLSQ_NUM_MORE_THAN_TWO
;

597 
	gruu_ö˛ude_•ec
 = 
TRUE
;

600 
	gruu_commô_width
;

603 
	gRUU_size
 = 
RUUSIZE
;

606 
	gLSQ_size
 = 
LSQSIZE
;

608 
	gLSQ_size_˛u°î
;

610 #ifdef 
EDA


612 *
	gˇche_dl0_›t
;

615 
	gˇche_dl0_œt
;

619 *
	gˇche_dl1_›t
;

622 
	gˇche_dl1_œt
;

625 *
	gˇche_dl2_›t
;

628 
	gˇche_dl2_œt
;

630 
	gmesh_size
;

632 *
	gˇche_û1_›t
;

635 
	gˇche_û1_œt
;

638 *
	gˇche_û2_›t
;

641 
	gˇche_û2_œt
;

644 
	gÊush_⁄_sysˇŒs
;

647 
	gcom¥ess_iˇche_addrs
;

650 
	gmem_√…
 = 2;

651 
	gmem_œt
[2] = { 18, 2 };

654 
	gmem_bus_width
;

655 
	gmem_bus_•ìd
;

656 
	gmem_p‹t_num
;

659 *
	gôlb_›t
;

662 *
	gdéb_›t
;

665 
	géb_miss_œt
;

668 
	g√tw‹k_ª˚ivî
;

669 
	g√tw‹k_c⁄Êi˘
;

672 
	gªs_ülu
 = 0;

675 
	gªs_imu…
 = 0;

677 #ifde‡
PORT_PER_BANK


679 
	gªs_memb™k
 = 0;

682 
	gªs_mem_p‹t_b™k
 = 0;

684 
	gªs_memb™k_˛u°î
;

689 
	gªs_memp‹t
 = 0;

692 
	gªs_ÂÆu
 = 0;

695 
	gªs_Âmu…
 = 0;

698 
	gªs_ülu_˛u°î
 = 0;

699 
	gªs_imu…_˛u°î
 = 0;

700 
	gªs_ÂÆu_˛u°î
 = 0;

701 
	gªs_Âmu…_˛u°î
 = 0;

704 
	gd©a_width
 = 64;

707 
powî_ªsu…_ty≥
 
powî
;

711 
	ga˘ivec⁄ãxts
;

713 
	gthªad_„tch
 = 
THREADFETCHLIMIT
;

714 
	gö°_thªad_„tch
 = 
FETCHLIMIT
;

715 
	gthªad_commô
 = 0;

717 
	#ICACHEBANKS
 8

	)

719 
	gib™k
 = 0;

722 
	g¥i‹ôy¶Ÿ
 = 0;

723 
	g¥i‹ôy
[
MAXTHREADS
];

726 
	gkey
[
MAXTHREADS
];

729 #ifde‡ 
PWR_CLUSTER


730 
cou¡î_t
 
	giqøm_ac˚ss_˛
[
CLUSTERS
];

731 
cou¡î_t
 
	gfqøm_ac˚ss_˛
[
CLUSTERS
];

732 
cou¡î_t
 
	giwakeup_ac˚ss_˛
[
CLUSTERS
];

733 
cou¡î_t
 
	gfwakeup_ac˚ss_˛
[
CLUSTERS
];

734 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

735 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

736 
cou¡î_t
 
	gúegfûe_ac˚ss_˛
[
CLUSTERS
];

737 
cou¡î_t
 
	g‰egfûe_ac˚ss_˛
[
CLUSTERS
];

738 
cou¡î_t
 
	gülu1_ac˚ss_˛
[
CLUSTERS
];

739 
cou¡î_t
 
	gülu2_ac˚ss_˛
[
CLUSTERS
];

740 
cou¡î_t
 
	gÁlu1_ac˚ss_˛
[
CLUSTERS
];

741 
cou¡î_t
 
	gÁlu2_ac˚ss_˛
[
CLUSTERS
];

742 
cou¡î_t
 
	gúesu…bus_ac˚ss_˛
[
CLUSTERS
];

743 
cou¡î_t
 
	g‰esu…bus_ac˚ss_˛
[
CLUSTERS
];

746 
cou¡î_t
 
	glsq_°‹e_d©a_ac˚ss
 = 0;

748 #ifde‡
DE_CENTRALIZED_POWER_BUG


749 
cou¡î_t
 
	glsq_¥eg_ac˚ss_˛
[
LSQ_PARTS
];

750 
cou¡î_t
 
	glsq_wakeup_ac˚ss_˛
[
LSQ_PARTS
];

751 
cou¡î_t
 
	glsq_ac˚ss_˛
[
LSQ_PARTS
];

752 
	gexåa_lsq
 = 0;

753 
	gexåa_lsq_cou¡
 = 0;

754 
	gdi•_°‹e_°Æl
 = 0;

756 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

757 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

758 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

761 #ifde‡
RES1_FULL_MASK


762 
	giq_˛_fuŒ_mask
;

763 
	gfq_˛_fuŒ_mask
;

764 
	gúeg_˛_fuŒ_mask
;

765 
	g‰eg_˛_fuŒ_mask
;

766 
	gªs1_˛_thrd_mask
[
MAXTHREADS
];

769 
cou¡î_t
 
	glsq_tŸÆ_p›_cou¡_cy˛e
 = 0;

770 
cou¡î_t
 
	glsq_num_p›_cou¡_cy˛e
 = 0;

771 
cou¡î_t
 
	gúegfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

772 
cou¡î_t
 
	gúegfûe_num_p›_cou¡_cy˛e
 = 0;

773 
cou¡î_t
 
	g‰egfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

774 
cou¡î_t
 
	g‰egfûe_num_p›_cou¡_cy˛e
 = 0;

775 
cou¡î_t
 
	gúesu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

776 
cou¡î_t
 
	gúesu…bus_num_p›_cou¡_cy˛e
 = 0;

777 
cou¡î_t
 
	g‰esu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

778 
cou¡î_t
 
	g‰esu…bus_num_p›_cou¡_cy˛e
 = 0;

780 #ifde‡
PROCESS_MODEL


781 
	gLa°Sh¨edAddªss
;

782 
	gLa°Sh¨edSize
;

787 
	#MAX_PCSTAT_VARS
 8

	)

788 
	gpc°©_√…
 = 0;

789 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

792 #ifde‡
TARGET_PISA


793 
	#IACOMPRESS
(
A
Ë\

	)

794 (
	gcom¥ess_iˇche_addrs
 ? ((((
	gA
Ë- 
	gcuºít
->
	gld_ãxt_ba£
Ë>> 1Ë+ cuºít->ld_ãxt_ba£Ë: (
A
))

795 
	#ISCOMPRESS
(
SZ
Ë\

	)

796 (
com¥ess_iˇche_addrs
 ? ((
SZ
) >> 1) : (SZ))

798 
	#IACOMPRESS
(
A
Ë(A)

	)

799 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

802 
bugcom∑t_mode
;

809 
	#FU_IALU_INDEX
 0

	)

810 
	#FU_IMULT_INDEX
 1

	)

811 
	#FU_MEMPORT_INDEX
 2

	)

812 
	#FU_FPALU_INDEX
 3

	)

813 
	#FU_FPMULT_INDEX
 4

	)

816 
ªs_desc
 
	gfu_c⁄fig
[] = {

824 {
I¡ALU
, 1, 1}

834 #i‡
deföed
(
MULT_DOES_ADD
)

835 {
I¡ALU
, 1, 1},

837 {
I¡MULT
, 3, 1},

838 {
I¡DIV
, 20, 19}

848 {
RdP‹t
, 2, 1},

849 {
WrP‹t
, 2, 1}

859 {
FlﬂtADD
, 2, 1},

860 {
FlﬂtCMP
, 2, 1},

861 {
FlﬂtCVT
, 2, 1}

871 {
FlﬂtMULT
, 4, 1},

872 {
FlﬂtDIV
, 12, 12},

873 {
FlﬂtSQRT
, 24, 24}

881 
	#PRED_BR_CHANGES
 0

	)

882 
	#PRED_JR_CHANGES
 0

	)

883 
	#DYNAMIC_CHANGE
 0

	)

884 
	#METRIC_CHANGE
 0

	)

885 
	#LINEAR_PHASE
 0

	)

887 #ifde‡
ALLOW_ANY_CLUSTER


888 
	#SMALLEST_CONFIG
 
CLUSTERS


	)

890 
	#SMALLEST_CONFIG
 4

	)

892 
	ga˘uÆ_˛u°îs
 = 
CLUSTERS
;

897 #ifde‡
PORT_PER_BANK


898 
	gCACHEPORTS
;

899 
	gRES_CACHEPORTS
;

900 
RES_CACHE_PORTS
;

901 
	ga˘uÆ_ˇchï‹ts
;

903 
	ga˘uÆ_ˇchï‹ts
;

906 #ifde‡ 
CENTRALIZED_STEER


907 
	gdi•©ch_˛u°î
 = 0;

909 #ifde‡
DISPATCH_CLUSTER


910 
	gdi•©ch_˛
[
CLUSTERS
];

915 #ifde‡
N_WAY_STEER


916 #i‚de‡
FIXED_N_WAY


918 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

922 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

924 
	g°ìr_˛u°î_thrd
[
MAXTHREADS
][
CLUSTERS
];

925 
	gabs_°ìr
 = 0;

926 
°ìr_öô
 ();

928 #ifde‡ 
CLUSTER_PRIORITY


929 
	g¥i‹ôy_˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

931 #ifde‡ 
THRD_PROFILE


932 #ifde‡
mix_8_f


933 
	gn_limô_thrd
[] = { 8, 8, 8, 8, 8, 4, 2, 2 };

935 #ifde‡
mix_8_i


936 
	gn_limô_thrd
[] = { 8, 8, 8, 2, 4, 2, 2, 4 };

938 #ifde‡
mix_8_if


939 
	gn_limô_thrd
[] = { 2, 2, 2, 4, 8, 8, 8, 8 };

941 #ifde‡
mix_8_m


942 
	gn_limô_thrd
[] = { 2, 2, 2, 2, 8, 8, 8, 8 };

944 #ifde‡
mix_4_i


945 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

947 #ifde‡
mix_4_f


948 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

950 #ifde‡
mix1_4_m


951 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

953 #ifde‡
mix2_4_m


954 
	gn_limô_thrd
[] = { 2, 2, 8, 8 };

957 
	gn_limô_thrd
[
MAXTHREADS
];

959 #ifde‡ 
CMC_START_N_WAY


960 
	gn_°¨t_cmc
[
MAXTHREADS
];

961 
	gn_°¨t_thrd_cmc
[
MAXTHREADS
];

963 
	gn_°¨t_thrd
[
MAXTHREADS
];

964 
	g√ighb‹_limô_thrd
[
MAXTHREADS
];

966 #ifde‡ 
N_WAY_ADAPT


967 
	gcﬁd_°¨t
 = 1;

968 
	gùc_ﬁd
[
MAXTHREADS
];

969 
	gn_limô_thrd_ﬁd
[
MAXTHREADS
];

970 
	gsim_num_ö¢_ﬁd
[
MAXTHREADS
];

971 
upd©e_n_limô
 ();

973 #ifde‡
THRD_PRIO_ADAPT


974 
¥i‹ôy_n_way
 ();

976 #ifde‡
ADAPT_LIMIT


977 
	gad≠t_limô_thrd
[
MAXTHREADS
];

980 #ifde‡
PDG_THRD_ADAPT


981 
pdg_thrd_n_way
 ();

983 #ifde‡
PDG_THRD_PRIO_ADAPT


984 
pdg_¥i‹ôy_n_way
 ();

986 #ifde‡
COMM_OPER_LIMIT


987 #ifde‡
AVG_LIMIT


988 
	gavg_high_limô
 = 
CLUSTERS
;

989 
	gavg_high_limô_cou¡
 = 0;

991 
	ghigh_limô_thrd
[
MAXTHREADS
];

992 
	ghigh_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

993 
	ghigh_limô_di°
[
CLUSTERS
 + 1];

996 #ifde‡
PDG_ADAPT


997 
pdg_n_way
 ();

999 
	gn_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

1000 
	gn_limô_di°
[
CLUSTERS
 + 1];

1003 #ifde‡ 
CLUSTER_PRIORITY


1005 
	g¥i‹ôy_˛
[
CLUSTERS
];

1008 #ifde‡ 
PRIORITY_STEER


1010 
	g¥i‹ôy_˛
[
CLUSTERS
];

1012 #ifde‡ 
COMMUNICATION_STEER


1013 #ifde‡
OPER_COMM_RATIO


1014 
	g˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

1015 
	g˛_num
[
MAXTHREADS
];

1019 #ifde‡ 
THRD_WAY_CACHE


1020 
	gn_ˇche_°¨t_thrd
[
MAXTHREADS
];

1021 
	gn_ˇche_limô_thrd
[
MAXTHREADS
];

1023 #ifde‡
N_WAY_CACHE_ADAPT


1024 #ifde‡
PER_THREAD


1025 
	govîÆl_n_ˇche_limô
;

1026 
	g°¨t_up
;

1027 
	gˇche_dl1_mis£s_ﬁd
[
MAXTHREADS
];

1028 
	gˇche_dl1_hôs_ﬁd
[
MAXTHREADS
];

1029 
	gˇche_dl1_miss_øã_ﬁd
[
MAXTHREADS
];

1030 
	gn_ˇche_limô_ﬁd
[
MAXTHREADS
];

1031 
	gn_ˇche_limô_di°
[
MAXTHREADS
][32];

1032 
	gn_ˇche_limô_cou¡
;

1034 #ifde‡ 
MEM_REF_PER


1035 
	gˇche_miss_°abÀ_thrd
[
MAXTHREADS
];

1038 
	govîÆl_n_ˇche_limô
;

1039 
	g°¨t_up
 = 1;

1040 
	gˇche_dl1_mis£s_ﬁd
;

1041 
	gˇche_dl1_hôs_ﬁd
;

1042 
	gˇche_dl1_miss_øã_ﬁd
;

1043 
	gn_ˇche_limô_ﬁd
;

1044 
	gn_ˇche_limô_di°
[32];

1045 
	gn_ˇche_limô_cou¡
;

1047 #ifde‡ 
MEM_REF


1048 
	gˇche_miss_°abÀ
;

1054 #ifde‡ 
MEM_REF_STAT


1055 
	gmem_ªf_thrd
[
MAXTHREADS
];

1056 
	gmem_ªf
;

1059 #ifde‡
CMP_STEER


1060 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1063 #ifde‡
N_WAY_STEER


1064 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1067 
	gabs_ªs_°ìr
 = 0;

1068 
	gnum_°ìr
 = 0;

1070 
	göt_di°û±hªsh
 = (Ë(
MIN_INSN_INT
 / 6);

1071 
	gdi°û±abÀ
[
ITABLESIZE
];

1072 
èg_id_t
 
	gdi°û±abÀègid
[
ITABLESIZE
];

1073 
	gdi°ûpcou¡î
[
ITABLESIZE
];

1074 
	gdi°ûpßm∂es
[
ITABLESIZE
];

1075 
	gdi°ûpcou¡
 = 0;

1076 
	göt_di°ûp
 = 0;

1078 
	gskù≥d_br
 = 0;

1079 
	gdi°ûp
 = 0;

1080 
	gdi°ûp_vÆid
 = 0;

1082 
	gö¢16
 = 0;

1083 
	gö¢4
 = 0;

1085 
	gö¢_öãrvÆ
 = 
MIN_INSN_INT
;

1086 
	gh_ªgs
[
NUM_H_REGS
];

1088 
	gnum_£¡
 = 0;

1089 
	gnum_åùs
 = 1;

1090 
	gœ°˛u°î
 = 0;

1091 
	gö°£qnum
 = 0;

1093 
	gπhªsh
;

1094 
	gbπhªsh
;

1095 
	gm°hªsh
;

1096 
	gim°hªsh
;

1097 
	gcy˘hªsh
;

1098 
	g∫oi£
;

1099 
	gb∫oi£
;

1100 
	gm¢oi£
;

1101 
	gim¢oi£
;

1103 
	gªgdñay
 = 0;

1104 
	gªgå™s
 = 0;

1105 
	gtŸÆœt
 = 0;

1106 
	gtŸlds
 = 0;

1108 
	gÊushes
 = 0;

1109 
	gnum_Êushes
 = 0;

1110 
	g‰ì_˛u°î
 = 0;

1123 
	#CYCNOISE
 10

	)

1124 
	#NUMCYCTHRESH
 5

	)

1126 
	#STATINT
 
MIN_INSN_INT


	)

1128 
	gIIQ_size
 = 
IQSIZE
;

1129 
	gFIQ_size
 = 
FQSIZE
;

1130 
	gIPREG_size
 = 
IPREGSIZE
;

1131 
	gFPREG_size
 = 
FPREGSIZE
;

1133 
	gIIQ_size_˛u°î
;

1134 
	gFIQ_size_˛u°î
;

1135 
	gIPREG_size_˛u°î
;

1136 
	gFPREG_size_˛u°î
;

1139 #ifde‡
RAW


1140 
	gøwq_size
 = 
RAWSIZE
;

1142 #ifde‡ 
COMM_BUFF


1143 
	gtimewödow
 = 
TIMEWINDOW
;

1146 
	gn⁄_¸ô
 = 0;

1147 
	g¸ô
 = 0;

1148 
	gèb2_c‹r
 = 0;

1149 
	gèb2_öc‹r
 = 0;

1150 
	gèb2_miss
 = 0;

1151 
	gèb_c‹r
 = 0;

1152 
	gèb_öc‹r
 = 0;

1153 
	gèb_miss
 = 0;

1154 
	gèbÀ_ègs
[
MAXTHREADS
][
TABLESIZE
];

1155 
	gèbÀ_num
[
MAXTHREADS
][
TABLESIZE
];

1156 
	gèbÀ2_ègs
[
MAXTHREADS
][
TABLE2SIZE
];

1157 
	gèbÀ2_num
[
MAXTHREADS
][
TABLE2SIZE
];

1160 
	#DEV_PERIOD
 10

	)

1162 
	#DEDICATED_ADDER
 0

	)

1164 
	#DED_ADDER_LAT_DIFF
 0

	)

1166 
	gadd_Æu
 = 0;

1167 
	gn⁄add_Æu
 = 0;

1169 
	#PERFECT
 0

	)

1170 
	#PERFECTLAT
 1

	)

1171 
	gnŸw¨m
 = 1;

1172 
	gcy˛echeck
;

1176 #ifde‡
RAW


1177 
	gøwq
;

1178 
	gøwq_˛
[
CLUSTERS
];

1179 
	gøwqªady
 = 0;

1180 
	gøwqªady_˛
[
CLUSTERS
];

1181 
	gøwq_fuŒ
 = 0;

1182 
	gøwq_°Æl
 = 0;

1184 
	giissueq
;

1185 
	gfissueq
;

1187 #ifde‡
PWR_WAKE


1188 
	gúódy
 = 0;

1189 
	g‰ódy
 = 0;

1190 
	glsqªady
 = 0;

1191 
	giuƒódy
 = 0;

1192 
	gfuƒódy
 = 0;

1193 
	glsquƒódy
 = 0;

1194 
	gIREADY_cou¡
 = 0;

1195 
	gFREADY_cou¡
 = 0;

1196 
	gLSQREADY_cou¡
 = 0;

1197 
	gúódy_˛
[
CLUSTERS
];

1198 
	g‰ódy_˛
[
CLUSTERS
];

1199 
	glsqªady_˛
[
CLUSTERS
];

1200 
	giuƒódy_˛
[
CLUSTERS
];

1201 
	gfuƒódy_˛
[
CLUSTERS
];

1204 #ifde‡ 
SPLIT_LSQ


1205 
	glsq_˛
[
LSQ_PARTS
];

1206 
	glsquƒódy_˛
[
CLUSTERS
];

1211 #ifde‡ 
PARTITIONED_LSQ


1212 
	glsq_∑π_b™k
;

1213 
	glsq_∑π_˛
 = 
CLUSTERS
 / 
LSQ_PARTS
;

1214 
	glsq_∑π_thrd
;

1217 
	gúegfûe
;

1218 
	g‰egfûe
;

1219 
	gúegfûe_˛
[
CLUSTERS
];

1220 
	gõxåa_˛
[
CLUSTERS
];

1221 
	g‰egfûe_˛
[
CLUSTERS
];

1222 
	g„xåa_˛
[
CLUSTERS
];

1223 
	giissueq_˛
[
CLUSTERS
];

1224 
	gfissueq_˛
[
CLUSTERS
];

1225 
	gnum_°‹eq
[
CLUSTERS
];

1226 
	gmax_°‹eq
[
CLUSTERS
];

1227 
	gdi•_dñay
 = 0;

1229 
	göchk
 = 0;

1230 
	göchk2
 = 0;

1231 
	göchk3
 = 0;

1232 
cou¡î_t
 
	göûpchk
 = 0;

1233 
	gcycchk
 = 0;

1234 
	gcycchk2
 = 0;

1235 
	gcycchk3
 = 0;

1236 
	gbrchk
 = 0;

1237 
	gªfchk
 = 0;

1238 
	gö¢chk±
 = 0;

1239 
	gcy˛echk±
 = 0;

1240 
	gbrchk±
 = 0;

1241 
	gªfchk±
 = 0;

1242 
	gimischk±
 = 0;

1243 
	gmischk±
 = 0;

1244 
	gdñchk±
 = 0;

1245 
	g‹igöÆ_bsize
 = 0;

1246 
	gˇche_dl1_£t_shi·
 = 0;

1247 
	gpha£
 = 
SMALLEST_CONFIG
;

1248 
	gcy˛e_cou¡
[
NUMPHASES
 + 1];

1249 
	g°abÀ_cou¡
 = 0;

1250 
	g°›_ex∂
 = 0;

1252 
	gõxåa
;

1253 
	g„xåa
;

1254 
	givÆid
;

1255 
	gfvÆid
;

1257 
	gtŸ_úeg
 = 0;

1258 
	gtŸ_‰eg
 = 0;

1259 
	gtŸ_õxt
 = 0;

1260 
	gtŸ_„xt
 = 0;

1261 
	gtŸ_ö⁄dup
 = 0;

1262 
	gtŸ_‚⁄dup
 = 0;

1264 
	gcomm_dñay
 = 0;

1265 
	gnum_sögÀ
 = 0;

1266 
	giss_°Æl
 = 0;

1267 
	g„_°Æl
 = 0;

1268 
	gn_ªady
 = 0;

1269 
	gnum_£mi_f
 = 0;

1270 
	gnum_qw°Æl
 = 0;

1271 
	gö_this
 = 0;

1272 
	gnum_‰ìd
 = 0;

1273 
	gtŸ_dñ
 = 0;

1274 
	gtŸ_dñ_bw
 = 0;

1275 
	gnum_bw_of
 = 0;

1276 
	gºobö
 = 0;

1278 
	gmö_addr
 = 5600000000ULL;

1279 
	gmax_addr
 = 0;

1281 
	g°ddev
 = 0;

1282 
	gb™0
 = 0;

1283 
	gb™1
 = 0;

1284 
	gb™2
 = 0;

1285 
	gb™3
 = 0;

1286 
	gbö_acc_tŸ
 = 0;

1287 
	gbö_mis_tŸ
 = 0;

1288 
	gbö_acc
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1289 
	gbö_lds
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1290 
	gbö_tﬁ
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1291 
	gbö_mis
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1302 
	gaddr0
, 
	gaddr1
, 
	gaddr2
;

1304 
	#HIST
 4

	)

1305 
	gnum_issued
 = 0;

1306 
	giss_øã
[
HIST
];

1307 
	gissue_øã
 = 0;

1308 
	gtﬁ
[4][3];

1309 
	gtﬁ0
 = 0;

1310 
	gtﬁ1
 = 0;

1311 
	gtﬁ2
 = 0;

1312 
	gtŸ_tﬁ
 = 0;

1313 
	gtŸ_tﬁ0
 = 0;

1314 
	gtŸ_tﬁ1
 = 0;

1315 
	gtŸ_tﬁ2
 = 0;

1316 
	gtŸ_tﬁ3
 = 0;

1317 
	gb™k_c⁄f
 = 0;

1318 
	g°_b™k_c⁄f
 = 0;

1320 #ifde‡
PORT_PER_BANK


1321 
	gmiss_num
[
MAXCACHEPORTS
];

1322 
	gªf_num
[
MAXCACHEPORTS
];

1324 
	gmiss_num
[
CACHEPORTS
];

1325 
	gªf_num
[
CACHEPORTS
];

1327 
	gªf_N
;

1329 
	gdi•_time
[
MD_TOTAL_REGS
];

1330 
	gli„time1
 = 0;

1331 
	gli„time2
 = 0;

1332 
	gwaôtime1
 = 0;

1333 
	gwaôtime2
 = 0;

1334 
	gc⁄swaôtime1
 = 0;

1335 
	gc⁄swaôtime2
 = 0;

1336 
	gnum1
 = 0;

1337 
	gnum2
 = 0;

1338 
	gnum11
 = 0;

1339 
	gnum22
 = 0;

1340 
	ghi°o
[122];

1342 
	gdi•_°Æls
 = 0;

1343 
	gˇu£1
 = 0;

1344 
	gˇu£2
 = 0;

1345 
	gˇu£3
 = 0;

1346 
	gˇu£4
 = 0;

1347 
	gˇu£5
 = 0;

1350 
	gIISSUEQ_cou¡
 = 0;

1351 
	gIISSUEQ_fcou¡
 = 0;

1352 
	gFISSUEQ_cou¡
 = 0;

1353 
	gFISSUEQ_fcou¡
 = 0;

1354 
	gIPREG_cou¡
 = 0;

1355 
	gIexåa_cou¡
 = 0;

1356 
	gIPREG_fcou¡
 = 0;

1357 
	gFPREG_cou¡
 = 0;

1358 
	gFexåa_cou¡
 = 0;

1359 
	gFPREG_fcou¡
 = 0;

1361 
	gúegfûe_˛_cou¡
[
CLUSTERS
];

1362 
	gõxåa_˛_cou¡
[
CLUSTERS
];

1363 
	g‰egfûe_˛_cou¡
[
CLUSTERS
];

1364 
	g„xåa_˛_cou¡
[
CLUSTERS
];

1365 
	giissueq_˛_cou¡
[
CLUSTERS
];

1366 
	gfissueq_˛_cou¡
[
CLUSTERS
];

1368 #ifde‡ 
SPLIT_LSQ


1369 
	glsq_˛_cou¡
[
LSQ_PARTS
];

1372 
	gno_di•_˛u°î
 = 0;

1373 
	gdi•_di°
[
TOTALFETCHLIMIT
 + 1];

1375 #ifde‡
RAW


1376 
	gøwq_cou¡
 = 0;

1377 
	gøwq_fcou¡
 = 0;

1378 
	gøwq_˛_cou¡
[
CLUSTERS
];

1379 
	gøwq_di°
[
RAWSIZE
 / 
CLUSTERS
];

1382 
	#P_TOTAL_REGS
 
IPREGSIZE
+
FPREGSIZE
+1

	)

1389 
	gp_tŸÆ_ªgs
 = 
P_TOTAL_REGS
;

1391 #ifde‡
RABMAP


1392 
	gö°_u£_exåa
[
P_TOTAL_REGS
];

1393 
	g…›m≠_exåa
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1394 
	g…›m≠_¥eg
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1397 
	gshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1398 
	g•ecshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1399 
	gshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1400 
	g•ecshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1401 
	gshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1402 
	g•ecshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1403 
	gshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1404 
	g•ecshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1405 
	gshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1406 
	g•ecshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1407 
	gÀv2¥ed1
[
LEV2SIZE
];

1408 
	gÀv2¥ed2
[
LEV2SIZE
];

1409 
	gÀv2¥ed3
[
LEV2SIZE
];

1410 
	gÀv2¥ed4
[
LEV2SIZE
];

1411 
	gÀv2¥ed5
[
LEV2SIZE
];

1413 
	gb™k_¥ed_c‹r
 = 0;

1414 
	gb™k_¥ed_wr⁄g
 = 0;

1415 
	gac_b™k_¥ed_c‹r
 = 0;

1416 
	gac_b™k_¥ed_wr⁄g
 = 0;

1418 #ifde‡
CACHE_MISS_STAT


1419 
	g•ec_rdb_miss
 = 0;

1420 
	g•ec_wrb_miss
 = 0;

1421 
	gcou¡_îr‹
 = 0;

1425 
powî_∑ømëî_c›y
 ();

1427 
bö_öô
 ();

1428 
ˇche_öô
 ();

1429 
ûp_öô
 ();

1430 
b™k¥ed_öô
 ();

1431 
ªg_öô
 ();

1432 
ˇche_ch™ge_c⁄fig
 ();

1433 
rög_‰ì
 ();

1434 
ˇche_upd©e
 ();

1435 
compuã_queue
 ();

1436 
ªg_cou¡
 ();

1437 
b¥ed_öô
 ();

1440 
sim∂e_ˇche_Êush
 (
ˇche_t
 *);

1441 
˛u°î_check
 (
md_addr_t
);

1442 
b™k_upd©e
 (
md_addr_t
, , );

1443 
°_rög_œt
 (
RUU_°©i⁄
 *);

1444 
rög_œt
 (, , , );

1445 
c›y_‰om
 ();

1446 
‰ìli°_ö£π
 (, );

1447 
check_RUU_LSQ_m©ch
 ();

1448 
check_ªg
 ();

1449 
powî_˛ór
 ();

1450 
sim_cyc
 ();

1451 
ˇlcuœã_¥i‹ôy
 ();

1452 
ö£π_fûlq
 (, 
md_addr_t
);

1454 #ifde‡
CYCLE_JUMP


1455 
cy˛e_jump
 ();

1456 
rög_‰ì_jump
 ();

1458 
gíîÆ_°©
 ();

1460 #ifde‡
EVENT_CACHE_UPDATE


1461 
mshr_öô
 ();

1469 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

1472 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

1475 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

1478 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

1481 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

1484 
cou¡î_t
 
	gsim_num_bønches
 = 0;

1487 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

1489 #ifde‡
TG


1490 
cou¡î_t
 
	gtg_øã
;

1491 
cou¡î_t
 
	gtŸÆ_∑ckës_gíî©i⁄
;

1492 
cou¡î_t
 
	gtŸÆ_ªad_∑ckës_gíî©i⁄
;

1493 
cou¡î_t
 
	gtŸÆ_wrôe_∑ckës_gíî©i⁄
;

1496 
cou¡î_t
 
	gsim_cy˛e
 = 0;

1497 
cou¡î_t
 
	gglobÆ_d©a_∑ckës_gíî©i⁄
 = 0;

1498 
cou¡î_t
 
	gTŸÆMëaPackësInAŒ
 = 0;

1499 
cou¡î_t
 
	gTŸÆD©aPackësInAŒ
 = 0;

1500 
cou¡î_t
 
	gTŸÆSyncD©aPackës
 = 0;

1501 
cou¡î_t
 
	gTŸÆSyncMëaPackës
 = 0;

1502 
cou¡î_t
 
	gMëaPackës_1
;

1503 
cou¡î_t
 
	gD©aPackës_1
;

1504 
cou¡î_t
 
	gw¨mupEndCy˛e
 = 0;

1505 
cou¡î_t
 
	gd©a_∑ckës_sync
 = 0;

1506 
cou¡î_t
 
	gmëa_∑ckës_sync
 = 0;

1507 
cou¡î_t
 
	gd©a_∑ckës_£ndög
[300][300];

1508 
cou¡î_t
 
	gmëa_∑ckës_£ndög
[300][300];

1509 
cou¡î_t
 
	glök_£r_œt
[300][300];

1510 
cou¡î_t
 
	gmëa_eví_ªq_˛o£
[300];

1511 
cou¡î_t
 
	gmëa_odd_ªq_˛o£
[300];

1512 
cou¡î_t
 
	g›tiˇl_d©a_∑ckës
 = 0;

1513 
cou¡î_t
 
	g›tiˇl_mëa_∑ckës
 = 0;

1514 
cou¡î_t
 
	gmesh_d©a_∑ckës
 = 0;

1515 
cou¡î_t
 
	gmesh_mëa_∑ckës
 = 0;

1517 
cou¡î_t
 
	g∑øŒñ_sim_cy˛e
 = 1;

1518 
	gdi•2
, 
	gdi•1
;

1521 
cou¡î_t
 
	gIFQ_cou¡
;

1522 
cou¡î_t
 
	gIFQ_fcou¡
;

1523 
cou¡î_t
 
	gRUU_cou¡
;

1524 
cou¡î_t
 
	gRUU_fcou¡
;

1525 
cou¡î_t
 
	gLSQ_cou¡
;

1526 
cou¡î_t
 
	gLSQ_fcou¡
;

1528 
cou¡î_t
 
	gpÊ2Hô
 = 0;

1529 
cou¡î_t
 
	gpÊ2SecMiss
 = 0;

1530 
cou¡î_t
 
	gpÊ2PrimMiss
 = 0;

1532 #ifde‡ 
COUNT_LSQ


1533 
	gn⁄_issue_LSQ_cou¡
;

1534 
	gn⁄_issue_LSQ_fcou¡
;

1538 
cou¡î_t
 
	gsim_övÆid_addrs
;

1545 
	g±ø˚_£q
 = 0;

1553 
	g¥ed_≥r„˘
 = 
FALSE
;

1556 *
	gb¥ed_•ec_›t
;

1558 { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

1561 
ˇche_t
 *
	gˇche_û1
[
CLUSTERS
];

1564 
ˇche_t
 *
	gˇche_û2
;

1567 
ˇche_t
 *
	gˇche_dl1
[
CLUSTERS
];

1570 
ˇche_t
 *
	gˇche_dl2
;

1573 
ˇche_t
 *
	gôlb
[
CLUSTERS
];

1576 
ˇche_t
 *
	gdéb
[
CLUSTERS
];

1581 #ifde‡
LOAD_PREDICTOR


1583 
b¥ed_t
 *
	gld¥ed
;

1584 
	gld¥ed_•ec_upd©e
 = 0;

1585 
	gld¥ed_cou¡
 = 0, 
	gld¥ed_hô
 = 0;

1586 
	govî_miss
 = 0, 
	gundî_miss
 = 0;

1587 
	gˇche_miss
;

1588 
	gld_miss_thrd
[
MAXTHREADS
];

1590 #ifde‡
PDG


1591 
	gnum_pdg
 = 0;

1592 
	gpdg_di°
[
MAXTHREADS
 + 1];

1597 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

1600 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

1601 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

1602 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

1606 
	#STATVAL
(
STAT
Ë\

	)

1607 ((
	gSTAT
)->
	gsc
 =
sc_öt
 \

1608 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

1609 : ((
STAT
)->
sc
 =
sc_uöt
 \

1610 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

1611 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

1612 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

1613 : (
∑nic
("bad stat class"), 0))))

1615 
	gClu°îSåu˘
[
CLUSTERS
][CLUSTERS];

1616 
ThrdAc˚ssP©ã∫
[
MAXTHREADS
][
CLUSTERS
];

1617 
FILE
 *
outFûe
;

1618 
≥riodic_ad≠èti⁄
 ();

1620 
	g°›_„tch
 = 0;

1621 
	gœ°SimCy˛e
 = 0;

1624 
	g°¨tTakögSèti°ics
 = 0;

1626 
	#PERFECTBANKPREDICTOR
 1

	)

1629 
	$öôClu°îInfo
 ()

1631 
i
, 
l
;

1633 
i
 = 0; i < 
CLUSTERS
; i++)

1634 
l
 = 0;Ü < 
CLUSTERS
;Ü++)

1635 
Clu°îSåu˘
[
i
][
l
] = -1;

1637 
	}
}

1639 
	gHavePröãd
 = 0;

1642 
	$PrötClu°îInfo
 ()

1644 
gg
, 
º
;

1646 
º
 = 0;Ñ∏< 
CLUSTERS
;Ñr++)

1648 
	`¥ötf
 ("\n");

1649 
gg
 = 0; gg < 
CLUSTERS
; gg++)

1650 
	`¥ötf
 ("%d", 
Clu°îSåu˘
[
º
][
gg
]);

1652 
	}
}

1657 
	$mem_ac˚ss_œãncy
 (
blk_sz
)

1659 #ifde‡
MEM_MOD


1660 
chunks
 = (
ˇche_dl1
[0]->
bsize
)*
mem_p‹t_num
/ 
mem_bus_width
;

1662 
chunks
 = (
blk_sz
 + (
mem_bus_width
 - 1)) / mem_bus_width;

1665 
	`as£π
 (
chunks
 > 0);

1667  ( 
mem_œt
[0] +

1668 – (()4/
mem_bus_•ìd
Ë* (
chunks
 - 1)));

1670 
	}
}

1672 #ifde‡
L2_COMM_LAT


1673 
	#L2_COMM_LAT_LOCATION
(
baddr
Ë(badd∏& (
CLUSTERS
 - 1))

	)

1681 
RUU_°©i⁄
 *
	grsCacheAc˚ss
 = 
NULL
;

1682 
FILE
 *
	gÂ_åa˚
;

1685 
dl1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1686 
md_addr_t
 
baddr
,

1687 
bsize
,

1688 
ˇche_blk_t
 *
blk
,

1689 
tick_t
 
now
,

1690 
thªadid


1691 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1692 , 
˛u°î


1696 
	gœt
;

1697 
	gwhich_thªad
, 
	gi
;

1698 
	gÊag
 = 0;

1699 
	gwhich_thªad
 = 
thªadid
;

1701 #ifde‡ 
STREAM_PREFETCHER


1703 
œunch_•
 (
baddr
, 
thªadid
);

1706 i‡(
	gˇche_dl2
)

1710 #ifde‡
DIRECTORY


1711 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, NULL, 
which_thªad
);

1713 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, 
which_thªad
);

1716 
	gdˇche2_ac˚ss
++;

1717 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1718 i‡(
	gcmd
 =
Ród
)

1719  
œt
;

1726 i‡(
	gcmd
 =
Ród
)

1727  
mem_ac˚ss_œãncy
 (
bsize
);

1733 
dl2_¥e„tch_a˘ive
;

1737 
dl2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1738 
md_addr_t
 
baddr
,

1739 
bsize
,

1740 
ˇche_blk_t
 *
blk
,

1741 
tick_t
 
now
,

1742 
thªadid


1743 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1744 , 
˛u°î


1748 #ifde‡ 
STREAM_PREFETCHER


1750 i‡(!
	gdl2_¥e„tch_a˘ive
)

1752 
ö£π_•
 (
baddr
, 
thªadid
);

1756 
	gœt
;

1761 #ifde‡
MEM_MOD


1762 
	g§c
, 
	gp‹t_num
, 
	gx
, 
	gy
;

1763 
	g§c
 = (
baddr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

1764 
	gx
 = (
§c
 /
mesh_size
);

1765 
	gy
 = (
§c
 %
mesh_size
);

1766 
	gp‹t_num
 = (
x
/(
mesh_size
/2))*2+
y
/(mesh_size/(
mem_p‹t_num
/2));

1767 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

1768 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()4/
mem_bus_•ìd
);

1770 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
);

1772  
	gœt
;

1780 
û1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1781 
md_addr_t
 
baddr
,

1782 
bsize
,

1783 
ˇche_blk_t
 *
blk
,

1784 
tick_t
 
now
,

1785 
thªadid


1786 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1787 , 
˛u°î


1791 
	gœt
 = 0;

1792 
	gm©chnum
 = 0;

1794 i‡(
	gˇche_û2
)

1797 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL,

1798 #ifde‡
DIRECTORY


1799  
NULL
,

1801 
thªadid
 
IF_L2_COMM_LAT_CL
 (
˛u°î
));

1803 
	gdˇche2_ac˚ss
++;

1804 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1806 i‡(
	gcmd
 =
Ród
)

1807  
œt
;

1809 
∑nic
 ("writesÅo instruction memoryÇot supported");

1814 i‡(
	gcmd
 =
Ród
)

1815  
mem_ac˚ss_œãncy
 (
bsize
);

1817 
∑nic
 ("writesÅo instruction memoryÇot supported");

1819  
	gœt
;

1824 
û2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1825 
md_addr_t
 
baddr
,

1826 
bsize
,

1827 
ˇche_blk_t
 *
blk
,

1828 
tick_t
 
now
,

1829 
thªadid


1830 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1831 , 
˛u°î


1837 
	gœt
 = 0;

1838 i‡(
	gcmd
 =
Ród
)

1840 #ifde‡
MEM_MOD


1841 
§c
, 
p‹t_num
, 
x
, 
y
;

1842 
	g§c
 = (
baddr
 >> 
ˇche_dl2
->
£t_shi·
Ë% 
numc⁄ãxts
;

1843 
	gx
 = (
§c
 /
mesh_size
);

1844 
	gy
 = (
§c
 %
mesh_size
);

1845 
	gp‹t_num
 = (
x
/(
mesh_size
/2))*2+
y
/(mesh_size/(
mem_p‹t_num
/2));

1846 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

1847 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()4/
mem_bus_•ìd
);

1848  
	gœt
;

1850  
mem_ac˚ss_œãncy
 (
bsize
);

1854 
∑nic
 ("writesÅo instruction memoryÇot supported");

1865 
ôlb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1866 
md_addr_t
 
baddr
,

1867 
bsize
,

1868 
ˇche_blk_t
 *
blk
,

1869 
tick_t
 
now
,

1870 
thªadid


1871 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1872 , 
˛u°î


1876 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

1879 
as£π
 (
phy_∑ge_±r
);

1882 *
	gphy_∑ge_±r
 = 0;

1885  
	géb_miss_œt
;

1890 
déb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1891 
md_addr_t
 
baddr
,

1892 
bsize
,

1893 
ˇche_blk_t
 *
blk
,

1894 
tick_t
 
now
,

1895 
thªadid


1896 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1897 , 
˛u°î


1901 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

1904 
as£π
 (
phy_∑ge_±r
);

1907 *
	gphy_∑ge_±r
 = 0;

1910  
	géb_miss_œt
;

1916 
	$sim_ªg_›ti⁄s
 (
›t_odb_t
 *
odb
)

1918 
	`›t_ªg_hódî
 (
odb
,

1923 
	`›t_ªg_uöt
 (
odb
, "-max:ö°", "maximumÇumbî o‡ö°'†tÿexecuã/thªad", (*Ë(&
max_ö°s
), 0,

1924  
TRUE
, 
NULL
);

1927 
	`›t_ªg_uöt
 (
odb
, "-max:b¨rõr", "maximumÇumbî o‡b¨rõr†tÿexecuã", (*Ë(&
max_b¨rõr
), 0,

1928  
TRUE
, 
NULL
);

1931 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:meshsize", "mesh sizêo‡thê√tw‹k", &
mesh_size
, 4,

1932  
TRUE
, 
NULL
);

1935 
	`›t_ªg_°rög_li°
 (
odb
, "-±ø˚", "gíî©êpùëø˚, i.e., <‚ame|°dout|°dîr> <ønge>", 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

1936  
FALSE
, 
NULL
, FALSE);

1939 
	`›t_ªg_nŸe
 (
odb
, "####### Network configuration #######\n");

1940 #ifde‡
OPTICAL_INTERCONNECT


1941 
	`›t_ªg_nŸe
 (
odb
, "Optical interconnect\n");

1943 #ifde‡
POPNET


1944 
	`›t_ªg_nŸe
 (
odb
, "Popnet interconnect\n");

1946 #ifde‡
CONF_BIT


1947 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation\n");

1949 #ifde‡
INV_ACK_CON


1950 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation for Invalidation\n");

1952 #ifde‡
WB_SPLIT


1953 
	`›t_ªg_nŸe
 (
odb
, "Write back split\n");

1955 #ifde‡
WB_SPLIT_NET


1956 
	`›t_ªg_nŸe
 (
odb
, "Write back split inÇetworkÜevel\n");

1958 #ifde‡
PSEUDO_SCHEDULE


1959 
	`›t_ªg_nŸe
 (
odb
, "InorderÖrobability-based scheduling (IRD)\n");

1961 #ifde‡
PSEUDO_SCHEDULE_REORDER


1962 
	`›t_ªg_nŸe
 (
odb
, "ReorderÖrobability-based scheduling (RRD)\n");

1964 #ifde‡
PSEUDO_SCHEDULE_DATA


1965 
	`›t_ªg_nŸe
 (
odb
, "Intelligent delay (IDD)\n");

1967 #ifde‡
L1_L2_CONF


1968 
	`›t_ªg_nŸe
 (
odb
, "L1ánd L2Ñeply conflictÑesolution\n");

1970 #ifde‡
ORDER_NODE


1971 
	`›t_ªg_nŸe
 (
odb
, "Ordering byÇode\n");

1973 #ifde‡
ORDER_ADDR


1974 
	`›t_ªg_nŸe
 (
odb
, "Ordering byáddr\n");

1976 
	`›t_ªg_nŸe
 (
odb
, "######Çetwork configurationÉnd ######\n");

1978 
	`›t_ªg_nŸe
 (
odb
,

1994 
	`›t_ªg_öt
 (
odb
, "-„tch:ifqsize", "ö°ru˘i⁄ fëch queuêsizê(ö in°s)", &
ruu_ifq_size
, 16,

1995  
TRUE
, 
NULL
);

1997 
	`›t_ªg_öt
 (
odb
, "-„tch:m∂©", "exå®bønch mis-¥edi˘i⁄Ü©ícy", &
ruu_bønch_≥«…y
, 7,

1998  
TRUE
, 
NULL
);

2000 
	`›t_ªg_öt
 (
odb
, "-„tch:•ìd", "•ìd o‡‰⁄t-íd o‡machöêªœtivêtÿexecuti⁄ c‹e", &
„tch_•ìd
, 1,

2001  
TRUE
, 
NULL
);

2005 
	`›t_ªg_nŸe
 (
odb
,

2016 
	`›t_ªg_°rög
 (
odb
, "-b¥ed", "bønchÖªdi˘‹Åy≥ {nŸèkí|èkí|≥r„˘|bimod|2Àv|comb|2bcgskew}", &
¥ed_ty≥
, "comb",

2017  
TRUE
, 
NULL
);

2019 
	`›t_ªg_Êag
 (
odb
, "-b¥ed:btb_u£_ma°îid", "u£ ma°îid i¿∂a˚ o‡thªadid whí i¡îa˘ög wôh BTB, givög youÖî-¥o˚s†ö°ód o‡≥r-thªadÉ¡rõs", &
b¥ed_btb_u£_ma°îid
, 
TRUE
,

2020  
TRUE
, 
NULL
);

2022 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:bimod", "bimodÆÖªdi˘‹ c⁄fig (<èbÀ size>)", 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

2023  
bimod_c⁄fig
,

2024  
TRUE
, 
NULL
, 
FALSE
);

2026 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2Àv", "2-ÀvñÖªdi˘‹ c⁄fig " "(<l1size> <l2size> <hi°_size> <x‹>)", 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

2027  
twﬁev_c⁄fig
,

2028  
TRUE
, 
NULL
, 
FALSE
);

2030 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:comb", "comböögÖªdi˘‹ c⁄fig (<mëa_èbÀ_size>)", 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

2031  
comb_c⁄fig
,

2032  
TRUE
, 
NULL
, 
FALSE
);

2035 
	`›t_ªg_öt
 (
odb
, "-di•1", "2bcgskewÅabÀ di•œ˚míàf‹Üev 1", &
di•1
, 0,

2036  
TRUE
, 
NULL
);

2039 
	`›t_ªg_öt
 (
odb
, "-di•2", "2bcgskewÅabÀ di•œ˚míàf‹Üev 2", &
di•2
, 0,

2040  
TRUE
, 
NULL
);

2043 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2bcgskew", "2Bc-gskewÖªdi˘‹ c⁄fig (<bim_size> <size> <bim_hi°_size> <g0_hi°_size> <g1_hi°_size> <mëa_hi°_size>)", 
twobcgskew_c⁄fig
, 
twobcgskew_√…
, &twobcgskew_nelt,

2044  
twobcgskew_c⁄fig
,

2045  
TRUE
, 
NULL
, 
FALSE
);

2048 
	`›t_ªg_öt
 (
odb
, "-b¥ed:øs", "ªtu∫áddªs†°ack sizê(0 f‹Çÿªtu∫ sèck)", &
øs_size
,Ñas_size,

2049  
TRUE
, 
NULL
);

2051 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:btb", "BTB c⁄fig (<num_£ts> <assocütivôy>)", 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

2052  
btb_c⁄fig
,

2053  
TRUE
, 
NULL
, 
FALSE
);

2055 
	`›t_ªg_°rög
 (
odb
, "-b¥ed:•ec_upd©e", "•ecuœtivê¥edi˘‹†upd©êö {ID|WB} (deÁu…Ç⁄-•ec)", &
b¥ed_•ec_›t
, 
NULL
,

2056  
TRUE
, 
NULL
);

2060 
	`›t_ªg_öt
 (
odb
, "-comböed2", "u£ 2 comböedÖªdi˘‹s?", &
comböed2
, 
FALSE
,

2061  
TRUE
, 
NULL
);

2063 
	`›t_ªg_öt
 (
odb
, "-hi°_imm", "upd©êbønch hi°‹y immedüãly?", &
hi°_imm
, 
FALSE
,

2064  
TRUE
, 
NULL
);

2068 
	`›t_ªg_öt
 (
odb
, "-decode:width", "ö°ru˘i⁄ decodêB/W (ö°s/cy˛e)", &
ruu_decode_width
, 5,

2069  
TRUE
, 
NULL
);

2071 #i‚de‡
REMOVE_MY_CODE


2073 
	`›t_ªg_öt
 (
odb
, "-thrdf:limô", "Numbî o‡thªad fëch (thrd/cy˛e<=8)", &
thªad_„tch
, 
THREADFETCHLIMIT
,

2074  
TRUE
, 
NULL
);

2076 
	`›t_ªg_öt
 (
odb
, "-ö°thrdf:width", "ö°ru˘i⁄ fëch B/wÖîÅhªad (ö°s/cy˛e<=decode_width)", &
ö°_thªad_„tch
, 8,

2077  
TRUE
, 
NULL
);

2080 
	`›t_ªg_öt
 (
odb
, "-ùªgf:size", "öãgîÖhysiˇ»ªgi°î fûêsizê’î clu°î)", &
IPREG_size_˛u°î
, 80,

2081  
TRUE
, 
NULL
);

2083 
	`›t_ªg_öt
 (
odb
, "-Âªgf:size", "ÊﬂtögÖoöàphysiˇ»ªgi°î fûêsizê’î clu°î)", &
FPREG_size_˛u°î
, 80,

2084  
TRUE
, 
NULL
);

2086 
	`›t_ªg_öt
 (
odb
, "-iqueue:size", "öãgî queuêsizê(ö°sË’î clu°î)", &
IIQ_size_˛u°î
, 32,

2087  
TRUE
, 
NULL
);

2089 
	`›t_ªg_öt
 (
odb
, "-fqueue:size", "ÊﬂtögÖoöàqueuêsizê(ö°sË’î clu°î)", &
FIQ_size_˛u°î
, 32,

2090  
TRUE
, 
NULL
);

2092 #ifde‡
RAW


2093 
	`›t_ªg_öt
 (
odb
, "-øwqueue:size", "ªmŸêac˚s†queuêsizê(ö°s)", &
øwq_size
, 
RAWSIZE
,

2094  
TRUE
, 
NULL
);

2097 #ifde‡
ISSUE_PER_CLUSTER


2098 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/˛u°î/cy˛e)", &
ruu_issue_width
, 4,

2099  
TRUE
, 
NULL
);

2101 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/cy˛e)", &
ruu_issue_width
, 4,

2102  
TRUE
, 
NULL
);

2105 
	`›t_ªg_Êag
 (
odb
, "-issue:ö‹dî", "ru¿pùñöêwôh in-‹dî issue", &
ruu_ö‹dî_issue
, 
FALSE
,

2106  
TRUE
, 
NULL
);

2108 
	`›t_ªg_Êag
 (
odb
, "-issue:wr⁄g∑th", "issuêö°ru˘i⁄†dow¿wr⁄gÉxecuti⁄Ö©hs", &
ruu_ö˛ude_•ec
, 
TRUE
,

2109  
TRUE
, 
NULL
);

2112 
	`›t_ªg_öt
 (
odb
, "-commô:width", "ö°ru˘i⁄ commô B/W (ö°s/thªad/cy˛e)", &
ruu_commô_width
, 4,

2113  
TRUE
, 
NULL
);

2116 
	`›t_ªg_öt
 (
odb
, "-ruu:size", "ªgi°î upd©êunô (RUUËsize", &
RUU_size
, 16,

2117  
TRUE
, 
NULL
);

2120 
	`›t_ªg_öt
 (
odb
, "-lsq:size", "lﬂd/°‹êqueuê(LSQËsizê’î clu°î)", &
LSQ_size_˛u°î
, 8,

2121  
TRUE
, 
NULL
);

2123 
	`›t_ªg_öt
 (
odb
, "-lq:size", "lﬂd queuê(LQËsize", &
m_shLQSize
, 8,

2124  
TRUE
, 
NULL
);

2126 
	`›t_ªg_öt
 (
odb
, "-sq:size", "°‹êqueuê(SQËsize", &
m_shSQSize
, 8,

2127  
TRUE
, 
NULL
);

2129 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:vdd", "checkî vdd", &
checkîVDD
, 0.6,

2130  
TRUE
, 
NULL
);

2132 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:‰eq", "checkîÑu¬ögáàwh© fø˘i⁄ o‡fuŒ fªq", &
checkîFªq
, 0.5,

2133  
TRUE
, 
NULL
);

2136 
	`›t_ªg_nŸe
 (
odb
,

2146 #ifdef 
EDA


2147 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl0", "l0 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl0_›t
, "dl0:128:32:4:l",

2148  
TRUE
, 
NULL
);

2150 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl0œt", "l0 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl0_œt
, 1,

2151  
TRUE
, 
NULL
);

2154 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl1", "l1 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl1_›t
, "dl1:128:32:4:l",

2155  
TRUE
, 
NULL
);

2157 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl1œt", "l1 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl1_œt
, 1,

2158  
TRUE
, 
NULL
);

2160 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl2", "l2 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_dl2_›t
, "ul2:1024:64:4:l",

2161  
TRUE
, 
NULL
);

2163 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl2œt", "l2 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl2_œt
, 6,

2164  
TRUE
, 
NULL
);

2166 #ifde‡
TG


2167 
	`›t_ªg_öt
 (
odb
, "-ˇche:tgøã", "åaffi¯gíî©i⁄Ñ©e", &
tg_øã
, 100,

2168  
TRUE
, 
NULL
);

2170 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û1", "l1 in° cachêc⁄fig, i.e., {<c⁄fig>|dl1|dl2|n⁄e}", &
ˇche_û1_›t
, "il1:512:32:1:l",

2171  
TRUE
, 
NULL
);

2173 
	`›t_ªg_nŸe
 (
odb
,

2183 
	`›t_ªg_öt
 (
odb
, "-ˇche:û1œt", "l1 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û1_œt
, 1,

2184  
TRUE
, 
NULL
);

2186 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û2", "l2 in°ru˘i⁄ cachêc⁄fig, i.e., {<c⁄fig>|dl2|n⁄e}", &
ˇche_û2_›t
, "dl2",

2187  
TRUE
, 
NULL
);

2189 
	`›t_ªg_öt
 (
odb
, "-ˇche:û2œt", "l2 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û2_œt
, 6,

2190  
TRUE
, 
NULL
);

2192 #ifde‡
L2_COMM_LAT


2193 
	`›t_ªg_Êag
 (
odb
, "-ˇche:l2commœt", "whëhîÅÿhavê®di°ribuãd L2 wôh communiˇti⁄Ü©ícõ†added", &
l2_comm_œt_íabÀd
, 
FALSE
, 
TRUE
, 
NULL
);

2196 
	`›t_ªg_Êag
 (
odb
, "-ˇche:Êush", "Êush cache†⁄ sy°em cÆls", &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

2198 
	`›t_ªg_Êag
 (
odb
, "-ˇche:icom¥ess", "c⁄vîà64-bô in°áddªs£†tÿ32-bô in°ÉquivÆíts", &
com¥ess_iˇche_addrs
, 
FALSE
,

2199  
TRUE
, 
NULL
);

2202 
	`›t_ªg_öt_li°
 (
odb
, "-mem:œt", "mem‹yác˚s†œãncy (<fú°_chunk> <öãr_chunk>)", 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

2203  
TRUE
, 
NULL
, 
FALSE
);

2205 
	`›t_ªg_öt
 (
odb
, "-mem:width", "mem‹yác˚s†bu†width (ö byãs)", &
mem_bus_width
, 8,

2206  
TRUE
, 
NULL
);

2207 
	`›t_ªg_Êﬂt
 (
odb
, "-mem:•ìd", "mem‹yác˚s†bu†•ìd (ö GHz)", &
mem_bus_•ìd
, 1,

2208  
TRUE
, 
NULL
);

2209 
	`›t_ªg_öt
 (
odb
, "-mem:p‹ts", "mem‹yác˚s†p‹ànumbî", &
mem_p‹t_num
, 4,

2210  
TRUE
, 
NULL
);

2213 
	`›t_ªg_°rög
 (
odb
, "-éb:ôlb", "ö°ru˘i⁄ TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

2215 
	`›t_ªg_°rög
 (
odb
, "-éb:déb", "d©®TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

2217 
	`›t_ªg_öt
 (
odb
, "-éb:œt", "ö°/d©®TLB mis†œãncy (ö cy˛es)", &
éb_miss_œt
, 30,

2218  
TRUE
, 
NULL
);

2220 #ifde‡
NET_ALGR


2224 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:ªc_Ægr", "ª˚ivîálg‹ism f‹Çëw‹k", &
√tw‹k_ª˚ivî
, 0,

2225  
TRUE
, 
NULL
);

2226 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:√t_Ægr", "c⁄Êi˘i⁄álg‹ism f‹Çëw‹k", &
√tw‹k_c⁄Êi˘
, 0,

2227  
TRUE
, 
NULL
);

2231 
	`›t_ªg_öt
 (
odb
, "-ªs:ülu", "tŸÆÇumbî o‡öãgî ALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ülu_˛u°î
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

2232  
TRUE
, 
NULL
);

2234 #i‚de‡
ALU_MERGE


2235 
	`›t_ªg_öt
 (
odb
, "-ªs:imu…", "tŸÆÇumbî o‡öãgî mu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_imu…_˛u°î
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

2236  
TRUE
, 
NULL
);

2239 
	`›t_ªg_öt
 (
odb
, "-maxThrds", "Maximum Numbî o‡Thªad†AŒowed", &
mè_maxthªads
, 1, 
TRUE
, 
NULL
);

2241 
	`›t_ªg_Êag
 (
odb
, "-Cohîít_Cache", "CohîíàCache", &
COHERENT_CACHE
, 1, 
TRUE
, 
NULL
);

2243 
	`›t_ªg_Êag
 (
odb
, "-MSI_¥Ÿ", "MSI PrŸocﬁ", &
MSI
, 0, 
TRUE
, 
NULL
);

2245 
	`›t_ªg_Êag
 (
odb
, "-SPEC", "SPEC Bíchm¨ks", &
•ec_bíchm¨ks
, 1, 
TRUE
, 
NULL
);

2247 #ifde‡ 
PORT_PER_BANK


2248 
	`›t_ªg_öt
 (
odb
, "-ªs:memb™k", "numbî o‡d©®ˇchêb™k†avaûabÀ (≥∏Clu°îÅÿCPU)", &
ªs_memb™k_˛u°î
, 2,

2249  
TRUE
, 
NULL
);

2251 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (≥∏b™k)", &
ªs_mem_p‹t_b™k
, 1,

2252  
TRUE
, 
NULL
);

2254 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (tÿCPU)", &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

2255  
TRUE
, 
NULL
);

2258 
	`›t_ªg_öt
 (
odb
, "-ªs:ÂÆu", "tŸÆÇumbî o‡ÊﬂtögÖoöàALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ÂÆu_˛u°î
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

2259  
TRUE
, 
NULL
);

2261 #i‚de‡
ALU_MERGE


2262 
	`›t_ªg_öt
 (
odb
, "-ªs:Âmu…", "tŸÆÇumbî o‡ÊﬂtögÖoöàmu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_Âmu…_˛u°î
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

2263  
TRUE
, 
NULL
);

2266 
	`›t_ªg_°rög_li°
 (
odb
, "-pc°©", "¥ofûê°©(sËagaö°Åexàaddr'†(mu… u£†ok)", 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

2267  
FALSE
, 
NULL
, 
TRUE
);

2269 
	`›t_ªg_Êag
 (
odb
, "-bugcom∑t", "›î©êö backw¨d-com∑tibÀ bug†modê(f‹Åe°ög o∆y)", &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

2271 
	`›t_ªg_öt
 (
sim_odb
, "-hŸ•Ÿ:ßm∂ög_ötvl", "how m™y cy˛e†bëwì¿ˇŒ†tÿupd©e_hŸ•Ÿ_°©s", &
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
,

2272  10000, 
FALSE
, 
NULL
);

2274 
	`›t_ªg_öt
 (
odb
, "-øy:dißbÀd", "øyá˘ive", &
dißbÀ_øy
, 1,

2275  
TRUE
, 
NULL
);

2277 
	`˛u°î_ªg_›ti⁄s
 (
odb
);

2278 
	`hŸ•Ÿ_ªg_›ti⁄s
 (
odb
);

2281 #ifde‡
MC


2282 
	`√tw‹k_ªg_›ti⁄s
 (
odb
);

2284 #ifde‡
OPTICAL_INTERCONNECT


2285 
	`›tiˇl_›ti⁄s
 (
odb
);

2288 
	}
}

2292 
	$sim_check_›ti⁄s
 (
›t_odb_t
 *
odb
,

2293 
¨gc
, **
¨gv
)

2295 
«me
[128], 
c
;

2296 
n£ts
, 
bsize
, 
assoc
;

2298 
i
;

2299 
c⁄ãxt
 *
cuºít
;

2301 #ifde‡
LOAD_PREDICTOR


2303 
ld¥ed
 = 
	`b¥ed_¸óã
 (
LDPªd2bô
,

2304  
bimod_c⁄fig
[0],

2316 #ifde‡
ISU_N2


2317 i‡(
ruu_issue_width
 < 1)

2318 
	`Áèl
 ("issue width must beÖositiveÇon-zero");

2320 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width - 1)) != 0)

2321 
	`Áèl
 ("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

2326 
IIQ_size
 = 
IIQ_size_˛u°î
;

2327 
FIQ_size
 = 
FIQ_size_˛u°î
;

2328 
IPREG_size
 = 
IPREG_size_˛u°î
;

2329 
FPREG_size
 = 
FPREG_size_˛u°î
;

2331 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2333 i‡(
IIQ_size
 < 1)

2334 
	`Áèl
 ("integer queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2336 i‡(
FIQ_size
 < 1)

2337 
	`Áèl
 ("floatingÖoint queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2339 #i‚de‡
REG_RENAME_CONFIGUARE


2340 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2343 i‡(
IPREG_size
 < 1)

2344 
	`Áèl
 ("integerÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2346 i‡(
FPREG_size
 < 1)

2347 
	`Áèl
 ("floatingÖointÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2349 #ifde‡
RAW


2350 
øwq_size
 = 
IIQ_size
;

2351 i‡(
øwq_size
 < 1 ||Ñawq_sizê> 
RAWSIZE
)

2352 
	`Áèl
 ("ªmŸêac˚s†queuê(%dËmu° bêposôivên⁄-zîÿ™dÜes†th™ RAWSIZE (%d)", 
øwq_size
, 
RAWSIZE
);

2355 i‡(
ruu_commô_width
 < 1)

2356 
	`Áèl
 ("commit width must beÖositiveÇon-zero");

2358 i‡(
RUU_size
 < 2 || (RUU_sizê> 
RUUSIZE
))

2359 
	`Áèl
 ("RUU sizêmu° bê®posôivênumbî > 1ánd < %d", 
RUUSIZE
);

2361 
LSQ_size
 = 
LSQ_size_˛u°î
;

2363 i‡(
LSQ_size
 < 2 || (LSQ_sizê> 
LSQSIZE
))

2364 
	`Áèl
 ("LSQ sizêmu° bê®posôivênumbî > 1ánd < %d", 
LSQSIZE
);

2366 #ifdef 
EDA


2368 i‡(!
	`my°ricmp
 (
ˇche_dl0_›t
, "none"))

2370 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2371 
ˇche_dl0
[
i
] = 
NULL
;

2375 i‡(
	`ssˇnf
 (
ˇche_dl0_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2376 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2378 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

2380 
ˇche_dl0
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2381  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2382 
dl0_ac˚ss_‚
, 
ˇche_dl0_œt
, 
i
);

2383 #ifde‡
CACHE_SET_STAT


2384 i‡(
ˇche_dl0
[
i
]->
n£ts
 > 
MAXCACHESET
)

2385 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2392 i‡(!
	`my°ricmp
 (
ˇche_dl1_›t
, "none"))

2395 i‡(
	`°rcmp
 (
ˇche_dl2_›t
, "none"))

2396 
	`Áèl
 ("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

2397 
ˇche_dl2
 = 
NULL
;

2401 i‡(
	`ssˇnf
 (
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2402 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2404 
i
 = 0; i < 
CLUSTERS
; i++)

2406 
ˇche_dl1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2407  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2408 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
, 
i
);

2410 #ifde‡
CACHE_SET_STAT


2411 i‡(
ˇche_dl1
[
i
]->
n£ts
 > 
MAXCACHESET
)

2412 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2415 
ˇche_dl1_£t_shi·
 = 
ˇche_dl1
[0]->
£t_shi·
;

2416 
‹igöÆ_bsize
 = 
bsize
;

2418 i‡(!
	`my°ricmp
 (
ˇche_dl2_›t
, "none"))

2419 
ˇche_dl2
 = 
NULL
;

2422 i‡(
	`ssˇnf
 (
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2423 
	`Áèl
 ("badÜ2 D-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2425 
ˇche_dl2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2426  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2427 
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
, -1);

2432 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "none"))

2434 
ˇche_û1
[0] = 
NULL
;

2437 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2438 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2439 
ˇche_û2
 = 
NULL
;

2441 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl1"))

2444 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2445 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2446 
ˇche_û2
 = 
NULL
;

2448 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl2"))

2450 i‡(!
ˇche_dl2
)

2451 
	`Áèl
 ("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

2452 
ˇche_û1
[0] = 
ˇche_dl2
;

2455 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2456 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2457 
ˇche_û2
 = 
NULL
;

2461 i‡(
	`ssˇnf
 (
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2462 
	`Áèl
 ("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2464 
i
 = 0; i < 
CLUSTERS
; i++)

2466 
ˇche_û1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2467  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2468 
û1_ac˚ss_‚
, 
ˇche_û1_œt
, 
i
);

2471 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "none"))

2472 
ˇche_û2
 = 
NULL
;

2473 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "dl2"))

2475 i‡(!
ˇche_dl2
)

2476 
	`Áèl
 ("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

2477 
ˇche_û2
 = 
ˇche_dl2
;

2481 i‡(
	`ssˇnf
 (
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2482 
	`Áèl
 ("badÜ2 I-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2484 
ˇche_û2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2485  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2486 
û2_ac˚ss_‚
, 
ˇche_û2_œt
, -1);

2491 
i
 = 0; i < 
CLUSTERS
; i++)

2493 i‡(
	`ssˇnf
 (
ôlb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2494 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2496 
ôlb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2497   (
md_addr_t
), 
assoc
,

2498 
	`ˇche_ch¨2pﬁicy
 (
c
), 
ôlb_ac˚ss_‚
,

2499  1, 
i
);

2502 
i
 = 0; i < 
CLUSTERS
; i++)

2504 i‡(
	`ssˇnf
 (
déb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2505 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2506 
déb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2507   (
md_addr_t
), 
assoc
,

2508 
	`ˇche_ch¨2pﬁicy
 (
c
), 
déb_ac˚ss_‚
,

2509  1, 
i
);

2512 i‡(
ˇche_dl1_œt
 < 1)

2513 
	`Áèl
 ("l1 data cacheÜatency must be greaterÅhan zero");

2515 i‡(
ˇche_dl2_œt
 < 1)

2516 
	`Áèl
 ("l2 data cacheÜatency must be greaterÅhan zero");

2518 i‡(
ˇche_û1_œt
 < 1)

2519 
	`Áèl
 ("l1 instruction cacheÜatency must be greaterÅhan zero");

2521 i‡(
ˇche_û2_œt
 < 1)

2522 
	`Áèl
 ("l2 instruction cacheÜatency must be greaterÅhan zero");

2524 i‡(
mem_√…
 != 2)

2525 
	`Áèl
 ("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

2527 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

2528 
	`Áèl
 ("all memoryáccessÜatencies must be greaterÅhan zero");

2530 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width - 1)) != 0)

2531 
	`Áèl
 ("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

2533 i‡(
éb_miss_œt
 < 1)

2534 
	`Áèl
 ("TLB missÜatency must be greaterÅhan zero");

2536 
ªs_ülu
 = 
ªs_ülu_˛u°î
 * 
CLUSTERS
;

2538 i‡(
ªs_ülu
 < 1)

2539 
	`Áèl
 ("number of integer ALU's must be greaterÅhan zero");

2540 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

2541 
	`Áèl
 ("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

2543 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

2545 #i‚de‡
ALU_MERGE


2546 
ªs_imu…
 = 
ªs_imu…_˛u°î
 * 
CLUSTERS
;

2547 i‡(
ªs_imu…
 < 1)

2548 
	`Áèl
 ("number of integer multiplier/dividers must be greaterÅhan zero");

2549 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

2550 
	`Áèl
 ("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

2551 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

2554 #ifde‡
PORT_PER_BANK


2555 
ªs_memb™k
 = 
ªs_memb™k_˛u°î
 * 
CLUSTERS
;

2557 i‡(
ªs_memb™k
 < 1)

2558 
	`Áèl
 ("number of memory system banks must be greaterÅhan zero");

2561 #ifde‡ 
PARTITIONED_LSQ


2562 
lsq_∑π_b™k
 = 
ªs_memb™k
 / 
LSQ_PARTS
;

2564 i‡(
ªs_mem_p‹t_b™k
 < 1)

2565 
	`Áèl
 ("number of memory systemÖorts/bank must be greaterÅhan zero");

2566 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAX_INSTS_PER_CLASS
)

2567 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2568 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAXCACHEPORTS
)

2569 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAXCACHEPORTS");

2570 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

2572 i‡(
ªs_memp‹t
 < 1)

2573 
	`Áèl
 ("number of memory systemÖorts must be greaterÅhan zero");

2574 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

2575 
	`Áèl
 ("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2576 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

2579 
ªs_ÂÆu
 = 
ªs_ÂÆu_˛u°î
 * 
CLUSTERS
;

2580 i‡(
ªs_ÂÆu
 < 1)

2581 
	`Áèl
 ("number of floatingÖoint ALU's must be greaterÅhan zero");

2582 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

2583 
	`Áèl
 ("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

2584 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

2586 #i‚de‡
ALU_MERGE


2587 
ªs_Âmu…
 = 
ªs_Âmu…_˛u°î
 * 
CLUSTERS
;

2588 i‡(
ªs_Âmu…
 < 1)

2589 
	`Áèl
 ("number of floatingÖoint multiplier/dividers must be > zero");

2590 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

2591 
	`Áèl
 ("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

2592 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

2594 #ifde‡
TOKENB


2595 i‡(
tokíB
)

2596 
	`tc_öô
 (
MAXTHREADS
, 
ˇche_dl2
->
assoc
 * cache_dl2->
n£ts
, cache_dl2->
bsize
);

2597 i‡(
LSQ_PARTS
 !(
n_way_ˇche
 * 
MAXTHREADS
))

2598 
	`Áèl
 ("This only supports 1 cacheÖerÅhread");

2600 #ifde‡
MC


2601 
	`√tw‹k_check_›ti⁄s
 ();

2603 
	`˛u°î_check_›ti⁄s
 ();

2604 
	`öô_lök_des¸_èbÀs
 ();

2605 
	`öô_routög_èbÀ
 ();

2606 
	`¨bôøry_routög_èbÀ_öô
 ();

2607 
	}
}

2611 
	$sim_aux_c⁄fig
 (
FILE
 * 
°ªam
)

2614 
	}
}

2617 
cou¡î_t
 
	gtŸÆUpgødes
 = 0;

2618 
cou¡î_t
 
	gtŸÆNëUpgødes
 = 0;

2619 
cou¡î_t
 
	gtŸÆUpgødesUßbÀ
 = 0;

2620 
cou¡î_t
 
	gtŸÆUpgødesBíeficül
 = 0;

2621 
cou¡î_t
 
	glock_√tw‹k_ac˚ss
 = 0;

2623 
cou¡î_t
 
	gtŸÆNëWrôes
 = 0;

2624 
cou¡î_t
 
	gtŸÆWrôesUßbÀ
 = 0;

2625 
cou¡î_t
 
	gtŸÆWrôesBíeficül
 = 0;

2626 
cou¡î_t
 
	gex˛usive_somewhîe
 = 0;

2627 
cou¡î_t
 
	g‰⁄t_wrôe
 = 0;

2628 #ifde‡
EUP_NETWORK


2629 
cou¡î_t
 
	gEUP_íåy_fuŒ
 = 0;

2632 
cou¡î_t
 
	gtŸÆL2WrôeReqHôs
 = 0;

2633 
cou¡î_t
 
	gtŸÆL2WrôeReqNoSh¨î
 = 0;

2634 
cou¡î_t
 
	gtŸÆL2WrôeReqDúty
 = 0;

2635 
cou¡î_t
 
	gdñayL2WrôeReqDúty
 = 0;

2636 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨ed
 = 0;

2637 
cou¡î_t
 
	gdñayL2WrôeReqSh¨ed
 = 0;

2639 
cou¡î_t
 
	gtŸÆL2RódReqHôs
 = 0;

2640 
cou¡î_t
 
	gtŸÆL2RódReqNoSh¨î
 = 0;

2641 
cou¡î_t
 
	gtŸÆL2RódReqDúty
 = 0;

2642 
cou¡î_t
 
	gdñayL2RódReqDúty
 = 0;

2644 
cou¡î_t
 
	gtŸÆL2RódReqSh¨ed
 = 0;

2645 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨edWT
 = 0;

2646 
cou¡î_t
 
	gtŸÆL2WrôeReqDútyWT
 = 0;

2647 
cou¡î_t
 
	gtŸÆL2RódReqDútyWT
 = 0;

2649 
cou¡î_t
 
	gtŸÆL1LöePªfU£
 = 0;

2650 
cou¡î_t
 
	gtŸÆL1LöePªfNoU£
 = 0;

2651 
cou¡î_t
 
	gtŸÆL1LöeRódU£
 = 0;

2652 
cou¡î_t
 
	gtŸÆL1LöeRódNoU£
 = 0;

2653 
cou¡î_t
 
	gtŸÆL1LöeWrôeU£
 = 0;

2654 
cou¡î_t
 
	gtŸÆL1LöeWrôeNoU£
 = 0;

2656 
cou¡î_t
 
	gtŸÆL1LöeExlU£d
 = 0;

2657 
cou¡î_t
 
	gtŸÆL1LöeExlInv
 = 0;

2658 
cou¡î_t
 
	gtŸÆL1LöeExlDr›
 = 0;

2660 
cou¡î_t
 
	gtŸÆL2ReqPrimMiss
 = 0;

2661 
cou¡î_t
 
	gtŸÆL2ReqSecMiss
 = 0;

2662 
cou¡î_t
 
	gtŸÆL2ReqHô
 = 0;

2663 
cou¡î_t
 
	gtŸÆL2ReqInTøns
 = 0;

2664 
cou¡î_t
 
	gtŸÆL2OwnReqInTøns
 = 0;

2665 
cou¡î_t
 
	gtŸÆL2ReqInInv
 = 0;

2667 
cou¡î_t
 
	gdñayL2ReqPrimMiss
 = 0;

2668 
cou¡î_t
 
	gdñayL2ReqSecMiss
 = 0;

2669 
cou¡î_t
 
	gdñayL2ReqHô
 = 0;

2670 
cou¡î_t
 
	gdñayL2ReqInTøns
 = 0;

2671 
cou¡î_t
 
	gdñayL2OwnReqInTøns
 = 0;

2672 
cou¡î_t
 
	gdñayL2ReqInInv
 = 0;

2674 
cou¡î_t
 
	gtŸÆWrôeReq
 = 0;

2675 
cou¡î_t
 
	gtŸÆWrôeReqInv
 = 0;

2676 
cou¡î_t
 
	gtŸÆWrôeDñay
 = 0;

2677 
cou¡î_t
 
	gtŸÆWrôeInvDñay
 = 0;

2678 
cou¡î_t
 
	gtŸÆUpgødeReq
 = 0;

2679 
cou¡î_t
 
	gtŸÆUpgødeReqInv
 = 0;

2680 
cou¡î_t
 
	gtŸÆUpgødeDñay
 = 0;

2681 
cou¡î_t
 
	gtŸÆUpgødeInvDñay
 = 0;

2683 
cou¡î_t
 
	gcou¡N⁄AŒocRódE¨ly
 = 0;

2687 
	$sim_ªg_°©s
 (
°©_sdb_t
 *
sdb
)

2689 
i
, 
j
;

2692 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög c⁄si°ícyÑïœy in°ru˘i⁄s", &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

2693 
	`°©_ªg_cou¡î
 (
sdb
, "puª_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
puª_num_ö¢
,Öuª_num_ö¢, 
NULL
);

2694 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãd in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
tŸÆ_num_ö¢
,ÅŸÆ_num_ö¢, 
NULL
);

2695 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆB¨rõrs", "tŸÆÇumbî o‡b¨rõrs", &
TŸÆB¨rõrs
, 0, 
NULL
);

2696 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆLocks", "tŸÆÇumbî o‡locks", &
TŸÆLocks
, 0, 
NULL
);

2697 #ifdef 
EDA


2698 
	`°©_ªg_cou¡î
 (
sdb
, "puª_sync_ö¢", "tŸÆÇumbî o‡maöÅhªad syn¯ö°ru˘i⁄†commôãd", &
puª_sync_ö¢
,Öuª_sync_ö¢, 
NULL
);

2699 
	`°©_ªg_cou¡î
 (
sdb
, "puª_skt_ö¢", "tŸÆÇumbî o‡maöÅhªad skàö°ru˘i⁄†commôãd", &
puª_skt_ö¢
,Öuª_skt_ö¢, 
NULL
);

2701 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†commôãd", &
sim_num_ªfs
, 0, 
NULL
);

2702 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_lﬂds", "tŸÆÇumbî o‡lﬂd†commôãd", &
sim_num_lﬂds
, 0, 
NULL
);

2703 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_num_°‹es", "tŸÆÇumbî o‡°‹e†commôãd", "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

2704 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_bønches", "tŸÆÇumbî o‡bønche†commôãd", &
sim_num_bønches
, 0, 
NULL
);

2705 
	`°©_ªg_öt
 (
sdb
, "sim_ñ≠£d_time", "tŸÆ simuœti⁄Åimêö sec⁄ds", &
sim_ñ≠£d_time
, 0, 
NULL
);

2706 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_ö°_øã", "simuœti⁄ s≥ed (ö in°s/£c)", "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

2707 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†execuãd", &
sim_tŸÆ_ö¢
, 0, 
NULL
);

2708 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†execuãd", &
sim_tŸÆ_ªfs
, 0, 
NULL
);

2709 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_lﬂds", "tŸÆÇumbî o‡lﬂd†execuãd", &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

2710 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_tŸÆ_°‹es", "tŸÆÇumbî o‡°‹e†execuãd", "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

2711 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_bønches", "tŸÆÇumbî o‡bønche†execuãd", &
sim_tŸÆ_bønches
, 0, 
NULL
);

2713 
	`°©_ªg_cou¡î
 (
sdb
, "sim_cy˛e", "tŸÆ simuœti⁄Åimêö cy˛es", &
sim_cy˛e
, 0, 
NULL
);

2714 
	`°©_ªg_cou¡î
 (
sdb
, "ªÆSimCy˛e", "", &
ªÆSimCy˛e
, 0, 
NULL
);

2715 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_IPC", "ö°ru˘i⁄†≥∏cy˛e", "sim_num_ö¢ / sim_cy˛e", 
NULL
);

2716 
	`°©_ªg_f‹muœ
 (
sdb
, "ªÆSimIPC", "", "puª_num_ö¢ /ÑólSimCy˛e", 
NULL
);

2717 
	`°©_ªg_f‹muœ
 (
sdb
, "maöEf„˘iveIPC", "", "puª_num_ö¢ / (ªÆSimCy˛ê- maö_thªad_°Æl_cou¡)", 
NULL
);

2718 
	`°©_ªg_cou¡î
 (
sdb
, "num_of_övÆid©i⁄s", "Numbî_Of_VÆid©i⁄s", &
num_of_övÆid©i⁄s
, 0, 
NULL
);

2720 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

2721 
	`°©_ªg_cou¡î
 (
sdb
, "busU£d", "Numbî o‡time†bu†i†u£d", &
busU£d
, 0, 
NULL
);

2722 
	`°©_ªg_cou¡î
 (
sdb
, "busOccu∑ncy", "Occu∑ncy o‡bu†öÇumbî o‡cy˛es", &
busOccu∑ncy
, 0, 
NULL
);

2723 
	`°©_ªg_f‹muœ
 (
sdb
, "busOccu∑ncyPîCy˛e", "Bu†occu∑ncyÖî cy˛e", "busOccu∑ncy /ÑólSimCy˛e", 
NULL
);

2724 
	`°©_ªg_cou¡î
 (
sdb
, "°ÆlNoBusSlŸ", "°ÆlNoBusSlŸ", &
°ÆlNoBusSlŸ
, 0, 
NULL
);

2726 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_CPI", "cy˛e†≥∏ö°ru˘i⁄", "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

2727 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_exec_BW", "tŸÆ in°ru˘i⁄†(mis-•e¯+ commôãdË≥∏cy˛e", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2728 
	`°©_ªg_cou¡î
 (
sdb
, "ldIssueCou¡", "tŸÆÜd issuê©tmït", &
ldIssueCou¡
, 0, 
NULL
);

2729 #ifde‡
PULL_BACK


2730 
ch2
[32];

2732 
i
 = 0; i < 
numc⁄ãxts
; i++)

2734 
	`•rötf
 (
ch2
, "puŒbackCy˛eC¡_%d", 
i
);

2735 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
puŒbackCy˛eCou¡
[
i
], 0, 
NULL
);

2738 #ifde‡
DIRECTORY


2739 
	`°©_ªg_cou¡î
 (
sdb
, "max_lsq_num", "", &
LSQ_NUM_MORE_THAN_TWO
, 0, 
NULL
);

2740 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†öáŒ", &
TŸÆD©aPackësInAŒ
, 0, 
NULL
);

2741 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†öáŒ", &
TŸÆMëaPackësInAŒ
, 0, 
NULL
);

2742 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_sync_cou¡s", "tŸÆÇum o‡d©®syn¯∑ckë†öáŒ", &
TŸÆSyncD©aPackës
, 0, 
NULL
);

2743 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mëa_sync_cou¡s", "tŸÆÇum o‡më®syn¯∑ckë†öáŒ", &
TŸÆSyncMëaPackës
, 0, 
NULL
);

2744 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›tiˇl_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†ö o±iˇ»√tw‹k", &
›tiˇl_d©a_∑ckës
, 0, 
NULL
);

2745 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›tiˇl_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†ö o±iˇ»√tw‹k", &
›tiˇl_mëa_∑ckës
, 0, 
NULL
);

2746 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†ö meshÇëw‹k", &
mesh_d©a_∑ckës
, 0, 
NULL
);

2747 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†ö meshÇëw‹k", &
mesh_mëa_∑ckës
, 0, 
NULL
);

2748 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_evít_cou¡", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆevítcou¡num
, 0, 
NULL
);

2749 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_wb_óæy", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
wrôe_back_óæy
, 0, 
NULL
);

2750 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_¥e„tch
, 0, 
NULL
);

2751 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_fú°_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_fú°_¥e„tch
, 0, 
NULL
);

2752 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_£c_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_£c_¥e„tch
, 0, 
NULL
);

2753 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_u£fuŒ", "tŸÆÇum o‡u£fuŒ L1Öª„tch", &
L1_¥e„tch_u£fuŒ
, 0, 
NULL
);

2754 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªq_evít_cou¡", "tŸÆÇum o‡ªque°ÉvíàöôÆ cª©ed", &
tŸÆªqcou¡num
, 0, 
NULL
);

2755 
	`°©_ªg_cou¡î
 (
sdb
, "St‹eC⁄dôi⁄FaûNum", "TŸÆ st‹êc⁄dôi⁄Æ faûedÇum", &
St‹eC⁄dôi⁄FaûNum
, 0, 
NULL
);

2756 
	`°©_ªg_cou¡î
 (
sdb
, "lock_√tw‹k_ac˚ss", "", &
lock_√tw‹k_ac˚ss
, 0, 
NULL
);

2757 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆUpgødes
, 0, 
NULL
);

2758 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_evít_cou¡", "tŸÆÇum o‡mis†evíàötü»¸óãd", &
tŸÆmisscou¡num
, 0, 
NULL
);

2759 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆNëUpgødes
, 0, 
NULL
);

2760 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesUßbÀ", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesUßbÀ
, 0, 
NULL
);

2761 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesBíeficül", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesBíeficül
, 0, 
NULL
);

2762 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesU£2", "tŸÆÇumbî o‡upgøde†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôNo
, 0, 
NULL
);

2764 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆSyncd©a", "tŸÆÇumbî o‡d©®∑ckë†duêtÿsync", &
d©a_∑ckës_sync
, 0, 
NULL
);

2765 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆSyncmëa", "tŸÆÇumbî o‡më®∑ckë†duêtÿsync", &
mëa_∑ckës_sync
, 0, 
NULL
);

2767 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëWrôes", "tŸÆÇumbî o‡Wrôe†£í", &
tŸÆNëWrôes
, 0, 
NULL
);

2768 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesUßbÀ", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesUßbÀ
, 0, 
NULL
);

2769 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesBíeficül", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesBíeficül
, 0, 
NULL
);

2770 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesU£2", "tŸÆÇumbî o‡Wrôe†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôWM
, 0, 
NULL
);

2771 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNoEx˛usive", "tŸÆÇumbî o‡Wrôe†unußbÀ beˇu£ o‡ex˛usivêsomewhîêñ£", &
ex˛usive_somewhîe
, 0, 
NULL
);

2772 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆFr⁄tWrôe", "tŸÆÇumbî o‡Wrôe†unußvÀ beˇu£ o‡‰⁄àwrôe", &
‰⁄t_wrôe
, 0, 
NULL
);

2774 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqHôs", "tŸÆÇum o‡wrôêevíts", &
tŸÆL2WrôeReqHôs
, 0, 
NULL
);

2775 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqNoSh¨î", "tŸÆÇum o‡wrôêªq wôhÇÿsh¨îs", &
tŸÆL2WrôeReqNoSh¨î
, 0, 
NULL
);

2776 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDúty", "tŸÆÇum o‡wrôêªq wôh ju° o√ sh¨î", &
tŸÆL2WrôeReqDúty
, 0, 
NULL
);

2777 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqDúty", "Exå®dñayÅÿcom∂ëêwrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2WrôeReqDúty
, 0, 
NULL
);

2778 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDútyWT", "tŸÆÅime†wrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2WrôeReqDútyWT
, 0, 
NULL
);

2779 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨ed", "tŸÆÇum o‡wrôêªq wôh mu…ùÀ sh¨îs", &
tŸÆL2WrôeReqSh¨ed
, 0, 
NULL
);

2780 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqSh¨ed", "Exå®dñayÅÿcom∂ëêwrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
dñayL2WrôeReqSh¨ed
, 0, 
NULL
);

2781 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨edWT", "tŸÆÅime†wrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
tŸÆL2WrôeReqSh¨edWT
, 0, 
NULL
);

2783 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqHôs", "tŸÆÇum o‡RódÉvíts", &
tŸÆL2RódReqHôs
, 0, 
NULL
);

2784 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqNoSh¨î", "tŸÆÇum o‡RódÑeq wôhÇÿsh¨îs", &
tŸÆL2RódReqNoSh¨î
, 0, 
NULL
);

2785 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDúty", "tŸÆÇum o‡RódÑeq wôh ju° o√ sh¨î", &
tŸÆL2RódReqDúty
, 0, 
NULL
);

2786 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2RódReqDúty", "Exå®dñayÅÿcom∂ëêRódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2RódReqDúty
, 0, 
NULL
);

2787 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDútyWT", "tŸÆÅime†RódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2RódReqDútyWT
, 0, 
NULL
);

2788 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqSh¨ed", "tŸÆÇum o‡ªadÑeq wôh mu…ùÀ sh¨îs", &
tŸÆL2RódReqSh¨ed
, 0, 
NULL
);

2790 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfU£", "tŸÆ L1Üöê¥e„tche†u£ful", &
tŸÆL1LöePªfU£
, 0, 
NULL
);

2791 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfNoU£", "tŸÆ L1Üöê¥e„tche†nŸ u£ful", &
tŸÆL1LöePªfNoU£
, 0, 
NULL
);

2792 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódU£", "tŸÆ L1Üöêªad mis£†u£ful", &
tŸÆL1LöeRódU£
, 0, 
NULL
);

2793 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódNoU£", "tŸÆ L1Üöêªad mis£†nŸ u£ful", &
tŸÆL1LöeRódNoU£
, 0, 
NULL
);

2794 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeU£", "tŸÆ L1Üöêwrôêmis£†u£ful", &
tŸÆL1LöeWrôeU£
, 0, 
NULL
);

2795 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeNoU£", "tŸÆ L1Üöêwrôêmis£†nŸ u£ful", &
tŸÆL1LöeWrôeNoU£
, 0, 
NULL
);

2797 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlU£d", "tŸÆ L1ÜöêöÉx˛usivêmodêu£ful", &
tŸÆL1LöeExlU£d
, 0, 
NULL
);

2798 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlInv", "tŸÆ L1ÜöêöÉx˛usivêmodêövÆid©ed wôhouàu£", &
tŸÆL1LöeExlInv
, 0, 
NULL
);

2799 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlDr›", "tŸÆ L1ÜöêöÉx˛usivêmodêdr›ed wôhouàu£", &
tŸÆL1LöeExlDr›
, 0, 
NULL
);

2801 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqPrimMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
tŸÆL2ReqPrimMiss
, 0, 
NULL
);

2802 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqSecMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
tŸÆL2ReqSecMiss
, 0, 
NULL
);

2803 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqHô", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
tŸÆL2ReqHô
, 0, 
NULL
);

2804 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInTøns", "TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2ReqInTøns
, 0, 
NULL
);

2805 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2OwnReqInTøns", "TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2OwnReqInTøns
, 0, 
NULL
);

2806 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInInv", "TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
tŸÆL2ReqInInv
, 0, 
NULL
);

2808 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqPrimMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
dñayL2ReqPrimMiss
, 0, 
NULL
);

2809 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqSecMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
dñayL2ReqSecMiss
, 0, 
NULL
);

2810 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqHô", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
dñayL2ReqHô
, 0, 
NULL
);

2811 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
dñayL2ReqInTøns
, 0, 
NULL
);

2812 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2OwnReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
dñayL2OwnReqInTøns
, 0, 
NULL
);

2813 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInInv", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
dñayL2ReqInInv
, 0, 
NULL
);

2815 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆWrôeReq
, 0, 
NULL
);

2816 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆWrôeReqInv
, 0, 
NULL
);

2817 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆWrôeDñay
, 0, 
NULL
);

2818 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆWrôeInvDñay
, 0, 
NULL
);

2820 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆUpgødeReq
, 0, 
NULL
);

2821 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆUpgødeReqInv
, 0, 
NULL
);

2822 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆUpgødeDñay
, 0, 
NULL
);

2823 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆUpgødeInvDñay
, 0, 
NULL
);

2824 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDïídDñay", "Timê•íàö dïíd dñay f‹ upd©êªque°†tÿL2", &
Upd©eDïídCy˛e
, 0, 
NULL
);

2826 
	`°©_ªg_cou¡î
 (
sdb
, "cou¡N⁄AŒocRódE¨ly", "Numbî o‡time†®ªad mis†ªque° from L1 ha†bì¿£rvi˚dÉ¨ly wôhouàÆloˇti⁄", &
cou¡N⁄AŒocRódE¨ly
, 0, 
NULL
);

2827 #ifde‡
TG


2828 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_∑ckës_gíî©i⁄
, 0, 
NULL
);

2829 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªad_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_ªad_∑ckës_gíî©i⁄
, 0, 
NULL
);

2830 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_wrôe_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_wrôe_∑ckës_gíî©i⁄
, 0, 
NULL
);

2832 
	`°©_ªg_cou¡î
 (
sdb
, "WM_Miss", "", &
WM_Miss
, 0, 
NULL
);

2833 
	`°©_ªg_cou¡î
 (
sdb
, "WM_CÀ™", "", &
WM_CÀ™
, 0, 
NULL
);

2834 
	`°©_ªg_cou¡î
 (
sdb
, "WM_S", "", &
WM_S
, 0, 
NULL
);

2835 
	`°©_ªg_cou¡î
 (
sdb
, "WM_EM", "", &
WM_EM
, 0, 
NULL
);

2836 
	`°©_ªg_cou¡î
 (
sdb
, "WM_Sh¨dU£C⁄f", "", &
wrôe_sh¨ed_u£d_c⁄f
, 0, 
NULL
);

2838 
	`°©_ªg_cou¡î
 (
sdb
, "Sync_L2_miss", "", &
Sync_L2_miss
, 0, 
NULL
);

2839 
	`°©_ªg_cou¡î
 (
sdb
, "SyncIn°CacheAc˚ss", "", &
SyncIn°CacheAc˚ss
, 0, 
NULL
);

2840 
	`°©_ªg_cou¡î
 (
sdb
, "Te°CacheAc˚ss", "", &
Te°CacheAc˚ss
, 0, 
NULL
);

2841 
	`°©_ªg_cou¡î
 (
sdb
, "Te°SecCacheAc˚ss", "", &
Te°SecCacheAc˚ss
, 0, 
NULL
);

2842 
	`°©_ªg_cou¡î
 (
sdb
, "SëCacheAc˚ss", "", &
SëCacheAc˚ss
, 0, 
NULL
);

2843 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdRódMiss", "", &
SyncLﬂdRódMiss
, 0, 
NULL
);

2844 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdLRódMiss", "", &
SyncLﬂdLRódMiss
, 0, 
NULL
);

2845 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdHô", "", &
SyncLﬂdHô
, 0, 
NULL
);

2846 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdLHô", "", &
SyncLﬂdLHô
, 0, 
NULL
);

2847 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eCHô", "", &
SyncSt‹eCHô
, 0, 
NULL
);

2848 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eCWrôeMiss", "", &
SyncSt‹eCWrôeMiss
, 0, 
NULL
);

2849 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eCWrôeUpgøde", "", &
SyncSt‹eCWrôeUpgøde
, 0, 
NULL
);

2850 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eHô", "", &
SyncSt‹eHô
, 0, 
NULL
);

2851 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eWrôeMiss", "", &
SyncSt‹eWrôeMiss
, 0, 
NULL
);

2852 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eWrôeUpgøde", "", &
SyncSt‹eWrôeUpgøde
, 0, 
NULL
);

2853 
	`°©_ªg_cou¡î
 (
sdb
, "B¨St‹eWrôeMiss", "", &
B¨St‹eWrôeMiss
, 0, 
NULL
);

2854 
	`°©_ªg_cou¡î
 (
sdb
, "B¨St‹eWrôeUpgøde", "", &
B¨St‹eWrôeUpgøde
, 0, 
NULL
);

2855 
	`°©_ªg_f‹muœ
 (
sdb
, "ã°_hô_øtio", "", "SyncLﬂdHô / Te°CacheAc˚ss", 
NULL
);

2856 
	`°©_ªg_f‹muœ
 (
sdb
, "ã°_£c_hô_øtio", "", "SyncLﬂdLHô / Te°SecCacheAc˚ss", 
NULL
);

2857 
	`°©_ªg_f‹muœ
 (
sdb
, "£t_hô_øtio", "", "SyncSt‹eCHô / SëCacheAc˚ss", 
NULL
);

2859 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_fuŒ", "tŸÆÇumbî o‡lock fifÿovîÊow", &
lock_fifo_fuŒ
, 0, 
NULL
);

2860 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_wr⁄g", "tŸÆÇumbî o‡lock fifÿovîÊow", &
lock_fifo_wr⁄g
, 0, 
NULL
);

2861 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_wrôeback", "tŸÆÇumbî o‡lock fifÿovîÊow", &
lock_fifo_wrôeback
, 0, 
NULL
);

2862 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_bíefô", "tŸÆÇumbî o‡lock fifÿbíefô", &
lock_fifo_bíefô
, 0, 
NULL
);

2863 
	`°©_ªg_cou¡î
 (
sdb
, "L1_mshr_fuŒ", "tŸÆÇumbî o‡L1 msh∏ovîÊow", &
L1_mshr_fuŒ
, 0, 
NULL
);

2864 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_mshr", "tŸÆ sèŒ cy˛e†f‹ L1 msh∏ovîÊow", &
SèŒ_L1_mshr
, 0, 
NULL
);

2865 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ", "tŸÆÇumbî o‡L2 msh∏ovîÊow", &
L2_mshr_fuŒ
, 0, 
NULL
);

2866 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L2_mshr", "tŸÆ sèŒ cy˛e†f‹ L2 msh∏ovîÊow", &
SèŒ_L2_mshr
, 0, 
NULL
);

2867 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ_¥e„tch", "tŸÆÇumbî o‡L2 msh∏ovîÊow whíÖª„tch", &
L2_mshr_fuŒ_¥e„tch
, 0, 
NULL
);

2868 
	`°©_ªg_cou¡î
 (
sdb
, "L1_fifo_fuŒ", "tŸÆÇumbî o‡L1 fifÿovîÊow", &
L1_fifo_fuŒ
, 0, 
NULL
);

2869 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_fifo", "tŸÆ sèŒ cy˛e†f‹ L1 fifÿovîÊow", &
SèŒ_L1_fifo
, 0, 
NULL
);

2870 
	`°©_ªg_cou¡î
 (
sdb
, "Dú_fifo_fuŒ", "tŸÆÇumbî o‡dú fifÿovîÊow", &
Dú_fifo_fuŒ
, 0, 
NULL
);

2871 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_dú_fifo", "tŸÆ sèŒ cy˛e†f‹ dú fifÿovîÊow", &
SèŒ_dú_fifo
, 0, 
NULL
);

2872 
	`°©_ªg_cou¡î
 (
sdb
, "I≈ut_queue_fuŒ", "tŸÆÇumbî o‡öpuàqueuêovîÊow", &
I≈ut_queue_fuŒ
, 0, 
NULL
);

2873 
	`°©_ªg_cou¡î
 (
sdb
, "Ouçut_queue_fuŒ", "tŸÆÇumbî o‡ouçuàqueuêovîÊow", &
Ouçut_queue_fuŒ
, 0, 
NULL
);

2874 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_öput_queue", "tŸÆ sèŒ cy˛e†duêtÿöpuàqueuêovîÊow", &
SèŒ_öput_queue
, 0, 
NULL
);

2875 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_ouçut_queue", "tŸÆ sèŒ cy˛e†duêtÿouçuàqueuêovîÊow", &
SèŒ_ouçut_queue
, 0, 
NULL
);

2876 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_lﬂd_lök_sh¨ed", "tŸÆÜﬂdÜök sh¨ed", &
lﬂd_lök_sh¨ed
, 0, 
NULL
);

2877 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_lﬂd_lök_ex˛usive", "tŸÆÜﬂdÜök sh¨ed", &
lﬂd_lök_ex˛usive
, 0, 
NULL
);

2878 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆmissh™dÀtime
, 0, 
NULL
);

2879 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
«ck_cou¡î
, 0, 
NULL
);

2880 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
Êù_cou¡î
, 0, 
NULL
);

2881 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
L1_Êù_cou¡î
, 0, 
NULL
);

2882 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_ª∂y_bíefô", "tŸÆÇum o‡d©®ª∂y bíefô", &
e_to_m
, 0, 
NULL
);

2883 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_miss_h™dÀ_timê/ÅŸÆ_evít_cou¡", 
NULL
);

2884 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_ac˚ss", "tŸÆ mesh_√tw‹kác˚ss", &
tŸÆMeshH›Cou¡
, 0, 
NULL
);

2885 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_dñay", "tŸÆ mesh_√tw‹k dñay", &
tŸÆMeshH›Dñay
, 0, 
NULL
);

2886 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_mesh_√tw‹k_time", "cy˛e†≥∏mesh_√tw‹kác˚ss", "tŸÆ_mesh_√tw‹k_dñay /ÅŸÆ_mesh_√tw‹k_ac˚ss", 
NULL
);

2887 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_ac˚ss", "tŸÆ o±_√tw‹kác˚ss", &
tŸÆO±H›Cou¡
, 0, 
NULL
);

2888 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_dñay", "tŸÆ o±_√tw‹k dñay", &
tŸÆO±H›Dñay
, 0, 
NULL
);

2889 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_›t_√tw‹k_time", "cy˛e†≥∏›t_√tw‹kác˚ss", "tŸÆ_›t_√tw‹k_dñay /ÅŸÆ_›t_√tw‹k_ac˚ss", 
NULL
);

2890 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_loˇl_ˇche_ac˚ss", "tŸÆÜoˇ»dl2 cachêac˚s†numbî", &
loˇl_ˇche_ac˚ss
, 0, 
NULL
);

2891 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªmŸe_ˇche_ac˚ss", "tŸÆÑemŸêdl2 cachêac˚s†numbî", &
ªmŸe_ˇche_ac˚ss
, 0, 
NULL
);

2892 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_wb", "tŸÆÅwÿh›†övﬁve†duêtÿwrôêback", &
övﬁve_2_h›_wb
, 0, 
NULL
);

2893 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_touch", "tŸÆÅwÿh›†övﬁve†duêtÿtouch", &
övﬁve_2_h›_touch
, 0, 
NULL
);

2894 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s
, 0, 
NULL
);

2895 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s
, 0, 
NULL
);

2896 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves_wm", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_wm
, 0, 
NULL
);

2897 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves_wm", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_wm
, 0, 
NULL
);

2898 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_miss", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_miss
, 0, 
NULL
);

2899 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_miss", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_miss
, 0, 
NULL
);

2900 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_upgøde", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_upgøde
, 0, 
NULL
);

2901 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_upgøde", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_upgøde
, 0, 
NULL
);

2902 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_ªad", "tŸÆÖriv©êd©®f‹Ñód miss", &
d©a_¥iv©e_ªad
, 0, 
NULL
);

2903 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_wrôe", "tŸÆÖriv©êd©®f‹ wrôêmiss", &
d©a_¥iv©e_wrôe
, 0, 
NULL
);

2904 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_ªad", "tŸÆ sh¨ed d©®f‹Ñód miss", &
d©a_sh¨ed_ªad
, 0, 
NULL
);

2905 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_wrôe", "tŸÆ sh¨ed d©®f‹ wrôêmiss", &
d©a_sh¨ed_wrôe
, 0, 
NULL
);

2906 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_˛o£", "tŸÆÇumbî†o‡Æ»˛o£d c⁄sumîs", &
tŸÆ_Æl_˛o£
, 0, 
NULL
);

2907 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_nŸ_Æl_˛o£", "tŸÆÇumbî†o‡nŸáŒ clo£d c⁄sumîs", &
tŸÆ_nŸ_Æl_˛o£
, 0, 
NULL
);

2908 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_p_c_evíts", "tŸÆÖrodu˚∏™d c⁄sumî†evít†(shouldÉquÆÅÿ4 h›s)", &
tŸÆ_p_c_evíts
, 0, 
NULL
);

2909 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_c⁄sumîs", "tŸÆÇumbî†o‡c⁄sumîs", &
tŸÆ_c⁄sumîs
, 0, 
NULL
);

2910 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_ö_√ighb‹", "tŸÆÖackë†¨êöÇeighb‹hood", &
tŸÆ_∑ckës_ö_√ighb‹
, 0, 
NULL
);

2911 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_©_c‹√rs", "tŸÆÖackë†¨ê© c‹√rs", &
tŸÆ_∑ckës_©_c‹√rs
, 0, 
NULL
);

2912 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_Æmo°˛o£", "tŸÆÇumbî†o‡Æ»˛o£dánd c‹√∏c⁄sumîs", &
tŸÆ_Æl_Æmo°˛o£
, 0, 
NULL
);

2913 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_c⁄sumîs", "tŸÆ d©®∑ckë†o‡c⁄sumîs", &
tŸÆ_d©a_c⁄sumîs
, 0, 
NULL
);

2914 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_©_c‹√r", "tŸÆ d©®∑ckë†suµly fromáàc‹√rs", &
tŸÆ_d©a_©_c‹√r
, 0, 
NULL
);

2915 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_˛o£", "tŸÆ d©®∑ckë†¨êsuµlõd from clo£by sour˚s", &
tŸÆ_d©a_˛o£
, 0, 
NULL
);

2916 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_Ár", "tŸÆ d©®∑ckë†¨êsumµlõd from f¨ sour˚s", &
tŸÆ_d©a_Ár
, 0, 
NULL
);

2917 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_öside_≥r˚¡", "avîagêösidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_öside_≥r˚¡
, 0, 
NULL
);

2918 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_outside_≥r˚¡
, 0, 
NULL
);

2919 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_abs_≥r˚¡", "avîagêabsﬁuéy outsidê∑ckë†≥r˚¡(Á∏- c‹√r)", &
avîage_outside_abs_≥r˚¡
, 0, 
NULL
);

2920 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_c‹√r_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(c‹√r: should bêdivided byÅŸÆ_nŸ_Æl_˛os)", &
avîage_c‹√r_≥r˚¡
, 0, 
NULL
);

2921 #ifde‡
INV_ACK_CON


2922 
	`°©_ªg_doubÀ
 (
sdb
, "≥ndög_övÆid_cy˛es", "how m™y cy˛e†tÿövÆid©êthêˇchêlöe", &
≥ndög_övÆid_cy˛es
, 0, 
NULL
);

2956 #ifde‡
MC


2958 
	`›tiˇl_ªg_°©s
 (
sdb
);

2960 #ifde‡
OPTICAL_INTERCONNECT


2961 
	`›tiˇl_ªg_°©s
 (
sdb
);

2965 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_cou¡", "cumuœtivêIFQ occu∑ncy", &
IFQ_cou¡
, 0, 
NULL
);

2966 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_fcou¡", "cumuœtivêIFQ fuŒ cou¡", &
IFQ_fcou¡
, 0, 
NULL
);

2967 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_occu∑ncy", "avg IFQ occu∑ncy (ö¢'s)", "IFQ_cou¡ / sim_cy˛e", 
NULL
);

2968 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_øã", "avg IFQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2969 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_œãncy", "avg IFQ occu∑¡Ü©ícy (cy˛e's)", "ifq_occu∑ncy / ifq_øã", 
NULL
);

2970 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËIFQ wa†fuŒ", "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

2972 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_cou¡", "cumuœtivêRUU occu∑ncy", &
RUU_cou¡
, 0, 
NULL
);

2973 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_fcou¡", "cumuœtivêRUU fuŒ cou¡", &
RUU_fcou¡
, 0, 
NULL
);

2974 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_occu∑ncy", "avg RUU occu∑ncy (ö¢'s)", "RUU_cou¡ / sim_cy˛e", 
NULL
);

2975 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_øã", "avg RUU di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2976 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_œãncy", "avg RUU occu∑¡Ü©ícy (cy˛e's)", "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

2977 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËRUU wa†fuŒ", "RUU_fcou¡ / sim_cy˛e", 
NULL
);

2979 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_cou¡", "cumuœtivêLSQ occu∑ncy", &
LSQ_cou¡
, 0, 
NULL
);

2980 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_fcou¡", "cumuœtivêLSQ fuŒ cou¡", &
LSQ_fcou¡
, 0, 
NULL
);

2981 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_occu∑ncy", "avg LSQ occu∑ncy (ö¢'s)", "LSQ_cou¡ / sim_cy˛e", 
NULL
);

2982 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_øã", "avg LSQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

2983 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_œãncy", "avg LSQ occu∑¡Ü©ícy (cy˛e's)", "lsq_occu∑ncy /Üsq_øã", 
NULL
);

2984 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËLSQ wa†fuŒ", "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

2985 
	`°©_ªg_cou¡î
 (
sdb
, "dl2A˘uÆlyAc˚s£d", "", &
dl2A˘uÆlyAc˚s£d
, 0, 
NULL
);

2987 
	`°©_ªg_cou¡î
 (
sdb
, "¥e„tchLﬂd", "", &
m_sqPª„tchC¡
, 0, 
NULL
);

2989 
i
 = 0; i < 
numc⁄ãxts
; i++)

2991 
ch
[20], 
fm
[30], 
ch2
[20];

2993 
	`•rötf
 (
ch2
, "brRecovîy_%d", 
i
);

2994 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ wr⁄g bønches", &
brRecovîy
[
i
], 0, 
NULL
);

2996 
	`•rötf
 (
ch2
, "exåaIn¢_%d", 
i
);

2997 
	`°©_ªg_cou¡î
 (
sdb
, "exåaIn¢", "tŸÆÇumbî o‡wr⁄gÖ©h in¢Éxecuãd", &
exåaIn¢
[
i
], 0, 
NULL
);

3000 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

3002 
ch2
[20];

3004 #ifdef 
EDA


3005 
	`•rötf
 (
ch2
, "n⁄SktIn¢_%d", 
i
);

3006 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆ N⁄ skñë⁄ in°ru˘i⁄†execuãd", &
n⁄SktIn¢
[
i
], 0, 
NULL
);

3007 
	`•rötf
 (
ch2
, "ªcovîyCou¡_%d", 
i
);

3008 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "Recovîy cou¡", &
ªcovîyCou¡
[
i
], 0, 
NULL
);

3009 
	`•rötf
 (
ch2
, "°ÆlCC_BOQEm±y_%d", 
i
);

3010 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "C‹ª˘√s†c‹ê„tch sèŒ duêtÿBOQÉm±y", &
numBCQEm±y
[
i
], 0, 
NULL
);

3011 
	`•rötf
 (
ch2
, "tŸÆRñCE_%d", 
i
);

3012 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆ Dl0 cachêevi˘i⁄s.", &
tŸÆRñCE
[
i
], 0, 
NULL
);

3013 
	`•rötf
 (
ch2
, "numSyncIn°_%d", 
i
);

3014 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "TŸÆÇum o‡synchr⁄iz©i⁄ in°ru˘i⁄s", &
numSyncIn°
[
i
], 0, 
NULL
);

3018 
i
 = 0; i < 
MAXTHREADS
; i++)

3020 
ch2
[20];

3023 
	`•rötf
 (
ch2
, "thªad_sim_ö¢_%d", 
i
);

3024 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "≥∏thªad simÇum in¢", &
simIn¢
[
i
], 0, 
NULL
);

3025 
	`•rötf
 (
ch2
, "SèŒCou¡_%d", 
i
);

3026 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ sèŒ cou¡", &
¶ìpCou¡
[
i
], 0, 
NULL
);

3027 
	`•rötf
 (
ch2
, "quõn£Wakeup_%d", 
i
);

3028 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
quõn£Wakeup
[
i
], 0, 
NULL
);

3029 
	`•rötf
 (
ch2
, "£qC⁄sRïœy_%d", 
i
);

3030 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sRïœy
[
i
], 0, 
NULL
);

3031 
	`•rötf
 (
ch2
, "£qC⁄sIn¢Rïœy_%d", 
i
);

3032 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sIn¢Rïœy
[
i
], 0, 
NULL
);

3033 
	`•rötf
 (
ch2
, "ld°Reje˘i⁄Cou¡_%d", 
i
);

3034 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
ld°Reje˘i⁄Cou¡
[
i
], 0, 
NULL
);

3035 
	`•rötf
 (
ch2
, "TrueRïœy_%d", 
i
);

3036 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqNumLdRïœy
[
i
], 0, 
NULL
);

3038 
	`•rötf
 (
ch2
, "InvÆid©i⁄Rïœy_%d", 
i
);

3039 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
övÆid©i⁄_ª∂ay
[
i
], 0, 
NULL
);

3041 #ifde‡
RELAXED_CONSISTENCY


3042 
	`•rötf
 (
ch2
, "lﬂdLﬂdRïœy_%d", 
i
);

3043 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
lﬂdLﬂdRïœyCou¡
[
i
], 0, 
NULL
);

3045 
	`•rötf
 (
ch2
, "avgRUUsize_%d", 
i
);

3046 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgRUUsize
[
i
], 0, 
NULL
);

3047 
	`•rötf
 (
ch2
, "avgLQsize_%d", 
i
);

3048 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgLQsize
[
i
], 0, 
NULL
);

3049 
	`•rötf
 (
ch2
, "avgSQsize_%d", 
i
);

3050 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgSQsize
[
i
], 0, 
NULL
);

3051 
	`•rötf
 (
ch2
, "CommôSèŒ_%d", 
i
);

3052 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_commôSèŒ
[
i
], 0, 
NULL
);

3053 
	`•rötf
 (
ch2
, "TŸÆSèŒ_%d", 
i
);

3054 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_tŸÆSèŒ
[
i
], 0, 
NULL
);

3055 
	`•rötf
 (
ch2
, "RUUSèŒ_%d", 
i
);

3056 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_RUUFuŒ
[
i
], 0, 
NULL
);

3057 
	`•rötf
 (
ch2
, "LQSèŒ_%d", 
i
);

3058 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqLQFuŒ
[
i
], 0, 
NULL
);

3059 
	`•rötf
 (
ch2
, "SQSèŒ_%d", 
i
);

3060 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqSQFuŒ
[
i
], 0, 
NULL
);

3061 
	`•rötf
 (
ch2
, "St‹eMissSèŒ_%d", 
i
);

3062 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eMiss
[
i
], 0, 
NULL
);

3063 
	`•rötf
 (
ch2
, "LQHôSèŒ_%d", 
i
);

3064 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdRólHô
[
i
], 0, 
NULL
);

3065 
	`•rötf
 (
ch2
, "LQMissSèŒ_%d", 
i
);

3066 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdRólMiss
[
i
], 0, 
NULL
);

3067 
	`•rötf
 (
ch2
, "SQHôSèŒ_%d", 
i
);

3068 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eRólHô
[
i
], 0, 
NULL
);

3069 
	`•rötf
 (
ch2
, "SQMissSèŒ_%d", 
i
);

3070 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eRólMiss
[
i
], 0, 
NULL
);

3071 
	`•rötf
 (
ch2
, "St‹eSèŒMiss_%d", 
i
);

3072 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eSèŒMiss
[
i
], 0, 
NULL
);

3073 
	`•rötf
 (
ch2
, "St‹eSèŒHô_%d", 
i
);

3074 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eSèŒHô
[
i
], 0, 
NULL
);

3075 
	`•rötf
 (
ch2
, "LﬂdSèŒMiss_%d", 
i
);

3076 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdSèŒMiss
[
i
], 0, 
NULL
);

3077 
	`•rötf
 (
ch2
, "LﬂdSèŒHô_%d", 
i
);

3078 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdSèŒHô
[
i
], 0, 
NULL
);

3079 
	`•rötf
 (
ch2
, "St‹eUpd©eMissSèŒ_%d", 
i
);

3080 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eUpd©eMiss
[
i
], 0, 
NULL
);

3081 
	`•rötf
 (
ch2
, "LﬂdMissSèŒ_%d", 
i
);

3082 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdMiss
[
i
], 0, 
NULL
);

3083 
	`•rötf
 (
ch2
, "RegSèŒ_%d", 
i
);

3084 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_ªgFuŒ
[
i
], 0, 
NULL
);

3085 
	`•rötf
 (
ch2
, "IssueSèŒ_%d", 
i
);

3086 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_issueFuŒ
[
i
], 0, 
NULL
);

3087 
	`•rötf
 (
ch2
, "Il1missSèŒ_%d", 
i
);

3088 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_û1Miss
[
i
], 0, 
NULL
);

3089 
	`•rötf
 (
ch2
, "FëchSèŒ_%d", 
i
);

3090 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_„tchEm±y
[
i
], 0, 
NULL
);

3091 
	`•rötf
 (
ch2
, "STLCSèŒ_%d", 
i
);

3092 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_STLC
[
i
], 0, 
NULL
);

3093 
	`•rötf
 (
ch2
, "TøpSèŒ_%d", 
i
);

3094 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_å≠
[
i
], 0, 
NULL
);

3097 #ifde‡
LOAD_PREDICTOR


3099 i‡(
ld¥ed
)

3100 
	`b¥ed_ªg_°©s
 (
ld¥ed
, 
sdb
, 0);

3104 
i
 = 0; i < 
numc⁄ãxts
; i++)

3106 
	`ld_ªg_°©s
 (
sdb
, 
i
);

3107 
	`mem_ªg_°©s
 (
thec⁄ãxts
[
i
]->
mem
, 
sdb
);

3110 
i
 = 0; i < 
MAXTHREADS
; i++)

3112 i‡(
ˇche_dl1
[
i
])

3113 
	`ˇche_ªg_°©s
 (
ˇche_dl1
[
i
], 
sdb
, i);

3114 i‡(
ˇche_û1
[
i
])

3115 
	`ˇche_ªg_°©s
 (
ˇche_û1
[
i
], 
sdb
, i);

3116 i‡(
ôlb
[
i
])

3117 
	`ˇche_ªg_°©s
 (
ôlb
[
i
], 
sdb
, i);

3118 i‡(
déb
[
i
])

3119 
	`ˇche_ªg_°©s
 (
déb
[
i
], 
sdb
, i);

3123 i‡(
ˇche_dl2
)

3124 
	`ˇche_ªg_°©s
 (
ˇche_dl2
, 
sdb
, 0);

3127 
	`powî_ªg_°©s
 (
sdb
);

3130 
	`°©_ªg_cou¡î
 (
sdb
, "sim_övÆid_addrs", "tŸÆÇ⁄-•ecuœtivêbogu†addªs£†£í (debug v¨)", &
sim_övÆid_addrs
, 0, 
NULL
);

3132 
i
 = 0; i < 
pc°©_√…
; i++)

3134 
buf
[512], 
buf1
[512];

3135 
°©_°©_t
 *
°©
;

3139 
°©
 = 
	`°©_föd_°©
 (
sdb
, 
pc°©_v¨s
[
i
]);

3140 i‡(!
°©
)

3141 
	`Áèl
 ("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

3144 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

3145 
	`Áèl
 ("`-pc°©' sèti°iˇ»v¨übÀ `%s' i†nŸá¿öãgø»ty≥", 
°©
->
«me
);

3148 
pc°©_°©s
[
i
] = 
°©
;

3149 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
 (
°©
);

3152 
	`•rötf
 (
buf
, "%s_by_pc", 
°©
->
«me
);

3153 
	`•rötf
 (
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

3154 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
 (
sdb
, 
buf
, 
buf1
,

3156  (
PF_COUNT
 | 
PF_PDF
),

3158  
NULL
);

3162 #ifde‡
TOKENB


3163 i‡(
tokíB
)

3164 
	`tc_ªg_°©s
 (
sdb
);

3166 
	`˛u°î_ªg_°©s
 (
sdb
);

3167 
	}
}

3170 
lsq_öô
 ();

3171 
r¶ök_öô
 (
∆öks
);

3172 
rs_ˇche_öô
 ();

3173 
evítq_öô
 ();

3174 
ªadyq_öô
 ();

3175 
cv_öô
 (
thªadid
);

3176 
ruu_öô
 (
thªadid
);

3177 
åa˚r_öô
 (
thªadid
);

3178 
„tch_öô
 (
thªadid
);

3180 #ifde‡
DIRECTORY


3181 
dú_evítq_öô
();

3186 
	$sim_öô
 ()

3188 
i
;

3190 
sim_num_ªfs
 = 0;

3192 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

3195 i‡(
bimod_√…
 != 1)

3196 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3197 i‡(
btb_√…
 != 2)

3198 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3201 
i
 = 0; i < 
numc⁄ãxts
; i++)

3203 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

3204  
bimod_c⁄fig
[0],

3210  
btb_c⁄fig
[0],

3211  
btb_c⁄fig
[1],

3212  
øs_size
);

3215 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

3218 i‡(
twﬁev_√…
 != 4)

3219 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3220 i‡(
btb_√…
 != 2)

3221 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3223 
i
 = 0; i < 
numc⁄ãxts
; i++)

3225 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

3227  
twﬁev_c⁄fig
[0],

3228  
twﬁev_c⁄fig
[1],

3230  
twﬁev_c⁄fig
[2],

3231  
twﬁev_c⁄fig
[3],

3232  
btb_c⁄fig
[0],

3233  
btb_c⁄fig
[1],

3234  
øs_size
);

3237 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

3240 i‡(
twﬁev_√…
 != 4)

3241 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3242 i‡(
bimod_√…
 != 1)

3243 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3244 i‡(
comb_√…
 != 1)

3245 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

3246 i‡(
btb_√…
 != 2)

3247 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3249 
i
 = 0; i < 
numc⁄ãxts
; i++)

3251 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

3252  
bimod_c⁄fig
[0],

3253  
twﬁev_c⁄fig
[0],

3254  
twﬁev_c⁄fig
[1],

3255  
comb_c⁄fig
[0],

3256  
twﬁev_c⁄fig
[2],

3257  
twﬁev_c⁄fig
[3],

3258  
btb_c⁄fig
[0],

3259  
btb_c⁄fig
[1],

3260  
øs_size
);

3264 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


3265 #i‚de‡
CENTRALIZED_CACHE_BANK


3266 i‡(
ªs_memb™k
 < 
CLUSTERS
)

3268 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3269 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d < CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3270 
	`exô
 (1);

3273 i‡(
ªs_memb™k
 !
CLUSTERS
)

3275 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3276 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d ! CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3277 
	`exô
 (1);

3282 #ifde‡
PORT_PER_BANK


3283 
CACHEPORTS
 = 
RES_CACHEPORTS
 = 
RES_CACHE_PORTS
 = 
ªs_memb™k
;

3284 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

3287 #ifde‡
ISSUE_PER_CLUSTER


3293 
i
 = 0; i < 
numc⁄ãxts
; i++)

3295 i‡(
i
 == 0)

3297 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
Vdd
 * Vdd;

3298 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* (
Vdd
 / 2) * (Vdd / 2);

3299 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 1;

3303 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * 
Vdd
 * checkerVDD * Vdd;

3304 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * (
Vdd
 / 2) * checkerVDD * (Vdd / 2);

3305 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 
checkîVDD
;

3308 
	`ˇlcuœã_powî
 (&(
thec⁄ãxts
[
i
]->
powî
));

3310 i‡(
i
)

3312 
thec⁄ãxts
[
i
]->
powî
.
b¥ed_powî
 = 0;

3313 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_powî
 =Åhecontexts[0]->power.dcache2_power;

3315 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_decodî
 =Åhecontexts[0]->power.dcache2_decoder;

3316 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_w‹dlöe
 =Åhecontexts[0]->power.dcache2_wordline;

3317 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_bôlöe
 =Åhecontexts[0]->power.dcache2_bitline;

3318 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_£n£amp
 =Åhecontexts[0]->power.dcache2_senseamp;

3319 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_èg¨øy
 =Åhecontexts[0]->power.dcache2_tagarray;

3320 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_gc
 =Åhecontexts[0]->power.dcache2_gc;

3324 i‡(
hŸ•Ÿ_a˘ive
)

3325 
	`hŸ•Ÿ_öô
 ();

3326 
	}
}

3330 
simoo_ªg_obj
 (
ªgs_t
 *
ªgs
,

3331 
is_wrôe
,

3332 
md_ªg_ty≥
 
π
,

3333 
ªg
,

3334 
evÆ_vÆue_t
 *
vÆ
);

3338 
simoo_mem_obj
 (
mem_t
 *
mem
,

3339 
is_wrôe
,

3340 
md_addr_t
 
addr
,

3341 *
p
,

3342 
nbyãs
);

3346 
simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

3347 *
cmd
,

3348 
ªgs_t
 *
ªgs
,

3349 
mem_t
 *
mem
);

3352 
	#MAX_RS_LINKS
 65536

	)

3353 
cou¡î_t
 
	grs_lök_num
 = 0;

3355 
	gMAX_BR_NUM
;

3359 
	$sim_lﬂd_thªads
 (
¨gc
, **
¨gv
,

3360 **
ívp
)

3362 
j
, 
¨g_°©us
 = 1;

3363 
c⁄ãxt
 *
cuºít
;

3365 
numc⁄ãxts
 = 0;

3366 
j
 = 0; (j < 
¨gc
Ë&& (
numc⁄ãxts
 < 
MAXTHREADS
Ë&& 
¨g_°©us
; j++)

3368 
	`Ârötf
 (
°dîr
, "öôülizög c⁄ãxà%d\n", 
numc⁄ãxts
);

3370 
¨g_°©us
 = 
	`ªad_thªad_¨gs
 (
ívp
, 
¨gv
[
j
], &
numc⁄ãxts
);

3372 
cuºít
 = 
thec⁄ãxts
[
j
];

3374 
cuºít
->
a˘uÆid
 = 0;

3377 
	`ld_lﬂd_¥og
 (
cuºít
->
‚ame
, cuºít->
¨gc
, cuºít->
¨gv
, 
ívp
, &(cuºít->
ªgs
), cuºít->
mem
, 
TRUE
, 
j
);

3381 i‡(
±ø˚_√…
 == 2)

3384 
	`±ø˚_›í
 ( 
±ø˚_›ts
[0],Ötrace_opts[1]);

3386 i‡(
±ø˚_√…
 == 0)

3391 
	`Áèl
 ("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

3394 
MAX_BR_NUM
 = 
ruu_ifq_size
 + 
RUU_size
;

3399 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
 ("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
 (fu_config));

3400 
	`r¶ök_öô
 (
MAX_RS_LINKS
);

3401 
	`rs_ˇche_öô
();

3402 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
;

3403 
j
 = 0; j < 
numc⁄ãxts
; j++)

3404 
	`åa˚r_öô
 (
j
);

3405 
j
 = 0; j < 
numc⁄ãxts
; j++)

3406 
	`„tch_öô
 (
j
);

3407 
j
 = 0; j < 
numc⁄ãxts
; j++)

3408 
	`cv_öô
 (
j
);

3409 
	`evítq_öô
 ();

3410 
	`ªadyq_öô
 ();

3411 #ifde‡
LOCK_HARD


3412 
	`lock_evítq_öô
();

3414 #ifde‡
DIRECTORY


3415 
	`dú_evítq_öô
();

3416 
j
 = 0; j < 
numc⁄ãxts
+
mesh_size
*2; j++)

3418 
dú_fifo_hód
[
j
] = 0;

3419 
dú_fifo_èû
[
j
] = 0;

3420 
dú_fifo_num
[
j
] = 0;

3421 
dú_fifo_p‹tu£
[
j
] = 0;

3422 
l1_fifo_hód
[
j
] = 0;

3423 
l1_fifo_èû
[
j
] = 0;

3424 
l1_fifo_num
[
j
] = 0;

3425 
l1_fifo_p‹tu£
[
j
] = 0;

3426 
mshr_≥ndög_evít
[
j
] = 0;

3427 
œ°_L1_mshr_fuŒ
[
j
] = 0;

3428 
œ°_L1_fifo_fuŒ
[
j
] = 0;

3429 
œ°_Dú_fifo_fuŒ
[
j
] = 0;

3430 
œ°_I≈ut_queue_fuŒ
[
j
] = 0;

3432 
œ°_L2_mshr_fuŒ
 = 0;

3433 
ßme_L1_L2_fifo_fuŒ
 = 0;

3434 
L1_mshr_fuŒ
 = 0;

3435 
L2_mshr_fuŒ
 = 0;

3436 
L2_mshr_fuŒ_¥e„tch
 = 0;

3437 
L1_fifo_fuŒ
 = 0;

3438 
Dú_fifo_fuŒ
 = 0;

3439 
I≈ut_queue_fuŒ
 = 0;

3440 
Ouçut_queue_fuŒ
 = 0;

3442 
SèŒ_L1_mshr
 = 0;

3443 
SèŒ_L2_mshr
 = 0;

3444 
SèŒ_L1_fifo
 = 0;

3445 
SèŒ_dú_fifo
 = 0;

3446 
SèŒ_öput_queue
 = 0;

3447 
SèŒ_ouçut_queue
 = 0;

3450 
j
 = 0; j < 
numc⁄ãxts
; j++)

3452 
	`ruu_öô
 (
j
);

3453 
	`lsq_öô
 (
j
);

3456 
j
 = 0; j < 
numc⁄ãxts
; j++)

3458 
¥i‹ôy
[
j
] = j;

3459 
key
[
j
] = 0;

3460 #ifde‡
INTERVAL_BASED


3461 
öãrvÆ_¥i‹ôy
[
j
] = j;

3462 
öãrvÆ_key
[
j
] = 0;

3466 #ifde‡ 
CLUSTER_PRIORITY


3467 
j
 = 0; j < 
CLUSTERS
; j++)

3468 
¥i‹ôy_˛
[
j
] = j;

3471 #ifde‡ 
PRIORITY_STEER


3472 
j
 = 0; j < 
CLUSTERS
; j++)

3473 
¥i‹ôy_˛
[
j
] = j;

3476 #ifde‡ 
STEER_DISPATCH_STAT


3477 
j
 = 0; j < 
numc⁄ãxts
; j++)

3478 
ªady_°ìr_thrd_max
[
j
] = 
ªady_°ìr_thrd_mö
[j] = 
ªady_°ìr_thrd_vÆue
[j] = 
MAXDEV
 / 2;

3481 #i‡
	`deföed
(
DLITE_SUPPORT
)

3483 
	`dlôe_öô
 (
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

3485 
	}
}

3489 
	$sim_aux_°©s
 (
FILE
 * 
°ªam
)

3492 
	}
}

3496 
	$sim_unöô
 ()

3498 i‡(
±ø˚_√…
 > 0)

3499 
	`±ø˚_˛o£
 ();

3502 
	}
}

3509 #i‚de‡ 
STEER_DISPATCH_STAT


3511 
	#OPERANDS_READY
(
RS
Ë\

	)

3512 ((
	gRS
)->
	gidï_ªady
[0] && (RS)->idep_ready[1] && (RS)->idep_ready[2])

3516 
	#ONE_OPERANDS_READY
(
RS
Ë\

	)

3517 ((
	gRS
)->
	gidï_ªady
[0] || (RS)->idep_ready[1])

3522 
	$ruu_öô
 (
thªadid
)

3524 
i
 = 0;

3525 
c⁄ãxt
 *
cuºít
;

3527 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3528 
cuºít
->
RUU
 = 
	`ˇŒoc
 (
RUU_size
,  (
RUU_°©i⁄
));

3529 i‡(!
cuºít
->
RUU
)

3530 
	`Áèl
 ("out of virtual memory");

3532 
i
 = 0; i < 
RUU_size
; i++)

3534 
cuºít
->
RUU
[
i
].
ödex
 = i;

3535 
cuºít
->
RUU
[
i
].
thªadid
 =Åhreadid;

3537 
cuºít
->
RUU_num
 = 0;

3538 
cuºít
->
RUU_hód
 = cuºít->
RUU_èû
 = 0;

3539 
cuºít
->
RUU_cou¡_thrd
 = 0;

3540 
cuºít
->
RUU_fcou¡_thrd
 = 0;

3541 
RUU_cou¡
 = 0;

3542 
RUU_fcou¡
 = 0;

3544 i‡(
thªadid
)

3546 
cuºít
->
cy˛e_mask
 = 0xffffffff;

3547 
cuºít
->
œãncy_Á˘‹
 = 1;

3548 
cuºít
->
maö_thªad
 = 1;

3549 
ˇche_dl1
[
thªadid
]->
hô_œãncy
 *
cuºít
->
œãncy_Á˘‹
;

3552 
i
 = 0; i < 
CLUSTERS
; i++)

3554 
úegfûe_˛_cou¡
[
i
] = 0;

3555 
õxåa_˛_cou¡
[
i
] = 0;

3556 
‰egfûe_˛_cou¡
[
i
] = 0;

3557 
„xåa_˛_cou¡
[
i
] = 0;

3558 
iissueq_˛_cou¡
[
i
] = 0;

3559 
fissueq_˛_cou¡
[
i
] = 0;

3560 #ifde‡
RAW


3561 
øwq_˛_cou¡
[
i
] = 0;

3564 
	}
}

3568 
	$ruu_dum≥¡
 (
RUU_°©i⁄
 *
rs
,

3569 
ödex
,

3570 
FILE
 * 
°ªam
,

3571 
hódî
)

3573 i‡(!
°ªam
)

3574 
°ªam
 = 
°dîr
;

3576 i‡(
hódî
)

3577 
	`Ârötf
 (
°ªam
, "idx: %2d: opcode: %s, in°: `", 
ödex
, 
	`MD_OP_NAME
 (
rs
->
›
));

3579 
	`Ârötf
 (
°ªam
, " opcode: %s, in°: `", 
	`MD_OP_NAME
 (
rs
->
›
));

3580 
	`md_¥öt_ö¢
 (
rs
->
IR
,Ñs->
PC
, 
°ªam
);

3581 
	`Ârötf
 (
°ªam
, "'\n");

3582 
	`myÂrötf
 (
°ªam
, " PC: 0x%08p, NPC: 0x%08∞’ªd_PC: 0x%08p)\n", 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

3583 
	`Ârötf
 (
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecovî_ö°: %s\n", 
rs
->
ö_LSQ
 ? "t" : "f",Ñs->
ó_comp
 ? "t" : "f",Ñs->
ªcovî_ö°
 ? "t" : "f");

3584 
	`myÂrötf
 (
°ªam
, " s≥c_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n", 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

3585 
	`Ârötf
 (
°ªam
, " seq: 0x%08x,Öåa˚_£q: 0x%08x\n", 
rs
->
£q
,Ñs->
±ø˚_£q
);

3586 
	`Ârötf
 (
°ªam
, " queued: %s, issued: %s, com∂ëed: %s\n", 
rs
->
queued
 ? "t" : "f",Ñs->
issued
 ? "t" : "f",Ñs->
com∂ëed
 ? "t" : "f");

3587 
	`Ârötf
 (
°ªam
, " o≥ønd†ªady: %s\n", 
	`OPERANDS_READY
 (
rs
) ? "t" : "f");

3588 
	}
}

3592 
	$ruu_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

3594 
num
, 
hód
;

3595 
RUU_°©i⁄
 *
rs
;

3597 
c⁄ãxt
 *
cuºít
;

3599 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3601 i‡(!
°ªam
)

3602 
°ªam
 = 
°dîr
;

3604 
	`Ârötf
 (
°ªam
, "** Thªad %d **\n", 
thªadid
);

3605 
	`Ârötf
 (
°ªam
, "** RUU state **\n");

3606 
	`Ârötf
 (
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
cuºít
->
RUU_hód
, cuºít->
RUU_èû
);

3607 
	`Ârötf
 (
°ªam
, "RUU_num: %d\n", 
cuºít
->
RUU_num
);

3609 
num
 = 
cuºít
->
RUU_num
;

3610 
hód
 = 
cuºít
->
RUU_hód
;

3611 
num
)

3613 
rs
 = &(
cuºít
->
RUU
[
hód
]);

3614 
	`ruu_dum≥¡
 (
rs
,Ñ†- 
cuºít
->
RUU
, 
°ªam
, 
TRUE
);

3615 
hód
 = (hód + 1Ë% 
RUU_size
;

3616 
num
--;

3618 
	}
}

3622 
	$lsq_öô
 (
thªadid
)

3624 
i
 = 0;

3625 
c⁄ãxt
 *
cuºít
;

3627 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

3629 
cuºít
->
LSQ
 = 
	`ˇŒoc
 (
LSQ_size
,  (
RUU_°©i⁄
));

3630 i‡(!
cuºít
->
LSQ
)

3631 
	`Áèl
 ("out of virtual memory");

3632 
i
 = 0; i < 
LSQ_size
; i++)

3634 
cuºít
->
LSQ
[
i
].
ödex
 = i;

3635 
cuºít
->
LSQ
[
i
].
thªadid
 =Åhreadid;

3637 
cuºít
->
LSQ_num
 = 0;

3638 
cuºít
->
LSQ_hód
 = cuºít->
LSQ_èû
 = 0;

3639 
cuºít
->
LSQ_cou¡
 = 0;

3640 
cuºít
->
LSQ_fcou¡
 = 0;

3641 
cuºít
->
m_shLQNum
 = 0;

3642 
cuºít
->
m_shSQNum
 = 0;

3643 
m_tŸÆSèŒ
[
thªadid
] = 0;

3644 
m_sqLQFuŒ
[
thªadid
] = 0;

3645 
m_sqSQFuŒ
[
thªadid
] = 0;

3646 
m_RUUFuŒ
[
thªadid
] = 0;

3647 
m_commôSèŒ
[
thªadid
] = 0;

3649 
	}
}

3654 #ifde‡
COUNT_LSQ


3655 
	gn⁄_issue_LSQ_num
;

3663 
	#STORE_OP_INDEX
 0

	)

3664 
	#STORE_ADDR_INDEX
 1

	)

3666 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

3667 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

3683 
RS_lök
 *
	gr¶ök_‰ì_li°
;

3684 
RS_lök
 *
	gr¶ök_li°
[
MAX_RS_LINKS
];

3687 #ifde‡
DIRECTORY


3688 
RS_li°
 *
	grs_ˇche_li°
[
MAXTHREADS
][
MSHR_SIZE
];

3691 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

3692 
cou¡î_t
 
	grs_lök_id
 = 0;

3695 
	#RSLINK_INIT
(
RSL
, 
RS
Ë\

	)

3696 ((
	gRSL
).
	g√xt
 = 
NULL
, (RSL).
	grs
 = (
RS
), (RSL).
	gèg
 = (RS)->
èg
)

3699 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

3702 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

3705 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

3708 
	#RSLINK_NEW
(
DST
, 
RS
Ë\

	)

3709 { 
RS_lök
 *
	gn_lök
; \

3710 i‡(!
	gr¶ök_‰ì_li°
) \

3711 
∑nic
("out ofÑsÜinks"); \

3712 
	grs_lök_num
++; \

3713 
	gn_lök
 = 
r¶ök_‰ì_li°
; \

3714 
	gr¶ök_‰ì_li°
 = 
r¶ök_‰ì_li°
->
√xt
; \

3715 
	gn_lök
->
	g√xt
 = 
NULL
; \

3716 
	gn_lök
->
	grs
 = (
RS
);Ç_lök->
	gèg
 = 
n_lök
->
rs
->
èg
; \

3717 
	gn_lök
->
	gœ°_u£
 = 
sim_cy˛e
; \

3718 (
	gDST
Ë
n_lök
; \

3722 
	#RSLINK_FREE
(
LINK
Ë\

	)

3723 { 
RS_lök
 *
	gf_lök
 = (
LINK
); \

3724 
	gf_lök
->
	grs
 = 
NULL
; f_lök->
	gèg
 = 0; \

3725 
	gf_lök
->
	g√xt
 = 
r¶ök_‰ì_li°
; \

3726 
	gr¶ök_‰ì_li°
 = 
f_lök
; \

3727 
	grs_lök_num
--; \

3732 
	#RSLINK_FREE_LIST
(
LINK
Ë\

	)

3733 { 
RS_lök
 *
	gÊ_lök
, *
	gÊ_lök_√xt
; \

3734 
	gÊ_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

3736 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

3737 
RSLINK_FREE
(
Ê_lök
); \

3743 
	$r¶ök_öô
 (
∆öks
)

3745 
i
;

3746 
RS_lök
 *
lök
;

3748 
r¶ök_‰ì_li°
 = 
NULL
;

3749 
i
 = 0; i < 
∆öks
; i++)

3751 
lök
 = 
	`ˇŒoc
 (1,  (
RS_lök
));

3752 i‡(!
lök
)

3753 
	`Áèl
 ("out of virtual memory");

3754 
r¶ök_li°
[
i
] = 
lök
;

3755 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

3756 
r¶ök_‰ì_li°
 = 
lök
;

3758 
	}
}

3760 
RS_lök
 * 
	$födMax_r¶ök
()

3762 
i
, 
max_id
;

3763 
RS_lök
 *
lök
;

3764 
cou¡î_t
 
max
 = 0;

3766 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

3768 if(
r¶ök_li°
[
i
]->
œ°_u£
 > 
max
)

3770 
max
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

3771 
max_id
 = 
i
;

3774  
r¶ök_li°
[
max_id
];

3775 
	}
}

3777 
RS_lök
 * 
	$födMö_r¶ök
()

3779 
i
, 
mö_id
;

3780 
RS_lök
 *
lök
;

3781 
cou¡î_t
 
mö
 = 
WAIT_TIME
;

3783 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

3785 if(
r¶ök_li°
[
i
]->
œ°_u£
 < 
mö
)

3787 
mö
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

3788 
mö_id
 = 
i
;

3791  
r¶ök_li°
[
mö_id
];

3792 
	}
}

3794 #ifde‡
DIRECTORY


3796 
	$rs_ˇche_öô
()

3798 
i
, 
n
;

3799 
n
 = 0;Ç < 
MAXTHREADS
;Ç++)

3801 
i
=0; i<
MSHR_SIZE
; i++)

3802 
rs_ˇche_li°
[
n
][
i
] = 
NULL
;

3804 
	}
}

3811 
	$check_fu_busy
 ()

3813 
i
;

3815 
i
 = 0; i < 
numc⁄ãxts
; i++)

3817 
fu_busy
[
i
] = 0;

3821 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

3823 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
)

3824 
fu_busy
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]++;

3826 
	}
}

3836 
	$ruu_ªÀa£_fu
 ()

3838 
i
;

3841 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

3844 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

3846 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

3848 #ifde‡ 
PWR_ALU


3849 #ifde‡
ALU_MERGE


3850 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

3852 
ülu1_ac˚ss
++;

3853 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

3855 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

3857 
Álu1_ac˚ss
++;

3858 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

3861 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

3863 
ülu1_ac˚ss
++;

3864 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

3866 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IMULT_INDEX
)

3868 
ülu2_ac˚ss
++;

3869 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu2_ac˚ss
++;

3872 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

3874 
Álu1_ac˚ss
++;

3875 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

3878 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPMULT_INDEX
)

3880 
Álu2_ac˚ss
++;

3881 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu2_ac˚ss
++;

3889 
	}
}

3891 #ifde‡
DIRECTORY


3892 #ifde‡
CONF_RES_RESEND


3893 
QUEUE_EVENT
 *
	gª∂y_queue
[
MAXTHREADS
], *
	g£nd_queue
[MAXTHREADS];

3895 
DIRECTORY_EVENT
 *
	gdú_evít_queue
;

3896 
DIRECTORY_EVENT
 *
	gevít_li°
[
L2_MSHR_SIZE
];

3899 
	$dú_evítq_öô
()

3901 
n
 = 0;

3902 #ifde‡
CONF_RES_RESEND


3903 
n
 = 0;Ç<
MAXTHREADS
;Ç++)

3905 
ª∂y_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

3906 
£nd_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

3907 
	`öôQueue
(
ª∂y_queue
[
n
]);

3908 
	`öôQueue
(
£nd_queue
[
n
]);

3911 
dú_evít_queue
 = 
NULL
;

3912 
n
 = 0;Ç<
L2_MSHR_SIZE
;Ç++)

3913 
evít_li°
[
n
] = 
NULL
;

3914 
	}
}

3915 #ifde‡
LOCK_HARD


3917 
	$lock_evítq_öô
()

3919 
n
 = 0, 
j
 = 0;

3920 
n
 = 0;Ç<
MAXTHREADS
;Ç++)

3922 
j
=0;j<
MAXLOCK
;j++)

3924 
LOCK_REG
[
n
][
j
] = (
LOCK_ENTRY
 *Ë
	`ˇŒoc
 (1,  (LOCK_ENTRY));

3925 
LOCK_REG
[
n
][
j
]->
lock_ow√r
 = 0;

3926 
LOCK_REG
[
n
][
j
]->
waôög_num
 = 0;

3927 
LOCK_REG
[
n
][
j
]->
waôög_hód
 = 0;

3928 
LOCK_REG
[
n
][
j
]->
waôög_èû
 = 0;

3930 
j
=0;j<
MAXBARRIER
;j++)

3932 
BAR_REG
[
n
][
j
] = (
BAR_ENTRY
 *Ë
	`ˇŒoc
 (1,  (BAR_ENTRY));

3933 
BAR_REG
[
n
][
j
]->
b¨rõr_num
 = 0;

3936 
	}
}

3939 #ifde‡
CONF_RES_RESEND


3941 
	$öôQueue
(
QUEUE_EVENT
 *
queue
)

3943 
i
;

3944 if(!
queue
) ;

3945 
queue
->
‰ì_E¡rõs
 = 
QUEUE_SIZE
;

3946 
i
=0; i<
QUEUE_SIZE
; i++)

3948 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 0;

3949 
queue
->
Queue_íåy
[
i
].
evít
 = 
NULL
;

3951 
	}
}

3955 
	$buf„r_fuŒ_check
(
DIRECTORY_EVENT
 *
evít
)

3957 
vc
 = 0, 
›ti⁄s
 = -1, 
buf„r_fuŒ
 = 0;

3958 if((
evít
->
des1
*
mesh_size
+evít->
des2
 !evít->
§c1
*mesh_size+evít->
§c2
Ë&& (evít->
öput_buf„r_fuŒ
Ë&& (evít->
›î©i⁄
 =
MISS_WRITE
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 ||Évít->›î©i⁄ =
MISS_IL1
))

3960 #ifde‡
MC


3961 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

3963 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

3964 
buf„r_fuŒ
 = 1;

3966 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

3968 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3969 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

3970 if(
vc
 == -1)

3971 
buf„r_fuŒ
 = 1;

3974 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

3977 
buf„r_fuŒ
 = 
	`CombNëw‹kBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1),Évít->
›î©i⁄
, &
vc
);

3979 if(
buf„r_fuŒ
)

3981 #ifde‡
POPNET


3982 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

3983 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

3986 #ifde‡
POPNET


3987 
vc
 == -1

3989 #ifde‡
OPTICAL_INTERCONNECT


3990 
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
)

3996 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

3998 
I≈ut_queue_fuŒ
 ++;

3999 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

4005 
evít
->
öput_buf„r_fuŒ
 = 0;

4006 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4007 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4008 if(
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

4010 
SèŒ_öput_queue
 +
sim_cy˛e
 - 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
];

4011 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4018 
	}
}

4019 
	$dú_evítq_√xãvít
()

4021 
DIRECTORY_EVENT
 *
evít
, *
ev
, *
√xt
, *
¥ev
;

4022 
i
, 
ö£π_Êag
 = 0;

4023 
evít
 = 
dú_evít_queue
;

4024 
ev
 = 
NULL
;

4025 
evít
!=
NULL
)

4027 
√xt
 = 
evít
->next;

4029 i‡(
evít
->
whí
 <
sim_cy˛e
)

4031 
ö£π_Êag
 = 
	`buf„r_fuŒ_check
(
evít
);

4032 if(
ö£π_Êag
 == 0)

4034 if(
evít
 =
dú_evít_queue
)

4036 
dú_evít_queue
 = 
evít
->
√xt
;

4037 
evít
->
√xt
 = 
NULL
;

4038 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

4040 if(
evít
->
≥ndög_Êag
 == 0)

4042 
evít
->
≥ndög_Êag
 = 1;

4043 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] ++;

4046 
evít
->
√xt
 = 
dú_evít_queue
;

4047 
dú_evít_queue
 = 
evít
;

4048 
ev
 = 
evít
;

4049 
evít
 =Évít->
√xt
;

4050 
ßme_L1_L2_fifo_fuŒ
 ++;

4054 if(
evít
->
≥ndög_Êag
 == 1)

4055 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] --;

4056 
evít
 = 
dú_evít_queue
;

4062 
ev
->
√xt
 = 
evít
->next;

4063 
evít
->
√xt
 = 
NULL
;

4064 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

4066 if(
evít
->
≥ndög_Êag
 == 0)

4068 
evít
->
≥ndög_Êag
 = 1;

4069 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] ++;

4071 
evít
->
√xt
 = 
dú_evít_queue
;

4072 
dú_evít_queue
 = 
evít
;

4073 
ev
 = 
evít
;

4074 
evít
 =Évít->
√xt
;

4075 
ßme_L1_L2_fifo_fuŒ
 ++;

4079 if(
evít
->
≥ndög_Êag
 == 1)

4080 
mshr_≥ndög_evít
[(
evít
->
§c1
-
MEM_LOC_SHIFT
)*
mesh_size
 +Évít->
§c2
] --;

4081 
evít
 = 
ev
->
√xt
;

4085 if(
ö£π_Êag
 == 1)

4087 
ev
 = 
evít
;

4088 
evít
 =Évít->
√xt
;

4090 if(
ö£π_Êag
 == 2)

4092 if(
evít
 =
dú_evít_queue
)

4094 
dú_evít_queue
 = 
evít
->
√xt
;

4095 
evít
->
√xt
 = 
NULL
;

4096 
	`dú_evítq_ö£π
(
evít
);

4097 
evít
 = 
dú_evít_queue
;

4101 
ev
->
√xt
 = 
evít
->next;

4102 
evít
->
√xt
 = 
NULL
;

4103 
	`dú_evítq_ö£π
(
evít
);

4104 
evít
 = 
ev
->
√xt
;

4111 
ev
 = 
evít
;

4112 
evít
 =Évít->
√xt
;

4116 
	}
}

4129 #ifde‡
DIRECTORY


4130 
RS_lök
 *
	gevít_queue
;

4132 
RS_lök
 *
	gevít_queue
;

4136 
	$evítq_öô
 ()

4138 
evít_queue
 = 
NULL
;

4139 
	}
}

4145 
	$evítq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4147 
RS_lök
 *
ev
;

4149 
c⁄ãxt
 *
cuºít
;

4151 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4153 i‡(!
°ªam
)

4154 
°ªam
 = 
°dîr
;

4156 
	`Ârötf
 (
°ªam
, "**Évent queue state **\n");

4158 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

4161 i‡(
	`RSLINK_VALID
 (
ev
))

4163 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4165 
	`Ârötf
 (
°ªam
, "idx: %2d: @ %.0f\n", 
rs
->
ödex
, (Ë
ev
->
x
.
whí
);

4166 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
FALSE
);

4169 
	}
}

4176 
evítq_queue_evít
 (
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí


4177 #ifde‡
DIRECTORY


4178 , 
œt
)

4183 
RS_lök
 *
	g¥ev
, *
	gev
, *
	g√w_ev
;

4185 i‡(
	grs
->
	gcom∂ëed
)

4186 
∑nic
 ("event completed");

4188 i‡(
	gwhí
 <
sim_cy˛e
)

4189 
∑nic
 ("event occurred inÅheÖast");

4192 
RSLINK_NEW
 (
√w_ev
, 
rs
);

4193 
	g√w_ev
->
	gx
.
	gwhí
 = 
whí
;

4195 #ifde‡
DIRECTORY


4196 if(
	grs
 =
NULL
)

4197 
¥ötf
("RSÖrobÀm %Œd\n", 
sim_cy˛e
);

4200 
	g¥ev
 = 
NULL
, 
	gev
 = 
evít_queue
;Év &&Év->
	gx
.
	gwhí
 < whí;Öªv = 
ev
,Év =Év->
√xt
);

4202 i‡(
	g¥ev
)

4205 
	g√w_ev
->
	g√xt
 = 
¥ev
->
√xt
;

4206 
	g¥ev
->
	g√xt
 = 
√w_ev
;

4211 
	g√w_ev
->
	g√xt
 = 
evít_queue
;

4212 
	gevít_queue
 = 
√w_ev
;

4221 
RUU_°©i⁄
 *

4222 
	$evítq_√xt_evít
 ()

4224 
RS_lök
 *
ev
;

4225 
RS_lök
 *
ãmp_ev
, *
¥ed_ev
 = 
NULL
;

4227 
ãmp_ev
 = 
evít_queue
;

4229 
ãmp_ev
 && !
thec⁄ãxts
[ãmp_ev->
rs
->
thªadid
]->
a˘ive_this_cy˛e
)

4231 
¥ed_ev
 = 
ãmp_ev
;

4232 
ãmp_ev
 =Åemp_ev->
√xt
;

4235 i‡(
ãmp_ev
 &&Åemp_ev->
x
.
whí
 <
sim_cy˛e
)

4238 
ev
 = 
ãmp_ev
;

4239 i‡(
ãmp_ev
 =
evít_queue
)

4241 
evít_queue
 =Évít_queue->
√xt
;

4245 
¥ed_ev
->
√xt
 = 
ãmp_ev
->next;

4249 i‡(
	`RSLINK_VALID
 (
ev
))

4251 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4254 
	`RSLINK_FREE
 (
ev
);

4257  
rs
;

4262 
	`RSLINK_FREE
 (
ev
);

4265  
	`evítq_√xt_evít
 ();

4271  
NULL
;

4273 
	}
}

4275 
	$ch™geInEvítQueue
 (
RUU_°©i⁄
 * 
rs
, 
thªadid
)

4279 
RS_lök
 *
ev
 = 
evít_queue
;

4280 
RS_lök
 *
¥ev
 = 
NULL
;

4282 
ev
 !
NULL
)

4284 i‡(
ev
->
rs
 ==Ñs)

4286 
¥ev
 = 
ev
;

4287 
ev
 =Év->
√xt
;

4290 i‡(
ev
 =
NULL
)

4292 
ev
->
x
.
whí
 = 
sim_cy˛e
;

4295 i‡(
¥ev
 =
NULL
)

4296 
evít_queue
 = 
ev
->
√xt
;

4298 
¥ev
->
√xt
 = 
ev
->next;

4300 
	`RSLINK_FREE
 (
ev
);

4301 
	}
}

4317 
RS_lök
 *
	gªady_queue
;

4321 
	$ªadyq_öô
 ()

4323 
ªady_queue
 = 
NULL
;

4324 
	}
}

4329 
	$ªadyq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4331 
RS_lök
 *
lök
;

4333 
c⁄ãxt
 *
cuºít
;

4335 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4337 i‡(!
°ªam
)

4338 
°ªam
 = 
°dîr
;

4340 
	`Ârötf
 (
°ªam
, "**Ñeady queue state **\n");

4342 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

4345 i‡(
	`RSLINK_VALID
 (
lök
))

4347 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
lök
);

4349 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
TRUE
);

4352 
	}
}

4368 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

4370 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

4373 i‡(
rs
->
queued
)

4374 
	`∑nic
("node isálready queued");

4376 
rs
->
queued
 = 
TRUE
;

4378 #ifde‡
REMOVE_COMPUTE_QUEUE


4379 #ifde‡
PWR_WAKE


4380 i‡(
rs
->
ö_LSQ
)

4382 
lsqªady
++;

4383 
rs
->
cou¡ed_lsqªady
 = 1;

4385 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

4387 
‰ódy
++;

4388 
rs
->
cou¡ed_‰ódy
 = 1;

4392 
úódy
++;

4393 
rs
->
cou¡ed_úódy
 = 1;

4399 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

4400 
√w_node
->
x
.
£q
 = 
rs
->seq;

4403 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

4405 i‡(
¥ev
)

4408 
√w_node
->
√xt
 = 
¥ev
->next;

4409 
¥ev
->
√xt
 = 
√w_node
;

4414 
√w_node
->
√xt
 = 
ªady_queue
;

4415 
ªady_queue
 = 
√w_node
;

4417 
	}
}

4422 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

4424 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

4427 i‡(
rs
->
queued
)

4428 
	`∑nic
 ("node isálready queued");

4429 
rs
->
queued
 = 
TRUE
;

4431 #ifde‡
PWR_WAKE


4432 #ifde‡
READY_ROB_STAT


4433 i‡(!
rs
->
ö_LSQ
)

4434 
ªady_thrd
[
rs
->
thªadid
]++;

4436 i‡(
rs
->
ö_LSQ
)

4438 
lsqªady
++;

4439 
lsqªady_˛
[
rs
->
˛u°î
]++;

4440 
rs
->
cou¡ed_lsqªady
 = 1;

4442 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

4444 
‰ódy
++;

4445 
‰ódy_˛
[
rs
->
˛u°î
]++;

4446 
rs
->
cou¡ed_‰ódy
 = 1;

4450 
úódy
++;

4451 
úódy_˛
[
rs
->
˛u°î
]++;

4452 
rs
->
cou¡ed_úódy
 = 1;

4457 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

4458 
√w_node
->
x
.
£q
 = 
rs
->seq;

4461 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_LONGLAT
 | 
F_CTRL
))

4464 
¥ev
 = 
NULL
;

4465 
node
 = 
ªady_queue
;

4470 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

4473 i‡(
¥ev
)

4476 
√w_node
->
√xt
 = 
¥ev
->next;

4477 
¥ev
->
√xt
 = 
√w_node
;

4482 
√w_node
->
√xt
 = 
ªady_queue
;

4483 
ªady_queue
 = 
√w_node
;

4485 
	}
}

4496 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

4499 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

4502 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

4509 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

4510 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] \

4511 : 
cuºít
->
¸óã_ve˘‹
[
N
])

4514 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

4515 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹_π
[
N
] \

4516 : 
cuºít
->
¸óã_ve˘‹_π
[
N
])

4519 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë(
cuºít
->
•ec_mode
 \

	)

4520 ? (
BITMAP_SET
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

4521 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

4522 : (
cuºít
->
¸óã_ve˘‹
[
N
] = (
L
)))

4529 
	#DNA
 (0)

	)

4531 #i‡
deföed
(
TARGET_PISA
)

4534 
	#DGPR
(
N
Ë(N)

	)

4535 
	#DGPR_D
(
N
Ë((NË&~1)

	)

4538 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

4539 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

4540 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

4543 
	#DHI
 (0+32+32)

	)

4544 
	#DLO
 (1+32+32)

	)

4545 
	#DFCC
 (2+32+32)

	)

4546 
	#DTMP
 (3+32+32)

	)

4548 #ñi‡
deföed
(
TARGET_ALPHA
)

4551 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

4554 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

4557 
	#DFPCR
 (0+32+32)

	)

4558 
	#DUNIQ
 (1+32+32)

	)

4559 
	#DTMP
 (2+32+32)

	)

4562 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4570 
	#SET_NPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_NPC
 = (EXPR))

	)

4573 #unde‡
SET_TPC


4574 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

4577 
	#CPC
 (
cuºít
->
ªgs
.
ªgs_PC
)

	)

4578 
	#SET_CPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_PC
 = (EXPR))

	)

4583 #ifde‡
TEST_BUG


4585 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

4586 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

4587 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

4588 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4589 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

4590 
BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

4591 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

4592 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

4593 #i‡
deföed
(
TARGET_PISA
)

4598 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4599 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

4600 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

4601 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4602 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

4603 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4604 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

4605 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

4606 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4607 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

4608 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

4609 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4610 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

4611 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4612 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

4613 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

4614 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

4615 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

4616 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

4617 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4618 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)),\

4619 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

4620 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

4621 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

4626 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

4627 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

4628 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

4629 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4630 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

4631 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0), \

4632 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

4633 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

4634 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

4635 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

4636 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

4637 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4638 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

4639 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1), \

4640 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

4641 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

4642 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

4643 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4644 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4645 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4646 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4647 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2), \

4648 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4649 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4651 #ñi‡
deföed
(
TARGET_ALPHA
)

4656 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

4657 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

4658 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

4659 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4660 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

4661 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

4662 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

4663 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

4664 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

4665 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

4666 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

4667 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4668 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

4669 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

4670 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

4671 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

4676 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

4677 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

4678 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

4679 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4680 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

4681 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0), \

4682 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

4683 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

4684 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

4685 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

4686 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

4687 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4688 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

4689 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

4690 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

4691 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

4692 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

4693 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4694 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4695 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4696 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4697 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

4698 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4699 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4702 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4706 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

4707 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

4708 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

4709 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4710 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

4711 
BITMAP_SET
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

4712 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

4713 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

4714 #i‡
deföed
(
TARGET_PISA
)

4719 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4720 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

4721 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

4722 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4723 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

4724 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4725 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

4726 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

4727 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4728 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

4729 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

4730 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4731 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

4732 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4733 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

4734 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

4735 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

4736 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

4737 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

4738 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4739 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)), \

4740 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

4741 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

4742 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

4747 
	#HI
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

4748 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

4749 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

4750 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4751 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

4752 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

4753 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

4754 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

4755 
	#LO
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

4756 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

4757 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

4758 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4759 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

4760 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

4761 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

4762 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

4763 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

4764 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4765 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4766 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4767 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4768 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 2),\

4769 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4770 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4772 #ñi‡
deföed
(
TARGET_ALPHA
)

4777 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

4778 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

4779 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

4780 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4781 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

4782 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

4783 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

4784 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

4785 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

4786 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

4787 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

4788 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4789 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

4790 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

4791 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

4792 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

4797 
	#FPCR
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

4798 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

4799 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

4800 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4801 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

4802 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 0),\

4803 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

4804 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

4805 
	#UNIQ
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

4806 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

4807 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

4808 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4809 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

4810 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

4811 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

4812 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

4813 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

4814 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

4815 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

4816 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

4817 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

4818 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

4819 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

4820 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

4823 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

4832 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
Ë\

	)

4833 (
	gaddr
 = (
SRC
), \

4834 (
	gcuºít
->
	g•ec_mode
 \

4835 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

4836 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V), cuºít->
id
, 
ö°
))), \

4837 
	gSRC_V
)

4839 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

4840 
__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

4841 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

4842 
MD_SWAPH
(
__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

4843 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

4844 
MD_SWAPW
(
__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

4845 #ifde‡
HOST_HAS_QWORD


4846 
	#READ_QWORD
(
SRC
, 
FAULT
Ë\

	)

4847 
MD_SWAPQ
(
__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

4850 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
Ë\

	)

4851 (
	gDST_V
 = (
SRC
), 
	gaddr
 = (
DST
), \

4852 (
	gcuºít
->
	g•ec_mode
 \

4853 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

4854 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V), cuºít->
id
, 
ö°
))))

4856 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4857 
__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

4858 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4859 
__WRITE_SPECMEM
(
MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

4860 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4861 
__WRITE_SPECMEM
(
MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

4863 #ifde‡
HOST_HAS_QWORD


4864 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

4865 
__WRITE_SPECMEM
(
MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

4869 
	#SYSCALL
(
INST
Ë\

	)

4871 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative syscall") : () 0), \

4872 
sys_sysˇŒ
(&(
cuºít
->
ªgs
), 
mem_ac˚ss
, cuºít->
mem
, 
INST
, 
TRUE
))

4874 
	#QUIESCE
(
INST
Ë\

	)

4876 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative quiescent instruction") : () 0), \

4877 
ˇŒ_quõs˚
(
cuºít
->
id
))

4882 
	$cv_öô
 (
thªadid
)

4884 
i
;

4885 
c⁄ãxt
 *
cuºít
;

4887 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4891 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

4893 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

4894 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 0;

4895 
cuºít
->
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

4896 
cuºít
->
•ec_¸óã_ve˘‹_π
[
i
] = 0;

4900 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

4902 
	}
}

4907 
	$cv_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4909 
i
;

4910 
CV_lök
 
ít
;

4912 
c⁄ãxt
 *
cuºít
;

4914 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4916 i‡(!
°ªam
)

4917 
°ªam
 = 
°dîr
;

4919 
	`Ârötf
 (
°ªam
, "** create vector state **\n");

4921 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

4923 
ít
 = 
	`CREATE_VECTOR
 (
i
);

4924 i‡(!
ít
.
rs
)

4925 
	`Ârötf
 (
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

4927 
	`Ârötf
 (
°ªam
, "[cv%02d]: from %s, idx: %d\n", 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),É¡.rs->
ödex
);

4929 
	}
}

4931 
ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
);

4934 
åa˚r_ªcovî
 (
thªadid
);

4935 
ªcFªeRegLi°
 (
thªadid
);

4938 #ifde‡
DIRECTORY


4939 
	$RS_block_li°
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
, 
íåy
, 
thªadid
)

4941 if(
rs
->
•ec_mode
) ;

4942 if(
íåy
 < 1 ||É¡ry > 
MSHR_SIZE
)

4943 
	`∑nic
("L1 MSHR: wrong mshrÉntry");

4945 
íåy
 =Éntry - 1;

4947 
RS_li°
 *
rs_li°
;

4948 
rs_li°
 = 
	`ˇŒoc
–1, (
RS_li°
));

4949 
rs_li°
->
rs
 =Ñs;

4950 
rs_li°
->
√xt
 = 
NULL
;

4951 
rs_li°
->
•ec_mode
 = 
rs
->spec_mode;

4952 
rs_li°
->
whí
 = when;

4953 
rs_li°
->
√xt
 = 
rs_ˇche_li°
[
thªadid
][
íåy
];

4954 
rs_ˇche_li°
[
thªadid
][
íåy
] = 
rs_li°
;

4955 
	}
}

4957 
	$RS_block_√xt
(
RS_li°
 *
cur
)

4959 if(!
cur
->
rs
) ;

4961 if(
cur
->
•ec_mode
 && !cur->
rs
->spec_mode)

4963 
cur
->
rs
->
ˇche_ªady
 = 0;

4964 if(((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
Ë&& (cur->rs->
issued
 || cur->rs->
queued
 || cur->rs->
com∂ëed
)) || (!(MD_OP_FLAGS(cur->rs->op) & F_LOAD) && !(cur->rs->issued && !cur->rs->queued)))

4965 
	`∑nic
("L1 MSHR: issue, queue, or commit flag is set!!!");

4967 if((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
))

4971 
	`ªadyq_íqueue
 (
cur
->
rs
);

4980 
cur
->
rs
->
wrôewaô
 = 2;

4981 
	}
}

4988 
	gcommô_idÀ
 = 0;

4989 
	gcommô_Êag
[
MAXTHREADS
] = {0};

4994 
	$ruu_commô
 ()

4997 
i
, 
j
, 
thªadid
, 
œt
, 
evíts
, 
commôãd
;

4998 
mm
;

4999 
c⁄ãxt
 *
cuºít
;

5000 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
, 
LSQ_ödex
;

5001 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

5002 
°‹e_›
 = 0, 
pcbSórch
;

5003 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

5004 #ifde‡
DIRECTORY


5005 
ªadSh¨eDú
 = 0;

5008 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

5009 
cou¡edThisCy˛e
 = 0;

5011 
md_addr_t
 
ãmpAddr
;

5012 
md_›code
 
ãmpOp
;

5014 
thªad_commô
 = 0;

5015 
isSTLC
;

5019 
j
 = 0; j <
numc⁄ãxts
; j++, 
thªad_commô
 = (thread_commit + 1) %Çumcontexts)

5021 #ifdef 
EDA


5022 i‡(
thec⁄ãxts
[
thªad_commô
]->
ma°îid
 == 2)

5026 i‡(
j
 > 0)

5028 
commô_d⁄e
[
j
 - 1] = 
commôãd
;

5029 if(!
commôãd
)

5030 
m_commôSèŒ
[
j
-1]++;

5032 #ifde‡
SYNC_IDEAL


5033 if(
ÆlF‹ked
 && (
lock_waôög
[
j
]))

5036 i‡(
j
 =
numc⁄ãxts
)

5039 
thªadid
 = 
thªad_commô
;

5040 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5042 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

5043 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

5044 
commôãd
 = 0;

5045 
haha
 = 0;

5049 
cuºít
->
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

5051 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

5052 i‡(
busSlŸCou¡
 < 11)

5054 i‡(!
cou¡edThisCy˛e
)

5055 
°ÆlNoBusSlŸ
++;

5056 
cou¡edThisCy˛e
 = 1;

5060 
RUU_°©i⁄
 *
rs
 = &(
cuºít
->
RUU
[cuºít->
RUU_hód
]);

5063 
ãmpAddr
 = 0;

5064 
°‹e_›
 = 0;

5065 
ãmpOp
 = 0;

5066 
isSTLC
 = 0;

5068 #ifdef 
EDA


5069 i‡((
cuºít
->
ma°îid
 =1Ë&& (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& 
	`queueSize
 (cuºít->
¥edQueue
) == -1)

5072 #ifde‡ 
DIRECTORY


5073 if(
rs
->
wrôewaô
 =1 && !
mshr_≥ndög_evít
[
j
])

5078 i‡(!
rs
->
com∂ëed
)

5083 i‡(
cuºít
->
ma°îid
 =0 && 
rs
->
PC
 < 0x120000000)

5084 
	`∑nic
 ("Illegal instructionÅryingÅo commit\n");

5086 #ifde‡
SMD_USE_WRITE_BUF


5088 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
m_L1WBufC¡
[
thªadid
]))

5091 #ifde‡
SERIALIZATION_ACK


5092 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
numSt‹ePídög
[
thªadid
]

5093 #ifde‡
READ_PERMIT


5094 || 
numLﬂdPídög
[
thªadid
]

5100 
evíts
 = 0;

5103 i‡(
cuºít
->
RUU
[cuºít->
RUU_hód
].
ó_comp
)

5106 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[cuºít->
RUU_hód
].threadid)

5108 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5109 
ãmp_LSQ_num
--;

5110 i‡(!
ãmp_LSQ_num
)

5111 
	`∑nic
 ("RUUánd LSQ out of sync");

5113 i‡(
cuºít
->
LSQ_num
 <0 || !cuºít->
LSQ
[
LSQ_ödex
].
ö_LSQ
)

5114 
	`∑nic
 ("RUU out of sync with LSQ");

5116 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
com∂ëed
)

5121 #ifde‡
SEQUENTIAL_CONSISTENCY


5122 i‡(
övÆid©i⁄SèŒ
[
thªadid
])

5126 i‡(
commôSèŒ
[
thªadid
])

5130 #ifde‡
INV_ACK_CON


5131 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& (
≥ndög_övÆid©i⁄
[
thªadid
]))

5134 #ifde‡
SERIALIZATION_ACK


5135 if(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
numSt‹ePídög
[
thªadid
] <0 && 
rs
->
wrôewaô
 == 0)

5139 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5141 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
)

5142 
isSTLC
 = 1;

5143 #ifde‡
SMD_USE_WRITE_BUF


5144 i‡(
m_L1WBufC¡
[
thªadid
] >
SMD_L1_WBUF_SIZE
)

5146 if(
isSTLC
 && 
m_L1WBufC¡
[
thªadid
])

5150 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
PC
 = 
cuºít
->
LSQ
[
LSQ_ödex
].PC;

5151 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
IR
 = 
cuºít
->
LSQ
[
LSQ_ödex
].IR;

5152 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
›
 = 
cuºít
->
LSQ
[
LSQ_ödex
].op;

5153 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
lsqId
 = 
LSQ_ödex
;

5154 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
robId
 = 
rs
->
ödex
;

5155 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeVÆue
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
vÆ_ø
;

5156 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
addr
 = 
cuºít
->
LSQ
[
LSQ_ödex
].addr;

5157 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
sim_num_ö¢
 = 
cuºít
->
LSQ
[
LSQ_ödex
].sim_num_insn;

5158 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeSèπed
 = 0;

5159 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
föishTime
 = 0;

5160 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
isMiss
 = 0;

5161 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
íåyTime
 = 
sim_cy˛e
;

5162 if–
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5164 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 
isSTLC
);

5165 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 1;

5166 if(
isSTLC
 && 
°‹eC⁄dFaû
 == 0)

5167 
	`∑nic
("Store conditional should fail oná L1 miss");

5170 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 0;

5172 
m_L1WBufC¡
[
thªadid
]++;

5173 
m_L1WBuf_èû
[
thªadid
] = (m_L1WBuf_èû[thªadid]+1)%
SMD_L1_WBUF_SIZE
;

5176 #ifde‡
DIRECTORY


5177 if(
rs
->
wrôewaô
 == 2)

5179 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 0);

5180 
evíts
 |
PEV_CACHEMISS
;

5185 #ifde‡
DIRECTORY


5186 if(
rs
->
ˇche_ªady
 == 1)

5190 
°‹e_›
 = 1;

5191 
boﬁ
 = 0;

5192 
ªs_ãm∂©e
 *
fu
;

5193 
∑ª¡ID
;

5195 
∑ª¡ID
 = 
thªadid
;

5197 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
), 
thªadid
);

5198 #ifde‡ 
DCACHE_MSHR


5199 i‡(
fu
 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,ÅhªadidË&& !
boﬁ
)

5201 #ifde‡
MSHR


5202 i‡(
fu
 && !
mshr_fuŒ
 && !
boﬁ
)

5204 i‡(
fu
 && !
boﬁ
)

5208 i‡(
fu
->
ma°î
->
busy
)

5209 
	`∑nic
 ("functional unitálready in use");

5211 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

5212 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

5213 
fu
->
ma°î
->
du∂iˇã
 = 0;

5217 #i‚de‡
DIRECTORY


5218 #ifde‡
SEQUENTIAL_CONSISTENCY


5219 #ifdef 
EDA


5220 i‡(
cﬁÀ˘_°©s
 && 
cuºít
->
ma°îid
 == 0)

5222 i‡(
cﬁÀ˘_°©s
)

5225 
bx
, 
cx
, 
dx
;

5226 
c⁄ãxt
 *
tmpCxt
;

5227 
md_addr_t
 
mask
;

5229 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

5231 
bx
 = 0; bx < 
numc⁄ãxts
; bx++)

5233 
boﬁ
 = 0;

5235 
tmpCxt
 = 
thec⁄ãxts
[
bx
];

5236 #ifdef 
EDA


5237 i‡(
tmpCxt
->
ma°îid
 != 0)

5241 i‡(
tmpCxt
 !
cuºít
)

5243 
cx
 = 
tmpCxt
->
LSQ_hód
, 
dx
 = 0; dx !tmpCxt->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

5245 i‡((
	`MD_OP_FLAGS
 (
tmpCxt
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5247 i‡((
tmpCxt
->
LSQ
[
cx
].
addr
 & 
mask
Ë=(
cuºít
->LSQ[
LSQ_ödex
].addr & mask))

5249 i‡(!
tmpCxt
->
LSQ
[
cx
].
•ec_mode
 && !tmpCxt->LSQ[cx].
isPª„tch
)

5252 
	`fixS≥cSèã
 (
tmpCxt
->
LSQ
[
cx
].
¥od
[1]->
ödex
,ÅmpCxt->
id
);

5253 
tmpCxt
->
ªgs
 =ÅmpCxt->
LSQ
[
cx
].
¥od
[1]->
backupReg
;

5254 
	`£qC⁄si°™cyRïœy
 (
tmpCxt
->
LSQ
[
cx
].
¥od
[1]->
ödex
,ÅmpCxt->
id
);

5255 
övÆid©i⁄_ª∂ay
[
bx
]++;

5266 #ifde‡
RELAXED_CONSISTENCY


5267 #ifdef 
EDA


5268 i‡(
cﬁÀ˘_°©s
 && 
cuºít
->
ma°îid
 == 0)

5270 i‡(
cﬁÀ˘_°©s
)

5273 
bx
, 
cx
, 
dx
;

5274 
c⁄ãxt
 *
tmpCxt
;

5275 
md_addr_t
 
mask
;

5277 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

5279 
bx
 = 0; bx < 
numc⁄ãxts
; bx++)

5281 
boﬁ
 = 0;

5283 
tmpCxt
 = 
thec⁄ãxts
[
bx
];

5284 #ifdef 
EDA


5285 i‡(
tmpCxt
->
ma°îid
 != 0)

5289 i‡(
tmpCxt
 !
cuºít
)

5291 
cx
 = 
tmpCxt
->
LSQ_hód
, 
dx
 = 0; dx !tmpCxt->
LSQ_num
; cx = (cx + 1Ë% 
LSQ_size
, dx++)

5293 i‡((
	`MD_OP_FLAGS
 (
tmpCxt
->
LSQ
[
cx
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5295 i‡((
tmpCxt
->
LSQ
[
cx
].
addr
 & 
mask
Ë=(
cuºít
->LSQ[
LSQ_ödex
].addr & mask))

5297 i‡(!
tmpCxt
->
LSQ
[
cx
].
•ec_mode
 &&ÅmpCxt->LSQ[cx].
issued
)

5299 
tmpCxt
->
LSQ
[
cx
].
övÆid©i⁄Re˚ived
 = 1;

5310 
ãmpOp
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
›
;

5311 i‡(
ˇche_dl1
[
thªadid
])

5314 
dˇche_ac˚ss
++;

5315 
cuºít
->
dˇche_ac˚ss
++;

5317 
övÆid©eOthîCache
 = 0;

5319 #ifde‡
DIRECTORY


5320 
m©chnum
;

5321 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

5322 if(
m©chnum
)

5324 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

5325 
rs
->
ˇche_ªady
 = 1;

5326 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

5331 #ifde‡
DIRECTORY


5332 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

5334 if(
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5336 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 1);

5337 if(
°‹eC⁄dFaû
 == 0)

5338 
	`∑nic
("Store conditional should fail oná L1 miss");

5339 
œt
 = 
ˇche_dl1_œt
;

5343 #i‚de‡
PERFECT_CACHE


5344 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Åhreadid);

5346 
œt
 = 
ˇche_dl1_œt
;

5348 i‡(
œt
<
WAIT_TIME
)

5350 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 0);

5356 #i‚de‡
PERFECT_CACHE


5357 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Åhreadid);

5359 
œt
 = 
ˇche_dl1_œt
;

5362 #ifdef 
DCACHE_MSHR


5363 if(
œt
 > 
ˇche_dl1_œt
)

5364 #ifde‡
DIRECTORY


5365 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
œt
, 0, 
rs
);

5367 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
œt
, 0, 
NULL
);

5370 i‡(
œt
 >
WAIT_TIME
)

5372 
rs
->
wrôewaô
 = 1;

5373 
rs
->
miss_Êag
 = 1;

5376 
rs
->
miss_Êag
 = 0;

5378 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

5380 
°‹eC⁄dFaû
 = 0;

5381 
	`com∂ëeSt‹e
 (
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
 (cuºít->LSQ[LSQ_ödex].
›
), 0);

5383 i‡(!
°‹eC⁄dFaû
)

5384 #ifdef 
EDA


5386 
wL
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

5387 
qw‹d_t
 
wD
 = 0;

5388 
	`f‹m©D©aR2M
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
, cuºít->LSQ[LSQ_ödex].
vÆ_ø
, &
wD
);

5390 
rsCacheAc˚ss
 = 
cuºít
->
LSQ
[
LSQ_ödex
];

5391 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~(
wL
 - 1)), &
wD
, wL, 
sim_cy˛e
, 
NULL
, NULL,Åhreadid);

5394 #i‚de‡
PERFECT_CACHE


5395 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

5397 
œt
 = 
ˇche_dl1_œt
;

5403 
rsCacheAc˚ss
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5404 #i‚de‡
PERFECT_CACHE


5405 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

5407 
œt
 = 
ˇche_dl1_œt
;

5412 i‡(
œt
 > 
ˇche_dl1_œt
)

5413 
evíts
 |
PEV_CACHEMISS
;

5418 
°_b™k_c⁄f
++;

5422 #ifde‡
DIRECTORY


5429 #ifde‡
DIRECTORY


5430 
ªadSh¨eDú
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
RódSh¨eDú
;

5433 #i‡
	`deföed
(
SMD_USE_WRITE_BUF
Ë&& deföed(
SEQUENTIAL_CONSISTENCY
)

5435 i‡(
m_L1WBufC¡
[
thªadid
])

5439 #ifde‡
DIRECTORY


5440 if(
rs
->
wrôewaô
 != 1)

5443 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
ﬁd¥eg
, 
thªadid
);

5445 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5448 
	`±ø˚_√w°age
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5449 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5451 i‡(
LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5453 
ãmp_LSQ_rs
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5454 
ãmp_LSQ_ödex
 = 
LSQ_ödex
;

5455 
ãmp_LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5457 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = cuºít->LSQ[(Ë(—emp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size)];

5458 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5459 
ãmp_LSQ_ödex
 = (ãmp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size;

5462 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = *
ãmp_LSQ_rs
;

5463 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5465 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5467 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5468 
cuºít
->
m_shLQNum
--;

5470 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5472 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5473 
cuºít
->
m_shSQNum
--;

5475 if(
ruu_ö‹dî_issue
)

5477 
i
=0;i<
MAX_ODEPS
;i++)

5479 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
⁄ames
[
i
] !
NA
)

5481 
ﬁök
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5483 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5484 
	`RSLINK_FREE
 (
ﬁök
);

5486 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

5491 
cuºít
->
LSQ_hód
 = (cuºít->LSQ_hód + 1Ë% 
LSQ_size
;

5492 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5493 
cuºít
->
LSQ_num
--;

5494 
ãmp_LSQ_num
--;

5495 #ifde‡
DIRECTORY


5501 #ifde‡
DIRECTORY


5502 if(
rs
->
wrôewaô
 != 1)

5505 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_CT
 && (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5508 
b¥ed_ac˚ss
++;

5509 i‡(!(
rs
->
du∂iˇã
))

5511 
cuºít
->
b¥ed_ac˚ss
++;

5514 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5515  
rs
->
PC
,

5516  
rs
->
√xt_PC
,

5517  
rs
->
√xt_PC
 !‘s->
PC
 +

5518  (
md_ö°_t
)),

5519  
rs
->
¥ed_PC
 !‘s->
PC
 +

5520  (
md_ö°_t
)),

5521  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5522  
rs
->
›
,

5523  &
rs
->
dú_upd©e
,

5524  
rs
->
thªadid
,

5525  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5529 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
ﬁd¥eg
, 
thªadid
);

5531 
cuºít
->
RUU
[cuºít->
RUU_hód
].
èg
++;

5533 
	`±ø˚_√w°age
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5534 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
);

5536 
tŸÆ_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
di•_time
);

5537 
max_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
di•_time
), max_slip_cycles);

5539 i‡(
rs
->
issue_time
)

5541 
tŸÆ_issue_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
issue_time
);

5542 
max_issue_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
issue_time
), max_issue_slip_cycles);

5545 if(
ruu_ö‹dî_issue
)

5547 
i
=0;i<
MAX_ODEPS
;i++)

5549 i‡(
rs
->
⁄ames
[
i
] !
NA
)

5551 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5553 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5554 
	`RSLINK_FREE
 (
ﬁök
);

5556 
rs
->
odï_li°
[
i
] = 
NULL
;

5561 
cuºít
->
RUU_hód
 = (cuºít->RUU_hód + 1Ë% 
RUU_size
;

5562 
cuºít
->
RUU_num
--;

5563 
commô_Êag
[
thªadid
] = 0;

5565 i‡(
rs
->
du∂iˇã
)

5567 
COMPARE_ac˚ss
[
thªadid
]++;

5568 
com∑ª_ac˚ss
++;

5571 if(!
ruu_ö‹dî_issue
)

5573 
rob2_ac˚ss
++;

5574 
cuºít
->
rob2_ac˚ss
++;

5576 
commôãd
++;

5578 
commô_idÀ
 = 0;

5579 
i
 = 0; i < 
MAX_ODEPS
; i++)

5581 i‡(
rs
->
odï_li°
[
i
])

5582 
	`∑nic
 ("retired instruction has odeps\n");

5584 #ifde‡
DIRECTORY


5588 
	`°©_add_ßm∂e
 (
commô_width_°©
, 
commôãd
);

5590 
	}
}

5602 
	$ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
)

5605 
mm
;

5606 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5607 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
;

5609 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

5610 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

5613 
shi·_right
 = 0;

5616 
brRecovîy
[
thªadid
]++;

5618 
di•_dñay
 = 0;

5621 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

5622 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

5623 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

5624 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

5627 i‡(!
cuºít
->
RUU_num
)

5628 
	`∑nic
 ("empty RUU");

5632 
RUU_ödex
 !
bønch_ödex
)

5635 i‡(!
ãmp_RUU_num
)

5636 
	`∑nic
 ("empty RUU");

5639 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

5641 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

5644 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5645 
ãmp_LSQ_num
--;

5646 i‡(!
ãmp_LSQ_num
)

5648 
	`Ârötf
 (
°dîr
, "Thªad %d, cy˛ê%lu\n", 
thªadid
, (Ë
sim_num_ö¢
);

5649 
	`∑nic
 ("RUUánd LSQ out of sync");

5652 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5653 
ãmp_LSQ_num
--;

5655 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5656 
ãmp_RUU_num
--;

5659 i‡(
mode
 == 0)

5662 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5663 
ãmp_RUU_num
--;

5668 
ãmp_RUU_num
 != 0)

5670 
exåaIn¢
[
thªadid
]++;

5672 i‡(!
ãmp_RUU_num
)

5673 
	`∑nic
 ("empty RUU");

5675 i‡(
mode
 =0 && 
RUU_ödex
 =
cuºít
->
RUU_hód
)

5676 
	`∑nic
 ("RUU headándÅail broken");

5678 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

5680 
cuºít
->
iissueq_thrd
--;

5681 
iissueq
--;

5682 
iissueq_˛
[
cuºít
->
id
]--;

5683 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

5685 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

5687 
cuºít
->
fissueq_thrd
--;

5688 
fissueq
--;

5689 
fissueq_˛
[
cuºít
->
id
]--;

5690 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

5693 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

5695 i‡(!
ãmp_LSQ_num
)

5696 
	`∑nic
 ("RUUánd LSQ out of sync");

5697 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

5699 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5700 
ãmp_LSQ_num
--;

5701 i‡(!
ãmp_LSQ_num
)

5702 
	`∑nic
 ("RUUánd LSQ out of sync");

5705 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

5707 
cuºít
->
iissueq_thrd
--;

5708 
iissueq
--;

5709 
iissueq_˛
[
cuºít
->
id
]--;

5710 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

5712 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

5714 
cuºít
->
fissueq_thrd
--;

5715 
fissueq
--;

5716 
fissueq_˛
[
cuºít
->
id
]--;

5717 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

5720 
i
 = 0; i < 
MAX_ODEPS
; i++)

5722 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

5724 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

5727 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

5728 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

5731 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5734 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5737 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5739 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5740 
cuºít
->
m_shLQNum
--;

5742 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5744 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5745 
cuºít
->
m_shSQNum
--;

5748 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

5749 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5750 
cuºít
->
LSQ_num
--;

5751 
ãmp_LSQ_num
--;

5755 
i
 = 0; i < 
MAX_ODEPS
; i++)

5757 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

5758 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

5761 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

5762 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

5763 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

5764 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

5766 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

5767 
cuºít
->
RUU_num
--;

5768 
ãmp_RUU_num
--;

5771 if(!
ruu_ö‹dî_issue
)

5773 
rob2_ac˚ss
++;

5774 
cuºít
->
rob2_ac˚ss
++;

5777 
ö°£qnum
 = 
cuºít
->
RUU
[
bønch_ödex
].
ö°num
;

5778 
œ°˛u°î
 = 
cuºít
->
RUU
[
bønch_ödex
].
˛u°î
;

5779 
num_£¡
 = 1;

5781 i‡(
mode
 == 0)

5783 
cuºít
->
RUU_èû
 = (
bønch_ödex
 + 1Ë% 
RUU_size
;

5784 
	`c›y_‰om
 (
thªadid
);

5788 i‡(
cuºít
->
RUU_num
 != 0)

5789 
	`∑nic
 ("ROB must be completelyÉmpty");

5790 
cuºít
->
RUU_èû
 = cuºít->
RUU_hód
;

5796 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

5801 
ãmp_LSQ_ödex
 = 0;Åemp_LSQ_ödex < 
LSQ_size
;Åemp_LSQ_index++)

5802 i‡(
ãmp_LSQ_ödex
 !
cuºít
->
LSQ
[ãmp_LSQ_ödex].
ödex
)

5803 
	`∑nic
 ("LSQ index messed up");

5804 
	}
}

5818 
	$ruu_wrôeback
 ()

5820 
i
;

5821 
sum1
, 
sum2
, 
sum3
;

5822 
RUU_°©i⁄
 *
rs
;

5823 
dñay
;

5825 
c⁄ãxt
 *
cuºít
;

5829 
ãmp
;

5831 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

5833 
wb_d⁄e
[
ãmp
] = 0;

5837 (
rs
 = 
	`evítq_√xt_evít
 ()))

5839 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

5841 i‡(!
	`OPERANDS_READY
 (
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

5842 
	`∑nic
 ("inst completedánd !ready, !issued, or completed");

5844 
rs
->
com∂ëed
 = 
TRUE
;

5846 
wb_d⁄e
[
rs
->
thªadid
]++;

5849 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

5851 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

5853 
úesu…bus_ac˚ss
++;

5854 
cuºít
->
úesu…bus_ac˚ss
++;

5855 if(!
ruu_ö‹dî_issue
)

5857 
rob1_ac˚ss
++;

5858 
cuºít
->
rob1_ac˚ss
++;

5859 
iwakeup_ac˚ss
++;

5860 
cuºít
->
iwakeup_ac˚ss
++;

5862 
úegfûe_ac˚ss
++;

5863 
cuºít
->
úegfûe_ac˚ss
++;

5865 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

5868 
‰esu…bus_ac˚ss
++;

5869 
cuºít
->
‰esu…bus_ac˚ss
++;

5870 if(!
ruu_ö‹dî_issue
)

5872 
rob1_ac˚ss
++;

5873 
cuºít
->
rob1_ac˚ss
++;

5874 
fwakeup_ac˚ss
++;

5875 
cuºít
->
fwakeup_ac˚ss
++;

5877 
‰egfûe_ac˚ss
++;

5878 
cuºít
->
‰egfûe_ac˚ss
++;

5883 i‡(
rs
->
ªcovî_ö°
)

5885 i‡(
rs
->
ö_LSQ
)

5886 
	`∑nic
 ("mis-predictedÜoad or store?!?!?");

5888 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

5889 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

5890 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

5891 #ifde‡
DIRECTORY


5892 
thªadid
 = 
rs
->threadid;

5893 
i
 = 0;

5894 
i
=0;i<
MSHR_SIZE
;i++)

5896 
RS_li°
 *
¥ev
, *
cur
;

5897 
¥ev
=
NULL
, 
cur
 = 
rs_ˇche_li°
[
thªadid
][
i
]; cur; cur=cur->
√xt
)

5899 if(
cur
->
rs
 && cur->rs->
•ec_mode
)

5901 if(
¥ev
 =
NULL
)

5903 
rs_ˇche_li°
[
thªadid
][
i
] = 
cur
->
√xt
;

5904 
¥ev
 = 
NULL
;

5908 
¥ev
->
√xt
 = 
cur
->next;

5909 
cur
 = 
¥ev
;

5910 
¥ev
 = 
cur
;

5914 
¥ev
 = 
cur
;

5919 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

5920 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

5923 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_WB
 && !
rs
->
ö_LSQ
 && (
	`MD_OP_FLAGS
 (rs->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5926 
b¥ed_ac˚ss
++;

5927 i‡(!(
rs
->
du∂iˇã
))

5929 
cuºít
->
b¥ed_ac˚ss
++;

5931 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5932  
rs
->
PC
,

5933  
rs
->
√xt_PC
,

5934  
rs
->
√xt_PC
 !‘s->
PC
 +

5935  (
md_ö°_t
)),

5936  
rs
->
¥ed_PC
 !‘s->
PC
 +

5937  (
md_ö°_t
)),

5938  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5939  
rs
->
›
,

5940  &
rs
->
dú_upd©e
,

5941  
rs
->
thªadid
,

5942  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5946 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,Ñs->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

5948 
sum1
 = 
issue_øã
;

5949 
sum2
 = 0;

5950 
sum3
 = 0;

5952 
i
 = 0; i < 
MAX_ODEPS
; i++)

5954 i‡(
rs
->
⁄ames
[
i
] !
NA
)

5956 
CV_lök
 
lök
;

5957 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

5959 i‡(
rs
->
•ec_mode
)

5961 
lök
 = 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

5962 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

5964 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

5965 
cuºít
->
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

5970 
lök
 = 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

5971 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

5973 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

5974 
cuºít
->
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

5977 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5979 i‡(
	`RSLINK_VALID
 (
ﬁök
))

5981 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

5982 
	`∑nic
 ("output dependenceálready satisfied");

5983 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

5985 
ﬁök
->
rs
->
whí_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

5986 
ﬁök
->
rs
->
whí_idï_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

5988 
sum2
++;

5989 i‡(
	`OPERANDS_READY
 (
ﬁök
->
rs
))

5991 i‡(!
ﬁök
->
rs
->
ö_LSQ
 || ((
	`MD_OP_FLAGS
 (ﬁök->rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

5992 
	`ªadyq_íqueue
 (
ﬁök
->
rs
);

5993 
sum3
++;

5996 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5997 if(!
ruu_ö‹dî_issue
)

5998 
	`RSLINK_FREE
 (
ﬁök
);

6000 if(!
ruu_ö‹dî_issue
)

6001 
rs
->
odï_li°
[
i
] = 
NULL
;

6005 
	}
}

6015 
	#MAX_STD_UNKNOWNS
 
LSQSIZE


	)

6018 #ifde‡ 
LSQ_LOAD_FAST_ISSUE


6020 
	$lsq_ª‰esh
 ()

6022 
i
, 
j
, 
ödex
, 
idx
, 
num_°a_unknown_thªad
 = 0;

6024 
c⁄ãxt
 *
cuºít
;

6026 #ifdef 
LSQ_FIX_PARTIAL_BUG


6027 
°d_width
[
LSQSIZE
];

6030 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

6034 
cuºít
 = 
thec⁄ãxts
[
idx
];

6036 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
; (ò< cuºít->
LSQ_num
Ë&& (
num_°a_unknown_thªad
 < 
numc⁄ãxts
); i++, index = (ödex + 1Ë% 
LSQ_size
)

6038 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


6039 && !
cuºít
->
LSQ
[
ödex
].
issued


6040 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


6041 && !
cuºít
->
LSQ
[
ödex
].
ˇche_ªady
 &&

6042  
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6044 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

6050 
	}
}

6053 
	$lsq_ª‰esh
 ()

6055 
i
, 
idx
, 
j
, 
ödex
, 
n_°d_unknowns
;

6056 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

6057 
c⁄ãxt
 *
cuºít
;

6062 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

6067 
cuºít
 = 
thec⁄ãxts
[
idx
];

6068 
n_°d_unknowns
 = 0;

6069 
i
 = 0; i < 
LSQ_size
; i++)

6070 
°d_unknowns
[
i
] = 0;

6072 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
, 
n_°d_unknowns
 = 0; i < cuºít->
LSQ_num
; i++, index = (ödex + 1Ë% 
LSQ_size
)

6074 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

6076 i‡(!
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6082 i‡(!
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6089 i‡(
n_°d_unknowns
 =
LSQ_size
)

6090 
	`Áèl
 ("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

6091 
°d_unknowns
[
n_°d_unknowns
++] = 
cuºít
->
LSQ
[
ödex
].
addr
;

6096 
j
 = 0; j < 
n_°d_unknowns
; j++)

6098 i‡(
°d_unknowns
[
j
] = 
cuºít
->
LSQ
[
ödex
].
addr
)

6099 
°d_unknowns
[
j
] = 0;

6105 ((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


6106 && !
cuºít
->
LSQ
[
ödex
].
issued


6107 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


6108 && 
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6112 
j
 = 0; j < 
n_°d_unknowns
; j++)

6115 i‡(
°d_unknowns
[
j
] =
cuºít
->
LSQ
[
ödex
].
addr
)

6118 i‡(
j
 =
n_°d_unknowns
)

6121 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

6126 
	}
}

6133 
	$ruu_issue
 ()

6135 
k
, 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

6136 
RS_lök
 *
node
, *
√xt_node
;

6137 
ªs_ãm∂©e
 *
fu
;

6138 
öãr
 = -1;

6139 
this_cy˛e_issued
[
CLUSTERS
];

6140 
mm
;

6141 
dñay
 = 0;

6142 
boﬁ_t
 
bLSQHô
 = 
FALSE
;

6143 
boﬁ_t
 
bP¨tülHô
 = 
FALSE
;

6144 
nW1
;

6146 #ifde‡ 
MSHR


6147 
u£_mshr
 = 0;

6150 
∑ª¡ID
;

6152 
c⁄ãxt
 *
cuºít
;

6153 
thªadid
;

6156 
issueLimô
;

6158 
ãmp
;

6161 #ifde‡ 
PULL_BACK


6162 
puŒbackDñay
[
MAXTHREADS
];

6164 
k
 = 0; k < 
numc⁄ãxts
; k++)

6166 
puŒbackD⁄eThisCy˛e
[
k
] = 0;

6167 
dl1MissThisCy˛e
[
k
] = 
dl1HôThisCy˛e
[k] = 0;

6168 
puŒbackDñay
[
k
] = 0;

6170 i‡(
puŒbackWaôCy˛e
[
k
])

6172 
puŒbackWaôCy˛e
[
k
]--;

6175 i‡(
puŒbackBubbÀ
[
k
] && !
puŒbackWaôCy˛e
[k])

6177 
puŒbackCy˛eCou¡
[
k
]++;

6178 
puŒbackBubbÀ
[
k
]--;

6179 
puŒbackDñay
[
k
] = 1;

6185 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

6187 
issue_d⁄e
[
ãmp
] = 0;

6188 
this_cy˛e_issued
[
ãmp
] = 0;

6189 
lﬂdReje˘Cou¡
[
ãmp
] = 0;

6190 
ª∂ayIndex
[
ãmp
] = 0;

6193 
node
 = 
ªady_queue
;

6194 
ªady_queue
 = 
NULL
;

6198 
issueLimô
 = (
ruu_issue_width
 ) * 
numc⁄ãxts
;

6199 
ö‹dî_°Æl
[
MAXTHREADS
] = {0};

6200 
ö‹dî_°Æl_ruunum
[
MAXTHREADS
] = {0};

6202 
n_issued
 = 0; 
node
 &&Ç_issued < 
issueLimô
;Çodê
√xt_node
)

6204 #ifde‡ 
MSHR


6205 
u£_mshr
 = 0;

6208 
√xt_node
 = 
node
->
√xt
;

6212 i‡(
	`RSLINK_VALID
 (
node
))

6214 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

6216 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

6217 
thªadid
 = 
rs
->threadid;

6218 i‡(!
	`OPERANDS_READY
 (
rs
Ë|| !rs->
queued
 ||Ñs->
issued
 ||Ñs->
com∂ëed
)

6219 
	`∑nic
 ("issued inst !ready, issued, or completed");

6221 
rs
->
queued
 = 
FALSE
;

6223 if(
ruu_ö‹dî_issue
)

6225 
rs_ödex
 = 
rs
->
ödex
;

6226 if(
i
 = 
rs
->
ö_LSQ
)

6228 if(
rs
->
¥od
[1] =
NULL
)

6229 
	`∑nic
("There isÇoáddressÖroducer ofÜoad/store\n");

6230 
rs_ödex
 = 
rs
->
¥od
[1]->
ödex
;

6232 if(
ö‹dî_°Æl
[
thªadid
] && 
rs_ödex
 > 
ö‹dî_°Æl_ruunum
[threadid])

6234 
	`ªadyq_íqueue
 (
rs
);

6235 
	`RSLINK_FREE
 (
node
);

6238 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6240 
i
 = 
thec⁄ãxts
[
thªadid
]->
RUU_hód
; i < 
rs_ödex
; i = (i+1)%
RUU_size
)

6242 i‡((
	`MD_OP_FUCLASS
 (
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
›
) > 3) && (MD_OP_FUCLASS (thecontexts[threadid]->RUU[i].op) < 10))

6244 if(!
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
issued
)

6246 if(
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
ó_comp
 && !
cuºít
->RUU[i].
odï_li°
[0]->
rs
->
issued
)

6253 
i
 = 
thec⁄ãxts
[
thªadid
]->
RUU_hód
; i < 
rs_ödex
; i = (i+1)%
RUU_size
)

6255 i‡(!((
	`MD_OP_FUCLASS
 (
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
›
) > 3) && (MD_OP_FUCLASS (thecontexts[threadid]->RUU[i].op) < 10)))

6257 if(!
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
issued
)

6259 if(
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
ó_comp
 && !
cuºít
->RUU[i].
odï_li°
[0]->
rs
->
issued
)

6264 if(
i
 !
rs_ödex
)

6266 
	`ªadyq_íqueue
 (
rs
);

6267 
	`RSLINK_FREE
 (
node
);

6268 
ö‹dî_°Æl
[
thªadid
] = 1;

6269 
ö‹dî_°Æl_ruunum
[
thªadid
] = 
rs_ödex
;

6272 if(
rs
->
ö_LSQ
 && 
thec⁄ãxts
[
thªadid
]->
LSQ_num
)

6274 if(
thec⁄ãxts
[
thªadid
]->
LSQ
[—hec⁄ãxts[thªadid]->
LSQ_èû
+
LSQ_size
-1)%LSQ_size].
miss_Êag
)

6276 
	`ªadyq_íqueue
 (
rs
);

6277 
	`RSLINK_FREE
 (
node
);

6283 
ö‹dî_°Æl
[
thªadid
] = 0;

6285 #ifde‡
TG


6286 i‡(
rs
->
ö_LSQ
)

6287 
	`åaffic_gíî©e
(
sim_cy˛e
, 
rs
->
addr
,Ñs);

6291 #ifde‡ 
PULL_BACK


6292 i‡(
puŒbackDñay
[
rs
->
thªadid
])

6294 
	`ªadyq_íqueue
 (
rs
);

6295 
	`RSLINK_FREE
 (
node
);

6300 i‡(
issue_d⁄e
[
thªadid
] =(
ruu_issue_width
 ))

6302 
	`ªadyq_íqueue
 (
rs
);

6303 
	`RSLINK_FREE
 (
node
);

6307 i‡(
lﬂdReje˘Cou¡
[
thªadid
])

6309 
	`ªadyq_íqueue
 (
rs
);

6310 
	`RSLINK_FREE
 (
node
);

6313 if(
rs
->
ˇche_ªady
 ==1)

6315 
	`ªadyq_íqueue
 (
rs
);

6316 
	`RSLINK_FREE
 (
node
);

6321 i‡(
rs
->
issue_time
 > 
sim_cy˛e
)

6323 
	`ªadyq_íqueue
 (
rs
);

6324 
	`RSLINK_FREE
 (
node
);

6328 i‡(((
rs
->
whí_ªady
[0] <
sim_cy˛e
Ë&& (rs->whí_ªady[1] <sim_cy˛eË&& (rs->whí_ªady[2] <sim_cy˛eË&& (rs->
whí_öq
 < sim_cy˛eË&& !rs->
ö_qwaô
))

6331 #ifde‡ 
PWR_WAKEUP_SELECT


6332 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

6334 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

6336 
i£À˘i⁄_ac˚ss
++;

6337 
cuºít
->
i£À˘i⁄_ac˚ss
++;

6339 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

6341 
f£À˘i⁄_ac˚ss
++;

6342 
cuºít
->
f£À˘i⁄_ac˚ss
++;

6346 
Œ_sc
 = 0;

6348 i‡(
rs
->
›
 =
STL_C
 ||Ñs->› =
LDL_L
)

6351 
Œ_sc
++;

6355 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

6360 
md_addr_t
 
addr
;

6362 #ifdef 
EDA


6363 i‡(
rs
->
pois⁄
[1].
dúty
 == 1)

6364 
addr
 = 
rs
->
pois⁄
[1].
d©a
 + 
	`SEXT
 (rs->
IR
 & 0xffff);

6367 
addr
 = 
rs
->addr;

6369 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6370 
i
;

6372 i‡(!
vÆid_addr
)

6373 
sim_övÆid_addrs
++;

6376 #ifde‡ 
MSHR


6377 
u£_mshr
 = 1;

6380 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6382 i‡(!
fu
)

6384 
	`ªadyq_íqueue
 (
rs
);

6385 
	`RSLINK_FREE
 (
node
);

6390 i‡(
fu
->
ma°î
->
busy
)

6391 
	`∑nic
 ("functional unitálready in use");

6394 i‡(
vÆid_addr
 && 
déb
[
thªadid
])

6396 
éb_œt
 = 0;

6397 
éb_œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid);

6398 if(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6400 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6401 
	`ªadyq_íqueue
 (
rs
);

6402 
	`RSLINK_FREE
 (
node
);

6407 #ifdef 
DCACHE_MSHR


6408 #ifdef 
EDA


6409 
isDL0Hô
 = 1;

6410 if(
cuºít
->
ma°îid
 =1 && (
isDL0Hô
 = 
	`isCacheHô
(
ˇche_dl0
[cuºít->
jobThdId
], 
addr
, 
thªadid
)Ë=0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[cuºít->
hñpThdId
]->
mshr
, 1))

6412 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,ÅhªadidË&& !
mshr_≥ndög_evít
[threadid])

6415 
	`ªadyq_íqueue
 (
rs
);

6416 
	`RSLINK_FREE
 (
node
);

6421 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6422 
rs
->
issued
 = 
TRUE
;

6423 
rs
->
issue_time
 = 
sim_cy˛e
;

6424 
rs
->
com∂ëed
 = 
TRUE
;

6425 
rs
->
föish_time
 = 
sim_cy˛e
;

6428 i‡(
vÆid_addr
 && (
rs
->
›
 !
STL_C
Ë&& 
¥e„tch_Êag
)

6430 
œt
 = 0;

6431 
rsCacheAc˚ss
 = 
rs
;

6432 
m©chnum
 = 0;

6433 
dˇche_ac˚ss
++;

6434 
cuºít
->
dˇche_ac˚ss
++;

6435 #ifde‡
DIRECTORY


6436 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6438 if(!
m©chnum
)

6440 i‡(
ˇche_dl1
[
thªadid
])

6441 #i‚de‡
PERFECT_CACHE


6442 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,

6443 #ifde‡
DIRECTORY


6444 
rs
,

6446 
rs
->
thªadid
);

6448 
œt
 = 
ˇche_dl1_œt
;

6451 #ifdef 
DCACHE_MSHR


6452 if(
œt
 > 
ˇche_dl1_œt
)

6453 #ifde‡
DIRECTORY


6454 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
rs
);

6456 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
NULL
);

6461 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6462 if(
œt
>
ˇche_dl1_œt
)

6463 
rs
->
miss_Êag
 = 1;

6465 
rs
->
miss_Êag
 = 0;

6468 
rs
->
issued
 = 
TRUE
;

6469 
rs
->
com∂ëed
 = 
TRUE
;

6470 
rs
->
issue_time
 = 
sim_cy˛e
;

6471 
rs
->
föish_time
 = 
sim_cy˛e
;

6473 i‡(
rs
->
cou¡ed_iissueq
)

6475 
cuºít
->
iissueq_thrd
--;

6476 
iissueq
--;

6477 
iissueq_˛
[
rs
->
thªadid
]--;

6478 
rs
->
cou¡ed_iissueq
 = 0;

6480 i‡(
rs
->
cou¡ed_fissueq
)

6482 
cuºít
->
fissueq_thrd
--;

6483 
fissueq
--;

6484 
fissueq_˛
[
rs
->
thªadid
]--;

6485 
rs
->
cou¡ed_fissueq
 = 0;

6489 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

6490 
	`∑nic
 ("store createsÑesult");

6492 i‡(
rs
->
ªcovî_ö°
)

6493 
	`∑nic
 ("mis-predicted store");

6495 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

6496 
n_issued
++;

6499 
issue_d⁄e
[
rs
->
thªadid
]++;

6502 
cuºít
->
iqøm_ac˚ss
++;

6504 i‡(
rs
->
issue_time
 &&Ñs->issue_timê!
sim_cy˛e
)

6505 
	`w¨n
 ("already issueÅimed onánother cycle");

6507 
rs
->
issue_time
 = 
sim_cy˛e
;

6509 
k
 = 0; k < 
MAX_IDEPS
; k++)

6511 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

6513 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

6515 
úegfûe_ac˚ss
++;

6516 
cuºít
->
úegfûe_ac˚ss
++;

6517 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6518 i‡(
k
)

6519 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6521 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6522 
úegfûe_num_p›_cou¡_cy˛e
++;

6524 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

6526 
‰egfûe_ac˚ss
++;

6527 
cuºít
->
‰egfûe_ac˚ss
++;

6528 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

6529 i‡(
k
)

6530 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

6532 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

6533 
úegfûe_num_p›_cou¡_cy˛e
++;

6538 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

6539 
cuºít
->
lsq_ac˚ss
++;

6540 
lsq_°‹e_d©a_ac˚ss
++;

6541 
cuºít
->
lsq_¥eg_ac˚ss
++;

6547 
i
 = 
rs
->
ödex
;

6548 
bLSQHô
 = 
FALSE
;

6549 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6553 
bLSQHô
 = 
FALSE
;

6554 i‡(
rs
->
isPª„tch
)

6557 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

6559 i‡(
i
 =
cuºít
->
LSQ_èû
)

6562 #ifdef 
LSQ_FIX_PARTIAL_BUG


6563 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6565 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6570 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

6572 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6573 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6575 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6576 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6578 i‡(
qwAddr1
 =
qwAddr2
)

6580 
bLSQHô
 = 
TRUE
;

6591 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6593 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
addr
 =addrË&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6597 && 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 < 
rs
->
di•_time
 && !cuºít->LSQ[i].
isPª„tch
)

6599 
bLSQHô
 = 
TRUE
;

6607 i‡(
bLSQHô
)

6609 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

6611 
m_sqNumLdRïœy
[
thªadid
]++;

6612 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

6613 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

6614 
lﬂdReje˘Cou¡
[
thªadid
]++;

6619 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 = 
rs
->
di•_time
;

6626 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
NA
)

6629 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

6631 
öãr
 = (
rs
->
addr
 >> 
ˇche_dl1
[rs->
thªadid
]->
£t_shi·
Ë& (
ªs_memb™k
 - 1);

6633 i‡(!
DEDICATED_ADDER
 || (
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
I¡ALU
))

6636 
öãr
 = 
MAGICN
 + 
rs
->
˛u°î
;

6640 i‡(
rs
->
ó_comp
)

6642 
öãr
 = 
RES_CACHEPORTS
 + 1;

6646 
öãr
 = 
RES_CACHEPORTS
 + 2;

6650 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6652 i‡(
fu
)

6654 
rs
->
issued
 = 
TRUE
;

6655 i‡(
rs
->
cou¡ed_iissueq
)

6657 
cuºít
->
iissueq_thrd
--;

6658 
iissueq
--;

6659 
iissueq_˛
[
rs
->
thªadid
]--;

6660 
rs
->
cou¡ed_iissueq
 = 0;

6662 i‡(
rs
->
cou¡ed_fissueq
)

6664 
cuºít
->
fissueq_thrd
--;

6665 
fissueq
--;

6666 
fissueq_˛
[
rs
->
thªadid
]--;

6667 
rs
->
cou¡ed_fissueq
 = 0;

6670 i‡(
fu
->
ma°î
->
busy
)

6671 
	`∑nic
 ("functional unitálready in use");

6673 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

6674 
fu
->
ma°î
->
du∂iˇã
 = 
rs
->duplicate;

6675 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6678 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

6680 
evíts
 = 0;

6681 
lﬂd_œt
 = 0;

6682 
md_addr_t
 
addr
;

6683 #ifdef 
EDA


6684 i‡(
rs
->
pois⁄
[1].
dúty
 == 1)

6685 
addr
 = 
rs
->
pois⁄
[1].
d©a
 + 
	`SEXT
 (rs->
IR
 & 0xffff);

6688 
addr
 = 
rs
->addr;

6690 i‡(
déb
[
thªadid
] && 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
))

6692 
éb_œt
 = 0;

6693 
éb_œt
 = 
	`ˇche_ac˚ss
(
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL, 
rs
->threadid);

6694 i‡(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6696 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6697 
fu
->
ma°î
->
busy
 = 0;

6698 
rs
->
issued
 = 
FALSE
;

6699 
	`ªadyq_íqueue
 (
rs
);

6700 
	`RSLINK_FREE
 (
node
);

6704 #ifde‡
DIRECTORY


6705 
m©chnum
;

6706 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6707 if(
m©chnum
 && !
rs
->
isPª„tch
 && !
mshr_≥ndög_evít
[
thªadid
])

6709 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6710 
rs
->
ˇche_ªady
 = 1;

6711 
fu
->
ma°î
->
busy
 = 0;

6712 
rs
->
issued
 = 
FALSE
;

6713 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

6715 
	`RSLINK_FREE
 (
node
);

6720 #ifdef 
DCACHE_MSHR


6721 #ifdef 
EDA


6722 
isDL0Hô
 = 1;

6723 if((
cuºít
->
ma°îid
 =0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0)) ||

6724 (
cuºít
->
ma°îid
 =1 && (
isDL0Hô
 = 
	`isCacheHô
(
ˇche_dl0
[cuºít->
jobThdId
], 
addr
, 
thªadid
)Ë=0 && 
	`isMSHRFuŒ
(
ˇche_dl1
[cuºít->
hñpThdId
]->
mshr
, 1)))

6726 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid))

6729 
fu
->
ma°î
->
busy
 = 0;

6730 
rs
->
issued
 = 
FALSE
;

6731 
	`ªadyq_íqueue
 (
rs
);

6732 
	`RSLINK_FREE
 (
node
);

6737 
cuºít
->
lsq_ac˚ss
++;

6738 
cuºít
->
lsq_wakeup_ac˚ss
++;

6741 
ldIssueCou¡
++;

6742 #ifde‡
RELAXED_CONSISTENCY


6743 
i
 = 
rs
->
ödex
;

6744 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6747 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

6749 i‡(
i
 =
cuºít
->
LSQ_èû
)

6752 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

6753 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


6754 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

6756 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6757 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6759 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6760 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6762 i‡((
qwAddr1
 =
qwAddr2
Ë&& 
cuºít
->
LSQ
[
i
].
övÆid©i⁄Re˚ived
)

6764 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

6766 
m_sqNumLdRïœy
[
thªadid
]++;

6767 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

6768 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

6769 
lﬂdReje˘Cou¡
[
thªadid
]++;

6770 
övÆid©i⁄_ª∂ay
[
thªadid
]++;

6779 
ld°Rïœy
 = 1;

6781 i‡(!
rs
->
isPª„tch
)

6782 
ld°Rïœy
 = 
	`checkLSQf‹St
 (
rs
->
ödex
, 
cuºít
);

6784 i‡(!
ld°Rïœy
)

6787 #ifde‡
REMOVE_COMPUTE_QUEUE


6788 i‡(
rs
->
cou¡ed_iissueq
)

6790 
cuºít
->
iissueq_thrd
++;

6791 
iissueq
++;

6792 
rs
->
cou¡ed_iissueq
 = 1;

6794 i‡(
rs
->
cou¡ed_fissueq
)

6796 
cuºít
->
fissueq_thrd
++;

6797 
fissueq
++;

6798 
rs
->
cou¡ed_fissueq
 = 1;

6801 
rs
->
issued
 = 
FALSE
;

6802 
rs
->
issue_time
 = 
sim_cy˛e
 + 
ªje˘RëryCy˛e
;

6803 
	`ªadyq_íqueue
 (
rs
);

6804 
	`RSLINK_FREE
 (
node
);

6805 
ld°Reje˘i⁄Cou¡
[
thªadid
]++;

6810 
bLSQHô
 = 
FALSE
;

6811 
bP¨tülHô
 = 
FALSE
;

6813 
i
 = 
rs
->
ödex
;

6814 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

6817 
lsq_œt
 = 0;

6818 i‡(
i
 !
cuºít
->
LSQ_hód
 && !
rs
->
isPª„tch
)

6825 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

6828 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
)

6829 #ifde‡
LSQ_LOAD_FAST_ISSUE


6831 && (
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
i
]))

6833 && (
cuºít
->
LSQ
[
i
].
thªadid
 =
rs
->thªadidË&& !cuºít->LSQ[i].
isPª„tch
)

6835 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

6836 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

6837 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

6838 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

6840 i‡(
qwAddr1
 =
qwAddr2
)

6842 
bLSQHô
 = 
TRUE
;

6843 i‡(
nW1
 > 
nW2
)

6847 
bP¨tülHô
 = 
TRUE
;

6853 i‡(
bLSQHô
)

6858 
lsq_œt
 = 
LSQ_LATENCY
;

6859 
rs
->
sqSt‹eF‹w¨dT
 = 
cuºít
->
LSQ
[
i
].
di•_time
;

6863 i‡(
i
 =
cuºít
->
LSQ_hód
)

6869 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6871 i‡(!
cuºít
->
•ec_mode
 && !
vÆid_addr
)

6872 
sim_övÆid_addrs
++;

6874 i‡(
ˇche_dl1
[
thªadid
] && 
vÆid_addr
 && !(
m©chnum
))

6877 
dˇche_ac˚ss
++;

6878 
cuºít
->
dˇche_ac˚ss
++;

6879 
rsCacheAc˚ss
 = 
rs
;

6880 #ifde‡
DIRECTORY


6881 #i‚de‡
PERFECT_CACHE


6882 
lﬂd_œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Ñs->threadid);

6884 
lﬂd_œt
 = 
ˇche_dl1_œt
;

6887 #i‚de‡
PERFECT_CACHE


6888 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
->threadid);

6890 
lﬂd_œt
 = 
ˇche_dl1_œt
;

6894 #ifdef 
DCACHE_MSHR


6896 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 == -1)

6897 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
rs
);

6898 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 != -1)

6899 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
NULL
);

6901 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

6902 
evíts
 |
PEV_CACHEMISS
;

6903 if(
lﬂd_œt
>
ˇche_dl1_œt
)

6904 
rs
->
miss_Êag
 = 1;

6906 
rs
->
miss_Êag
 = 0;

6910 
lﬂd_œt
 = 
fu
->
›œt
;

6913 #ifde‡ 
PULL_BACK


6914 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
 && !
rs
->
isPª„tch
)

6916 
dl1MissThisCy˛e
[
rs
->
thªadid
] = 1;

6917 i‡(
rs
->
›
 !
LDT
 &&Ñs->› !
LDS
)

6919 i‡(!
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
])

6921 i‡(
puŒbackWaôCy˛e
[
rs
->
thªadid
])

6922 
puŒbackBubbÀ
[
rs
->
thªadid
]++;

6924 
puŒbackBubbÀ
[
rs
->
thªadid
] = 2;

6925 
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
] = 1;

6927 i‡(!
puŒbackWaôCy˛e
[
rs
->
thªadid
])

6929 
puŒbackWaôCy˛e
[
rs
->
thªadid
] = 2;

6934 i‡(!
rs
->
isPª„tch
)

6936 
dl1HôThisCy˛e
[
rs
->
thªadid
] = 1;

6937 i‡(
rs
->
›
 =
LDT
 ||Ñs->› =
LDS
)

6939 
lﬂd_œt
 = 
ˇche_dl1_œt
 + 1;

6945 i‡(
PERFECT
)

6947 
lﬂd_œt
 = 
PERFECTLAT
;

6950 i‡(
lsq_œt
)

6952 
lﬂd_œt
 = 
lsq_œt
;

6954 i‡(
rs
->
isPª„tch
)

6956 
lﬂd_œt
 = 
ˇche_dl1_œt
;

6957 i‡(!
rs
->
•ec_mode
)

6958 
m_sqPª„tchC¡
++;

6962 i‡(
bP¨tülHô
)

6964 #ifde‡
DIRECTORY


6965 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5,Üoad_lat+5);

6967 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5);

6971 #ifde‡
DIRECTORY


6972 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
,Üoad_lat);

6974 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
);

6978 i‡(!
rs
->
ó_comp
)

6980 
rs
->
föish_time
 = (
sim_cy˛e
 + 
lﬂd_œt
);

6981 
rs
->
issue_time
 = 
sim_cy˛e
;

6985 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
, (‘s->
ó_comp
 ? 
PEV_AGEN
 : 0Ë| 
evíts
));

6990 #ifde‡
PWR_ACCESS


6991 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6992 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

6994 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

6997 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡ALU
)

6999 
ülu1_ac˚ss
++;

7000 
cuºít
->
ülu1_ac˚ss
++;

7002 i‡(
rs
->
ó_comp
)

7004 
add_Æu
++;

7008 
n⁄add_Æu
++;

7011 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡MULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
I¡DIV
))

7013 
ülu2_ac˚ss
++;

7014 
cuºít
->
ülu2_ac˚ss
++;

7016 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
FlﬂtMULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
FlﬂtDIV
))

7018 
Álu2_ac˚ss
++;

7019 
cuºít
->
Álu2_ac˚ss
++;

7023 
Álu1_ac˚ss
++;

7024 
cuºít
->
Álu1_ac˚ss
++;

7026 #ifde‡
DIRECTORY


7027 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
, 0);

7029 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
);

7031 
rs
->
föish_time
 = (
sim_cy˛e
 + 
fu
->
›œt
);

7032 
rs
->
issue_time
 = 
sim_cy˛e
;

7033 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

7037 
n_issued
++;

7038 
issue_d⁄e
[
rs
->
thªadid
]++;

7040 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

7042 
fqøm_ac˚ss
++;

7043 
cuºít
->
fqøm_ac˚ss
++;

7047 
iqøm_ac˚ss
++;

7048 
cuºít
->
iqøm_ac˚ss
++;

7051 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

7053 
k
 = 0; k < 
MAX_IDEPS
; k++)

7055 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

7057 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

7059 
úegfûe_ac˚ss
++;

7060 
cuºít
->
úegfûe_ac˚ss
++;

7061 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7062 i‡(
k
)

7063 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7065 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7066 
úegfûe_num_p›_cou¡_cy˛e
++;

7068 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

7070 
‰egfûe_ac˚ss
++;

7071 
cuºít
->
úegfûe_ac˚ss
++;

7072 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7073 i‡(
k
)

7074 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7076 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7077 
úegfûe_num_p›_cou¡_cy˛e
++;

7084 
	`ªadyq_íqueue
 (
rs
);

7085 i‡(!
rs
->
•ec_mode
)

7086 
iss_°Æl
++;

7087 i‡(
öãr
 < 
RES_CACHEPORTS
)

7089 i‡(!
rs
->
•ec_mode
)

7090 
b™k_c⁄f
++;

7096 
rs
->
issued
 = 
TRUE
;

7097 i‡(
rs
->
cou¡ed_iissueq
)

7099 
cuºít
->
iissueq_thrd
--;

7100 
iissueq
--;

7101 
iissueq_˛
[
rs
->
thªadid
]--;

7102 
rs
->
cou¡ed_iissueq
 = 0;

7104 i‡(
rs
->
cou¡ed_fissueq
)

7106 
cuºít
->
fissueq_thrd
--;

7107 
fissueq
--;

7108 
fissueq_˛
[
rs
->
thªadid
]--;

7109 
rs
->
cou¡ed_fissueq
 = 0;

7111 #ifde‡
DIRECTORY


7112 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1, 0);

7114 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1);

7116 i‡(!
rs
->
ó_comp
 &&Ñs->
out1
)

7118 
rs
->
föish_time
 = (
sim_cy˛e
 + 1);

7119 
rs
->
issue_time
 = 
sim_cy˛e
;

7123 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

7124 
n_issued
++;

7125 
issue_d⁄e
[
rs
->
thªadid
]++;

7126 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

7128 
fqøm_ac˚ss
++;

7129 
cuºít
->
fqøm_ac˚ss
++;

7133 
iqøm_ac˚ss
++;

7134 
cuºít
->
iqøm_ac˚ss
++;

7136 i‡((
rs
->
ö°num
 - 
cuºít
->
RUU
[cuºít->
RUU_hód
].ö°numË> 
DISTILP
)

7138 
di°ûp
++;

7139 i‡(!
rs
->
•ec_mode
)

7140 
di°ûp_vÆid
++;

7141 
rs
->
di°issue
 = 1;

7143 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

7145 
k
 = 0; k < 
MAX_IDEPS
; k++)

7147 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

7149 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

7151 
úegfûe_ac˚ss
++;

7152 
cuºít
->
úegfûe_ac˚ss
++;

7153 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7154 i‡(
k
)

7155 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7157 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7158 
úegfûe_num_p›_cou¡_cy˛e
++;

7160 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

7162 
‰egfûe_ac˚ss
++;

7163 
cuºít
->
‰egfûe_ac˚ss
++;

7165 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7166 i‡(
k
)

7167 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7169 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7170 
úegfûe_num_p›_cou¡_cy˛e
++;

7176 #ifdef 
EDA


7177 i‡(
cuºít
->
ma°îid
 == 1)

7179 i‡(
rs
->
pois⁄
[0].
dúty
 ||Ñs->poison[1].dirty)

7181 i‡(
rs
->
ó_comp
)

7183 
rs
->
pois⁄
[2].
dúty
 = 1;

7184 
rs
->
pois⁄
[2].
d©a
 =Ñs->pois⁄[1].d©®+ 
	`SEXT
 (rs->
IR
 & 0xffff);

7186 i‡(!
rs
->
ö_LSQ
)

7187 
	`ˇlcuœãWr⁄gVÆue
 (
rs
);

7189 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_LOAD
))

7190 
rs
->
pois⁄
[2].
dúty
 = 0;

7196 
	`ªadyq_íqueue
 (
rs
);

7199 
	`RSLINK_FREE
 (
node
);

7202 ; 
node
;Çodê
√xt_node
)

7204 
√xt_node
 = 
node
->
√xt
;

7206 i‡(
	`RSLINK_VALID
 (
node
))

7208 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

7210 
rs
->
queued
 = 
FALSE
;

7211 
	`ªadyq_íqueue
 (
rs
);

7213 
	`RSLINK_FREE
 (
node
);

7218 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

7220 i‡(
lﬂdReje˘Cou¡
[
ãmp
] & 
cﬁÀ˘_°©s
 == 1)

7223 
k
 = 
ª∂ayIndex
[
ãmp
];

7226 i‡(!
thec⁄ãxts
[
ãmp
]->
RUU
[
k
].
•ec_mode
)

7228 
	`fixS≥cSèã
 (
k
, 
ãmp
);

7229 
thec⁄ãxts
[
ãmp
]->
ªgs
 =Åhec⁄ãxts[ãmp]->
RUU
[
k
].
backupReg
;

7230 
	`£qC⁄si°™cyRïœy
 (
k
, 
ãmp
);

7231 
lﬂdReje˘Sèt
[
ãmp
]++;

7236 
num_issued
 = 
n_issued
;

7237 
	}
}

7245 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

7246 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

7247 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

7251 
	$r•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7253 
i
;

7255 
c⁄ãxt
 *
cuºít
;

7257 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7259 i‡(!
°ªam
)

7260 
°ªam
 = 
°dîr
;

7262 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêªgi°î c⁄ã¡†**\n", 
thªadid
);

7264 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7267 
i
 = 0; i < 
MD_NUM_IREGS
; i++)

7269 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

7271 
	`md_¥öt_úeg
 (
cuºít
->
•ec_ªgs_R
, 
i
, 
°ªam
);

7272 
	`Ârötf
 (
°ªam
, "\n");

7277 
i
 = 0; i < 
MD_NUM_FREGS
; i++)

7279 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

7281 
	`md_¥öt_Âªg
 (
cuºít
->
•ec_ªgs_F
, 
i
, 
°ªam
);

7282 
	`Ârötf
 (
°ªam
, "\n");

7287 
i
 = 0; i < 
MD_NUM_CREGS
; i++)

7289 #ifde‡
TEST_BUG


7290 i‡(
	`BITMAP_SET_P
 (
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7292 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7295 
	`md_¥öt_¸eg
 (
cuºít
->
•ec_ªgs_C
, 
i
, 
°ªam
);

7296 
	`Ârötf
 (
°ªam
, "\n");

7299 
	}
}

7311 
	$åa˚r_ªcovî
 (
thªadid
)

7313 
i
;

7314 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

7316 
c⁄ãxt
 *
cuºít
;

7318 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7322 i‡(!
cuºít
->
•ec_mode
)

7323 
	`∑nic
 ("Thªad %d, c™nŸÑecovî u∆es†ö s≥cuœtivêmode", 
thªadid
);

7324 
cuºít
->
•ec_mode
 = 
FALSE
;

7326 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7327 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7331 #ifde‡
TEST_BUG


7332 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7333 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7334 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7336 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7337 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7338 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7343 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7346 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
i
];É¡;É¡ = 
ít_√xt
)

7348 
ít_√xt
 = 
ít
->
√xt
;

7349 
ít
->
√xt
 = 
cuºít
->
buckë_‰ì_li°
;

7350 
cuºít
->
buckë_‰ì_li°
 = 
ít
;

7352 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7356 i‡(
±ø˚_a˘ive
)

7358 
cuºít
->
„tch_num
 != 0)

7360 
	`±ø˚_ídö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
);

7361 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

7362 
cuºít
->
„tch_num
--;

7366 
cuºít
->
„tch_num
 = 0;

7367 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

7368 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªcovî_PC
;

7369 
	}
}

7373 
	$åa˚r_öô
 (
thªadid
)

7375 
i
;

7377 
c⁄ãxt
 *
cuºít
;

7379 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7381 
cuºít
->
•ec_mode
 = 
FALSE
;

7382 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7383 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7386 #ifde‡
TEST_BUG


7387 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7388 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7389 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7391 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7392 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7393 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7395 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7396 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7397 
	}
}

7403 
	#HASH_ADDR
(
ADDR
Ë((((ADDRË>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

7415 
md_Áu…_ty≥


7416 
	$•ec_mem_ac˚ss
 (
mem_t
 *
mem
,

7417 
mem_cmd
 
cmd
,

7418 
md_addr_t
 
addr
,

7419 *
p
,

7420 
nbyãs
)

7422 
i
, 
ödex
;

7423 
•ec_mem_ít
 *
ít
, *
¥ev
;

7425 
c⁄ãxt
 *
cuºít
;

7426 
thªadid
 = 
mem
->threadid;

7428 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7434 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

7437 
i
 = 0; i < 
nbyãs
; i++)

7438 ((*Ë
p
)[
i
] = 0;

7440  
md_Áu…_n⁄e
;

7443 i‡(!((
addr
 >
cuºít
->
ld_ãxt_ba£
 &&ádd∏< (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& 
cmd
 =
Ród
Ë|| 
	`md_vÆid_addr
 (addr, cuºít->
ma°îid
)))

7446 
i
 = 0; i < 
nbyãs
; i++)

7447 ((*Ë
p
)[
i
] = 0;

7449  
md_Áu…_n⁄e
;

7453 
ödex
 = 
	`HASH_ADDR
 (
addr
);

7454 
¥ev
 = 
NULL
, 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
√xt
)

7456 i‡(
ít
->
addr
 ==áddr)

7459 i‡(
¥ev
 !
NULL
)

7462 
¥ev
->
√xt
 = 
ít
->next;

7463 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7464 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7471 i‡(!
ít
 && 
cmd
 =
Wrôe
)

7474 i‡(!
cuºít
->
buckë_‰ì_li°
)

7477 
cuºít
->
buckë_‰ì_li°
 = 
	`ˇŒoc
 (1,  (
•ec_mem_ít
));

7478 i‡(!
cuºít
->
buckë_‰ì_li°
)

7479 
	`Áèl
 ("thªad %d , ouào‡vútuÆ mem‹y", 
thªadid
);

7481 
ít
 = 
cuºít
->
buckë_‰ì_li°
;

7482 
cuºít
->
buckë_‰ì_li°
 = cuºít->buckë_‰ì_li°->
√xt
;

7484 i‡(!
bugcom∑t_mode
)

7487 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7488 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7489 
ít
->
addr
 =áddr;

7490 
ít
->
d©a
[0] = 0;

7491 
ít
->
d©a
[1] = 0;

7496 
nbyãs
)

7499 i‡(
cmd
 =
Ród
)

7501 i‡(
ít
)

7504 *((
byã_t
 *Ë
p
Ë*((byã_à*Ë(&
ít
->
d©a
[0]));

7510 *((
byã_t
 *Ë
p
Ë
	`MEM_READ_BYTE
 (
mem
, 
addr
);

7516 *((
byã_t
 *Ë(&
ít
->
d©a
[0])Ë*((byã_à*Ë
p
);

7520 i‡(
cmd
 =
Ród
)

7522 i‡(
ít
)

7525 *((
hÆf_t
 *Ë
p
Ë*((hÆf_à*Ë(&
ít
->
d©a
[0]));

7531 *((
hÆf_t
 *Ë
p
Ë
	`MEM_READ_HALF
 (
mem
, 
addr
);

7537 *((
hÆf_t
 *Ë& 
ít
->
d©a
[0]Ë*((hÆf_à*Ë
p
);

7541 i‡(
cmd
 =
Ród
)

7543 i‡(
ít
)

7546 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

7552 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

7558 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

7562 i‡(
cmd
 =
Ród
)

7564 i‡(
ít
)

7567 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

7568 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë*((w‹d_à*Ë& 
ít
->
d©a
[1]);

7574 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

7575 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë
	`MEM_READ_WORD
 (
mem
, 
addr
 +  (word_t));

7581 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

7582 *((
w‹d_t
 *Ë& 
ít
->
d©a
[1]Ë*(((w‹d_à*Ë
p
) + 1);

7586 
	`∑nic
 ("access sizeÇot supported in mis-speculative mode");

7589  
md_Áu…_n⁄e
;

7590 
	}
}

7594 
	$m•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7596 
i
, 
j
;

7597 
•ec_mem_ít
 *
ít
;

7599 
c⁄ãxt
 *
cuºít
;

7601 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7603 i‡(!
°ªam
)

7604 
°ªam
 = 
°dîr
;

7606 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêmem‹y c⁄ã¡†**\n", 
thªadid
);

7608 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7610 
j
 = 0; j < 
numc⁄ãxts
; j++)

7612 
	`Ârötf
 (
°ªam
, "thªad %d : \n", 
j
);

7613 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7616 
ít
 = 
thec⁄ãxts
[
j
]->
°‹e_hèbÀ
[
i
];É¡;É¡ =É¡->
√xt
)

7618 
	`myÂrötf
 (
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n", 
ít
->
addr
, (Ë(*((*Ëít->
d©a
)), *((*) &ent->data[0]), *(((*) &ent->data[0]) + 1));

7622 
	}
}

7626 
	$simoo_mem_obj
 (
mem_t
 *
mem
,

7627 
is_wrôe
,

7628 
md_addr_t
 
addr
,

7629 *
p
,

7630 
nbyãs
)

7632 
mem_cmd
 
cmd
;

7634 
thªadid
 = 
mem
->threadid;

7635 
c⁄ãxt
 *
cuºít
;

7637 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7639 i‡(!
is_wrôe
)

7640 
cmd
 = 
Ród
;

7642 
cmd
 = 
Wrôe
;

7645 *
îr°r
;

7647 
îr°r
 = 
	`mem_vÆid
 (
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

7648 i‡(
îr°r
)

7649  
îr°r
;

7653 i‡(
cuºít
->
•ec_mode
)

7654 
	`•ec_mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

7656 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadid
);

7659  
NULL
;

7660 
	}
}

7666 
	$ÊushWrôeBuf„r
 (
thªadid
)

7668 
ödex
;

7669 
wb_mem_ít
 *
ít
, *
¥ev
;

7670 
nbyãs
;

7671 
byã_t
 *
p
, *
q
;

7672 
md_addr_t
 
addr
;

7673 
ii
;

7675 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7677 
ít
 = 
cuºít
->
WBèbÀTaû
;É¡ !
NULL
;É¡ =É¡->
¥ev
)

7679 
p
 = 
ít
->
d©a
;

7680 
nbyãs
 = 
ít
->nbytes;

7681 
addr
 = 
ít
->addr;

7683 #i‡!
WATER_NSQUARED


7684 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7686 
nbyãs
-- > 0)

7688 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7689 
p
 + (
byã_t
);

7690 
addr
 + (
byã_t
);

7694 
ít
->
wrôeAÃódyD⁄e
 = 1;

7697 
	}
}

7701 
	$com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
)

7704 
byã_t
 *
p
, *
q
;

7705 
c⁄ãxt
 *
cuºít
;

7706 
wb_mem_ít
 *
ít
, *
¥ev
;

7709 
nbyãs
;

7710 
md_›code
 
›
;

7711 
md_addr_t
 
ö°
;

7712 
do_wrôe
 = 1;

7713 
jj
;

7714 
ac˚s£d
;

7716 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7717 
ít
 = 
cuºít
->
WBèbÀTaû
;

7719 i‡((
width
 & (width - 1)Ë!0 || (
addr
 & (width - 1)) != 0)

7722 
p
 = 
ít
->
d©a
;

7723 
nbyãs
 = 
ít
->nbytes;

7724 i‡(
addr
 !
ít
->addr)

7725 
	`¥ötf
("ít->add∏%Œd\n", 
ít
->
addr
);

7726 i‡(
addr
 !
ít
->addr)

7727 
	`∑nic
 ("write buffer miss-alignment\n");

7729 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

7730 
ö°
 = 
ít
->
ö°r
;

7732 
p
 = 
ít
->
d©a
;

7733 
nbyãs
 = 
ít
->nbytes;

7736 i‡(
›
 != 35)

7738 #i‡!
WATER_NSQUARED


7739 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7741 
nbyãs
-- > 0)

7743 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7744 
p
 + (
byã_t
);

7745 
addr
 + (
byã_t
);

7752 #i‡
WATER_NSQUARED


7753 
cuºít
->
waôF‹STLC
 = 0;

7755 i‡(!
isFaû
 && (
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 !0Ë&& (comm⁄_ªgs_s[cuºít->ma°îid][cuºít->a˘uÆid].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
)))

7757 
do_wrôe
 = 1;

7759 
jj
 = 0; jj < 
THREADS_PER_JOB
; jj++)

7761 i‡(
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
))

7763 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
ªgs_lock
 = 0;

7764 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 = 0;

7767 i‡(!
ít
->
wrôeAÃódyD⁄e
)

7770 
nbyãs
-- > 0)

7772 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

7773 
p
 + (
byã_t
);

7774 
addr
 + (
byã_t
);

7777 
°‹eC⁄dFaû
 = 0;

7781 
cuºít
->
ªgs
.
ªgs_R
[((
ö°
 >> 21) & 0x1f)] = 0;

7782 
do_wrôe
 = 0;

7783 
°‹eC⁄dFaû
 = 1;

7785 
cuºít
->
waôF‹STLC
 = 0;

7788 
ac˚s£d
 = 
ít
->accessed;

7789 
cuºít
->
numOfWBE¡ry
--;

7790 i‡((
ít
->
¥ev
 =
NULL
Ë&& (ít->
√xt
 == NULL))

7792 
cuºít
->
WBèbÀTaû
 = 
NULL
;

7793 
cuºít
->
WBèbÀHód
 = 
NULL
;

7794 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7795 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7797 i‡(
ít
->
√xt
 =
NULL
)

7799 
cuºít
->
WBèbÀTaû
 = 
ít
->
¥ev
;

7800 
ít
->
¥ev
->
√xt
 = 
NULL
;

7801 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7802 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7805 i‡(
ít
->
¥ev
 =
NULL
)

7807 
cuºít
->
WBèbÀHód
 = 
ít
->
√xt
;

7808 
ít
->
√xt
->
¥ev
 = 
NULL
;

7809 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7810 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7814 
ít
->
¥ev
->
√xt
 =Ént->next;

7815 
ít
->
√xt
->
¥ev
 =Ént->prev;

7816 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

7817 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

7819 
	}
}

7824 
	$commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
)

7826 
ödex
;

7827 
wb_mem_ít
 *
ít
;

7828 
c⁄ãxt
 *
cuºít
;

7829 
md_›code
 
›
;

7830 
œt
 = 0;

7831 
p‹t_œt
 = 0, 
now_œt
 = 0, 
p‹t_now
 = 0;

7834 
cuºít
 = 
thec⁄ãxts
[
thªadID
];

7835 i‡(!
COHERENT_CACHE
)

7837 
	`¥ötf
 ("This isÇot TRUE forÇon-coherent cache\n");

7838 
	`exô
 (0);

7840 
ödex
 = 0;

7841 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

7843 i‡(
ít
->
addr
 =add∏&& !ít->
com∂ëeCy˛e
)

7845 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

7846 i‡(
›
 == 35)

7848 
ít
->
com∂ëeCy˛e
 = 
sim_cy˛e
 + 
œt
;

7849 
ít
->
√edBusAc˚ss
 = 1;

7850 
ít
->
ac˚s£d
 =áccessed;

7854 
ít
->
com∂ëeCy˛e
 = completeCycle;

7855 
ít
->
√edBusAc˚ss
 =ÇeedBusAccess;

7856 
ít
->
ac˚s£d
 =áccessed;

7861 
	}
}

7865 #i‡
PROCESS_MODEL


7867 
	$checkF‹Sh¨edAddr
 (
addr
)

7869 
sh¨edAddªssLi°_s
 *
tmpPå
;

7871 
ödx
 = (Ë(((Ë
addr
 & 1016) >> 3);

7873 
ödx
 = 0;

7874 
tmpPå
 = 
sh¨edAddªssLi°
[
ödx
];

7875 i‡((
addr
 >
La°Sh¨edAddªss
Ë&& (add∏< (La°Sh¨edAddªs†+ 
La°Sh¨edSize
)))

7879 
tmpPå
 !
NULL
)

7881 i‡((
addr
 >
tmpPå
->
addªss
Ë&& (add∏< (tmpPå->addªs†+ÅmpPå->
size
)))

7883 
La°Sh¨edAddªss
 = 
tmpPå
->
addªss
;

7884 
La°Sh¨edSize
 = 
tmpPå
->
size
;

7887 
tmpPå
 =ÅmpPå->
√xt
;

7890 
	}
}

7893 
md_Áu…_ty≥


7894 
	$WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
)

7896 
md_›code
 
›
;

7897 
md_Áu…_ty≥
 
ªtu∫_ty≥
;

7899 
TempIn°r
 = 
ö°r
;

7900 
	`MD_SET_OPCODE
 (
›
, 
TempIn°r
);

7902 if(!
thec⁄ãxts
[
thªadID
]->
•ec_mode
 && (
addr
 <thec⁄ãxts[0]->
ld_°ack_ba£
Ë&& (add∏>Åhec⁄ãxts[0]->ld_°ack_ba£-
numc⁄ãxts
*
STACKSIZE
) && !(addr <=Åhecontexts[threadID]->ld_stack_base &&áddr >Åhecontexts[threadID]->ld_stack_base-STACKSIZE))

7903 
	`∑nic
("Stack boundaries breached: May beÅhe STACKSIZEÖarameter defined in context.h file is small forÅheápplication");

7905 #i‡
	`deföed
(
DO_COMPLETE_FASTFWD
Ë|| deföed(
PARALLEL_EMUL
)

7906 #i‡
PROCESS_MODEL


7907 i‡(
	`checkF‹Sh¨edAddr
 ((Ë
addr
))

7909 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
thec⁄ãxts
[0]->
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7910  
ªtu∫_ty≥
;

7913 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7914  
ªtu∫_ty≥
;

7918 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

7920 i‡(
›
 == 35)

7922 
thec⁄ãxts
[
thªadID
]->
waôF‹STLC
 = 1;

7924 
ªtu∫_ty≥
 = 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7925 #i‡
WATER_NSQUARED


7926 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7929 i‡(
ac˚ss_mem
 && 
ac˚ss_mem_id
 =
thªadID
)

7931 
	`ÊushWrôeBuf„r
 (
thªadID
);

7933  
ªtu∫_ty≥
;

7937 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

7938  
ªtu∫_ty≥
;

7940 
	}
}

7944 
INLINE
 

7945 
	$ruu_lök_idï
 (
RUU_°©i⁄
 *
rs
,

7946 
idï_num
,

7947 
idï_«me
)

7949 
CV_lök
 
hód
;

7950 
RS_lök
 *
lök
;

7952 
thªadid
 = 
rs
->threadid;

7953 
c⁄ãxt
 *
cuºít
;

7955 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7957 
rs
->
¥od
[
idï_num
] = 
NULL
;

7958 
rs
->
idï_«me
[
idï_num
] = idep_name;

7960 i‡(
idï_«me
 =
NA
)

7963 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

7964 
rs
->
whí_ªady
[
idï_num
] = 0;

7965 
rs
->
whí_idï_ªady
[
idï_num
] = 
WAIT_TIME
;

7969 
hód
 = 
	`CREATE_VECTOR
 (
idï_«me
);

7972 i‡(!
hód
.
rs
 || hód.rs->
com∂ëed
)

7974 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

7975 
rs
->
whí_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

7976 
rs
->
whí_idï_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

7979 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

7980 
rs
->
¥od
[
idï_num
] = 
hód
.rs;

7982 
	`RSLINK_NEW
 (
lök
, 
rs
);

7983 
lök
->
x
.
›num
 = 
idï_num
;

7984 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

7985 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

7986 
	}
}

7989 
	$√edsWBÊush
 (
c⁄ãxt
 * 
cuºít
, 
md_›code
 
›
, 
md_addr_t
 
addr
)

7991 
nbyãs
 = 
	`GëMemAccWidth
 (
›
);

7993 i‡(
›
 =
LDQ_U
)

7994 
addr
 =áddr & ~7;

7996 
wb_mem_ít
 *
ít
;

7998 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

8000 i‡(
nbyãs
 == 1)

8002 i‡(!(
ít
->
nbyãs
 ==Çbytes))

8004 i‡((
ít
->
addr
 <addrË&& (”¡->add∏+É¡->
nbyãs
) >áddr))

8010 i‡(
nbyãs
 == 2)

8012 i‡(
ít
->
nbyãs
 !=Çbytes)

8014 i‡(
ít
->
nbyãs
 <Çbytes)

8016 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

8023 i‡((
addr
 >
ít
->addrË&& (add∏< (ít->add∏+É¡->
nbyãs
)))

8030 i‡(
nbyãs
 == 4)

8032 i‡(
nbyãs
 !
ít
->nbytes)

8034 i‡(
ít
->
nbyãs
 <Çbytes)

8036 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

8043 i‡(
nbyãs
 == 8)

8045 i‡(
nbyãs
 !
ít
->nbytes)

8047 i‡((
ít
->
nbyãs
 == 1) || (ent->nbytes == 2) || (ent->nbytes == 4))

8049 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

8058 
	}
}

8063 
INLINE
 

8064 
	$ruu_ö°Æl_odï
 (
RUU_°©i⁄
 *
rs
,

8065 
odï_num
,

8066 
odï_«me
)

8068 
CV_lök
 
cv
;

8070 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

8073 i‡(
odï_«me
 =
NA
)

8076 
rs
->
⁄ames
[
odï_num
] = 
NA
;

8081 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

8083 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

8086 
	`CVLINK_INIT
 (
cv
, 
rs
, 
odï_num
);

8087 
	`SET_CREATE_VECTOR
 (
odï_«me
, 
cv
);

8088 
	}
}

8092 
INLINE
 

8093 
	$ruu_ö°Æl_odï_skù
 (
RUU_°©i⁄
 *
rs
,

8094 
odï_num
,

8095 
odï_«me
)

8099 i‡(
odï_«me
 =
NA
)

8102 
rs
->
⁄ames
[
odï_num
] = 
NA
;

8107 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

8109 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

8111 
	}
}

8117 
	$simoo_ªg_obj
 (
ªgs_t
 *
xªgs
,

8118 
is_wrôe
,

8119 
md_ªg_ty≥
 
π
,

8120 
ªg
,

8121 
evÆ_vÆue_t
 *
vÆ
)

8124 
thªadid
 = 0;

8125 
c⁄ãxt
 *
cuºít
;

8127 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8129 
π
)

8131 
π_g¥
:

8132 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

8135 i‡(!
is_wrôe
)

8137 
vÆ
->
ty≥
 = 
ë_uöt
;

8138 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
 (
ªg
);

8141 
	`SET_GPR
 (
ªg
, 
	`evÆ_as_uöt
 (*
vÆ
));

8144 
π_Õr
:

8145 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

8149 
	`ab‹t
 ();

8152 
π_Âr
:

8154 
	`ab‹t
 ();

8157 
π_d¥
:

8159 
	`ab‹t
 ();

8164 
π_PC
:

8165 i‡(!
is_wrôe
)

8167 
vÆ
->
ty≥
 = 
ë_addr
;

8168 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8171 
cuºít
->
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
 (*
vÆ
);

8174 
π_NPC
:

8175 i‡(!
is_wrôe
)

8177 
vÆ
->
ty≥
 = 
ë_addr
;

8178 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8181 
cuºít
->
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
 (*
vÆ
);

8185 
	`∑nic
 ("bogusÑegister bank");

8189  
NULL
;

8190 
	}
}

8193 
ruu_„tch
 ();

8195 
	g°ÆlCau£
[
MAXTHREADS
] = {0};

8196 
cou¡î_t
 
	gmb_cou¡
 = 0;

8204 
	$isLockIn°
(
md_addr_t
 
PC
)

8206 if(
PC
 <
LockInôPC
 && PC >= LockInitPC - 68)

8210 
	}
}

8211 
	$isB¨RñIn°
(
md_addr_t
 
PC
)

8213 if(
PC
 <
œ°_œ°_pc
 + 112 && PC >=Üast_last_pc - 844)

8217 
	}
}

8220 
	$ruu_di•©ch
 (
thªadid
)

8222 
i
;

8223 
ãmp˛
;

8224 
ãmµc
 = 0;

8225 
mm
, 
k
;

8226 
f‹˚_b™k
;

8227 
¶Ÿ
;

8229 
n_di•©ched
;

8230 
md_ö°_t
 
ö°
;

8231 
md_›code
 
›
;

8232 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

8233 
md_addr_t
 
èrgë_PC
 = 0;

8234 
md_addr_t
 
addr
 = 0;

8235 
RUU_°©i⁄
 *
rs
;

8236 
RUU_°©i⁄
 *
lsq
;

8239 
RUU_°©i⁄
 *
rs_dup
;

8240 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

8241 
°ack_ªcovî_idx
;

8242 
p£q
;

8243 
is_wrôe
 = 
FALSE
;

8244 
made_check
;

8245 
br_èkí
, 
br_¥ed_èkí
;

8246 
byã_t
 
ãmp_byã
;

8247 
hÆf_t
 
ãmp_hÆf
;

8248 
w‹d_t
 
ãmp_w‹d
;

8250 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

8251 
qw‹d_t
 
ãmp_qw‹d
 = 0;

8253 
qw‹d_t
 
ªgVÆ
;

8254 
hÆf_t
 
ushLdFœg
;

8256 
ªgs_t
 
ãmpReg
;

8259 
ªgs_t
 
ãmpRegPªv
;

8261 
md_Áu…_ty≥
 
Áu…
;

8263 
so·_îr‹
, 
ãmp_„tch_num
;

8266 
qw‹d_t
 
vÆ_ø
 = 0, 
vÆ_rb
 = 0, 
vÆ_rc
 = 0, 
vÆ_ø_ªsu…
 = 0;

8267 
	`c›y_to
 ();

8268 
	`b™k_lookup
 (
md_addr_t
, , );

8270 
c⁄ãxt
 *
cuºít
;

8271 
„tch_time
 = 0;

8273 
£c⁄d_run
 = 
TRUE
, 
no_d•_˛s
;

8275 
ö_LSQ
 = 0;

8276 
lsq_fuŒ
 = 0;

8278 
∑ª¡ID
;

8280 
ªsour˚_√ed
[4];

8282 
ªsour˚_√ed
[0] = 1;

8283 
ªsour˚_√ed
[1] = 1;

8284 
ªsour˚_√ed
[2] = 3;

8285 
ªsour˚_√ed
[3] = 3;

8287 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8289 
n_di•©ched
 = 0;

8290 
ãmp_„tch_num
 = 
cuºít
->
„tch_num
;

8292 
cuºít
->
„tch_ªdúe˘ed
 = 
FALSE
;

8293 
°ÆlCau£
[
thªadid
] = 0;

8294 
lsq_miss_°Æl
 = 0;

8296 i‡(
ãmp_„tch_num
 != 0)

8298 
made_check
 = 
FALSE
;

8299 
ãmp˛
 = 
a˘uÆ_˛u°îs
;

8302 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

8303 && 
cuºít
->
LSQ_num
 < 
LSQ_size
 && cuºít->
m_shLQNum
 < 
m_shLQSize


8304 #ifdef 
SMD_USE_WRITE_BUF


8305 && (
cuºít
->
m_shSQNum
 + 
m_L1WBufC¡
[
thªadid
]Ë< 
m_shSQSize


8307 && (
cuºít
->
m_shSQNum
Ë< 
m_shSQSize


8309 && (
cuºít
->
RUU_num
 < 
RUU_size
)

8310 && 
ãmp_„tch_num
 !0 && (
ruu_ö˛ude_•ec
 || !
cuºít
->
•ec_mode
))

8313 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8314 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

8316 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

8317 
ö_LSQ
 = 1;

8319 
ö_LSQ
 = 0;

8321 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8323 
ªsour˚_√ed
[0] = 0;

8324 
ªsour˚_√ed
[1] = 1;

8325 
ªsour˚_√ed
[2] = 0;

8326 
ªsour˚_√ed
[3] = 3;

8330 
ªsour˚_√ed
[0] = 1;

8331 
ªsour˚_√ed
[1] = 0;

8332 
ªsour˚_√ed
[2] = 3;

8333 
ªsour˚_√ed
[3] = 1;

8336 i‡(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesour˚_√ed[1])Ë&& (
úegfûe_˛
[thªadid] <((
IPREG_size
Ë-Ñesour˚_√ed[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8338 if(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesource_need[1]))))

8339 
°ÆlCau£
[
thªadid
] = 
SèŒIssueFuŒ
;

8340 if(!((
úegfûe_˛
[
thªadid
] <((
IPREG_size
Ë- 
ªsour˚_√ed
[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8341 
°ÆlCau£
[
thªadid
] = 
SèŒRegFuŒ
;

8345 i‡((
thec⁄ãxts
[
thªadid
]->
waôF‹BønchResﬁve
 =1Ë|| (thec⁄ãxts[thªadid]->
waôF‹STLC
))

8347 
°ÆlCau£
[
thªadid
] = 
SèŒSTLC
;

8356 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

8357 i‡(
busSlŸCou¡
 < 11)

8359 
°ÆlNoBusSlŸ
++;

8364 i‡(
cﬁÀ˘SètSt›
[
cuºít
->
id
])

8369 
j
, 
boﬁ
 = 0, 
tmp
, 
Œ_sc
 = 0;

8370 
c⁄ãxt
 *
tmpCxt
;

8371 
md_addr_t
 
mask
;

8373 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

8376 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8377 
dú_upd©e_±r
 = &(
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
dú_upd©e
);

8378 
°ack_ªcovî_idx
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->stack_recover_idx;

8379 
p£q
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
;

8380 
„tch_time
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->fetch_time;

8382 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
is_dup
 = 
TRUE
;

8383 if(
m_upd©e_miss_Êag
[
thªadid
])

8385 
m_upd©e_miss_Êag
[
thªadid
] = 0;

8386 if(
m_upd©e_miss_dïíd_°¨t
[
thªadid
])

8387 
Upd©eDïídCy˛e
 +(
sim_cy˛e
 - 
m_upd©e_miss_dïíd_°¨t
[
thªadid
]);

8388 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 0;

8392 i‡(
›
 =
STL_C
)

8395 
Œ_sc
++;

8399 i‡(
›
 =
LDL_L
)

8401 
Œ_sc
++;

8403 if(
	`MD_OP_FLAGS
(
›
Ë& 
F_FENCE
)

8404 
mb_cou¡
++;

8407 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_TRAP
)

8409 
	#OSF_SYS_gëthªadid
 500

	)

8410 
	#OSF_SYS_STATS
 530

	)

8411 
	#OSF_SYS_BARRIER_STATS
 531

	)

8412 
	#OSF_SYS_LOCK_STATS
 532

	)

8413 
	#OSF_SYS_BARRIER_INSTR
 533

	)

8414 
qw‹d_t
 
syscode
 = 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_V0
];

8415 if(
cuºít
->
•ec_mode
 || !(
syscode
 =
OSF_SYS_gëthªadid
 || syscodê=
OSF_SYS_STATS
 || syscodê=
OSF_SYS_BARRIER_INSTR
 ))

8417 i‡(
cuºít
->
RUU_num
 != 0)

8419 
°ÆlCau£
[
thªadid
] = 
SèŒTøp
;

8424 i‡(
cuºít
->
•ec_mode
)

8425 
	`∑nic
 ("drainedánd speculative");

8428 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->regs_PC;

8429 
cuºít
->
¥ed_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->pred_PC;

8430 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8433 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

8434 
cuºít
->
•ec_ªgs_R
[
MD_REG_ZERO
] = 0;

8435 #ifde‡
TARGET_ALPHA


8436 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8437 
cuºít
->
•ec_ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8441 
addr
 = 0;

8442 
is_wrôe
 = 
FALSE
;

8445 #i‡
	`deföed
(
TARGET_PISA
)

8446 
vÆ_ø
 = 
	`GPR
 (
RS
);

8447 
vÆ_rb
 = 
	`GPR
 (
RT
);

8448 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8452 
Áu…
 = 
md_Áu…_n⁄e
;

8453 
so·_îr‹
 = 
FALSE
;

8456 
ãmpRegPªv
 = 
cuºít
->
ªgs
;

8459 
ushLdFœg
 = 0;

8461 
›
)

8463 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

8464 
OP
: \

8466 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

8467 
out1
 = 
O1
; 
out2
 = 
O2
; \

8468 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

8469 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

8470 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

8471 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

8472 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

8473 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

8475 if(
£c⁄d_run
Ë
	`SYMCAT
(
OP
,
_IMPL
); \

8477 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

8478 
OP
: \

8480 
›
 = 
MD_NOP_OP
; \

8482 
out1
 = 
NA
; 
out2
 = NA; \

8483 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

8486 
	#CONNECT
(
OP
Ë

	)

8492 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

8494 i‡(!
cuºít
->
•ec_mode
) \

8495 
Áu…
 = (
FAULT
); \

8499 
	#THREADID
 (
cuºít
->
id
)

	)

8500 
	~"machöe.def
"

8503 
›
 = 
MD_NOP_OP
;

8505 
out1
 = 
NA
;

8506 
out2
 = 
NA
;

8507 
ö1
 = 
NA
;

8508 
ö2
 = 
NA
;

8509 
ö3
 = 
NA
;

8512 i‡(!
cuºít
->
•ec_mode
)

8514 if(!(
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]))

8515 
puª_num_ö¢
++;

8516 
tŸÆ_num_ö¢
++;

8517 
sim_num_ö¢
++;

8518 
cuºít
->
sim_num_ö¢
++;

8521 i‡(
Áu…
 !
md_Áu…_n⁄e
)

8523 
	`Ârötf
 (
°dîr
, "sim_cy˛ê%ld\¿sim_ö¢ %ld,Åhrdid %d,Ö¯%lx, Next_p¯%lx\n", (Ë
sim_cy˛e
, (Ë
cuºít
->
sim_num_ö¢
, cuºít->
id
, (Ëcuºít->
ªgs
.
ªgs_PC
,

8524 (Ë
cuºít
->
ªgs
.
ªgs_PC
);

8525 
	`Ârötf
 (
°dîr
, "„tchÖ¯ %lx,„tch Next_p¯ %lx\n", (Ë
cuºít
->
„tch_ªgs_PC
, (Ëcuºít->
„tch_¥ed_PC
);

8526 
	`Áèl
 ("Thªad %d,Ç⁄-•ecuœtivêÁu… (%dËdëe˘ed @ %lx", 
thªadid
, 
Áu…
, (Ë
cuºít
->
ªgs
.
ªgs_PC
);

8530 #i‡
	`deföed
(
TARGET_PISA
)

8531 
vÆ_rc
 = 
	`GPR
 (
RD
);

8532 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RS
);

8533 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8534 i‡(
out1
 < 32)

8535 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

8537 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

8538 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

8539 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

8541 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

8544 
ãmpReg
 = 
cuºít
->
ªgs
;

8547 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
))

8549 
sim_tŸÆ_ªfs
++;

8550 i‡(!
cuºít
->
•ec_mode
)

8551 
sim_num_ªfs
++;

8553 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

8554 
is_wrôe
 = 
TRUE
;

8557 
sim_tŸÆ_lﬂds
++;

8558 i‡(!
cuºít
->
•ec_mode
)

8559 
sim_num_lﬂds
++;

8563 
br_èkí
 = (
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)));

8564 
br_¥ed_èkí
 = (
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)));

8567 i‡(
›
 !
MD_NOP_OP
)

8588 
DUPLICATION_ac˚ss
[
thªadid
]++;

8589 
du∂iˇti⁄_ac˚ss
++;

8591 
rs
 = &
cuºít
->
RUU
[cuºít->
RUU_èû
];

8593 #ifde‡
HOTLEAKAGE


8594 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

8596 if(!
ruu_ö‹dî_issue
)

8598 
ª«me_ac˚ss
++;

8599 
cuºít
->
ª«me_ac˚ss
++;

8602 
rs
->
thªadid
 =Åhreadid;

8603 
rs
->
IR
 = 
ö°
;

8604 
rs
->
›
 = op;

8605 
rs
->
ö°num
 = ++
ö°£qnum
;

8606 
rs
->
isSyncIn°
 = (
cﬁÀ˘_lock_°©s
[
thªadid
] && 
	`isLockIn°
(
cuºít
->
ªgs
.
ªgs_PC
));

8607 
rs
->
isSyncIn°B¨
 = (
cﬁÀ˘_b¨rõr_°©s
[
thªadid
]);

8608 
rs
->
isSyncIn°B¨Rñ
 = (
cﬁÀ˘_b¨rõr_ªÀa£
 && 
	`isB¨RñIn°
(
cuºít
->
ªgs
.
ªgs_PC
));

8609 if(
cuºít
->
ªgs
.
ªgs_PC
 >100000 && 
thªadid
 == 15)

8611 
œ°_œ°_pc
 = 
œ°_pc
;

8612 
œ°_pc
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8615 
rs
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8616 
rs
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8617 
rs
->
¥ed_PC
 = 
cuºít
->pred_PC;

8618 
rs
->
ö_LSQ
 = 
FALSE
;

8619 
rs
->
ó_comp
 = 
FALSE
;

8620 
rs
->
ab™k
 = -1;

8621 
rs
->
pb™k
 = -1;

8622 
rs
->
ªcovî_ö°
 = 
FALSE
;

8623 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

8624 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

8625 
rs
->
•ec_mode
 = 
cuºít
->spec_mode;

8626 
rs
->
„tch_time
 = fetch_time;

8627 
rs
->
di•_time
 = 
sim_cy˛e
;

8628 
rs
->
föish_time
 = 0;

8629 
rs
->
ˇche_ªady
 = 0;

8630 
rs
->
ö_qwaô
 = 0;

8631 
rs
->
issue_time
 = 0;

8632 
rs
->
addr
 = 0;

8633 
rs
->
di°issue
 = 0;

8634 
rs
->
lsqE¡ry
 = 0;

8635 
rs
->
miss_Êag
 = 0;

8637 
rs
->
£q
 = ++(
cuºít
->
ö°_£q
);

8638 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

8639 
rs
->
±ø˚_£q
 = 
p£q
;

8640 
rs
->
cou¡ed_iissueq
 = 0;

8641 
rs
->
cou¡ed_fissueq
 = 0;

8642 
rs
->
övÆid©i⁄Re˚ived
 = 0;

8643 
rs
->
du∂iˇã
 = (1 - 
£c⁄d_run
);

8645 
rs
->
¥evRegVÆ
 = 
ªgVÆ
;

8647 
rs
->
backupReg
 = 
ãmpRegPªv
;

8648 #ifde‡
DIRECTORY


8649 
rs
->
wrôewaô
 = 0;

8650 
rs
->
RódSh¨eDú
 = 0;

8651 
rs
->
wrôemiss
 = 0;

8653 i‡(!
£c⁄d_run
)

8654 
rs
->
•ec_mode
 = 0;

8655 
rs
->
Áu…ög_ö°r
 = 
FALSE
;

8657 #ifde‡
PWR_WAKE


8658 
rs
->
cou¡ed_úódy
 = 0;

8659 
rs
->
cou¡ed_‰ódy
 = 0;

8660 
rs
->
cou¡ed_lsqªady
 = 0;

8663 
rs
->
‰ìd
 = 0;

8664 
rs
->
vÆ_ø
 = val_ra;

8665 
rs
->
vÆ_rb
 = val_rb;

8666 
rs
->
vÆ_rc
 = val_rc;

8667 
rs
->
vÆ_ø_ªsu…
 = val_ra_result;

8668 
rs
->
whí_ªady
[0] = 
WAIT_TIME
;

8669 
rs
->
whí_ªady
[1] = 
WAIT_TIME
;

8670 
rs
->
whí_ªady
[2] = 
WAIT_TIME
;

8671 
rs
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

8672 
rs
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

8673 
rs
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

8674 
rs
->
idï_«me
[0] = 0;

8675 
rs
->
idï_«me
[1] = 0;

8676 
rs
->
idï_«me
[2] = 0;

8677 
rs
->
isL1Miss
 = 0;

8679 #if 
	`deföed
(
EDA
Ë& deföed(
RUN_ORACLE
)

8680 i‡(
cuºít
->
ma°îid
 == 1)

8681 
rs
->
sim_num_ö¢
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->sim_num_insn;

8684 
rs
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

8685 
rs
->
outReg
 = 
out1
;

8687 
rs
->
¥evReg
 = 
ãmpReg
;

8689 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& !
£c⁄d_run
)

8690 
rs
->
›
 = 
MD_AGEN_OP
;

8693 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& 
£c⁄d_run
)

8695 
lsq
 = &
cuºít
->
LSQ
[cuºít->
LSQ_èû
];

8696 #ifde‡
HOTLEAKAGE


8697 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

8699 
rs
->
›
 = 
MD_AGEN_OP
;

8700 
rs
->
ó_comp
 = 
TRUE
;

8705 
lsq
->
sqSt‹eF‹w¨dT
 = -1;

8709 
lsq
->
ushFœg
 = 
ushLdFœg
;

8712 
lsq
->
thªadid
 =Åhreadid;

8713 
lsq
->
IR
 = 
ö°
;

8714 
lsq
->
›
 = op;

8715 
lsq
->
ö°num
 = 
ö°£qnum
;

8716 
lsq
->
isSyncIn°
 = (
cﬁÀ˘_lock_°©s
[
thªadid
] && 
	`isLockIn°
(
cuºít
->
ªgs
.
ªgs_PC
));

8717 
lsq
->
isSyncIn°B¨
 = (
cﬁÀ˘_b¨rõr_°©s
[
thªadid
]);

8718 
lsq
->
isSyncIn°B¨Rñ
 = (
cﬁÀ˘_b¨rõr_ªÀa£
 && 
	`isB¨RñIn°
(
cuºít
->
ªgs
.
ªgs_PC
));

8720 
lsq
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8721 
lsq
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8722 
lsq
->
¥ed_PC
 = 
cuºít
->pred_PC;

8723 
lsq
->
ö_LSQ
 = 
TRUE
;

8724 
lsq
->
ó_comp
 = 
FALSE
;

8725 
lsq
->
ö_qwaô
 = 0;

8726 
lsq
->
di°issue
 = 0;

8727 
lsq
->
‰ìd
 = 0;

8728 
lsq
->
ab™k
 = -1;

8729 
lsq
->
pb™k
 = -1;

8731 
lsq
->
ªcovî_ö°
 = 
FALSE
;

8732 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

8733 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

8734 
lsq
->
°ack_ªcovî_idx
 = 0;

8735 
lsq
->
•ec_mode
 = 
cuºít
->spec_mode;

8736 
lsq
->
„tch_time
 = fetch_time;

8737 
lsq
->
di•_time
 = 
sim_cy˛e
;

8738 
lsq
->
föish_time
 = 0;

8739 
lsq
->
ˇche_ªady
 = 0;

8740 
lsq
->
issue_time
 = 0;

8741 
lsq
->
cou¡ed_iissueq
 = 0;

8742 
lsq
->
cou¡ed_fissueq
 = 0;

8743 
lsq
->
miss_Êag
 = 0;

8745 
lsq
->
övÆid©i⁄Re˚ived
 = 0;

8746 #ifde‡
PWR_WAKE


8747 
lsq
->
cou¡ed_úódy
 = 0;

8748 
lsq
->
cou¡ed_‰ódy
 = 0;

8749 
lsq
->
cou¡ed_lsqªady
 = 0;

8751 
mm
 = 0; mm < 
CLUSTERS
; mm++)

8753 
lsq
->
°_ªach
[
mm
] = 0;

8756 
lsq
->
backupReg
 = 
ãmpRegPªv
;

8757 
lsq
->
addr
 =áddr;

8758 
rs
->
addr
 =áddr;

8760 
rs
->
ab™k
 = 
lsq
->abank;

8761 i‡(!
BANKPRED
)

8763 
rs
->
pb™k
 =Ñs->
ab™k
;

8764 
lsq
->
pb™k
 =Üsq->
ab™k
;

8766 
rs
->
ab™k
 =Ñs->ab™k % 
CLUSTERS
;

8767 
lsq
->
ab™k
 = 
rs
->abank;

8768 
rs
->
pb™k
 =Ñs->pb™k % 
CLUSTERS
;

8769 
lsq
->
pb™k
 = 
rs
->pbank;

8770 i‡(!
lsq
->
•ec_mode
)

8772 i‡(
lsq
->
ab™k
 =lsq->
pb™k
)

8773 
ac_b™k_¥ed_c‹r
++;

8775 
ac_b™k_¥ed_wr⁄g
++;

8777 
lsq
->
£q
 = ++(
cuºít
->
ö°_£q
);

8778 
lsq
->
±ø˚_£q
 =Ötrace_seq++;

8779 
lsq
->
vÆ_ø
 = val_ra;

8780 
lsq
->
vÆ_rb
 = val_rb;

8781 
lsq
->
vÆ_rc
 = val_rc;

8782 
lsq
->
vÆ_ø_ªsu…
 = val_ra_result;

8783 
	`±ø˚_√wu›
 (
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

8784 
	`±ø˚_√w°age
 (
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

8785 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

8787 
lsq
->
whí_ªady
[0] = 
WAIT_TIME
;

8788 
lsq
->
whí_ªady
[1] = 
WAIT_TIME
;

8789 
lsq
->
whí_ªady
[2] = 
WAIT_TIME
;

8790 
lsq
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

8791 
lsq
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

8792 
lsq
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

8793 
lsq
->
idï_«me
[0] = 0;

8794 
lsq
->
idï_«me
[1] = 0;

8795 
lsq
->
idï_«me
[2] = 0;

8798 #if 
	`deföed
(
EDA
Ë& deföed(
RUN_ORACLE
)

8799 i‡(
cuºít
->
ma°îid
 == 1)

8800 
lsq
->
sim_num_ö¢
 = 
thec⁄ãxts
[
cuºít
->
‹a˛eId
]->sim_num_insn;

8803 
lsq
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

8804 
lsq
->
outReg
 = 
out1
;

8807 
lsq
->
robE¡ry
 = 
rs
->
ödex
;

8808 
rs
->
lsqE¡ry
 = 
lsq
->
ödex
;

8809 
lsq
->
isPª„tch
 = 0;

8810 
lsq
->
isL1Miss
 = 0;

8812 
rs
->
ùªg
[0] = 0;

8813 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

8814 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

8816 
rs
->
˛u°î
 = 
lsq
->˛u°î = 
thªadid
;

8817 
cuºít
->
iissueq_thrd
++;

8818 
iissueq
++;

8819 
iissueq_˛
[
rs
->
thªadid
]++;

8821 #ifde‡ 
PWR_CLUSTER


8822 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8825 
lsq
->
cou¡ed_iissueq
 = 1;

8827 
lsq
->
pb™k
 =Üsq->
˛u°î
;

8828 
rs
->
pb™k
 =Ñs->
˛u°î
;

8830 
rs
->
whí_öq
 = 
sim_cy˛e
;

8831 
lsq
->
whí_öq
 = 
rs
->when_inq;

8833 
lsq
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

8834 
lsq
->
ùªg
[1] = 0;

8835 
lsq
->
ùªg
[2] = 0;

8837 
lsq
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

8838 
lsq
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

8843 
	`ruu_lök_idï
 (
rs
, 0, 
NA
);

8844 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8845 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8847 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
DTMP
);

8848 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
NA
);

8850 
rs
->
out1
 = 
DTMP
;

8851 
rs
->
›ªg
 = 0;

8852 
rs
->
ﬁd¥eg
 = 0;

8854 
	`ruu_lök_idï
 (
lsq
, 
STORE_OP_INDEX
, 
ö1
);

8855 
	`ruu_lök_idï
 (
lsq
, 
STORE_ADDR_INDEX
, 
DTMP
);

8856 
	`ruu_lök_idï
 (
lsq
, 2, 
NA
);

8858 
	`ruu_ö°Æl_odï
 (
lsq
, 0, 
out1
);

8859 
	`ruu_ö°Æl_odï
 (
lsq
, 1, 
out2
);

8860 
lsq
->
out1
 = out1;

8862 
n_di•©ched
++;

8864 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

8865 
cuºít
->
RUU_num
++;

8866 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 1Ë% 
LSQ_size
;

8867 
cuºít
->
LSQ_num
++;

8869 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

8872 i‡(
out1
 != 0 && out1 != 63)

8873 
cuºít
->
m_shLQNum
++;

8875 
lsq
->
isPª„tch
 = 1;

8878 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

8880 
cuºít
->
m_shSQNum
++;

8883 
lsq_ac˚ss
++;

8884 
cuºít
->
lsq_ac˚ss
++;

8885 
lsq_¥eg_ac˚ss
++;

8886 
cuºít
->
lsq_¥eg_ac˚ss
++;

8890 if(!
ruu_ö‹dî_issue
)

8892 
rob2_ac˚ss
++;

8893 
cuºít
->
rob2_ac˚ss
++;

8896 i‡(
	`OPERANDS_READY
 (
rs
))

8898 
n_ªady
++;

8899 
	`ªadyq_íqueue
 (
rs
);

8901 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
lsq
);

8903 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
	`OPERANDS_READY
 (
lsq
))

8905 
lsq_°‹e_d©a_ac˚ss
++;

8906 
	`ªadyq_íqueue
 (
lsq
);

8909 i‡(
›
 =
STL_C
 || o∞=
LDL_L
)

8918 
rs
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

8919 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

8920 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

8922 
rs
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

8923 
rs
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

8924 
rs
->
out1
 = out1;

8926 
rs
->
˛u°î
 =Ñs->
thªadid
;

8928 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8930 
cuºít
->
fissueq_thrd
++;

8931 
fissueq
++;

8932 
fissueq_˛
[
rs
->
thªadid
]++;

8933 #ifde‡ 
PWR_CLUSTER


8934 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8936 
rs
->
cou¡ed_fissueq
 = 1;

8937 
fqøm_ac˚ss
++;

8938 
cuºít
->
fqøm_ac˚ss
++;

8942 
cuºít
->
iissueq_thrd
++;

8943 
iissueq
++;

8944 
iissueq_˛
[
rs
->
thªadid
]++;

8945 #ifde‡ 
PWR_CLUSTER


8946 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

8948 
rs
->
cou¡ed_iissueq
 = 1;

8949 
iqøm_ac˚ss
++;

8950 
cuºít
->
iqøm_ac˚ss
++;

8953 
rs
->
whí_öq
 = 
sim_cy˛e
;

8955 i‡(!
£c⁄d_run
)

8957 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

8958 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8959 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8960 i‡(
out1
)

8962 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
out1
);

8963 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
out2
);

8964 
rs
->
out1
 = out1;

8968 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
DTMP
);

8969 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
NA
);

8970 
rs
->
out1
 = 
DTMP
;

8975 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

8976 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

8977 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

8979 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
out1
);

8980 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
out2
);

8981 
rs
->
out1
 = out1;

8985 
n_di•©ched
++;

8987 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

8988 
cuºít
->
RUU_num
++;

8989 if(!
ruu_ö‹dî_issue
)

8991 
rob2_ac˚ss
++;

8992 
cuºít
->
rob2_ac˚ss
++;

8996 i‡(
	`OPERANDS_READY
 (
rs
))

8998 
n_ªady
++;

8999 
	`ªadyq_íqueue
 (
rs
);

9000 
cuºít
->
œ°_›
 = 
RSLINK_NULL
;

9004 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
rs
);

9011 
rs
 = 
NULL
;

9015 
sim_tŸÆ_ö¢
++;

9016 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9017 
sim_tŸÆ_bønches
++;

9019 i‡(!
cuºít
->
•ec_mode
 && 
£c⁄d_run
)

9023 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9025 
sim_num_bønches
++;

9027 i‡(!(
rs
->
du∂iˇã
))

9029 
cuºít
->
b¥ed_ac˚ss
++;

9030 
b¥ed_ac˚ss
++;

9033 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

9035 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

9036  
cuºít
->
ªgs
.
ªgs_PC
,

9037  
cuºít
->
ªgs
.
ªgs_NPC
,

9038  
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +

9039  (
md_ö°_t
)),

9040  
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +

9041  (
md_ö°_t
)),

9042  
cuºít
->
¥ed_PC
 =cuºít->
ªgs
.
ªgs_NPC
,

9043  
›
,

9044  &
rs
->
dú_upd©e
,

9045 
rs
->
thªadid
, (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[rs->thªadid]->
ma°îid
 :Ñs->threadid));

9048 i‡(
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
 && !cuºít->
„tch_ªdúe˘ed
)

9050 
cuºít
->
•ec_mode
 = 
TRUE
;

9051 
rs
->
ªcovî_ö°
 = 
TRUE
;

9052 
cuºít
->
ªcovî_PC
 = cuºít->
ªgs
.
ªgs_NPC
;

9053 
	`c›y_to
 (
thªadid
);

9058 
	`±ø˚_√w°age
 (
p£q
, 
PST_DISPATCH
, (
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

9059 i‡(
›
 =
MD_NOP_OP
)

9061 
	`±ø˚_ídö°
 (
p£q
);

9064 
i
 = 0; i < 
pc°©_√…
; i++)

9066 
cou¡î_t
 
√wvÆ
;

9067 
dñè
;

9070 
√wvÆ
 = 
	`STATVAL
 (
pc°©_°©s
[
i
]);

9071 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

9072 i‡(
dñè
 != 0)

9074 
	`°©_add_ßm∂es
 (
pc°©_sdi°s
[
i
], 
cuºít
->
ªgs
.
ªgs_PC
, 
dñè
);

9075 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

9079 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

9080 
cuºít
->
„tch_num
--;

9081 
ãmp_„tch_num
--;

9084 i‡(!
made_check
)

9086 i‡(
	`dlôe_check_bªak
 (0, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

9087 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9092 
°ÆlCau£
[
thªadid
] = 
SèŒFëchEm±y
;

9093 i‡(!
n_di•©ched
)

9095 
m_tŸÆSèŒ
[
thªadid
]++;

9096 if(
°ÆlCau£
[
thªadid
])

9098 
°ÆlCau£
[
thªadid
])

9100 
SèŒRegFuŒ
 :

9101 
m_ªgFuŒ
[
thªadid
]++;

9103 
SèŒIssueFuŒ
 :

9104 
m_issueFuŒ
[
thªadid
]++;

9106 
SèŒFëchEm±y
 :

9107 if(
thec⁄ãxts
[
thªadid
]->
ruu_„tch_issue_dñay
)

9108 
m_û1Miss
[
thªadid
]++;

9110 
m_„tchEm±y
[
thªadid
]++;

9112 
SèŒSTLC
 :

9113 
m_STLC
[
thªadid
]++;

9115 
SèŒTøp
 :

9116 
m_å≠
[
thªadid
]++;

9118  : 
	`∑nic
("No stall cause found");

9121 i‡(
cuºít
->
m_shLQNum
 =
m_shLQSize
)

9123 
°ÆlCau£
[
thªadid
] = 
SèŒLQFuŒ
;

9124 
m_sqLQFuŒ
[
thªadid
]++;

9125 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9126 
m_LﬂdRólMiss
[
thªadid
]++;

9128 
m_LﬂdRólHô
[
thªadid
]++;

9130 i‡(
m_shSQSize
 =(
cuºít
->
m_shSQNum


9131 #ifdef 
SMD_USE_WRITE_BUF


9132 +
m_L1WBufC¡
[
thªadid
]

9136 
°ÆlCau£
[
thªadid
] = 
SèŒSQFuŒ
;

9137 
m_sqSQFuŒ
[
thªadid
]++;

9138 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9139 
m_St‹eRólMiss
[
thªadid
]++;

9141 
m_St‹eRólHô
[
thªadid
]++;

9143 if(
cuºít
->
RUU_num
 =
RUU_size
)

9145 
°ÆlCau£
[
thªadid
] = 
SèŒRUUFuŒ
;

9146 
m_RUUFuŒ
[
thªadid
]++;

9149 if((
°ÆlCau£
[
thªadid
] =
SèŒRUUFuŒ
 || sèŒCau£[thªadid] =
SèŒLQFuŒ
 || sèŒCau£[thªadid] =
SèŒSQFuŒ
 || sèŒCau£[thªadid] =
SèŒRegFuŒ
 || sèŒCau£[thªadid] =
SèŒIssueFuŒ
 || sèŒCau£[thªadid] =
SèŒSTLC
 || sèŒCau£[thªadid] =
SèŒTøp
))

9151 if(
cuºít
->
LSQ_num
)

9153 if(
	`MD_OP_FLAGS
(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
›
Ë& 
F_LOAD
)

9155 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9156 
m_LﬂdSèŒMiss
[
thªadid
]++;

9158 
m_LﬂdSèŒHô
[
thªadid
]++;

9159 
m_LﬂdMiss
[
thªadid
]++;

9163 
m_St‹eMiss
[
thªadid
]++;

9164 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9165 
m_St‹eSèŒMiss
[
thªadid
]++;

9167 
m_St‹eSèŒHô
[
thªadid
]++;

9168 if(
m_upd©e_miss
[
thªadid
])

9169 
m_St‹eUpd©eMiss
[
thªadid
]++;

9170 if(
m_upd©e_miss
[
thªadid
] && !
m_upd©e_miss_Êag
[threadid])

9172 
m_upd©e_miss_Êag
[
thªadid
] = 1;

9173 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 
sim_cy˛e
;

9177 if(
	`MD_OP_FLAGS
(
cuºít
->
RUU
[cuºít->
RUU_hód
].
›
Ë& 
F_FENCE
)

9179 
m_St‹eMiss
[
thªadid
]++;

9180 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9181 
m_St‹eSèŒMiss
[
thªadid
]++;

9183 
m_St‹eSèŒHô
[
thªadid
]++;

9184 if(
m_upd©e_miss
[
thªadid
])

9185 
m_St‹eUpd©eMiss
[
thªadid
]++;

9186 if(
m_upd©e_miss
[
thªadid
] && !
m_upd©e_miss_Êag
[threadid])

9188 
m_upd©e_miss_Êag
[
thªadid
] = 1;

9189 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 
sim_cy˛e
;

9194  
n_di•©ched
;

9195 
	}
}

9203 
	$„tch_öô
 (
thªadid
)

9206 
i
 = 0;

9207 
c⁄ãxt
 *
cuºít
;

9209 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9211 
i
 = 0; i < 
ruu_ifq_size
; i++)

9213 
cuºít
->
„tch_d©a
[
i
] = (
„tch_ªc
 *Ë
	`ˇŒoc
 (1,  (fetch_rec));

9214 i‡(!
cuºít
->
„tch_d©a
[
i
])

9215 
	`Áèl
 ("out of virtual memory");

9216 
cuºít
->
„tch_d©a
[
i
]->
ödex
 = i;

9217 
cuºít
->
„tch_d©a
[
i
]->
thªadid
 =Åhreadid;

9219 
cuºít
->
„tch_num
 = 0;

9220 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

9221 
IFQ_cou¡
 = 0;

9222 
IFQ_fcou¡
 = 0;

9224 
	}
}

9226 
	gœ°_ö°_mis£d
 = 
FALSE
;

9227 
	gœ°_ö°_tmis£d
 = 
FALSE
;

9233 
	$ruu_„tch
 ()

9235 
i
 = 0, 
j
 = 0, 
k
 = 0, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

9236 
md_ö°_t
 
ö°
;

9237 
°ack_ªcovî_idx
;

9238 
bønch_˙t
, 
øy_mu…
;

9239 
md_addr_t
 
„tch_£t
 = 0, 
ö°_£t
;

9240 
ödex
;

9241 
md_›code
 
›
;

9243 
thªadid
, 
tID
 = 0;

9244 
c⁄ãxt
 *
cuºít
 = 0;

9245 
thªads„tched
 = 0;

9246 
ãmp
;

9248 i‡(
dißbÀ_øy
)

9249 
øy_mu…
 = 1;

9251 
øy_mu…
 = 2;

9254 
tID
 < 
numc⁄ãxts
)

9256 
cuºít
 = 
thec⁄ãxts
[
tID
];

9257 
tID
++;

9259 
thªadid
 = 
cuºít
->
id
;

9261 i‡(
cuºít
->
waô_f‹_„tch
 == 2)

9262 
cuºít
->
waô_f‹_„tch
 = 1;

9263 
„tch_d⁄e
[
thªadid
] = 0;

9265 
j
 = 0, 
d⁄e
 = 
FALSE
, 
bønch_˙t
 = 0;

9266 (
cuºít
->
„tch_num
 < 
ruu_ifq_size
-1)

9267 && !
d⁄e
 && !
cuºít
->
ruu_„tch_issue_dñay
 && cuºít->
ru¬ög
 && 
j
 < (
ruu_decode_width
 * 
„tch_•ìd
Ë&& cuºít->
a˘ive_this_cy˛e
 ; 
i
++, j++)

9269 i‡(!
j
)

9271 
iˇche_ac˚ss
++;

9272 
cuºít
->
iˇche_ac˚ss
++;

9276 
cuºít
->
„tch_ªgs_PC
 = cuºít->
„tch_¥ed_PC
;

9279 i‡(
cuºít
->
ld_ãxt_ba£
 <cuºít->
„tch_ªgs_PC
 && cuºít->„tch_ªgs_PC < (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& !(cuºít->„tch_ªgs_PC & ( (
md_ö°_t
) - 1)))

9282 #ifdef 
EDA


9283 if(
cuºít
->
ma°îid
 == 1)

9285 
	`MD_FETCH_INST
 (
ö°
, 
thec⁄ãxts
[
cuºít
->
hñpThdId
]->
mem
, cuºít->
„tch_ªgs_PC
);

9290 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
„tch_ªgs_PC
);

9292 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9294 
œt
 = 
ˇche_û1_œt
;

9297 i‡(!
j
)

9298 
„tch_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9299 
ö°_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9300 i‡(
„tch_£t
 !
ö°_£t
)

9303 #ifde‡ 
FIX2_BUG


9304 i‡(!
cuºít
->
waô_f‹_„tch
)

9307 i‡(
ˇche_û1
[
thªadid
])

9311 
rsCacheAc˚ss
 = 
NULL
;

9312 #ifde‡
DIRECTORY


9313 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9314 
	`¥ötf
("debug 1\n");

9315 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9316 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9317 
NULL
, NULL, NULL,
thªadid
);

9319 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
 (
cuºít
->
„tch_ªgs_PC
), 
NULL
, 
	`ISCOMPRESS
 ( (
md_ö°_t
)), 
sim_cy˛e
, NULL, NULL,Åhreadid);

9321 i‡(
œt
 > (
ˇche_û1_œt
))

9322 
œ°_ö°_mis£d
 = 
TRUE
;

9325 i‡(
ôlb
[
thªadid
])

9327 #ifde‡
DIRECTORY


9328 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9329 
	`¥ötf
("debug 2\n");

9330 
éb_œt
 = 
	`ˇche_ac˚ss
(
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9331 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9332 
NULL
, NULL, NULL, 
thªadid
);

9334 
éb_œt
 = 
	`ˇche_ac˚ss
 (
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
 (
cuºít
->
„tch_ªgs_PC
), 
NULL
, 
	`ISCOMPRESS
 ( (
md_ö°_t
)), 
sim_cy˛e
, NULL, NULL,Åhreadid);

9337 i‡(
éb_œt
 > 1)

9338 
œ°_ö°_tmis£d
 = 
TRUE
;

9340 
œt
 = 
	`max2
 (
éb_œt
,Üat);

9343 i‡(
œt
 !(
ˇche_û1_œt
))

9345 
cuºít
->
ruu_„tch_issue_dñay
 +(
œt
 - 1);

9346 #ifde‡ 
FIX2_BUG


9347 
cuºít
->
waô_f‹_„tch
 = 2;

9352 #ifde‡ 
FIX2_BUG


9358 
ö°
 = 
MD_NOP_INST
;

9361 i‡(
cuºít
->
¥ed
)

9363 
bønchIn°
 *
bønchInfo
 = 
NULL
;

9364 
md_›code
 
›
;

9367 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9372 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9374 
md_addr_t
 
bèrgë
;

9376 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)) == (F_CTRL | F_UNCOND | F_INDIRJMP))

9377 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * (
ö°
 & 0x00003fff);

9379 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * 
	`SEXT21
 (
ö°
 & 0x001fffff);

9381 
cuºít
->
„tch_¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
,

9382  
cuºít
->
„tch_ªgs_PC
,

9384  
›
,

9385  
	`MD_IS_CALL
 (
›
),

9386  
	`MD_IS_RETURN
 (
›
),

9387  &(
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
dú_upd©e
),

9388  &
°ack_ªcovî_idx
,

9389  
cuºít
->
id
,

9390  (
b¥ed_btb_u£_ma°îid
 ? 
cuºít
->
ma°îid
 : cuºít->
id
));

9393 
cuºít
->
„tch_¥ed_PC
 = 0;

9396 i‡(!
cuºít
->
„tch_¥ed_PC
)

9398 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9400 i‡(
cuºít
->
„tch_¥ed_PC
 !cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
))

9403 
bønch_˙t
++;

9404 i‡(
bønch_˙t
 >
„tch_•ìd
)

9405 
d⁄e
 = 
TRUE
;

9410 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9413 
cuºít
->
„tch_tŸÆ_ö¢
++;

9414 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
thªadid
 =Åhreadid;

9415 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
IR
 = 
ö°
;

9416 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
ªgs_PC
 = cuºít->
„tch_ªgs_PC
;

9417 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
¥ed_PC
 = cuºít->
„tch_¥ed_PC
;

9418 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
°ack_ªcovî_idx
 = stack_recover_idx;

9419 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
 =Ötrace_seq++;

9420 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
„tch_time
 = (Ë
sim_cy˛e
;

9422 
	`±ø˚_√wö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
ö°
, cuºít->„tch_d©a[cuºít->„tch_èû]->
ªgs_PC
, 0);

9423 
	`±ø˚_√w°age
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
PST_IFETCH
, ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0Ë| (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

9425 
cuºít
->
„tch_èû
 = (cuºít->„tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

9426 
cuºít
->
„tch_num
++;

9427 
„tch_d⁄e
[
thªadid
]++;

9430 #ifde‡ 
FIX2_BUG


9432 i‡(
cuºít
->
waô_f‹_„tch
 == 1)

9434 i‡(!
j
 && 
cuºít
->
ruu_„tch_issue_dñay
)

9435 
cuºít
->
waô_f‹_„tch
 = 2;

9437 
cuºít
->
waô_f‹_„tch
 = 0;

9441 
	}
}

9447 
	$simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

9448 *
cmd
,

9449 
ªgs_t
 *
ªgs
,

9450 
mem_t
 *
mem
)

9453 
thªadid
 = 
mem
->threadid;

9454 
c⁄ãxt
 *
cuºít
;

9456 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9458 i‡(!
cmd
 || !
	`°rcmp
 (cmd, "help"))

9459 
	`Ârötf
 (
°ªam
,

9471 i‡(!
	`°rcmp
 (
cmd
, "stats"))

9474 
	`sim_¥öt_°©s
 (
°ªam
);

9476 i‡(!
	`°rcmp
 (
cmd
, "res"))

9479 
	`ªs_dump
 (
fu_poﬁ
, 
°ªam
);

9481 i‡(!
	`°rcmp
 (
cmd
, "ruu"))

9484 
	`ruu_dump
 (
°ªam
, 
thªadid
);

9491 i‡(!
	`°rcmp
 (
cmd
, "eventq"))

9494 
	`evítq_dump
 (
°ªam
, 
thªadid
);

9496 i‡(!
	`°rcmp
 (
cmd
, "readyq"))

9499 
	`ªadyq_dump
 (
°ªam
, 
thªadid
);

9501 i‡(!
	`°rcmp
 (
cmd
, "cv"))

9504 
	`cv_dump
 (
°ªam
, 
thªadid
);

9506 i‡(!
	`°rcmp
 (
cmd
, "rspec"))

9509 
	`r•ec_dump
 (
°ªam
, 
thªadid
);

9511 i‡(!
	`°rcmp
 (
cmd
, "mspec"))

9514 
	`m•ec_dump
 (
°ªam
, 
thªadid
);

9525  
NULL
;

9526 
	}
}

9528 
	#TAKE_STATS_PHASE
 1

	)

9529 
	#DRAIN_PIPELINE_PHASE
 2

	)

9530 
	#RECONFIGURE_PHASE
 3

	)

9531 
	#NORMAL_PHASE
 4

	)

9532 
	#PRIVTOSHARED
 5

	)

9533 
	#SHAREDTOPRIV
 6

	)

9534 
	#EXTRA_PHASE
 7

	)

9535 
	gch™geC⁄fig
 = 0;

9536 
	gcuºítPha£
 = 
NORMAL_PHASE
;

9541 
ªgíî©e_„tch_queue
 ();

9542 
c›y_„tch_queue
 ();

9544 
ªgíî©e_f_queue
 ();

9545 
c›y_f_queue
 ();

9546 
bønch_addªss_c›y
 (
ma°îid
, 
chunkExecuãd
);

9551 
time_t
 
	g¥öt_time
, 
	gnow_time
;

9552 
ruu_ªÀa£_wrôebuf„r
 ();

9553 
ruu_wrôe_‰om_Wrôebuf„r
 ();

9554 #ifdef 
COLLECT_STAT_STARTUP


9555 
f°fwd_föeAdju°
 ();

9556 
f°fwd_cﬁÀ˘Sèts
();

9559 
	$sim_maö
 ()

9561 
unPrötLimô
 = 1;

9562 
i
, 
j
, 
k
, 
l
;

9563 
ãmp˛
, 
maxguy
, 
maxvÆ
, 
ªf_mis
, 
ªf_imis
, 
ªf_br
, 
ªf_ªfs
, 
ªf_cyc
, 
mm
, 
¬
;

9564 
gŸ_ªf_poöt
 = 0;

9565 
möguy
, 
mövÆ
;

9566 
cyc_cou¡
 = 0;

9567 
num_picks
[
NUMPHASES
 + 1];

9568 
sim_ñ≠£d_£c
;

9569 
di•©ched
 = 0;

9571 
thªadid
 = 0, 
thªad_°›
 = 0;

9572 
c⁄ãxt
 *
cuºít
;

9573 
kûœŒ
 = 0;

9574 
„tch_blocked
 = 1;

9575 
˙t
;

9577 
FILE
 *
Â
, *
Â1
;

9578 
brNum
, 
ldNum
;

9580 #ifde‡
DO_COMPLETE_FASTFWD


9581 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

9582 
x
, 
lo›ôî
;

9586 
	`sig«l
 (
SIGFPE
, 
SIG_IGN
);

9589 
«ck_cou¡î
 = 0;

9590 
Êù_cou¡î
 = 0;

9591 
L1_Êù_cou¡î
 = 0;

9592 
e_to_m
 = 0;

9593 
f
;

9594 
f
=0;f<8;f++)

9595 
mem_p‹t_œt
[
f
] = 0;

9596 
tŸÆevítcou¡num
 = 0;

9597 
tŸÆ_L1_¥e„tch
 = 0;

9598 
wrôe_back_óæy
 = 0;

9599 
tŸÆ_L1_fú°_¥e„tch
 = 0;

9600 
tŸÆ_L1_£c_¥e„tch
 = 0;

9601 
tŸÆªqcou¡num
 = 0;

9602 
tŸÆmisscou¡num
 = 0;

9603 
övﬁve_4_h›s
 = 0;

9604 
övﬁve_4_h›s_upgøde
 = 0;

9605 
övﬁve_4_h›s_miss
 = 0;

9606 
övﬁve_2_h›s
 = 0;

9607 
övﬁve_2_h›_touch
 = 0;

9608 
övﬁve_2_h›_wb
 = 0;

9609 
övﬁve_4_h›s_wm
 = 0;

9610 
tŸÆS∂ôWM
 = 0;

9611 
tŸÆS∂ôNo
 = 0;

9612 
övﬁve_2_h›s_wm
 = 0;

9613 
övﬁve_2_h›s_upgøde
 = 0;

9614 
övﬁve_2_h›s_miss
 = 0;

9615 
d©a_sh¨ed_ªad
 = 0;

9616 
d©a_¥iv©e_ªad
 = 0;

9617 
d©a_sh¨ed_wrôe
 = 0;

9618 
d©a_¥iv©e_wrôe
 = 0;

9619 
tŸÆ_Æl_˛o£
 = 0;

9620 
tŸÆ_Æl_Æmo°˛o£
 = 0;

9621 
tŸÆ_nŸ_Æl_˛o£
 = 0;

9622 
tŸÆ_p_c_evíts
 = 0;

9623 
tŸÆ_c⁄sumîs
 = 0;

9624 
tŸÆ_d©a_c⁄sumîs
 = 0;

9625 
tŸÆ_d©a_Ár
 = 0;

9626 
tŸÆ_d©a_©_c‹√r
 = 0;

9627 
tŸÆ_d©a_˛o£
 = 0;

9628 
tŸÆ_∑ckës_ö_√ighb‹
 = 0;

9629 
tŸÆ_∑ckës_©_c‹√rs
 = 0;

9630 
avîage_outside_≥r˚¡
 = 0;

9631 
avîage_outside_abs_≥r˚¡
 = 0;

9632 
avîage_öside_≥r˚¡
 = 0;

9633 
avîage_c‹√r_≥r˚¡
 = 0;

9634 #ifde‡
EUP_NETWORK


9635 
EUP_íåy_fuŒ
 = 0;

9636 
i
 = 0; i< 
numc⁄ãxts
; i++)

9637 
	`EUP_íåy_öô
(
i
);

9639 
i
 = 0; i< 
numc⁄ãxts
; i++)

9640 
sh¨î_num
[
i
] = 0;

9642 #i‡
PROCESS_MODEL


9643 
i
 = 0; i < 128; i++)

9645 
sh¨edAddªssLi°
[
i
] = 
NULL
;

9647 
La°Sh¨edAddªss
 = 0;

9648 
La°Sh¨edSize
 = 0;

9651 
	`öôClu°îInfo
 ();

9653 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

9654 
	`busInô
 ();

9657 
‚m
[256];

9658 
nm
[256];

9660 
	`°r˝y
 (
nm
, 
thec⁄ãxts
[0]->
‚ame
);

9662 
l
 = 0;Ü < 
MAXTHREADS
;Ü++)

9664 
numThªads
[
l
] = 
mè_maxthªads
;

9669 
n_limô_thrd
[0] =Ç_limit_thrd[1] =Ç_limit_thrd[2] =Ç_limit_thrd[3] = 1;

9673 
	`Ârötf
 (
°dîr
, "Issueq sizê - i¡ %d f∞%d\n", 
IIQ_size
, 
FIQ_size
);

9674 #ifde‡
REG_RENAME_CONFIGUARE


9675 
	`Ârötf
 (
°dîr
, "ª«mêPªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

9677 
	`Ârötf
 (
°dîr
, "Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

9679 
	`Ârötf
 (
°dîr
, "CLUSTERS %d\n", 
CLUSTERS
);

9680 
	`Ârötf
 (
°dîr
, "ROWCOUNT %d\n", 
ROWCOUNT
);

9681 
	`Ârötf
 (
°dîr
, "CENTRAL_CACHE %d\n", 
CENTRAL_CACHE
);

9682 
	`Ârötf
 (
°dîr
, "CENTRALCACHELAT %d\n", 
CENTRALCACHELAT
);

9683 
	`Ârötf
 (
°dîr
, "CACHELOC %d\n", 
CACHELOC
);

9684 
	`Ârötf
 (
°dîr
, "PRED_BR_CHANGES %d\n", 
PRED_BR_CHANGES
);

9685 
	`Ârötf
 (
°dîr
, "PRED_JR_CHANGES %d\n", 
PRED_JR_CHANGES
);

9686 
	`Ârötf
 (
°dîr
, "DYNAMIC_CHANGE %d\n", 
DYNAMIC_CHANGE
);

9687 
	`Ârötf
 (
°dîr
, "METRIC_CHANGE %d\n", 
METRIC_CHANGE
);

9688 
	`Ârötf
 (
°dîr
, "LINEAR_PHASE %d\n", 
LINEAR_PHASE
);

9689 
	`Ârötf
 (
°dîr
, "SMALLEST_CONFIG %d\n", 
SMALLEST_CONFIG
);

9690 
	`Ârötf
 (
°dîr
, "GRID %d\n", 
GRID
);

9691 
	`Ârötf
 (
°dîr
, "CACHEPORTS %d\n", 
CACHEPORTS
);

9692 
	`Ârötf
 (
°dîr
, "RES_CACHEPORTS %d\n", 
RES_CACHEPORTS
);

9693 
	`Ârötf
 (
°dîr
, "READY_COMM %d\n", 
READY_COMM
);

9694 
	`Ârötf
 (
°dîr
, "HOLY_REGS %d\n", 
HOLY_REGS
);

9695 
	`Ârötf
 (
°dîr
, "NUM_H_REGS %d\n", 
NUM_H_REGS
);

9696 
	`Ârötf
 (
°dîr
, "COPY_THRESH %d\n", 
COPY_THRESH
);

9697 
	`Ârötf
 (
°dîr
, "FIRST_FIT %d\n", 
FIRST_FIT
);

9698 
	`Ârötf
 (
°dîr
, "FIRST_FIT_ENFORCE %d\n", 
FIRST_FIT_ENFORCE
);

9699 
	`Ârötf
 (
°dîr
, "FIRST_VAL %d\n", 
FIRST_VAL
);

9700 
	`Ârötf
 (
°dîr
, "STEER_ENFORCE %d\n", 
STEER_ENFORCE
);

9701 
	`Ârötf
 (
°dîr
, "MOD_N %d\n", 
MOD_N
);

9702 
	`Ârötf
 (
°dîr
, "MOD_N_N %d\n", 
MOD_N_N
);

9703 
	`Ârötf
 (
°dîr
, "FIRST_MOD %d\n", 
FIRST_MOD
);

9704 
	`Ârötf
 (
°dîr
, "GROUPSIZE %d\n", 
GROUPSIZE
);

9705 
	`Ârötf
 (
°dîr
, "MOD_N_T %d\n", 
MOD_N_T
);

9706 
	`Ârötf
 (
°dîr
, "ANYWILLDO %d\n", 
ANYWILLDO
);

9707 
	`Ârötf
 (
°dîr
, "NEIGHBOR_SEEK %d\n", 
NEIGHBOR_SEEK
);

9708 
	`Ârötf
 (
°dîr
, "PICKMIDDLE %d\n", 
PICKMIDDLE
);

9709 
	`Ârötf
 (
°dîr
, "MIDTHRESH %d\n", 
MIDTHRESH
);

9710 
	`Ârötf
 (
°dîr
, "HOPTIME %d\n", 
HOPTIME
);

9711 
	`Ârötf
 (
°dîr
, "COMM_LATENCY %d\n", 
COMM_LATENCY
);

9712 #i‚de‡
CONFIG_BASED_ICS


9713 
	`Ârötf
 (
°dîr
, "FE_LAT %d\n", 
FE_LAT
);

9715 
	`Ârötf
 (
°dîr
, "CACHE_REFILL_LAT %d\n", 
CACHE_REFILL_LAT
);

9716 
	`Ârötf
 (
°dîr
, "MPRED_COMM_LAT %d\n", 
MPRED_COMM_LAT
);

9717 
	`Ârötf
 (
°dîr
, "LD_PROXIMITY %d\n", 
LD_PROXIMITY
);

9718 
	`Ârötf
 (
°dîr
, "LDPROX_FACTOR %d\n", 
LDPROX_FACTOR
);

9719 
	`Ârötf
 (
°dîr
, "STEER_2NONREADY %d\n", 
STEER_2NONREADY
);

9720 
	`Ârötf
 (
°dîr
, "STEER_CRITICAL %d\n", 
STEER_CRITICAL
);

9721 
	`Ârötf
 (
°dîr
, "ILOAD_MIN %d\n", 
ILOAD_MIN
);

9722 
	`Ârötf
 (
°dîr
, "IFACTOR %d\n", 
IFACTOR
);

9723 
	`Ârötf
 (
°dîr
, "RLOAD_MIN %d\n", 
RLOAD_MIN
);

9724 
	`Ârötf
 (
°dîr
, "RFACTOR %d\n", 
RFACTOR
);

9725 
	`Ârötf
 (
°dîr
, "DEP_FACTOR %d\n", 
DEP_FACTOR
);

9726 
	`Ârötf
 (
°dîr
, "LD_FACTOR %d\n", 
LD_FACTOR
);

9727 
	`Ârötf
 (
°dîr
, "IQBUF %d\n", 
IQBUF
);

9728 
	`Ârötf
 (
°dîr
, "REGFREE %d\n", 
REGFREE
);

9729 
	`Ârötf
 (
°dîr
, "FREE_CURR_REGS %d\n", 
FREE_CURR_REGS
);

9730 
	`Ârötf
 (
°dîr
, "FREE_INTERVAL %d\n", 
FREE_INTERVAL
);

9731 
	`Ârötf
 (
°dîr
, "DISPDELAY %d\n", 
DISPDELAY
);

9732 
	`Ârötf
 (
°dîr
, "RING_BW %d\n", 
RING_BW
);

9733 
	`Ârötf
 (
°dîr
, "TIMEWINDOW %d\n", 
TIMEWINDOW
);

9734 
	`Ârötf
 (
°dîr
, "ST_ADDR_COMM %d\n", 
ST_ADDR_COMM
);

9735 
	`Ârötf
 (
°dîr
, "ST_RING_BW %d\n", 
ST_RING_BW
);

9736 
	`Ârötf
 (
°dîr
, "RING_IC %d\n", 
RING_IC
);

9737 
	`Ârötf
 (
°dîr
, "IGNORE_COMM_LATENCY %d\n", 
IGNORE_COMM_LATENCY
);

9738 
	`Ârötf
 (
°dîr
, "TOL_COUNT %d\n", 
TOL_COUNT
);

9739 
	`Ârötf
 (
°dîr
, "STOREDELAY %d\n", 
STOREDELAY
);

9740 
	`Ârötf
 (
°dîr
, "BANKPRED %d\n", 
BANKPRED
);

9741 
	`Ârötf
 (
°dîr
, "BANKMISPREDLAT %d\n", 
BANKMISPREDLAT
);

9742 
	`Ârötf
 (
°dîr
, "BANKP_SPEC %d\n", 
BANKP_SPEC
);

9743 
	`Ârötf
 (
°dîr
, "LEV1SIZE %d\n", 
LEV1SIZE
);

9744 
	`Ârötf
 (
°dîr
, "LEV2SIZE %d\n", 
LEV2SIZE
);

9745 
	`Ârötf
 (
°dîr
, "XORSIZE %d\n", 
XORSIZE
);

9746 
	`Ârötf
 (
°dîr
, "WORD_INTERLEAVED %d\n", 
WORD_INTERLEAVED
);

9747 
	`Ârötf
 (
°dîr
, "WORDSIZE %d\n", 
WORDSIZE
);

9748 
	`Ârötf
 (
°dîr
, "SORT %d\n", 
SORT
);

9749 
	`Ârötf
 (
°dîr
, "NUMPHASES %d\n", 
NUMPHASES
);

9750 
	`Ârötf
 (
°dîr
, "MIN_INSN_INT %d\n", 
MIN_INSN_INT
);

9751 
	`Ârötf
 (
°dîr
, "STOP_EXPL_THRESH %d\n", 
STOP_EXPL_THRESH
);

9752 
	`Ârötf
 (
°dîr
, "ILPTAGCHECK %d\n", 
ILPTAGCHECK
);

9753 
	`Ârötf
 (
°dîr
, "DISTILP %d\n", 
DISTILP
);

9754 
	`Ârötf
 (
°dîr
, "DISTILPTHRESH %d\n", 
DISTILPTHRESH
);

9755 
	`Ârötf
 (
°dîr
, "SAMPLETHRESH %d\n", 
SAMPLETHRESH
);

9756 
	`Ârötf
 (
°dîr
, "BR_INT %d\n", 
BR_INT
);

9757 
	`Ârötf
 (
°dîr
, "ITABLESIZE %d\n", 
ITABLESIZE
);

9758 
	`Ârötf
 (
°dîr
, "OWINDOWSIZE %d\n", 
OWINDOWSIZE
);

9759 
	`Ârötf
 (
°dîr
, "ILPCLEARINT %d\n", 
ILPCLEARINT
);

9760 
	`Ârötf
 (
°dîr
, "STATPRINT %d\n", 
STATPRINT
);

9761 
	`Ârötf
 (
°dîr
, "CYCNOISE %d\n", 
CYCNOISE
);

9762 
	`Ârötf
 (
°dîr
, "NUMCYCTHRESH %d\n", 
NUMCYCTHRESH
);

9763 
	`Ârötf
 (
°dîr
, "STATINT %d\n", 
STATINT
);

9764 
	`Ârötf
 (
°dîr
, "FREE_REG_THRESH %d\n", 
FREE_REG_THRESH
);

9765 
	`Ârötf
 (
°dîr
, "TABLE2SIZE %d\n", 
TABLE2SIZE
);

9766 
	`Ârötf
 (
°dîr
, "TABLESIZE %d\n", 
TABLESIZE
);

9769 #ifde‡
DO_COMPLETE_FASTFWD


9770 
	`SèπSkñë⁄Ród
 (0);

9771 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9773 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9774 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9775 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9783 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

9785 
lo›ôî
 = 0;Üoopiter < 20;Üoopiter++)

9787 
cou¡î_t
 
icou¡
;

9788 
md_ö°_t
 
ö°
;

9789 
md_›code
 
›
;

9790 
md_addr_t
 
èrgë_PC
;

9791 
md_addr_t
 
addr
;

9792 
is_wrôe
;

9793 
byã_t
 
ãmp_byã
;

9794 
hÆf_t
 
ãmp_hÆf
;

9795 
w‹d_t
 
ãmp_w‹d
;

9797 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

9798 
qw‹d_t
 
ãmp_qw‹d
 = 0;

9801 
md_Áu…_ty≥
 
Áu…
;

9803 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9805 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

9806 #ifde‡
TARGET_ALPHA


9807 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

9812 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

9815 
addr
 = 0;

9816 
is_wrôe
 = 
FALSE
;

9819 
Áu…
 = 
md_Áu…_n⁄e
;

9820 
sim_num_ö¢
++;

9822 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9824 
›
)

9826 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

9827 
OP
: \

9829 
out1
 = 
O1
; 
out2
 = 
O2
; \

9830 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

9832 
	`SYMCAT
(
OP
,
_IMPL
); \

9834 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

9835 
OP
: \

9837 
›
 = 
MD_NOP_OP
; \

9839 
out1
 = 
NA
; 
out2
 = NA; \

9840 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

9843 
	#CONNECT
(
OP
Ë

	)

9849 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

9851 i‡(!
cuºít
->
•ec_mode
) \

9852 
Áu…
 = (
FAULT
); \

9856 
	~"machöe.def
"

9859 
›
 = 
MD_NOP_OP
;

9861 
out1
 = 
NA
;

9862 
out2
 = 
NA
;

9863 
ö1
 = 
NA
;

9864 
ö2
 = 
NA
;

9865 
ö3
 = 
NA
;

9870 i‡(
Áu…
 !
md_Áu…_n⁄e
)

9871 
	`Áèl
 ("n⁄-•ecuœtivêÁu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

9873 #ifde‡
CACHE_PROFILE


9874 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_LOAD
)

9876 
œt
;

9877 #ifde‡
DIRECTORY


9878 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 
rs
, 0);

9880 
lﬂd_œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9882 i‡(
déb
)

9883 #ifde‡
DIRECTORY


9884 
œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, NULL, 0);

9886 
œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9888 
lﬂd_œt
 = 
	`max2
 (lﬂd_œt, 
œt
);

9889 i‡(
lﬂd_œt
 > 50)

9890 
	`PushMissPªdLﬂd
 (
cuºít
->
ªgs
.
ªgs_PC
, (Ë
lﬂd_œt
);

9892 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

9894 #ifde‡
DIRECTORY


9895 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 
rs
, 0);

9897 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9899 i‡(
déb
)

9900 #ifde‡
DIRECTORY


9901 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, NULL, 0);

9903 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_num_ö¢
, NULL, NULL, 0);

9907 #ifde‡ 
BRANCH_PROFILE


9908 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9910 
b¥ed_upd©e_t
 
dú_upd©e
;

9911 
°ack_ªcovî_idx
;

9913 
cuºít
->
¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
, cuºít->
ªgs
.
ªgs_PC
, 1, 
›
, 
	`MD_IS_CALL
 (›), 
	`MD_IS_RETURN
 (›), &
dú_upd©e
, &
°ack_ªcovî_idx
, cuºít->
id
, (
b¥ed_btb_u£_ma°îid
 ? cuºít->
ma°îid
 : current->id));

9915 i‡(!
cuºít
->
¥ed_PC
)

9916 
cuºít
->
¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
);

9918 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

9919 
cuºít
->
ªgs
.
ªgs_PC
,

9920 
cuºít
->
ªgs
.
ªgs_NPC
,

9921 
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)),

9922 
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)), cuºít->¥ed_PC =cuºít->ªgs.
ªgs_NPC
, 
›
, &
dú_upd©e
, cuºít->
id
, (
b¥ed_btb_u£_ma°îid
 ? cuºít->
ma°îid
 : current->id));

9924 i‡(!(
›
 =
RETN
 || o∞=
JMP
 || o∞=
JSR
 || o∞=
BSR
 || o∞=
BR
))

9926 i‡(
cuºít
->
ªgs
.
ªgs_NPC
 =cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
))

9927 
	`ö£π_br_dú
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, (cuºít->
¥ed_PC
 !cuºít->ªgs.
ªgs_NPC
));

9929 
	`ö£π_br_dú
 (
cuºít
->
ªgs
.
ªgs_PC
, 1, (cuºít->
¥ed_PC
 !cuºít->ªgs.
ªgs_NPC
));

9933 #ifde‡ 
STORE_PROFILE


9934 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

9936 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

9938 
	`pushSt‹e
 (
cuºít
->
ªgs
.
ªgs_PC
, 
addr
, cuºít->
sim_num_ö¢
, 
memWidth
);

9941 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

9943 
memWidth
 = 
	`GëMemAccWidth
 (
›
);

9945 i‡(
out1
 > 0 && out1 < 63)

9946 
	`vîifyLﬂd
 (
cuºít
->
ªgs
.
ªgs_PC
, 
addr
, cuºít->
sim_num_ö¢
, 
memWidth
);

9949 #ifde‡ 
INDIRECTJUMP_PROFILE


9950 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)Ë=(F_CTRL | F_UNCOND | F_INDIRJMPË&& (› !
RETN
)))

9951 
	`pushJump
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
);

9953 #ifde‡ 
FREQ_PROFILE


9954 
	`ö°ExecuãdFªq
 (
cuºít
->
ªgs
.
ªgs_PC
);

9957 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

9958 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

9960 i‡((
sim_num_ö¢
 % 500000000) == 0)

9962 
	`¥ötf
 ("[INFO]: sim_num_ö¢=%Œd\n", 
sim_num_ö¢
);

9963 
	`Ârötf
 (
°dîr
, "[INFO]: sim_num_ö¢=%Œd\n", 
sim_num_ö¢
);

9964 
	`fÊush
 (
°dîr
);

9965 
	`fÊush
 (
°dout
);

9972 #ifdef 
COLLECT_STAT_STARTUP


9973 #ifdef 
EDA


9974 i‡(
numc⁄ãxts
 != 3)

9975 
	`∑nic
 ("ForÉxecution in EDA modeÅhere should beÉxactly 3 initialÅhreads,Éach for correctness, optimisticánd oracle core.");

9979 #ifdef 
EDA


9980 
thªadid
 = 0;Åhreadid < 3;Åhreadid++)

9983 
thrdPîJobC¡
 = 1;

9984 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9985 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

9986 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

9989 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

9990 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9994 i‡(!
cuºít
->
Á°fwd_d⁄e
)

9996 
cou¡î_t
 
icou¡
;

9997 
md_ö°_t
 
ö°
;

9998 
md_›code
 
›
;

9999 
md_addr_t
 
èrgë_PC
;

10000 
md_addr_t
 
addr
;

10001 
is_wrôe
;

10002 
byã_t
 
ãmp_byã
;

10003 
hÆf_t
 
ãmp_hÆf
;

10004 
w‹d_t
 
ãmp_w‹d
;

10006 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

10007 
qw‹d_t
 
ãmp_qw‹d
 = 0;

10010 
md_Áu…_ty≥
 
Áu…
;

10012 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

10014 !
cuºít
->
Á°fwd_d⁄e
)

10017 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

10018 #ifde‡
TARGET_ALPHA


10019 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

10023 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

10024 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

10027 
addr
 = 0;

10028 
is_wrôe
 = 
FALSE
;

10031 
Áu…
 = 
md_Áu…_n⁄e
;

10034 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

10037 
›
)

10039 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

10040 
OP
: \

10041 
	`SYMCAT
(
OP
,
_IMPL
); \

10043 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

10044 
OP
: \

10045 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

10046 
	#CONNECT
(
OP
)

	)

10047 #unde‡
DECLARE_FAULT


10048 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

10049 { 
Áu…
 = (
FAULT
); ; }

10050 
	~"machöe.def
"

10052 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

10055 i‡(
Áu…
 !
md_Áu…_n⁄e
)

10056 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

10059 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

10061 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

10063 
is_wrôe
 = 
TRUE
;

10065 #i‚de‡
PARALLEL_EMUL


10066 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

10069 #i‚de‡
PARALLEL_EMUL


10071 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

10076 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

10077 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10081 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10082 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10087 #ifdef 
EDA


10088 
i
 = 0, 
j
 = 0; i < 
mè_maxthªads
; i++)

10090 i‡(
j
 =
THREADS_PER_JOB
)

10093 i‡(
thec⁄ãxts
[
i
]->
ma°îid
 == 0)

10095 
k
 = 0, 
l
 = 0; k < 
mè_maxthªads
; k++)

10097 i‡(
thec⁄ãxts
[
k
]->
ma°îid
 == 1)

10099 i‡(
l
 =
j
)

10101 
m
;

10103 
m
 = 0, 
l
 = 0; m < 
mè_maxthªads
; m++)

10105 i‡(
thec⁄ãxts
[
m
]->
ma°îid
 == 2)

10107 i‡(
l
 =
j
)

10109 
thec⁄ãxts
[
i
]->
jobThdId
 = 
j
;

10110 
thec⁄ãxts
[
k
]->
jobThdId
 = 
j
;

10111 
thec⁄ãxts
[
m
]->
jobThdId
 = 
j
;

10112 
thec⁄ãxts
[
i
]->
hñpThdId
 = 
k
;

10113 
thec⁄ãxts
[
k
]->
hñpThdId
 = 
i
;

10114 
thec⁄ãxts
[
m
]->
hñpThdId
 = -1;

10115 
thec⁄ãxts
[
i
]->
‹a˛eId
 = 
m
;

10116 
thec⁄ãxts
[
k
]->
‹a˛eId
 = 
m
;

10117 
thec⁄ãxts
[
m
]->
‹a˛eId
 = -1;

10119 
thec⁄ãxts
[
i
]->
¥edQueue
 = (
bønchC‹r
 *Ë
	`ˇŒoc
 (1,  (branchCorr));;

10120 
	`öôBønchC‹r
 (
thec⁄ãxts
[
i
]->
¥edQueue
);

10121 
thec⁄ãxts
[
k
]->
¥edQueue
 =Åhec⁄ãxts[
i
]->predQueue;

10122 
thec⁄ãxts
[
m
]->
¥edQueue
 =Åhec⁄ãxts[
i
]->predQueue;

10125 
l
++;

10130 
l
++;

10133 
j
++;

10137 
i
 = 0; i < 
numc⁄ãxts
; i++)

10139 
thec⁄ãxts
[
i
]->
jobThdId
 = i;

10140 
thec⁄ãxts
[
i
]->
hñpThdId
 = -1;

10141 
thec⁄ãxts
[
i
]->
‹a˛eId
 = -1;

10145 
	`¥ötf
 ("ff Stage 0 done\n");

10146 
	`fÊush
 (
°dout
);

10148 
	`f°fwd_cﬁÀ˘Sèts
();

10151 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10153 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10154 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

10155 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

10158 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

10159 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

10163 i‡(
cuºít
->
Á°fwd_cou¡
 > 0)

10165 
cou¡î_t
 
icou¡
;

10166 
md_ö°_t
 
ö°
;

10167 
md_›code
 
›
;

10168 
md_addr_t
 
èrgë_PC
;

10169 
md_addr_t
 
addr
;

10170 
is_wrôe
;

10171 
byã_t
 
ãmp_byã
;

10172 
hÆf_t
 
ãmp_hÆf
;

10173 
w‹d_t
 
ãmp_w‹d
;

10175 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

10176 
qw‹d_t
 
ãmp_qw‹d
 = 0;

10179 
md_Áu…_ty≥
 
Áu…
;

10181 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

10183 
icou¡
 = 0; icou¡ < 
cuºít
->
Á°fwd_cou¡
; icount++)

10186 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

10187 #ifde‡
TARGET_ALPHA


10188 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

10192 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

10195 
addr
 = 0;

10196 
is_wrôe
 = 
FALSE
;

10199 
Áu…
 = 
md_Áu…_n⁄e
;

10202 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

10205 
›
)

10207 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

10208 
OP
: \

10209 
	`SYMCAT
(
OP
,
_IMPL
); \

10211 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

10212 
OP
: \

10213 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

10214 
	#CONNECT
(
OP
)

	)

10215 #unde‡
DECLARE_FAULT


10216 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

10217 { 
Áu…
 = (
FAULT
); ; }

10218 
	~"machöe.def
"

10220 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

10223 i‡(
Áu…
 !
md_Áu…_n⁄e
)

10224 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

10227 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

10229 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

10231 
is_wrôe
 = 
TRUE
;

10232 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

10235 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

10239 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

10240 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10243 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10244 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10251 
	`¥ötf
 ("ff stage 1 done\n");

10252 
	`fÊush
 (
°dout
);

10254 
	`Ârötf
 (
°dîr
, "sim: ** startingÖerformance simulation **\n");

10255 #ifde‡
LOAD_PREDICTOR


10256 
	`Ârötf
 (
°dîr
, " LOAD_PREDICTOR\n");

10257 #ifde‡
COUNT_MISS_ONLY


10258 
	`Ârötf
 (
°dîr
, "COUNT_MISS_ONLY \n");

10260 #ifde‡
PREDICT_LOAD_COMM


10261 
	`Ârötf
 (
°dîr
, "PREDICT_LOAD_COMM \n");

10263 #ifde‡
GATE_L1_MISS


10264 
	`Ârötf
 (
°dîr
, "GATE_L1_MISS \n");

10266 #ifde‡
GATE_L2_MISS


10267 
	`Ârötf
 (
°dîr
, "GATE_L2_MISS\n");

10269 #ifde‡
PDG


10270 
	`Ârötf
 (
°dîr
, "PDG \n");

10273 #ifde‡
ACTIVE_N_WAY


10274 
	`Ârötf
 (
°dîr
, " ACTIVE_N_WAY\n");

10275 #ifde‡
FIXED_N_WAY


10276 
	`Ârötf
 (
°dîr
, " FIXED_N_WAY\n");

10279 #ifde‡ 
SMT_TEST


10280 
	`Ârötf
 (
°dîr
, "SMT_TEST\n");

10282 #ifde‡ 
THRD_WAY_CACHE


10283 
	`Ârötf
 (
°dîr
, " THRD_WAY_CACHE\n");

10285 #ifde‡ 
N_WAY_CACHE


10286 
	`Ârötf
 (
°dîr
, " N_WAY_CACHE: deÁu… o∆y, %d\n", 
n_way_ˇche
);

10287 #ifde‡
SET_BASED


10288 
	`Ârötf
 (
°dîr
, "SET_BASED\n");

10291 #ifde‡
PARTITIONED_LSQ


10292 
	`Ârötf
 (
°dîr
, "PARTITIONED_LSQ\n");

10294 
	`Ârötf
 (
°dîr
, "(PARTITIONED_LSQÇot defined)\n");

10296 #ifde‡
CENTRALIZED_LSQ


10297 
	`Ârötf
 (
°dîr
, "CENTRALIZED_LSQ\n");

10299 #ifde‡
DE_CENTRALIZED_LSQ


10300 
	`Ârötf
 (
°dîr
, "DE_CENTRALIZED_LSQ\n");

10301 #ifde‡
DE_CENTRALIZED_POWER_BUG


10302 
	`Ârötf
 (
°dîr
, " DE_CENTRALIZED_POWER_BUG\n");

10304 #ifde‡ 
SPLIT_LSQ


10305 
	`Ârötf
 (
°dîr
, "SPLIT_LSQ\n");

10307 #ifde‡
DISTRIBUTE_STORE


10308 
	`Ârötf
 (
°dîr
, "DISTRIBUTE_STORE\n");

10310 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


10311 
	`Ârötf
 (
°dîr
, " PWR_DE_CENTRALIZED_LSQ\n");

10314 #ifde‡
ALLOW_ANY_CLUSTER


10315 
	`Ârötf
 (
°dîr
, "ALLOW_ANY_CLUSTER\n");

10317 #ifde‡ 
CLUSTER_PRIORITY


10318 
	`Ârötf
 (
°dîr
, "CLUSTER_PRIORITY\n");

10320 #ifde‡
DISTRIBUTED_STEER


10321 
	`Ârötf
 (
°dîr
, "DISTRIBUTED_STEER\n");

10323 #ifde‡
CENTRALIZED_STEER


10324 
	`Ârötf
 (
°dîr
, "CENTRALIZED_STEER\n");

10326 #ifde‡
MINIMUM_STEER


10327 
	`Ârötf
 (
°dîr
, "MINIMUM_STEER\n");

10329 #ifde‡
INIT_CENTRALIZED_STEER


10330 
	`Ârötf
 (
°dîr
, "INIT_CENTRALIZED_STEER\n");

10332 #ifde‡
CMP_STEER


10333 
	`Ârötf
 (
°dîr
, "CMP_STEER\n");

10335 #ifde‡
INIT_CMP_STEER


10336 
	`Ârötf
 (
°dîr
, "INIT_CMP_STEER\n");

10338 #ifde‡
N_WAY_STEER


10339 
	`Ârötf
 (
°dîr
, "N_WAY_STEER ,N_WAY:deÁu… %d \n", 
n_way
);

10340 #ifde‡
PRIVATE_STEER


10341 
	`Ârötf
 (
°dîr
, " PRIVATE_STEER\n");

10343 #ifde‡
N_WAY_ADAPT


10344 
	`Ârötf
 (
°dîr
, " N_WAY_ADAPT,ADAPT_RATE %d \n", 
ADAPT_RATE
);

10345 #ifde‡
STABLE_IPC_ADAPT


10346 
	`Ârötf
 (
°dîr
, "STABLE_IPC_ADAPT\n");

10348 #ifde‡
PERIODIC_INCREASE_ADAPT


10349 
	`Ârötf
 (
°dîr
, "PERIODIC_INCREASE_ADAPT\n");

10351 #ifde‡
DOUBLE_ADAPT


10352 
	`Ârötf
 (
°dîr
, "DOUBLE_ADAPT\n");

10354 #ifde‡
OVERALL_LIMIT


10355 
	`Ârötf
 (
°dîr
, "OVERALL_LIMIT\n");

10357 #ifde‡ 
PRIVATE_STEER


10358 
	`Ârötf
 (
°dîr
, "PRIVATE_STEER\n");

10361 #ifde‡
THRD_PRIO_ADAPT


10362 
	`Ârötf
 (
°dîr
, " THRD_PRIO_ADAPT\n");

10363 #ifde‡
ADAPT_LIMIT


10364 
	`Ârötf
 (
°dîr
, " ADAPT_LIMIT\n");

10367 #ifde‡
PDG_ADAPT


10368 
	`Ârötf
 (
°dîr
, " PDG_ADAPT\n");

10370 #ifde‡
PDG_STOP_ADAPT


10371 
	`Ârötf
 (
°dîr
, " PDG_STOP_ADAPT\n");

10373 #ifde‡
PDG_THRD_ADAPT


10374 
	`Ârötf
 (
°dîr
, " PDG_THRD_ADAPT\n");

10375 #ifde‡
PDG_THRD_AGGRESSIVE


10376 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10378 #ifde‡
PDG_THRD_SOFT


10379 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10382 #ifde‡
PDG_THRD_PRIO_ADAPT


10383 
	`Ârötf
 (
°dîr
, "PDG_THRD_PRIO_ADAPT \n");

10384 #ifde‡
COMM_OPER_LIMIT


10385 
	`Ârötf
 (
°dîr
, "COMM_OPER_LIMIT COMM_OPER_RATIO %2.2f\n", 
COMM_OPER_RATIO
);

10387 #ifde‡
ADAPT_NO_PRIO


10388 
	`Ârötf
 (
°dîr
, " ADAPT_NO_PRIO\n");

10390 #ifde‡
ADAPT_NO_COMM_OPER


10391 
	`Ârötf
 (
°dîr
, " ADAPT_NO_COMM_OPER\n");

10393 #ifde‡
AVG_LIMIT


10394 
	`Ârötf
 (
°dîr
, " AVG_LIMIT\n");

10396 #ifde‡
PDG_THRD_AGGRESSIVE


10397 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10399 #ifde‡
PDG_THRD_SOFT


10400 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10403 #ifde‡
INIT_N_WAY_CENTRAL


10404 
	`Ârötf
 (
°dîr
, " INIT_N_WAY_CENTRAL\n");

10406 #ifde‡
N_WAY_BALANCE


10407 
	`Ârötf
 (
°dîr
, "N_WAY_BALANCE \n");

10409 #ifde‡
THRD_PROFILE


10410 
	`Ârötf
 (
°dîr
, " THRD_PROFILE\n");

10412 #ifde‡
N_CACHE_FIXED


10413 
	`Ârötf
 (
°dîr
, "N_CACHE_FIXED \n");

10415 #ifde‡
PRIVATE_CACHE


10416 
	`Ârötf
 (
°dîr
, " PRIVATE_CACHE\n");

10419 #ifde‡
STEER_MEM_LSQ


10420 
	`Ârötf
 (
°dîr
, "STEER_MEM_LSQ\n");

10422 #ifde‡
STEER_MEM_NEIGHBOR


10423 
	`Ârötf
 (
°dîr
, "STEER_MEM_NEIGHBOR\n");

10425 #ifde‡
STEER_OPRANDS


10426 
	`Ârötf
 (
°dîr
, "STEER_OPRANDS\n");

10428 #ifde‡ 
STEER_FU


10429 
	`Ârötf
 (
°dîr
, "STEER_FU\n");

10431 #ifde‡
SELECTIVE_DISPATCH


10432 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH\n");

10434 #ifde‡
SELECTIVE_FETCH


10435 
	`Ârötf
 (
°dîr
, "SELECTIVE_FETCH\n");

10437 #ifde‡
SELECTIVE_DISPATCH_GATE


10438 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH_GATE\n");

10439 #ifde‡
UNREADY_PRIVATE


10440 
	`Ârötf
 (
°dîr
, " UNREADY_PRIVATE \n");

10442 #ifde‡
UNREADY_COUNT


10443 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT %d\n", 
UNREADY_COUNT_LIMIT
);

10445 #ifde‡
UNREADY_COUNT_ONLY


10446 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT_ONLY \n");

10448 #ifde‡
UNREADY_CHAIN_PRIVATE


10449 
	`Ârötf
 (
°dîr
, " UNREADY_CHAIN_PRIVATE %d\n", 
UNREADY_CHAIN_LIMIT
);

10452 #ifde‡ 
RAW


10453 
	`Ârötf
 (
°dîr
, "RAW ,deÁu… RAWSIZE %d\n", 
RAWSIZE
);

10455 #ifde‡ 
RABMAP


10456 
	`Ârötf
 (
°dîr
, "RABMAP \n");

10458 #ifde‡ 
RABCOMM


10459 
	`Ârötf
 (
°dîr
, "RABCOMM \n");

10461 #ifde‡ 
ALU_MERGE


10462 
	`Ârötf
 (
°dîr
, "ALU_MERGE \n");

10464 #ifde‡
INST_TRANS_RATE


10465 
	`Ârötf
 (
°dîr
, "INST_TRANS_RATE\n");

10466 #ifde‡
TRACE_REG


10467 
	`Ârötf
 (
°dîr
, " TRACE_REG\n");

10470 #ifde‡
IGNORE_ALL_COMM_LATENCY


10471 
	`Ârötf
 (
°dîr
, "IGNORE_ALL_COMM_LATENCY\n");

10473 #ifde‡
IGNORE_MEM_COMM_LATENCY


10474 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10476 #ifde‡
COUNT_COMMIT


10477 
	`Ârötf
 (
°dîr
, "COUNT_COMMIT\n");

10479 #ifde‡
CYCLE_JUMP


10480 
	`Ârötf
 (
°dîr
, "CYCLE_JUMP \n");

10482 #ifde‡
FETCH_ONE_BLOCK


10483 
	`Ârötf
 (
°dîr
, "FETCH_ONE_BLOCK \n");

10485 #ifde‡ 
MSHR


10486 
	`Ârötf
 (
°dîr
, "MSHR , MSHRSIZE %d\n", 
MSHRSIZE
);

10488 #ifde‡
GENERIC_FU


10489 
	`Ârötf
 (
°dîr
, "GENERIC_FU\n");

10491 #ifde‡
NO_EXTRA_REG


10492 
	`Ârötf
 (
°dîr
, "NO_EXTRA_REG\n");

10494 #ifde‡
NO_CACHE_BANK


10495 
	`Ârötf
 (
°dîr
, "NO_CACHE_BANK\n");

10497 #ifde‡
NO_QFILL_CONTENTION


10498 
	`Ârötf
 (
°dîr
, "NO_QFILL_CONTENTION\n");

10500 #ifde‡
NO_BUS_CONTENTION


10501 
	`Ârötf
 (
°dîr
, " NO_BUS_CONTENTION \n");

10503 #ifde‡
EVENT_CACHE_UPDATE


10504 
	`Ârötf
 (
°dîr
, "EVENT_CACHE_UPDATE\n");

10505 #ifde‡
APPROXIMATE_LAT


10506 
	`Ârötf
 (
°dîr
, " APPROXIMATE_LAT \n");

10508 #ifde‡ 
ACURATE_LAT


10509 
	`Ârötf
 (
°dîr
, " ACURATE_LAT \n");

10511 #ifde‡ 
MOST_ACURATE_LAT


10512 
	`Ârötf
 (
°dîr
, " MOST_ACURATE_LAT \n");

10515 #ifde‡
PORT_PER_BANK


10516 
	`Ârötf
 (
°dîr
, "PORT_PER_BANK\n");

10518 #ifde‡ 
LINE_INTERLEAVED


10519 
	`Ârötf
 (
°dîr
, "LINE_INTERLEAVED\n");

10521 #ifde‡ 
PWR_CLUSTER


10522 
	`Ârötf
 (
°dîr
, "PWR_CLUSTER,ISSUE_PER_CLUSTER \n");

10524 #ifde‡ 
CHECKS


10525 
	`Ârötf
 (
°dîr
, "CHECKS\n");

10527 #ifde‡ 
PWR__SMT_RR


10528 
	`Ârötf
 (
°dîr
, "PWR__SMT_RR\n");

10530 
	`Ârötf
 (
°dîr
, "REMOVE_ILP = %d\n", (Ë
REMOVE_ILP
);

10531 
	`Ârötf
 (
°dîr
, "HOPTIME = %d\n", (Ë
HOPTIME
);

10532 #ifde‡
CENTRALIZED_CACHE_BANK


10533 
	`Ârötf
 (
°dîr
, "CENTRALIZED_CACHE_BANK\n");

10535 #ifde‡
IGNORE_MEM_COMM_LATENCY


10536 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10538 
	`Ârötf
 (
°dîr
, "DO_DYNAMIC_ADAPTATION = %d\n", (Ë
DO_DYNAMIC_ADAPTATION
);

10539 
	`Ârötf
 (
°dîr
, "N_WAY = %d\n", 
n_way
);

10540 
	`Ârötf
 (
°dîr
, "n_way_ˇchê%d\n", 
n_way_ˇche
);

10541 #ifde‡
OPTICAL_FE_LINK


10542 
	`Ârötf
 (
°dîr
, "OPTICAL_FE_LINK\n");

10544 #ifde‡
MONOLETHIC_MACHINE


10545 
	`Ârötf
 (
°dîr
, "MONOLETHIC_MACHINE\n");

10548 #ifde‡
TOKENB


10549 
	`Ârötf
 (
°dîr
, "TOKENB\n");

10553 *
sim_°r_dump
;

10554 *
sim_dump
 = 
sim_°r_dump
;

10555 
°rFûeName
[256];

10556 i‡(!
sim_dump
)

10558 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

10559 
	`exô
 (1);

10562 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

10563 
	`°rˇt
 (
°rFûeName
, ".trc");

10564 
Â_åa˚
 = 
	`f›í
 (
°rFûeName
, "w");

10565 if(!
Â_åa˚
Ë
	`∑nic
("CouldÇot openÅrace file");

10568 #ifdef 
EDA


10569 
	`SèπSkñë⁄Ród
 (0);

10571 
	`Æloˇã_‰ì_evít_li°
();

10574 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10576 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10577 
cuºít
->
„tch_¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
;

10578 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

10580 
cuºít
->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_PC
 -  (
md_ö°_t
);

10581 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.ªgs_PC -  (
md_ö°_t
);

10582 #ifde‡
PDG


10583 
cuºít
->
a˘ive
 = 1;

10588 
	`bö_öô
 ();

10589 
	`ˇche_öô
 ();

10590 #ifde‡ 
STREAM_PREFETCHER


10591 
	`öô_•
 ();

10593 #ifde‡ 
L1_STREAM_PREFETCHER


10594 
	`l1öô_•
 ();

10597 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

10599 
di•_time
[
i
] = 0;

10602 
i
 = 0; i < 
numc⁄ãxts
; i++)

10604 
	`ªg_öô
 (
i
);

10605 
	`b¥ed_öô
 (
i
);

10608 #ifde‡
REG_RENAME_CONFIGUARE


10609 
	`Ârötf
 (
°dîr
, "TŸÆ Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

10612 
i
 = 0; i < 
CLUSTERS
; i++)

10614 
num_°‹eq
[
i
] = 0;

10615 
max_°‹eq
[
i
] = 0;

10618 
mm
 = 0; mm <
NUMPHASES
; mm++)

10620 
num_picks
[
mm
] = 0;

10623 i‡(
CENTRAL_CACHE
)

10625 
a˘uÆ_ˇchï‹ts
 = 
CACHEPORTS
;

10626 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10630 
	`ˇche_ch™ge_c⁄fig
 (
SMALLEST_CONFIG
);

10631 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10632 
a˘uÆ_ˇchï‹ts
 = (
CACHEPORTS
 * 
a˘uÆ_˛u°îs
Ë/ 
CLUSTERS
;

10635 
πhªsh
 = 
ö¢_öãrvÆ
 / 100;

10636 
bπhªsh
 = 
ö¢_öãrvÆ
 / 100;

10637 
m°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10638 
im°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10639 
cy˘hªsh
 = 
ö¢_öãrvÆ
 / 100;

10640 
∫oi£
 = 
ö¢_öãrvÆ
 / 20;

10641 
b∫oi£
 = 
ö¢_öãrvÆ
 / 50;

10642 
m¢oi£
 = 
ö¢_öãrvÆ
 / 100;

10643 
im¢oi£
 = 
ö¢_öãrvÆ
 / 200;

10645 #ifdef 
COLLECT_STAT_STARTUP


10646 
a˘uÆPro˚ss
 = 1;

10648 
a˘uÆPro˚ss
 = 
numc⁄ãxts
;

10650 
execuãMaxIn¢
 = 
max_ö°s
;

10656 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10658 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10659 
cuºít
->
a˘ive_this_cy˛e
 = 1;

10662 #ifdef 
SMD_USE_WRITE_BUF


10664 
thªadid
 = 0;Åhªadid < 
MAXTHREADS
;Åhreadid++)

10666 
i
 = 0; i < 
SMD_L1_WBUF_SIZE
; i++)

10668 
m_L1WBuf
[
thªadid
][
i
].
PC
 = 0;

10669 
m_L1WBuf
[
thªadid
][
i
].
lsqId
 = 0;

10670 
m_L1WBuf
[
thªadid
][
i
].
robId
 = 0;

10671 
m_L1WBuf
[
thªadid
][
i
].
robExId
 = 0;

10672 
m_L1WBuf
[
thªadid
][
i
].
addr
 = 0;

10673 
m_L1WBuf
[
thªadid
][
i
].
›
 = 0;

10674 
m_L1WBuf
[
thªadid
][
i
].
œt
 = 0;

10675 
m_L1WBuf
[
thªadid
][
i
].
sim_num_ö¢
 = 0;

10676 
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
 = 0;

10677 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 0;

10678 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 0;

10679 
m_L1WBuf
[
thªadid
][
i
].
íåyTime
 = 0;

10680 
m_L1WBuf
[
thªadid
][
i
].
wrôeVÆue
 = 0;

10681 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 0;

10683 
m_L1WBufC¡
[
thªadid
] = 0;

10684 
m_L1WBuf_hód
[
thªadid
] = 0;

10685 
m_L1WBuf_èû
[
thªadid
] = 0;

10688 #ifde‡
DIRECTORY


10689 #ifde‡
MC


10690 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

10691 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10692 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10693 
	`maöP›√t
();

10694 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

10696 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10697 
	`maöP›√t
();

10700 #ifde‡
OPTICAL_INTERCONNECT


10701 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10703 #ifde‡
POPNET


10704 
	`maöP›√t
();

10712 #ifdef 
DCACHE_MSHR


10713 
i
 = 0; i < 
numc⁄ãxts
; i++)

10714 
	`‰ìMSHR
(
ˇche_dl1
[
i
]->
mshr
);

10715 
	`‰ìL2MSHR
(
ˇche_dl2
->
mshr
);

10718 #ifde‡
POWER_ACCESS_STAT


10719 
lsq_¥eg_ac˚ss_cou¡
 +
lsq_¥eg_ac˚ss
;

10720 
lsq_wakeup_ac˚ss_cou¡
 +
lsq_wakeup_ac˚ss
;

10723 #ifdef 
EDA


10724 
	`dl0_˛ónup
 ();

10729 
	`±ø˚_check_a˘ive
 (
thec⁄ãxts
[0]->
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

10731 
	`±ø˚_√wcy˛e
 (
sim_cy˛e
);

10733 
i
 = 0; i<
numc⁄ãxts
; i++)

10737 
commô_Êag
[
i
] ++;

10740 
	`ruu_commô
 ();

10742 #ifde‡
SMD_USE_WRITE_BUF


10743 
	`ruu_ªÀa£_wrôebuf„r
 ();

10744 
	`ruu_wrôe_‰om_Wrôebuf„r
 ();

10748 
	`ruu_ªÀa£_fu
 ();

10750 
	`ruu_wrôeback
 ();

10753 i‡(!
bugcom∑t_mode
)

10755 
	`lsq_ª‰esh
 ();

10756 
	`ruu_issue
 ();

10759 
ggg
;

10761 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10763 
di•©ch_d⁄e
[
ggg
] = 0;

10764 i‡(
thec⁄ãxts
[
ggg
]->
a˘ive_this_cy˛e
)

10766 
di•©ch_d⁄e
[
ggg
] = 
di•©ched
 = 
	`ruu_di•©ch
 (ggg);

10770 i‡(!
ÆlF‹ked
)

10772 #ifdef 
COLLECT_STAT_STARTUP


10773 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10775 
cﬁÀ˘SètSt›
[
ggg
] = 0;

10778 
cﬁÀ˘SètB¨rõr
 = 0;

10779 
ÆlF‹ked
 = 1;

10781 
	`öôP¨ÆÀlSimuœti⁄
 ();

10782 
cﬁÀ˘_°©s
 = 1;

10787 i‡(
ÊushImpSèts
)

10789 
ÊushImpSèts
 = 0;

10790 
cﬁÀ˘_°©s
 = 1;

10791 
sim_num_ö¢
 = 0;

10792 
ªÆSimCy˛e
 = 0;

10794 
i
 = 0; i < 
MAXTHREADS
; i++)

10796 
m_sqLQFuŒ
[
i
] = 0;

10797 
m_sqSQFuŒ
[
i
] = 0;

10798 
m_sqNumLdRïœy
[
i
] = 0;

10799 
ld°Reje˘i⁄Cou¡
[
i
] = 0;

10800 
£qC⁄sRïœy
[
i
] = 0;

10801 
£qC⁄sIn¢Rïœy
[
i
] = 0;

10804 
övÆid©i⁄_ª∂ay
[
i
] = 0;

10806 
tŸÆRUUsize
[
i
] = 
tŸÆLQsize
[i] = 
tŸÆSQsize
[i] = 0;

10808 #ifde‡
RELAXED_CONSISTENCY


10809 
lﬂdLﬂdRïœyCou¡
[
i
] = 0;

10812 
m_sqPª„tchC¡
 = 0;

10815 i‡(
timeToRëu∫
)

10817 
	`f˛o£
 (
Â_åa˚
);

10819 
i
 = 0; i < 
numc⁄ãxts
; i++)

10820 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10821 
	`Ârötf
(
°dîr
,"[INFO 0]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

10825 
i
 = 0; i < 
numc⁄ãxts
; i++)

10827 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

10829 
tŸÆRUUsize
[
i
] +
thec⁄ãxts
[i]->
RUU_num
;

10830 
avgRUUsize
[
i
] = (1.0 * 
tŸÆRUUsize
[i]Ë/ 
ªÆSimCy˛e
;

10832 
tŸÆLQsize
[
i
] +
thec⁄ãxts
[i]->
m_shLQNum
;

10833 
avgLQsize
[
i
] = (1.0 * 
tŸÆLQsize
[i]Ë/ 
ªÆSimCy˛e
;

10835 #ifdef 
SMD_USE_WRITE_BUF


10836 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
 + 
m_L1WBufC¡
[i];

10838 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
;

10840 
avgSQsize
[
i
] = (1.0 * 
tŸÆSQsize
[i]Ë/ 
ªÆSimCy˛e
;

10845 #ifde‡ 
CHECK_FETCH_QUEUE


10846 
	`check_„tch_queue
 ();

10849 i‡(
bugcom∑t_mode
)

10853 
	`lsq_ª‰esh
 ();

10857 
	`ruu_issue
 ();

10860 
	`ruu_„tch
 ();

10862 #ifde‡
DIRECTORY


10863 
	`dú_fifo_dequeue
();

10864 
	`dú_evítq_√xãvít
();

10865 #ifde‡
LOCK_HARD


10866 
	`lock_evítq_√xãvít
();

10868 #ifde‡
MC


10869 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

10870 
	`dúe˘RunSim
(
sim_cy˛e
);

10871 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10872 
	`p›√tRunSim
(
sim_cy˛e
);

10873 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

10875 
	`dúe˘RunSim
(
sim_cy˛e
);

10876 
	`p›√tRunSim
(
sim_cy˛e
);

10879 #ifde‡
OPTICAL_INTERCONNECT


10880 
	`dúe˘RunSim
(
sim_cy˛e
);

10882 #ifde‡
POPNET


10883 
	`p›√tRunSim
(
sim_cy˛e
);

10888 #ifde‡
MEM_MOD


10889 
f
, 
j
;

10890 
f
=0; f<8; f++)

10892 if(
mem_p‹t_œt
[
f
] != 0)

10893 
mem_p‹t_œt
[
f
] --;

10896 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "HYBRID"))

10898 
f
 = 0; f< 100; f++)

10899 
j
 = 0; j< 100; j++)

10900 if(
lök_£r_œt
[
f
][
j
] > 0)

10901 
lök_£r_œt
[
f
][
j
] --;

10904 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10906 
	`upd©e_powî_°©s
(
thec⁄ãxts
[0]->
powî
, 
thªadid
,Åhecontexts[threadid]);

10908 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10909 i‡(
cuºít
->
ruu_„tch_issue_dñay
)

10910 
cuºít
->
ruu_„tch_issue_dñay
--;

10912 
	`˛ór_ac˚ss_°©s
();

10918 #ifde‡ 
CHECKS


10919 
	`check_ªg
 ();

10922 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_cy˛e
 >
œ°_hŸ•Ÿ_cy˛e
 + 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
)

10924 
	`upd©e_hŸ•Ÿ_°©s
 (
sim_cy˛e
 - 
œ°_hŸ•Ÿ_cy˛e
);

10925 
œ°_hŸ•Ÿ_cy˛e
 = 
sim_cy˛e
;

10928 
	`check_fu_busy
 ();

10929 
â
;

10931 i‡(!
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
)

10933 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10935 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10936 #ifdef 
EDA


10937 i‡(
cuºít
->
ma°îid
 =0 && ((Ë(cuºít->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

10939 i‡(((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

10942 
	`Ârötf
 (
°dîr
, "Thªad %d ha†ex˚eded max_ö°s; kûlögáŒÅhªads.\n", 
thªadid
);

10943 
kûœŒ
 = 1;

10948 
thªadid
 = 0, 
thªad_°›
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10950 
tmp
 = 0, 
tid
;

10952 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10954 #ifdef 
EDA


10955 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && 
cuºít
->
ma°îid
 =0 && ((Ë(cuºít->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

10957 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
 && ((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

10960 
cuºít
->
föish_cy˛e
 = (Ë(
sim_cy˛e
 - 
cy˛echeck
);

10961 
cuºít
->
ru¬ög
 = 0;

10962 
°›≥d_num_thªads
++;

10964 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
 - 
°›≥d_num_thªads
;

10966 
thªad_°›
 = 1;

10967 
	`Ârötf
 (
°dîr
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

10968 
	`Ârötf
 (
°dîr
, "IPC_∑tül%d,≥∏thªad %4.3f, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

10970 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_hŸ•Ÿout_fd
 !
°dîr
)

10972 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

10975 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10977 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10978 i‡(
cuºít
->
föish_cy˛e
)

10979 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(cuºít->
föish_cy˛e
 - 
cy˛echeck
));

10981 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

10983 
	`Ârötf
 (
°dîr
, "\n");

10984 
	`Ârötf
 (
°dîr
, "num_ö¢_∑tül%d,≥∏thªad %lu, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
));

10986 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10988 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10989 i‡(
cuºít
->
föish_cy˛e
)

10990 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

10992 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

10994 
	`Ârötf
 (
°dîr
, "\n");

10995 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

10997 
	`Ârötf
 (
°dîr
, "********All finish simulation done**********\n");

10998 
	`Ârötf
 (
°dîr
, "föish_cy˛ê%lu,ÖîÅhªad , ", (Ë
sim_cy˛e
);

10999 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11001 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11002 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
föish_cy˛e
 - 
WARMUP
));

11004 
	`Ârötf
 (
°dîr
, "\n");

11008 
now_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

11010 i‡(!
sim_cy˛e
)

11011 
¥öt_time
 = 
now_time
;

11012 
sim_ñ≠£d_£c
 = 0;

11014 i‡((Ë
sim_num_ö¢
 && ((
°›≥d_num_thªads
 =
numc⁄ãxts
Ë|| 
thªad_°›
))

11016 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

11018 
sim_cy˛e
 -
w¨mupEndCy˛e
;

11019 
	`Ârötf
(
°dîr
,"[INFO 1]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

11024 
	#PERIOD
 100000

	)

11025 
	#INTERVAL
 10000

	)

11026 
	#NUM_CONFIG
 3

	)

11027 #i‡
DO_DYNAMIC_ADAPTATION


11029 i‡(
mè_maxthªads
 == 1)

11031 i‡(((
sim_num_ö¢
 % 
PERIOD
Ë>0Ë&& ((sim_num_ö¢ % PERIODË< 
NUM_CONFIG
 * 
INTERVAL
))

11032 
	`≥riodic_ad≠èti⁄
 ();

11036 
	#PRINT_STATISTICS
 0

	)

11037 #i‡
PRINT_STATISTICS


11038 
	`ch™geCacheC⁄fig
 ();

11041 #ifde‡
INTERVAL_BASED


11042 i‡(!((Ë
sim_cy˛e
 % 
ADAPT_INTERVAL
) && (() sim_cycle))

11045 #ifde‡ 
EXAMIN_N_WAY_ADAPT


11046 
	`upd©e_examö_n_limô
 ();

11048 #ifde‡ 
N_WAY_ADAPT


11049 
	`upd©e_n_limô
 ();

11051 #ifde‡
THRD_PRIO_ADAPT


11052 
	`¥i‹ôy_n_way
 ();

11054 #ifde‡
PDG_THRD_ADAPT


11055 
	`pdg_thrd_n_way
 ();

11057 #ifde‡
PDG_THRD_PRIO_ADAPT


11058 
	`pdg_¥i‹ôy_n_way
 ();

11060 #ifde‡
PDG_ADAPT


11061 
	`pdg_n_way
 ();

11063 #ifde‡
N_WAY_CACHE_ADAPT


11064 
	`n_way_ˇche_ad≠t
 ();

11066 #ifde‡
INTERVAL_BASED


11070 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

11071 
	`busFªe
 ();

11073 
sim_cy˛e
++;

11075 #ifde‡
DIRECTORY


11076 
	`ª£t_p‹ts
();

11080 #ifde‡
SEQUENTIAL_CONSISTENCY


11081 
i
 = 0; i < 
numc⁄ãxts
; i++)

11083 i‡(
övÆid©i⁄SèŒ
[
i
])

11084 
övÆid©i⁄SèŒ
[
i
]--;

11085 i‡(
commôSèŒ
[
i
])

11086 
commôSèŒ
[
i
]--;

11089 
ªÆSimCy˛e
++;

11090 
no_idól
 = 1;

11091 
i
 = 0; i < 
numc⁄ãxts
; i++)

11093 #ifde‡
SYNC_IDEAL


11094 if(
ÆlF‹ked
 && (
b¨rõr_waôög
[
i
]))

11095 
no_idól
 = 0;

11097 
œt
 = 100;

11098 i‡(!
ÆlF‹ked
)

11100 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (—hec⁄ãxts[i]->
¶ïtAt
 + 1000Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
))

11102 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

11103 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

11108 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (thec⁄ãxts[i]->
¶ïtAt
 + 
œt
 + (
	`øndom
 (Ë% 20Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
Ë&& 
no_idól
)

11110 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

11111 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

11112 i‡(
cﬁÀ˘_°©s
)

11113 
quõn£Wakeup
[
i
]++;

11118 i‡(((!
max_b¨rõr
 && (
puª_num_ö¢
 > 
execuãMaxIn¢
)Ë|| (max_b¨rõ∏&& 
TŸÆB¨rõrs
 >max_b¨rõr)Ë&& 
cﬁÀ˘_°©s
)

11120 
i
 = 0; i < 
numc⁄ãxts
; i++)

11121 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

11123 
	`Ârötf
(
°dîr
,"[INFO 2]: sim_num_ö¢=%Œu, b¨rõrs=%d", 
puª_num_ö¢
, 
TŸÆB¨rõrs
);

11126 i‡(
unPrötLimô
 < 
STATUS_NUM
 && (
puª_num_ö¢
 >(unPrötLimô * (
max_ö°s
 / STATUS_NUM))))

11128 #ifde‡
MC


11129 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

11131 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11132 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11134 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

11136 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
);

11137 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\tmëa_∑ckës%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
, 
MëaPackës_1
);

11139 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

11141 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11142 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11145 #ifde‡
POPNET


11146 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
);

11147 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\td©a_∑ckës_gíî©e=%d\tmëa_∑ckës%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
, 
D©aPackës_1
, 
MëaPackës_1
);

11149 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11150 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11153 
	`fÊush
 (
°dîr
);

11154 
	`fÊush
 (
°dout
);

11155 
	`¥ötf
("b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

11156 
	`Ârötf
(
°dîr
, "b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

11157 
	`fÊush
 (
°dîr
);

11158 
	`fÊush
 (
°dout
);

11159 
unPrötLimô
++;

11160 
globÆ_d©a_∑ckës_gíî©i⁄
 = 0;

11161 
D©aPackës_1
 = 0;

11162 
MëaPackës_1
 = 0;

11169 
	`gë_‰ì_ªg
 (
Ãegnum
, 
thªadid
)

11171 
ãmpvÆ
;

11172 
li°ñt
 *
ãmp
;

11174 
c⁄ãxt
 *
cuºít
;

11176 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11178 i‡((
Ãegnum
 < 1) || (lregnum > 62))

11180 i‡(
Ãegnum
 < 32)

11182 i‡(!
i‰ìli°_hód
[
thªadid
])

11184 
	`¥ötf
 ("Num o‡IREG=%d\n", 
úegfûe
);

11185 
	`Ârötf
 (
°dîr
, "Num o‡IREG=%d\n", 
úegfûe
);

11186 
	`∑nic
 ("Out ofÑegisters?!");

11189 
ãmp
 = 
i‰ìli°_hód
[
thªadid
];

11190 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11191 
i‰ìli°_hód
[
thªadid
] = i‰ìli°_hód[thªadid]->
√xt
;

11192 i‡(!
i‰ìli°_hód
[
thªadid
])

11193 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11194 i‡(
i‰ìli°_hód
[
thªadid
])

11195 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11196 
	`‰ì
 (
ãmp
);

11197 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11198 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11199 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11200 #ifde‡ 
REMOVE_REG_COUNT


11201 
úegfûe
++;

11203 
úegfûe_˛
[
thªadid
]++;

11204  
ãmpvÆ
;

11208 i‡(!
f‰ìli°_hód
[
thªadid
])

11210 
	`¥ötf
 ("Num o‡FREG=%d\n", 
‰egfûe
);

11211 
	`Ârötf
 (
°dîr
, "Num o‡FREG=%d\n", 
‰egfûe
);

11212 
	`∑nic
 ("Out ofÑegisters?!");

11215 
ãmp
 = 
f‰ìli°_hód
[
thªadid
];

11216 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11217 
f‰ìli°_hód
[
thªadid
] = f‰ìli°_hód[thªadid]->
√xt
;

11218 i‡(!
f‰ìli°_hód
[
thªadid
])

11219 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11220 i‡(
f‰ìli°_hód
[
thªadid
])

11221 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11222 
	`‰ì
 (
ãmp
);

11223 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11224 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11225 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11226 #ifde‡ 
REMOVE_REG_COUNT


11227 
‰egfûe
++;

11229 
‰egfûe_˛
[
thªadid
]++;

11230  
ãmpvÆ
;

11236 
	`‰ìli°_ö£π
 (
¥egnum
, 
thªadid
)

11238 
li°ñt
 *
ñt
;

11239 
li°ñt
 *
p
;

11240 
li°ñt
 *
q
;

11242 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11245 i‡(
thªadid
 == 0)

11247 
p
 = 
i‰ìli°_hód
[
thªadid
];

11248 
p
)

11250 
q
 = 
p
;

11251 
p
 =Ö->
√xt
;

11256 i‡(!
¥egnum
)

11258 i‡(
¥egnum
 <
IPREG_size
)

11260 #ifde‡ 
REMOVE_REG_COUNT


11261 
úegfûe
--;

11263 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11264 
ñt
->
¥eg
 = 
¥egnum
;

11265 i‡(
i‰ìli°_èû
[
thªadid
])

11267 
p
 = 
i‰ìli°_hód
[
thªadid
];

11268 
q
 = 
NULL
;

11269 
p
 && (p->
¥eg
 < 
¥egnum
))

11271 
q
 = 
p
;

11272 
p
 =Ö->
√xt
;

11274 i‡(!
p
 || !
SORT
)

11276 
i‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11277 
ñt
->
¥ev
 = 
i‰ìli°_èû
[
thªadid
];

11278 
ñt
->
√xt
 = 
NULL
;

11279 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11281 i‡(
q
)

11283 
q
->
√xt
 = 
ñt
;

11284 
ñt
->
¥ev
 = 
q
;

11285 
ñt
->
√xt
 = 
p
;

11286 
p
->
¥ev
 = 
ñt
;

11290 
ñt
->
√xt
 = 
i‰ìli°_hód
[
thªadid
];

11291 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11292 
ñt
->
¥ev
 = 
NULL
;

11293 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11298 
ñt
->
√xt
 = 
NULL
;

11299 
ñt
->
¥ev
 = 
NULL
;

11300 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11301 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11303 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11304 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11305 
úegfûe_˛
[
thªadid
]--;

11309 #ifde‡ 
REMOVE_REG_COUNT


11310 
‰egfûe
--;

11312 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11313 
ñt
->
¥eg
 = 
¥egnum
;

11314 i‡(
f‰ìli°_èû
[
thªadid
])

11316 
p
 = 
f‰ìli°_hód
[
thªadid
];

11317 
q
 = 
NULL
;

11318 
p
 && (p->
¥eg
 < 
¥egnum
))

11320 
q
 = 
p
;

11321 
p
 =Ö->
√xt
;

11323 i‡(!
p
 || !
SORT
)

11325 
f‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11326 
ñt
->
¥ev
 = 
f‰ìli°_èû
[
thªadid
];

11327 
ñt
->
√xt
 = 
NULL
;

11328 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11330 i‡(
q
)

11332 
q
->
√xt
 = 
ñt
;

11333 
ñt
->
¥ev
 = 
q
;

11334 
ñt
->
√xt
 = 
p
;

11335 
p
->
¥ev
 = 
ñt
;

11339 
ñt
->
√xt
 = 
f‰ìli°_hód
[
thªadid
];

11340 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11341 
ñt
->
¥ev
 = 
NULL
;

11342 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11347 
ñt
->
√xt
 = 
NULL
;

11348 
ñt
->
¥ev
 = 
NULL
;

11349 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11350 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11352 
‰egfûe_˛
[
thªadid
]--;

11353 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11354 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11359 
	`ªcFªeRegLi°
 (
thªadid
)

11361 
li°ñt
 *
p
;

11362 
li°ñt
 *
ãmp
;

11363 
cou¡
 = 0;

11364 
i
;

11366 
p
 = 
i‰ìli°_hód
[
thªadid
];

11367 i‡(
p
)

11369 
cou¡
++;

11370 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11372 
cou¡
++;

11373 
ãmp
 = 
p
;

11374 
p
 =Ö->
√xt
;

11375 
	`‰ì
 (
ãmp
);

11379 
p
 = 
f‰ìli°_hód
[
thªadid
];

11380 i‡(
p
)

11382 
cou¡
++;

11383 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11385 
cou¡
++;

11386 
ãmp
 = 
p
;

11387 
p
 =Ö->
√xt
;

11388 
	`‰ì
 (
ãmp
);

11392 
	`ªg_öô
 (
thªadid
);

11396 
	`numFªeReg
 (
thªadid
)

11398 
li°ñt
 *
p
;

11399 
cou¡
 = 0;

11401 
p
 = 
i‰ìli°_hód
[
thªadid
];

11402 i‡(
p
)

11404 
cou¡
++;

11405 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11407 
cou¡
++;

11408 
p
 =Ö->
√xt
;

11412 
p
 = 
f‰ìli°_hód
[
thªadid
];

11413 i‡(
p
)

11415 
cou¡
++;

11416 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11418 
cou¡
++;

11419 
p
 =Ö->
√xt
;

11422  
cou¡
;

11427 
	`c›y_to
 (
thªadid
)

11429 
i
;

11431 
c⁄ãxt
 *
cuºít
;

11433 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11435 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11437 
cuºít
->
…›m≠_chk
[
i
] = cuºít->
…›m≠
[i];

11439 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11441 i‡(
cuºít
->
±ﬁm≠
[
i
].
thªadid
 ==Åhreadid)

11443 
cuºít
->
±ﬁm≠_chk
[
i
].
Ãeg
 = cuºít->
±ﬁm≠
[i].lreg;

11444 
cuºít
->
±ﬁm≠_chk
[
i
].
thªadid
 = cuºít->
±ﬁm≠
[i].threadid;

11451 
	`c›y_‰om
 (
thªadid
)

11453 
i
;

11455 
c⁄ãxt
 *
cuºít
;

11457 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11459 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11461 
cuºít
->
…›m≠
[
i
] = cuºít->
…›m≠_chk
[i];

11467 
	`b¥ed_öô
 (
i
)

11470 i‡(
ruu_bønch_≥«…y
 < 1)

11471 
	`Áèl
 ("mis-predictionÖenalty must beátÜeast 1 cycle");

11473 i‡(
„tch_•ìd
 != 1)

11474 
	`Áèl
 ("front-end speed must be 1 for SMT version of simulator");

11476 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

11478 i‡(
bimod_√…
 != 1)

11479 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11480 i‡(
btb_√…
 != 2)

11481 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11482 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

11483  
bimod_c⁄fig
[0],

11489  
btb_c⁄fig
[0],

11490  
btb_c⁄fig
[1],

11491  
øs_size
);

11493 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

11496 i‡(
twﬁev_√…
 != 4)

11497 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11498 i‡(
btb_√…
 != 2)

11499 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11501 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

11503  
twﬁev_c⁄fig
[0],

11504  
twﬁev_c⁄fig
[1],

11506  
twﬁev_c⁄fig
[2],

11507  
twﬁev_c⁄fig
[3],

11508  
btb_c⁄fig
[0],

11509  
btb_c⁄fig
[1],

11510  
øs_size
);

11512 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

11515 i‡(
twﬁev_√…
 != 4)

11516 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11517 i‡(
bimod_√…
 != 1)

11518 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11519 i‡(
comb_√…
 != 1)

11520 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

11521 i‡(
btb_√…
 != 2)

11522 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11524 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

11525  
bimod_c⁄fig
[0],

11526  
twﬁev_c⁄fig
[0],

11527  
twﬁev_c⁄fig
[1],

11528  
comb_c⁄fig
[0],

11529  
twﬁev_c⁄fig
[2],

11530  
twﬁev_c⁄fig
[3],

11531  
btb_c⁄fig
[0],

11532  
btb_c⁄fig
[1],

11533  
øs_size
);

11536 i‡(!
b¥ed_•ec_›t
)

11537 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

11538 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "ID"))

11539 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

11540 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "WB"))

11541 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

11543 
	`Áèl
 ("bad speculative update stage specifier, use {ID|WB}");

11545 
	`b¥ed_ªg_°©s
 (
thec⁄ãxts
[
i
]->
¥ed
, 
sim_sdb
, i);

11550 
	`ªg_öô
 (
thªadid
)

11552 
i
;

11554 
c⁄ãxt
 *
cuºít
;

11556 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11558 
i‰ìli°_hód
[
thªadid
] = 
NULL
;

11559 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11560 
f‰ìli°_hód
[
thªadid
] = 
NULL
;

11561 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11563 #ifde‡ 
REMOVE_REG_COUNT


11566 
úegfûe
 = 
IPREG_size
;

11567 
‰egfûe
 = 
FPREG_size
;

11569 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11571 
	`‰ìli°_ö£π
 (
i
, 
thªadid
);

11572 
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 = 0;

11573 
cuºít
->
±ﬁm≠
[
i
].
thªadid
 = -1;

11575 
úegfûe_˛
[
thªadid
] = 0;

11576 
‰egfûe_˛
[
thªadid
] = 0;

11577 #i‚de‡ 
NO_REG_INIT


11579 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11580 
i
 = 0; i < 63; i++)

11582 
cuºít
->
…›m≠
[
i
] = 
	`gë_‰ì_ªg
 (i, 
thªadid
);

11584 
i
 = 63; i < 
MD_TOTAL_REGS
; i++)

11585 
cuºít
->
…›m≠
[
i
] = 0;

11592 
	`ªg_cou¡
 ()

11595 
úegfûe
 = 0;

11596 
‰egfûe
 = 0;

11597 
i
, 
j
;

11598 
c⁄ãxt
 *
cuºít
;

11600 
j
 = 0; j < 
numc⁄ãxts
; j++)

11602 
cuºít
 = 
thec⁄ãxts
[
j
];

11603 
i
 = 1; i < 
p_tŸÆ_ªgs
; i++)

11605 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 0Ë&& (cuºít->±ﬁm≠[i].Ãeg < 32Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11607 
úegfûe
++;

11609 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 31Ë&& (cuºít->±ﬁm≠[i].Ãeg < 63Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11611 
‰egfûe
++;

11615 i‡(
úegfûe
 < 31)

11616 
	`∑nic
 ("phys iregfileÜessÅhan 31");

11617 i‡(
‰egfûe
 < 31)

11618 
	`∑nic
 ("phys fregfileÜessÅhan 31");

11623 
	`öôP¨ÆÀlSimuœti⁄
 ()

11625 
˙t
, 
cx
, 
j
;

11626 
x
, 
y
, 
z
, 
max
;

11628 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

11629 
thec⁄ãxts
[
˙t
]->
°¨t_cy˛e
 = 
sim_cy˛e
;

11631 
cx
 = 0; cx < 
numc⁄ãxts
; cx++)

11633 
thec⁄ãxts
[
cx
]->
„tch_num
 = 0;

11634 
thec⁄ãxts
[
cx
]->
„tch_èû
 =Åhec⁄ãxts[cx]->
„tch_hód
 = 0;

11635 
thec⁄ãxts
[
cx
]->
„tch_¥ed_PC
 =Åhec⁄ãxts[cx]->
„tch_ªgs_PC
 =Åhec⁄ãxts[cx]->
ªgs
.
ªgs_NPC
;

11636 
cﬁÀ˘SètSt›
[
cx
] = 0;

11637 
thec⁄ãxts
[
cx
]->
sim_num_ö¢
 = 0;

11639 
cﬁÀ˘SètB¨rõr
 = 0;

11640 
ÆlF‹ked
 = 1;

11687 
	`checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
)

11690 
RUU_°©i⁄
 *
rs
 = &
cuºít
->
LSQ
[
i
];

11691 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

11693 i‡(
i
 !
cuºít
->
LSQ_hód
)

11697 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

11699 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
Ë&& (
	`STORE_ADDR_READY
 (&cuºít->LSQ[i])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->threadid))

11701 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

11702 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

11703 
md_addr_t
 
qwAddr1
 = 
rs
->
addr
 & ~(
nW
 - 1);

11704 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

11706 i‡(
qwAddr1
 =
qwAddr2
)

11708 i‡(
cuºít
->
LSQ
[
i
].
issued
)

11714 i‡(
i
 =
cuºít
->
LSQ_hód
)

11724 
	`£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
)

11726 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11727 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
, 
j
, 
°‹eCou¡
 = 
m_L1WBufC¡
[
thªadid
];

11728 
wb_mem_ít
 *
lök
;

11730 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

11731 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

11732 
shi·_right
 = 0;

11735 
£qC⁄sRïœy
[
cuºít
->
a˘uÆid
]++;

11737 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

11738 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

11739 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

11740 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

11742 i‡(!
cuºít
->
RUU_num
)

11743 
	`∑nic
 ("empty RUU");

11745 
RUU_ödex
 !
ª∂ay_ödex
)

11748 i‡(!
ãmp_RUU_num
)

11749 
	`∑nic
 ("empty RUU");

11752 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

11754 i‡(
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& 
F_STORE
)

11756 
width
 = 
	`GëMemAccWidth
(
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

11758 i‡((
width
 & (width - 1)Ë=0 && (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & (width - 1)Ë=0 && !cuºít->LSQ[LSQ_ödex].
isPª„tch
)

11759 
°‹eCou¡
++;

11761 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

11762 
ãmp_LSQ_num
--;

11764 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11765 
ãmp_RUU_num
--;

11768 
RUU_ödex
 !
cuºít
->
RUU_èû
)

11771 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

11773 
cuºít
->
iissueq_thrd
--;

11774 
iissueq
--;

11775 
iissueq_˛
[
cuºít
->
id
]--;

11776 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

11778 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

11780 
cuºít
->
fissueq_thrd
--;

11781 
fissueq
--;

11782 
fissueq_˛
[
cuºít
->
id
]--;

11783 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

11786 
cuºít
->
sim_num_ö¢
--;

11787 
sim_num_ö¢
--;

11788 
£qC⁄sIn¢Rïœy
[
cuºít
->
a˘uÆid
]++;

11790 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

11792 i‡(!
ãmp_LSQ_num
)

11793 
	`∑nic
 ("RUUánd LSQ out of sync");

11795 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

11797 
cuºít
->
iissueq_thrd
--;

11798 
iissueq
--;

11799 
iissueq_˛
[
cuºít
->
id
]--;

11800 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

11802 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

11804 
cuºít
->
fissueq_thrd
--;

11805 
fissueq
--;

11806 
fissueq_˛
[
cuºít
->
id
]--;

11807 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

11810 
i
 = 0; i < 
MAX_ODEPS
; i++)

11812 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

11813 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

11816 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
 || cuºít->LSQ[LSQ_ödex].› =
STQ_C
)

11818 
cuºít
->
waôF‹STLC
 = 0;

11820 #ifde‡
DIRECTORY


11821 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

11822 if(
m©chnum
)

11824 
m©chnum
 = matchnum-1;

11825 
RUU_°©i⁄
 *
rs_rob
 = &
cuºít
->
RUU
[
RUU_ödex
];

11826 
RUU_°©i⁄
 *
rs_lsq
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

11828 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
rs
 =
rs_rob
 || cache_dl1[thªadid]->mshr->mshrE¡ry[m©chnum].r†=
rs_lsq
)

11829 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
evít
->
rs
 = 
NULL
;

11831 
RS_li°
 *
cur
 = 
rs_ˇche_li°
[
thªadid
][
m©chnum
];

11833 
cur
)

11835 if(
cur
->
rs
 =
rs_rob
 || cur->r†=
rs_lsq
)

11836 
cur
->
rs
 = 
NULL
;

11837 
cur
 = cur->
√xt
;

11841 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

11842 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

11843 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

11844 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

11845 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

11847 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

11848 
cuºít
->
m_shLQNum
--;

11850 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

11852 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

11853 
cuºít
->
m_shSQNum
--;

11856 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

11857 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

11858 
cuºít
->
LSQ_num
--;

11859 
ãmp_LSQ_num
--;

11864 
i
 = 0; i < 
MAX_ODEPS
; i++)

11866 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

11867 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

11869 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

11870 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

11871 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

11872 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

11873 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11874 
cuºít
->
RUU_num
--;

11876 
cuºít
->
RUU_èû
 = 
ª∂ay_ödex
;

11879 
lök
 = 
cuºít
->
WBèbÀTaû
;

11881 i‡(
lök
 =
NULL
 || 
°‹eCou¡
 == 0)

11883 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
 = 
NULL
;

11884 i‡(
lök
 !
NULL
)

11886 
lök
 !
NULL
)

11888 
cuºít
->
numOfWBE¡ry
--;

11889 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

11890 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

11891 
lök
 =Üök->
¥ev
;

11892 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

11898 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
;

11899 
°‹eCou¡
--;

11900 
°‹eCou¡
)

11902 
cuºít
->
WBèbÀHód
 = cuºít->WBèbÀHód->
¥ev
;

11903 
°‹eCou¡
--;

11905 
lök
 = 
cuºít
->
WBèbÀHód
->
¥ev
;

11906 
cuºít
->
WBèbÀHód
->
¥ev
 = 
NULL
;

11908 
lök
 !
NULL
)

11910 
cuºít
->
numOfWBE¡ry
--;

11911 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

11912 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

11913 
lök
 =Üök->
¥ev
;

11914 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

11918 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11920 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

11921 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 
sim_cy˛e
;

11924 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

11925 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

11928 
md_›code
 
›
;

11930 
j
 = 
cuºít
->
„tch_num
;

11931 
i
 = 
cuºít
->
„tch_hód
; 
j
 > 0;)

11933 
	`MD_SET_OPCODE
 (
›
, 
cuºít
->
„tch_d©a
[
i
]->
IR
);

11934 
i
 = (ò+ 1Ë& (
ruu_ifq_size
 - 1);

11935 
j
--;

11937 
cuºít
->
„tch_num
 = 0;

11938 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

11939 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

11947 
	`fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
)

11950 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11951 
RUU_°©i⁄
 *
rs
;

11952 
i
, 
RUU_ödex
;

11954 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

11956 
RUU_ödex
 !
ª∂ay_ödex
)

11958 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11961 
RUU_ödex
 !
cuºít
->
RUU_èû
)

11963 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ªcovî_ö°
 && !cuºít->RUU[RUU_ödex].
com∂ëed
)

11965 
rs
 = &
cuºít
->
RUU
[
RUU_ödex
];

11966 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

11967 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

11968 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

11971 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

11975 #ifde‡
SMD_USE_WRITE_BUF


11978 
	`ruu_ªÀa£_wrôebuf„r
 ()

11980 
thªadid
, 
i
, 
˙t
, 
j
;

11982 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11984 
j
 = 
m_L1WBufC¡
[
thªadid
];

11985 
˙t
 = 0;

11986 
i
 = 
m_L1WBuf_hód
[
thªadid
];

11988 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

11989 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

11991 
˙t
 !
j
)

11993 i‡(
sim_cy˛e
 >
m_L1WBuf
[
thªadid
][
i
].
föishTime
 && m_L1WBuf[thªadid][i].
wrôeSèπed
)

11995 if(
m_L1WBuf
[
thªadid
][
i
].
isMiss
 && 
	`MSHR_block_check
(
ˇche_dl1
[thªadid]->
mshr
, m_L1WBuf[thªadid][i].
addr
, cache_dl1[thªadid]->
£t_shi·
))

11997 if(!
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
)

11998 
	`com∂ëeSt‹e
(
thªadid
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
	`GëMemAccWidth
(m_L1WBuf[thªadid][i].
›
), 0);

12000 
m_L1WBufC¡
[
thªadid
]--;

12001 
m_L1WBuf_hód
[
thªadid
] = (m_L1WBuf_hód[thªadid] + 1Ë% 
SMD_L1_WBUF_SIZE
;

12002 
i
 = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
;

12003 
˙t
++;

12009 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

12010 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

12015 
	`ruu_wrôe_‰om_Wrôebuf„r
 ()

12017 
thªadid
, 
i
, 
˙t
;

12018 
ªs_ãm∂©e
 *
fu
;

12019 
œt
 = 0;

12020 
c⁄ãxt
 *
cuºít
;

12022 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12024 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12026 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

12027 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

12029 
˙t
 = 0, 
i
 = 
m_L1WBuf_hód
[
thªadid
]; c¡ < 
m_L1WBufC¡
[thªadid]; c¡++, i = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
)

12031 
œt
 = 0;

12033 i‡(!
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
)

12035 #ifdef 
DCACHE_MSHR


12036 
m©chnum
;

12037 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

12038 if(
m©chnum
)

12040 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

12044 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
m_L1WBuf
[
thªadid
][
i
].
›
),Åhreadid);

12046 i‡(
fu


12047 #ifdef 
DCACHE_MSHR


12048 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid)

12052 i‡(
fu
->
ma°î
->
busy
)

12053 
	`∑nic
 ("functional unitálready in use");

12055 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

12056 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

12057 
fu
->
ma°î
->
du∂iˇã
 = 0;

12059 i‡(
ˇche_dl1
[
thªadid
])

12061 
dˇche_ac˚ss
++;

12062 
cuºít
->
dˇche_ac˚ss
++;

12064 
övÆid©eOthîCache
 = 0;

12066 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

12068 if(
m_L1WBuf
[
thªadid
][
i
].
›
 =
STL_C
 && m_L1WBuf[thªadid][i].
commôD⁄e
)

12070 
œt
 = 
ˇche_dl1_œt
;

12074 if(
	`md_vÆid_addr
 (
m_L1WBuf
[
thªadid
][
i
].
addr
, 
cuºít
->
ma°îid
))

12075 #ifde‡
DIRECTORY


12076 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid);

12078 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL,Åhreadid);

12082 #ifdef 
DCACHE_MSHR


12083 if(
œt
 > 
ˇche_dl1_œt
)

12085 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
œt
, 0, 
NULL
);

12086 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 1;

12088 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 
sim_cy˛e
;

12091 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 1;

12102 #ifdef 
EDA


12104 
	`assignFlﬂtRegs
 (
c⁄ãxt
 * 
cuºít
, 
RUU_°©i⁄
 *
rs
, 
A‹B
, 
dúty
)

12106 
md_›code
 
›
;

12107 
x
;

12108 
md_ö°_t
 
ö°
;

12110 
›
 = 
rs
->op;

12111 
ö°
 = 
rs
->
IR
;

12113 i‡(
A‹B
 == 2)

12115 
›
)

12117 
ITOFS
:

12118 
ITOFT
:

12119 
CVTTQ
:

12120 
CVTLQ
:

12121 
CPYS
:

12122 
CPYSN
:

12123 
CPYSE
:

12124 
CVTQL
:

12125 i‡(
dúty
)

12126 
	`SET_FPR_Q
 (
RC
, 
rs
->
pois⁄
[2].
d©a
);

12128 
	`SET_FPR_Q
 (
RC
, 
rs
->
vÆ_rc
);

12131 i‡(
dúty
)

12132 
	`SET_FPR
 (
RC
, 
rs
->
pois⁄
[2].
d©a
);

12134 
	`SET_FPR
 (
RC
, 
rs
->
vÆ_rc
);

12140 i‡(
A‹B
)

12142 
x
 = 
RB
;

12146 
x
 = 
RA
;

12149 
›
)

12151 
LDS
:

12152 
LDT
:

12153 
MF_FPCR
:

12155 
STS
:

12156 
STT
:

12157 
ITOFS
:

12158 
ITOFT
:

12159 
CMPTUN
:

12160 
CMPTEQ
:

12161 
CVTQS
:

12162 
CVTQT
:

12163 
CVTLQ
:

12164 
CVTQL
:

12165 
CPYS
:

12166 
CPYSN
:

12167 
CPYSE
:

12168 
MT_FPCR
:

12169 
FTOIT
:

12170 
FTOIS
:

12171 i‡(
dúty
)

12173 i‡(
A‹B
)

12174 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12176 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12180 i‡(
A‹B
)

12181 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_rb
);

12183 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_ø
);

12186 
FCMOVEQ
:

12187 
FCMOVGE
:

12188 
FCMOVGT
:

12189 
FCMOVLE
:

12190 
FCMOVLT
:

12191 
FCMOVNE
:

12192 i‡(
dúty
)

12194 i‡(
A‹B
)

12195 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12197 
	`SET_FPR_Q
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12201 i‡(
A‹B
)

12202 
	`SET_FPR
 (
x
, 
rs
->
vÆ_rb
);

12204 
	`SET_FPR_Q
 (
x
, 
rs
->
vÆ_ø
);

12208 i‡(
dúty
)

12210 i‡(
A‹B
)

12211 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[1].
d©a
);

12213 
	`SET_FPR
 (
x
, 
rs
->
pois⁄
[0].
d©a
);

12217 i‡(
A‹B
)

12218 
	`SET_FPR
 (
x
, 
rs
->
vÆ_rb
);

12220 
	`SET_FPR
 (
x
, 
rs
->
vÆ_ø
);

12228 
	`ˇlcuœãWr⁄gVÆue
 (
RUU_°©i⁄
 *
rs
)

12230 
i
, 
j
, 
k
, 
x
, 
y
, 
z
;

12231 
n_di•©ched
;

12232 
md_ö°_t
 
ö°
;

12233 
md_›code
 
›
;

12234 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

12235 
md_addr_t
 
èrgë_PC
;

12236 
md_addr_t
 
addr
;

12238 
byã_t
 
ãmp_byã
;

12239 
hÆf_t
 
ãmp_hÆf
;

12240 
w‹d_t
 
ãmp_w‹d
;

12242 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12243 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12245 
md_Áu…_ty≥
 
Áu…
;

12247 
pﬁluãd
[66];

12249 
qw‹d_t
 
vÆ_ø
, 
vÆ_rb
, 
vÆ_rc
, 
vÆ_ø_ªsu…
;

12250 
qw‹d_t
 
ªgVÆ
;

12251 
c⁄ãxt
 *
cuºít
, 
˘x
;

12252 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

12254 
˘x
 = *
thec⁄ãxts
[
rs
->
thªadid
];

12255 
cuºít
 = &
˘x
;

12256 
	`mem£t
 (&
cuºít
->
ªgs
, 0,  (current->regs));

12259 
ö°
 = 
rs
->
IR
;

12260 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12261 
cuºít
->
ªgs
.
ªgs_PC
 = 
rs
->
PC
;

12262 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

12264 i‡(!
rs
->
pois⁄
[0].
dúty
)

12266 i‡(
rs
->
ö1
 < 32)

12267 
	`SET_GPR
 (31 - 
rs
->
ö1
,Ñs->
vÆ_ø
);

12269 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 0, 0);

12273 i‡(
rs
->
ö1
 < 32)

12274 
	`SET_GPR
 (31 - 
rs
->
ö1
,Ñs->
pois⁄
[0].
d©a
);

12276 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 0, 1);

12278 i‡(!
rs
->
pois⁄
[1].
dúty
)

12280 i‡(
rs
->
ö2
 < 32)

12281 
	`SET_GPR
 (31 - 
rs
->
ö2
,Ñs->
vÆ_rb
);

12283 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 1, 0);

12287 i‡(
rs
->
ö2
 < 32)

12288 
	`SET_GPR
 (31 - 
rs
->
ö2
,Ñs->
pois⁄
[1].
d©a
);

12290 
	`assignFlﬂtRegs
 (
cuºít
, 
rs
, 1, 1);

12294 
›
)

12296 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12297 
OP
: \

12299 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

12300 
out1
 = 
O1
; 
out2
 = 
O2
; \

12301 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

12302 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

12303 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

12304 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

12305 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

12306 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

12308 
	`SYMCAT
(
OP
,
_IMPL
); \

12310 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12311 
OP
: \

12313 
›
 = 
MD_NOP_OP
; \

12315 
out1
 = 
NA
; 
out2
 = NA; \

12316 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

12319 
	#CONNECT
(
OP
Ë

	)

12325 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12327 i‡(!
cuºít
->
•ec_mode
) \

12328 
Áu…
 = (
FAULT
); \

12332 
	#THREADID
 (
cuºít
->
id
)

	)

12333 
	~"machöe.def
"

12336 
›
 = 
MD_NOP_OP
;

12338 
out1
 = 
NA
;

12339 
out2
 = 
NA
;

12340 
ö1
 = 
NA
;

12341 
ö2
 = 
NA
;

12342 
ö3
 = 
NA
;

12346 i‡(
out1
 < 32)

12347 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

12349 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

12351 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

12352 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

12354 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

12356 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
 && !rs->
•ec_mode
 && !rs->
isWr⁄gP©h
)

12358 
rs
->
ch™geS≥cMode
 = 0;

12359 i‡(
rs
->
ÆtPC
 !rs->
√xt_PC
)

12361 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 =
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 =rs->
√xt_PC
))

12363 
rs
->
ch™geS≥cMode
 = 1;

12366 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 =
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 !rs->
√xt_PC
))

12368 
rs
->
ch™geS≥cMode
 = 2;

12374 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 !
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 =rs->
√xt_PC
))

12376 
rs
->
ch™geS≥cMode
 = 3;

12377 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

12380 i‡((
cuºít
->
ªgs
.
ªgs_NPC
 !
rs
->
ÆtPC
Ë&& (rs->
¥ed_PC
 !rs->
√xt_PC
))

12382 
rs
->
ch™geS≥cMode
 = 4;

12383 
rs
->
ÆtPC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

12390 i‡(
rs
->
ó_comp
)

12392 
rs
->
pois⁄
[2].
dúty
 = 1;

12393 
rs
->
pois⁄
[2].
d©a
 = 
addr
;

12395 i‡(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_STORE
)

12398 i‡(
vÆ_rc
 !
rs
->val_rc)

12400 
rs
->
pois⁄
[2].
dúty
 = 1;

12401 
rs
->
pois⁄
[2].
d©a
 = 
vÆ_rc
;

12405 
rs
->
pois⁄
[2].
dúty
 = 0;

12406 
rs
->
pois⁄
[2].
d©a
 = 0;

12408 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

12414 #ifdef 
COLLECT_STAT_STARTUP


12416 
	`f°fwd_cﬁÀ˘Sèts
()

12418 
b¨rõrCou¡
 = 0;

12419 
thªadid
;

12421 
	`¥ötf
("Fast-forwardingÅillÅhe collect stats system call\n");

12422 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12425 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12427 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12428 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12431 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12432 
	`∑nic
 ("Fast forwardÉrror\n");

12434 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12435 
	`∑nic
 ("Fast forwardÉrror\n");

12441 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12443 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12446 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12447 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12449 
md_ö°_t
 
ö°
;

12450 
md_›code
 
›
;

12451 
md_addr_t
 
èrgë_PC
;

12452 
md_addr_t
 
addr
;

12453 
is_wrôe
;

12454 
byã_t
 
ãmp_byã
;

12455 
hÆf_t
 
ãmp_hÆf
;

12456 
w‹d_t
 
ãmp_w‹d
;

12457 if(
cuºít
->
ru¬ög
 =0 && 
b¨rõr_waôög
[
thªadid
])

12460 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12461 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12464 
md_Áu…_ty≥
 
Áu…
;

12467 #i‚de‡
PARALLEL_EMUL


12471 #ifde‡
PARALLEL_EMUL


12472 
sim_num_ö¢
++;

12475 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12476 #ifde‡
TARGET_ALPHA


12477 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12481 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12482 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12483 if(
cuºít
->
ru¬ög
 =0 && 
b¨rõr_waôög
[
thªadid
])

12486 
addr
 = 0;

12487 
is_wrôe
 = 
FALSE
;

12490 
Áu…
 = 
md_Áu…_n⁄e
;

12493 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12496 
›
)

12498 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12499 
OP
: \

12500 
	`SYMCAT
(
OP
,
_IMPL
); \

12502 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12503 
OP
: \

12504 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12505 
	#CONNECT
(
OP
)

	)

12506 #unde‡
DECLARE_FAULT


12507 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12508 { 
Áu…
 = (
FAULT
); ; }

12509 
	~"machöe.def
"

12511 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12514 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12515 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12518 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12520 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12522 
is_wrôe
 = 
TRUE
;

12523 #i‚de‡
PARALLEL_EMUL


12524 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12527 #i‚de‡
PARALLEL_EMUL


12529 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12534 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12535 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12538 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12539 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12541 #i‚de‡
PARALLEL_EMUL


12542 i‡((
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12544 if(
cuºít
->
b¨rõrRóched
 == 2)

12546 
b¨rõrCou¡
++;

12547 
	`¥ötf
("Cros£dÅhêb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12549 
cuºít
->
b¨rõrRóched
 = 0;

12553 if(
cﬁÀ˘_°©s
)

12555 
	`¥ötf
("Föished fa°-f‹w¨dögáàb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12565 
	`f°fwd_föeAdju°
 ()

12567 
thªadid
;

12568 
cou¡
 = 0;

12569 
tŸÆIå
 = 2;

12570 
¥Id
 = 0;

12571 
md_addr_t
 
ãmpPC
[3] = { 0, 0, 0 };

12573 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12576 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12578 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12579 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12582 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12583 
	`∑nic
 ("Fast forwardÉrror\n");

12585 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12586 
	`∑nic
 ("Fast forwardÉrror\n");

12588 if(
ûök_run
)

12590 
cﬁÀ˘_°©s
 = 1;

12595 #ifdef 
EDA


12596 
¥Id
 = 0;ÖrId < 3;ÖrId++)

12599 
cou¡
 = 0;

12602 
thªadid
 = 0;thªadid < 
numc⁄ãxts
;Åhreadid = (threadid +Çumcontexts + 1) %Çumcontexts)

12604 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12606 i‡(
cuºít
->
ma°îid
 !
¥Id
)

12610 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12611 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12613 
cou¡î_t
 
icou¡
 = 0;

12614 
md_ö°_t
 
ö°
;

12615 
md_›code
 
›
;

12616 
md_addr_t
 
èrgë_PC
;

12617 
md_addr_t
 
addr
;

12618 
is_wrôe
;

12619 
byã_t
 
ãmp_byã
;

12620 
hÆf_t
 
ãmp_hÆf
;

12621 
w‹d_t
 
ãmp_w‹d
;

12623 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12624 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12627 
md_Áu…_ty≥
 
Áu…
;

12631 
icou¡
++;

12633 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12634 #ifde‡
TARGET_ALPHA


12635 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12639 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12640 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12643 
addr
 = 0;

12644 
is_wrôe
 = 
FALSE
;

12647 
Áu…
 = 
md_Áu…_n⁄e
;

12650 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12653 
›
)

12655 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12656 
OP
: \

12657 
	`SYMCAT
(
OP
,
_IMPL
); \

12659 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12660 
OP
: \

12661 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12662 
	#CONNECT
(
OP
)

	)

12663 #unde‡
DECLARE_FAULT


12664 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12665 { 
Áu…
 = (
FAULT
); ; }

12666 
	~"machöe.def
"

12668 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12671 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12672 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12675 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12677 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12679 
is_wrôe
 = 
TRUE
;

12680 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12683 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12687 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12688 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12691 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12692 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12694 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12697 i‡(
cou¡
 =0 && 
cuºít
->
°¨tRóched
)

12699 
cuºít
->
°¨tRóched
 = 0;

12701 if(
cuºít
->
jobThdId
 != 0)

12702 
	`∑nic
 ("CanÇot beÑeached by otherÅhreads");

12704 
cou¡
++;

12708 if(
cou¡
 == 5)

12711 if(
cou¡
 > 0 && count < 6)

12712 
cou¡
++;

12714 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12718 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12720 if(
cuºít
->
b¨rõrRóched
 =2 && cuºít->
jobThdId
 !(
THREADS_PER_JOB
-1))

12721 
	`∑nic
("End of barrierÑeached with wrong id");

12723 
cuºít
->
b¨rõrRóched
 = 0;

12727 i‡(
cou¡
 == 5)

12729 
cou¡
++;

12730 
ãmpPC
[
cuºít
->
ma°îid
] = cuºít->
ªgs
.
ªgs_PC
;

12734 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12736 i‡(
cuºít
->
jobThdId
 =(
THREADS_PER_JOB
-1))

12743 
	`¥ötf
("Job %d synchr⁄ized\n", 
¥Id
);

12744 
	`fÊush
(
°dout
);

	@sim-outorder.c

113 
	~"hódîs.h
"

115 
	~"maö.h
"

116 
	~"sim-out‹dî.h
"

117 
	~"ö°M™ù.h
"

122 
cou¡î_t
 
	gTŸÆB¨rõrs
 = 0;

123 
cou¡î_t
 
	gTŸÆLocks
 = 0;

124 
cou¡î_t
 
	gpuª_num_ö¢
 = 0;

125 
cou¡î_t
 
	gtŸÆ_num_ö¢
 = 0;

126 
cou¡î_t
 
	gª«me_ac˚ss
 = 0;

127 
cou¡î_t
 
	giqøm_ac˚ss
 = 0;

128 
cou¡î_t
 
	gfqøm_ac˚ss
 = 0;

129 
cou¡î_t
 
	grob1_ac˚ss
 = 0;

130 
cou¡î_t
 
	grob2_ac˚ss
 = 0;

131 
cou¡î_t
 
	gb¥ed_ac˚ss
 = 0;

132 
cou¡î_t
 
	giwakeup_ac˚ss
 = 0;

133 
cou¡î_t
 
	gfwakeup_ac˚ss
 = 0;

134 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss
 = 0;

135 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss
 = 0;

136 
cou¡î_t
 
	gúegfûe_ac˚ss
 = 0;

137 
cou¡î_t
 
	g‰egfûe_ac˚ss
 = 0;

139 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

140 
cou¡î_t
 
	giˇche_ac˚ss
 = 0;

141 
cou¡î_t
 
	gdˇche_ac˚ss
 = 0;

142 
cou¡î_t
 
	gdˇche2_ac˚ss
 = 0;

143 
cou¡î_t
 
	giˇche2_ac˚ss
 = 0;

145 
cou¡î_t
 
	gülu1_ac˚ss
 = 0;

146 
cou¡î_t
 
	gülu2_ac˚ss
 = 0;

147 
cou¡î_t
 
	gÁlu1_ac˚ss
 = 0;

148 
cou¡î_t
 
	gÁlu2_ac˚ss
 = 0;

149 
cou¡î_t
 
	gúesu…bus_ac˚ss
 = 0;

150 
cou¡î_t
 
	g‰esu…bus_ac˚ss
 = 0;

151 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

152 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

158 
	gpcb_blk_cou¡
 = 0;

160 
	gÊ_cou¡
;

161 
	gÊ_cou¡
 = 0;

163 
cou¡î_t
 
	g¶ìpCou¡
[
MAXTHREADS
];

167 
cou¡î_t
 
	gdu∂iˇti⁄_ac˚ss
, 
	gDUPLICATION_ac˚ss
[
CLUSTERS
], 
	gdu∂iˇti⁄_tŸÆ
 = 0;

168 
cou¡î_t
 
	gcom∑ª_ac˚ss
, 
	gCOMPARE_ac˚ss
[
CLUSTERS
], 
	gcom∑ª_tŸÆ
 = 0;

172 
cou¡î_t
 
¥edi˘_commô
 (
RUU_°©i⁄
 *
rs
);

175 
	gb¥ed_btb_u£_ma°îid
 = 0;

176 
ûök_run
;

177 
em3d_run
;

179 #ifde‡
POPNET


180 
maöP›√t
(
¨øy_size
);

181 
p›√tMsgCom∂ëe
(
w
, 
x
, 
y
, 
z
, 
°Time
, 
msgNo
);

182 
p›√tBuf„rS∑˚
(
s1
, 
s2
, 
›t
);

183 
p›√t_›ti⁄s
(
›t_odb_t
 *
odb
);

185 
cou¡î_t
 
p›√tMsgNo
;

186 
	gmshr_≥ndög_evít
[
MAXTHREADS
];

188 
cou¡î_t
 
	gßme_L1_L2_fifo_fuŒ
;

189 
cou¡î_t
 
	gL1_mshr_fuŒ
;

190 
cou¡î_t
 
	gœ°_L1_mshr_fuŒ
[
MAXTHREADS
];

191 
cou¡î_t
 
	gL2_mshr_fuŒ
;

192 
cou¡î_t
 
	gœ°_L2_mshr_fuŒ
;

193 
cou¡î_t
 
	gL2_mshr_fuŒ_¥e„tch
;

194 
cou¡î_t
 
	gL1_fifo_fuŒ
;

195 
cou¡î_t
 
	gœ°_L1_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

196 
cou¡î_t
 
	gDú_fifo_fuŒ
;

197 
cou¡î_t
 
	gœ°_Dú_fifo_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

198 
cou¡î_t
 
	gI≈ut_queue_fuŒ
;

199 
cou¡î_t
 
	gœ°_I≈ut_queue_fuŒ
[
MAXTHREADS
+
MESH_SIZE
*2];

200 
cou¡î_t
 
	gOuçut_queue_fuŒ
;

201 
cou¡î_t
 
	glock_fifo_fuŒ
;

202 
cou¡î_t
 
	glock_fifo_wr⁄g
;

203 
cou¡î_t
 
	glock_fifo_wrôeback
;

204 
cou¡î_t
 
	glock_fifo_bíefô
;

205 
cou¡î_t
 
	glock_ˇche_hô
;

206 
cou¡î_t
 
	glock_ˇche_miss
;

208 
cou¡î_t
 
	gSèŒ_L1_mshr
;

209 
cou¡î_t
 
	gSèŒ_L2_mshr
;

210 
cou¡î_t
 
	gSèŒ_L1_fifo
;

211 
cou¡î_t
 
	gSèŒ_dú_fifo
;

212 
cou¡î_t
 
	gSèŒ_öput_queue
;

213 
cou¡î_t
 
	gSèŒ_ouçut_queue
;

215 
cou¡î_t
 
	gWM_Miss
;

216 
cou¡î_t
 
	gWM_CÀ™
;

217 
cou¡î_t
 
	gWM_S
;

218 
cou¡î_t
 
	gWM_EM
;

219 
cou¡î_t
 
	gwrôe_sh¨ed_u£d_c⁄f
;

221 
cou¡î_t
 
	gSyncIn°CacheAc˚ss
;

222 
cou¡î_t
 
	gTe°CacheAc˚ss
;

223 
cou¡î_t
 
	gTe°SecCacheAc˚ss
;

224 
cou¡î_t
 
	gSëCacheAc˚ss
;

225 
cou¡î_t
 
	gSyncLﬂdRódMiss
;

226 
cou¡î_t
 
	gSyncLﬂdLRódMiss
;

227 
cou¡î_t
 
	gSyncLﬂdHô
;

228 
cou¡î_t
 
	gSyncLﬂdLHô
;

229 
cou¡î_t
 
	gSyncSt‹eCHô
;

230 
cou¡î_t
 
	gSyncSt‹eCWrôeMiss
;

231 
cou¡î_t
 
	gSyncSt‹eCWrôeUpgøde
;

232 
cou¡î_t
 
	gSyncSt‹eHô
;

233 
cou¡î_t
 
	gSyncSt‹eWrôeMiss
;

234 
cou¡î_t
 
	gSyncSt‹eWrôeUpgøde
;

235 
cou¡î_t
 
	gB¨St‹eWrôeMiss
;

236 
cou¡î_t
 
	gB¨St‹eWrôeUpgøde
;

237 
cou¡î_t
 
	gSync_L2_miss
;

240 
cou¡î_t
 
«ck_cou¡î
, 
L1_Êù_cou¡î
, 
Êù_cou¡î
, 
e_to_m
;

241 
cou¡î_t
 
n‹mÆ_«cks
, 
wrôe_«cks
, 
¥e„tch_«cks
, 
sync_«cks
;

242 
cou¡î_t
 
°‹e_c⁄dôi⁄Æ_Áûed
;

243 
cou¡î_t
 
	gtŸÆMeshH›Cou¡
, 
	gtŸÆMeshH›Dñay
, 
	gtŸÆEvítCou¡
, 
	gtŸÆEvítPro˚ssTime
;

244 
cou¡î_t
 
	gtŸÆMeshN‹H›Cou¡
, 
	gtŸÆMeshN‹H›Dñay
, 
	gtŸÆMeshSyncH›Cou¡
, 
	gtŸÆMeshSyncH›Dñay
;

245 
cou¡î_t
 
	gtŸÆO±H›Cou¡
, 
	gtŸÆO±H›Dñay
, 
	gtŸÆO±N‹H›Cou¡
, 
	gtŸÆO±N‹H›Dñay
, 
	gtŸÆO±SyncH›Cou¡
, 
	gtŸÆO±SyncH›Dñay
;

246 
cou¡î_t
 
	glﬂd_lök_sh¨ed
, 
	glﬂd_lök_ex˛usive
;

247 
tick_t
 
tŸÆmissh™dÀtime
;

248 
cou¡î_t
 
L1_¥e„tch_u£fuŒ
;

249 
cou¡î_t
 
L1_¥e„tch_wrôó·î
;

252 
cou¡î_t
 
	gª∂a˚_hi°‹y_dïth
;

253 
cou¡î_t
 
	gcohîí˚_hi°‹y_dïth
;

254 
cou¡î_t
 
	g¥e„tch_ª∂a˚_hi°‹y_dïth
;

256 
cou¡î_t
 
tŸÆ_L2_MEM_L2Pª„tch_Req
;

257 
cou¡î_t
 
tŸÆ_L2_MEM_D©a_Miss_Req
;

258 
cou¡î_t
 
tŸÆ_L2_MEM_In°_Miss_Req
;

259 
cou¡î_t
 
tŸÆ_MEM_L2_D©a_Paylﬂd
;

260 
cou¡î_t
 
tŸÆ_MEM_L2_In°_Paylﬂd
;

261 
cou¡î_t
 
tŸÆ_L2_MEM_D©a_Paylﬂd
;

262 
cou¡î_t
 
tŸÆ_L1_L2_In°_Miss_Req
;

263 
cou¡î_t
 
tŸÆ_L2_L1_In°_Paylﬂd
;

264 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Ród_Miss_Req
;

265 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Ród_Miss_Paylﬂd
;

266 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Ród_InvÆid
;

267 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Ród_InvÆid_Ack
;

268 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Ród_InvÆid_Paylﬂd
;

269 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Wrôe_Miss_Req
;

270 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Wrôe_Miss_Paylﬂd
;

271 
cou¡î_t
 
tŸÆ_L2_L1_D©a_L2ª∂a˚d_InvÆid
;

272 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Wrôe_InvÆid
;

273 
cou¡î_t
 
tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Ack
;

274 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Ack
;

275 
cou¡î_t
 
tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Paylﬂd
;

276 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Paylﬂd
;

277 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Wrôe_Upd©e
;

278 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Wrôe_Upd©e_Ack
;

279 
cou¡î_t
 
tŸÆ_L1_L2_D©a_Wrôeback_Paylﬂd
;

280 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Vîify_Ack
;

281 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Vîify_Pœylﬂd
;

282 
cou¡î_t
 
tŸÆ_L2_L1_D©a_Pª„tch_Pœylﬂd_PPP
;

283 
cou¡î_t
 
tŸÆ_L1_L2_Ród_Vîify_Req
;

284 
cou¡î_t
 
tŸÆ_L1_L2_Wrôe_Vîify_Req
;

285 
cou¡î_t
 
tŸÆ_L1_L2_shr_éb_miss_Req
;

286 
cou¡î_t
 
tŸÆ_L1_L2_shr_éb_wrôe_back_Req
;

287 
cou¡î_t
 
tŸÆ_L1_L2_shr_éb_§_ªcovîy_Req
;

288 
cou¡î_t
 
tŸÆ_L1_L2_shr_éb_upd©e_¥_ack_Req
;

289 
cou¡î_t
 
tŸÆ_L1_L2_shr_éb_upd©e_pw_ack_Req
;

290 
cou¡î_t
 
tŸÆ_L1_L2_shr_éb_ªcovîy_ack_Req
;

291 
cou¡î_t
 
tŸÆ_L1_L2_dú_éb_ªfûl_Req
;

292 
cou¡î_t
 
tŸÆ_L1_L2_dú_éb_upd©e_Req
;

293 
cou¡î_t
 
tŸÆ_L1_L2_dú_éb_ªcovîy_Req
;

294 
cou¡î_t
 
tŸÆ_L2_L1_dú_shr_ªad
;

295 
cou¡î_t
 
tŸÆ_L1_L2_ack_shr_ªad
;

296 
cou¡î_t
 
tŸÆ_L1_L2_öf‹m_back
;

297 
cou¡î_t
 
tŸÆ_TSHR_FuŒ
;

299 
cou¡î_t
 
	gL1_miss_èbÀ_size
;

300 
cou¡î_t
 
	gL1_°ªam_íåõs
;

301 
cou¡î_t
 
	gL2_miss_èbÀ_size
;

302 
cou¡î_t
 
	gL2_°ªam_íåõs
;

303 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_num
;

304 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_num
;

305 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_num
;

306 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_num
;

307 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_num
;

308 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_S_M_num
;

309 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_G_D_num
;

310 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_FPP_G_T_num
;

311 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_num
;

312 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_S_M_num
;

313 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_G_D_num
;

314 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_G_T_num
;

315 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_num
;

316 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_S_M_num
;

317 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_G_D_num
;

318 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_vîifiˇti⁄_G_T_num
;

319 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_num
;

320 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_S_M_num
;

321 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_G_D_num
;

322 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_fﬁlow_G_T_num
;

323 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_num
;

324 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_S_M_num
;

325 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_G_D_num
;

326 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_suc˚ed_G_T_num
;

327 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_num
;

328 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_S_M_num
;

329 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_G_D_num
;

330 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_PPP_Áû_G_T_num
;

331 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_miss_num
;

332 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_compuls‹y_miss_num
;

333 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_ˇ∑côy_miss_num
;

334 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_cohîí˚_miss_num
;

335 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_ªad_¥e„tch_ˇ∑côy_miss_num
;

336 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_num
;

337 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_FPP_num
;

338 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_num
;

339 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_FPP_num
;

340 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_num
;

341 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_S_M_num
;

342 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_G_D_num
;

343 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_PPP_G_T_num
;

344 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_miss_num
;

345 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_compuls‹y_miss_num
;

346 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_ˇ∑côy_miss_num
;

347 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_cohîí˚_miss_num
;

348 
cou¡î_t
 
Àvñ1_d©a_ˇche_ac˚ss_wrôe_¥e„tch_ˇ∑côy_miss_num
;

350 
cou¡î_t
 
ªad_L1_miss_L2_hô_num
;

351 
cou¡î_t
 
ªad_L1_miss_L2_hô_tŸÆ_time
;

352 
cou¡î_t
 
ªad_L2_miss_num
;

353 
cou¡î_t
 
ªad_L2_miss_tŸÆ_time
;

354 
cou¡î_t
 
wrôe_L1_miss_L2_hô_num
;

355 
cou¡î_t
 
wrôe_L1_miss_L2_hô_tŸÆ_time
;

356 
cou¡î_t
 
wrôe_L2_miss_num
;

357 
cou¡î_t
 
wrôe_L2_miss_tŸÆ_time
;

360 
cou¡î_t
 
tŸÆ_∑ge_num
;

361 
cou¡î_t
 
¥_∑ge_num
;

362 
cou¡î_t
 
pw_∑ge_num
;

363 
cou¡î_t
 
§_∑ge_num
;

364 
cou¡î_t
 
sw_∑ge_num
;

366 
cou¡î_t
 
tŸÆ_löe_num
;

367 
cou¡î_t
 
¥_löe_num
;

368 
cou¡î_t
 
pw_löe_num
;

369 
cou¡î_t
 
§_löe_num
;

370 
cou¡î_t
 
sw_löe_num
;

372 
cou¡î_t
 
	gSWP_tŸÆ_löe
;

373 
cou¡î_t
 
	gSWP_sw_löe
;

374 
cou¡î_t
 
	gSWP_§_löe
;

375 
cou¡î_t
 
	gSWP_pw_löe
;

376 
cou¡î_t
 
	gSWP_¥_löe
;

378 
cou¡î_t
 
ªˇŒ_num
;

379 
cou¡î_t
 
ªˇŒ_öv_num
;

381 
cou¡î_t
 
ªad_öv_S_num
;

382 
cou¡î_t
 
ªad_öv_QH_num
;

383 
cou¡î_t
 
ªad_öv_e_QM_num
;

384 
cou¡î_t
 
ªad_öv_d_QM_num
;

387 
cou¡î_t
 
wrôe_öv_d_S_num
;

388 
cou¡î_t
 
wrôe_öv_e_S_num
;

389 
cou¡î_t
 
wrôe_öv_s_S_num
;

390 
cou¡î_t
 
wrôe_öv_i_S_num
;

392 
cou¡î_t
 
wrôe_öv_d_QM_num
;

393 
cou¡î_t
 
wrôe_öv_e_QM_num
;

394 
cou¡î_t
 
wrôe_öv_s_QM_num
;

395 
cou¡î_t
 
wrôe_öv_i_QM_num
;

397 
cou¡î_t
 
wrôe_öv_d_QH_num
;

398 
cou¡î_t
 
wrôe_öv_e_QH_num
;

399 
cou¡î_t
 
wrôe_öv_s_QH_num
;

400 
cou¡î_t
 
wrôe_öv_i_QH_num
;

402 
cou¡î_t
 
ªˇŒ_öv_d_S_num
;

403 
cou¡î_t
 
ªˇŒ_öv_e_S_num
;

404 
cou¡î_t
 
ªˇŒ_öv_s_S_num
;

405 
cou¡î_t
 
ªˇŒ_öv_i_S_num
;

407 
cou¡î_t
 
ªˇŒ_öv_d_Q_num
;

408 
cou¡î_t
 
ªˇŒ_öv_e_Q_num
;

409 
cou¡î_t
 
ªˇŒ_öv_s_Q_num
;

410 
cou¡î_t
 
ªˇŒ_öv_i_Q_num
;

412 
cou¡î_t
 
SW_ªad_ªque°_num
;

413 
cou¡î_t
 
SW_wrôe_ªque°_num
;

415 
cou¡î_t
 
ªad_S_hô_num
;

416 
cou¡î_t
 
ªad_Q_hô_num
;

417 
cou¡î_t
 
ªad_Q_öô_num
;

418 
cou¡î_t
 
ªad_Q_öô_SR_num
;

419 
cou¡î_t
 
ªad_Q_öô_QR_num
;

421 
cou¡î_t
 
wrôe_S_hô_num
;

422 
cou¡î_t
 
wrôe_Q_hô_num
;

423 
cou¡î_t
 
wrôe_S_öô_ed_num
;

424 
cou¡î_t
 
wrôe_S_öô_ed_SR_num
;

425 
cou¡î_t
 
wrôe_S_öô_ed_QR_num
;

426 
cou¡î_t
 
wrôe_S_öô_s_num
;

427 
cou¡î_t
 
wrôe_S_öô_s_SR_num
;

428 
cou¡î_t
 
wrôe_S_öô_s_QR_num
;

429 
cou¡î_t
 
wrôe_Q_öô_num
;

430 
cou¡î_t
 
wrôe_Q_öô_SR_num
;

431 
cou¡î_t
 
wrôe_Q_öô_QR_num
;

433 
cou¡î_t
 
shr_d©a_ªq_öôül_num
;

434 
cou¡î_t
 
shr_d©a_ªq_tŸÆ_num
;

435 
cou¡î_t
 
shr_d©a_ªq_Áû_num
;

437 
cou¡î_t
 
öf‹m_back_num
;

438 
cou¡î_t
 
wrôe_back_num
;

439 
cou¡î_t
 
öf‹m_back_Q
;

440 
cou¡î_t
 
öf‹m_back_S
;

441 
cou¡î_t
 
wrôe_back_Q
;

442 
cou¡î_t
 
wrôe_back_S
;

443 
cou¡î_t
 
mb_∑ö_dñay_num
;

444 
cou¡î_t
 
mb_∑ö_p‹tu£_num
;

446 
cou¡î_t
 
ªad_Q_öô_QR_s_num
;

447 
cou¡î_t
 
ªad_Q_öô_QR_ed_num
;

448 
cou¡î_t
 
wrôe_S_öô_ed_QR_s_num
;

449 
cou¡î_t
 
wrôe_S_öô_ed_QR_ed_num
;

450 
cou¡î_t
 
wrôe_S_öô_s_QR_s_num
;

451 
cou¡î_t
 
wrôe_S_öô_s_QR_ed_num
;

452 
cou¡î_t
 
wrôe_Q_öô_QR_s_num
;

453 
cou¡î_t
 
wrôe_Q_öô_QR_ed_num
;

455 
cou¡î_t
 
ªˇŒ_öv_d_Q_s_num
;

456 
cou¡î_t
 
ªˇŒ_öv_d_Q_ed_num
;

457 
cou¡î_t
 
ªˇŒ_öv_e_Q_s_num
;

458 
cou¡î_t
 
ªˇŒ_öv_e_Q_ed_num
;

459 
cou¡î_t
 
ªˇŒ_öv_s_Q_s_num
;

460 
cou¡î_t
 
ªˇŒ_öv_s_Q_ed_num
;

461 
cou¡î_t
 
ªˇŒ_öv_i_Q_s_num
;

462 
cou¡î_t
 
ªˇŒ_öv_i_Q_ed_num
;

464 
cou¡î_t
 
ªˇŒ_öv_d_Q_s_ad_num
;

465 
cou¡î_t
 
ªˇŒ_öv_e_Q_s_ad_num
;

466 
cou¡î_t
 
ªˇŒ_öv_s_Q_ed_ad_num
;

468 
cou¡î_t
 
löe_ac˚ss_num
;

469 
cou¡î_t
 
SWP_löe_ac˚ss_num
;

470 
cou¡î_t
 
SWP_PR_löe_ac˚ss_num
;

471 
cou¡î_t
 
SWP_PW_löe_ac˚ss_num
;

472 
cou¡î_t
 
SWP_SR_löe_ac˚ss_num
;

473 
cou¡î_t
 
SWP_SW_löe_ac˚ss_num
;

475 
cou¡î_t
 
PVC_ve˘‹_di°r_ªc‹d_num
;

476 
cou¡î_t
 
PVC_ve˘‹_öc_di°r_ªc‹d_num
;

477 
cou¡î_t
 
PVC_ve˘‹_di°r
[
MAX_DIRECTORY_ASSOC
+1];

478 
cou¡î_t
 
PVC_ve˘‹_öc_di°r
[
MAX_DIRECTORY_ASSOC
+1];

480 
cou¡î_t
 
PVC_exch™ge_num
;

481 
cou¡î_t
 
PVC_Êù_num
;

482 
cou¡î_t
 
PVC_dowm_no_öv_num
;

483 
cou¡î_t
 
PVC_dowm_öv_num
;

484 
cou¡î_t
 
PVC_dowm_öv_shr_num
;

485 
cou¡î_t
 
PVC_up_no_add_num
;

486 
cou¡î_t
 
PVC_up_add_num
;

487 
cou¡î_t
 
PVC_up_add_shr_num
;

488 
cou¡î_t
 
PVC_exch_vec_shr_di°r
[
MAXTHREADS
+1];

489 
cou¡î_t
 
PVC_dowm_öv_shr_di°r
[
MAXTHREADS
+1];

490 
cou¡î_t
 
PVC_up_add_shr_di°r
[
MAXTHREADS
+1];

491 
cou¡î_t
 
PVC_öf‹m_Æl_shr_num
;

492 
cou¡î_t
 
PVC_rfs_Æl_shr_num
;

493 
cou¡î_t
 
PVC_ªad_Æl_shr_num
;

494 
cou¡î_t
 
PVC_wrôe_Æl_shr_num
;

495 
cou¡î_t
 
PVC_ªˇŒ_Æl_shr_num
;

496 
cou¡î_t
 
pvc_nv_c⁄Êi˘_num
;

498 
FILE
 *
	glöe_˛ass
;

499 
FILE
 *
	gve˘‹_di°r_fûe
;

500 
FILE
 *
	gve˘‹_öc_di°r_fûe
;

502 
tŸÆevítcou¡num
;

503 
cou¡î_t
 
tŸÆWrôeIndiˇã
;

504 
cou¡î_t
 
tŸÆ_ex˛usive_modifõd
;

505 
cou¡î_t
 
tŸÆ_ex˛usive_c⁄f
;

506 
cou¡î_t
 
tŸÆ_ex˛usive_¸oss
;

508 
cou¡î_t
 
tŸÆSyncEvít
;

509 
cou¡î_t
 
tŸÆN‹mÆEvít
;

510 
cou¡î_t
 
tŸÆSyncWrôeM
;

511 
cou¡î_t
 
tŸÆSyncRódM
;

512 
cou¡î_t
 
tŸÆSyncWrôeup
;

513 
cou¡î_t
 
tŸÆmis°imef‹N‹mÆ
;

514 
cou¡î_t
 
tŸÆmis°imef‹Sync
;

515 
cou¡î_t
 
tŸÆ_mem_œt
;

516 
cou¡î_t
 
tŸÆ_mem_ac˚ss
;

517 
cou¡î_t
 
tŸÆL2mis°ime
;

518 
cou¡î_t
 
tŸÆWr⁄gL2mis°ime
;

519 
cou¡î_t
 
TŸÆL2mis£s
;

520 
tŸÆ_L1_¥e„tch
;

521 
cou¡î_t
 
l2_¥e„tch_num
;

522 
cou¡î_t
 
wrôe_back_óæy
;

523 
tŸÆ_L1_fú°_¥e„tch
;

524 
tŸÆ_L1_£c_¥e„tch
;

525 
tŸÆªqcou¡num
;

526 
tŸÆmisscou¡num
;

527 
cou¡î_t
 
loˇl_ˇche_ac˚ss
, 
ªmŸe_ˇche_ac˚ss
, 
loˇldúe˘‹y
, 
ªmŸedúe˘‹y
;

528 
cou¡î_t
 
övﬁve_2_h›s
, 
övﬁve_2_h›_touch
, 
övﬁve_2_h›_wb
, 
övﬁve_2_h›s_wm
, 
övﬁve_4_h›s_wm
, 
övﬁve_2_h›s_upgøde
, 
övﬁve_4_h›s
, 
övﬁve_4_h›s_miss
, 
övﬁve_2_h›s_miss
, 
övﬁve_4_h›s_upgøde
;

529 
cou¡î_t
 
	gtŸÆS∂ôNo
, 
	gtŸÆS∂ôWM
;

530 
cou¡î_t
 
d©a_¥iv©e_wrôe
, 
d©a_¥iv©e_ªad
, 
d©a_sh¨ed_wrôe
, 
d©a_sh¨ed_ªad
;

531 
cou¡î_t
 
tŸÆ_Æl_˛o£
, 
tŸÆ_Æl_Æmo°˛o£
, 
tŸÆ_nŸ_Æl_˛o£
, 
tŸÆ_p_c_evíts
, 
tŸÆ_c⁄sumîs
, 
tŸÆ_∑ckës_ö_√ighb‹
, 
tŸÆ_∑ckës_©_c‹√rs
;

532 
cou¡î_t
 
tŸÆ_d©a_c⁄sumîs
, 
tŸÆ_d©a_˛o£
, 
tŸÆ_d©a_Ár
, 
tŸÆ_d©a_©_c‹√r
;

533 
cou¡î_t
 
sh¨î_num
[
MAXTHREADS
];

534 
avîage_öside_≥r˚¡
;

535 
avîage_outside_≥r˚¡
;

536 
avîage_outside_abs_≥r˚¡
;

537 
avîage_c‹√r_≥r˚¡
;

538 
	gmem_p‹t_œt
[16];

539 
cou¡î_t
 
	gp‹t_acc‹d
[16];

542 
	#PULL_BACK


	)

544 
	#WATER_NSQUARED
 0

	)

545 
	#LSQ_LATENCY
 4

	)

546 
	#DUP_NO
 2

	)

548 
	#BOUND_POS
(
N
Ë(()(
	`mö2
(
	`max2
(0, (N)), 2147483647)))

	)

549 
	#LSQSIZE
 1024

	)

550 
	#RUUSIZE
 1024

	)

553 
	#_rŸr
(
x
Ë(xË((xË& 1)?(((x)>>1)|0x80000000):((x)>>1)

	)

555 
quõs˚Såu˘
 
	gquõs˚AddrSåu˘
[
CLUSTERS
];

556 
md_addr_t
 
	gTempIn°r
 = 0x1A2B3C4D;

557 
	gac˚ss_mem
 = 0;

558 
	gac˚ss_mem_id
 = -1;

559 
	g°›≥d_num_thªads
 = 0;

560 
	gRódFromWB
 = 0;

561 
cou¡î_t
 
	gˇcheMiss
[
MAXTHREADS
], 
	ghôInOthîCache
[MAXTHREADS];

562 
cou¡î_t
 
	gm_sqPª„tchC¡
 = 0;

563 
	gexecuãMaxIn¢
;

564 
	gdl2A˘uÆlyAc˚s£d
, 
	gm¨kedLöeRïœ˚d
;

565 
	gquõn£Wakeup
[
MAXTHREADS
];

566 
	gsimIn¢
[
MAXTHREADS
];

567 
	gÊushImpSèts
 = 0;

570 
	gthªadF‹ked
[4], 
	gÆlF‹ked
, 
	g°‹eC⁄dFaû
, 
	gtimeToRëu∫
 = 0;

571 
cou¡î_t
 
	gSt‹eC⁄dôi⁄FaûNum
;

572 
	gcﬁÀ˘SètB¨rõr
, 
	gcﬁÀ˘SètSt›
[
MAXTHREADS
];

573 
	gªÆSimCy˛e
;

574 
	ga˘uÆPro˚ss
;

575 
	gdißbÀ_øy
 = 1;

576 
	gfu_busy
[
CLUSTERS
], 
	gwb_d⁄e
[CLUSTERS], 
	gissue_d⁄e
[CLUSTERS], 
	g„tch_d⁄e
[CLUSTERS], 
	gcommô_d⁄e
[CLUSTERS], 
	gdi•©ch_d⁄e
[CLUSTERS];

577 
cou¡î_t
 
	gbrRecovîy
[
CLUSTERS
], 
	gexåaIn¢
[CLUSTERS];

581 #i‡ 
deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

582 
	g°ÆlNoBusSlŸ
;

583 
busSlŸCou¡
;

584 
	gbusU£d
;

585 
cou¡î_t
 
	gbusOccu∑ncy
 = 0;

589 #ifde‡
PULL_BACK


590 
cou¡î_t
 
	gpuŒbackBubbÀ
[
MAXTHREADS
], 
	gpuŒbackWaôCy˛e
[MAXTHREADS], 
	gpuŒbackD⁄eThisCy˛e
[MAXTHREADS], 
	gpuŒbackHôPªd
[MAXTHREADS], 
	gdl1MissThisCy˛e
[MAXTHREADS], 
	gdl1HôThisCy˛e
[MAXTHREADS], 
	gpuŒbackCy˛eCou¡
[MAXTHREADS],

591 
	gpuŒbackCou¡
[
MAXTHREADS
];

592 
cou¡î_t
 
	g¥edHôHô
[
MAXTHREADS
], 
	g¥edHôMiss
[MAXTHREADS], 
	g¥edMissHô
[MAXTHREADS], 
	g¥edMissMiss
[MAXTHREADS];

595 #ifde‡ 
MSHR


596 
	gmshr_size
 = 0;

597 
	gmshr_fuŒ
 = 0;

598 
	gmshr_cou¡
;

600 #ifde‡ 
MSHR_DIST


601 
	gmshr_size_di°
[
MSHRSIZE
];

603 
	gmshr_fuŒ_cou¡
;

608 
	gm_shLQSize
;

609 
	gm_shSQSize
;

610 
cou¡î_t
 
	gm_tŸÆSèŒ
[
MAXTHREADS
];

611 
cou¡î_t
 
	gm_sqLQFuŒ
[
MAXTHREADS
];

612 
cou¡î_t
 
	gm_sqSQFuŒ
[
MAXTHREADS
];

613 
cou¡î_t
 
	gm_RUUFuŒ
[
MAXTHREADS
];

614 
cou¡î_t
 
	gm_ªgFuŒ
[
MAXTHREADS
];

615 
cou¡î_t
 
	gm_issueFuŒ
[
MAXTHREADS
];

616 
cou¡î_t
 
	gm_û1Miss
[
MAXTHREADS
];

617 
cou¡î_t
 
	gm_„tchEm±y
[
MAXTHREADS
];

618 
cou¡î_t
 
	gm_STLC
[
MAXTHREADS
];

619 
cou¡î_t
 
	gm_å≠
[
MAXTHREADS
];

620 
cou¡î_t
 
	gm_LﬂdSèŒMiss
[
MAXTHREADS
];

621 
cou¡î_t
 
	gm_St‹eSèŒMiss
[
MAXTHREADS
];

622 
cou¡î_t
 
	gm_LﬂdSèŒHô
[
MAXTHREADS
];

623 
cou¡î_t
 
	gm_St‹eSèŒHô
[
MAXTHREADS
];

624 
cou¡î_t
 
	gm_LﬂdRólMiss
[
MAXTHREADS
];

625 
cou¡î_t
 
	gm_St‹eRólMiss
[
MAXTHREADS
];

626 
cou¡î_t
 
	gm_LﬂdRólHô
[
MAXTHREADS
];

627 
cou¡î_t
 
	gm_St‹eRólHô
[
MAXTHREADS
];

628 
cou¡î_t
 
	gm_LﬂdMiss
[
MAXTHREADS
];

629 
cou¡î_t
 
	gm_St‹eMiss
[
MAXTHREADS
];

630 
cou¡î_t
 
	gm_St‹eUpd©eMiss
[
MAXTHREADS
];

631 
cou¡î_t
 
	gm_upd©e_miss_dïíd_°¨t
[
MAXTHREADS
];

632 
cou¡î_t
 
	gm_upd©e_miss_Êag
[
MAXTHREADS
];

633 
cou¡î_t
 
	gUpd©eDïídCy˛e
;

634 vﬁ©ûê
	g¥e„tch_Êag
 = 1;

635 
cou¡î_t
 
m_upd©e_miss
[
MAXTHREADS
];

636 
lock_waôög
[
MAXTHREADS
];

637 
b¨rõr_waôög
[
MAXTHREADS
];

639 
cou¡î_t
 
	gm_commôSèŒ
[
MAXTHREADS
];

641 
cou¡î_t
 
	gövÆid©i⁄_ª∂ay
[
MAXTHREADS
];

642 
cou¡î_t
 
	glﬂdLﬂdRïœyCou¡
[
MAXTHREADS
];

643 
	gövÆid©i⁄SèŒ
[
MAXTHREADS
], 
	gövÆid©eOthîCache
;

644 
	gcommôSèŒ
[
MAXTHREADS
];

646 
checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
);

647 
cou¡î_t
 
	glﬂdReje˘Rïœy
[
MAXTHREADS
], 
	glﬂdReje˘Cou¡
[MAXTHREADS], 
	glﬂdReje˘Sèt
[MAXTHREADS], 
	gm_sqNumLdRïœy
[MAXTHREADS], 
	gª∂ayIndex
[MAXTHREADS];

648 
	gªje˘RëryCy˛e
 = 3;

649 
cou¡î_t
 
	gldIssueCou¡
, 
	gld°Reje˘i⁄Cou¡
[
MAXTHREADS
];

651 
	g£qC⁄sRïœy
[
MAXTHREADS
], 
	g£qC⁄sIn¢Rïœy
[MAXTHREADS];

652 
cou¡î_t
 
	gtŸÆRUUsize
[
MAXTHREADS
], 
	gtŸÆLQsize
[MAXTHREADS], 
	gtŸÆSQsize
[MAXTHREADS];

653 
	gavgRUUsize
[
MAXTHREADS
], 
	gavgLQsize
[MAXTHREADS], 
	gavgSQsize
[MAXTHREADS];

655 
mè_maxthªads
;

656 
numThªads
[
MAXTHREADS
];

657 
	gcﬁÀ˘_°©s
 = 0;

658 
	gCOHERENT_CACHE
;

659 
	gMSI
;

660 
	g•ec_bíchm¨ks
;

661 
cou¡î_t
 
num_of_övÆid©i⁄s
;

663 
	gcﬁÀ˘_b¨rõr_°©s
[
CLUSTERS
];

664 
	gcﬁÀ˘_b¨rõr_ªÀa£
;

666 
	gcﬁÀ˘_lock_°©s
[
CLUSTERS
];

667 
md_addr_t
 
	gLockInôPC
;

668 
md_addr_t
 
	gœ°_pc
;

669 
md_addr_t
 
	gœ°_œ°_pc
;

670 
	g‰ìzeCou¡î
;

671 
	g°›sim
;

672 
	gÁ°fwd
;

674 
	g°‹e_c⁄dôi⁄Æ_waôög
[
MAXTHREADS
];

676 
	goc_‹_cc_ac˚ss
 = 2;

679 
	gBRANCH_Q_NUM
;

680 
	gCHECKER_NUMBER
 = 0;

681 
	gPCB_BLK_SIZE
 = 128;

682 
	gINORDER_CHECKER
 = 0;

683 
	gOUTSTANDING_STORE_NUM
 = 128;

684 
	gcheckîVDD
, 
	gcheckîFªq
;

687 
gë_‰ì_ªg
 (, );

688 
commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
);

689 
com∂ëeWrôe
 ();

690 
öôP¨ÆÀlSimuœti⁄
 ();

691 
com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
);

692 
com∂ëeSt‹e_l
 (
thªadid
, 
md_addr_t
 
addr
, 
width
);

694 
md_Áu…_ty≥
 
WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
);

697 
£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
);

698 
fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
);

702 
li°ñt
 *
	gi‰ìli°_hód
[
MAXTHREADS
], *
	gi‰ìli°_èû
[MAXTHREADS];

703 
li°ñt
 *
	gf‰ìli°_hód
[
MAXTHREADS
], *
	gf‰ìli°_èû
[MAXTHREADS];

719 
	ghŸ•Ÿ_cy˛e_ßm∂ög_ötvl
;

722 
	gmax_ö°s
;

723 
	gmax_b¨rõr
;

726 
	g±ø˚_√…
 = 0;

727 *
	g±ø˚_›ts
[2];

730 
	gruu_ifq_size
;

733 
	gruu_bønch_≥«…y
;

738 
	g„tch_•ìd
;

742 *
	g¥ed_ty≥
;

748 *
	g¥ed_ty≥2
;

752 c⁄° 
	gcomböed2
 = 
FALSE
;

756 c⁄° 
	ghi°_imm
 = 
FALSE
;

764 
	gbimod_√…
 = 1;

765 
	gbimod_c⁄fig
[1] = { 2048 };

768 
	gtwﬁev_√…
 = 4;

769 
	gtwﬁev_c⁄fig
[4] = { 1, 1024, 8, 
FALSE
 };

772 
	gcomb_√…
 = 1;

773 
	gcomb_c⁄fig
[1] = { 1024 };

776 
	gtwobcgskew_√…
 = 6;

777 
	gtwobcgskew_c⁄fig
[6] = { 32768, 32768, 0, 22,

784 
	gtwobcgskew_√…2
 = 6;

785 
	gtwobcgskew_c⁄fig2
[6] = { 4096, 4096, 0, 12,

791 
	gøs_size
 = 8;

794 
	gbtb_√…
 = 2;

795 
	gbtb_c⁄fig
[2] = { 512, 4 };

798 
	gruu_decode_width
;

799 
	gruu_issue_width
;

803 
	gruu_ö‹dî_issue
;

804 
	gLSQ_NUM_MORE_THAN_TWO
;

807 
	gruu_ö˛ude_•ec
 = 
TRUE
;

811 
	gruu_commô_width
;

814 
	gRUU_size
 = 
RUUSIZE
;

817 
	gLSQ_size
 = 
LSQSIZE
;

819 
	gLSQ_size_˛u°î
;

823 *
	gˇche_dl1_›t
;

826 
	gˇche_dl1_œt
;

829 *
	gˇche_ml2_›t
;

830 *
	gˇche_dl2_›t
;

833 
	gˇche_ml2_œt
;

834 
	gˇche_dl2_œt
;

836 
	gmesh_size
;

839 
	géb_c_c
;

840 
	gmu…i_blk_£t_shi·
;

841 
	gmu…i_blk_ad≠_í
;

842 
	gmu…i_blk_ad≠_öf‹m_í
;

843 
	gmb_∑ö_í
;

844 
	gshr_ªad_í
;

845 
	gtŸÆ_öf‹m_back_í
;

846 
	gª∂_ad_í
;

847 
	gªˇŒ_ad_í
;

848 
	gve˘‹_num
;

849 
	gsh¨î_thªshﬁd
;

850 
	gnv_brﬂdˇ°
;

852 
	gL2_¥e„tch_En
;

853 
	gL1_¥e„tch_En
;

855 
	gSTREAM_mö_En
;

858 
	gSTREAM_L2_di°™˚
;

859 
	gSTREAM_mö_di°™˚
;

862 *
	gˇche_û1_›t
;

865 
	gˇche_û1_œt
;

868 *
	gˇche_û2_›t
;

871 
	gˇche_û2_œt
;

874 
	gÊush_⁄_sysˇŒs
;

877 
	gcom¥ess_iˇche_addrs
;

880 
	gmem_√…
 = 2;

881 
	gmem_œt
[2] = { 18, 2 };

884 
	gmem_bus_width
;

885 
	gmem_bus_•ìd
;

886 
	gmem_p‹t_num
;

889 *
	gôlb_›t
;

892 *
	gdéb_›t
;

895 
	géb_miss_œt
;

898 
	g√tw‹k_ª˚ivî
;

899 
	g√tw‹k_c⁄Êi˘
;

902 
	gªs_ülu
 = 0;

905 
	gªs_imu…
 = 0;

907 #ifde‡
PORT_PER_BANK


909 
	gªs_memb™k
 = 0;

912 
	gªs_mem_p‹t_b™k
 = 0;

914 
	gªs_memb™k_˛u°î
;

919 
	gªs_memp‹t
 = 0;

922 
	gªs_ÂÆu
 = 0;

925 
	gªs_Âmu…
 = 0;

928 
	gªs_ülu_˛u°î
 = 0;

929 
	gªs_imu…_˛u°î
 = 0;

930 
	gªs_ÂÆu_˛u°î
 = 0;

931 
	gªs_Âmu…_˛u°î
 = 0;

934 
	gd©a_width
 = 64;

937 
powî_ªsu…_ty≥
 
powî
;

941 
	ga˘ivec⁄ãxts
;

943 
	gthªad_„tch
 = 
THREADFETCHLIMIT
;

944 
	gö°_thªad_„tch
 = 
FETCHLIMIT
;

945 
	gthªad_commô
 = 0;

947 
	#ICACHEBANKS
 8

	)

949 
	gib™k
 = 0;

952 
	g¥i‹ôy¶Ÿ
 = 0;

953 
	g¥i‹ôy
[
MAXTHREADS
];

956 
	gkey
[
MAXTHREADS
];

959 #ifde‡ 
PWR_CLUSTER


960 
cou¡î_t
 
	giqøm_ac˚ss_˛
[
CLUSTERS
];

961 
cou¡î_t
 
	gfqøm_ac˚ss_˛
[
CLUSTERS
];

962 
cou¡î_t
 
	giwakeup_ac˚ss_˛
[
CLUSTERS
];

963 
cou¡î_t
 
	gfwakeup_ac˚ss_˛
[
CLUSTERS
];

964 
cou¡î_t
 
	gi£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

965 
cou¡î_t
 
	gf£À˘i⁄_ac˚ss_˛
[
CLUSTERS
];

966 
cou¡î_t
 
	gúegfûe_ac˚ss_˛
[
CLUSTERS
];

967 
cou¡î_t
 
	g‰egfûe_ac˚ss_˛
[
CLUSTERS
];

968 
cou¡î_t
 
	gülu1_ac˚ss_˛
[
CLUSTERS
];

969 
cou¡î_t
 
	gülu2_ac˚ss_˛
[
CLUSTERS
];

970 
cou¡î_t
 
	gÁlu1_ac˚ss_˛
[
CLUSTERS
];

971 
cou¡î_t
 
	gÁlu2_ac˚ss_˛
[
CLUSTERS
];

972 
cou¡î_t
 
	gúesu…bus_ac˚ss_˛
[
CLUSTERS
];

973 
cou¡î_t
 
	g‰esu…bus_ac˚ss_˛
[
CLUSTERS
];

976 
cou¡î_t
 
	glsq_°‹e_d©a_ac˚ss
 = 0;

978 #ifde‡
DE_CENTRALIZED_POWER_BUG


979 
cou¡î_t
 
	glsq_¥eg_ac˚ss_˛
[
LSQ_PARTS
];

980 
cou¡î_t
 
	glsq_wakeup_ac˚ss_˛
[
LSQ_PARTS
];

981 
cou¡î_t
 
	glsq_ac˚ss_˛
[
LSQ_PARTS
];

982 
	gexåa_lsq
 = 0;

983 
	gexåa_lsq_cou¡
 = 0;

984 
	gdi•_°‹e_°Æl
 = 0;

986 
cou¡î_t
 
	glsq_ac˚ss
 = 0;

987 
cou¡î_t
 
	glsq_¥eg_ac˚ss
 = 0;

988 
cou¡î_t
 
	glsq_wakeup_ac˚ss
 = 0;

991 #ifde‡
RES1_FULL_MASK


992 
	giq_˛_fuŒ_mask
;

993 
	gfq_˛_fuŒ_mask
;

994 
	gúeg_˛_fuŒ_mask
;

995 
	g‰eg_˛_fuŒ_mask
;

996 
	gªs1_˛_thrd_mask
[
MAXTHREADS
];

999 
cou¡î_t
 
	glsq_tŸÆ_p›_cou¡_cy˛e
 = 0;

1000 
cou¡î_t
 
	glsq_num_p›_cou¡_cy˛e
 = 0;

1001 
cou¡î_t
 
	gúegfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

1002 
cou¡î_t
 
	gúegfûe_num_p›_cou¡_cy˛e
 = 0;

1003 
cou¡î_t
 
	g‰egfûe_tŸÆ_p›_cou¡_cy˛e
 = 0;

1004 
cou¡î_t
 
	g‰egfûe_num_p›_cou¡_cy˛e
 = 0;

1005 
cou¡î_t
 
	gúesu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

1006 
cou¡î_t
 
	gúesu…bus_num_p›_cou¡_cy˛e
 = 0;

1007 
cou¡î_t
 
	g‰esu…bus_tŸÆ_p›_cou¡_cy˛e
 = 0;

1008 
cou¡î_t
 
	g‰esu…bus_num_p›_cou¡_cy˛e
 = 0;

1010 #ifde‡
PROCESS_MODEL


1011 
	gLa°Sh¨edAddªss
;

1012 
	gLa°Sh¨edSize
;

1017 
	#MAX_PCSTAT_VARS
 8

	)

1018 
	gpc°©_√…
 = 0;

1019 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

1022 #ifde‡
TARGET_PISA


1023 
	#IACOMPRESS
(
A
Ë\

	)

1024 (
	gcom¥ess_iˇche_addrs
 ? ((((
	gA
Ë- 
	gcuºít
->
	gld_ãxt_ba£
Ë>> 1Ë+ cuºít->ld_ãxt_ba£Ë: (
A
))

1025 
	#ISCOMPRESS
(
SZ
Ë\

	)

1026 (
com¥ess_iˇche_addrs
 ? ((
SZ
) >> 1) : (SZ))

1028 
	#IACOMPRESS
(
A
Ë(A)

	)

1029 
	#ISCOMPRESS
(
SZ
Ë(SZ)

	)

1032 
bugcom∑t_mode
;

1039 
	#FU_IALU_INDEX
 0

	)

1040 
	#FU_IMULT_INDEX
 1

	)

1041 
	#FU_MEMPORT_INDEX
 2

	)

1042 
	#FU_FPALU_INDEX
 3

	)

1043 
	#FU_FPMULT_INDEX
 4

	)

1046 
ªs_desc
 
	gfu_c⁄fig
[] = {

1054 {
I¡ALU
, 1, 1}

1064 #i‡
deföed
(
MULT_DOES_ADD
)

1065 {
I¡ALU
, 1, 1},

1067 {
I¡MULT
, 3, 1},

1068 {
I¡DIV
, 20, 19}

1078 {
RdP‹t
, 2, 1},

1079 {
WrP‹t
, 2, 1}

1089 {
FlﬂtADD
, 2, 1},

1090 {
FlﬂtCMP
, 2, 1},

1091 {
FlﬂtCVT
, 2, 1}

1101 {
FlﬂtMULT
, 4, 1},

1102 {
FlﬂtDIV
, 12, 12},

1103 {
FlﬂtSQRT
, 24, 24}

1111 
	#PRED_BR_CHANGES
 0

	)

1112 
	#PRED_JR_CHANGES
 0

	)

1113 
	#DYNAMIC_CHANGE
 0

	)

1114 
	#METRIC_CHANGE
 0

	)

1115 
	#LINEAR_PHASE
 0

	)

1117 #ifde‡
ALLOW_ANY_CLUSTER


1118 
	#SMALLEST_CONFIG
 
CLUSTERS


	)

1120 
	#SMALLEST_CONFIG
 4

	)

1122 
	ga˘uÆ_˛u°îs
 = 
CLUSTERS
;

1127 #ifde‡
PORT_PER_BANK


1128 
	gCACHEPORTS
;

1129 
	gRES_CACHEPORTS
;

1130 
RES_CACHE_PORTS
;

1131 
	ga˘uÆ_ˇchï‹ts
;

1133 
	ga˘uÆ_ˇchï‹ts
;

1136 #ifde‡ 
CENTRALIZED_STEER


1137 
	gdi•©ch_˛u°î
 = 0;

1139 #ifde‡
DISPATCH_CLUSTER


1140 
	gdi•©ch_˛
[
CLUSTERS
];

1145 #ifde‡
N_WAY_STEER


1146 #i‚de‡
FIXED_N_WAY


1148 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

1152 
	gNEIGHBOR_SEEK_N_WAY
 = 
CLUSTERS
 / 2;

1154 
	g°ìr_˛u°î_thrd
[
MAXTHREADS
][
CLUSTERS
];

1155 
	gabs_°ìr
 = 0;

1156 
°ìr_öô
 ();

1158 #ifde‡ 
CLUSTER_PRIORITY


1159 
	g¥i‹ôy_˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

1161 #ifde‡ 
THRD_PROFILE


1162 #ifde‡
mix_8_f


1163 
	gn_limô_thrd
[] = { 8, 8, 8, 8, 8, 4, 2, 2 };

1165 #ifde‡
mix_8_i


1166 
	gn_limô_thrd
[] = { 8, 8, 8, 2, 4, 2, 2, 4 };

1168 #ifde‡
mix_8_if


1169 
	gn_limô_thrd
[] = { 2, 2, 2, 4, 8, 8, 8, 8 };

1171 #ifde‡
mix_8_m


1172 
	gn_limô_thrd
[] = { 2, 2, 2, 2, 8, 8, 8, 8 };

1174 #ifde‡
mix_4_i


1175 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

1177 #ifde‡
mix_4_f


1178 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

1180 #ifde‡
mix1_4_m


1181 
	gn_limô_thrd
[] = { 8, 8, 2, 2 };

1183 #ifde‡
mix2_4_m


1184 
	gn_limô_thrd
[] = { 2, 2, 8, 8 };

1187 
	gn_limô_thrd
[
MAXTHREADS
];

1189 #ifde‡ 
CMC_START_N_WAY


1190 
	gn_°¨t_cmc
[
MAXTHREADS
];

1191 
	gn_°¨t_thrd_cmc
[
MAXTHREADS
];

1193 
	gn_°¨t_thrd
[
MAXTHREADS
];

1194 
	g√ighb‹_limô_thrd
[
MAXTHREADS
];

1196 #ifde‡ 
N_WAY_ADAPT


1197 
	gcﬁd_°¨t
 = 1;

1198 
	gùc_ﬁd
[
MAXTHREADS
];

1199 
	gn_limô_thrd_ﬁd
[
MAXTHREADS
];

1200 
	gsim_num_ö¢_ﬁd
[
MAXTHREADS
];

1201 
upd©e_n_limô
 ();

1203 #ifde‡
THRD_PRIO_ADAPT


1204 
¥i‹ôy_n_way
 ();

1206 #ifde‡
ADAPT_LIMIT


1207 
	gad≠t_limô_thrd
[
MAXTHREADS
];

1210 #ifde‡
PDG_THRD_ADAPT


1211 
pdg_thrd_n_way
 ();

1213 #ifde‡
PDG_THRD_PRIO_ADAPT


1214 
pdg_¥i‹ôy_n_way
 ();

1216 #ifde‡
COMM_OPER_LIMIT


1217 #ifde‡
AVG_LIMIT


1218 
	gavg_high_limô
 = 
CLUSTERS
;

1219 
	gavg_high_limô_cou¡
 = 0;

1221 
	ghigh_limô_thrd
[
MAXTHREADS
];

1222 
	ghigh_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

1223 
	ghigh_limô_di°
[
CLUSTERS
 + 1];

1226 #ifde‡
PDG_ADAPT


1227 
pdg_n_way
 ();

1229 
	gn_limô_thrd_di°
[
MAXTHREADS
][
CLUSTERS
 + 1];

1230 
	gn_limô_di°
[
CLUSTERS
 + 1];

1233 #ifde‡ 
CLUSTER_PRIORITY


1235 
	g¥i‹ôy_˛
[
CLUSTERS
];

1238 #ifde‡ 
PRIORITY_STEER


1240 
	g¥i‹ôy_˛
[
CLUSTERS
];

1242 #ifde‡ 
COMMUNICATION_STEER


1243 #ifde‡
OPER_COMM_RATIO


1244 
	g˛_thrd
[
MAXTHREADS
][
CLUSTERS
];

1245 
	g˛_num
[
MAXTHREADS
];

1249 #ifde‡ 
THRD_WAY_CACHE


1250 
	gn_ˇche_°¨t_thrd
[
MAXTHREADS
];

1251 
	gn_ˇche_limô_thrd
[
MAXTHREADS
];

1253 #ifde‡
N_WAY_CACHE_ADAPT


1254 #ifde‡
PER_THREAD


1255 
	govîÆl_n_ˇche_limô
;

1256 
	g°¨t_up
;

1257 
	gˇche_dl1_mis£s_ﬁd
[
MAXTHREADS
];

1258 
	gˇche_dl1_hôs_ﬁd
[
MAXTHREADS
];

1259 
	gˇche_dl1_miss_øã_ﬁd
[
MAXTHREADS
];

1260 
	gn_ˇche_limô_ﬁd
[
MAXTHREADS
];

1261 
	gn_ˇche_limô_di°
[
MAXTHREADS
][32];

1262 
	gn_ˇche_limô_cou¡
;

1264 #ifde‡ 
MEM_REF_PER


1265 
	gˇche_miss_°abÀ_thrd
[
MAXTHREADS
];

1268 
	govîÆl_n_ˇche_limô
;

1269 
	g°¨t_up
 = 1;

1270 
	gˇche_dl1_mis£s_ﬁd
;

1271 
	gˇche_dl1_hôs_ﬁd
;

1272 
	gˇche_dl1_miss_øã_ﬁd
;

1273 
	gn_ˇche_limô_ﬁd
;

1274 
	gn_ˇche_limô_di°
[32];

1275 
	gn_ˇche_limô_cou¡
;

1277 #ifde‡ 
MEM_REF


1278 
	gˇche_miss_°abÀ
;

1284 #ifde‡ 
MEM_REF_STAT


1285 
	gmem_ªf_thrd
[
MAXTHREADS
];

1286 
	gmem_ªf
;

1289 #ifde‡
CMP_STEER


1290 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1293 #ifde‡
N_WAY_STEER


1294 
	gno_˛u°î_thrd
[
MAXTHREADS
];

1297 
	gabs_ªs_°ìr
 = 0;

1298 
	gnum_°ìr
 = 0;

1300 
	göt_di°û±hªsh
 = (Ë(
MIN_INSN_INT
 / 6);

1301 
	gdi°û±abÀ
[
ITABLESIZE
];

1302 
èg_id_t
 
	gdi°û±abÀègid
[
ITABLESIZE
];

1303 
	gdi°ûpcou¡î
[
ITABLESIZE
];

1304 
	gdi°ûpßm∂es
[
ITABLESIZE
];

1305 
	gdi°ûpcou¡
 = 0;

1306 
	göt_di°ûp
 = 0;

1308 
	gskù≥d_br
 = 0;

1309 
	gdi°ûp
 = 0;

1310 
	gdi°ûp_vÆid
 = 0;

1312 
	gö¢16
 = 0;

1313 
	gö¢4
 = 0;

1315 
	gö¢_öãrvÆ
 = 
MIN_INSN_INT
;

1316 
	gh_ªgs
[
NUM_H_REGS
];

1318 
	gnum_£¡
 = 0;

1319 
	gnum_åùs
 = 1;

1320 
	gœ°˛u°î
 = 0;

1321 
	gö°£qnum
 = 0;

1323 
	gπhªsh
;

1324 
	gbπhªsh
;

1325 
	gm°hªsh
;

1326 
	gim°hªsh
;

1327 
	gcy˘hªsh
;

1328 
	g∫oi£
;

1329 
	gb∫oi£
;

1330 
	gm¢oi£
;

1331 
	gim¢oi£
;

1333 
	gªgdñay
 = 0;

1334 
	gªgå™s
 = 0;

1335 
	gtŸÆœt
 = 0;

1336 
	gtŸlds
 = 0;

1338 
	gÊushes
 = 0;

1339 
	gnum_Êushes
 = 0;

1340 
	g‰ì_˛u°î
 = 0;

1353 
	#CYCNOISE
 10

	)

1354 
	#NUMCYCTHRESH
 5

	)

1356 
	#STATINT
 
MIN_INSN_INT


	)

1358 
	gIIQ_size
 = 
IQSIZE
;

1359 
	gFIQ_size
 = 
FQSIZE
;

1360 
	gIPREG_size
 = 
IPREGSIZE
;

1361 
	gFPREG_size
 = 
FPREGSIZE
;

1363 
	gIIQ_size_˛u°î
;

1364 
	gFIQ_size_˛u°î
;

1365 
	gIPREG_size_˛u°î
;

1366 
	gFPREG_size_˛u°î
;

1369 #ifde‡
RAW


1370 
	gøwq_size
 = 
RAWSIZE
;

1372 #ifde‡ 
COMM_BUFF


1373 
	gtimewödow
 = 
TIMEWINDOW
;

1376 
	gn⁄_¸ô
 = 0;

1377 
	g¸ô
 = 0;

1378 
	gèb2_c‹r
 = 0;

1379 
	gèb2_öc‹r
 = 0;

1380 
	gèb2_miss
 = 0;

1381 
	gèb_c‹r
 = 0;

1382 
	gèb_öc‹r
 = 0;

1383 
	gèb_miss
 = 0;

1384 
	gèbÀ_ègs
[
MAXTHREADS
][
TABLESIZE
];

1385 
	gèbÀ_num
[
MAXTHREADS
][
TABLESIZE
];

1386 
	gèbÀ2_ègs
[
MAXTHREADS
][
TABLE2SIZE
];

1387 
	gèbÀ2_num
[
MAXTHREADS
][
TABLE2SIZE
];

1390 
	#DEV_PERIOD
 10

	)

1392 
	#DEDICATED_ADDER
 0

	)

1394 
	#DED_ADDER_LAT_DIFF
 0

	)

1396 
	gadd_Æu
 = 0;

1397 
	gn⁄add_Æu
 = 0;

1399 
	#PERFECT
 0

	)

1400 
	#PERFECTLAT
 1

	)

1401 
	gnŸw¨m
 = 1;

1402 
	gcy˛echeck
;

1406 #ifde‡
RAW


1407 
	gøwq
;

1408 
	gøwq_˛
[
CLUSTERS
];

1409 
	gøwqªady
 = 0;

1410 
	gøwqªady_˛
[
CLUSTERS
];

1411 
	gøwq_fuŒ
 = 0;

1412 
	gøwq_°Æl
 = 0;

1414 
	giissueq
;

1415 
	gfissueq
;

1417 #ifde‡
PWR_WAKE


1418 
	gúódy
 = 0;

1419 
	g‰ódy
 = 0;

1420 
	glsqªady
 = 0;

1421 
	giuƒódy
 = 0;

1422 
	gfuƒódy
 = 0;

1423 
	glsquƒódy
 = 0;

1424 
	gIREADY_cou¡
 = 0;

1425 
	gFREADY_cou¡
 = 0;

1426 
	gLSQREADY_cou¡
 = 0;

1427 
	gúódy_˛
[
CLUSTERS
];

1428 
	g‰ódy_˛
[
CLUSTERS
];

1429 
	glsqªady_˛
[
CLUSTERS
];

1430 
	giuƒódy_˛
[
CLUSTERS
];

1431 
	gfuƒódy_˛
[
CLUSTERS
];

1434 #ifde‡ 
SPLIT_LSQ


1435 
	glsq_˛
[
LSQ_PARTS
];

1436 
	glsquƒódy_˛
[
CLUSTERS
];

1441 #ifde‡ 
PARTITIONED_LSQ


1442 
	glsq_∑π_b™k
;

1443 
	glsq_∑π_˛
 = 
CLUSTERS
 / 
LSQ_PARTS
;

1444 
	glsq_∑π_thrd
;

1447 
	gúegfûe
;

1448 
	g‰egfûe
;

1449 
	gúegfûe_˛
[
CLUSTERS
];

1450 
	gõxåa_˛
[
CLUSTERS
];

1451 
	g‰egfûe_˛
[
CLUSTERS
];

1452 
	g„xåa_˛
[
CLUSTERS
];

1453 
	giissueq_˛
[
CLUSTERS
];

1454 
	gfissueq_˛
[
CLUSTERS
];

1455 
	gnum_°‹eq
[
CLUSTERS
];

1456 
	gmax_°‹eq
[
CLUSTERS
];

1457 
	gdi•_dñay
 = 0;

1459 
	göchk
 = 0;

1460 
	göchk2
 = 0;

1461 
	göchk3
 = 0;

1462 
cou¡î_t
 
	göûpchk
 = 0;

1463 
	gcycchk
 = 0;

1464 
	gcycchk2
 = 0;

1465 
	gcycchk3
 = 0;

1466 
	gbrchk
 = 0;

1467 
	gªfchk
 = 0;

1468 
	gö¢chk±
 = 0;

1469 
	gcy˛echk±
 = 0;

1470 
	gbrchk±
 = 0;

1471 
	gªfchk±
 = 0;

1472 
	gimischk±
 = 0;

1473 
	gmischk±
 = 0;

1474 
	gdñchk±
 = 0;

1475 
	g‹igöÆ_bsize
 = 0;

1476 
	gˇche_dl1_£t_shi·
 = 0;

1477 
	gpha£
 = 
SMALLEST_CONFIG
;

1478 
	gcy˛e_cou¡
[
NUMPHASES
 + 1];

1479 
	g°abÀ_cou¡
 = 0;

1480 
	g°›_ex∂
 = 0;

1482 
	gõxåa
;

1483 
	g„xåa
;

1484 
	givÆid
;

1485 
	gfvÆid
;

1487 
	gtŸ_úeg
 = 0;

1488 
	gtŸ_‰eg
 = 0;

1489 
	gtŸ_õxt
 = 0;

1490 
	gtŸ_„xt
 = 0;

1491 
	gtŸ_ö⁄dup
 = 0;

1492 
	gtŸ_‚⁄dup
 = 0;

1494 
	gcomm_dñay
 = 0;

1495 
	gnum_sögÀ
 = 0;

1496 
	giss_°Æl
 = 0;

1497 
	g„_°Æl
 = 0;

1498 
	gn_ªady
 = 0;

1499 
	gnum_£mi_f
 = 0;

1500 
	gnum_qw°Æl
 = 0;

1501 
	gö_this
 = 0;

1502 
	gnum_‰ìd
 = 0;

1503 
	gtŸ_dñ
 = 0;

1504 
	gtŸ_dñ_bw
 = 0;

1505 
	gnum_bw_of
 = 0;

1506 
	gºobö
 = 0;

1508 
	gmö_addr
 = 5600000000ULL;

1509 
	gmax_addr
 = 0;

1511 
	g°ddev
 = 0;

1512 
	gb™0
 = 0;

1513 
	gb™1
 = 0;

1514 
	gb™2
 = 0;

1515 
	gb™3
 = 0;

1516 
	gbö_acc_tŸ
 = 0;

1517 
	gbö_mis_tŸ
 = 0;

1518 
	gbö_acc
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1519 
	gbö_lds
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1520 
	gbö_tﬁ
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1521 
	gbö_mis
[(
MAXADDR
 - 
MINADDR
Ë/ 
BINSIZE
];

1532 
	gaddr0
, 
	gaddr1
, 
	gaddr2
;

1534 
	#HIST
 4

	)

1535 
	gnum_issued
 = 0;

1536 
	giss_øã
[
HIST
];

1537 
	gissue_øã
 = 0;

1538 
	gtﬁ
[4][3];

1539 
	gtﬁ0
 = 0;

1540 
	gtﬁ1
 = 0;

1541 
	gtﬁ2
 = 0;

1542 
	gtŸ_tﬁ
 = 0;

1543 
	gtŸ_tﬁ0
 = 0;

1544 
	gtŸ_tﬁ1
 = 0;

1545 
	gtŸ_tﬁ2
 = 0;

1546 
	gtŸ_tﬁ3
 = 0;

1547 
	gb™k_c⁄f
 = 0;

1548 
	g°_b™k_c⁄f
 = 0;

1550 #ifde‡
PORT_PER_BANK


1551 
	gmiss_num
[
MAXCACHEPORTS
];

1552 
	gªf_num
[
MAXCACHEPORTS
];

1554 
	gmiss_num
[
CACHEPORTS
];

1555 
	gªf_num
[
CACHEPORTS
];

1557 
	gªf_N
;

1559 
	gdi•_time
[
MD_TOTAL_REGS
];

1560 
	gli„time1
 = 0;

1561 
	gli„time2
 = 0;

1562 
	gwaôtime1
 = 0;

1563 
	gwaôtime2
 = 0;

1564 
	gc⁄swaôtime1
 = 0;

1565 
	gc⁄swaôtime2
 = 0;

1566 
	gnum1
 = 0;

1567 
	gnum2
 = 0;

1568 
	gnum11
 = 0;

1569 
	gnum22
 = 0;

1570 
	ghi°o
[122];

1572 
	gdi•_°Æls
 = 0;

1573 
	gˇu£1
 = 0;

1574 
	gˇu£2
 = 0;

1575 
	gˇu£3
 = 0;

1576 
	gˇu£4
 = 0;

1577 
	gˇu£5
 = 0;

1580 
	gIISSUEQ_cou¡
 = 0;

1581 
	gIISSUEQ_fcou¡
 = 0;

1582 
	gFISSUEQ_cou¡
 = 0;

1583 
	gFISSUEQ_fcou¡
 = 0;

1584 
	gIPREG_cou¡
 = 0;

1585 
	gIexåa_cou¡
 = 0;

1586 
	gIPREG_fcou¡
 = 0;

1587 
	gFPREG_cou¡
 = 0;

1588 
	gFexåa_cou¡
 = 0;

1589 
	gFPREG_fcou¡
 = 0;

1591 
	gúegfûe_˛_cou¡
[
CLUSTERS
];

1592 
	gõxåa_˛_cou¡
[
CLUSTERS
];

1593 
	g‰egfûe_˛_cou¡
[
CLUSTERS
];

1594 
	g„xåa_˛_cou¡
[
CLUSTERS
];

1595 
	giissueq_˛_cou¡
[
CLUSTERS
];

1596 
	gfissueq_˛_cou¡
[
CLUSTERS
];

1598 #ifde‡ 
SPLIT_LSQ


1599 
	glsq_˛_cou¡
[
LSQ_PARTS
];

1602 
	gno_di•_˛u°î
 = 0;

1603 
	gdi•_di°
[
TOTALFETCHLIMIT
 + 1];

1605 #ifde‡
RAW


1606 
	gøwq_cou¡
 = 0;

1607 
	gøwq_fcou¡
 = 0;

1608 
	gøwq_˛_cou¡
[
CLUSTERS
];

1609 
	gøwq_di°
[
RAWSIZE
 / 
CLUSTERS
];

1612 
	#P_TOTAL_REGS
 
IPREGSIZE
+
FPREGSIZE
+1

	)

1619 
	gp_tŸÆ_ªgs
 = 
P_TOTAL_REGS
;

1621 #ifde‡
RABMAP


1622 
	gö°_u£_exåa
[
P_TOTAL_REGS
];

1623 
	g…›m≠_exåa
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1624 
	g…›m≠_¥eg
[
MAXTHREADS
][
MD_TOTAL_REGS
][
CLUSTERS
];

1627 
	gshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1628 
	g•ecshi·ªg1
[
MAXTHREADS
][
LEV1SIZE
];

1629 
	gshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1630 
	g•ecshi·ªg2
[
MAXTHREADS
][
LEV1SIZE
];

1631 
	gshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1632 
	g•ecshi·ªg3
[
MAXTHREADS
][
LEV1SIZE
];

1633 
	gshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1634 
	g•ecshi·ªg4
[
MAXTHREADS
][
LEV1SIZE
];

1635 
	gshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1636 
	g•ecshi·ªg5
[
MAXTHREADS
][
LEV1SIZE
];

1637 
	gÀv2¥ed1
[
LEV2SIZE
];

1638 
	gÀv2¥ed2
[
LEV2SIZE
];

1639 
	gÀv2¥ed3
[
LEV2SIZE
];

1640 
	gÀv2¥ed4
[
LEV2SIZE
];

1641 
	gÀv2¥ed5
[
LEV2SIZE
];

1643 
	gb™k_¥ed_c‹r
 = 0;

1644 
	gb™k_¥ed_wr⁄g
 = 0;

1645 
	gac_b™k_¥ed_c‹r
 = 0;

1646 
	gac_b™k_¥ed_wr⁄g
 = 0;

1648 #ifde‡
CACHE_MISS_STAT


1649 
	g•ec_rdb_miss
 = 0;

1650 
	g•ec_wrb_miss
 = 0;

1651 
	gcou¡_îr‹
 = 0;

1655 
powî_∑ømëî_c›y
 ();

1657 
bö_öô
 ();

1658 
ˇche_öô
 ();

1659 
∑ge_èbÀ_öô
 ();

1660 
éb_mshr_öô
 ();

1661 
éb_cu_öô
 ();

1662 
éb_cu_check
(
thªadid
, 
md_addr_t
 
addr
, 
cmd
);

1663 
sh¨e_∑âîn
–
thªadid
, 
md_addr_t
 
addr
, 
cmd
);

1664 
ûp_öô
 ();

1665 
b™k¥ed_öô
 ();

1666 
ªg_öô
 ();

1667 
ˇche_ch™ge_c⁄fig
 ();

1668 
rög_‰ì
 ();

1669 
ˇche_upd©e
 ();

1670 
compuã_queue
 ();

1671 
ªg_cou¡
 ();

1672 
b¥ed_öô
 ();

1675 
sim∂e_ˇche_Êush
 (
ˇche_t
 *);

1676 
˛u°î_check
 (
md_addr_t
);

1677 
b™k_upd©e
 (
md_addr_t
, , );

1678 
°_rög_œt
 (
RUU_°©i⁄
 *);

1679 
rög_œt
 (, , , );

1680 
c›y_‰om
 ();

1681 
‰ìli°_ö£π
 (, );

1682 
check_RUU_LSQ_m©ch
 ();

1683 
check_ªg
 ();

1684 
powî_˛ór
 ();

1685 
sim_cyc
 ();

1686 
ˇlcuœã_¥i‹ôy
 ();

1687 
ö£π_fûlq
 (, 
md_addr_t
);

1689 #ifde‡
CYCLE_JUMP


1690 
cy˛e_jump
 ();

1691 
rög_‰ì_jump
 ();

1693 
gíîÆ_°©
 ();

1695 #ifde‡
EVENT_CACHE_UPDATE


1696 
mshr_öô
 ();

1704 
cou¡î_t
 
	gsim_tŸÆ_ö¢
 = 0;

1707 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

1710 
cou¡î_t
 
	gsim_tŸÆ_ªfs
 = 0;

1713 
cou¡î_t
 
	gsim_num_lﬂds
 = 0;

1716 
cou¡î_t
 
	gsim_tŸÆ_lﬂds
 = 0;

1719 
cou¡î_t
 
	gsim_num_bønches
 = 0;

1722 
cou¡î_t
 
	gsim_tŸÆ_bønches
 = 0;

1724 #ifde‡
TG


1725 
cou¡î_t
 
	gtg_øã
;

1726 
cou¡î_t
 
	gtŸÆ_∑ckës_gíî©i⁄
;

1727 
cou¡î_t
 
	gtŸÆ_ªad_∑ckës_gíî©i⁄
;

1728 
cou¡î_t
 
	gtŸÆ_wrôe_∑ckës_gíî©i⁄
;

1731 
cou¡î_t
 
	gsim_cy˛e
 = 0;

1732 
cou¡î_t
 
	gglobÆ_d©a_∑ckës_gíî©i⁄
 = 0;

1733 
cou¡î_t
 
	gTŸÆMëaPackësInAŒ
 = 0;

1734 
cou¡î_t
 
	gTŸÆD©aPackësInAŒ
 = 0;

1735 
cou¡î_t
 
	gTŸÆSyncD©aPackës
 = 0;

1736 
cou¡î_t
 
	gTŸÆSyncMëaPackës
 = 0;

1737 
cou¡î_t
 
	gTŸÆ_MëaPackës_1
;

1738 
cou¡î_t
 
	gTŸÆ_D©aPackës_1
;

1739 
cou¡î_t
 
	gMëaPackës_1
;

1740 
cou¡î_t
 
	gD©aPackës_1
;

1741 
cou¡î_t
 
	gw¨mupEndCy˛e
 = 0;

1742 
cou¡î_t
 
	gd©a_∑ckës_sync
 = 0;

1743 
cou¡î_t
 
	gmëa_∑ckës_sync
 = 0;

1744 
cou¡î_t
 
	gd©a_∑ckës_£ndög
[300][300];

1745 
cou¡î_t
 
	gmëa_∑ckës_£ndög
[300][300];

1746 
cou¡î_t
 
	glök_£r_œt
[300][300];

1747 
cou¡î_t
 
	gmëa_eví_ªq_˛o£
[300];

1748 
cou¡î_t
 
	gmëa_odd_ªq_˛o£
[300];

1749 
cou¡î_t
 
	g›tiˇl_d©a_∑ckës
 = 0;

1750 
cou¡î_t
 
	g›tiˇl_mëa_∑ckës
 = 0;

1751 
cou¡î_t
 
	gmesh_d©a_∑ckës
 = 0;

1752 
cou¡î_t
 
	gmesh_mëa_∑ckës
 = 0;

1754 
cou¡î_t
 
	g∑øŒñ_sim_cy˛e
 = 1;

1755 
	gdi•2
, 
	gdi•1
;

1758 
cou¡î_t
 
	gIFQ_cou¡
;

1759 
cou¡î_t
 
	gIFQ_fcou¡
;

1760 
cou¡î_t
 
	gRUU_cou¡
;

1761 
cou¡î_t
 
	gRUU_fcou¡
;

1762 
cou¡î_t
 
	gLSQ_cou¡
;

1763 
cou¡î_t
 
	gLSQ_fcou¡
;

1765 
cou¡î_t
 
	gpÊ2Hô
 = 0;

1766 
cou¡î_t
 
	gpÊ2SecMiss
 = 0;

1767 
cou¡î_t
 
	gpÊ2PrimMiss
 = 0;

1769 #ifde‡ 
COUNT_LSQ


1770 
	gn⁄_issue_LSQ_cou¡
;

1771 
	gn⁄_issue_LSQ_fcou¡
;

1775 
cou¡î_t
 
	gsim_övÆid_addrs
;

1782 
	g±ø˚_£q
 = 0;

1790 
	g¥ed_≥r„˘
 = 
FALSE
;

1793 *
	gb¥ed_•ec_›t
;

1795 { 
	m•ec_ID
, 
	m•ec_WB
, 
	m•ec_CT
 } 
	gb¥ed_•ec_upd©e
;

1798 
ˇche_t
 *
	gˇche_û1
[
CLUSTERS
];

1801 
ˇche_t
 *
	gˇche_û2
;

1804 
ˇche_t
 *
	gˇche_dl1
[
CLUSTERS
];

1807 
ˇche_t
 *
	gˇche_ml2
;

1808 
ˇche_t
 *
	gˇche_dl2
;

1811 
ˇche_t
 *
	gôlb
[
CLUSTERS
];

1814 
ˇche_t
 *
	gdéb
[
CLUSTERS
];

1819 #ifde‡
LOAD_PREDICTOR


1821 
b¥ed_t
 *
	gld¥ed
;

1822 
	gld¥ed_•ec_upd©e
 = 0;

1823 
	gld¥ed_cou¡
 = 0, 
	gld¥ed_hô
 = 0;

1824 
	govî_miss
 = 0, 
	gundî_miss
 = 0;

1825 
	gˇche_miss
;

1826 
	gld_miss_thrd
[
MAXTHREADS
];

1828 #ifde‡
PDG


1829 
	gnum_pdg
 = 0;

1830 
	gpdg_di°
[
MAXTHREADS
 + 1];

1835 
	#CPU_TRACE


	)

1836 #ifde‡
CPU_TRACE


1837 *
	g˝u_åa˚
;

1840 
	#L2_TRACE


	)

1841 #ifde‡
L2_TRACE


1842 * 
	gL2_åa˚
;

1847 
ªs_poﬁ
 *
	gfu_poﬁ
 = 
NULL
;

1850 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

1851 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

1852 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

1856 
	#STATVAL
(
STAT
Ë\

	)

1857 ((
	gSTAT
)->
	gsc
 =
sc_öt
 \

1858 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

1859 : ((
STAT
)->
sc
 =
sc_uöt
 \

1860 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

1861 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

1862 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

1863 : (
∑nic
("bad stat class"), 0))))

1865 
	gClu°îSåu˘
[
CLUSTERS
][CLUSTERS];

1866 
ThrdAc˚ssP©ã∫
[
MAXTHREADS
][
CLUSTERS
];

1883 
≥riodic_ad≠èti⁄
 ();

1885 
	g°›_„tch
 = 0;

1886 
	gœ°SimCy˛e
 = 0;

1889 
	g°¨tTakögSèti°ics
 = 0;

1891 
	#PERFECTBANKPREDICTOR
 1

	)

1894 
	$öôClu°îInfo
 ()

1896 
i
, 
l
;

1898 
i
 = 0; i < 
CLUSTERS
; i++)

1899 
l
 = 0;Ü < 
CLUSTERS
;Ü++)

1900 
Clu°îSåu˘
[
i
][
l
] = -1;

1902 
	}
}

1904 
	gHavePröãd
 = 0;

1907 
	$PrötClu°îInfo
 ()

1909 
gg
, 
º
;

1911 
º
 = 0;Ñ∏< 
CLUSTERS
;Ñr++)

1913 
	`¥ötf
 ("\n");

1914 
gg
 = 0; gg < 
CLUSTERS
; gg++)

1915 
	`¥ötf
 ("%d", 
Clu°îSåu˘
[
º
][
gg
]);

1917 
	}
}

1922 
	$mem_ac˚ss_œãncy
 (
blk_sz
)

1924 
chunks
 = (
ˇche_dl1
[0]->
bsize
)*
mem_p‹t_num
/ 
mem_bus_width
;

1927 
	`as£π
 (
chunks
 > 0);

1929  ( 
mem_œt
[0] +

1930 – (()4/
mem_bus_•ìd
Ë* (
chunks
 - 1)));

1932 
	}
}

1934 #ifde‡
L2_COMM_LAT


1935 
	#L2_COMM_LAT_LOCATION
(
baddr
Ë(badd∏& (
CLUSTERS
 - 1))

	)

1941 
RUU_°©i⁄
 *
	grsCacheAc˚ss
 = 
NULL
;

1942 
FILE
 *
	gÂ_åa˚
;

1945 
dl1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1946 
md_addr_t
 
baddr
,

1947 
bsize
,

1948 
ˇche_blk_t
 *
blk
,

1949 
tick_t
 
now
,

1950 
thªadid


1951 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1952 , 
˛u°î


1956 
	gœt
;

1957 
	gwhich_thªad
, 
	gi
;

1958 
	gÊag
 = 0;

1959 
	gwhich_thªad
 = 
thªadid
;

1960 #ifde‡ 
STREAM_PREFETCHER


1965 i‡(
	gˇche_dl2
)

1969 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_dl2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, NULL, 
which_thªad
, NULL);

1971 
	gdˇche2_ac˚ss
++;

1972 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

1973 i‡(
	gcmd
 =
Ród
)

1974  
œt
;

1981 i‡(
	gcmd
 =
Ród
)

1982  
mem_ac˚ss_œãncy
 (
bsize
);

1988 
dl2_¥e„tch_a˘ive
;

1992 
dl2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

1993 
md_addr_t
 
baddr
,

1994 
bsize
,

1995 
ˇche_blk_t
 *
blk
,

1996 
tick_t
 
now
,

1997 
thªadid


1998 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

1999 , 
˛u°î


2003 #ifde‡ 
STREAM_PREFETCHER


2005 i‡(!
	gdl2_¥e„tch_a˘ive
)

2007 
ö£π_•
 (
baddr
, 
thªadid
);

2011 
	gœt
;

2015 
	g§c
, 
	gp‹t_num
, 
	gx
, 
	gy
;

2017 
	g§c
 = (
baddr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

2018 
	gx
 = (
§c
 /
mesh_size
);

2019 
	gy
 = (
§c
 %
mesh_size
);

2020 
	gp‹t_num
 = (
x
/(
mesh_size
/2))*2+
y
/(mesh_size/(
mem_p‹t_num
/2));

2021 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

2022 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()4/
mem_bus_•ìd
);

2023  
	gœt
;

2031 
û1_ac˚ss_‚
 (
mem_cmd
 
cmd
,

2032 
md_addr_t
 
baddr
,

2033 
bsize
,

2034 
ˇche_blk_t
 *
blk
,

2035 
tick_t
 
now
,

2036 
thªadid


2037 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

2038 , 
˛u°î


2042 
	gœt
 = 0;

2043 
	gm©chnum
 = 0;

2044 i‡(
	gˇche_û2
)

2047 
	gœt
 = 
ˇche_ac˚ss
 (
ˇche_û2
, 
cmd
, 
baddr
, 
NULL
, 
bsize
, 
now
, NULL, NULL, NULL, 
thªadid
 
IF_L2_COMM_LAT_CL
 (
˛u°î
), NULL);

2049 
	gdˇche2_ac˚ss
++;

2050 
	gthec⁄ãxts
[
thªadid
]->
	gdˇche2_ac˚ss
++;

2052 i‡(
	gcmd
 =
Ród
)

2053  
œt
;

2055 
∑nic
 ("writesÅo instruction memoryÇot supported");

2060 i‡(
	gcmd
 =
Ród
)

2061  
mem_ac˚ss_œãncy
 (
bsize
);

2063 
∑nic
 ("writesÅo instruction memoryÇot supported");

2065  
	gœt
;

2070 
û2_ac˚ss_‚
 (
mem_cmd
 
cmd
,

2071 
md_addr_t
 
baddr
,

2072 
bsize
,

2073 
ˇche_blk_t
 *
blk
,

2074 
tick_t
 
now
,

2075 
thªadid


2076 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

2077 , 
˛u°î


2083 
	gœt
 = 0;

2084 i‡(
	gcmd
 =
Ród
)

2086 
§c
, 
p‹t_num
, 
x
, 
y
;

2088 
	g§c
 = (
baddr
 >> 
MD_LOG_PAGE_SIZE
Ë% 
numc⁄ãxts
;

2089 
	gx
 = (
§c
 /
mesh_size
);

2090 
	gy
 = (
§c
 %
mesh_size
);

2091 
	gp‹t_num
 = (
x
/(
mesh_size
/2))*2+
y
/(mesh_size/(
mem_p‹t_num
/2));

2092 
	gœt
 = 
mem_ac˚ss_œãncy
 (
bsize
Ë+ 
mem_p‹t_œt
[
p‹t_num
];

2093 
	gmem_p‹t_œt
[
p‹t_num
] +(
bsize
*
mem_p‹t_num
/
mem_bus_width
)*(()4/
mem_bus_•ìd
);

2094 
	gp‹t_acc‹d
[
p‹t_num
] ++;

2095  
	gœt
;

2098 
∑nic
 ("writesÅo instruction memoryÇot supported");

2109 
ôlb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

2110 
md_addr_t
 
baddr
,

2111 
bsize
,

2112 
ˇche_blk_t
 *
blk
,

2113 
tick_t
 
now
,

2114 
thªadid


2115 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

2116 , 
˛u°î


2120 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

2123 
as£π
 (
phy_∑ge_±r
);

2126 *
	gphy_∑ge_±r
 = 0;

2129  
	géb_miss_œt
;

2134 
déb_ac˚ss_‚
 (
mem_cmd
 
cmd
,

2135 
md_addr_t
 
v≤
,

2136 
bsize
,

2137 
ˇche_blk_t
 *
blk
,

2138 
tick_t
 
now
,

2139 
thªadid


2140 #i‡
deföed
 (
L2_COMM_LAT
Ë|| deföed (
TOKENB
)

2141 , 
˛u°î


2145 
md_addr_t
 *
	gphy_∑ge_±r
 = (md_addr_à*Ë
blk
->
u£r_d©a
;

2148 
as£π
 (
phy_∑ge_±r
);

2151 *
	gphy_∑ge_±r
 = 0;

2154  
	géb_miss_œt
;

2160 
	$sim_ªg_›ti⁄s
 (
›t_odb_t
 *
odb
)

2162 
	`›t_ªg_hódî
 (
odb
,

2167 
	`›t_ªg_uöt
 (
odb
, "-max:ö°", "maximumÇumbî o‡ö°'†tÿexecuã/thªad", (*Ë(&
max_ö°s
), 0,

2168  
TRUE
, 
NULL
);

2171 
	`›t_ªg_uöt
 (
odb
, "-max:b¨rõr", "maximumÇumbî o‡b¨rõr†tÿexecuã", (*Ë(&
max_b¨rõr
), 0,

2172  
TRUE
, 
NULL
);

2175 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:meshsize", "mesh sizêo‡thê√tw‹k", &
mesh_size
, 4,

2176  
TRUE
, 
NULL
);

2181 
	`›t_ªg_öt
 (
odb
, "-sh¨î:ªad_í", "sh¨îÑódÉ«bÀ", &
shr_ªad_í
, 0,

2182  
TRUE
, 
NULL
);

2185 
	`›t_ªg_öt
 (
odb
, "-öf‹m_back:tŸÆ_í", "öf‹m backÉn", &
tŸÆ_öf‹m_back_í
, 0,

2186  
TRUE
, 
NULL
);

2189 
	`›t_ªg_öt
 (
odb
, "-éb:˛ass_cﬂr£", "éb cœs†cﬂr£", &
éb_c_c
, 1,

2190  
TRUE
, 
NULL
);

2193 
	`›t_ªg_öt
 (
odb
, "-mu…i_blk:£t_shi·", "mu…òblk së shi·", &
mu…i_blk_£t_shi·
, 0,

2194  
TRUE
, 
NULL
);

2197 
	`›t_ªg_öt
 (
odb
, "-mu…i_blk:ad≠_í", "mu…òblkád≠tive", &
mu…i_blk_ad≠_í
, 0,

2198  
TRUE
, 
NULL
);

2201 
	`›t_ªg_öt
 (
odb
, "-mu…i_blk_ad≠:∑ö_í", "mu…òblkád≠ÖaöÉn", &
mb_∑ö_í
, 0,

2202  
TRUE
, 
NULL
);

2205 
	`›t_ªg_öt
 (
odb
, "-mu…i_blk_ad≠:öf‹m_í", "mu…òblkád≠ inf‹mÉn", &
mu…i_blk_ad≠_öf‹m_í
, 0,

2206  
TRUE
, 
NULL
);

2209 
	`›t_ªg_öt
 (
odb
, "-mu…i_blk_ad≠:ª∂_ad_í", "mu…òblkád≠Ñï»adÉn", &
ª∂_ad_í
, 0,

2210  
TRUE
, 
NULL
);

2213 
	`›t_ªg_öt
 (
odb
, "-mu…i_blk_ad≠:ªˇŒ_ad_í", "mu…òblkád≠ÑeˇŒádÉn", &
ªˇŒ_ad_í
, 0,

2214  
TRUE
, 
NULL
);

2217 
	`›t_ªg_öt
 (
odb
, "-pvc:ve˘‹_num", "pv¯ve˘‹Çum", &
ve˘‹_num
, 1,

2218  
TRUE
, 
NULL
);

2221 
	`›t_ªg_öt
 (
odb
, "-pvc:sh¨î_thªshﬁd", "pv¯sh¨îÅhªshﬁd", &
sh¨î_thªshﬁd
, 1,

2222  
TRUE
, 
NULL
);

2225 
	`›t_ªg_öt
 (
odb
, "-pvc:nv_brﬂdˇ°", "pv¯n⁄-ve˘‹ brﬂdˇ°", &
nv_brﬂdˇ°
, 1,

2226  
TRUE
, 
NULL
);

2229 
	`›t_ªg_öt
 (
odb
, "-¥e„tch:L2_En", "íabÀ L2Öª„tch", &
L2_¥e„tch_En
, 1,

2230  
TRUE
, 
NULL
);

2233 
	`›t_ªg_öt
 (
odb
, "-¥e„tch:L1_En", "íabÀ L1Öª„tch", &
L1_¥e„tch_En
, 1,

2234  
TRUE
, 
NULL
);

2240 
	`›t_ªg_öt
 (
odb
, "-STREAM:mö", "STREAM & mö", &
STREAM_mö_En
, 1,

2241  
TRUE
, 
NULL
);

2244 
	`›t_ªg_öt
 (
odb
, "-STREAM:L2_di°™˚", "STREAM_L2_di°™˚", &
STREAM_L2_di°™˚
, 1,

2245  
TRUE
, 
NULL
);

2248 
	`›t_ªg_öt
 (
odb
, "-STREAM:mö_di°™˚", "STREAM_mö_di°™˚", &
STREAM_mö_di°™˚
, 1,

2249  
TRUE
, 
NULL
);

2252 
	`›t_ªg_°rög_li°
 (
odb
, "-±ø˚", "gíî©êpùëø˚, i.e., <‚ame|°dout|°dîr> <ønge>", 
±ø˚_›ts
, 2, &
±ø˚_√…
, 
NULL
,

2253  
FALSE
, 
NULL
, FALSE);

2256 
	`›t_ªg_nŸe
 (
odb
, "####### Network configuration #######\n");

2257 #ifde‡
OPTICAL_INTERCONNECT


2258 
	`›t_ªg_nŸe
 (
odb
, "Optical interconnect\n");

2260 #ifde‡
POPNET


2261 
	`›t_ªg_nŸe
 (
odb
, "Popnet interconnect\n");

2263 #ifde‡
CONF_BIT


2264 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation\n");

2267 
	`›t_ªg_nŸe
 (
odb
, "Confirmation based optimazation for Invalidation\n");

2269 #ifde‡
WB_SPLIT_NET


2270 
	`›t_ªg_nŸe
 (
odb
, "Write back split inÇetworkÜevel\n");

2272 #ifde‡
PSEUDO_SCHEDULE


2273 
	`›t_ªg_nŸe
 (
odb
, "InorderÖrobability-based scheduling (IRD)\n");

2275 #ifde‡
PSEUDO_SCHEDULE_REORDER


2276 
	`›t_ªg_nŸe
 (
odb
, "ReorderÖrobability-based scheduling (RRD)\n");

2278 #ifde‡
PSEUDO_SCHEDULE_DATA


2279 
	`›t_ªg_nŸe
 (
odb
, "Intelligent delay (IDD)\n");

2281 #ifde‡
L1_L2_CONF


2282 
	`›t_ªg_nŸe
 (
odb
, "L1ánd L2Ñeply conflictÑesolution\n");

2284 #ifde‡
ORDER_NODE


2285 
	`›t_ªg_nŸe
 (
odb
, "Ordering byÇode\n");

2287 #ifde‡
ORDER_ADDR


2288 
	`›t_ªg_nŸe
 (
odb
, "Ordering byáddr\n");

2290 
	`›t_ªg_nŸe
 (
odb
, "######Çetwork configurationÉnd ######\n");

2292 
	`›t_ªg_nŸe
 (
odb
,

2308 
	`›t_ªg_öt
 (
odb
, "-„tch:ifqsize", "ö°ru˘i⁄ fëch queuêsizê(ö in°s)", &
ruu_ifq_size
, 16,

2309  
TRUE
, 
NULL
);

2311 
	`›t_ªg_öt
 (
odb
, "-„tch:m∂©", "exå®bønch mis-¥edi˘i⁄Ü©ícy", &
ruu_bønch_≥«…y
, 7,

2312  
TRUE
, 
NULL
);

2314 
	`›t_ªg_öt
 (
odb
, "-„tch:•ìd", "•ìd o‡‰⁄t-íd o‡machöêªœtivêtÿexecuti⁄ c‹e", &
„tch_•ìd
, 1,

2315  
TRUE
, 
NULL
);

2319 
	`›t_ªg_nŸe
 (
odb
,

2330 
	`›t_ªg_°rög
 (
odb
, "-b¥ed", "bønchÖªdi˘‹Åy≥ {nŸèkí|èkí|≥r„˘|bimod|2Àv|comb|2bcgskew}", &
¥ed_ty≥
, "comb",

2331  
TRUE
, 
NULL
);

2333 
	`›t_ªg_Êag
 (
odb
, "-b¥ed:btb_u£_ma°îid", "u£ ma°îid i¿∂a˚ o‡thªadid whí i¡îa˘ög wôh BTB, givög youÖî-¥o˚s†ö°ód o‡≥r-thªadÉ¡rõs", &
b¥ed_btb_u£_ma°îid
, 
TRUE
,

2334  
TRUE
, 
NULL
);

2336 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:bimod", "bimodÆÖªdi˘‹ c⁄fig (<èbÀ size>)", 
bimod_c⁄fig
, 
bimod_√…
, &bimod_nelt,

2337  
bimod_c⁄fig
,

2338  
TRUE
, 
NULL
, 
FALSE
);

2340 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2Àv", "2-ÀvñÖªdi˘‹ c⁄fig " "(<l1size> <l2size> <hi°_size> <x‹>)", 
twﬁev_c⁄fig
, 
twﬁev_√…
, &twolev_nelt,

2341  
twﬁev_c⁄fig
,

2342  
TRUE
, 
NULL
, 
FALSE
);

2344 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:comb", "comböögÖªdi˘‹ c⁄fig (<mëa_èbÀ_size>)", 
comb_c⁄fig
, 
comb_√…
, &comb_nelt,

2345  
comb_c⁄fig
,

2346  
TRUE
, 
NULL
, 
FALSE
);

2349 
	`›t_ªg_öt
 (
odb
, "-di•1", "2bcgskewÅabÀ di•œ˚míàf‹Üev 1", &
di•1
, 0,

2350  
TRUE
, 
NULL
);

2353 
	`›t_ªg_öt
 (
odb
, "-di•2", "2bcgskewÅabÀ di•œ˚míàf‹Üev 2", &
di•2
, 0,

2354  
TRUE
, 
NULL
);

2357 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:2bcgskew", "2Bc-gskewÖªdi˘‹ c⁄fig (<bim_size> <size> <bim_hi°_size> <g0_hi°_size> <g1_hi°_size> <mëa_hi°_size>)", 
twobcgskew_c⁄fig
, 
twobcgskew_√…
, &twobcgskew_nelt,

2358  
twobcgskew_c⁄fig
,

2359  
TRUE
, 
NULL
, 
FALSE
);

2362 
	`›t_ªg_öt
 (
odb
, "-b¥ed:øs", "ªtu∫áddªs†°ack sizê(0 f‹Çÿªtu∫ sèck)", &
øs_size
,Ñas_size,

2363  
TRUE
, 
NULL
);

2365 
	`›t_ªg_öt_li°
 (
odb
, "-b¥ed:btb", "BTB c⁄fig (<num_£ts> <assocütivôy>)", 
btb_c⁄fig
, 
btb_√…
, &btb_nelt,

2366  
btb_c⁄fig
,

2367  
TRUE
, 
NULL
, 
FALSE
);

2369 
	`›t_ªg_°rög
 (
odb
, "-b¥ed:•ec_upd©e", "•ecuœtivê¥edi˘‹†upd©êö {ID|WB} (deÁu…Ç⁄-•ec)", &
b¥ed_•ec_›t
, 
NULL
,

2370  
TRUE
, 
NULL
);

2374 
	`›t_ªg_öt
 (
odb
, "-comböed2", "u£ 2 comböedÖªdi˘‹s?", &
comböed2
, 
FALSE
,

2375  
TRUE
, 
NULL
);

2377 
	`›t_ªg_öt
 (
odb
, "-hi°_imm", "upd©êbønch hi°‹y immedüãly?", &
hi°_imm
, 
FALSE
,

2378  
TRUE
, 
NULL
);

2382 
	`›t_ªg_öt
 (
odb
, "-decode:width", "ö°ru˘i⁄ decodêB/W (ö°s/cy˛e)", &
ruu_decode_width
, 5,

2383  
TRUE
, 
NULL
);

2385 #i‚de‡
REMOVE_MY_CODE


2387 
	`›t_ªg_öt
 (
odb
, "-thrdf:limô", "Numbî o‡thªad fëch (thrd/cy˛e<=8)", &
thªad_„tch
, 
THREADFETCHLIMIT
,

2388  
TRUE
, 
NULL
);

2390 
	`›t_ªg_öt
 (
odb
, "-ö°thrdf:width", "ö°ru˘i⁄ fëch B/wÖîÅhªad (ö°s/cy˛e<=decode_width)", &
ö°_thªad_„tch
, 8,

2391  
TRUE
, 
NULL
);

2394 
	`›t_ªg_öt
 (
odb
, "-ùªgf:size", "öãgîÖhysiˇ»ªgi°î fûêsizê’î clu°î)", &
IPREG_size_˛u°î
, 80,

2395  
TRUE
, 
NULL
);

2397 
	`›t_ªg_öt
 (
odb
, "-Âªgf:size", "ÊﬂtögÖoöàphysiˇ»ªgi°î fûêsizê’î clu°î)", &
FPREG_size_˛u°î
, 80,

2398  
TRUE
, 
NULL
);

2400 
	`›t_ªg_öt
 (
odb
, "-iqueue:size", "öãgî queuêsizê(ö°sË’î clu°î)", &
IIQ_size_˛u°î
, 32,

2401  
TRUE
, 
NULL
);

2403 
	`›t_ªg_öt
 (
odb
, "-fqueue:size", "ÊﬂtögÖoöàqueuêsizê(ö°sË’î clu°î)", &
FIQ_size_˛u°î
, 32,

2404  
TRUE
, 
NULL
);

2406 #ifde‡
RAW


2407 
	`›t_ªg_öt
 (
odb
, "-øwqueue:size", "ªmŸêac˚s†queuêsizê(ö°s)", &
øwq_size
, 
RAWSIZE
,

2408  
TRUE
, 
NULL
);

2411 #ifde‡
ISSUE_PER_CLUSTER


2412 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/˛u°î/cy˛e)", &
ruu_issue_width
, 4,

2413  
TRUE
, 
NULL
);

2415 
	`›t_ªg_öt
 (
odb
, "-issue:width", "ö°ru˘i⁄ issuêB/W (ö°s/cy˛e)", &
ruu_issue_width
, 4,

2416  
TRUE
, 
NULL
);

2419 
	`›t_ªg_Êag
 (
odb
, "-issue:ö‹dî", "ru¿pùñöêwôh in-‹dî issue", &
ruu_ö‹dî_issue
, 
FALSE
,

2420  
TRUE
, 
NULL
);

2422 
	`›t_ªg_Êag
 (
odb
, "-issue:wr⁄g∑th", "issuêö°ru˘i⁄†dow¿wr⁄gÉxecuti⁄Ö©hs", &
ruu_ö˛ude_•ec
, 
TRUE
,

2423  
TRUE
, 
NULL
);

2426 
	`›t_ªg_öt
 (
odb
, "-commô:width", "ö°ru˘i⁄ commô B/W (ö°s/thªad/cy˛e)", &
ruu_commô_width
, 4,

2427  
TRUE
, 
NULL
);

2430 
	`›t_ªg_öt
 (
odb
, "-ruu:size", "ªgi°î upd©êunô (RUUËsize", &
RUU_size
, 16,

2431  
TRUE
, 
NULL
);

2434 
	`›t_ªg_öt
 (
odb
, "-lsq:size", "lﬂd/°‹êqueuê(LSQËsizê’î clu°î)", &
LSQ_size_˛u°î
, 8,

2435  
TRUE
, 
NULL
);

2437 
	`›t_ªg_öt
 (
odb
, "-lq:size", "lﬂd queuê(LQËsize", &
m_shLQSize
, 8,

2438  
TRUE
, 
NULL
);

2440 
	`›t_ªg_öt
 (
odb
, "-sq:size", "°‹êqueuê(SQËsize", &
m_shSQSize
, 8,

2441  
TRUE
, 
NULL
);

2443 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:vdd", "checkî vdd", &
checkîVDD
, 0.6,

2444  
TRUE
, 
NULL
);

2446 
	`›t_ªg_Êﬂt
 (
odb
, "-checkî:‰eq", "checkîÑu¬ögáàwh© fø˘i⁄ o‡fuŒ fªq", &
checkîFªq
, 0.5,

2447  
TRUE
, 
NULL
);

2450 
	`›t_ªg_nŸe
 (
odb
,

2461 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl1", "l1 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e} (óch clu°î)", &
ˇche_dl1_›t
, "dl1:128:32:4:l",

2462  
TRUE
, 
NULL
);

2464 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl1œt", "l1 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl1_œt
, 1,

2465  
TRUE
, 
NULL
);

2467 
	`›t_ªg_°rög
 (
odb
, "-ˇche:ml2", "l2 më®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_ml2_›t
, "ml2:1024:64:4:l",

2468  
TRUE
, 
NULL
);

2470 
	`›t_ªg_°rög
 (
odb
, "-ˇche:dl2", "l2 d©®ˇchêc⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ˇche_dl2_›t
, "dl2:1024:64:4:l",

2471  
TRUE
, 
NULL
);

2473 
	`›t_ªg_öt
 (
odb
, "-ˇche:ml2œt", "l2 më®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_ml2_œt
, 6,

2474  
TRUE
, 
NULL
);

2476 
	`›t_ªg_öt
 (
odb
, "-ˇche:dl2œt", "l2 d©®ˇchêhôÜ©ícy (ö cy˛es)", &
ˇche_dl2_œt
, 6,

2477  
TRUE
, 
NULL
);

2479 #ifde‡
TG


2480 
	`›t_ªg_öt
 (
odb
, "-ˇche:tgøã", "åaffi¯gíî©i⁄Ñ©e", &
tg_øã
, 100,

2481  
TRUE
, 
NULL
);

2483 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û1", "l1 in° cachêc⁄fig, i.e., {<c⁄fig>|dl1|dl2|n⁄e}", &
ˇche_û1_›t
, "il1:512:32:1:l",

2484  
TRUE
, 
NULL
);

2486 
	`›t_ªg_nŸe
 (
odb
,

2496 
	`›t_ªg_öt
 (
odb
, "-ˇche:û1œt", "l1 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û1_œt
, 1,

2497  
TRUE
, 
NULL
);

2499 
	`›t_ªg_°rög
 (
odb
, "-ˇche:û2", "l2 in°ru˘i⁄ cachêc⁄fig, i.e., {<c⁄fig>|dl2|n⁄e}", &
ˇche_û2_›t
, "dl2",

2500  
TRUE
, 
NULL
);

2502 
	`›t_ªg_öt
 (
odb
, "-ˇche:û2œt", "l2 in°ru˘i⁄ cachêhôÜ©ícy (ö cy˛es)", &
ˇche_û2_œt
, 6,

2503  
TRUE
, 
NULL
);

2505 #ifde‡
L2_COMM_LAT


2506 
	`›t_ªg_Êag
 (
odb
, "-ˇche:l2commœt", "whëhîÅÿhavê®di°ribuãd L2 wôh communiˇti⁄Ü©ícõ†added", &
l2_comm_œt_íabÀd
, 
FALSE
, 
TRUE
, 
NULL
);

2509 
	`›t_ªg_Êag
 (
odb
, "-ˇche:Êush", "Êush cache†⁄ sy°em cÆls", &
Êush_⁄_sysˇŒs
, 
FALSE
, 
TRUE
, 
NULL
);

2511 
	`›t_ªg_Êag
 (
odb
, "-ˇche:icom¥ess", "c⁄vîà64-bô in°áddªs£†tÿ32-bô in°ÉquivÆíts", &
com¥ess_iˇche_addrs
, 
FALSE
,

2512  
TRUE
, 
NULL
);

2515 
	`›t_ªg_öt_li°
 (
odb
, "-mem:œt", "mem‹yác˚s†œãncy (<fú°_chunk> <öãr_chunk>)", 
mem_œt
, 
mem_√…
, &mem_nelt, mem_lat,

2516  
TRUE
, 
NULL
, 
FALSE
);

2518 
	`›t_ªg_öt
 (
odb
, "-mem:width", "mem‹yác˚s†bu†width (ö byãs)", &
mem_bus_width
, 32,

2519  
TRUE
, 
NULL
);

2520 
	`›t_ªg_Êﬂt
 (
odb
, "-mem:•ìd", "mem‹yác˚s†bu†•ìd (ö GHz)", &
mem_bus_•ìd
, 1,

2521  
TRUE
, 
NULL
);

2522 
	`›t_ªg_öt
 (
odb
, "-mem:p‹ts", "mem‹yác˚s†p‹ànumbî", &
mem_p‹t_num
, 4,

2523  
TRUE
, 
NULL
);

2526 
	`›t_ªg_°rög
 (
odb
, "-éb:ôlb", "ö°ru˘i⁄ TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
ôlb_›t
, "ôlb:16:4096:4:l", 
TRUE
, 
NULL
);

2528 
	`›t_ªg_°rög
 (
odb
, "-éb:déb", "d©®TLB c⁄fig, i.e., {<c⁄fig>|n⁄e}", &
déb_›t
, "déb:32:4096:4:l", 
TRUE
, 
NULL
);

2530 
	`›t_ªg_öt
 (
odb
, "-éb:œt", "ö°/d©®TLB mis†œãncy (ö cy˛es)", &
éb_miss_œt
, 30,

2531  
TRUE
, 
NULL
);

2533 #ifde‡
NET_ALGR


2537 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:ªc_Ægr", "ª˚ivîálg‹ism f‹Çëw‹k", &
√tw‹k_ª˚ivî
, 0,

2538  
TRUE
, 
NULL
);

2539 
	`›t_ªg_öt
 (
odb
, "-√tw‹k:√t_Ægr", "c⁄Êi˘i⁄álg‹ism f‹Çëw‹k", &
√tw‹k_c⁄Êi˘
, 0,

2540  
TRUE
, 
NULL
);

2544 
	`›t_ªg_öt
 (
odb
, "-ªs:ülu", "tŸÆÇumbî o‡öãgî ALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ülu_˛u°î
, 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
,

2545  
TRUE
, 
NULL
);

2547 #i‚de‡
ALU_MERGE


2548 
	`›t_ªg_öt
 (
odb
, "-ªs:imu…", "tŸÆÇumbî o‡öãgî mu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_imu…_˛u°î
, 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
,

2549  
TRUE
, 
NULL
);

2552 
	`›t_ªg_öt
 (
odb
, "-maxThrds", "Maximum Numbî o‡Thªad†AŒowed", &
mè_maxthªads
, 1, 
TRUE
, 
NULL
);

2554 
	`›t_ªg_Êag
 (
odb
, "-Cohîít_Cache", "CohîíàCache", &
COHERENT_CACHE
, 1, 
TRUE
, 
NULL
);

2556 
	`›t_ªg_Êag
 (
odb
, "-MSI_¥Ÿ", "MSI PrŸocﬁ", &
MSI
, 0, 
TRUE
, 
NULL
);

2558 
	`›t_ªg_Êag
 (
odb
, "-SPEC", "SPEC Bíchm¨ks", &
•ec_bíchm¨ks
, 1, 
TRUE
, 
NULL
);

2560 #ifde‡ 
PORT_PER_BANK


2561 
	`›t_ªg_öt
 (
odb
, "-ªs:memb™k", "numbî o‡d©®ˇchêb™k†avaûabÀ (≥∏Clu°îÅÿCPU)", &
ªs_memb™k_˛u°î
, 2,

2562  
TRUE
, 
NULL
);

2564 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (≥∏b™k)", &
ªs_mem_p‹t_b™k
, 1,

2565  
TRUE
, 
NULL
);

2567 
	`›t_ªg_öt
 (
odb
, "-ªs:memp‹t", "tŸÆÇumbî o‡mem‹y sy°emÖ‹t†avaûabÀ (tÿCPU)", &
ªs_memp‹t
, 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
,

2568  
TRUE
, 
NULL
);

2571 
	`›t_ªg_öt
 (
odb
, "-ªs:ÂÆu", "tŸÆÇumbî o‡ÊﬂtögÖoöàALU'†avaûabÀ (≥∏˛u°î)", &
ªs_ÂÆu_˛u°î
, 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
,

2572  
TRUE
, 
NULL
);

2574 #i‚de‡
ALU_MERGE


2575 
	`›t_ªg_öt
 (
odb
, "-ªs:Âmu…", "tŸÆÇumbî o‡ÊﬂtögÖoöàmu…ùlõr/dividî†avaûabÀ (≥∏˛u°î)", &
ªs_Âmu…_˛u°î
, 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
,

2576  
TRUE
, 
NULL
);

2579 
	`›t_ªg_°rög_li°
 (
odb
, "-pc°©", "¥ofûê°©(sËagaö°Åexàaddr'†(mu… u£†ok)", 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

2580  
FALSE
, 
NULL
, 
TRUE
);

2582 
	`›t_ªg_Êag
 (
odb
, "-bugcom∑t", "›î©êö backw¨d-com∑tibÀ bug†modê(f‹Åe°ög o∆y)", &
bugcom∑t_mode
, 
FALSE
, 
TRUE
, 
NULL
);

2584 
	`›t_ªg_öt
 (
sim_odb
, "-hŸ•Ÿ:ßm∂ög_ötvl", "how m™y cy˛e†bëwì¿ˇŒ†tÿupd©e_hŸ•Ÿ_°©s", &
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
,

2585  10000, 
FALSE
, 
NULL
);

2587 
	`›t_ªg_öt
 (
odb
, "-øy:dißbÀd", "øyá˘ive", &
dißbÀ_øy
, 1,

2588  
TRUE
, 
NULL
);

2592 #ifde‡
CPU_TRACE


2593 
	`›t_ªg_°rög
(
odb
,"-˝u:åa˚","fûêf‹ cpuÖùñöêåa˚Ñec‹d",&
˝u_åa˚
, "", 
TRUE
, 
NULL
);

2595 #ifde‡
L2_TRACE


2596 
	`›t_ªg_°rög
(
odb
,"-L2:åa˚","fûêf‹ L2Åø˚Ñec‹d",&
L2_åa˚
, "", 
TRUE
, 
NULL
);

2599 
	`˛u°î_ªg_›ti⁄s
 (
odb
);

2600 
	`hŸ•Ÿ_ªg_›ti⁄s
 (
odb
);

2603 
	`√tw‹k_ªg_›ti⁄s
 (
odb
);

2604 
	}
}

2608 
	$sim_check_›ti⁄s
 (
›t_odb_t
 *
odb
,

2609 
¨gc
, **
¨gv
)

2611 
«me
[128], 
c
;

2612 
n£ts
, 
bsize
, 
assoc
;

2614 
i
;

2615 
c⁄ãxt
 *
cuºít
;

2617 #ifde‡
LOAD_PREDICTOR


2619 
ld¥ed
 = 
	`b¥ed_¸óã
 (
LDPªd2bô
,

2620  
bimod_c⁄fig
[0],

2632 #ifde‡
ISU_N2


2633 i‡(
ruu_issue_width
 < 1)

2634 
	`Áèl
 ("issue width must beÖositiveÇon-zero");

2636 i‡(
ruu_issue_width
 < 1 || (ruu_issue_width & (ruu_issue_width - 1)) != 0)

2637 
	`Áèl
 ("issue width must beÖositiveÇon-zeroándáÖower ofÅwo");

2642 
IIQ_size
 = 
IIQ_size_˛u°î
;

2643 
FIQ_size
 = 
FIQ_size_˛u°î
;

2644 
IPREG_size
 = 
IPREG_size_˛u°î
;

2645 
FPREG_size
 = 
FPREG_size_˛u°î
;

2647 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2649 i‡(
IIQ_size
 < 1)

2650 
	`Áèl
 ("integer queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2652 i‡(
FIQ_size
 < 1)

2653 
	`Áèl
 ("floatingÖoint queue must beÖositiveÇon-zeroándáÖower ofÅwo");

2655 #i‚de‡
REG_RENAME_CONFIGUARE


2656 
p_tŸÆ_ªgs
 = 
IPREG_size
 + 
FPREG_size
 + 1;

2659 i‡(
IPREG_size
 < 1)

2660 
	`Áèl
 ("integerÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2662 i‡(
FPREG_size
 < 1)

2663 
	`Áèl
 ("floatingÖointÖhysicalÑegister file must beÖositiveÇon-zeroándáÖower ofÅwo");

2665 #ifde‡
RAW


2666 
øwq_size
 = 
IIQ_size
;

2667 i‡(
øwq_size
 < 1 ||Ñawq_sizê> 
RAWSIZE
)

2668 
	`Áèl
 ("ªmŸêac˚s†queuê(%dËmu° bêposôivên⁄-zîÿ™dÜes†th™ RAWSIZE (%d)", 
øwq_size
, 
RAWSIZE
);

2671 i‡(
ruu_commô_width
 < 1)

2672 
	`Áèl
 ("commit width must beÖositiveÇon-zero");

2674 i‡(
RUU_size
 < 2 || (RUU_sizê> 
RUUSIZE
))

2675 
	`Áèl
 ("RUU sizêmu° bê®posôivênumbî > 1ánd < %d", 
RUUSIZE
);

2677 
LSQ_size
 = 
LSQ_size_˛u°î
;

2679 i‡(
LSQ_size
 < 2 || (LSQ_sizê> 
LSQSIZE
))

2680 
	`Áèl
 ("LSQ sizêmu° bê®posôivênumbî > 1ánd < %d", 
LSQSIZE
);

2684 i‡(!
	`my°ricmp
 (
ˇche_dl1_›t
, "none"))

2687 i‡(
	`°rcmp
 (
ˇche_dl2_›t
, "none"))

2688 
	`Áèl
 ("theÜ1 data cache must defined ifÅheÜ2 cache is defined");

2689 
ˇche_dl2
 = 
NULL
;

2693 i‡(
	`ssˇnf
 (
ˇche_dl1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2694 
	`Áèl
 ("badÜ1 D-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2696 
i
 = 0; i < 
CLUSTERS
; i++)

2698 
ˇche_dl1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
,

2699  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2700 
dl1_ac˚ss_‚
, 
ˇche_dl1_œt
, 
i
);

2702 #ifde‡
CACHE_SET_STAT


2703 i‡(
ˇche_dl1
[
i
]->
n£ts
 > 
MAXCACHESET
)

2704 
	`Áèl
 ("CACHE_SET_STATárrayÜimit must be > dl1->nsets");

2707 
ˇche_dl1_£t_shi·
 = 
ˇche_dl1
[0]->
£t_shi·
;

2708 
‹igöÆ_bsize
 = 
bsize
;

2710 i‡(!
	`my°ricmp
 (
ˇche_dl2_›t
, "none"))

2711 
ˇche_dl2
 = 
NULL
;

2714 i‡(
	`ssˇnf
 (
ˇche_ml2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2715 
	`Áèl
 ("badÜ2 D-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2716 
ˇche_ml2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
, 0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),
dl2_ac˚ss_‚
, 
ˇche_ml2_œt
, -1);

2717 i‡(
	`ssˇnf
 (
ˇche_dl2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2718 
	`Áèl
 ("badÜ2 D-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2719 
ˇche_dl2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
TRUE
, 0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),
dl2_ac˚ss_‚
, 
ˇche_dl2_œt
, -1);

2724 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "none"))

2726 
ˇche_û1
[0] = 
NULL
;

2729 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2730 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2731 
ˇche_û2
 = 
NULL
;

2733 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl1"))

2736 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2737 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2738 
ˇche_û2
 = 
NULL
;

2740 i‡(!
	`my°ricmp
 (
ˇche_û1_›t
, "dl2"))

2742 i‡(!
ˇche_dl2
)

2743 
	`Áèl
 ("I-cacheÜ1 cannotáccess D-cacheÜ2ás it's undefined");

2744 
ˇche_û1
[0] = 
ˇche_dl2
;

2747 i‡(
	`°rcmp
 (
ˇche_û2_›t
, "none"))

2748 
	`Áèl
 ("theÜ1 inst cache must defined ifÅheÜ2 cache is defined");

2749 
ˇche_û2
 = 
NULL
;

2753 i‡(
	`ssˇnf
 (
ˇche_û1_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2754 
	`Áèl
 ("badÜ1 I-cacheÖarms: <name>:<nsets>:<bsize>:<assoc>:<repl>");

2756 
i
 = 0; i < 
CLUSTERS
; i++)

2758 
ˇche_û1
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2759  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2760 
û1_ac˚ss_‚
, 
ˇche_û1_œt
, 
i
);

2763 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "none"))

2764 
ˇche_û2
 = 
NULL
;

2765 i‡(!
	`my°ricmp
 (
ˇche_û2_›t
, "dl2"))

2767 i‡(!
ˇche_dl2
)

2768 
	`Áèl
 ("I-cacheÜ2 cannotáccess D-cacheÜ2ás it's undefined");

2769 
ˇche_û2
 = 
ˇche_dl2
;

2773 i‡(
	`ssˇnf
 (
ˇche_û2_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2774 
	`Áèl
 ("badÜ2 I-cacheÖarms: " "<name>:<nsets>:<bsize>:<assoc>:<repl>");

2776 
ˇche_û2
 = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2777  0, 
assoc
, 
	`ˇche_ch¨2pﬁicy
 (
c
),

2778 
û2_ac˚ss_‚
, 
ˇche_û2_œt
, -1);

2783 
i
 = 0; i < 
CLUSTERS
; i++)

2785 i‡(
	`ssˇnf
 (
ôlb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2786 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2788 
ôlb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,

2789   (
md_addr_t
), 
assoc
,

2790 
	`ˇche_ch¨2pﬁicy
 (
c
), 
ôlb_ac˚ss_‚
,

2791  1, 
i
);

2794 
i
 = 0; i < 
CLUSTERS
; i++)

2796 i‡(
	`ssˇnf
 (
déb_›t
, "%[^:]:%d:%d:%d:%c", 
«me
, &
n£ts
, &
bsize
, &
assoc
, &
c
) != 5)

2797 
	`Áèl
 ("bad TLBÖarms: <name>:<nsets>:<page_size>:<assoc>:<repl>");

2798 
déb
[
i
] = 
	`ˇche_¸óã
 (
«me
, 
n£ts
, 
bsize
, 
FALSE
,  (
md_addr_t
), 
assoc
,
	`ˇche_ch¨2pﬁicy
 (
c
), 
déb_ac˚ss_‚
, 1, i);

2799 i‡–
déb
[
i
]->
èg_shi·
 !
MD_LOG_PAGE_SIZE
 )

2800 
	`∑nic
(" dtlb createÉrror!\n ");

2803 i‡(
ˇche_dl1_œt
 < 1)

2804 
	`Áèl
 ("l1 data cacheÜatency must be greaterÅhan zero");

2806 i‡(
ˇche_dl2_œt
 < 1)

2807 
	`Áèl
 ("l2 data cacheÜatency must be greaterÅhan zero");

2809 i‡(
ˇche_ml2_œt
 < 1)

2810 
	`Áèl
 ("l2 meta cacheÜatency must be greaterÅhan zero");

2812 i‡(
ˇche_û1_œt
 < 1)

2813 
	`Áèl
 ("l1 instruction cacheÜatency must be greaterÅhan zero");

2815 i‡(
ˇche_û2_œt
 < 1)

2816 
	`Áèl
 ("l2 instruction cacheÜatency must be greaterÅhan zero");

2818 i‡(
mem_√…
 != 2)

2819 
	`Áèl
 ("bad memoryáccessÜatency (<first_chunk> <inter_chunk>)");

2821 i‡(
mem_œt
[0] < 1 || mem_lat[1] < 1)

2822 
	`Áèl
 ("all memoryáccessÜatencies must be greaterÅhan zero");

2824 i‡(
mem_bus_width
 < 1 || (mem_bus_width & (mem_bus_width - 1)) != 0)

2825 
	`Áèl
 ("memory bus width must beÖositiveÇon-zeroándáÖower ofÅwo");

2827 i‡(
éb_miss_œt
 < 1)

2828 
	`Áèl
 ("TLB missÜatency must be greaterÅhan zero");

2830 
ªs_ülu
 = 
ªs_ülu_˛u°î
 * 
CLUSTERS
;

2832 i‡(
ªs_ülu
 < 1)

2833 
	`Áèl
 ("number of integer ALU's must be greaterÅhan zero");

2834 i‡(
ªs_ülu
 > 
MAX_INSTS_PER_CLASS
)

2835 
	`Áèl
 ("number of integer ALU's must be <= MAX_INSTS_PER_CLASS");

2837 
fu_c⁄fig
[
FU_IALU_INDEX
].
qu™tôy
 = 
ªs_ülu
;

2839 #i‚de‡
ALU_MERGE


2840 
ªs_imu…
 = 
ªs_imu…_˛u°î
 * 
CLUSTERS
;

2841 i‡(
ªs_imu…
 < 1)

2842 
	`Áèl
 ("number of integer multiplier/dividers must be greaterÅhan zero");

2843 i‡(
ªs_imu…
 > 
MAX_INSTS_PER_CLASS
)

2844 
	`Áèl
 ("number of integer mult/div's must be <= MAX_INSTS_PER_CLASS");

2845 
fu_c⁄fig
[
FU_IMULT_INDEX
].
qu™tôy
 = 
ªs_imu…
;

2848 #ifde‡
PORT_PER_BANK


2849 
ªs_memb™k
 = 
ªs_memb™k_˛u°î
 * 
CLUSTERS
;

2851 i‡(
ªs_memb™k
 < 1)

2852 
	`Áèl
 ("number of memory system banks must be greaterÅhan zero");

2855 #ifde‡ 
PARTITIONED_LSQ


2856 
lsq_∑π_b™k
 = 
ªs_memb™k
 / 
LSQ_PARTS
;

2858 i‡(
ªs_mem_p‹t_b™k
 < 1)

2859 
	`Áèl
 ("number of memory systemÖorts/bank must be greaterÅhan zero");

2860 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAX_INSTS_PER_CLASS
)

2861 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2862 i‡(
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
 > 
MAXCACHEPORTS
)

2863 
	`Áèl
 ("number ofÅotal memory systemÖorts must be <= MAXCACHEPORTS");

2864 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

2866 i‡(
ªs_memp‹t
 < 1)

2867 
	`Áèl
 ("number of memory systemÖorts must be greaterÅhan zero");

2868 i‡(
ªs_memp‹t
 > 
MAX_INSTS_PER_CLASS
)

2869 
	`Áèl
 ("number of memory systemÖorts must be <= MAX_INSTS_PER_CLASS");

2870 
fu_c⁄fig
[
FU_MEMPORT_INDEX
].
qu™tôy
 = 
ªs_memp‹t
;

2873 
ªs_ÂÆu
 = 
ªs_ÂÆu_˛u°î
 * 
CLUSTERS
;

2874 i‡(
ªs_ÂÆu
 < 1)

2875 
	`Áèl
 ("number of floatingÖoint ALU's must be greaterÅhan zero");

2876 i‡(
ªs_ÂÆu
 > 
MAX_INSTS_PER_CLASS
)

2877 
	`Áèl
 ("number of floatingÖoint ALU's must be <= MAX_INSTS_PER_CLASS");

2878 
fu_c⁄fig
[
FU_FPALU_INDEX
].
qu™tôy
 = 
ªs_ÂÆu
;

2880 #i‚de‡
ALU_MERGE


2881 
ªs_Âmu…
 = 
ªs_Âmu…_˛u°î
 * 
CLUSTERS
;

2882 i‡(
ªs_Âmu…
 < 1)

2883 
	`Áèl
 ("number of floatingÖoint multiplier/dividers must be > zero");

2884 i‡(
ªs_Âmu…
 > 
MAX_INSTS_PER_CLASS
)

2885 
	`Áèl
 ("number of FP mult/div's must be <= MAX_INSTS_PER_CLASS");

2886 
fu_c⁄fig
[
FU_FPMULT_INDEX
].
qu™tôy
 = 
ªs_Âmu…
;

2888 #ifde‡
TOKENB


2889 i‡(
tokíB
)

2890 
	`tc_öô
 (
MAXTHREADS
, 
ˇche_dl2
->
assoc
 * cache_dl2->
n£ts
, cache_dl2->
bsize
);

2891 i‡(
LSQ_PARTS
 !(
n_way_ˇche
 * 
MAXTHREADS
))

2892 
	`Áèl
 ("This only supports 1 cacheÖerÅhread");

2894 
	`√tw‹k_check_›ti⁄s
 ();

2895 
	`˛u°î_check_›ti⁄s
 ();

2896 
	`öô_lök_des¸_èbÀs
 ();

2897 
	`öô_routög_èbÀ
 ();

2898 
	`¨bôøry_routög_èbÀ_öô
 ();

2899 
	}
}

2903 
	$sim_aux_c⁄fig
 (
FILE
 * 
°ªam
)

2906 
	}
}

2909 
cou¡î_t
 
	gtŸÆUpgødes
 = 0;

2910 
cou¡î_t
 
	gtŸÆNëUpgødes
 = 0;

2911 
cou¡î_t
 
	gtŸÆUpgødesUßbÀ
 = 0;

2912 
cou¡î_t
 
	gtŸÆUpgødesBíeficül
 = 0;

2913 
cou¡î_t
 
	glock_√tw‹k_ac˚ss
 = 0;

2916 
cou¡î_t
 
	gªq_•™d
[261];

2917 
cou¡î_t
 
	g•™d
[5];

2918 
cou¡î_t
 
	gdowngøde_w
, 
	gdowngøde_r
;

2920 
cou¡î_t
 
sh¨î_di°r
[
MAXTHREADS
];

2921 
cou¡î_t
 
tŸÆ_c‹√r_∑ckës
, 
tŸÆ_√ighb‹_∑ckës
, 
tŸÆ_Ár_∑ckës
;

2923 
cou¡î_t
 
	gtŸÆNëWrôes
 = 0;

2924 
cou¡î_t
 
	gtŸÆWrôesUßbÀ
 = 0;

2925 
cou¡î_t
 
	gtŸÆWrôesBíeficül
 = 0;

2926 
cou¡î_t
 
	gex˛usive_somewhîe
 = 0;

2927 
cou¡î_t
 
	g‰⁄t_wrôe
 = 0;

2930 
cou¡î_t
 
	gtŸÆL2WrôeReqHôs
 = 0;

2931 
cou¡î_t
 
	gtŸÆL2WrôeReqNoSh¨î
 = 0;

2932 
cou¡î_t
 
	gtŸÆL2WrôeReqDúty
 = 0;

2933 
cou¡î_t
 
	gdñayL2WrôeReqDúty
 = 0;

2934 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨ed
 = 0;

2935 
cou¡î_t
 
	gdñayL2WrôeReqSh¨ed
 = 0;

2937 
cou¡î_t
 
	gtŸÆL2RódReqHôs
 = 0;

2938 
cou¡î_t
 
	gtŸÆL2RódReqNoSh¨î
 = 0;

2939 
cou¡î_t
 
	gtŸÆL2RódReqDúty
 = 0;

2940 
cou¡î_t
 
	gdñayL2RódReqDúty
 = 0;

2942 
cou¡î_t
 
	gtŸÆL2RódReqSh¨ed
 = 0;

2943 
cou¡î_t
 
	gtŸÆL2WrôeReqSh¨edWT
 = 0;

2944 
cou¡î_t
 
	gtŸÆL2WrôeReqDútyWT
 = 0;

2945 
cou¡î_t
 
	gtŸÆL2RódReqDútyWT
 = 0;

2947 
cou¡î_t
 
	gtŸÆL1LöePªfU£
 = 0;

2948 
cou¡î_t
 
	gtŸÆL1LöePªfNoU£
 = 0;

2949 
cou¡î_t
 
	gtŸÆL1LöeRódU£
 = 0;

2950 
cou¡î_t
 
	gtŸÆL1LöeRódNoU£
 = 0;

2951 
cou¡î_t
 
	gtŸÆL1LöeWrôeU£
 = 0;

2952 
cou¡î_t
 
	gtŸÆL1LöeWrôeNoU£
 = 0;

2954 
cou¡î_t
 
	gtŸÆL1LöeExlU£d
 = 0;

2955 
cou¡î_t
 
	gtŸÆL1LöeExlInv
 = 0;

2956 
cou¡î_t
 
	gtŸÆL1LöeExlDr›
 = 0;

2958 
cou¡î_t
 
	gtŸÆL2ReqPrimMiss
 = 0;

2959 
cou¡î_t
 
	gtŸÆL2ReqSecMiss
 = 0;

2960 
cou¡î_t
 
	gtŸÆL2ReqHô
 = 0;

2961 
cou¡î_t
 
	gtŸÆL2ReqInTøns
 = 0;

2962 
cou¡î_t
 
	gtŸÆL2OwnReqInTøns
 = 0;

2963 
cou¡î_t
 
	gtŸÆL2ReqInInv
 = 0;

2965 
cou¡î_t
 
	gdñayL2ReqPrimMiss
 = 0;

2966 
cou¡î_t
 
	gdñayL2ReqSecMiss
 = 0;

2967 
cou¡î_t
 
	gdñayL2ReqHô
 = 0;

2968 
cou¡î_t
 
	gdñayL2ReqInTøns
 = 0;

2969 
cou¡î_t
 
	gdñayL2OwnReqInTøns
 = 0;

2970 
cou¡î_t
 
	gdñayL2ReqInInv
 = 0;

2972 
cou¡î_t
 
	gtŸÆWrôeReq
 = 0;

2973 
cou¡î_t
 
	gtŸÆWrôeReqInv
 = 0;

2974 
cou¡î_t
 
	gtŸÆWrôeDñay
 = 0;

2975 
cou¡î_t
 
	gtŸÆWrôeInvDñay
 = 0;

2976 
cou¡î_t
 
	gtŸÆUpgødeReq
 = 0;

2977 
cou¡î_t
 
	gtŸÆUpgødeReqInv
 = 0;

2978 
cou¡î_t
 
	gtŸÆUpgødeDñay
 = 0;

2979 
cou¡î_t
 
	gtŸÆUpgødeInvDñay
 = 0;

2981 
cou¡î_t
 
	gcou¡N⁄AŒocRódE¨ly
 = 0;

2985 
	$sim_ªg_°©s
 (
°©_sdb_t
 *
sdb
)

2987 
i
, 
j
;

2991 
	`°©_ªg_cou¡î
 (
sdb
, "puª_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
puª_num_ö¢
,Öuª_num_ö¢, 
NULL
);

2992 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãd in˛udög synchr⁄iz©i⁄ in°ru˘i⁄s", &
tŸÆ_num_ö¢
,ÅŸÆ_num_ö¢, 
NULL
);

2993 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆB¨rõrs", "tŸÆÇumbî o‡b¨rõrs", &
TŸÆB¨rõrs
, 0, 
NULL
);

2994 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆLocks", "tŸÆÇumbî o‡locks", &
TŸÆLocks
, 0, 
NULL
);

2995 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†commôãd", &
sim_num_ªfs
, 0, 
NULL
);

2996 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_lﬂds", "tŸÆÇumbî o‡lﬂd†commôãd", &
sim_num_lﬂds
, 0, 
NULL
);

2997 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_num_°‹es", "tŸÆÇumbî o‡°‹e†commôãd", "sim_num_ªf†- sim_num_lﬂds", 
NULL
);

2998 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_bønches", "tŸÆÇumbî o‡bønche†commôãd", &
sim_num_bønches
, 0, 
NULL
);

2999 
	`°©_ªg_öt
 (
sdb
, "sim_ñ≠£d_time", "tŸÆ simuœti⁄Åimêö sec⁄ds", &
sim_ñ≠£d_time
, 0, 
NULL
);

3000 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_ö°_øã", "simuœti⁄ s≥ed (ö in°s/£c)", "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

3001 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†execuãd", &
sim_tŸÆ_ö¢
, 0, 
NULL
);

3002 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_ªfs", "tŸÆÇumbî o‡lﬂd†™d st‹e†execuãd", &
sim_tŸÆ_ªfs
, 0, 
NULL
);

3003 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_lﬂds", "tŸÆÇumbî o‡lﬂd†execuãd", &
sim_tŸÆ_lﬂds
, 0, 
NULL
);

3004 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_tŸÆ_°‹es", "tŸÆÇumbî o‡°‹e†execuãd", "sim_tŸÆ_ªf†- sim_tŸÆ_lﬂds", 
NULL
);

3005 
	`°©_ªg_cou¡î
 (
sdb
, "sim_tŸÆ_bønches", "tŸÆÇumbî o‡bønche†execuãd", &
sim_tŸÆ_bønches
, 0, 
NULL
);

3008 
	`°©_ªg_cou¡î
 (
sdb
, "ªÆSimCy˛e", "", &
ªÆSimCy˛e
, 0, 
NULL
);

3009 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_IPC", "ö°ru˘i⁄†≥∏cy˛e", "sim_num_ö¢ / sim_cy˛e", 
NULL
);

3010 
	`°©_ªg_f‹muœ
 (
sdb
, "ªÆSimIPC", "", "puª_num_ö¢ /ÑólSimCy˛e", 
NULL
);

3011 
	`°©_ªg_f‹muœ
 (
sdb
, "maöEf„˘iveIPC", "", "puª_num_ö¢ / (ªÆSimCy˛ê- maö_thªad_°Æl_cou¡)", 
NULL
);

3012 
	`°©_ªg_cou¡î
 (
sdb
, "num_of_övÆid©i⁄s", "Numbî_Of_VÆid©i⁄s", &
num_of_övÆid©i⁄s
, 0, 
NULL
);

3014 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

3015 
	`°©_ªg_cou¡î
 (
sdb
, "busU£d", "Numbî o‡time†bu†i†u£d", &
busU£d
, 0, 
NULL
);

3016 
	`°©_ªg_cou¡î
 (
sdb
, "busOccu∑ncy", "Occu∑ncy o‡bu†öÇumbî o‡cy˛es", &
busOccu∑ncy
, 0, 
NULL
);

3017 
	`°©_ªg_f‹muœ
 (
sdb
, "busOccu∑ncyPîCy˛e", "Bu†occu∑ncyÖî cy˛e", "busOccu∑ncy /ÑólSimCy˛e", 
NULL
);

3018 
	`°©_ªg_cou¡î
 (
sdb
, "°ÆlNoBusSlŸ", "°ÆlNoBusSlŸ", &
°ÆlNoBusSlŸ
, 0, 
NULL
);

3020 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_CPI", "cy˛e†≥∏ö°ru˘i⁄", "sim_cy˛ê/ sim_num_ö¢", 
NULL
);

3021 
	`°©_ªg_f‹muœ
 (
sdb
, "sim_exec_BW", "tŸÆ in°ru˘i⁄†(mis-•e¯+ commôãdË≥∏cy˛e", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

3022 
	`°©_ªg_cou¡î
 (
sdb
, "ldIssueCou¡", "tŸÆÜd issuê©tmït", &
ldIssueCou¡
, 0, 
NULL
);

3023 #ifde‡
PULL_BACK


3024 
ch2
[32];

3026 
i
 = 0; i < 
numc⁄ãxts
; i++)

3028 
	`•rötf
 (
ch2
, "puŒbackCy˛eC¡_%d", 
i
);

3029 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
puŒbackCy˛eCou¡
[
i
], 0, 
NULL
);

3032 
	`°©_ªg_cou¡î
 (
sdb
, "max_lsq_num", "", &
LSQ_NUM_MORE_THAN_TWO
, 0, 
NULL
);

3033 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†öáŒ", &
TŸÆD©aPackësInAŒ
, 0, 
NULL
);

3034 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†öáŒ", &
TŸÆMëaPackësInAŒ
, 0, 
NULL
);

3035 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_sync_cou¡s", "tŸÆÇum o‡d©®syn¯∑ckë†öáŒ", &
TŸÆSyncD©aPackës
, 0, 
NULL
);

3036 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mëa_sync_cou¡s", "tŸÆÇum o‡më®syn¯∑ckë†öáŒ", &
TŸÆSyncMëaPackës
, 0, 
NULL
);

3037 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›tiˇl_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†ö o±iˇ»√tw‹k", &
›tiˇl_d©a_∑ckës
, 0, 
NULL
);

3038 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›tiˇl_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†ö o±iˇ»√tw‹k", &
›tiˇl_mëa_∑ckës
, 0, 
NULL
);

3039 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_d©a_cou¡s", "tŸÆÇum o‡d©®∑ckë†ö meshÇëw‹k", &
mesh_d©a_∑ckës
, 0, 
NULL
);

3040 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_mëa_cou¡s", "tŸÆÇum o‡më®∑ckë†ö meshÇëw‹k", &
mesh_mëa_∑ckës
, 0, 
NULL
);

3041 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_wrôeup", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆSyncWrôeup
, 0, 
NULL
);

3042 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_wrôemiss", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆSyncWrôeM
, 0, 
NULL
);

3043 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_ªadmiss", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆSyncRódM
, 0, 
NULL
);

3044 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_evít_cou¡", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆN‹mÆEvít
, 0, 
NULL
);

3045 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_evít_cou¡", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆSyncEvít
, 0, 
NULL
);

3046 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_evít_cou¡", "tŸÆÇum o‡evíàöôÆ cª©ed", &
tŸÆevítcou¡num
, 0, 
NULL
);

3047 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_wrôe_ödiˇã", "", &
tŸÆWrôeIndiˇã
, 0, 
NULL
);

3048 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ex˛usive_modifõd", "", &
tŸÆ_ex˛usive_modifõd
, 0, 
NULL
);

3049 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ex˛usive_c⁄f", "", &
tŸÆ_ex˛usive_c⁄f
, 0, 
NULL
);

3050 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ex˛usive_¸oss", "", &
tŸÆ_ex˛usive_¸oss
, 0, 
NULL
);

3051 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_wb_óæy", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
wrôe_back_óæy
, 0, 
NULL
);

3052 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_¥e„tch
, 0, 
NULL
);

3053 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l2_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL2Öª„tch", &
l2_¥e„tch_num
, 0, 
NULL
);

3054 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_fú°_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_fú°_¥e„tch
, 0, 
NULL
);

3055 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_£c_cou¡", "tŸÆÇum o‡evíà¸óãd duêtÿL1Öª„tch", &
tŸÆ_L1_£c_¥e„tch
, 0, 
NULL
);

3056 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_u£fuŒ", "tŸÆÇum o‡u£fuŒ L1Öª„tch", &
L1_¥e„tch_u£fuŒ
, 0, 
NULL
);

3057 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_l1_wrôó·î", "tŸÆÇum o‡u£fuŒ L1Öª„tch", &
L1_¥e„tch_wrôó·î
, 0, 
NULL
);

3059 
	`°©_ªg_cou¡î
 (
sdb
, "sim_num_ö¢", "tŸÆÇumbî o‡ö°ru˘i⁄†commôãdÇŸ in˛udög c⁄si°ícyÑïœy in°ru˘i⁄s", &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

3060 
	`°©_ªg_cou¡î
 (
sdb
, "sim_cy˛ê ", "tŸÆ simuœti⁄Åimêö cy˛es", &
sim_cy˛e
, 0, 
NULL
);

3061 
	`°©_ªg_cou¡î
 (
sdb
, "ª∂a˚_hi°‹y ", "dïth o‡ª∂a˚ hi°‹y", &
ª∂a˚_hi°‹y_dïth
, 
REPLACE_HISTORY
, 
NULL
);

3062 
	`°©_ªg_cou¡î
 (
sdb
, "cohîí˚_hi°‹y ", "dïth o‡cohîí˚ hi°‹y", &
cohîí˚_hi°‹y_dïth
, 
COHERENCE_HISTORY
, 
NULL
);

3063 
	`°©_ªg_cou¡î
 (
sdb
, "¥e„tch_ª∂a˚_hi°‹y ", "dïth o‡¥e„tchÑïœ˚ hi°‹y", &
¥e„tch_ª∂a˚_hi°‹y_dïth
, 
PREFETCH_REPLACE_HISTORY
, 
NULL
);

3064 
	`°©_ªg_cou¡î
 (
sdb
, "L1_miss_èbÀ_sizê ", "L1_miss_èbÀ_size", &
L1_miss_èbÀ_size
, 
L1_MISS_TABLE_SIZE
, 
NULL
);

3065 
	`°©_ªg_cou¡î
 (
sdb
, "L1_°ªam_íåõ† ", "L1_°ªam_íåõs", &
L1_°ªam_íåõs
, 
L1_STREAM_ENTRIES
, 
NULL
);

3066 
	`°©_ªg_cou¡î
 (
sdb
, "L2_miss_èbÀ_sizê ", "L2_miss_èbÀ_size", &
L2_miss_èbÀ_size
, 
L2_MISS_TABLE_SIZE
, 
NULL
);

3067 
	`°©_ªg_cou¡î
 (
sdb
, "L2_°ªam_íåõ† ", "L2_°ªam_íåõs", &
L2_°ªam_íåõs
, 
L2_STREAM_ENTRIES
, 
NULL
);

3069 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆ_MëaPackës_Num ", "tŸÆÇumbî o‡MëaPackës", &
TŸÆ_MëaPackës_1
, 0, 
NULL
);

3070 
	`°©_ªg_cou¡î
 (
sdb
, "TŸÆ_D©aPackës_Num ", "tŸÆÇumbî o‡D©aPackës", &
TŸÆ_D©aPackës_1
, 0, 
NULL
);

3072 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_MEM_L2Pª„tch_Req ", "tŸÆ_L2_MEM_L2Pª„tch_Req", &
tŸÆ_L2_MEM_L2Pª„tch_Req
, 0, 
NULL
);

3073 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_MEM_D©a_Miss_Req ", "tŸÆ_L2_MEM_D©a_Miss_Req", &
tŸÆ_L2_MEM_D©a_Miss_Req
, 0, 
NULL
);

3074 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_MEM_In°_Miss_Req ", "tŸÆ_L2_MEM_In°_Miss_Req", &
tŸÆ_L2_MEM_In°_Miss_Req
, 0, 
NULL
);

3075 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_MEM_L2_D©a_Paylﬂd ", "tŸÆ_MEM_L2_D©a_Paylﬂd", &
tŸÆ_MEM_L2_D©a_Paylﬂd
, 0, 
NULL
);

3076 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_MEM_L2_In°_Paylﬂd ", "tŸÆ_MEM_L2_In°_Paylﬂd", &
tŸÆ_MEM_L2_In°_Paylﬂd
, 0, 
NULL
);

3077 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_MEM_D©a_Paylﬂd ", "tŸÆ_L2_MEM_D©a_Paylﬂd", &
tŸÆ_L2_MEM_D©a_Paylﬂd
, 0, 
NULL
);

3078 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_In°_Miss_Req ", "tŸÆ_L1_L2_In°_Miss_Req", &
tŸÆ_L1_L2_In°_Miss_Req
, 0, 
NULL
);

3079 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_In°_Paylﬂd ", "tŸÆ_L2_L1_In°_Paylﬂd", &
tŸÆ_L2_L1_In°_Paylﬂd
, 0, 
NULL
);

3080 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Ród_Miss_Req ", "tŸÆ_L1_L2_D©a_Ród_Miss_Req", &
tŸÆ_L1_L2_D©a_Ród_Miss_Req
, 0, 
NULL
);

3081 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Ród_Miss_Paylﬂd ", "tŸÆ_L2_L1_D©a_Ród_Miss_Paylﬂd", &
tŸÆ_L2_L1_D©a_Ród_Miss_Paylﬂd
, 0, 
NULL
);

3082 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Ród_InvÆid ", "tŸÆ_L2_L1_D©a_Ród_InvÆid", &
tŸÆ_L2_L1_D©a_Ród_InvÆid
, 0, 
NULL
);

3083 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Ród_InvÆid_Ack ", "tŸÆ_L1_L2_D©a_Ród_InvÆid_Ack", &
tŸÆ_L1_L2_D©a_Ród_InvÆid_Ack
, 0, 
NULL
);

3084 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Ród_InvÆid_Paylﬂd ", "tŸÆ_L1_L2_D©a_Ród_InvÆid_Paylﬂd", &
tŸÆ_L1_L2_D©a_Ród_InvÆid_Paylﬂd
, 0, 
NULL
);

3085 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Wrôe_Miss_Req ", "tŸÆ_L1_L2_D©a_Wrôe_Miss_Req", &
tŸÆ_L1_L2_D©a_Wrôe_Miss_Req
, 0, 
NULL
);

3086 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Wrôe_Miss_Paylﬂd ", "tŸÆ_L2_L1_D©a_Wrôe_Miss_Paylﬂd", &
tŸÆ_L2_L1_D©a_Wrôe_Miss_Paylﬂd
, 0, 
NULL
);

3087 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_L2ª∂a˚d_InvÆid ", "tŸÆ_L2_L1_D©a_L2ª∂a˚d_InvÆid", &
tŸÆ_L2_L1_D©a_L2ª∂a˚d_InvÆid
, 0, 
NULL
);

3088 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Wrôe_InvÆid ", "tŸÆ_L2_L1_D©a_Wrôe_InvÆid", &
tŸÆ_L2_L1_D©a_Wrôe_InvÆid
, 0, 
NULL
);

3089 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Ack ", "tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Ack", &
tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Ack
, 0, 
NULL
);

3090 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Ack ", "tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Ack", &
tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Ack
, 0, 
NULL
);

3091 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Paylﬂd ", "tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Paylﬂd", &
tŸÆ_L1_L2_D©a_L2ª∂a˚d_InvÆid_Paylﬂd
, 0, 
NULL
);

3092 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Paylﬂd ", "tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Paylﬂd", &
tŸÆ_L1_L2_D©a_Wrôe_InvÆid_Paylﬂd
, 0, 
NULL
);

3093 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Wrôe_Upd©ê ", "tŸÆ_L1_L2_D©a_Wrôe_Upd©e", &
tŸÆ_L1_L2_D©a_Wrôe_Upd©e
, 0, 
NULL
);

3094 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Wrôe_Upd©e_Ack ", "tŸÆ_L2_L1_D©a_Wrôe_Upd©e_Ack", &
tŸÆ_L2_L1_D©a_Wrôe_Upd©e_Ack
, 0, 
NULL
);

3095 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_D©a_Wrôeback_Paylﬂd ", "tŸÆ_L1_L2_D©a_Wrôeback_Paylﬂd", &
tŸÆ_L1_L2_D©a_Wrôeback_Paylﬂd
, 0, 
NULL
);

3096 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Vîify_Ack ", "tŸÆ_L2_L1_D©a_Vîify_Ack", &
tŸÆ_L2_L1_D©a_Vîify_Ack
, 0, 
NULL
);

3097 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Vîify_Pœylﬂd ", "tŸÆ_L2_L1_D©a_Vîify_Pœylﬂd", &
tŸÆ_L2_L1_D©a_Vîify_Pœylﬂd
, 0, 
NULL
);

3098 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_D©a_Pª„tch_Pœylﬂd_PPP ", "tŸÆ_L2_L1_D©a_Pª„tch_Pœylﬂd_PPP", &
tŸÆ_L2_L1_D©a_Pª„tch_Pœylﬂd_PPP
, 0, 
NULL
);

3099 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_Ród_Vîify_Req ", "tŸÆ_L1_L2_Ród_Vîify_Req", &
tŸÆ_L1_L2_Ród_Vîify_Req
, 0, 
NULL
);

3100 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_Wrôe_Vîify_Req ", "tŸÆ_L1_L2_Wrôe_Vîify_Req", &
tŸÆ_L1_L2_Wrôe_Vîify_Req
, 0, 
NULL
);

3101 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_shr_éb_miss_Req ", "tŸÆ_L1_L2_shr_éb_miss_Req", &
tŸÆ_L1_L2_shr_éb_miss_Req
, 0, 
NULL
);

3102 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_shr_éb_wrôe_back_Req ", "tŸÆ_L1_L2_shr_éb_wrôe_back_Req", &
tŸÆ_L1_L2_shr_éb_wrôe_back_Req
, 0, 
NULL
);

3103 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_shr_éb_§_ªcovîy_Req ", "tŸÆ_L1_L2_shr_éb_§_ªcovîy_Req", &
tŸÆ_L1_L2_shr_éb_§_ªcovîy_Req
, 0, 
NULL
);

3104 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_shr_éb_upd©e_¥_ack_Req ", "tŸÆ_L1_L2_shr_éb_upd©e_¥_ack_Req", &
tŸÆ_L1_L2_shr_éb_upd©e_¥_ack_Req
, 0, 
NULL
);

3105 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_shr_éb_upd©e_pw_ack_Req ", "tŸÆ_L1_L2_shr_éb_upd©e_pw_ack_Req", &
tŸÆ_L1_L2_shr_éb_upd©e_pw_ack_Req
, 0, 
NULL
);

3106 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_shr_éb_ªcovîy_ack_Req ", "tŸÆ_L1_L2_shr_éb_ªcovîy_ack_Req", &
tŸÆ_L1_L2_shr_éb_ªcovîy_ack_Req
, 0, 
NULL
);

3107 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_dú_éb_ªfûl_Req ", "tŸÆ_L1_L2_dú_éb_ªfûl_Req", &
tŸÆ_L1_L2_dú_éb_ªfûl_Req
, 0, 
NULL
);

3108 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_dú_éb_upd©e_Req ", "tŸÆ_L1_L2_dú_éb_upd©e_Req", &
tŸÆ_L1_L2_dú_éb_upd©e_Req
, 0, 
NULL
);

3109 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_dú_éb_ªcovîy_Req ", "tŸÆ_L1_L2_dú_éb_ªcovîy_Req", &
tŸÆ_L1_L2_dú_éb_ªcovîy_Req
, 0, 
NULL
);

3110 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_L1_dú_shr_ªad ", "tŸÆ_L2_L1_dú_shr_ªad", &
tŸÆ_L2_L1_dú_shr_ªad
, 0, 
NULL
);

3111 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_ack_shr_ªad ", "tŸÆ_L1_L2_ack_shr_ªad", &
tŸÆ_L1_L2_ack_shr_ªad
, 0, 
NULL
);

3112 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_L2_öf‹m_back ", "tŸÆ_L1_L2_öf‹m_back", &
tŸÆ_L1_L2_öf‹m_back
, 0, 
NULL
);

3113 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_TSHR_FuŒ ", "tŸÆ_TSHR_FuŒ", &
tŸÆ_TSHR_FuŒ
, 0, 
NULL
);

3116 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚s† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss", &
Àvñ1_d©a_ˇche_ac˚ss_num
, 0, 
NULL
);

3117 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_num
, 0, 
NULL
);

3118 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôê ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_num
, 0, 
NULL
);

3119 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad_hô ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad_hô", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_hô_num
, 0, 
NULL
);

3120 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad_miss", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_miss_num
, 0, 
NULL
);

3121 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad_compuls‹y_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad_compuls‹y_miss", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_compuls‹y_miss_num
, 0, 
NULL
);

3122 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad_ˇ∑côy_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad_ˇ∑côy_miss", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_ˇ∑côy_miss_num
, 0, 
NULL
);

3123 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad_cohîí˚_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad_cohîí˚_miss", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_cohîí˚_miss_num
, 0, 
NULL
);

3124 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_ªad_¥e„tch_ˇ∑côy_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_ªad_¥e„tch_ˇ∑côy_miss", &
Àvñ1_d©a_ˇche_ac˚ss_ªad_¥e„tch_ˇ∑côy_miss_num
, 0, 
NULL
);

3125 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_miss", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_miss_num
, 0, 
NULL
);

3126 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_compuls‹y_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_compuls‹y_miss", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_compuls‹y_miss_num
, 0, 
NULL
);

3127 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_ˇ∑côy_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_ˇ∑côy_miss", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_ˇ∑côy_miss_num
, 0, 
NULL
);

3128 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_cohîí˚_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_cohîí˚_miss", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_cohîí˚_miss_num
, 0, 
NULL
);

3129 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_¥e„tch_ˇ∑côy_mis† ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_¥e„tch_ˇ∑côy_miss", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_¥e„tch_ˇ∑côy_miss_num
, 0, 
NULL
);

3130 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇ» ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_loˇl", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_num
, 0, 
NULL
);

3131 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_FPP ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_loˇl_FPP", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_loˇl_FPP_num
, 0, 
NULL
);

3132 
	`°©_ªg_cou¡î
 (
sdb
, "Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©ê ", "tŸÆÇum o‡Àvñ1 d©®ˇche_ac˚ss_wrôe_upd©e", &
Àvñ1_d©a_ˇche_ac˚ss_wrôe_upd©e_num
, 0, 
NULL
);

3135 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_L1_miss_L2_hô_num ", "ªad L1 mis†L2 hôÇum ", &
ªad_L1_miss_L2_hô_num
, 0, 
NULL
);

3136 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_L1_miss_L2_hô_tŸÆ_timê ", "ªad L1 mis†L2 hôÅŸÆÅime", &
ªad_L1_miss_L2_hô_tŸÆ_time
, 0, 
NULL
);

3137 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_L2_miss_num ", "ªad L2 mis†num", &
ªad_L2_miss_num
, 0, 
NULL
);

3138 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_L2_miss_tŸÆ_timê ", "ªad L2 mis†tŸÆÅimê", &
ªad_L2_miss_tŸÆ_time
, 0, 
NULL
);

3139 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_L1_miss_L2_hô_num ", "wrôêL1 mis†L2 hôÇum", &
wrôe_L1_miss_L2_hô_num
, 0, 
NULL
);

3140 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_L1_miss_L2_hô_tŸÆ_timê ", "wrôêL1 mis†L2 hôÅŸÆÅime", &
wrôe_L1_miss_L2_hô_tŸÆ_time
, 0, 
NULL
);

3141 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_L2_miss_num ", "wrôêL2 mis†num", &
wrôe_L2_miss_num
, 0, 
NULL
);

3142 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_L2_miss_tŸÆ_timê ", "wrôêL2 mis†tŸÆÅime", &
wrôe_L2_miss_tŸÆ_time
, 0, 
NULL
);

3146 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ge_num ", "tŸÆ_∑ge_num", &
tŸÆ_∑ge_num
, 0, 
NULL
);

3147 
	`°©_ªg_cou¡î
 (
sdb
, "¥_∑ge_num ", "¥_∑ge_num", &
¥_∑ge_num
, 0, 
NULL
);

3148 
	`°©_ªg_cou¡î
 (
sdb
, "pw_∑ge_num ", "pw_∑ge_num", &
pw_∑ge_num
, 0, 
NULL
);

3149 
	`°©_ªg_cou¡î
 (
sdb
, "§_∑ge_num ", "§_∑ge_num", &
§_∑ge_num
, 0, 
NULL
);

3150 
	`°©_ªg_cou¡î
 (
sdb
, "sw_∑ge_num ", "sw_∑ge_num", &
sw_∑ge_num
, 0, 
NULL
);

3151 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_löe_num ", "tŸÆ_löe_num", &
tŸÆ_löe_num
, 0, 
NULL
);

3152 
	`°©_ªg_cou¡î
 (
sdb
, "¥_löe_num ", "¥_löe_num", &
¥_löe_num
, 0, 
NULL
);

3153 
	`°©_ªg_cou¡î
 (
sdb
, "pw_löe_num ", "pw_löe_num", &
pw_löe_num
, 0, 
NULL
);

3154 
	`°©_ªg_cou¡î
 (
sdb
, "§_löe_num ", "§_löe_num", &
§_löe_num
, 0, 
NULL
);

3155 
	`°©_ªg_cou¡î
 (
sdb
, "sw_löe_num ", "sw_löe_num", &
sw_löe_num
, 0, 
NULL
);

3156 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_tŸÆ_löê ", "SWP_tŸÆ_löe", &
SWP_tŸÆ_löe
, 0, 
NULL
);

3157 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_sw_löê ", "SWP_sw_löe", &
SWP_sw_löe
, 0, 
NULL
);

3158 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_§_löê ", "SWP_§_löe", &
SWP_§_löe
, 0, 
NULL
);

3159 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_pw_löê ", "SWP_pw_löe", &
SWP_pw_löe
, 0, 
NULL
);

3160 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_¥_löê ", "SWP_¥_löe", &
SWP_¥_löe
, 0, 
NULL
);

3162 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_num ", "ªˇŒ_num", &
ªˇŒ_num
, 0, 
NULL
);

3163 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_num ", "ªˇŒ_öv_num", &
ªˇŒ_öv_num
, 0, 
NULL
);

3165 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_öv_S_num ", "ªad_öv_S_num", &
ªad_öv_S_num
, 0, 
NULL
);

3166 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_öv_QH_num ", "ªad_öv_QH_num", &
ªad_öv_QH_num
, 0, 
NULL
);

3167 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_öv_e_QM_num ", "ªad_öv_e_QM_num", &
ªad_öv_e_QM_num
, 0, 
NULL
);

3168 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_öv_d_QM_num ", "ªad_öv_d_QM_num", &
ªad_öv_d_QM_num
, 0, 
NULL
);

3170 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_d_S_num ", "wrôe_öv_d_S_num", &
wrôe_öv_d_S_num
, 0, 
NULL
);

3171 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_e_S_num ", "wrôe_öv_e_S_num", &
wrôe_öv_e_S_num
, 0, 
NULL
);

3172 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_s_S_num ", "wrôe_öv_s_S_num", &
wrôe_öv_s_S_num
, 0, 
NULL
);

3173 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_i_S_num ", "wrôe_öv_i_S_num", &
wrôe_öv_i_S_num
, 0, 
NULL
);

3175 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_d_QM_num ", "wrôe_öv_d_QM_num", &
wrôe_öv_d_QM_num
, 0, 
NULL
);

3176 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_e_QM_num ", "wrôe_öv_e_QM_num", &
wrôe_öv_e_QM_num
, 0, 
NULL
);

3177 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_s_QM_num ", "wrôe_öv_s_QM_num", &
wrôe_öv_s_QM_num
, 0, 
NULL
);

3178 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_i_QM_num ", "wrôe_öv_i_QM_num", &
wrôe_öv_i_QM_num
, 0, 
NULL
);

3180 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_d_QH_num ", "wrôe_öv_d_QH_num", &
wrôe_öv_d_QH_num
, 0, 
NULL
);

3181 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_e_QH_num ", "wrôe_öv_e_QH_num", &
wrôe_öv_e_QH_num
, 0, 
NULL
);

3182 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_s_QH_num ", "wrôe_öv_s_QH_num", &
wrôe_öv_s_QH_num
, 0, 
NULL
);

3183 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_öv_i_QH_num ", "wrôe_öv_i_QH_num", &
wrôe_öv_i_QH_num
, 0, 
NULL
);

3185 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_d_S_num ", "ªˇŒ_öv_d_S_num", &
ªˇŒ_öv_d_S_num
, 0, 
NULL
);

3186 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_e_S_num ", "ªˇŒ_öv_e_S_num", &
ªˇŒ_öv_e_S_num
, 0, 
NULL
);

3187 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_s_S_num ", "ªˇŒ_öv_s_S_num", &
ªˇŒ_öv_s_S_num
, 0, 
NULL
);

3188 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_i_S_num ", "ªˇŒ_öv_i_S_num", &
ªˇŒ_öv_i_S_num
, 0, 
NULL
);

3190 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_d_Q_num ", "ªˇŒ_öv_d_Q_num", &
ªˇŒ_öv_d_Q_num
, 0, 
NULL
);

3191 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_e_Q_num ", "ªˇŒ_öv_e_Q_num", &
ªˇŒ_öv_e_Q_num
, 0, 
NULL
);

3192 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_s_Q_num ", "ªˇŒ_öv_s_Q_num", &
ªˇŒ_öv_s_Q_num
, 0, 
NULL
);

3193 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_i_Q_num ", "ªˇŒ_öv_i_Q_num", &
ªˇŒ_öv_i_Q_num
, 0, 
NULL
);

3195 
	`°©_ªg_cou¡î
 (
sdb
, "SW_ªad_ªque°_num ", "SW_ªad_ªque°_num", &
SW_ªad_ªque°_num
, 0, 
NULL
);

3196 
	`°©_ªg_cou¡î
 (
sdb
, "SW_wrôe_ªque°_num ", "SW_wrôe_ªque°_num", &
SW_wrôe_ªque°_num
, 0, 
NULL
);

3198 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_S_hô_num ", "ªad_S_hô_num", &
ªad_S_hô_num
, 0, 
NULL
);

3199 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_Q_hô_num ", "ªad_Q_hô_num", &
ªad_Q_hô_num
, 0, 
NULL
);

3200 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_Q_öô_num ", "ªad_Q_öô_num", &
ªad_Q_öô_num
, 0, 
NULL
);

3201 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_Q_öô_SR_num ", "ªad_Q_öô_SR_num", &
ªad_Q_öô_SR_num
, 0, 
NULL
);

3202 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_Q_öô_QR_num ", "ªad_Q_öô_QR_num", &
ªad_Q_öô_QR_num
, 0, 
NULL
);

3204 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_hô_num ", "wrôe_S_hô_num", &
wrôe_S_hô_num
, 0, 
NULL
);

3205 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_Q_hô_num ", "wrôe_Q_hô_num", &
wrôe_Q_hô_num
, 0, 
NULL
);

3206 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_ed_num ", "wrôe_S_öô_ed_num", &
wrôe_S_öô_ed_num
, 0, 
NULL
);

3207 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_ed_SR_num ", "wrôe_S_öô_ed_SR_num", &
wrôe_S_öô_ed_SR_num
, 0, 
NULL
);

3208 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_ed_QR_num ", "wrôe_S_öô_ed_QR_num", &
wrôe_S_öô_ed_QR_num
, 0, 
NULL
);

3209 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_s_num ", "wrôe_S_öô_s_num", &
wrôe_S_öô_s_num
, 0, 
NULL
);

3210 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_s_SR_num ", "wrôe_S_öô_s_SR_num", &
wrôe_S_öô_s_SR_num
, 0, 
NULL
);

3211 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_s_QR_num ", "wrôe_S_öô_s_QR_num", &
wrôe_S_öô_s_QR_num
, 0, 
NULL
);

3212 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_Q_öô_num ", "wrôe_Q_öô_num", &
wrôe_Q_öô_num
, 0, 
NULL
);

3213 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_Q_öô_SR_num ", "wrôe_Q_öô_SR_num", &
wrôe_Q_öô_SR_num
, 0, 
NULL
);

3214 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_Q_öô_QR_num ", "wrôe_Q_öô_QR_num", &
wrôe_Q_öô_QR_num
, 0, 
NULL
);

3216 
	`°©_ªg_cou¡î
 (
sdb
, "shr_d©a_ªq_öôül_num ", "shr_d©a_ªq_öôül_num", &
shr_d©a_ªq_öôül_num
, 0, 
NULL
);

3217 
	`°©_ªg_cou¡î
 (
sdb
, "shr_d©a_ªq_tŸÆ_num ", "shr_d©a_ªq_tŸÆ_num", &
shr_d©a_ªq_tŸÆ_num
, 0, 
NULL
);

3218 
	`°©_ªg_cou¡î
 (
sdb
, "shr_d©a_ªq_Áû_num ", "shr_d©a_ªq_Áû_num", &
shr_d©a_ªq_Áû_num
, 0, 
NULL
);

3220 
	`°©_ªg_cou¡î
 (
sdb
, "öf‹m_back_num ", "öf‹m_back_num", &
öf‹m_back_num
, 0, 
NULL
);

3221 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_back_num ", "wrôe_back_num", &
wrôe_back_num
, 0, 
NULL
);

3222 
	`°©_ªg_cou¡î
 (
sdb
, "öf‹m_back_Q ", "öf‹m_back_Q", &
öf‹m_back_Q
, 0, 
NULL
);

3223 
	`°©_ªg_cou¡î
 (
sdb
, "öf‹m_back_S ", "öf‹m_back_S", &
öf‹m_back_S
, 0, 
NULL
);

3224 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_back_Q ", "wrôe_back_Q", &
wrôe_back_Q
, 0, 
NULL
);

3225 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_back_S ", "wrôe_back_S", &
wrôe_back_S
, 0, 
NULL
);

3226 
	`°©_ªg_cou¡î
 (
sdb
, "mb_∑ö_dñay_num ", "mb_∑ö_dñay_num", &
mb_∑ö_dñay_num
, 0, 
NULL
);

3227 
	`°©_ªg_cou¡î
 (
sdb
, "mb_∑ö_p‹tu£_num ", "mb_∑ö_p‹tu£_num", &
mb_∑ö_p‹tu£_num
, 0, 
NULL
);

3229 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_Q_öô_QR_s_num ", "ªad_Q_öô_QR_s_num", &
ªad_Q_öô_QR_s_num
, 0, 
NULL
);

3230 
	`°©_ªg_cou¡î
 (
sdb
, "ªad_Q_öô_QR_ed_num ", "ªad_Q_öô_QR_ed_num", &
ªad_Q_öô_QR_ed_num
, 0, 
NULL
);

3231 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_ed_QR_s_num ", "wrôe_S_öô_ed_QR_s_num", &
wrôe_S_öô_ed_QR_s_num
, 0, 
NULL
);

3232 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_ed_QR_ed_num ", "wrôe_S_öô_ed_QR_ed_num", &
wrôe_S_öô_ed_QR_ed_num
, 0, 
NULL
);

3233 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_s_QR_s_num ", "wrôe_S_öô_s_QR_s_num", &
wrôe_S_öô_s_QR_s_num
, 0, 
NULL
);

3234 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_S_öô_s_QR_ed_num ", "wrôe_S_öô_s_QR_ed_num", &
wrôe_S_öô_s_QR_ed_num
, 0, 
NULL
);

3235 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_Q_öô_QR_s_num ", "wrôe_Q_öô_QR_s_num", &
wrôe_Q_öô_QR_s_num
, 0, 
NULL
);

3236 
	`°©_ªg_cou¡î
 (
sdb
, "wrôe_Q_öô_QR_ed_num ", "wrôe_Q_öô_QR_ed_num", &
wrôe_Q_öô_QR_ed_num
, 0, 
NULL
);

3238 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_d_Q_s_num ", "ªˇŒ_öv_d_Q_s_num", &
ªˇŒ_öv_d_Q_s_num
, 0, 
NULL
);

3239 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_d_Q_ed_num ", "ªˇŒ_öv_d_Q_ed_num", &
ªˇŒ_öv_d_Q_ed_num
, 0, 
NULL
);

3240 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_e_Q_s_num ", "ªˇŒ_öv_e_Q_s_num", &
ªˇŒ_öv_e_Q_s_num
, 0, 
NULL
);

3241 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_e_Q_ed_num ", "ªˇŒ_öv_e_Q_ed_num", &
ªˇŒ_öv_e_Q_ed_num
, 0, 
NULL
);

3242 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_s_Q_s_num ", "ªˇŒ_öv_s_Q_s_num", &
ªˇŒ_öv_s_Q_s_num
, 0, 
NULL
);

3243 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_s_Q_ed_num ", "ªˇŒ_öv_s_Q_ed_num", &
ªˇŒ_öv_s_Q_ed_num
, 0, 
NULL
);

3244 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_i_Q_s_num ", "ªˇŒ_öv_i_Q_s_num", &
ªˇŒ_öv_i_Q_s_num
, 0, 
NULL
);

3245 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_i_Q_ed_num ", "ªˇŒ_öv_i_Q_ed_num", &
ªˇŒ_öv_i_Q_ed_num
, 0, 
NULL
);

3247 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_d_Q_s_ad_num ", "ªˇŒ_öv_d_Q_s_ad_num", &
ªˇŒ_öv_d_Q_s_ad_num
, 0, 
NULL
);

3248 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_e_Q_s_ad_num ", "ªˇŒ_öv_e_Q_s_ad_num", &
ªˇŒ_öv_e_Q_s_ad_num
, 0, 
NULL
);

3249 
	`°©_ªg_cou¡î
 (
sdb
, "ªˇŒ_öv_s_Q_ed_ad_num ", "ªˇŒ_öv_s_Q_ed_ad_num", &
ªˇŒ_öv_s_Q_ed_ad_num
, 0, 
NULL
);

3251 
	`°©_ªg_cou¡î
 (
sdb
, "löe_ac˚ss_num ", "löe_ac˚ss_num", &
löe_ac˚ss_num
, 0, 
NULL
);

3252 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_löe_ac˚ss_num ", "SWP_löe_ac˚ss_num", &
SWP_löe_ac˚ss_num
, 0, 
NULL
);

3253 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_PR_löe_ac˚ss_num ", "SWP_PR_löe_ac˚ss_num", &
SWP_PR_löe_ac˚ss_num
, 0, 
NULL
);

3254 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_PW_löe_ac˚ss_num ", "SWP_PW_löe_ac˚ss_num", &
SWP_PW_löe_ac˚ss_num
, 0, 
NULL
);

3255 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_SR_löe_ac˚ss_num ", "SWP_SR_löe_ac˚ss_num", &
SWP_SR_löe_ac˚ss_num
, 0, 
NULL
);

3256 
	`°©_ªg_cou¡î
 (
sdb
, "SWP_SW_löe_ac˚ss_num ", "SWP_SW_löe_ac˚ss_num", &
SWP_SW_löe_ac˚ss_num
, 0, 
NULL
);

3259 
PVC_°©_ªg_cou¡î
[64];

3260 if(
ˇche_ml2
->
assoc
 > 
MAX_DIRECTORY_ASSOC
)

3261 
	`∑nic
("MAX_DIRECTORY_ASSOC is smallerÅhanássociativity of directory cache\n");

3262 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_ve˘‹_di°r_ªc‹d_num ", "PVC_ve˘‹_di°r_ªc‹d_num", &
PVC_ve˘‹_di°r_ªc‹d_num
, 0, 
NULL
);

3263 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_ve˘‹_öc_di°r_ªc‹d_num ", "PVC_ve˘‹_öc_di°r_ªc‹d_num", &
PVC_ve˘‹_öc_di°r_ªc‹d_num
, 0, 
NULL
);

3264 
i
 = 0; i <
ˇche_ml2
->
assoc
; i++)

3266 
	`•rötf
 (
PVC_°©_ªg_cou¡î
, "PVC_ve˘‹_di°r_%d ", 
i
);

3267 
	`°©_ªg_cou¡î
 (
sdb
, 
PVC_°©_ªg_cou¡î
, "", &
PVC_ve˘‹_di°r
[
i
], 0, 
NULL
);

3269 
i
 = 0; i <
ˇche_ml2
->
assoc
; i++)

3271 
	`•rötf
 (
PVC_°©_ªg_cou¡î
, "PVC_ve˘‹_öc_di°r_%d ", 
i
);

3272 
	`°©_ªg_cou¡î
 (
sdb
, 
PVC_°©_ªg_cou¡î
, "", &
PVC_ve˘‹_öc_di°r
[
i
], 0, 
NULL
);

3274 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_exch™ge_num ", "PVC_exch™ge_num", &
PVC_exch™ge_num
, 0, 
NULL
);

3275 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_Êù_num ", "PVC_Êù_num", &
PVC_Êù_num
, 0, 
NULL
);

3276 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_dowm_no_öv_num ", "PVC_dowm_no_öv_num", &
PVC_dowm_no_öv_num
, 0, 
NULL
);

3277 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_dowm_öv_num ", "PVC_dowm_öv_num", &
PVC_dowm_öv_num
, 0, 
NULL
);

3278 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_dowm_öv_shr_num ", "PVC_dowm_öv_shr_num", &
PVC_dowm_öv_shr_num
, 0, 
NULL
);

3279 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_up_no_add_num ", "PVC_up_no_add_num", &
PVC_up_no_add_num
, 0, 
NULL
);

3280 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_up_add_num ", "PVC_up_add_num", &
PVC_up_add_num
, 0, 
NULL
);

3281 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_up_add_shr_num ", "PVC_up_add_shr_num", &
PVC_up_add_shr_num
, 0, 
NULL
);

3282 
i
=0;i<=(
mesh_size
*mesh_size);i++)

3284 
	`•rötf
 (
PVC_°©_ªg_cou¡î
, "PVC_exch_vec_shr_di°r_%d ", 
i
);

3285 
	`°©_ªg_cou¡î
 (
sdb
, 
PVC_°©_ªg_cou¡î
, "", &
PVC_exch_vec_shr_di°r
[
i
], 0, 
NULL
);

3287 
i
=0;i<=(
mesh_size
*mesh_size);i++)

3289 
	`•rötf
 (
PVC_°©_ªg_cou¡î
, "PVC_dowm_öv_shr_di°r_%d ", 
i
);

3290 
	`°©_ªg_cou¡î
 (
sdb
, 
PVC_°©_ªg_cou¡î
, "", &
PVC_dowm_öv_shr_di°r
[
i
], 0, 
NULL
);

3292 
i
=0;i<=(
mesh_size
*mesh_size);i++)

3294 
	`•rötf
 (
PVC_°©_ªg_cou¡î
, "PVC_up_add_shr_di°r_%d ", 
i
);

3295 
	`°©_ªg_cou¡î
 (
sdb
, 
PVC_°©_ªg_cou¡î
, "", &
PVC_up_add_shr_di°r
[
i
], 0, 
NULL
);

3297 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_öf‹m_Æl_shr_num ", "PVC_öf‹m_Æl_shr_num", &
PVC_öf‹m_Æl_shr_num
, 0, 
NULL
);

3298 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_rfs_Æl_shr_num ", "PVC_rfs_Æl_shr_num", &
PVC_rfs_Æl_shr_num
, 0, 
NULL
);

3299 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_ªad_Æl_shr_num ", "PVC_ªad_Æl_shr_num", &
PVC_ªad_Æl_shr_num
, 0, 
NULL
);

3300 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_wrôe_Æl_shr_num ", "PVC_wrôe_Æl_shr_num", &
PVC_wrôe_Æl_shr_num
, 0, 
NULL
);

3301 
	`°©_ªg_cou¡î
 (
sdb
, "PVC_ªˇŒ_Æl_shr_num ", "PVC_ªˇŒ_Æl_shr_num", &
PVC_ªˇŒ_Æl_shr_num
, 0, 
NULL
);

3302 
	`°©_ªg_cou¡î
 (
sdb
, "pvc_nv_c⁄Êi˘_num ", "pvc_nv_c⁄Êi˘_num", &
pvc_nv_c⁄Êi˘_num
, 0, 
NULL
);

3304 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªq_evít_cou¡", "tŸÆÇum o‡ªque°ÉvíàöôÆ cª©ed", &
tŸÆªqcou¡num
, 0, 
NULL
);

3305 
	`°©_ªg_cou¡î
 (
sdb
, "St‹eC⁄dôi⁄FaûNum", "TŸÆ st‹êc⁄dôi⁄Æ faûedÇum", &
St‹eC⁄dôi⁄FaûNum
, 0, 
NULL
);

3306 
	`°©_ªg_cou¡î
 (
sdb
, "lock_√tw‹k_ac˚ss", "", &
lock_√tw‹k_ac˚ss
, 0, 
NULL
);

3307 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆUpgødes
, 0, 
NULL
);

3308 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_evít_cou¡", "tŸÆÇum o‡mis†evíàötü»¸óãd", &
tŸÆmisscou¡num
, 0, 
NULL
);

3309 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëUpgødes", "tŸÆÇumbî o‡upgøde†£í", &
tŸÆNëUpgødes
, 0, 
NULL
);

3310 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesUßbÀ", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesUßbÀ
, 0, 
NULL
);

3311 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesBíeficül", "tŸÆÇumbî o‡upgøde†nŸ ußbÀ", &
tŸÆUpgødesBíeficül
, 0, 
NULL
);

3312 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødesU£2", "tŸÆÇumbî o‡upgøde†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôNo
, 0, 
NULL
);

3314 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆSyncd©a", "tŸÆÇumbî o‡d©®∑ckë†duêtÿsync", &
d©a_∑ckës_sync
, 0, 
NULL
);

3315 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆSyncmëa", "tŸÆÇumbî o‡më®∑ckë†duêtÿsync", &
mëa_∑ckës_sync
, 0, 
NULL
);

3317 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNëWrôes", "tŸÆÇumbî o‡Wrôe†£í", &
tŸÆNëWrôes
, 0, 
NULL
);

3318 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesUßbÀ", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesUßbÀ
, 0, 
NULL
);

3319 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesBíeficül", "tŸÆÇumbî o‡Wrôe†nŸ ußbÀ", &
tŸÆWrôesBíeficül
, 0, 
NULL
);

3320 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôesU£2", "tŸÆÇumbî o‡Wrôe†ußbÀ wôhouàc⁄fúm©i⁄", &
tŸÆS∂ôWM
, 0, 
NULL
);

3321 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆNoEx˛usive", "tŸÆÇumbî o‡Wrôe†unußbÀ beˇu£ o‡ex˛usivêsomewhîêñ£", &
ex˛usive_somewhîe
, 0, 
NULL
);

3322 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆFr⁄tWrôe", "tŸÆÇumbî o‡Wrôe†unußvÀ beˇu£ o‡‰⁄àwrôe", &
‰⁄t_wrôe
, 0, 
NULL
);

3324 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqHôs", "tŸÆÇum o‡wrôêevíts", &
tŸÆL2WrôeReqHôs
, 0, 
NULL
);

3325 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqNoSh¨î", "tŸÆÇum o‡wrôêªq wôhÇÿsh¨îs", &
tŸÆL2WrôeReqNoSh¨î
, 0, 
NULL
);

3326 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDúty", "tŸÆÇum o‡wrôêªq wôh ju° o√ sh¨î", &
tŸÆL2WrôeReqDúty
, 0, 
NULL
);

3327 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqDúty", "Exå®dñayÅÿcom∂ëêwrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2WrôeReqDúty
, 0, 
NULL
);

3328 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqDútyWT", "tŸÆÅime†wrôêªq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2WrôeReqDútyWT
, 0, 
NULL
);

3329 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨ed", "tŸÆÇum o‡wrôêªq wôh mu…ùÀ sh¨îs", &
tŸÆL2WrôeReqSh¨ed
, 0, 
NULL
);

3330 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2WrôeReqSh¨ed", "Exå®dñayÅÿcom∂ëêwrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
dñayL2WrôeReqSh¨ed
, 0, 
NULL
);

3331 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2WrôeReqSh¨edWT", "tŸÆÅime†wrôêªq wôh mu…ùÀ sh¨îs, i¿ˇ£É¨lõ∏ªad†would had bì¿ªadÅhrough", &
tŸÆL2WrôeReqSh¨edWT
, 0, 
NULL
);

3333 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqHôs", "tŸÆÇum o‡RódÉvíts", &
tŸÆL2RódReqHôs
, 0, 
NULL
);

3334 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqNoSh¨î", "tŸÆÇum o‡RódÑeq wôhÇÿsh¨îs", &
tŸÆL2RódReqNoSh¨î
, 0, 
NULL
);

3335 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDúty", "tŸÆÇum o‡RódÑeq wôh ju° o√ sh¨î", &
tŸÆL2RódReqDúty
, 0, 
NULL
);

3336 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2RódReqDúty", "Exå®dñayÅÿcom∂ëêRódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
dñayL2RódReqDúty
, 0, 
NULL
);

3337 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqDútyWT", "tŸÆÅime†RódÑeq wôh ju° o√ sh¨î, i¿ˇ£Åhêóæõ∏wrôêwould had bì¿wrôêthrough", &
tŸÆL2RódReqDútyWT
, 0, 
NULL
);

3338 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2RódReqSh¨ed", "tŸÆÇum o‡ªadÑeq wôh mu…ùÀ sh¨îs", &
tŸÆL2RódReqSh¨ed
, 0, 
NULL
);

3340 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfU£", "tŸÆ L1Üöê¥e„tche†u£ful", &
tŸÆL1LöePªfU£
, 0, 
NULL
);

3341 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöePªfNoU£", "tŸÆ L1Üöê¥e„tche†nŸ u£ful", &
tŸÆL1LöePªfNoU£
, 0, 
NULL
);

3342 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódU£", "tŸÆ L1Üöêªad mis£†u£ful", &
tŸÆL1LöeRódU£
, 0, 
NULL
);

3343 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeRódNoU£", "tŸÆ L1Üöêªad mis£†nŸ u£ful", &
tŸÆL1LöeRódNoU£
, 0, 
NULL
);

3344 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeU£", "tŸÆ L1Üöêwrôêmis£†u£ful", &
tŸÆL1LöeWrôeU£
, 0, 
NULL
);

3345 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeWrôeNoU£", "tŸÆ L1Üöêwrôêmis£†nŸ u£ful", &
tŸÆL1LöeWrôeNoU£
, 0, 
NULL
);

3347 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlU£d", "tŸÆ L1ÜöêöÉx˛usivêmodêu£ful", &
tŸÆL1LöeExlU£d
, 0, 
NULL
);

3348 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlInv", "tŸÆ L1ÜöêöÉx˛usivêmodêövÆid©ed wôhouàu£", &
tŸÆL1LöeExlInv
, 0, 
NULL
);

3349 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL1LöeExlDr›", "tŸÆ L1ÜöêöÉx˛usivêmodêdr›ed wôhouàu£", &
tŸÆL1LöeExlDr›
, 0, 
NULL
);

3351 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqPrimMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
tŸÆL2ReqPrimMiss
, 0, 
NULL
);

3352 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqSecMiss", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
tŸÆL2ReqSecMiss
, 0, 
NULL
);

3353 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqHô", "TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
tŸÆL2ReqHô
, 0, 
NULL
);

3354 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInTøns", "TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2ReqInTøns
, 0, 
NULL
);

3355 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2OwnReqInTøns", "TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
tŸÆL2OwnReqInTøns
, 0, 
NULL
);

3356 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆL2ReqInInv", "TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
tŸÆL2ReqInInv
, 0, 
NULL
);

3358 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqPrimMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêöÖrim¨y miss", &
dñayL2ReqPrimMiss
, 0, 
NULL
);

3359 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqSecMiss", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö sec⁄d¨y miss", &
dñayL2ReqSecMiss
, 0, 
NULL
);

3360 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqHô", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†övﬁvêö cÀ™ hô", &
dñayL2ReqHô
, 0, 
NULL
);

3361 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†födÜöêöÅønsôi⁄", &
dñayL2ReqInTøns
, 0, 
NULL
);

3362 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2OwnReqInTøns", "dñay o‡TŸÆÇumbî o‡dúe˘‹y ow√rshùÑeque°†födÜöêöÅønsôi⁄", &
dñayL2OwnReqInTøns
, 0, 
NULL
);

3363 
	`°©_ªg_cou¡î
 (
sdb
, "dñayL2ReqInInv", "dñay o‡TŸÆÇumbî o‡dúe˘‹yÑeque°†havêtÿövÆid©e", &
dñayL2ReqInInv
, 0, 
NULL
);

3365 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆWrôeReq
, 0, 
NULL
);

3366 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆWrôeReqInv
, 0, 
NULL
);

3367 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆWrôeDñay
, 0, 
NULL
);

3368 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆWrôeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆWrôeInvDñay
, 0, 
NULL
);

3370 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReq", "TŸÆÇumbî o‡wrôêªque°ÅÿL2", &
tŸÆUpgødeReq
, 0, 
NULL
);

3371 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeReqInv", "TŸÆÇumbî o‡wrôêªque°†wôh invÆid©i⁄†tÿL2", &
tŸÆUpgødeReqInv
, 0, 
NULL
);

3372 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDñay", "Timê•íàö wrôêªque°†tÿL2", &
tŸÆUpgødeDñay
, 0, 
NULL
);

3373 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeInvDñay", "Timê•íàö invÆid©i⁄ f‹ wrôêªque°†tÿL2", &
tŸÆUpgødeInvDñay
, 0, 
NULL
);

3374 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆUpgødeDïídDñay", "Timê•íàö dïíd dñay f‹ upd©êªque°†tÿL2", &
Upd©eDïídCy˛e
, 0, 
NULL
);

3376 
	`°©_ªg_cou¡î
 (
sdb
, "cou¡N⁄AŒocRódE¨ly", "Numbî o‡time†®ªad mis†ªque° from L1 ha†bì¿£rvi˚dÉ¨ly wôhouàÆloˇti⁄", &
cou¡N⁄AŒocRódE¨ly
, 0, 
NULL
);

3377 #ifde‡
TG


3378 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_∑ckës_gíî©i⁄
, 0, 
NULL
);

3379 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªad_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_ªad_∑ckës_gíî©i⁄
, 0, 
NULL
);

3380 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_wrôe_∑ckës_gíî©i⁄", "tŸÆÖackë†gíî©ed byÅøffi¯gíî©‹", &
tŸÆ_wrôe_∑ckës_gíî©i⁄
, 0, 
NULL
);

3382 
	`°©_ªg_cou¡î
 (
sdb
, "WM_Miss", "", &
WM_Miss
, 0, 
NULL
);

3383 
	`°©_ªg_cou¡î
 (
sdb
, "WM_CÀ™", "", &
WM_CÀ™
, 0, 
NULL
);

3384 
	`°©_ªg_cou¡î
 (
sdb
, "WM_S", "", &
WM_S
, 0, 
NULL
);

3385 
	`°©_ªg_cou¡î
 (
sdb
, "WM_EM", "", &
WM_EM
, 0, 
NULL
);

3386 
	`°©_ªg_cou¡î
 (
sdb
, "WM_Sh¨dU£C⁄f", "", &
wrôe_sh¨ed_u£d_c⁄f
, 0, 
NULL
);

3388 
	`°©_ªg_cou¡î
 (
sdb
, "Sync_L2_miss", "", &
Sync_L2_miss
, 0, 
NULL
);

3389 
	`°©_ªg_cou¡î
 (
sdb
, "SyncIn°CacheAc˚ss", "", &
SyncIn°CacheAc˚ss
, 0, 
NULL
);

3390 
	`°©_ªg_cou¡î
 (
sdb
, "Te°CacheAc˚ss", "", &
Te°CacheAc˚ss
, 0, 
NULL
);

3391 
	`°©_ªg_cou¡î
 (
sdb
, "Te°SecCacheAc˚ss", "", &
Te°SecCacheAc˚ss
, 0, 
NULL
);

3392 
	`°©_ªg_cou¡î
 (
sdb
, "SëCacheAc˚ss", "", &
SëCacheAc˚ss
, 0, 
NULL
);

3393 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdRódMiss", "", &
SyncLﬂdRódMiss
, 0, 
NULL
);

3394 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdLRódMiss", "", &
SyncLﬂdLRódMiss
, 0, 
NULL
);

3395 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdHô", "", &
SyncLﬂdHô
, 0, 
NULL
);

3396 
	`°©_ªg_cou¡î
 (
sdb
, "SyncLﬂdLHô", "", &
SyncLﬂdLHô
, 0, 
NULL
);

3397 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eCHô", "", &
SyncSt‹eCHô
, 0, 
NULL
);

3398 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eCWrôeMiss", "", &
SyncSt‹eCWrôeMiss
, 0, 
NULL
);

3399 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eCWrôeUpgøde", "", &
SyncSt‹eCWrôeUpgøde
, 0, 
NULL
);

3400 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eHô", "", &
SyncSt‹eHô
, 0, 
NULL
);

3401 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eWrôeMiss", "", &
SyncSt‹eWrôeMiss
, 0, 
NULL
);

3402 
	`°©_ªg_cou¡î
 (
sdb
, "SyncSt‹eWrôeUpgøde", "", &
SyncSt‹eWrôeUpgøde
, 0, 
NULL
);

3403 
	`°©_ªg_cou¡î
 (
sdb
, "B¨St‹eWrôeMiss", "", &
B¨St‹eWrôeMiss
, 0, 
NULL
);

3404 
	`°©_ªg_cou¡î
 (
sdb
, "B¨St‹eWrôeUpgøde", "", &
B¨St‹eWrôeUpgøde
, 0, 
NULL
);

3405 
	`°©_ªg_f‹muœ
 (
sdb
, "ã°_hô_øtio", "", "SyncLﬂdHô / Te°CacheAc˚ss", 
NULL
);

3406 
	`°©_ªg_f‹muœ
 (
sdb
, "ã°_£c_hô_øtio", "", "SyncLﬂdLHô / Te°SecCacheAc˚ss", 
NULL
);

3407 
	`°©_ªg_f‹muœ
 (
sdb
, "£t_hô_øtio", "", "SyncSt‹eCHô / SëCacheAc˚ss", 
NULL
);

3409 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_fuŒ", "tŸÆÇumbî o‡lock fifÿovîÊow", &
lock_fifo_fuŒ
, 0, 
NULL
);

3410 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_wr⁄g", "tŸÆÇumbî o‡lock fifÿovîÊow", &
lock_fifo_wr⁄g
, 0, 
NULL
);

3411 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_wrôeback", "tŸÆÇumbî o‡lock fifÿovîÊow", &
lock_fifo_wrôeback
, 0, 
NULL
);

3412 
	`°©_ªg_cou¡î
 (
sdb
, "lock_fifo_bíefô", "tŸÆÇumbî o‡lock fifÿbíefô", &
lock_fifo_bíefô
, 0, 
NULL
);

3413 
	`°©_ªg_cou¡î
 (
sdb
, "lock_ˇche_hô", "tŸÆÇumbî o‡lock fifÿbíefô", &
lock_ˇche_hô
, 0, 
NULL
);

3414 
	`°©_ªg_cou¡î
 (
sdb
, "lock_ˇche_miss", "tŸÆÇumbî o‡lock fifÿbíefô", &
lock_ˇche_miss
, 0, 
NULL
);

3415 
	`°©_ªg_cou¡î
 (
sdb
, "L1_mshr_fuŒ", "tŸÆÇumbî o‡L1 msh∏ovîÊow", &
L1_mshr_fuŒ
, 0, 
NULL
);

3416 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_mshr", "tŸÆ sèŒ cy˛e†f‹ L1 msh∏ovîÊow", &
SèŒ_L1_mshr
, 0, 
NULL
);

3417 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ", "tŸÆÇumbî o‡L2 msh∏ovîÊow", &
L2_mshr_fuŒ
, 0, 
NULL
);

3418 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L2_mshr", "tŸÆ sèŒ cy˛e†f‹ L2 msh∏ovîÊow", &
SèŒ_L2_mshr
, 0, 
NULL
);

3419 
	`°©_ªg_cou¡î
 (
sdb
, "L2_mshr_fuŒ_¥e„tch", "tŸÆÇumbî o‡L2 msh∏ovîÊow whíÖª„tch", &
L2_mshr_fuŒ_¥e„tch
, 0, 
NULL
);

3420 
	`°©_ªg_cou¡î
 (
sdb
, "L1_fifo_fuŒ", "tŸÆÇumbî o‡L1 fifÿovîÊow", &
L1_fifo_fuŒ
, 0, 
NULL
);

3421 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_L1_fifo", "tŸÆ sèŒ cy˛e†f‹ L1 fifÿovîÊow", &
SèŒ_L1_fifo
, 0, 
NULL
);

3422 
	`°©_ªg_cou¡î
 (
sdb
, "Dú_fifo_fuŒ", "tŸÆÇumbî o‡dú fifÿovîÊow", &
Dú_fifo_fuŒ
, 0, 
NULL
);

3423 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_dú_fifo", "tŸÆ sèŒ cy˛e†f‹ dú fifÿovîÊow", &
SèŒ_dú_fifo
, 0, 
NULL
);

3424 
	`°©_ªg_cou¡î
 (
sdb
, "I≈ut_queue_fuŒ", "tŸÆÇumbî o‡öpuàqueuêovîÊow", &
I≈ut_queue_fuŒ
, 0, 
NULL
);

3425 
	`°©_ªg_cou¡î
 (
sdb
, "Ouçut_queue_fuŒ", "tŸÆÇumbî o‡ouçuàqueuêovîÊow", &
Ouçut_queue_fuŒ
, 0, 
NULL
);

3426 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_öput_queue", "tŸÆ sèŒ cy˛e†duêtÿöpuàqueuêovîÊow", &
SèŒ_öput_queue
, 0, 
NULL
);

3427 
	`°©_ªg_cou¡î
 (
sdb
, "SèŒ_ouçut_queue", "tŸÆ sèŒ cy˛e†duêtÿouçuàqueuêovîÊow", &
SèŒ_ouçut_queue
, 0, 
NULL
);

3428 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_lﬂd_lök_sh¨ed", "tŸÆÜﬂdÜök sh¨ed", &
lﬂd_lök_sh¨ed
, 0, 
NULL
);

3429 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_lﬂd_lök_ex˛usive", "tŸÆÜﬂdÜök sh¨ed", &
lﬂd_lök_ex˛usive
, 0, 
NULL
);

3430 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆmis°imef‹N‹mÆ
, 0, 
NULL
);

3431 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆmis°imef‹Sync
, 0, 
NULL
);

3432 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆL2mis°ime
, 0, 
NULL
);

3433 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Wr⁄g_L2_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆWr⁄gL2mis°ime
, 0, 
NULL
);

3434 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L2_mis£s", "tŸÆÅimêo‡h™dlögÅhêmissög", &
TŸÆL2mis£s
, 0, 
NULL
);

3435 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mem_œt", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆ_mem_œt
, 0, 
NULL
);

3436 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mem_ac˚ss", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆ_mem_ac˚ss
, 0, 
NULL
);

3437 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_miss_h™dÀ_time", "tŸÆÅimêo‡h™dlögÅhêmissög", &
tŸÆmissh™dÀtime
, 0, 
NULL
);

3438 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
«ck_cou¡î
, 0, 
NULL
);

3439 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥e„tch_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
¥e„tch_«cks
, 0, 
NULL
);

3440 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
n‹mÆ_«cks
, 0, 
NULL
);

3441 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_wrôe_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
wrôe_«cks
, 0, 
NULL
);

3442 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_«ck_cou¡", "tŸÆÇum o‡«ck mesßge†£ndög", &
sync_«cks
, 0, 
NULL
);

3443 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sc_Áû_cou¡", "tŸÆÇum o‡°‹êc⁄dôi⁄Æ faû", &
°‹e_c⁄dôi⁄Æ_Áûed
, 0, 
NULL
);

3444 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
Êù_cou¡î
, 0, 
NULL
);

3445 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_L1_Êù_cou¡", "tŸÆÇum o‡Êù≥d mesßges", &
L1_Êù_cou¡î
, 0, 
NULL
);

3446 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_ª∂y_bíefô", "tŸÆÇum o‡d©®ª∂y bíefô", &
e_to_m
, 0, 
NULL
);

3447 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_n‹mÆ_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_n‹mÆ_miss_h™dÀ_timê/ÅŸÆ_n‹mÆ_evít_cou¡", 
NULL
);

3448 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_L2_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_L2_miss_h™dÀ_timê/ÅŸÆ_n‹mÆ_evít_cou¡", 
NULL
);

3449 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_sync_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_sync_miss_h™dÀ_timê/ÅŸÆ_sync_evít_cou¡", 
NULL
);

3450 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_miss_h™dÀ_time", "cy˛e†≥∏evîy mis†™d invÆid©i⁄", "tŸÆ_miss_h™dÀ_timê/ÅŸÆ_evít_cou¡", 
NULL
);

3451 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_ac˚ss", "tŸÆ mesh_√tw‹kác˚ss", &
tŸÆMeshH›Cou¡
, 0, 
NULL
);

3452 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_mesh_√tw‹k_dñay", "tŸÆ mesh_√tw‹k dñay", &
tŸÆMeshH›Dñay
, 0, 
NULL
);

3453 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_mesh_√tw‹k_time", "cy˛e†≥∏mesh_√tw‹kác˚ss", "tŸÆ_mesh_√tw‹k_dñay /ÅŸÆ_mesh_√tw‹k_ac˚ss", 
NULL
);

3454 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_mesh_√tw‹k_ac˚ss", "tŸÆ mesh_√tw‹kác˚ss", &
tŸÆMeshN‹H›Cou¡
, 0, 
NULL
);

3455 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_mesh_√tw‹k_dñay", "tŸÆ mesh_√tw‹k dñay", &
tŸÆMeshN‹H›Dñay
, 0, 
NULL
);

3456 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_n‹mÆ_mesh_√tw‹k_time", "cy˛e†≥∏mesh_√tw‹kác˚ss", "tŸÆ_n‹aml_mesh_√tw‹k_dñay /ÅŸÆ_n‹aml_mesh_√tw‹k_ac˚ss", 
NULL
);

3457 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_mesh_√tw‹k_ac˚ss", "tŸÆ mesh_√tw‹kác˚ss", &
tŸÆMeshSyncH›Cou¡
, 0, 
NULL
);

3458 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_mesh_√tw‹k_dñay", "tŸÆ mesh_√tw‹k dñay", &
tŸÆMeshSyncH›Dñay
, 0, 
NULL
);

3459 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_sync_mesh_√tw‹k_time", "cy˛e†≥∏mesh_√tw‹kác˚ss", "tŸÆ_sync_mesh_√tw‹k_dñay /ÅŸÆ_sync_mesh_√tw‹k_ac˚ss", 
NULL
);

3460 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_ac˚ss", "tŸÆ o±_√tw‹kác˚ss", &
tŸÆO±H›Cou¡
, 0, 
NULL
);

3461 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_›t_√tw‹k_dñay", "tŸÆ o±_√tw‹k dñay", &
tŸÆO±H›Dñay
, 0, 
NULL
);

3462 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_›t_√tw‹k_time", "cy˛e†≥∏›t_√tw‹kác˚ss", "tŸÆ_›t_√tw‹k_dñay /ÅŸÆ_›t_√tw‹k_ac˚ss", 
NULL
);

3463 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_›t_√tw‹k_ac˚ss", "tŸÆ o±_√tw‹kác˚ss", &
tŸÆO±N‹H›Cou¡
, 0, 
NULL
);

3464 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_n‹mÆ_›t_√tw‹k_dñay", "tŸÆ o±_√tw‹k dñay", &
tŸÆO±N‹H›Dñay
, 0, 
NULL
);

3465 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_n‹mÆ_›t_√tw‹k_time", "cy˛e†≥∏›t_√tw‹kác˚ss", "tŸÆ_n‹mÆ_›t_√tw‹k_dñay /ÅŸÆ_n‹mÆ_›t_√tw‹k_ac˚ss", 
NULL
);

3466 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_›t_√tw‹k_ac˚ss", "tŸÆ o±_√tw‹kác˚ss", &
tŸÆO±SyncH›Cou¡
, 0, 
NULL
);

3467 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sync_›t_√tw‹k_dñay", "tŸÆ o±_√tw‹k dñay", &
tŸÆO±SyncH›Dñay
, 0, 
NULL
);

3468 
	`°©_ªg_f‹muœ
 (
sdb
, "avîage_sync_›t_√tw‹k_time", "cy˛e†≥∏›t_√tw‹kác˚ss", "tŸÆ_sync_›t_√tw‹k_dñay /ÅŸÆ_sync_›t_√tw‹k_ac˚ss", 
NULL
);

3469 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_loˇl_ˇche_ac˚ss", "tŸÆÜoˇ»dl2 cachêac˚s†numbî", &
loˇl_ˇche_ac˚ss
, 0, 
NULL
);

3470 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ªmŸe_ˇche_ac˚ss", "tŸÆÑemŸêdl2 cachêac˚s†numbî", &
ªmŸe_ˇche_ac˚ss
, 0, 
NULL
);

3471 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_wb", "tŸÆÅwÿh›†övﬁve†duêtÿwrôêback", &
övﬁve_2_h›_wb
, 0, 
NULL
);

3472 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_touch", "tŸÆÅwÿh›†övﬁve†duêtÿtouch", &
övﬁve_2_h›_touch
, 0, 
NULL
);

3473 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s
, 0, 
NULL
);

3474 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s
, 0, 
NULL
);

3475 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁves_wm", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_wm
, 0, 
NULL
);

3476 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁves_wm", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_wm
, 0, 
NULL
);

3477 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_miss", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_miss
, 0, 
NULL
);

3478 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_miss", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_miss
, 0, 
NULL
);

3479 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_four_h›s_övﬁve_upgøde", "tŸÆ fou∏h›†övﬁves", &
övﬁve_4_h›s_upgøde
, 0, 
NULL
);

3480 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_two_h›s_övﬁve_upgøde", "tŸÆÅwÿh›†övﬁves", &
övﬁve_2_h›s_upgøde
, 0, 
NULL
);

3481 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_ªad", "tŸÆÖriv©êd©®f‹Ñód miss", &
d©a_¥iv©e_ªad
, 0, 
NULL
);

3482 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_¥iv©e_wrôe", "tŸÆÖriv©êd©®f‹ wrôêmiss", &
d©a_¥iv©e_wrôe
, 0, 
NULL
);

3483 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_ªad", "tŸÆ sh¨ed d©®f‹Ñód miss", &
d©a_sh¨ed_ªad
, 0, 
NULL
);

3484 
	`°©_ªg_cou¡î
 (
sdb
, "d©a_sh¨ed_wrôe", "tŸÆ sh¨ed d©®f‹ wrôêmiss", &
d©a_sh¨ed_wrôe
, 0, 
NULL
);

3485 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_˛o£", "tŸÆÇumbî†o‡Æ»˛o£d c⁄sumîs", &
tŸÆ_Æl_˛o£
, 0, 
NULL
);

3486 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_nŸ_Æl_˛o£", "tŸÆÇumbî†o‡nŸáŒ clo£d c⁄sumîs", &
tŸÆ_nŸ_Æl_˛o£
, 0, 
NULL
);

3487 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_p_c_evíts", "tŸÆÖrodu˚∏™d c⁄sumî†evít†(shouldÉquÆÅÿ4 h›s)", &
tŸÆ_p_c_evíts
, 0, 
NULL
);

3488 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_c⁄sumîs", "tŸÆÇumbî†o‡c⁄sumîs", &
tŸÆ_c⁄sumîs
, 0, 
NULL
);

3489 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_ö_√ighb‹", "tŸÆÖackë†¨êöÇeighb‹hood", &
tŸÆ_∑ckës_ö_√ighb‹
, 0, 
NULL
);

3490 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_∑ckës_©_c‹√rs", "tŸÆÖackë†¨ê© c‹√rs", &
tŸÆ_∑ckës_©_c‹√rs
, 0, 
NULL
);

3491 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Æl_Æmo°˛o£", "tŸÆÇumbî†o‡Æ»˛o£dánd c‹√∏c⁄sumîs", &
tŸÆ_Æl_Æmo°˛o£
, 0, 
NULL
);

3492 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_c⁄sumîs", "tŸÆ d©®∑ckë†o‡c⁄sumîs", &
tŸÆ_d©a_c⁄sumîs
, 0, 
NULL
);

3493 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_©_c‹√r", "tŸÆ d©®∑ckë†suµly fromáàc‹√rs", &
tŸÆ_d©a_©_c‹√r
, 0, 
NULL
);

3494 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_˛o£", "tŸÆ d©®∑ckë†¨êsuµlõd from clo£by sour˚s", &
tŸÆ_d©a_˛o£
, 0, 
NULL
);

3495 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_d©a_Ár", "tŸÆ d©®∑ckë†¨êsumµlõd from f¨ sour˚s", &
tŸÆ_d©a_Ár
, 0, 
NULL
);

3496 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_öside_≥r˚¡", "avîagêösidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_öside_≥r˚¡
, 0, 
NULL
);

3497 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(should bêdivided byÅŸÆ_nŸ_Æl_˛o£)", &
avîage_outside_≥r˚¡
, 0, 
NULL
);

3498 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_outside_abs_≥r˚¡", "avîagêabsﬁuéy outsidê∑ckë†≥r˚¡(Á∏- c‹√r)", &
avîage_outside_abs_≥r˚¡
, 0, 
NULL
);

3499 
	`°©_ªg_doubÀ
 (
sdb
, "avîage_c‹√r_≥r˚¡", "avîagêoutsidê∑ckë†≥r˚¡(c‹√r: should bêdivided byÅŸÆ_nŸ_Æl_˛os)", &
avîage_c‹√r_≥r˚¡
, 0, 
NULL
);

3500 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_Ár_∑ckës", "", &
tŸÆ_Ár_∑ckës
, 0, 
NULL
);

3501 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_c‹√r_∑ckës", "", &
tŸÆ_c‹√r_∑ckës
, 0, 
NULL
);

3502 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_√ighb‹_∑ckës", "", &
tŸÆ_√ighb‹_∑ckës
, 0, 
NULL
);

3503 
	`°©_ªg_doubÀ
 (
sdb
, "≥ndög_övÆid_cy˛es", "how m™y cy˛e†tÿövÆid©êthêˇchêlöe", &
≥ndög_övÆid_cy˛es
, 0, 
NULL
);

3510 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_down_r", "", &
downgøde_r
, 0, 
NULL
);

3511 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_down_w", "", &
downgøde_w
, 0, 
NULL
);

3512 
i
=0;i<5;i++)

3514 
	`•rötf
 (
ch2
, "down_•™d_%d", 
i
);

3515 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
•™d
[
i
], 0, 
NULL
);

3518 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥iv©e_cou¡s", "", &
¥iv©e_cou¡
, 0, 
NULL
);

3519 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_migøti⁄_cou¡s", "", &
migøã_cou¡
, 0, 
NULL
);

3520 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sh¨ed_cou¡s", "", &
sh¨ed_cou¡
, 0, 
NULL
);

3521 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sh¨ed_rw_cou¡s", "", &
sh¨ed_rw_cou¡
, 0, 
NULL
);

3522 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥iv©e_dy«mic_cou¡s", "", &
¥iv©e_dy«mic_ac˚s£s
, 0, 
NULL
);

3523 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_migøã_dy«mic_cou¡s", "", &
migøã_dy«mic_ac˚s£s
, 0, 
NULL
);

3524 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_sh¨ed_dy«mic_cou¡s", "", &
sh¨ed_dy«mic_ac˚s£s
, 0, 
NULL
);

3525 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_§w_dy«mic_cou¡s", "", &
sh¨edrw_dy«mic_ac˚s£s
, 0, 
NULL
);

3526 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_öÊight_¥iv©e", "", &
öÊight_¥iv©e
, 0, 
NULL
);

3527 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_öÊight_migøã", "", &
öÊight_migøã
, 0, 
NULL
);

3528 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_öÊight_sh¨ed_⁄ly", "", &
öÊight_sh¨ed_⁄ly
, 0, 
NULL
);

3529 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_öÊight_sh¨ed_rw", "", &
öÊight_sh¨ed_rw
, 0, 
NULL
);

3530 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_¥iv©e_Ÿhîs", "", &
¥iv©e_Ÿhîs
, 0, 
NULL
);

3531 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_ty≥_ch™ged", "", &
ty≥_ch™ged
, 0, 
NULL
);

3532 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_löe_ac˚s£s", "", &
löe_ac˚s£s
, 0, 
NULL
);

3533 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_öÊight_ac˚s£s", "", &
löe_öÊight_ac˚s£s
, 0, 
NULL
);

3534 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_p_to_§w", "", &
¥iv©e_to_sh¨ed_rw
, 0, 
NULL
);

3535 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_§w_to_p", "", &
sh¨ed_rw_to_¥iv©e
, 0, 
NULL
);

3536 
	`°©_ªg_cou¡î
 (
sdb
, "tŸÆ_§w_c⁄°©¡", "", &
sh¨ed_rw_c⁄°™t
, 0, 
NULL
);

3538 
i
=0;i<101;i++)

3540 
	`•rötf
 (
ch2
, "Cache_dy«mic_acc_¥iv©e%d", 
i
);

3541 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_dy«mic_acc_¥iv©e
[
i
], 0, 
NULL
);

3543 
i
=0;i<101;i++)

3545 
	`•rötf
 (
ch2
, "Cache_dy«mic_acc_migøã%d", 
i
);

3546 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_dy«mic_acc_migøã
[
i
], 0, 
NULL
);

3548 
i
=0;i<101;i++)

3550 
	`•rötf
 (
ch2
, "Cache_dy«mic_acc_sh¨ed%d", 
i
);

3551 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_dy«mic_acc_sh¨ed
[
i
], 0, 
NULL
);

3553 
i
=0;i<101;i++)

3555 
	`•rötf
 (
ch2
, "Cache_dy«mic_acc_§w%d", 
i
);

3556 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_dy«mic_acc_§w
[
i
], 0, 
NULL
);

3558 
i
=0;i<101;i++)

3560 
	`•rötf
 (
ch2
, "Cache_acc_§w_¥i_r%d", 
i
);

3561 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_acc_§w_¥i_r
[
i
], 0, 
NULL
);

3563 
i
=0;i<101;i++)

3565 
	`•rötf
 (
ch2
, "Cache_acc_§w_¥i_w%d", 
i
);

3566 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_acc_§w_¥i_w
[
i
], 0, 
NULL
);

3568 
i
=0;i<101;i++)

3570 
	`•rötf
 (
ch2
, "Cache_acc_§w_r%d", 
i
);

3571 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_acc_§w_r
[
i
], 0, 
NULL
);

3573 
i
=0;i<101;i++)

3575 
	`•rötf
 (
ch2
, "Cache_acc_§w_w%d", 
i
);

3576 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_acc_§w_w
[
i
], 0, 
NULL
);

3578 
i
=0;i<101;i++)

3580 
	`•rötf
 (
ch2
, "Cache_acc_§w_¥iv©e%d", 
i
);

3581 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_acc_§w_¥iv©e
[
i
], 0, 
NULL
);

3583 
i
=0;i<101;i++)

3585 
	`•rötf
 (
ch2
, "Cache_acc_§w_§w_%d", 
i
);

3586 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_acc_§w_§w
[
i
], 0, 
NULL
);

3588 
i
=0;i<101;i++)

3590 
	`•rötf
 (
ch2
, "Cache_ac˚ss_%d", 
i
);

3591 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_ac˚ss
[
i
], 0, 
NULL
);

3593 
i
=0;i<101;i++)

3595 
	`•rötf
 (
ch2
, "w‹d_utûiz©i⁄_%d", 
i
);

3596 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
w‹d_utûiz©i⁄
[
i
], 0, 
NULL
);

3598 
i
=0;i<101;i++)

3600 
	`•rötf
 (
ch2
, "Cache_ac˚ss_p_%d", 
i
);

3601 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_ac˚ss_p
[
i
], 0, 
NULL
);

3603 
i
=0;i<101;i++)

3605 
	`•rötf
 (
ch2
, "w‹d_utûiz©i⁄_p_%d", 
i
);

3606 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
w‹d_utûiz©i⁄_p
[
i
], 0, 
NULL
);

3608 
i
=0;i<101;i++)

3610 
	`•rötf
 (
ch2
, "Cache_ac˚ss_s_%d", 
i
);

3611 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_ac˚ss_s
[
i
], 0, 
NULL
);

3613 
i
=0;i<101;i++)

3615 
	`•rötf
 (
ch2
, "w‹d_utûiz©i⁄_s_%d", 
i
);

3616 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
w‹d_utûiz©i⁄_s
[
i
], 0, 
NULL
);

3618 
i
=0;i<101;i++)

3620 
	`•rötf
 (
ch2
, "Cache_ac˚ss_m_%d", 
i
);

3621 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_ac˚ss_m
[
i
], 0, 
NULL
);

3623 
i
=0;i<101;i++)

3625 
	`•rötf
 (
ch2
, "w‹d_utûiz©i⁄_m_%d", 
i
);

3626 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
w‹d_utûiz©i⁄_m
[
i
], 0, 
NULL
);

3628 
i
=0;i<101;i++)

3630 
	`•rötf
 (
ch2
, "Cache_ac˚ss_§w_%d", 
i
);

3631 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
Cache_ac˚ss_§w
[
i
], 0, 
NULL
);

3633 
i
=0;i<101;i++)

3635 
	`•rötf
 (
ch2
, "w‹d_utûiz©i⁄_§w_%d", 
i
);

3636 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
w‹d_utûiz©i⁄_§w
[
i
], 0, 
NULL
);

3638 
i
 = 0; i < 16; i++)

3640 
ch2
[20];

3641 
	`•rötf
 (
ch2
, "p‹t_%d", 
i
);

3642 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
p‹t_acc‹d
[
i
], 0, 
NULL
);

3644 
i
 = 0; i < 
MAXTHREADS
; i++)

3646 
ch2
[20];

3647 
	`•rötf
 (
ch2
, "sh¨î_di°r_%d", 
i
);

3648 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
sh¨î_di°r
[
i
], 0, 
NULL
);

3681 
	`›tiˇl_ªg_°©s
 (
sdb
);

3683 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_cou¡", "cumuœtivêIFQ occu∑ncy", &
IFQ_cou¡
, 0, 
NULL
);

3684 
	`°©_ªg_cou¡î
 (
sdb
, "IFQ_fcou¡", "cumuœtivêIFQ fuŒ cou¡", &
IFQ_fcou¡
, 0, 
NULL
);

3685 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_occu∑ncy", "avg IFQ occu∑ncy (ö¢'s)", "IFQ_cou¡ / sim_cy˛e", 
NULL
);

3686 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_øã", "avg IFQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

3687 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_œãncy", "avg IFQ occu∑¡Ü©ícy (cy˛e's)", "ifq_occu∑ncy / ifq_øã", 
NULL
);

3688 
	`°©_ªg_f‹muœ
 (
sdb
, "ifq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËIFQ wa†fuŒ", "IFQ_fcou¡ / sim_cy˛e", 
NULL
);

3690 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_cou¡", "cumuœtivêRUU occu∑ncy", &
RUU_cou¡
, 0, 
NULL
);

3691 
	`°©_ªg_cou¡î
 (
sdb
, "RUU_fcou¡", "cumuœtivêRUU fuŒ cou¡", &
RUU_fcou¡
, 0, 
NULL
);

3692 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_occu∑ncy", "avg RUU occu∑ncy (ö¢'s)", "RUU_cou¡ / sim_cy˛e", 
NULL
);

3693 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_øã", "avg RUU di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

3694 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_œãncy", "avg RUU occu∑¡Ü©ícy (cy˛e's)", "ruu_occu∑ncy /Ñuu_øã", 
NULL
);

3695 
	`°©_ªg_f‹muœ
 (
sdb
, "ruu_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËRUU wa†fuŒ", "RUU_fcou¡ / sim_cy˛e", 
NULL
);

3697 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_cou¡", "cumuœtivêLSQ occu∑ncy", &
LSQ_cou¡
, 0, 
NULL
);

3698 
	`°©_ªg_cou¡î
 (
sdb
, "LSQ_fcou¡", "cumuœtivêLSQ fuŒ cou¡", &
LSQ_fcou¡
, 0, 
NULL
);

3699 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_occu∑ncy", "avg LSQ occu∑ncy (ö¢'s)", "LSQ_cou¡ / sim_cy˛e", 
NULL
);

3700 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_øã", "avg LSQ di•©chÑ©ê(ö¢/cy˛e)", "sim_tŸÆ_ö¢ / sim_cy˛e", 
NULL
);

3701 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_œãncy", "avg LSQ occu∑¡Ü©ícy (cy˛e's)", "lsq_occu∑ncy /Üsq_øã", 
NULL
);

3702 
	`°©_ªg_f‹muœ
 (
sdb
, "lsq_fuŒ", "‰a˘i⁄ o‡timê(cy˛e'sËLSQ wa†fuŒ", "LSQ_fcou¡ / sim_cy˛e", 
NULL
);

3703 
	`°©_ªg_cou¡î
 (
sdb
, "dl2A˘uÆlyAc˚s£d", "", &
dl2A˘uÆlyAc˚s£d
, 0, 
NULL
);

3705 
	`°©_ªg_cou¡î
 (
sdb
, "¥e„tchLﬂd", "", &
m_sqPª„tchC¡
, 0, 
NULL
);

3707 
i
 = 0; i < 
numc⁄ãxts
; i++)

3709 
ch
[20], 
fm
[30], 
ch2
[20];

3711 
	`•rötf
 (
ch2
, "brRecovîy_%d", 
i
);

3712 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ wr⁄g bønches", &
brRecovîy
[
i
], 0, 
NULL
);

3714 
	`•rötf
 (
ch2
, "exåaIn¢_%d", 
i
);

3715 
	`°©_ªg_cou¡î
 (
sdb
, "exåaIn¢", "tŸÆÇumbî o‡wr⁄gÖ©h in¢Éxecuãd", &
exåaIn¢
[
i
], 0, 
NULL
);

3719 
i
 = 0; i < 
THREADS_PER_JOB
; i++)

3721 
ch2
[20];

3725 
i
 = 0; i < 
MAXTHREADS
; i++)

3727 
ch2
[20];

3730 
	`•rötf
 (
ch2
, "thªad_sim_ö¢_%d", 
i
);

3731 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "≥∏thªad simÇum in¢", &
simIn¢
[
i
], 0, 
NULL
);

3732 
	`•rötf
 (
ch2
, "SèŒCou¡_%d", 
i
);

3733 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "tŸÆ sèŒ cou¡", &
¶ìpCou¡
[
i
], 0, 
NULL
);

3734 
	`•rötf
 (
ch2
, "quõn£Wakeup_%d", 
i
);

3735 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
quõn£Wakeup
[
i
], 0, 
NULL
);

3736 
	`•rötf
 (
ch2
, "£qC⁄sRïœy_%d", 
i
);

3737 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sRïœy
[
i
], 0, 
NULL
);

3738 
	`•rötf
 (
ch2
, "£qC⁄sIn¢Rïœy_%d", 
i
);

3739 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
£qC⁄sIn¢Rïœy
[
i
], 0, 
NULL
);

3740 
	`•rötf
 (
ch2
, "ld°Reje˘i⁄Cou¡_%d", 
i
);

3741 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
ld°Reje˘i⁄Cou¡
[
i
], 0, 
NULL
);

3742 
	`•rötf
 (
ch2
, "TrueRïœy_%d", 
i
);

3743 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqNumLdRïœy
[
i
], 0, 
NULL
);

3745 
	`•rötf
 (
ch2
, "InvÆid©i⁄Rïœy_%d", 
i
);

3746 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
övÆid©i⁄_ª∂ay
[
i
], 0, 
NULL
);

3748 #ifde‡
RELAXED_CONSISTENCY


3749 
	`•rötf
 (
ch2
, "lﬂdLﬂdRïœy_%d", 
i
);

3750 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
lﬂdLﬂdRïœyCou¡
[
i
], 0, 
NULL
);

3752 
	`•rötf
 (
ch2
, "avgRUUsize_%d", 
i
);

3753 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgRUUsize
[
i
], 0, 
NULL
);

3754 
	`•rötf
 (
ch2
, "avgLQsize_%d", 
i
);

3755 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgLQsize
[
i
], 0, 
NULL
);

3756 
	`•rötf
 (
ch2
, "avgSQsize_%d", 
i
);

3757 
	`°©_ªg_doubÀ
 (
sdb
, 
ch2
, "", &
avgSQsize
[
i
], 0, 
NULL
);

3758 
	`•rötf
 (
ch2
, "CommôSèŒ_%d", 
i
);

3759 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_commôSèŒ
[
i
], 0, 
NULL
);

3760 
	`•rötf
 (
ch2
, "TŸÆSèŒ_%d", 
i
);

3761 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_tŸÆSèŒ
[
i
], 0, 
NULL
);

3762 
	`•rötf
 (
ch2
, "RUUSèŒ_%d", 
i
);

3763 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_RUUFuŒ
[
i
], 0, 
NULL
);

3764 
	`•rötf
 (
ch2
, "LQSèŒ_%d", 
i
);

3765 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqLQFuŒ
[
i
], 0, 
NULL
);

3766 
	`•rötf
 (
ch2
, "SQSèŒ_%d", 
i
);

3767 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_sqSQFuŒ
[
i
], 0, 
NULL
);

3768 
	`•rötf
 (
ch2
, "St‹eMissSèŒ_%d", 
i
);

3769 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eMiss
[
i
], 0, 
NULL
);

3770 
	`•rötf
 (
ch2
, "LQHôSèŒ_%d", 
i
);

3771 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdRólHô
[
i
], 0, 
NULL
);

3772 
	`•rötf
 (
ch2
, "LQMissSèŒ_%d", 
i
);

3773 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdRólMiss
[
i
], 0, 
NULL
);

3774 
	`•rötf
 (
ch2
, "SQHôSèŒ_%d", 
i
);

3775 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eRólHô
[
i
], 0, 
NULL
);

3776 
	`•rötf
 (
ch2
, "SQMissSèŒ_%d", 
i
);

3777 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eRólMiss
[
i
], 0, 
NULL
);

3778 
	`•rötf
 (
ch2
, "St‹eSèŒMiss_%d", 
i
);

3779 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eSèŒMiss
[
i
], 0, 
NULL
);

3780 
	`•rötf
 (
ch2
, "St‹eSèŒHô_%d", 
i
);

3781 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eSèŒHô
[
i
], 0, 
NULL
);

3782 
	`•rötf
 (
ch2
, "LﬂdSèŒMiss_%d", 
i
);

3783 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdSèŒMiss
[
i
], 0, 
NULL
);

3784 
	`•rötf
 (
ch2
, "LﬂdSèŒHô_%d", 
i
);

3785 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdSèŒHô
[
i
], 0, 
NULL
);

3786 
	`•rötf
 (
ch2
, "St‹eUpd©eMissSèŒ_%d", 
i
);

3787 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_St‹eUpd©eMiss
[
i
], 0, 
NULL
);

3788 
	`•rötf
 (
ch2
, "LﬂdMissSèŒ_%d", 
i
);

3789 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_LﬂdMiss
[
i
], 0, 
NULL
);

3790 
	`•rötf
 (
ch2
, "RegSèŒ_%d", 
i
);

3791 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_ªgFuŒ
[
i
], 0, 
NULL
);

3792 
	`•rötf
 (
ch2
, "IssueSèŒ_%d", 
i
);

3793 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_issueFuŒ
[
i
], 0, 
NULL
);

3794 
	`•rötf
 (
ch2
, "Il1missSèŒ_%d", 
i
);

3795 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_û1Miss
[
i
], 0, 
NULL
);

3796 
	`•rötf
 (
ch2
, "FëchSèŒ_%d", 
i
);

3797 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_„tchEm±y
[
i
], 0, 
NULL
);

3798 
	`•rötf
 (
ch2
, "STLCSèŒ_%d", 
i
);

3799 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_STLC
[
i
], 0, 
NULL
);

3800 
	`•rötf
 (
ch2
, "TøpSèŒ_%d", 
i
);

3801 
	`°©_ªg_cou¡î
 (
sdb
, 
ch2
, "", &
m_å≠
[
i
], 0, 
NULL
);

3804 #ifde‡
LOAD_PREDICTOR


3806 i‡(
ld¥ed
)

3807 
	`b¥ed_ªg_°©s
 (
ld¥ed
, 
sdb
, 0);

3811 
i
 = 0; i < 
numc⁄ãxts
; i++)

3813 
	`ld_ªg_°©s
 (
sdb
, 
i
);

3814 
	`mem_ªg_°©s
 (
thec⁄ãxts
[
i
]->
mem
, 
sdb
);

3817 
i
 = 0; i < 
MAXTHREADS
; i++)

3819 i‡(
ˇche_dl1
[
i
])

3820 
	`ˇche_ªg_°©s
 (
ˇche_dl1
[
i
], 
sdb
, i);

3821 i‡(
ˇche_û1
[
i
])

3822 
	`ˇche_ªg_°©s
 (
ˇche_û1
[
i
], 
sdb
, i);

3823 i‡(
ôlb
[
i
])

3824 
	`ˇche_ªg_°©s
 (
ôlb
[
i
], 
sdb
, i);

3825 i‡(
déb
[
i
])

3826 
	`ˇche_ªg_°©s
 (
déb
[
i
], 
sdb
, i);

3829 i‡(
ˇche_ml2
)

3830 
	`ˇche_ªg_°©s
 (
ˇche_ml2
, 
sdb
, 0);

3832 i‡(
ˇche_dl2
)

3833 
	`ˇche_ªg_°©s
 (
ˇche_dl2
, 
sdb
, 0);

3836 
	`powî_ªg_°©s
 (
sdb
);

3839 
	`°©_ªg_cou¡î
 (
sdb
, "sim_övÆid_addrs", "tŸÆÇ⁄-•ecuœtivêbogu†addªs£†£í (debug v¨)", &
sim_övÆid_addrs
, 0, 
NULL
);

3841 
i
 = 0; i < 
pc°©_√…
; i++)

3843 
buf
[512], 
buf1
[512];

3844 
°©_°©_t
 *
°©
;

3848 
°©
 = 
	`°©_föd_°©
 (
sdb
, 
pc°©_v¨s
[
i
]);

3849 i‡(!
°©
)

3850 
	`Áèl
 ("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

3853 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

3854 
	`Áèl
 ("`-pc°©' sèti°iˇ»v¨übÀ `%s' i†nŸá¿öãgø»ty≥", 
°©
->
«me
);

3857 
pc°©_°©s
[
i
] = 
°©
;

3858 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
 (
°©
);

3861 
	`•rötf
 (
buf
, "%s_by_pc", 
°©
->
«me
);

3862 
	`•rötf
 (
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

3863 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
 (
sdb
, 
buf
, 
buf1
,

3865  (
PF_COUNT
 | 
PF_PDF
),

3867  
NULL
);

3871 #ifde‡
TOKENB


3872 i‡(
tokíB
)

3873 
	`tc_ªg_°©s
 (
sdb
);

3875 
	`˛u°î_ªg_°©s
 (
sdb
);

3876 
	}
}

3879 
lsq_öô
 ();

3880 
r¶ök_öô
 (
∆öks
);

3881 
rs_ˇche_öô
 ();

3882 
evítq_öô
 ();

3883 
ªadyq_öô
 ();

3884 
cv_öô
 (
thªadid
);

3885 
ruu_öô
 (
thªadid
);

3886 
åa˚r_öô
 (
thªadid
);

3887 
„tch_öô
 (
thªadid
);

3889 
dú_evítq_öô
();

3893 
	$sim_öô
 ()

3895 
i
;

3897 
sim_num_ªfs
 = 0;

3899 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

3902 i‡(
bimod_√…
 != 1)

3903 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3904 i‡(
btb_√…
 != 2)

3905 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3908 
i
 = 0; i < 
numc⁄ãxts
; i++)

3910 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

3911  
bimod_c⁄fig
[0],

3917  
btb_c⁄fig
[0],

3918  
btb_c⁄fig
[1],

3919  
øs_size
);

3922 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

3925 i‡(
twﬁev_√…
 != 4)

3926 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3927 i‡(
btb_√…
 != 2)

3928 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3930 
i
 = 0; i < 
numc⁄ãxts
; i++)

3932 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

3934  
twﬁev_c⁄fig
[0],

3935  
twﬁev_c⁄fig
[1],

3937  
twﬁev_c⁄fig
[2],

3938  
twﬁev_c⁄fig
[3],

3939  
btb_c⁄fig
[0],

3940  
btb_c⁄fig
[1],

3941  
øs_size
);

3944 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

3947 i‡(
twﬁev_√…
 != 4)

3948 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

3949 i‡(
bimod_√…
 != 1)

3950 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

3951 i‡(
comb_√…
 != 1)

3952 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

3953 i‡(
btb_√…
 != 2)

3954 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

3956 
i
 = 0; i < 
numc⁄ãxts
; i++)

3958 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

3959  
bimod_c⁄fig
[0],

3960  
twﬁev_c⁄fig
[0],

3961  
twﬁev_c⁄fig
[1],

3962  
comb_c⁄fig
[0],

3963  
twﬁev_c⁄fig
[2],

3964  
twﬁev_c⁄fig
[3],

3965  
btb_c⁄fig
[0],

3966  
btb_c⁄fig
[1],

3967  
øs_size
);

3971 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


3972 #i‚de‡
CENTRALIZED_CACHE_BANK


3973 i‡(
ªs_memb™k
 < 
CLUSTERS
)

3975 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3976 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d < CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3977 
	`exô
 (1);

3980 i‡(
ªs_memb™k
 !
CLUSTERS
)

3982 
	`Ârötf
 (
°dîr
, "Impossible configuration, for PWR_DE_CENTRALIZED_LSQÑes_membank mustÉqual CLUSTERS");

3983 
	`Ârötf
 (
°dîr
, "Ñes_memb™k %d ! CLUSTERS %d", 
ªs_memb™k
, 
CLUSTERS
);

3984 
	`exô
 (1);

3989 #ifde‡
PORT_PER_BANK


3990 
CACHEPORTS
 = 
RES_CACHEPORTS
 = 
RES_CACHE_PORTS
 = 
ªs_memb™k
;

3991 
ªs_memp‹t
 = 
ªs_mem_p‹t_b™k
 * 
ªs_memb™k
;

3994 #ifde‡
ISSUE_PER_CLUSTER


4000 
i
 = 0; i < 
numc⁄ãxts
; i++)

4002 i‡(
i
 == 0)

4004 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
Vdd
 * Vdd;

4005 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* (
Vdd
 / 2) * (Vdd / 2);

4006 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 1;

4010 
thec⁄ãxts
[
i
]->
powî
.
PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * 
Vdd
 * checkerVDD * Vdd;

4011 
thec⁄ãxts
[
i
]->
powî
.
Sí£PowîÁ˘‹
 = (
Mhz
Ë* 
checkîVDD
 * (
Vdd
 / 2) * checkerVDD * (Vdd / 2);

4012 
thec⁄ãxts
[
i
]->
powî
.
vdd_ªdu˘i⁄
 = 
checkîVDD
;

4015 
	`ˇlcuœã_powî
 (&(
thec⁄ãxts
[
i
]->
powî
));

4017 i‡(
i
)

4019 
thec⁄ãxts
[
i
]->
powî
.
b¥ed_powî
 = 0;

4020 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_powî
 =Åhecontexts[0]->power.dcache2_power;

4022 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_decodî
 =Åhecontexts[0]->power.dcache2_decoder;

4023 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_w‹dlöe
 =Åhecontexts[0]->power.dcache2_wordline;

4024 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_bôlöe
 =Åhecontexts[0]->power.dcache2_bitline;

4025 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_£n£amp
 =Åhecontexts[0]->power.dcache2_senseamp;

4026 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_èg¨øy
 =Åhecontexts[0]->power.dcache2_tagarray;

4027 
thec⁄ãxts
[
i
]->
powî
.
dˇche2_gc
 =Åhecontexts[0]->power.dcache2_gc;

4031 i‡(
hŸ•Ÿ_a˘ive
)

4032 
	`hŸ•Ÿ_öô
 ();

4033 
	}
}

4037 
simoo_ªg_obj
 (
ªgs_t
 *
ªgs
,

4038 
is_wrôe
,

4039 
md_ªg_ty≥
 
π
,

4040 
ªg
,

4041 
evÆ_vÆue_t
 *
vÆ
);

4045 
simoo_mem_obj
 (
mem_t
 *
mem
,

4046 
is_wrôe
,

4047 
md_addr_t
 
addr
,

4048 *
p
,

4049 
nbyãs
);

4053 
simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

4054 *
cmd
,

4055 
ªgs_t
 *
ªgs
,

4056 
mem_t
 *
mem
);

4059 
	#MAX_RS_LINKS
 65536

	)

4060 
cou¡î_t
 
	grs_lök_num
 = 0;

4062 
	gMAX_BR_NUM
;

4066 
	$sim_lﬂd_thªads
 (
¨gc
, **
¨gv
,

4067 **
ívp
)

4069 
i
, 
j
, 
¨g_°©us
 = 1;

4070 
c⁄ãxt
 *
cuºít
;

4072 
numc⁄ãxts
 = 0;

4073 
j
 = 0; (j < 
¨gc
Ë&& (
numc⁄ãxts
 < 
MAXTHREADS
Ë&& 
¨g_°©us
; j++)

4075 
	`Ârötf
 (
°dîr
, "öôülizög c⁄ãxà%d\n", 
numc⁄ãxts
);

4077 
¨g_°©us
 = 
	`ªad_thªad_¨gs
 (
ívp
, 
¨gv
[
j
], &
numc⁄ãxts
);

4079 
cuºít
 = 
thec⁄ãxts
[
j
];

4081 
cuºít
->
a˘uÆid
 = 0;

4084 
	`ld_lﬂd_¥og
 (
cuºít
->
‚ame
, cuºít->
¨gc
, cuºít->
¨gv
, 
ívp
, &(cuºít->
ªgs
), cuºít->
mem
, 
TRUE
, 
j
);

4088 i‡(
±ø˚_√…
 == 2)

4091 
	`±ø˚_›í
 ( 
±ø˚_›ts
[0],Ötrace_opts[1]);

4093 i‡(
±ø˚_√…
 == 0)

4098 
	`Áèl
 ("badÖipetraceárgs, use: <fname|stdout|stderr> <range>");

4101 
MAX_BR_NUM
 = 
ruu_ifq_size
 + 
RUU_size
;

4106 
fu_poﬁ
 = 
	`ªs_¸óã_poﬁ
 ("fu-poﬁ", 
fu_c⁄fig
, 
	`N_ELT
 (fu_config));

4107 
	`r¶ök_öô
 (
MAX_RS_LINKS
);

4108 
	`rs_ˇche_öô
();

4109 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
;

4110 
j
 = 0; j < 
numc⁄ãxts
; j++)

4111 
	`åa˚r_öô
 (
j
);

4112 
j
 = 0; j < 
numc⁄ãxts
; j++)

4113 
	`„tch_öô
 (
j
);

4114 
j
 = 0; j < 
numc⁄ãxts
; j++)

4115 
	`cv_öô
 (
j
);

4116 
	`evítq_öô
 ();

4117 
	`ªadyq_öô
 ();

4118 #ifde‡
LOCK_HARD


4119 
	`lock_evítq_öô
();

4121 
	`dú_evítq_öô
();

4122 
j
 = 0; j < 
MAXTHREADS
+
mesh_size
*2; j++)

4124 
dú_fifo_hód
[
j
] = 0;

4125 
dú_fifo_èû
[
j
] = 0;

4126 
dú_fifo_num
[
j
] = 0;

4127 
dú_fifo_p‹tu£
[
j
] = 0;

4128 
l1_fifo_hód
[
j
] = 0;

4129 
l1_fifo_èû
[
j
] = 0;

4130 
l1_fifo_num
[
j
] = 0;

4131 
l1_fifo_p‹tu£
[
j
] = 0;

4132 
œ°_L1_mshr_fuŒ
[
j
] = 0;

4133 
œ°_L1_fifo_fuŒ
[
j
] = 0;

4134 
œ°_Dú_fifo_fuŒ
[
j
] = 0;

4135 
œ°_I≈ut_queue_fuŒ
[
j
] = 0;

4137 
œ°_L2_mshr_fuŒ
 = 0;

4138 
ßme_L1_L2_fifo_fuŒ
 = 0;

4139 
L1_mshr_fuŒ
 = 0;

4140 
L2_mshr_fuŒ
 = 0;

4141 
L2_mshr_fuŒ_¥e„tch
 = 0;

4142 
L1_fifo_fuŒ
 = 0;

4143 
Dú_fifo_fuŒ
 = 0;

4144 
I≈ut_queue_fuŒ
 = 0;

4145 
Ouçut_queue_fuŒ
 = 0;

4147 
SèŒ_L1_mshr
 = 0;

4148 
SèŒ_L2_mshr
 = 0;

4149 
SèŒ_L1_fifo
 = 0;

4150 
SèŒ_dú_fifo
 = 0;

4151 
SèŒ_öput_queue
 = 0;

4152 
SèŒ_ouçut_queue
 = 0;

4154 
j
 = 0; j < 
numc⁄ãxts
; j++)

4156 
	`ruu_öô
 (
j
);

4157 
	`lsq_öô
 (
j
);

4161 
j
 = 0; j < 
numc⁄ãxts
; j++)

4163 
¥i‹ôy
[
j
] = j;

4164 
key
[
j
] = 0;

4165 #ifde‡
INTERVAL_BASED


4166 
öãrvÆ_¥i‹ôy
[
j
] = j;

4167 
öãrvÆ_key
[
j
] = 0;

4171 #ifde‡ 
CLUSTER_PRIORITY


4172 
j
 = 0; j < 
CLUSTERS
; j++)

4173 
¥i‹ôy_˛
[
j
] = j;

4176 #ifde‡ 
PRIORITY_STEER


4177 
j
 = 0; j < 
CLUSTERS
; j++)

4178 
¥i‹ôy_˛
[
j
] = j;

4181 #ifde‡ 
STEER_DISPATCH_STAT


4182 
j
 = 0; j < 
numc⁄ãxts
; j++)

4183 
ªady_°ìr_thrd_max
[
j
] = 
ªady_°ìr_thrd_mö
[j] = 
ªady_°ìr_thrd_vÆue
[j] = 
MAXDEV
 / 2;

4186 #i‡
	`deföed
(
DLITE_SUPPORT
)

4188 
	`dlôe_öô
 (
simoo_ªg_obj
, 
simoo_mem_obj
, 
simoo_m°©e_obj
);

4190 
	}
}

4194 
	$sim_aux_°©s
 (
FILE
 * 
°ªam
)

4197 
	}
}

4201 
	$sim_unöô
 ()

4203 i‡(
±ø˚_√…
 > 0)

4204 
	`±ø˚_˛o£
 ();

4207 
	}
}

4214 #i‚de‡ 
STEER_DISPATCH_STAT


4216 
	#OPERANDS_READY
(
RS
Ë\

	)

4217 ((
	gRS
)->
	gidï_ªady
[0] && (RS)->idep_ready[1] && (RS)->idep_ready[2])

4221 
	#ONE_OPERANDS_READY
(
RS
Ë\

	)

4222 ((
	gRS
)->
	gidï_ªady
[0] || (RS)->idep_ready[1])

4227 
	$ruu_öô
 (
thªadid
)

4229 
i
 = 0;

4230 
c⁄ãxt
 *
cuºít
;

4232 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4233 
cuºít
->
RUU
 = 
	`ˇŒoc
 (
RUU_size
,  (
RUU_°©i⁄
));

4234 i‡(!
cuºít
->
RUU
)

4235 
	`Áèl
 ("out of virtual memory");

4237 
i
 = 0; i < 
RUU_size
; i++)

4239 
cuºít
->
RUU
[
i
].
ödex
 = i;

4240 
cuºít
->
RUU
[
i
].
thªadid
 =Åhreadid;

4242 
cuºít
->
RUU_num
 = 0;

4243 
cuºít
->
RUU_hód
 = cuºít->
RUU_èû
 = 0;

4244 
cuºít
->
RUU_cou¡_thrd
 = 0;

4245 
cuºít
->
RUU_fcou¡_thrd
 = 0;

4246 
RUU_cou¡
 = 0;

4247 
RUU_fcou¡
 = 0;

4249 i‡(
thªadid
)

4251 
cuºít
->
cy˛e_mask
 = 0xffffffff;

4252 
cuºít
->
œãncy_Á˘‹
 = 1;

4253 
cuºít
->
maö_thªad
 = 1;

4254 
ˇche_dl1
[
thªadid
]->
hô_œãncy
 *
cuºít
->
œãncy_Á˘‹
;

4257 
i
 = 0; i < 
CLUSTERS
; i++)

4259 
úegfûe_˛_cou¡
[
i
] = 0;

4260 
õxåa_˛_cou¡
[
i
] = 0;

4261 
‰egfûe_˛_cou¡
[
i
] = 0;

4262 
„xåa_˛_cou¡
[
i
] = 0;

4263 
iissueq_˛_cou¡
[
i
] = 0;

4264 
fissueq_˛_cou¡
[
i
] = 0;

4265 #ifde‡
RAW


4266 
øwq_˛_cou¡
[
i
] = 0;

4269 
	}
}

4273 
	$ruu_dum≥¡
 (
RUU_°©i⁄
 *
rs
,

4274 
ödex
,

4275 
FILE
 * 
°ªam
,

4276 
hódî
)

4278 i‡(!
°ªam
)

4279 
°ªam
 = 
°dîr
;

4281 i‡(
hódî
)

4282 
	`Ârötf
 (
°ªam
, "idx: %2d: opcode: %s, in°: `", 
ödex
, 
	`MD_OP_NAME
 (
rs
->
›
));

4284 
	`Ârötf
 (
°ªam
, " opcode: %s, in°: `", 
	`MD_OP_NAME
 (
rs
->
›
));

4285 
	`md_¥öt_ö¢
 (
rs
->
IR
,Ñs->
PC
, 
°ªam
);

4286 
	`Ârötf
 (
°ªam
, "'\n");

4287 
	`myÂrötf
 (
°ªam
, " PC: 0x%08p, NPC: 0x%08∞’ªd_PC: 0x%08p)\n", 
rs
->
PC
,Ñs->
√xt_PC
,Ñs->
¥ed_PC
);

4288 
	`Ârötf
 (
°ªam
, " in_LSQ: %s,Éa_comp: %s,Ñecovî_ö°: %s\n", 
rs
->
ö_LSQ
 ? "t" : "f",Ñs->
ó_comp
 ? "t" : "f",Ñs->
ªcovî_ö°
 ? "t" : "f");

4289 
	`myÂrötf
 (
°ªam
, " s≥c_mode: %s,áddr: 0x%08p,Åag: 0x%08x\n", 
rs
->
•ec_mode
 ? "t" : "f",Ñs->
addr
,Ñs->
èg
);

4290 
	`Ârötf
 (
°ªam
, " seq: 0x%08x,Öåa˚_£q: 0x%08x\n", 
rs
->
£q
,Ñs->
±ø˚_£q
);

4291 
	`Ârötf
 (
°ªam
, " queued: %s, issued: %s, com∂ëed: %s\n", 
rs
->
queued
 ? "t" : "f",Ñs->
issued
 ? "t" : "f",Ñs->
com∂ëed
 ? "t" : "f");

4292 
	`Ârötf
 (
°ªam
, " o≥ønd†ªady: %s\n", 
	`OPERANDS_READY
 (
rs
) ? "t" : "f");

4293 
	}
}

4297 
	$ruu_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4299 
num
, 
hód
;

4300 
RUU_°©i⁄
 *
rs
;

4302 
c⁄ãxt
 *
cuºít
;

4304 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4306 i‡(!
°ªam
)

4307 
°ªam
 = 
°dîr
;

4309 
	`Ârötf
 (
°ªam
, "** Thªad %d **\n", 
thªadid
);

4310 
	`Ârötf
 (
°ªam
, "** RUU state **\n");

4311 
	`Ârötf
 (
°ªam
, "RUU_hód: %d, RUU_èû: %d\n", 
cuºít
->
RUU_hód
, cuºít->
RUU_èû
);

4312 
	`Ârötf
 (
°ªam
, "RUU_num: %d\n", 
cuºít
->
RUU_num
);

4314 
num
 = 
cuºít
->
RUU_num
;

4315 
hód
 = 
cuºít
->
RUU_hód
;

4316 
num
)

4318 
rs
 = &(
cuºít
->
RUU
[
hód
]);

4319 
	`ruu_dum≥¡
 (
rs
,Ñ†- 
cuºít
->
RUU
, 
°ªam
, 
TRUE
);

4320 
hód
 = (hód + 1Ë% 
RUU_size
;

4321 
num
--;

4323 
	}
}

4327 
	$lsq_öô
 (
thªadid
)

4329 
i
 = 0;

4330 
c⁄ãxt
 *
cuºít
;

4332 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4334 
cuºít
->
LSQ
 = 
	`ˇŒoc
 (
LSQ_size
,  (
RUU_°©i⁄
));

4335 i‡(!
cuºít
->
LSQ
)

4336 
	`Áèl
 ("out of virtual memory");

4337 
i
 = 0; i < 
LSQ_size
; i++)

4339 
cuºít
->
LSQ
[
i
].
ödex
 = i;

4340 
cuºít
->
LSQ
[
i
].
thªadid
 =Åhreadid;

4342 
cuºít
->
LSQ_num
 = 0;

4343 
cuºít
->
LSQ_hód
 = cuºít->
LSQ_èû
 = 0;

4344 
cuºít
->
LSQ_cou¡
 = 0;

4345 
cuºít
->
LSQ_fcou¡
 = 0;

4346 
cuºít
->
m_shLQNum
 = 0;

4347 
cuºít
->
m_shSQNum
 = 0;

4348 
m_tŸÆSèŒ
[
thªadid
] = 0;

4349 
m_sqLQFuŒ
[
thªadid
] = 0;

4350 
m_sqSQFuŒ
[
thªadid
] = 0;

4351 
m_RUUFuŒ
[
thªadid
] = 0;

4352 
m_commôSèŒ
[
thªadid
] = 0;

4354 
	}
}

4359 #ifde‡
COUNT_LSQ


4360 
	gn⁄_issue_LSQ_num
;

4368 
	#STORE_OP_INDEX
 0

	)

4369 
	#STORE_ADDR_INDEX
 1

	)

4371 
	#STORE_OP_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_OP_INDEX
])

	)

4372 
	#STORE_ADDR_READY
(
RS
Ë((RS)->
idï_ªady
[
STORE_ADDR_INDEX
])

	)

4388 
RS_lök
 *
	gr¶ök_‰ì_li°
;

4389 
RS_lök
 *
	gr¶ök_li°
[
MAX_RS_LINKS
];

4392 
RS_li°
 *
	grs_ˇche_li°
[
MAXTHREADS
][
MSHR_SIZE
];

4396 
RS_lök
 
	gRSLINK_NULL
 = 
RSLINK_NULL_DATA
;

4397 
cou¡î_t
 
	grs_lök_id
 = 0;

4400 
	#RSLINK_INIT
(
RSL
, 
RS
Ë\

	)

4401 ((
	gRSL
).
	g√xt
 = 
NULL
, (RSL).
	grs
 = (
RS
), (RSL).
	gèg
 = (RS)->
èg
)

4404 
	#RSLINK_IS_NULL
(
LINK
Ë((LINK)->
rs
 =
NULL
)

	)

4407 
	#RSLINK_VALID
(
LINK
Ë((LINK)->
èg
 =(LINK)->
rs
->èg)

	)

4410 
	#RSLINK_RS
(
LINK
Ë((LINK)->
rs
)

	)

4413 
	#RSLINK_NEW
(
DST
, 
RS
Ë\

	)

4414 { 
RS_lök
 *
	gn_lök
; \

4415 i‡(!
	gr¶ök_‰ì_li°
) \

4416 
∑nic
("out ofÑsÜinks"); \

4417 
	grs_lök_num
++; \

4418 
	gn_lök
 = 
r¶ök_‰ì_li°
; \

4419 
	gr¶ök_‰ì_li°
 = 
r¶ök_‰ì_li°
->
√xt
; \

4420 
	gn_lök
->
	g√xt
 = 
NULL
; \

4421 
	gn_lök
->
	grs
 = (
RS
);Ç_lök->
	gèg
 = 
n_lök
->
rs
->
èg
; \

4422 
	gn_lök
->
	gœ°_u£
 = 
sim_cy˛e
; \

4423 (
	gDST
Ë
n_lök
; \

4427 
	#RSLINK_FREE
(
LINK
Ë\

	)

4428 { 
RS_lök
 *
	gf_lök
 = (
LINK
); \

4429 
	gf_lök
->
	grs
 = 
NULL
; f_lök->
	gèg
 = 0; \

4430 
	gf_lök
->
	g√xt
 = 
r¶ök_‰ì_li°
; \

4431 
	gr¶ök_‰ì_li°
 = 
f_lök
; \

4432 
	grs_lök_num
--; \

4437 
	#RSLINK_FREE_LIST
(
LINK
Ë\

	)

4438 { 
RS_lök
 *
	gÊ_lök
, *
	gÊ_lök_√xt
; \

4439 
	gÊ_lök
=(
LINK
); fl_lök; fl_lök=
Ê_lök_√xt
) \

4441 
Ê_lök_√xt
 = 
Ê_lök
->
√xt
; \

4442 
RSLINK_FREE
(
Ê_lök
); \

4448 
	$r¶ök_öô
 (
∆öks
)

4450 
i
;

4451 
RS_lök
 *
lök
;

4453 
r¶ök_‰ì_li°
 = 
NULL
;

4454 
i
 = 0; i < 
∆öks
; i++)

4456 
lök
 = 
	`ˇŒoc
 (1,  (
RS_lök
));

4457 i‡(!
lök
)

4458 
	`Áèl
 ("out of virtual memory");

4459 
r¶ök_li°
[
i
] = 
lök
;

4460 
lök
->
√xt
 = 
r¶ök_‰ì_li°
;

4461 
r¶ök_‰ì_li°
 = 
lök
;

4463 
	}
}

4465 
RS_lök
 * 
	$födMax_r¶ök
()

4467 
i
, 
max_id
;

4468 
RS_lök
 *
lök
;

4469 
cou¡î_t
 
max
 = 0;

4471 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

4473 if(
r¶ök_li°
[
i
]->
œ°_u£
 > 
max
)

4475 
max
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

4476 
max_id
 = 
i
;

4479  
r¶ök_li°
[
max_id
];

4480 
	}
}

4482 
RS_lök
 * 
	$födMö_r¶ök
()

4484 
i
, 
mö_id
;

4485 
RS_lök
 *
lök
;

4486 
cou¡î_t
 
mö
 = 
WAIT_TIME
;

4488 
i
 = 0; i < 
MAX_RS_LINKS
; i++)

4490 if(
r¶ök_li°
[
i
]->
œ°_u£
 < 
mö
)

4492 
mö
 = 
r¶ök_li°
[
i
]->
œ°_u£
;

4493 
mö_id
 = 
i
;

4496  
r¶ök_li°
[
mö_id
];

4497 
	}
}

4500 
	$rs_ˇche_öô
()

4502 
i
, 
n
;

4503 
n
 = 0;Ç < 
MAXTHREADS
;Ç++)

4505 
i
=0; i<
MSHR_SIZE
; i++)

4506 
rs_ˇche_li°
[
n
][
i
] = 
NULL
;

4508 
	}
}

4514 
	$check_fu_busy
 ()

4516 
i
;

4518 
i
 = 0; i < 
numc⁄ãxts
; i++)

4520 
fu_busy
[
i
] = 0;

4524 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

4526 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
)

4527 
fu_busy
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]++;

4529 
	}
}

4539 
	$ruu_ªÀa£_fu
 ()

4541 
i
;

4544 
i
 = 0; i < 
fu_poﬁ
->
num_ªsour˚s
; i++)

4547 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
busy
 > 0)

4549 
fu_poﬁ
->
ªsour˚s
[
i
].
busy
--;

4551 #ifde‡ 
PWR_ALU


4552 #ifde‡
ALU_MERGE


4553 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

4555 
ülu1_ac˚ss
++;

4556 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

4558 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

4560 
Álu1_ac˚ss
++;

4561 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

4564 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IALU_INDEX
)

4566 
ülu1_ac˚ss
++;

4567 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu1_ac˚ss
++;

4569 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_IMULT_INDEX
)

4571 
ülu2_ac˚ss
++;

4572 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
ülu2_ac˚ss
++;

4575 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPALU_INDEX
)

4577 
Álu1_ac˚ss
++;

4578 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu1_ac˚ss
++;

4581 i‡(
fu_poﬁ
->
ªsour˚s
[
i
].
x
[0].
˛ass
 =
FU_FPMULT_INDEX
)

4583 
Álu2_ac˚ss
++;

4584 
thec⁄ãxts
[
fu_poﬁ
->
ªsour˚s
[
i
].
u§_id
]->
Álu2_ac˚ss
++;

4592 
	}
}

4594 #ifde‡
CONF_RES_RESEND


4595 
QUEUE_EVENT
 *
	gª∂y_queue
[
MAXTHREADS
], *
	g£nd_queue
[MAXTHREADS];

4597 
DIRECTORY_EVENT
 *
	gdú_evít_queue
;

4598 
DIRECTORY_EVENT
 *
	gevít_li°
[
L2_MSHR_SIZE
];

4601 
	$dú_evítq_öô
()

4603 
n
 = 0;

4604 #ifde‡
CONF_RES_RESEND


4605 
n
 = 0;Ç<
MAXTHREADS
;Ç++)

4607 
ª∂y_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

4608 
£nd_queue
[
n
] = (
QUEUE_EVENT
 *Ë
	`ˇŒoc
 (1,  (QUEUE_EVENT));

4609 
	`öôQueue
(
ª∂y_queue
[
n
]);

4610 
	`öôQueue
(
£nd_queue
[
n
]);

4613 
dú_evít_queue
 = 
NULL
;

4614 
n
 = 0;Ç<
L2_MSHR_SIZE
;Ç++)

4615 
evít_li°
[
n
] = 
NULL
;

4616 
	}
}

4617 #ifde‡
LOCK_HARD


4619 
	$lock_evítq_öô
()

4621 
n
 = 0, 
j
 = 0;

4622 
n
 = 0;Ç<
MAXTHREADS
;Ç++)

4624 
j
=0;j<
MAXLOCK
;j++)

4626 
LOCK_REG
[
n
][
j
] = (
LOCK_ENTRY
 *Ë
	`ˇŒoc
 (1,  (LOCK_ENTRY));

4627 
LOCK_REG
[
n
][
j
]->
lock_ow√r
 = 0;

4628 
LOCK_REG
[
n
][
j
]->
waôög_num
 = 0;

4629 
LOCK_REG
[
n
][
j
]->
waôög_hód
 = 0;

4630 
LOCK_REG
[
n
][
j
]->
waôög_èû
 = 0;

4632 
j
=0;j<
MAXBARRIER
;j++)

4634 
BAR_REG
[
n
][
j
] = (
BAR_ENTRY
 *Ë
	`ˇŒoc
 (1,  (BAR_ENTRY));

4635 
BAR_REG
[
n
][
j
]->
b¨rõr_num
 = 0;

4638 
	}
}

4641 #ifde‡
CONF_RES_RESEND


4643 
	$öôQueue
(
QUEUE_EVENT
 *
queue
)

4645 
i
;

4646 if(!
queue
) ;

4647 
queue
->
‰ì_E¡rõs
 = 
QUEUE_SIZE
;

4648 
i
=0; i<
QUEUE_SIZE
; i++)

4650 
queue
->
Queue_íåy
[
i
].
isvÆid
 = 0;

4651 
queue
->
Queue_íåy
[
i
].
evít
 = 
NULL
;

4653 
	}
}

4657 
	$buf„r_fuŒ_check
(
DIRECTORY_EVENT
 *
evít
)

4659 
vc
 = 0, 
›ti⁄s
 = -1, 
buf„r_fuŒ
 = 0;

4660 if((
evít
->
des1
*
mesh_size
+evít->
des2
 !evít->
§c1
*mesh_size+evít->
§c2
Ë&& (evít->
öput_buf„r_fuŒ
)

4661 && (
evít
->
›î©i⁄
 =
MISS_WRITE
 ||Évít->›î©i⁄ =
MISS_READ
 ||Évít->›î©i⁄ =
WRITE_UPDATE
 ||Évít->›î©i⁄ =
MISS_IL1
 ))

4663 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || (!mystricmp (network_type, "HYBRID")))

4665 if(
	`›tiˇlBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
›î©i⁄
))

4666 
buf„r_fuŒ
 = 1;

4668 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

4670 
›ti⁄s
 = 
	`OrdîCheck
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1));

4671 
vc
 = 
	`p›√tBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
, 
›ti⁄s
);

4672 if(
vc
 == -1)

4673 
buf„r_fuŒ
 = 1;

4676 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

4678 
buf„r_fuŒ
 = 
	`CombNëw‹kBuf„rS∑˚
(
evít
->
§c1
,Évít->
§c2
,Évít->
des1
,Évít->
des2
,Évít->
addr
&~(
ˇche_dl1
[0]->
bsize
-1),Évít->
›î©i⁄
, &
vc
);

4680 if(
buf„r_fuŒ
)

4683 if(!
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

4685 
I≈ut_queue_fuŒ
 ++;

4686 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 
sim_cy˛e
;

4692 
evít
->
öput_buf„r_fuŒ
 = 0;

4693 
evít
->
°¨tCy˛e
 = 
sim_cy˛e
;

4694 
	`scheduÀThroughNëw‹k
(
evít
, 
sim_cy˛e
, 
mëa_∑ckë_size
, 
vc
);

4695 if(
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
])

4697 
SèŒ_öput_queue
 +
sim_cy˛e
 - 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
];

4698 
œ°_I≈ut_queue_fuŒ
[
evít
->
des1
*
mesh_size
+evít->
des2
] = 0;

4705 
	}
}

4706 
	$dú_evítq_√xãvít
()

4708 
DIRECTORY_EVENT
 *
evít
, *
ev
, *
√xt
, *
¥ev
;

4709 
i
, 
ö£π_Êag
 = 0;

4710 
evít
 = 
dú_evít_queue
;

4711 
ev
 = 
NULL
;

4712 
evít
!=
NULL
)

4714 
√xt
 = 
evít
->next;

4716 i‡(
evít
->
whí
 <
sim_cy˛e
)

4718 
ö£π_Êag
 = 
	`buf„r_fuŒ_check
(
evít
);

4720 if(
ö£π_Êag
 == 0)

4722 if(
evít
 =
dú_evít_queue
)

4724 
dú_evít_queue
 = 
evít
->
√xt
;

4725 
evít
->
√xt
 = 
NULL
;

4726 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

4728 
evít
->
√xt
 = 
dú_evít_queue
;

4729 
dú_evít_queue
 = 
evít
;

4730 
ev
 = 
evít
;

4731 
evít
 =Évít->
√xt
;

4732 
ßme_L1_L2_fifo_fuŒ
 ++;

4735 
evít
 = 
dú_evít_queue
;

4739 
ev
->
√xt
 = 
evít
->next;

4740 
evít
->
√xt
 = 
NULL
;

4741 if(!(
	`dú_fifo_íqueue
(
evít
, 1)))

4743 
evít
->
√xt
 = 
dú_evít_queue
;

4744 
dú_evít_queue
 = 
evít
;

4745 
ev
 = 
evít
;

4746 
evít
 =Évít->
√xt
;

4747 
ßme_L1_L2_fifo_fuŒ
 ++;

4750 
evít
 = 
ev
->
√xt
;

4753 if(
ö£π_Êag
 == 1)

4755 
ev
 = 
evít
;

4756 
evít
 =Évít->
√xt
;

4758 if(
ö£π_Êag
 == 2)

4760 if(
evít
 =
dú_evít_queue
)

4762 
dú_evít_queue
 = 
evít
->
√xt
;

4763 
evít
->
√xt
 = 
NULL
;

4764 
	`dú_evítq_ö£π
(
evít
);

4765 
evít
 = 
dú_evít_queue
;

4769 
ev
->
√xt
 = 
evít
->next;

4770 
evít
->
√xt
 = 
NULL
;

4771 
	`dú_evítq_ö£π
(
evít
);

4772 
evít
 = 
ev
->
√xt
;

4779 
ev
 = 
evít
;

4780 
evít
 =Évít->
√xt
;

4784 
	}
}

4796 
RS_lök
 *
	gevít_queue
;

4799 
	$evítq_öô
 ()

4801 
evít_queue
 = 
NULL
;

4802 
	}
}

4808 
	$evítq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4810 
RS_lök
 *
ev
;

4812 
c⁄ãxt
 *
cuºít
;

4814 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4816 i‡(!
°ªam
)

4817 
°ªam
 = 
°dîr
;

4819 
	`Ârötf
 (
°ªam
, "**Évent queue state **\n");

4821 
ev
 = 
evít_queue
;Év !
NULL
;Év =Év->
√xt
)

4824 i‡(
	`RSLINK_VALID
 (
ev
))

4826 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4828 
	`Ârötf
 (
°ªam
, "idx: %2d: @ %.0f\n", 
rs
->
ödex
, (Ë
ev
->
x
.
whí
);

4829 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
FALSE
);

4832 
	}
}

4839 
	$evítq_queue_evít
 (
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
, 
œt
)

4841 
RS_lök
 *
¥ev
, *
ev
, *
√w_ev
;

4843 i‡(
rs
->
com∂ëed
)

4844 
	`∑nic
 ("event completed");

4846 i‡(
whí
 <
sim_cy˛e
)

4847 
	`∑nic
 ("event occurred inÅheÖast");

4850 
	`RSLINK_NEW
 (
√w_ev
, 
rs
);

4851 
√w_ev
->
x
.
whí
 = when;

4853 if(
rs
 =
NULL
)

4854 
	`¥ötf
("RSÖrobÀm %Œd\n", 
sim_cy˛e
);

4856 
¥ev
 = 
NULL
, 
ev
 = 
evít_queue
;Év &&Év->
x
.
whí
 < whí;Öªv =Év,Év =Év->
√xt
);

4858 i‡(
¥ev
)

4861 
√w_ev
->
√xt
 = 
¥ev
->next;

4862 
¥ev
->
√xt
 = 
√w_ev
;

4867 
√w_ev
->
√xt
 = 
evít_queue
;

4868 
evít_queue
 = 
√w_ev
;

4870 
	}
}

4877 
RUU_°©i⁄
 *

4878 
	$evítq_√xt_evít
 ()

4880 
RS_lök
 *
ev
;

4881 
RS_lök
 *
ãmp_ev
, *
¥ed_ev
 = 
NULL
;

4883 
ãmp_ev
 = 
evít_queue
;

4885 
ãmp_ev
 && !
thec⁄ãxts
[ãmp_ev->
rs
->
thªadid
]->
a˘ive_this_cy˛e
)

4887 
¥ed_ev
 = 
ãmp_ev
;

4888 
ãmp_ev
 =Åemp_ev->
√xt
;

4891 i‡(
ãmp_ev
 &&Åemp_ev->
x
.
whí
 <
sim_cy˛e
)

4894 
ev
 = 
ãmp_ev
;

4895 i‡(
ãmp_ev
 =
evít_queue
)

4897 
evít_queue
 =Évít_queue->
√xt
;

4901 
¥ed_ev
->
√xt
 = 
ãmp_ev
->next;

4905 i‡(
	`RSLINK_VALID
 (
ev
))

4907 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
ev
);

4910 
	`RSLINK_FREE
 (
ev
);

4913  
rs
;

4918 
	`RSLINK_FREE
 (
ev
);

4921  
	`evítq_√xt_evít
 ();

4927  
NULL
;

4929 
	}
}

4931 
	$ch™geInEvítQueue
 (
RUU_°©i⁄
 * 
rs
, 
thªadid
)

4935 
RS_lök
 *
ev
 = 
evít_queue
;

4936 
RS_lök
 *
¥ev
 = 
NULL
;

4938 
ev
 !
NULL
)

4940 i‡(
ev
->
rs
 ==Ñs)

4942 
¥ev
 = 
ev
;

4943 
ev
 =Év->
√xt
;

4946 i‡(
ev
 =
NULL
)

4948 
ev
->
x
.
whí
 = 
sim_cy˛e
;

4951 i‡(
¥ev
 =
NULL
)

4952 
evít_queue
 = 
ev
->
√xt
;

4954 
¥ev
->
√xt
 = 
ev
->next;

4956 
	`RSLINK_FREE
 (
ev
);

4957 
	}
}

4973 
RS_lök
 *
	gªady_queue
;

4977 
	$ªadyq_öô
 ()

4979 
ªady_queue
 = 
NULL
;

4980 
	}
}

4985 
	$ªadyq_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

4987 
RS_lök
 *
lök
;

4989 
c⁄ãxt
 *
cuºít
;

4991 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

4993 i‡(!
°ªam
)

4994 
°ªam
 = 
°dîr
;

4996 
	`Ârötf
 (
°ªam
, "**Ñeady queue state **\n");

4998 
lök
 = 
ªady_queue
;Üök !
NULL
;Üök =Üök->
√xt
)

5001 i‡(
	`RSLINK_VALID
 (
lök
))

5003 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
lök
);

5005 
	`ruu_dum≥¡
 (
rs
,Ñs->
ödex
, 
°ªam
, 
TRUE
);

5008 
	}
}

5024 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

5026 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

5029 i‡(
rs
->
queued
)

5030 
	`∑nic
("node isálready queued");

5032 
rs
->
queued
 = 
TRUE
;

5034 #ifde‡
REMOVE_COMPUTE_QUEUE


5035 #ifde‡
PWR_WAKE


5036 i‡(
rs
->
ö_LSQ
)

5038 
lsqªady
++;

5039 
rs
->
cou¡ed_lsqªady
 = 1;

5041 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

5043 
‰ódy
++;

5044 
rs
->
cou¡ed_‰ódy
 = 1;

5048 
úódy
++;

5049 
rs
->
cou¡ed_úódy
 = 1;

5055 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

5056 
√w_node
->
x
.
£q
 = 
rs
->seq;

5059 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

5061 i‡(
¥ev
)

5064 
√w_node
->
√xt
 = 
¥ev
->next;

5065 
¥ev
->
√xt
 = 
√w_node
;

5070 
√w_node
->
√xt
 = 
ªady_queue
;

5071 
ªady_queue
 = 
√w_node
;

5073 
	}
}

5078 
	$ªadyq_íqueue
 (
RUU_°©i⁄
 *
rs
)

5080 
RS_lök
 *
¥ev
, *
node
, *
√w_node
;

5083 i‡(
rs
->
queued
)

5084 
	`∑nic
 ("node isálready queued");

5085 
rs
->
queued
 = 
TRUE
;

5087 #ifde‡
PWR_WAKE


5088 #ifde‡
READY_ROB_STAT


5089 i‡(!
rs
->
ö_LSQ
)

5090 
ªady_thrd
[
rs
->
thªadid
]++;

5092 i‡(
rs
->
ö_LSQ
)

5094 
lsqªady
++;

5095 
lsqªady_˛
[
rs
->
˛u°î
]++;

5096 
rs
->
cou¡ed_lsqªady
 = 1;

5098 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

5100 
‰ódy
++;

5101 
‰ódy_˛
[
rs
->
˛u°î
]++;

5102 
rs
->
cou¡ed_‰ódy
 = 1;

5106 
úódy
++;

5107 
úódy_˛
[
rs
->
˛u°î
]++;

5108 
rs
->
cou¡ed_úódy
 = 1;

5113 
	`RSLINK_NEW
 (
√w_node
, 
rs
);

5114 
√w_node
->
x
.
£q
 = 
rs
->seq;

5117 i‡(
rs
->
ö_LSQ
 || 
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_LONGLAT
 | 
F_CTRL
))

5120 
¥ev
 = 
NULL
;

5121 
node
 = 
ªady_queue
;

5126 
¥ev
 = 
NULL
, 
node
 = 
ªady_queue
;Çodê&&Çode->
x
.
£q
 < 
rs
->£q;Öªv =Çode,Çodênode->
√xt
);

5129 i‡(
¥ev
)

5132 
√w_node
->
√xt
 = 
¥ev
->next;

5133 
¥ev
->
√xt
 = 
√w_node
;

5138 
√w_node
->
√xt
 = 
ªady_queue
;

5139 
ªady_queue
 = 
√w_node
;

5141 
	}
}

5152 
CV_lök
 
	gCVLINK_NULL
 = { 
NULL
, 0 };

5155 
	#CVLINK_INIT
(
CV
, 
RS
,
ONUM
Ë((CV).
rs
 = (RS), (CV).
odï_num
 = (ONUM))

	)

5158 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

5165 
	#CREATE_VECTOR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

5166 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] \

5167 : 
cuºít
->
¸óã_ve˘‹
[
N
])

5170 
	#CREATE_VECTOR_RT
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (N))\

	)

5171 ? 
	gcuºít
->
	g•ec_¸óã_ve˘‹_π
[
N
] \

5172 : 
cuºít
->
¸óã_ve˘‹_π
[
N
])

5176 
	#SET_CREATE_VECTOR
(
N
, 
L
Ë–
cuºít
->
•ec_mode
 \

	)

5177 ? (
BITMAP_SET
(
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
, (
N
)),\

5178 
	gcuºít
->
	g•ec_¸óã_ve˘‹
[
N
] = (
L
)) \

5179 : (
cuºít
->
¸óã_ve˘‹
[
N
] = (
L
)))

5187 
	#DNA
 (0)

	)

5189 #i‡
deföed
(
TARGET_PISA
)

5192 
	#DGPR
(
N
Ë(N)

	)

5193 
	#DGPR_D
(
N
Ë((NË&~1)

	)

5196 
	#DFPR_L
(
N
Ë(((N)+32)&~1)

	)

5197 
	#DFPR_F
(
N
Ë(((N)+32)&~1)

	)

5198 
	#DFPR_D
(
N
Ë(((N)+32)&~1)

	)

5201 
	#DHI
 (0+32+32)

	)

5202 
	#DLO
 (1+32+32)

	)

5203 
	#DFCC
 (2+32+32)

	)

5204 
	#DTMP
 (3+32+32)

	)

5206 #ñi‡
deföed
(
TARGET_ALPHA
)

5209 
	#DGPR
(
N
Ë(31 - (N)Ë

	)

5212 
	#DFPR
(
N
Ë(((NË=31Ë? 
DNA
 : ((N)+32))

	)

5215 
	#DFPCR
 (0+32+32)

	)

5216 
	#DUNIQ
 (1+32+32)

	)

5217 
	#DTMP
 (2+32+32)

	)

5220 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

5228 
	#SET_NPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_NPC
 = (EXPR))

	)

5231 #unde‡
SET_TPC


5232 
	#SET_TPC
(
EXPR
Ë(
èrgë_PC
 = (EXPR))

	)

5235 
	#CPC
 (
cuºít
->
ªgs
.
ªgs_PC
)

	)

5236 
	#SET_CPC
(
EXPR
Ë(
cuºít
->
ªgs
.
ªgs_PC
 = (EXPR))

	)

5241 #ifde‡
TEST_BUG


5243 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

5244 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

5245 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

5248 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5249 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

5250 
BITMAP_SET
(
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

5251 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

5252 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

5255 #i‡
deföed
(
TARGET_PISA
)

5260 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

5261 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

5262 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

5265 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5266 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

5267 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

5268 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

5269 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

5272 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

5273 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

5274 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

5277 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5278 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

5279 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

5280 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

5281 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

5284 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1)Ë\

	)

5285 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

5286 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

5289 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5290 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)),\

5291 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)), \

5292 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

5293 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

5299 
	#HI
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

5300 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

5301 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

5304 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5305 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

5306 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 0), \

5307 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

5308 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

5311 
	#LO
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

5312 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

5313 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

5316 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5317 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

5318 
BITMAP_SET
(
u£_•ec_C
, 
C_BMAP_SZ
, 1), \

5319 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

5320 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

5323 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

5324 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

5325 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

5328 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5329 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

5330 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 2), \

5331 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

5332 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

5335 #ñi‡
deföed
(
TARGET_ALPHA
)

5340 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

5341 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

5342 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

5345 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5346 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

5347 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

5348 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

5349 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

5352 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
u£_•ec_F
, 
F_BMAP_SZ
, (N)Ë\

	)

5353 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

5354 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

5357 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5358 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

5359 
BITMAP_SET
(
u£_•ec_F
,
F_BMAP_SZ
, (
N
)), \

5360 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

5361 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

5367 
	#FPCR
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 0Ë\

	)

5368 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

5369 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

5372 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5373 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

5374 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 0), \

5375 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

5376 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

5379 
	#UNIQ
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 1Ë\

	)

5380 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

5381 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

5384 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5385 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

5386 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

5387 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

5388 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

5391 
	#FCC
 (
	`BITMAP_SET_P
(
u£_•ec_C
, 
C_BMAP_SZ
, 2Ë\

	)

5392 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

5393 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

5396 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5397 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

5398 
BITMAP_SET
(
u£_•ec_C
,
C_BMAP_SZ
, 1), \

5399 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

5400 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

5404 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

5408 
	#GPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (N)Ë\

	)

5409 ? 
	gcuºít
->
	g•ec_ªgs_R
[
N
] \

5410 : 
cuºít
->
ªgs
.
ªgs_R
[
N
])

5413 
	#SET_GPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5414 ? ((
	gcuºít
->
	g•ec_ªgs_R
[
N
] = (
EXPR
)), \

5415 
BITMAP_SET
(
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, (
N
)), \

5416 
	gcuºít
->
	g•ec_ªgs_R
[
N
]) \

5417 : (
cuºít
->
ªgs
.
ªgs_R
[
N
] = (
EXPR
)))

5420 #i‡
deföed
(
TARGET_PISA
)

5425 
	#FPR_L
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

5426 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] \

5427 : 
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)])

5430 
	#SET_FPR_L
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5431 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)] = (
EXPR
)), \

5432 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

5433 
	gcuºít
->
	g•ec_ªgs_F
.
	gl
[(
N
)]) \

5434 : (
cuºít
->
ªgs
.
ªgs_F
.
l
[(
N
)] = (
EXPR
)))

5437 
	#FPR_F
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

5438 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] \

5439 : 
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)])

5442 
	#SET_FPR_F
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5443 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)] = (
EXPR
)), \

5444 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

5445 
	gcuºít
->
	g•ec_ªgs_F
.
	gf
[(
N
)]) \

5446 : (
cuºít
->
ªgs
.
ªgs_F
.
f
[(
N
)] = (
EXPR
)))

5449 
	#FPR_D
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, ((N)&~1))\

	)

5450 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1] \

5451 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
) >> 1])

5454 
	#SET_FPR_D
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5455 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
Ë>> 1] = (
EXPR
)), \

5456 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
,((
N
)&~1)),\

5457 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
) >> 1]) \

5458 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
Ë>> 1] = (
EXPR
)))

5464 
	#HI
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

5465 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
 \

5466 : 
cuºít
->
ªgs
.
ªgs_C
.
hi
)

5469 
	#SET_HI
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5470 ? ((
cuºít
->
•ec_ªgs_C
.
hi
 = (
EXPR
)), \

5471 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0),\

5472 
	gcuºít
->
	g•ec_ªgs_C
.
	ghi
) \

5473 : (
cuºít
->
ªgs
.
ªgs_C
.
hi
 = (
EXPR
)))

5476 
	#LO
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

5477 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
 \

5478 : 
cuºít
->
ªgs
.
ªgs_C
.
lo
)

5481 
	#SET_LO
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5482 ? ((
cuºít
->
•ec_ªgs_C
.
lo
 = (
EXPR
)), \

5483 
BITMAP_SET
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1),\

5484 
	gcuºít
->
	g•ec_ªgs_C
.
	glo
) \

5485 : (
cuºít
->
ªgs
.
ªgs_C
.
lo
 = (
EXPR
)))

5488 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

5489 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

5490 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

5493 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5494 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

5495 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 2),\

5496 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

5497 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

5500 #ñi‡
deföed
(
TARGET_ALPHA
)

5505 
	#FPR_Q
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

5506 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] \

5507 : 
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)])

5510 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5511 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)] = (
EXPR
)), \

5512 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

5513 
	gcuºít
->
	g•ec_ªgs_F
.
	gq
[(
N
)]) \

5514 : (
cuºít
->
ªgs
.
ªgs_F
.
q
[(
N
)] = (
EXPR
)))

5517 
	#FPR
(
N
Ë(
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, (N))\

	)

5518 ? 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] \

5519 : 
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)])

5522 
	#SET_FPR
(
N
,
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5523 ? ((
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)] = (
EXPR
)), \

5524 
BITMAP_SET
(
cuºít
->
u£_•ec_F
,
F_BMAP_SZ
, (
N
)),\

5525 
	gcuºít
->
	g•ec_ªgs_F
.
	gd
[(
N
)]) \

5526 : (
cuºít
->
ªgs
.
ªgs_F
.
d
[(
N
)] = (
EXPR
)))

5532 
	#FPCR
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 0)\

	)

5533 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
 \

5534 : 
cuºít
->
ªgs
.
ªgs_C
.
Â¸
)

5537 
	#SET_FPCR
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5538 ? ((
cuºít
->
•ec_ªgs_C
.
Â¸
 = (
EXPR
)), \

5539 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 0),\

5540 
	gcuºít
->
	g•ec_ªgs_C
.
	gÂ¸
) \

5541 : (
cuºít
->
ªgs
.
ªgs_C
.
Â¸
 = (
EXPR
)))

5544 
	#UNIQ
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 1)\

	)

5545 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
 \

5546 : 
cuºít
->
ªgs
.
ªgs_C
.
uniq
)

5549 
	#SET_UNIQ
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5550 ? ((
cuºít
->
•ec_ªgs_C
.
uniq
 = (
EXPR
)), \

5551 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

5552 
	gcuºít
->
	g•ec_ªgs_C
.
	guniq
) \

5553 : (
cuºít
->
ªgs
.
ªgs_C
.
uniq
 = (
EXPR
)))

5556 
	#FCC
 (
	`BITMAP_SET_P
(
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 2)\

	)

5557 ? 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
 \

5558 : 
cuºít
->
ªgs
.
ªgs_C
.
fcc
)

5561 
	#SET_FCC
(
EXPR
Ë(
cuºít
->
•ec_mode
 \

	)

5562 ? ((
cuºít
->
•ec_ªgs_C
.
fcc
 = (
EXPR
)), \

5563 
BITMAP_SET
(
cuºít
->
u£_•ec_C
,
C_BMAP_SZ
, 1),\

5564 
	gcuºít
->
	g•ec_ªgs_C
.
	gfcc
) \

5565 : (
cuºít
->
ªgs
.
ªgs_C
.
fcc
 = (
EXPR
)))

5569 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

5578 
	#__READ_SPECMEM
(
SRC
, 
SRC_V
, 
FAULT
Ë\

	)

5579 (
	gaddr
 = (
SRC
), \

5580 (
	gcuºít
->
	g•ec_mode
 \

5581 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V)))\

5582 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Ród
, 
addr
, &
SRC_V
, (SRC_V), cuºít->
id
, 
ö°
))), \

5583 
	gSRC_V
)

5586 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

5587 
__READ_SPECMEM
((
SRC
), 
ãmp_byã
, (
FAULT
))

5588 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

5589 
MD_SWAPH
(
__READ_SPECMEM
((
SRC
), 
ãmp_hÆf
, (
FAULT
)))

5590 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

5591 
MD_SWAPW
(
__READ_SPECMEM
((
SRC
), 
ãmp_w‹d
, (
FAULT
)))

5592 #ifde‡
HOST_HAS_QWORD


5593 
	#READ_QWORD
(
SRC
, 
FAULT
Ë\

	)

5594 
MD_SWAPQ
(
__READ_SPECMEM
((
SRC
), 
ãmp_qw‹d
, (
FAULT
)))

5597 
	#__WRITE_SPECMEM
(
SRC
, 
DST
, 
DST_V
, 
FAULT
Ë\

	)

5598 (
	gDST_V
 = (
SRC
), 
	gaddr
 = (
DST
), \

5599 (
	gcuºít
->
	g•ec_mode
 \

5600 ? ((
	gFAULT
Ë
•ec_mem_ac˚ss
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V)))\

5601 : ((
FAULT
Ë
WB_ac˚ss1
(
cuºít
->
mem
, 
Wrôe
, 
addr
, &
DST_V
, (DST_V), cuºít->
id
, 
ö°
))))

5603 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

5604 
__WRITE_SPECMEM
((
SRC
), (
DST
), 
ãmp_byã
, (
FAULT
))

5605 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

5606 
__WRITE_SPECMEM
(
MD_SWAPH
(
SRC
), (
DST
), 
ãmp_hÆf
, (
FAULT
))

5607 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

5608 
__WRITE_SPECMEM
(
MD_SWAPW
(
SRC
), (
DST
), 
ãmp_w‹d
, (
FAULT
))

5610 #ifde‡
HOST_HAS_QWORD


5611 
	#WRITE_QWORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

5612 
__WRITE_SPECMEM
(
MD_SWAPQ
(
SRC
), (
DST
), 
ãmp_qw‹d
, (
FAULT
))

5616 
	#SYSCALL
(
INST
Ë\

	)

5618 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative syscall") : () 0), \

5619 
sys_sysˇŒ
(&(
cuºít
->
ªgs
), 
mem_ac˚ss
, cuºít->
mem
, 
INST
, 
TRUE
))

5622 
	#QUIESCE
(
INST
Ë\

	)

5624 (
	gcuºít
->
	g•ec_mode
 ? 
∑nic
("speculative quiescent instruction") : () 0), \

5625 
ˇŒ_quõs˚
(
cuºít
->
id
))

5631 
	$cv_öô
 (
thªadid
)

5633 
i
;

5634 
c⁄ãxt
 *
cuºít
;

5636 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5640 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

5642 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

5643 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 0;

5644 
cuºít
->
•ec_¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

5645 
cuºít
->
•ec_¸óã_ve˘‹_π
[
i
] = 0;

5649 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

5651 
	}
}

5656 
	$cv_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

5658 
i
;

5659 
CV_lök
 
ít
;

5661 
c⁄ãxt
 *
cuºít
;

5663 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5665 i‡(!
°ªam
)

5666 
°ªam
 = 
°dîr
;

5668 
	`Ârötf
 (
°ªam
, "** create vector state **\n");

5670 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

5672 
ít
 = 
	`CREATE_VECTOR
 (
i
);

5673 i‡(!
ít
.
rs
)

5674 
	`Ârötf
 (
°ªam
, "[cv%02d]: fromárchôe˘edÑeg fûe\n", 
i
);

5676 
	`Ârötf
 (
°ªam
, "[cv%02d]: from %s, idx: %d\n", 
i
, (
ít
.
rs
->
ö_LSQ
 ? "LSQ" : "RUU"),É¡.rs->
ödex
);

5678 
	}
}

5680 
ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
);

5683 
åa˚r_ªcovî
 (
thªadid
);

5684 
ªcFªeRegLi°
 (
thªadid
);

5687 
	$RS_block_li°
(
RUU_°©i⁄
 *
rs
, 
tick_t
 
whí
, 
íåy
, 
thªadid
)

5689 if(
rs
->
•ec_mode
)

5691 if(
íåy
 < 1 ||É¡ry > 
MSHR_SIZE
)

5692 
	`∑nic
("L1 MSHR: wrong mshrÉntry");

5694 
íåy
 =Éntry - 1;

5696 
RS_li°
 *
rs_li°
;

5697 
rs_li°
 = 
	`ˇŒoc
–1, (
RS_li°
));

5698 
rs_li°
->
rs
 =Ñs;

5699 
rs_li°
->
√xt
 = 
NULL
;

5700 
rs_li°
->
•ec_mode
 = 
rs
->spec_mode;

5701 
rs_li°
->
whí
 = when;

5702 
rs_li°
->
√xt
 = 
rs_ˇche_li°
[
thªadid
][
íåy
];

5703 
rs_ˇche_li°
[
thªadid
][
íåy
] = 
rs_li°
;

5704 
	}
}

5706 
	$RS_block_√xt
(
RS_li°
 *
cur
)

5708 if(!
cur
->
rs
) ;

5710 if((
cur
->
•ec_mode
)&& !cur->
rs
->spec_mode )

5712 
cur
->
rs
->
ˇche_ªady
 = 0;

5713 if(((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
Ë&& (cur->rs->
issued
 || cur->rs->
queued
 || cur->rs->
com∂ëed
)) || (!(MD_OP_FLAGS(cur->rs->op) & F_LOAD) && !(cur->rs->issued && !cur->rs->queued)))

5714 
	`∑nic
("L1 MSHR: issue, queue, or commit flag is set!!!");

5716 if((
	`MD_OP_FLAGS
(
cur
->
rs
->
›
Ë& 
F_LOAD
))

5720 
	`ªadyq_íqueue
 (
cur
->
rs
);

5729 
cur
->
rs
->
wrôewaô
 = 2;

5730 
	}
}

5736 
	gcommô_idÀ
 = 0;

5737 
	gcommô_Êag
[
MAXTHREADS
] = {0};

5742 
	$ruu_commô
 ()

5745 
i
, 
j
, 
thªadid
, 
œt
, 
evíts
, 
commôãd
;

5746 
mm
;

5747 
c⁄ãxt
 *
cuºít
;

5748 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
, 
LSQ_ödex
;

5749 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

5750 
°‹e_›
 = 0, 
pcbSórch
;

5751 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

5752 
ªadSh¨eDú
 = 0;

5754 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

5755 
cou¡edThisCy˛e
 = 0;

5757 
md_addr_t
 
ãmpAddr
;

5758 
md_›code
 
ãmpOp
;

5760 
thªad_commô
 = 0;

5761 
isSTLC
;

5765 
j
 = 0; j <
numc⁄ãxts
; j++, 
thªad_commô
 = (thread_commit + 1) %Çumcontexts)

5768 i‡(
j
 > 0)

5770 
commô_d⁄e
[
j
 - 1] = 
commôãd
;

5771 if(!
commôãd
)

5772 
m_commôSèŒ
[
j
-1]++;

5774 i‡(
j
 =
numc⁄ãxts
)

5777 
thªadid
 = 
thªad_commô
;

5778 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

5784 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

5785 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

5786 
commôãd
 = 0;

5787 
haha
 = 0;

5791 
cuºít
->
RUU_num
 > 0 && 
commôãd
 < 
ruu_commô_width
)

5793 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

5794 i‡(
busSlŸCou¡
 < 11)

5796 i‡(!
cou¡edThisCy˛e
)

5797 
°ÆlNoBusSlŸ
++;

5798 
cou¡edThisCy˛e
 = 1;

5802 
RUU_°©i⁄
 *
rs
 = &(
cuºít
->
RUU
[cuºít->
RUU_hód
]);

5805 
ãmpAddr
 = 0;

5806 
°‹e_›
 = 0;

5807 
ãmpOp
 = 0;

5808 
isSTLC
 = 0;

5810 if(
rs
->
wrôewaô
 == 1)

5814 i‡(!
rs
->
com∂ëed
)

5819 i‡(
cuºít
->
ma°îid
 =0 && 
rs
->
PC
 < 0x120000000)

5820 
	`∑nic
 ("Illegal instructionÅryingÅo commit\n");

5824 if((
	`MD_OP_FLAGS
(
rs
->
›
Ë& 
F_FENCE
Ë&& (
m_L1WBufC¡
[
thªadid
]))

5828 
evíts
 = 0;

5831 i‡(
cuºít
->
RUU
[cuºít->
RUU_hód
].
ó_comp
)

5834 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[cuºít->
RUU_hód
].threadid)

5836 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5837 
ãmp_LSQ_num
--;

5838 i‡(!
ãmp_LSQ_num
)

5839 
	`∑nic
 ("RUUánd LSQ out of sync");

5841 i‡(
cuºít
->
LSQ_num
 <0 || !cuºít->
LSQ
[
LSQ_ödex
].
ö_LSQ
)

5842 
	`∑nic
 ("RUU out of sync with LSQ");

5844 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
com∂ëed
)

5849 #ifde‡
SEQUENTIAL_CONSISTENCY


5850 i‡(
övÆid©i⁄SèŒ
[
thªadid
])

5854 i‡(
commôSèŒ
[
thªadid
])

5859 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& (
≥ndög_övÆid©i⁄
[
thªadid
]))

5863 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5865 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
)

5866 
isSTLC
 = 1;

5868 i‡(
m_L1WBufC¡
[
thªadid
] >
SMD_L1_WBUF_SIZE
)

5870 if(
isSTLC
 && 
m_L1WBufC¡
[
thªadid
])

5874 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
PC
 = 
cuºít
->
LSQ
[
LSQ_ödex
].PC;

5875 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
IR
 = 
cuºít
->
LSQ
[
LSQ_ödex
].IR;

5876 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
›
 = 
cuºít
->
LSQ
[
LSQ_ödex
].op;

5877 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
lsqId
 = 
LSQ_ödex
;

5878 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
robId
 = 
rs
->
ödex
;

5879 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeVÆue
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
vÆ_ø
;

5880 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
addr
 = 
cuºít
->
LSQ
[
LSQ_ödex
].addr;

5881 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
sim_num_ö¢
 = 
cuºít
->
LSQ
[
LSQ_ödex
].sim_num_insn;

5882 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
wrôeSèπed
 = 0;

5883 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
föishTime
 = 0;

5884 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
isMiss
 = 0;

5885 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
íåyTime
 = 
sim_cy˛e
;

5886 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
STL_C_Áû
 = 0;

5887 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
Æªady_check
 = 0;

5888 if–
isSTLC
 && !
	`isCacheHô
(
ˇche_dl1
[
thªadid
], 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
,Åhreadid))

5890 
	`com∂ëeSt‹e
(
thªadid
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, 
	`GëMemAccWidth
(cuºít->LSQ[LSQ_ödex].
›
), 
isSTLC
);

5891 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 1;

5892 if(
isSTLC
 && 
°‹eC⁄dFaû
 == 0)

5893 
	`∑nic
("Store conditional should fail oná L1 miss");

5896 
m_L1WBuf
[
thªadid
][
m_L1WBuf_èû
[thªadid]].
commôD⁄e
 = 0;

5898 
m_L1WBufC¡
[
thªadid
]++;

5899 
m_L1WBuf_èû
[
thªadid
] = (m_L1WBuf_èû[thªadid]+1)%
SMD_L1_WBUF_SIZE
;

5906 
ªadSh¨eDú
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
RódSh¨eDú
;

5908 #i‡
	`deföed
(
SMD_USE_WRITE_BUF
Ë&& deföed(
SEQUENTIAL_CONSISTENCY
)

5910 i‡(
m_L1WBufC¡
[
thªadid
])

5914 if(
rs
->
wrôewaô
 != 1)

5916 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
ﬁd¥eg
, 
thªadid
);

5918 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

5921 
	`±ø˚_√w°age
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

5922 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

5924 i‡(
LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5926 
ãmp_LSQ_rs
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

5927 
ãmp_LSQ_ödex
 = 
LSQ_ödex
;

5928 
ãmp_LSQ_ödex
 !
cuºít
->
LSQ_hód
)

5930 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = cuºít->LSQ[(Ë(—emp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size)];

5931 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5932 
ãmp_LSQ_ödex
 = (ãmp_LSQ_ödex + (
LSQ_size
 - 1)) % LSQ_size;

5935 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
] = *
ãmp_LSQ_rs
;

5936 
cuºít
->
LSQ
[
ãmp_LSQ_ödex
].
ödex
 =Åemp_LSQ_index;

5938 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

5940 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5941 
cuºít
->
m_shLQNum
--;

5943 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

5945 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

5946 
cuºít
->
m_shSQNum
--;

5948 if(
ruu_ö‹dî_issue
)

5950 
i
=0;i<
MAX_ODEPS
;i++)

5952 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
⁄ames
[
i
] !
NA
)

5954 
ﬁök
 = 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

5956 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

5957 
	`RSLINK_FREE
 (
ﬁök
);

5959 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

5964 
cuºít
->
LSQ_hód
 = (cuºít->LSQ_hód + 1Ë% 
LSQ_size
;

5965 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

5966 
cuºít
->
LSQ_num
--;

5967 
ãmp_LSQ_num
--;

5972 if(
rs
->
wrôewaô
 != 1)

5974 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_CT
 && (
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


5977 
b¥ed_ac˚ss
++;

5978 i‡(!(
rs
->
du∂iˇã
))

5980 
cuºít
->
b¥ed_ac˚ss
++;

5983 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

5984  
rs
->
PC
,

5985  
rs
->
√xt_PC
,

5986  
rs
->
√xt_PC
 !‘s->
PC
 +

5987  (
md_ö°_t
)),

5988  
rs
->
¥ed_PC
 !‘s->
PC
 +

5989  (
md_ö°_t
)),

5990  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

5991  
rs
->
›
,

5992  &
rs
->
dú_upd©e
,

5993  
rs
->
thªadid
,

5994  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

5998 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
ﬁd¥eg
, 
thªadid
);

6000 
cuºít
->
RUU
[cuºít->
RUU_hód
].
èg
++;

6002 
	`±ø˚_√w°age
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
, 
PST_COMMIT
, 
evíts
);

6003 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[cuºít->
RUU_hód
].
±ø˚_£q
);

6005 
tŸÆ_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
di•_time
);

6006 
max_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
di•_time
), max_slip_cycles);

6008 i‡(
rs
->
issue_time
)

6010 
tŸÆ_issue_¶ù_cy˛es
 +(
sim_cy˛e
 - 
rs
->
issue_time
);

6011 
max_issue_¶ù_cy˛es
 = 
	`MAX
 ((
sim_cy˛e
 - 
rs
->
issue_time
), max_issue_slip_cycles);

6014 if(
ruu_ö‹dî_issue
)

6016 
i
=0;i<
MAX_ODEPS
;i++)

6018 i‡(
rs
->
⁄ames
[
i
] !
NA
)

6020 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

6022 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

6023 
	`RSLINK_FREE
 (
ﬁök
);

6025 
rs
->
odï_li°
[
i
] = 
NULL
;

6030 
cuºít
->
RUU_hód
 = (cuºít->RUU_hód + 1Ë% 
RUU_size
;

6031 
cuºít
->
RUU_num
--;

6032 
commô_Êag
[
thªadid
] = 0;

6034 i‡(
rs
->
du∂iˇã
)

6036 
COMPARE_ac˚ss
[
thªadid
]++;

6037 
com∑ª_ac˚ss
++;

6040 if(!
ruu_ö‹dî_issue
)

6042 
rob2_ac˚ss
++;

6043 
cuºít
->
rob2_ac˚ss
++;

6045 
commôãd
++;

6052 
commô_idÀ
 = 0;

6053 
i
 = 0; i < 
MAX_ODEPS
; i++)

6055 i‡(
rs
->
odï_li°
[
i
])

6056 
	`∑nic
 ("retired instruction has odeps\n");

6060 
	`°©_add_ßm∂e
 (
commô_width_°©
, 
commôãd
);

6062 
	}
}

6074 
	$ruu_ªcovî
 (
bønch_ödex
, 
thªadid
, 
mode
)

6077 
mm
;

6078 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

6079 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
;

6081 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

6082 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

6085 
shi·_right
 = 0;

6088 
brRecovîy
[
thªadid
]++;

6090 
di•_dñay
 = 0;

6093 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

6094 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

6095 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

6096 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

6099 i‡(!
cuºít
->
RUU_num
)

6100 
	`∑nic
 ("empty RUU");

6104 
RUU_ödex
 !
bønch_ödex
)

6107 i‡(!
ãmp_RUU_num
)

6108 
	`∑nic
 ("empty RUU");

6111 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

6113 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

6116 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

6117 
ãmp_LSQ_num
--;

6118 i‡(!
ãmp_LSQ_num
)

6120 
	`Ârötf
 (
°dîr
, "Thªad %d, cy˛ê%lu\n", 
thªadid
, (Ë
sim_num_ö¢
);

6121 
	`∑nic
 ("RUUánd LSQ out of sync");

6124 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

6125 
ãmp_LSQ_num
--;

6127 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

6128 
ãmp_RUU_num
--;

6131 i‡(
mode
 == 0)

6134 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

6135 
ãmp_RUU_num
--;

6140 
ãmp_RUU_num
 != 0)

6142 
exåaIn¢
[
thªadid
]++;

6144 i‡(!
ãmp_RUU_num
)

6145 
	`∑nic
 ("empty RUU");

6147 i‡(
mode
 =0 && 
RUU_ödex
 =
cuºít
->
RUU_hód
)

6148 
	`∑nic
 ("RUU headándÅail broken");

6150 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

6152 
cuºít
->
iissueq_thrd
--;

6153 
iissueq
--;

6154 
iissueq_˛
[
cuºít
->
id
]--;

6155 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

6157 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

6159 
cuºít
->
fissueq_thrd
--;

6160 
fissueq
--;

6161 
fissueq_˛
[
cuºít
->
id
]--;

6162 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

6165 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

6167 i‡(!
ãmp_LSQ_num
)

6168 
	`∑nic
 ("RUUánd LSQ out of sync");

6169 
cuºít
->
LSQ
[
LSQ_ödex
].
thªadid
 !cuºít->
RUU
[
RUU_ödex
].threadid)

6171 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

6172 
ãmp_LSQ_num
--;

6173 i‡(!
ãmp_LSQ_num
)

6174 
	`∑nic
 ("RUUánd LSQ out of sync");

6177 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

6179 
cuºít
->
iissueq_thrd
--;

6180 
iissueq
--;

6181 
iissueq_˛
[
cuºít
->
id
]--;

6182 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

6184 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

6186 
cuºít
->
fissueq_thrd
--;

6187 
fissueq
--;

6188 
fissueq_˛
[
cuºít
->
id
]--;

6189 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

6192 
i
 = 0; i < 
MAX_ODEPS
; i++)

6194 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

6196 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

6199 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

6200 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

6203 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

6206 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

6209 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

6211 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

6212 
cuºít
->
m_shLQNum
--;

6214 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

6216 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

6217 
cuºít
->
m_shSQNum
--;

6220 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

6221 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

6222 
cuºít
->
LSQ_num
--;

6223 
ãmp_LSQ_num
--;

6227 
i
 = 0; i < 
MAX_ODEPS
; i++)

6229 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

6230 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

6233 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

6234 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

6235 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

6236 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

6238 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

6239 
cuºít
->
RUU_num
--;

6240 
ãmp_RUU_num
--;

6243 if(!
ruu_ö‹dî_issue
)

6245 
rob2_ac˚ss
++;

6246 
cuºít
->
rob2_ac˚ss
++;

6249 
ö°£qnum
 = 
cuºít
->
RUU
[
bønch_ödex
].
ö°num
;

6250 
œ°˛u°î
 = 
cuºít
->
RUU
[
bønch_ödex
].
˛u°î
;

6251 
num_£¡
 = 1;

6253 i‡(
mode
 == 0)

6255 
cuºít
->
RUU_èû
 = (
bønch_ödex
 + 1Ë% 
RUU_size
;

6256 
	`c›y_‰om
 (
thªadid
);

6260 i‡(
cuºít
->
RUU_num
 != 0)

6261 
	`∑nic
 ("ROB must be completelyÉmpty");

6262 
cuºít
->
RUU_èû
 = cuºít->
RUU_hód
;

6268 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

6273 
ãmp_LSQ_ödex
 = 0;Åemp_LSQ_ödex < 
LSQ_size
;Åemp_LSQ_index++)

6274 i‡(
ãmp_LSQ_ödex
 !
cuºít
->
LSQ
[ãmp_LSQ_ödex].
ödex
)

6275 
	`∑nic
 ("LSQ index messed up");

6276 
	}
}

6290 
	$ruu_wrôeback
 ()

6292 
i
;

6293 
sum1
, 
sum2
, 
sum3
;

6294 
RUU_°©i⁄
 *
rs
;

6295 
dñay
;

6297 
c⁄ãxt
 *
cuºít
;

6301 
ãmp
;

6303 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

6305 
wb_d⁄e
[
ãmp
] = 0;

6309 (
rs
 = 
	`evítq_√xt_evít
 ()))

6311 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

6313 i‡(!
	`OPERANDS_READY
 (
rs
Ë||Ñs->
queued
 || !rs->
issued
 ||Ñs->
com∂ëed
)

6314 
	`∑nic
 ("inst completedánd !ready, !issued, or completed");

6316 
rs
->
com∂ëed
 = 
TRUE
;

6318 
wb_d⁄e
[
rs
->
thªadid
]++;

6321 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

6323 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

6325 
úesu…bus_ac˚ss
++;

6326 
cuºít
->
úesu…bus_ac˚ss
++;

6327 if(!
ruu_ö‹dî_issue
)

6329 
rob1_ac˚ss
++;

6330 
cuºít
->
rob1_ac˚ss
++;

6331 
iwakeup_ac˚ss
++;

6332 
cuºít
->
iwakeup_ac˚ss
++;

6334 
úegfûe_ac˚ss
++;

6335 
cuºít
->
úegfûe_ac˚ss
++;

6337 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

6340 
‰esu…bus_ac˚ss
++;

6341 
cuºít
->
‰esu…bus_ac˚ss
++;

6342 if(!
ruu_ö‹dî_issue
)

6344 
rob1_ac˚ss
++;

6345 
cuºít
->
rob1_ac˚ss
++;

6346 
fwakeup_ac˚ss
++;

6347 
cuºít
->
fwakeup_ac˚ss
++;

6349 
‰egfûe_ac˚ss
++;

6350 
cuºít
->
‰egfûe_ac˚ss
++;

6355 i‡(
rs
->
ªcovî_ö°
)

6357 i‡(
rs
->
ö_LSQ
)

6358 
	`∑nic
 ("mis-predictedÜoad or store?!?!?");

6360 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

6361 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

6362 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

6363 
thªadid
 = 
rs
->threadid;

6364 
i
 = 0;

6365 
i
=0;i<
MSHR_SIZE
;i++)

6367 
RS_li°
 *
¥ev
, *
cur
;

6368 
¥ev
=
NULL
, 
cur
 = 
rs_ˇche_li°
[
thªadid
][
i
]; cur; cur=cur->
√xt
)

6370 if(
cur
->
rs
 && cur->rs->
•ec_mode
 )

6372 if(
¥ev
 =
NULL
)

6374 
rs_ˇche_li°
[
thªadid
][
i
] = 
cur
->
√xt
;

6375 
¥ev
 = 
NULL
;

6379 
¥ev
->
√xt
 = 
cur
->next;

6380 
cur
 = 
¥ev
;

6381 
¥ev
 = 
cur
;

6385 
¥ev
 = 
cur
;

6389 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

6390 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

6392 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_WB
 && !
rs
->
ö_LSQ
 && (
	`MD_OP_FLAGS
 (rs->
›
Ë& 
F_CTRL
Ë&& !rs->
du∂iˇã


6395 
b¥ed_ac˚ss
++;

6396 i‡(!(
rs
->
du∂iˇã
))

6398 
cuºít
->
b¥ed_ac˚ss
++;

6400 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

6401  
rs
->
PC
,

6402  
rs
->
√xt_PC
,

6403  
rs
->
√xt_PC
 !‘s->
PC
 +

6404  (
md_ö°_t
)),

6405  
rs
->
¥ed_PC
 !‘s->
PC
 +

6406  (
md_ö°_t
)),

6407  
rs
->
¥ed_PC
 =rs->
√xt_PC
,

6408  
rs
->
›
,

6409  &
rs
->
dú_upd©e
,

6410  
rs
->
thªadid
,

6411  (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[
rs
->
thªadid
]->
ma°îid
 :Ñs->threadid));

6415 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
,Ñs->
ªcovî_ö°
 ? 
PEV_MPDETECT
 : 0);

6424 
sum1
 = 
issue_øã
;

6425 
sum2
 = 0;

6426 
sum3
 = 0;

6428 
i
 = 0; i < 
MAX_ODEPS
; i++)

6430 i‡(
rs
->
⁄ames
[
i
] !
NA
)

6432 
CV_lök
 
lök
;

6433 
RS_lök
 *
ﬁök
, *
ﬁök_√xt
;

6435 i‡(
rs
->
•ec_mode
)

6437 
lök
 = 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

6438 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

6440 
cuºít
->
•ec_¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

6441 
cuºít
->
•ec_¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

6446 
lök
 = 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]];

6447 i‡(
lök
.
rs
 && (lök.r†=r†&&Üök.
odï_num
 =
i
))

6449 
cuºít
->
¸óã_ve˘‹
[
rs
->
⁄ames
[
i
]] = 
CVLINK_NULL
;

6450 
cuºít
->
¸óã_ve˘‹_π
[
rs
->
⁄ames
[
i
]] = 
sim_cy˛e
;

6453 
ﬁök
 = 
rs
->
odï_li°
[
i
]; olök; olök = 
ﬁök_√xt
)

6455 i‡(
	`RSLINK_VALID
 (
ﬁök
))

6457 i‡(
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
])

6458 
	`∑nic
 ("output dependenceálready satisfied");

6459 
ﬁök
->
rs
->
idï_ªady
[ﬁök->
x
.
›num
] = 
TRUE
;

6461 
ﬁök
->
rs
->
whí_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

6462 
ﬁök
->
rs
->
whí_idï_ªady
[ﬁök->
x
.
›num
] = 
sim_cy˛e
;

6464 
sum2
++;

6465 i‡(
	`OPERANDS_READY
 (
ﬁök
->
rs
))

6467 i‡(!
ﬁök
->
rs
->
ö_LSQ
 || ((
	`MD_OP_FLAGS
 (ﬁök->rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

6468 
	`ªadyq_íqueue
 (
ﬁök
->
rs
);

6469 
sum3
++;

6472 
ﬁök_√xt
 = 
ﬁök
->
√xt
;

6473 if(!
ruu_ö‹dî_issue
)

6474 
	`RSLINK_FREE
 (
ﬁök
);

6476 if(!
ruu_ö‹dî_issue
)

6477 
rs
->
odï_li°
[
i
] = 
NULL
;

6481 
	}
}

6491 
	#MAX_STD_UNKNOWNS
 
LSQSIZE


	)

6494 #ifde‡ 
LSQ_LOAD_FAST_ISSUE


6496 
	$lsq_ª‰esh
 ()

6498 
i
, 
j
, 
ödex
, 
idx
, 
num_°a_unknown_thªad
 = 0;

6500 
c⁄ãxt
 *
cuºít
;

6502 #ifdef 
LSQ_FIX_PARTIAL_BUG


6503 
°d_width
[
LSQSIZE
];

6506 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

6510 
cuºít
 = 
thec⁄ãxts
[
idx
];

6512 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
; (ò< cuºít->
LSQ_num
Ë&& (
num_°a_unknown_thªad
 < 
numc⁄ãxts
); i++, index = (ödex + 1Ë% 
LSQ_size
)

6514 i‡(((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


6515 && !
cuºít
->
LSQ
[
ödex
].
issued


6516 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


6517 && !
cuºít
->
LSQ
[
ödex
].
ˇche_ªady
 &&

6518  
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6520 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

6526 
	}
}

6529 
	$lsq_ª‰esh
 ()

6531 
i
, 
idx
, 
j
, 
ödex
, 
n_°d_unknowns
;

6532 
md_addr_t
 
°d_unknowns
[
MAX_STD_UNKNOWNS
];

6533 
c⁄ãxt
 *
cuºít
;

6538 
idx
 = 0; idx < 
numc⁄ãxts
; idx++)

6543 
cuºít
 = 
thec⁄ãxts
[
idx
];

6544 
n_°d_unknowns
 = 0;

6545 
i
 = 0; i < 
LSQ_size
; i++)

6546 
°d_unknowns
[
i
] = 0;

6548 
i
 = 0, 
ödex
 = 
cuºít
->
LSQ_hód
, 
n_°d_unknowns
 = 0; i < cuºít->
LSQ_num
; i++, index = (ödex + 1Ë% 
LSQ_size
)

6550 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

6552 i‡(!
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6558 i‡(!
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6565 i‡(
n_°d_unknowns
 =
LSQ_size
)

6566 
	`Áèl
 ("STD unknownárray overflow, increase MAX_STD_UNKNOWNS");

6567 
°d_unknowns
[
n_°d_unknowns
++] = 
cuºít
->
LSQ
[
ödex
].
addr
;

6572 
j
 = 0; j < 
n_°d_unknowns
; j++)

6574 i‡(
°d_unknowns
[
j
] = 
cuºít
->
LSQ
[
ödex
].
addr
)

6575 
°d_unknowns
[
j
] = 0;

6581 ((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)Ë=(F_MEM | F_LOAD)Ë&& !cuºít->LSQ[ödex].
queued


6582 && !
cuºít
->
LSQ
[
ödex
].
issued


6583 && !
cuºít
->
LSQ
[
ödex
].
com∂ëed


6584 && 
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
ödex
]))

6588 
j
 = 0; j < 
n_°d_unknowns
; j++)

6591 i‡(
°d_unknowns
[
j
] =
cuºít
->
LSQ
[
ödex
].
addr
)

6594 i‡(
j
 =
n_°d_unknowns
)

6597 
	`ªadyq_íqueue
 (&
cuºít
->
LSQ
[
ödex
]);

6602 
	}
}

6609 
	$ruu_issue
 ()

6611 
k
, 
i
, 
lﬂd_œt
, 
éb_œt
, 
n_issued
;

6612 
RS_lök
 *
node
, *
√xt_node
;

6613 
ªs_ãm∂©e
 *
fu
;

6614 
öãr
 = -1;

6615 
this_cy˛e_issued
[
CLUSTERS
];

6616 
mm
;

6617 
dñay
 = 0;

6618 
boﬁ_t
 
bLSQHô
 = 
FALSE
;

6619 
boﬁ_t
 
bP¨tülHô
 = 
FALSE
;

6620 
nW1
;

6622 #ifde‡ 
MSHR


6623 
u£_mshr
 = 0;

6626 
∑ª¡ID
;

6628 
c⁄ãxt
 *
cuºít
;

6629 
thªadid
;

6632 
issueLimô
;

6634 
ãmp
;

6637 #ifde‡ 
PULL_BACK


6638 
puŒbackDñay
[
MAXTHREADS
];

6640 
k
 = 0; k < 
numc⁄ãxts
; k++)

6642 
puŒbackD⁄eThisCy˛e
[
k
] = 0;

6643 
dl1MissThisCy˛e
[
k
] = 
dl1HôThisCy˛e
[k] = 0;

6644 
puŒbackDñay
[
k
] = 0;

6646 i‡(
puŒbackWaôCy˛e
[
k
])

6648 
puŒbackWaôCy˛e
[
k
]--;

6651 i‡(
puŒbackBubbÀ
[
k
] && !
puŒbackWaôCy˛e
[k])

6653 
puŒbackCy˛eCou¡
[
k
]++;

6654 
puŒbackBubbÀ
[
k
]--;

6655 
puŒbackDñay
[
k
] = 1;

6661 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

6663 
issue_d⁄e
[
ãmp
] = 0;

6664 
this_cy˛e_issued
[
ãmp
] = 0;

6665 
lﬂdReje˘Cou¡
[
ãmp
] = 0;

6666 
ª∂ayIndex
[
ãmp
] = 0;

6669 
node
 = 
ªady_queue
;

6670 
ªady_queue
 = 
NULL
;

6674 
issueLimô
 = (
ruu_issue_width
 ) * 
numc⁄ãxts
;

6675 
ö‹dî_°Æl
[
MAXTHREADS
] = {0};

6676 
ö‹dî_°Æl_ruunum
[
MAXTHREADS
] = {0};

6678 
n_issued
 = 0; 
node
 &&Ç_issued < 
issueLimô
;Çodê
√xt_node
)

6680 #ifde‡ 
MSHR


6681 
u£_mshr
 = 0;

6684 
√xt_node
 = 
node
->
√xt
;

6688 i‡(
	`RSLINK_VALID
 (
node
))

6690 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

6692 
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

6693 
thªadid
 = 
rs
->threadid;

6694 i‡(!
	`OPERANDS_READY
 (
rs
Ë|| !rs->
queued
 ||Ñs->
issued
 ||Ñs->
com∂ëed
)

6695 
	`∑nic
 ("issued inst !ready, issued, or completed");

6697 
rs
->
queued
 = 
FALSE
;

6699 if(
ruu_ö‹dî_issue
)

6701 
rs_ödex
 = 
rs
->
ödex
;

6702 if(
i
 = 
rs
->
ö_LSQ
)

6704 if(
rs
->
¥od
[1] =
NULL
)

6705 
	`∑nic
("There isÇoáddressÖroducer ofÜoad/store\n");

6706 
rs_ödex
 = 
rs
->
¥od
[1]->
ödex
;

6708 if(
ö‹dî_°Æl
[
thªadid
] && 
rs_ödex
 > 
ö‹dî_°Æl_ruunum
[threadid])

6710 
	`ªadyq_íqueue
 (
rs
);

6711 
	`RSLINK_FREE
 (
node
);

6714 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

6716 
i
 = 
thec⁄ãxts
[
thªadid
]->
RUU_hód
; i < 
rs_ödex
; i = (i+1)%
RUU_size
)

6718 i‡((
	`MD_OP_FUCLASS
 (
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
›
) > 3) && (MD_OP_FUCLASS (thecontexts[threadid]->RUU[i].op) < 10))

6720 if(!
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
issued
)

6722 if(
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
ó_comp
 && !
cuºít
->RUU[i].
odï_li°
[0]->
rs
->
issued
)

6729 
i
 = 
thec⁄ãxts
[
thªadid
]->
RUU_hód
; i < 
rs_ödex
; i = (i+1)%
RUU_size
)

6731 i‡(!((
	`MD_OP_FUCLASS
 (
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
›
) > 3) && (MD_OP_FUCLASS (thecontexts[threadid]->RUU[i].op) < 10)))

6733 if(!
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
issued
)

6735 if(
thec⁄ãxts
[
thªadid
]->
RUU
[
i
].
ó_comp
 && !
cuºít
->RUU[i].
odï_li°
[0]->
rs
->
issued
)

6740 if(
i
 !
rs_ödex
)

6742 
	`ªadyq_íqueue
 (
rs
);

6743 
	`RSLINK_FREE
 (
node
);

6744 
ö‹dî_°Æl
[
thªadid
] = 1;

6745 
ö‹dî_°Æl_ruunum
[
thªadid
] = 
rs_ödex
;

6748 if(
rs
->
ö_LSQ
 && 
thec⁄ãxts
[
thªadid
]->
LSQ_num
)

6750 if(
thec⁄ãxts
[
thªadid
]->
LSQ
[—hec⁄ãxts[thªadid]->
LSQ_èû
+
LSQ_size
-1)%LSQ_size].
miss_Êag
)

6752 
	`ªadyq_íqueue
 (
rs
);

6753 
	`RSLINK_FREE
 (
node
);

6759 
ö‹dî_°Æl
[
thªadid
] = 0;

6761 #ifde‡
TG


6762 i‡(
rs
->
ö_LSQ
)

6763 
	`åaffic_gíî©e
(
sim_cy˛e
, 
rs
->
addr
,Ñs);

6767 #ifde‡ 
PULL_BACK


6768 i‡(
puŒbackDñay
[
rs
->
thªadid
])

6770 
	`ªadyq_íqueue
 (
rs
);

6771 
	`RSLINK_FREE
 (
node
);

6776 i‡(
issue_d⁄e
[
thªadid
] =(
ruu_issue_width
 ))

6778 
	`ªadyq_íqueue
 (
rs
);

6779 
	`RSLINK_FREE
 (
node
);

6783 i‡(
lﬂdReje˘Cou¡
[
thªadid
])

6785 
	`ªadyq_íqueue
 (
rs
);

6786 
	`RSLINK_FREE
 (
node
);

6789 if(
rs
->
ˇche_ªady
 ==1)

6791 
	`ªadyq_íqueue
 (
rs
);

6792 
	`RSLINK_FREE
 (
node
);

6797 i‡(
rs
->
issue_time
 > 
sim_cy˛e
)

6799 
	`ªadyq_íqueue
 (
rs
);

6800 
	`RSLINK_FREE
 (
node
);

6804 i‡(((
rs
->
whí_ªady
[0] <
sim_cy˛e
Ë&& (rs->whí_ªady[1] <sim_cy˛eË&& (rs->whí_ªady[2] <sim_cy˛eË&& (rs->
whí_öq
 < sim_cy˛eË&& !rs->
ö_qwaô
))

6807 #ifde‡ 
PWR_WAKEUP_SELECT


6808 i‡(!(
	`MD_OP_FLAGS
 (
rs
->
›
Ë& 
F_CTRL
))

6810 i‡((
rs
->
out1
 > 0) && (rs->out1 < 32))

6812 
i£À˘i⁄_ac˚ss
++;

6813 
cuºít
->
i£À˘i⁄_ac˚ss
++;

6815 i‡((
rs
->
out1
 > 31) && (rs->out1 < 63))

6817 
f£À˘i⁄_ac˚ss
++;

6818 
cuºít
->
f£À˘i⁄_ac˚ss
++;

6822 
Œ_sc
 = 0;

6824 i‡(
rs
->
›
 =
STL_C
 ||Ñs->› =
LDL_L
)

6827 
Œ_sc
++;

6831 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE)))

6836 
md_addr_t
 
addr
;

6838 
addr
 = 
rs
->addr;

6840 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

6841 
i
;

6843 i‡(!
vÆid_addr
)

6844 
sim_övÆid_addrs
++;

6847 #ifde‡ 
MSHR


6848 
u£_mshr
 = 1;

6851 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

6853 i‡(!
fu
)

6855 
	`ªadyq_íqueue
 (
rs
);

6856 
	`RSLINK_FREE
 (
node
);

6861 i‡(
fu
->
ma°î
->
busy
)

6862 
	`∑nic
 ("functional unitálready in use");

6865 i‡(
vÆid_addr
 && 
déb
[
thªadid
])

6867 
éb_œt
 = 0;

6868 
éb_mshr_m©ch
 = -1;

6869 
éb_mshr_m©ch
 = 
	`éb_mshr_check
(
addr
, 
thªadid
, 
rs
);

6871 
Êushög
;

6872 
Êushög
 = 
	`éb_lock_check
(
thªadid
);

6873 i‡–
Êushög
 )

6875 
rs
->
issue_time
 = 
sim_cy˛e
 + 1;

6876 
	`ªadyq_íqueue
 (
rs
);

6877 
	`RSLINK_FREE
 (
node
);

6880 i‡(
éb_mshr_m©ch
 != -1)

6881 
éb_œt
 = 
WAIT_TIME
;

6885 
éb_œt
 = 
	`ˇche_ac˚ss
 (
déb
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid, NULL);

6887 i‡–
éb_œt
 =
WAIT_TIME
 )

6889 
evi˘ög
 = -1;

6890 
evi˘ög
 = 
	`éb_cu_check
(
thªadid
, 
addr
, 
SHR_TLB_WRITE_BACK
);

6891 
	`éb_mshr_Æloˇã
(
addr
, 
thªadid
, 
rs
, 
evi˘ög
);

6894 if(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

6896 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

6897 
	`ªadyq_íqueue
 (
rs
);

6898 
	`RSLINK_FREE
 (
node
);

6903 #ifdef 
DCACHE_MSHR


6904 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid))

6906 
	`ªadyq_íqueue
 (
rs
);

6907 
	`RSLINK_FREE
 (
node
);

6912 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

6913 
rs
->
issued
 = 
TRUE
;

6914 
rs
->
issue_time
 = 
sim_cy˛e
;

6915 
rs
->
com∂ëed
 = 
TRUE
;

6916 
rs
->
föish_time
 = 
sim_cy˛e
;

6919 i‡(
vÆid_addr
 && (
rs
->
›
 !
STL_C
Ë&& 
¥e„tch_Êag
)

6921 
œt
 = 0;

6922 
rsCacheAc˚ss
 = 
rs
;

6923 
m©chnum
 = 0;

6924 
dˇche_ac˚ss
++;

6925 
cuºít
->
dˇche_ac˚ss
++;

6926 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

6927 if(!
m©chnum
)

6929 i‡(
ˇche_dl1
[
thªadid
])

6931 
	`sh¨e_∑âîn
(
thªadid
, 
addr
, 
Wrôe
);

6932 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_dl1
[
thªadid
], 
Wrôe
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Ñs->threadid, NULL);

6935 #ifdef 
DCACHE_MSHR


6936 if(
œt
 > 
ˇche_dl1_œt
)

6937 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
œt
, 0, 
rs
);

6941 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

6942 if(
œt
>
ˇche_dl1_œt
)

6943 
rs
->
miss_Êag
 = 1;

6945 
rs
->
miss_Êag
 = 0;

6948 
rs
->
issued
 = 
TRUE
;

6949 
rs
->
com∂ëed
 = 
TRUE
;

6950 
rs
->
issue_time
 = 
sim_cy˛e
;

6951 
rs
->
föish_time
 = 
sim_cy˛e
;

6953 i‡(
rs
->
cou¡ed_iissueq
)

6955 
cuºít
->
iissueq_thrd
--;

6956 
iissueq
--;

6957 
iissueq_˛
[
rs
->
thªadid
]--;

6958 
rs
->
cou¡ed_iissueq
 = 0;

6960 i‡(
rs
->
cou¡ed_fissueq
)

6962 
cuºít
->
fissueq_thrd
--;

6963 
fissueq
--;

6964 
fissueq_˛
[
rs
->
thªadid
]--;

6965 
rs
->
cou¡ed_fissueq
 = 0;

6969 i‡(
rs
->
⁄ames
[0] ||Ñs->onames[1])

6970 
	`∑nic
 ("store createsÑesult");

6972 i‡(
rs
->
ªcovî_ö°
)

6973 
	`∑nic
 ("mis-predicted store");

6975 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_WRITEBACK
, 0);

6976 
n_issued
++;

6987 
issue_d⁄e
[
rs
->
thªadid
]++;

6990 
cuºít
->
iqøm_ac˚ss
++;

6992 i‡(
rs
->
issue_time
 &&Ñs->issue_timê!
sim_cy˛e
)

6993 
	`w¨n
 ("already issueÅimed onánother cycle");

6995 
rs
->
issue_time
 = 
sim_cy˛e
;

6997 
k
 = 0; k < 
MAX_IDEPS
; k++)

6999 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

7001 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

7003 
úegfûe_ac˚ss
++;

7004 
cuºít
->
úegfûe_ac˚ss
++;

7005 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7006 i‡(
k
)

7007 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7009 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7010 
úegfûe_num_p›_cou¡_cy˛e
++;

7012 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

7014 
‰egfûe_ac˚ss
++;

7015 
cuºít
->
‰egfûe_ac˚ss
++;

7016 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7017 i‡(
k
)

7018 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7020 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7021 
úegfûe_num_p›_cou¡_cy˛e
++;

7026 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

7027 
cuºít
->
lsq_ac˚ss
++;

7028 
lsq_°‹e_d©a_ac˚ss
++;

7029 
cuºít
->
lsq_¥eg_ac˚ss
++;

7035 
i
 = 
rs
->
ödex
;

7036 
bLSQHô
 = 
FALSE
;

7037 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

7041 
bLSQHô
 = 
FALSE
;

7042 i‡(
rs
->
isPª„tch
)

7045 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

7047 i‡(
i
 =
cuºít
->
LSQ_èû
)

7050 #ifdef 
LSQ_FIX_PARTIAL_BUG


7051 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

7053 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


7058 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

7060 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

7061 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

7063 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

7064 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

7066 i‡(
qwAddr1
 =
qwAddr2
)

7068 
bLSQHô
 = 
TRUE
;

7079 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

7081 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
addr
 =addrË&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


7085 && 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 < 
rs
->
di•_time
 && !cuºít->LSQ[i].
isPª„tch
)

7087 
bLSQHô
 = 
TRUE
;

7095 i‡(
bLSQHô
)

7097 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

7099 
m_sqNumLdRïœy
[
thªadid
]++;

7100 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

7101 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

7102 
lﬂdReje˘Cou¡
[
thªadid
]++;

7107 
cuºít
->
LSQ
[
i
].
sqSt‹eF‹w¨dT
 = 
rs
->
di•_time
;

7114 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
NA
)

7117 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

7119 
öãr
 = (
rs
->
addr
 >> 
ˇche_dl1
[rs->
thªadid
]->
£t_shi·
Ë& (
ªs_memb™k
 - 1);

7121 i‡(!
DEDICATED_ADDER
 || (
	`MD_OP_FUCLASS
 (
rs
->
›
Ë!
I¡ALU
))

7124 
öãr
 = 
MAGICN
 + 
rs
->
˛u°î
;

7128 i‡(
rs
->
ó_comp
)

7130 
öãr
 = 
RES_CACHEPORTS
 + 1;

7134 
öãr
 = 
RES_CACHEPORTS
 + 2;

7138 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
rs
->
›
), 
thªadid
);

7140 i‡(
fu
)

7142 
rs
->
issued
 = 
TRUE
;

7143 i‡(
rs
->
cou¡ed_iissueq
)

7145 
cuºít
->
iissueq_thrd
--;

7146 
iissueq
--;

7147 
iissueq_˛
[
rs
->
thªadid
]--;

7148 
rs
->
cou¡ed_iissueq
 = 0;

7150 i‡(
rs
->
cou¡ed_fissueq
)

7152 
cuºít
->
fissueq_thrd
--;

7153 
fissueq
--;

7154 
fissueq_˛
[
rs
->
thªadid
]--;

7155 
rs
->
cou¡ed_fissueq
 = 0;

7158 i‡(
fu
->
ma°î
->
busy
)

7159 
	`∑nic
 ("functional unitálready in use");

7161 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

7162 
fu
->
ma°î
->
du∂iˇã
 = 
rs
->duplicate;

7163 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

7166 i‡(
rs
->
ö_LSQ
 && ((
	`MD_OP_FLAGS
 (rs->
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD)))

7168 
evíts
 = 0;

7169 
lﬂd_œt
 = 0;

7170 
md_addr_t
 
addr
;

7171 
addr
 = 
rs
->addr;

7173 i‡(
déb
[
thªadid
] && 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
))

7175 
éb_œt
 = 0;

7176 
éb_mshr_m©ch
 = -1;

7177 
éb_mshr_m©ch
 = 
	`éb_mshr_check
(
addr
, 
thªadid
, 
rs
);

7178 
Êushög
;

7179 
Êushög
 = 
	`éb_lock_check
(
thªadid
);

7180 i‡–
Êushög
 )

7182 
rs
->
issue_time
 = 
sim_cy˛e
 + 1;

7183 
fu
->
ma°î
->
busy
 = 0;

7184 
rs
->
issued
 = 
FALSE
;

7185 
	`ªadyq_íqueue
 (
rs
);

7186 
	`RSLINK_FREE
 (
node
);

7189 i‡(
éb_mshr_m©ch
 != -1)

7190 
éb_œt
 = 
WAIT_TIME
;

7193 
éb_œt
 = 
	`ˇche_ac˚ss
(
déb
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL, 
rs
->threadid, NULL);

7194 i‡–
éb_œt
 =
WAIT_TIME
 )

7196 
evi˘ög
 = -1;

7197 
evi˘ög
 = 
	`éb_cu_check
(
thªadid
, 
addr
, 
SHR_TLB_WRITE_BACK
);

7198 
	`éb_mshr_Æloˇã
(
addr
, 
thªadid
, 
rs
, 
evi˘ög
);

7201 i‡(
éb_œt
 > 
déb
[
thªadid
]->
hô_œãncy
)

7203 
rs
->
issue_time
 = 
sim_cy˛e
 + 
éb_œt
;

7204 
fu
->
ma°î
->
busy
 = 0;

7205 
rs
->
issued
 = 
FALSE
;

7206 
	`ªadyq_íqueue
 (
rs
);

7207 
	`RSLINK_FREE
 (
node
);

7211 
m©chnum
;

7212 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, cache_dl1[thªadid]->
£t_shi·
);

7213 if(
m©chnum
 && !
rs
->
isPª„tch
)

7215 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

7216 
rs
->
ˇche_ªady
 = 1;

7217 
fu
->
ma°î
->
busy
 = 0;

7218 
rs
->
issued
 = 
FALSE
;

7219 
	`RS_block_li°
(
rs
, 
sim_cy˛e
, 
m©chnum
, 
thªadid
);

7221 
	`RSLINK_FREE
 (
node
);

7225 #ifdef 
DCACHE_MSHR


7226 i‡(
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid))

7228 
fu
->
ma°î
->
busy
 = 0;

7229 
rs
->
issued
 = 
FALSE
;

7230 
	`ªadyq_íqueue
 (
rs
);

7231 
	`RSLINK_FREE
 (
node
);

7236 
cuºít
->
lsq_ac˚ss
++;

7237 
cuºít
->
lsq_wakeup_ac˚ss
++;

7240 
ldIssueCou¡
++;

7241 #ifde‡
RELAXED_CONSISTENCY


7242 
i
 = 
rs
->
ödex
;

7243 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

7246 
i
 = (ò+ (
LSQ_size
 + 1)) % LSQ_size;

7248 i‡(
i
 =
cuºít
->
LSQ_èû
)

7251 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_LOAD
)

7252 && (
	`OPERANDS_READY
 (&
cuºít
->
LSQ
[
i
])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->thªadidË&& cuºít->LSQ[i].
issued


7253 && !
cuºít
->
LSQ
[
i
].
isPª„tch
)

7255 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

7256 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

7258 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

7259 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

7261 i‡((
qwAddr1
 =
qwAddr2
Ë&& 
cuºít
->
LSQ
[
i
].
övÆid©i⁄Re˚ived
)

7263 i‡(!
lﬂdReje˘Cou¡
[
thªadid
])

7265 
m_sqNumLdRïœy
[
thªadid
]++;

7266 
lﬂdReje˘Rïœy
[
thªadid
] = 
i
;

7267 
ª∂ayIndex
[
thªadid
] = 
cuºít
->
LSQ
[
i
].
robE¡ry
;

7268 
lﬂdReje˘Cou¡
[
thªadid
]++;

7269 
övÆid©i⁄_ª∂ay
[
thªadid
]++;

7278 
ld°Rïœy
 = 1;

7280 i‡(!
rs
->
isPª„tch
)

7281 
ld°Rïœy
 = 
	`checkLSQf‹St
 (
rs
->
ödex
, 
cuºít
);

7283 i‡(!
ld°Rïœy
)

7286 #ifde‡
REMOVE_COMPUTE_QUEUE


7287 i‡(
rs
->
cou¡ed_iissueq
)

7289 
cuºít
->
iissueq_thrd
++;

7290 
iissueq
++;

7291 
rs
->
cou¡ed_iissueq
 = 1;

7293 i‡(
rs
->
cou¡ed_fissueq
)

7295 
cuºít
->
fissueq_thrd
++;

7296 
fissueq
++;

7297 
rs
->
cou¡ed_fissueq
 = 1;

7300 
rs
->
issued
 = 
FALSE
;

7301 
rs
->
issue_time
 = 
sim_cy˛e
 + 
ªje˘RëryCy˛e
;

7302 
	`ªadyq_íqueue
 (
rs
);

7303 
	`RSLINK_FREE
 (
node
);

7304 
ld°Reje˘i⁄Cou¡
[
thªadid
]++;

7309 
bLSQHô
 = 
FALSE
;

7310 
bP¨tülHô
 = 
FALSE
;

7312 
i
 = 
rs
->
ödex
;

7313 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

7316 
lsq_œt
 = 0;

7317 i‡(
i
 !
cuºít
->
LSQ_hód
 && !
rs
->
isPª„tch
)

7324 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

7327 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
)

7328 #ifde‡
LSQ_LOAD_FAST_ISSUE


7330 && (
	`STORE_ADDR_READY
 (&
cuºít
->
LSQ
[
i
]))

7332 && (
cuºít
->
LSQ
[
i
].
thªadid
 =
rs
->thªadidË&& !cuºít->LSQ[i].
isPª„tch
)

7334 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

7335 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

7336 
md_addr_t
 
qwAddr1
 = 
addr
 & ~(
nW
 - 1);

7337 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

7339 i‡(
qwAddr1
 =
qwAddr2
)

7341 
bLSQHô
 = 
TRUE
;

7342 i‡(
nW1
 > 
nW2
)

7346 
bP¨tülHô
 = 
TRUE
;

7352 i‡(
bLSQHô
)

7357 
lsq_œt
 = 
LSQ_LATENCY
;

7358 
rs
->
sqSt‹eF‹w¨dT
 = 
cuºít
->
LSQ
[
i
].
di•_time
;

7362 i‡(
i
 =
cuºít
->
LSQ_hód
)

7368 
vÆid_addr
 = 
	`md_vÆid_addr
 (
addr
, 
cuºít
->
ma°îid
);

7370 i‡(!
cuºít
->
•ec_mode
&& !
vÆid_addr
)

7371 
sim_övÆid_addrs
++;

7373 i‡(
ˇche_dl1
[
thªadid
] && 
vÆid_addr
 && !(
m©chnum
))

7376 
dˇche_ac˚ss
++;

7377 
cuºít
->
dˇche_ac˚ss
++;

7378 
rsCacheAc˚ss
 = 
rs
;

7379 
	`sh¨e_∑âîn
(
thªadid
, 
addr
, 
Ród
);

7380 
lﬂd_œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Ród
, (
addr
 & ~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, 
rs
,Ñs->threadid, NULL);

7382 #ifdef 
DCACHE_MSHR


7384 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 == -1)

7385 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
rs
);

7386 if(
lﬂd_œt
 >
WAIT_TIME
 && 
rs
->
sqSt‹eF‹w¨dT
 != -1)

7387 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
addr
, 
lﬂd_œt
, 0, 
NULL
);

7389 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
)

7390 
evíts
 |
PEV_CACHEMISS
;

7391 if(
lﬂd_œt
>
ˇche_dl1_œt
)

7392 
rs
->
miss_Êag
 = 1;

7394 
rs
->
miss_Êag
 = 0;

7398 
lﬂd_œt
 = 
fu
->
›œt
;

7401 #ifde‡ 
PULL_BACK


7402 i‡(
lﬂd_œt
 > 
ˇche_dl1_œt
 && !
rs
->
isPª„tch
)

7404 
dl1MissThisCy˛e
[
rs
->
thªadid
] = 1;

7405 i‡(
rs
->
›
 !
LDT
 &&Ñs->› !
LDS
)

7407 i‡(!
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
])

7409 i‡(
puŒbackWaôCy˛e
[
rs
->
thªadid
])

7410 
puŒbackBubbÀ
[
rs
->
thªadid
]++;

7412 
puŒbackBubbÀ
[
rs
->
thªadid
] = 2;

7413 
puŒbackD⁄eThisCy˛e
[
rs
->
thªadid
] = 1;

7415 i‡(!
puŒbackWaôCy˛e
[
rs
->
thªadid
])

7417 
puŒbackWaôCy˛e
[
rs
->
thªadid
] = 2;

7422 i‡(!
rs
->
isPª„tch
)

7424 
dl1HôThisCy˛e
[
rs
->
thªadid
] = 1;

7425 i‡(
rs
->
›
 =
LDT
 ||Ñs->› =
LDS
)

7427 
lﬂd_œt
 = 
ˇche_dl1_œt
 + 1;

7433 i‡(
PERFECT
)

7435 
lﬂd_œt
 = 
PERFECTLAT
;

7438 i‡(
lsq_œt
)

7440 
lﬂd_œt
 = 
lsq_œt
;

7442 i‡(
rs
->
isPª„tch
)

7444 
lﬂd_œt
 = 
ˇche_dl1_œt
;

7445 i‡(!
rs
->
•ec_mode
)

7446 
m_sqPª„tchC¡
++;

7450 i‡(
bP¨tülHô
)

7452 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
lﬂd_œt
 + 5,Üoad_lat+5);

7455 
	`evítq_queue_evít
(
rs
, 
sim_cy˛e
 + 
lﬂd_œt
,Üoad_lat);

7457 i‡(!
rs
->
ó_comp
)

7459 
rs
->
föish_time
 = (
sim_cy˛e
 + 
lﬂd_œt
);

7460 
rs
->
issue_time
 = 
sim_cy˛e
;

7464 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
, (‘s->
ó_comp
 ? 
PEV_AGEN
 : 0Ë| 
evíts
));

7469 #ifde‡
PWR_ACCESS


7470 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

7471 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

7473 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

7476 i‡(
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡ALU
)

7478 
ülu1_ac˚ss
++;

7479 
cuºít
->
ülu1_ac˚ss
++;

7481 i‡(
rs
->
ó_comp
)

7483 
add_Æu
++;

7487 
n⁄add_Æu
++;

7490 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
I¡MULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
I¡DIV
))

7492 
ülu2_ac˚ss
++;

7493 
cuºít
->
ülu2_ac˚ss
++;

7495 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
Ë=
FlﬂtMULT
Ë|| (MD_OP_FUCLASS (rs->›Ë=
FlﬂtDIV
))

7497 
Álu2_ac˚ss
++;

7498 
cuºít
->
Álu2_ac˚ss
++;

7502 
Álu1_ac˚ss
++;

7503 
cuºít
->
Álu1_ac˚ss
++;

7505 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 
fu
->
›œt
, 0);

7506 
rs
->
föish_time
 = (
sim_cy˛e
 + 
fu
->
›œt
);

7507 
rs
->
issue_time
 = 
sim_cy˛e
;

7508 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

7512 
n_issued
++;

7523 
issue_d⁄e
[
rs
->
thªadid
]++;

7525 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

7527 
fqøm_ac˚ss
++;

7528 
cuºít
->
fqøm_ac˚ss
++;

7532 
iqøm_ac˚ss
++;

7533 
cuºít
->
iqøm_ac˚ss
++;

7536 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

7538 
k
 = 0; k < 
MAX_IDEPS
; k++)

7540 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

7542 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

7544 
úegfûe_ac˚ss
++;

7545 
cuºít
->
úegfûe_ac˚ss
++;

7546 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7547 i‡(
k
)

7548 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7550 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7551 
úegfûe_num_p›_cou¡_cy˛e
++;

7553 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

7555 
‰egfûe_ac˚ss
++;

7556 
cuºít
->
úegfûe_ac˚ss
++;

7557 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7558 i‡(
k
)

7559 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7561 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7562 
úegfûe_num_p›_cou¡_cy˛e
++;

7569 
	`ªadyq_íqueue
 (
rs
);

7570 i‡(!
rs
->
•ec_mode
)

7571 
iss_°Æl
++;

7572 i‡(
öãr
 < 
RES_CACHEPORTS
)

7574 i‡(!
rs
->
•ec_mode
)

7575 
b™k_c⁄f
++;

7581 
rs
->
issued
 = 
TRUE
;

7582 i‡(
rs
->
cou¡ed_iissueq
)

7584 
cuºít
->
iissueq_thrd
--;

7585 
iissueq
--;

7586 
iissueq_˛
[
rs
->
thªadid
]--;

7587 
rs
->
cou¡ed_iissueq
 = 0;

7589 i‡(
rs
->
cou¡ed_fissueq
)

7591 
cuºít
->
fissueq_thrd
--;

7592 
fissueq
--;

7593 
fissueq_˛
[
rs
->
thªadid
]--;

7594 
rs
->
cou¡ed_fissueq
 = 0;

7596 
	`evítq_queue_evít
 (
rs
, 
sim_cy˛e
 + 1, 0);

7597 i‡(!
rs
->
ó_comp
 &&Ñs->
out1
)

7599 
rs
->
föish_time
 = (
sim_cy˛e
 + 1);

7600 
rs
->
issue_time
 = 
sim_cy˛e
;

7604 
	`±ø˚_√w°age
 (
rs
->
±ø˚_£q
, 
PST_EXECUTE
,Ñs->
ó_comp
 ? 
PEV_AGEN
 : 0);

7605 
n_issued
++;

7615 
issue_d⁄e
[
rs
->
thªadid
]++;

7616 i‡((
	`MD_OP_FUCLASS
 (
rs
->
›
) > 3) && (MD_OP_FUCLASS (rs->op) < 10))

7618 
fqøm_ac˚ss
++;

7619 
cuºít
->
fqøm_ac˚ss
++;

7623 
iqøm_ac˚ss
++;

7624 
cuºít
->
iqøm_ac˚ss
++;

7626 i‡((
rs
->
ö°num
 - 
cuºít
->
RUU
[cuºít->
RUU_hód
].ö°numË> 
DISTILP
)

7628 
di°ûp
++;

7629 i‡(!
rs
->
•ec_mode
)

7630 
di°ûp_vÆid
++;

7631 
rs
->
di°issue
 = 1;

7633 
this_cy˛e_issued
[
rs
->
˛u°î
]++;

7635 
k
 = 0; k < 
MAX_IDEPS
; k++)

7637 i‡(
rs
->
whí_idï_ªady
[
k
] < 
sim_cy˛e
)

7639 i‡((
rs
->
idï_«me
[
k
] > 0) && (rs->idep_name[k] < 32))

7641 
úegfûe_ac˚ss
++;

7642 
cuºít
->
úegfûe_ac˚ss
++;

7643 
úegfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7644 i‡(
k
)

7645 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7647 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7648 
úegfûe_num_p›_cou¡_cy˛e
++;

7650 i‡((
rs
->
idï_«me
[
k
] > 31) && (rs->idep_name[k] < 63))

7652 
‰egfûe_ac˚ss
++;

7653 
cuºít
->
‰egfûe_ac˚ss
++;

7655 
‰egfûe_ac˚ss_˛
[
rs
->
˛u°î
]++;

7656 i‡(
k
)

7657 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_rb
);

7659 
úegfûe_tŸÆ_p›_cou¡_cy˛e
 +
	`p›_cou¡
 (
rs
->
vÆ_ø
);

7660 
úegfûe_num_p›_cou¡_cy˛e
++;

7669 
	`ªadyq_íqueue
 (
rs
);

7672 
	`RSLINK_FREE
 (
node
);

7675 ; 
node
;Çodê
√xt_node
)

7677 
√xt_node
 = 
node
->
√xt
;

7679 i‡(
	`RSLINK_VALID
 (
node
))

7681 
RUU_°©i⁄
 *
rs
 = 
	`RSLINK_RS
 (
node
);

7683 
rs
->
queued
 = 
FALSE
;

7684 
	`ªadyq_íqueue
 (
rs
);

7686 
	`RSLINK_FREE
 (
node
);

7691 
ãmp
 = 0;Åem∞< 
numc⁄ãxts
;Åemp++)

7693 i‡(
lﬂdReje˘Cou¡
[
ãmp
] & (
cﬁÀ˘_°©s
 == 1))

7696 
k
 = 
ª∂ayIndex
[
ãmp
];

7699 i‡(!
thec⁄ãxts
[
ãmp
]->
RUU
[
k
].
•ec_mode
)

7701 
	`fixS≥cSèã
 (
k
, 
ãmp
);

7702 
thec⁄ãxts
[
ãmp
]->
ªgs
 =Åhec⁄ãxts[ãmp]->
RUU
[
k
].
backupReg
;

7703 
	`£qC⁄si°™cyRïœy
 (
k
, 
ãmp
);

7704 
lﬂdReje˘Sèt
[
ãmp
]++;

7709 
num_issued
 = 
n_issued
;

7710 
	}
}

7718 
	#R_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_IREGS
))

	)

7719 
	#F_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_FREGS
))

	)

7720 
	#C_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_NUM_CREGS
))

	)

7724 
	$r•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

7726 
i
;

7728 
c⁄ãxt
 *
cuºít
;

7730 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7732 i‡(!
°ªam
)

7733 
°ªam
 = 
°dîr
;

7735 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêªgi°î c⁄ã¡†**\n", 
thªadid
);

7737 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

7740 
i
 = 0; i < 
MD_NUM_IREGS
; i++)

7742 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
, 
i
))

7744 
	`md_¥öt_úeg
 (
cuºít
->
•ec_ªgs_R
, 
i
, 
°ªam
);

7745 
	`Ârötf
 (
°ªam
, "\n");

7750 
i
 = 0; i < 
MD_NUM_FREGS
; i++)

7752 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
, 
i
))

7754 
	`md_¥öt_Âªg
 (
cuºít
->
•ec_ªgs_F
, 
i
, 
°ªam
);

7755 
	`Ârötf
 (
°ªam
, "\n");

7760 
i
 = 0; i < 
MD_NUM_CREGS
; i++)

7762 #ifde‡
TEST_BUG


7763 i‡(
	`BITMAP_SET_P
 (
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7765 i‡(
	`BITMAP_SET_P
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
, 
i
))

7768 
	`md_¥öt_¸eg
 (
cuºít
->
•ec_ªgs_C
, 
i
, 
°ªam
);

7769 
	`Ârötf
 (
°ªam
, "\n");

7772 
	}
}

7784 
	$åa˚r_ªcovî
 (
thªadid
)

7786 
i
;

7787 
•ec_mem_ít
 *
ít
, *
ít_√xt
;

7789 
c⁄ãxt
 *
cuºít
;

7791 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7795 i‡(!
cuºít
->
•ec_mode
)

7796 
	`∑nic
 ("Thªad %d, c™nŸÑecovî u∆es†ö s≥cuœtivêmode", 
thªadid
);

7797 
cuºít
->
•ec_mode
 = 
FALSE
;

7800 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7801 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7805 #ifde‡
TEST_BUG


7806 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7807 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7808 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7810 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7811 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7812 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7817 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7820 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
i
];É¡;É¡ = 
ít_√xt
)

7822 
ít_√xt
 = 
ít
->
√xt
;

7823 
ít
->
√xt
 = 
cuºít
->
buckë_‰ì_li°
;

7824 
cuºít
->
buckë_‰ì_li°
 = 
ít
;

7826 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7830 i‡(
±ø˚_a˘ive
)

7832 
cuºít
->
„tch_num
 != 0)

7834 
	`±ø˚_ídö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
);

7835 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

7836 
cuºít
->
„tch_num
--;

7840 
cuºít
->
„tch_num
 = 0;

7841 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

7842 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªcovî_PC
;

7843 
	}
}

7847 
	$åa˚r_öô
 (
thªadid
)

7849 
i
;

7851 
c⁄ãxt
 *
cuºít
;

7853 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7855 
cuºít
->
•ec_mode
 = 
FALSE
;

7856 i‡(
cuºít
->
waôF‹BønchResﬁve
 == 1)

7857 
cuºít
->
waôF‹BønchResﬁve
 = 0;

7860 #ifde‡
TEST_BUG


7861 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_R
, 
R_BMAP_SZ
);

7862 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_F
, 
F_BMAP_SZ
);

7863 
	`BITMAP_CLEAR_MAP
 (
u£_•ec_C
, 
C_BMAP_SZ
);

7865 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_R
, 
R_BMAP_SZ
);

7866 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_F
, 
F_BMAP_SZ
);

7867 
	`BITMAP_CLEAR_MAP
 (
cuºít
->
u£_•ec_C
, 
C_BMAP_SZ
);

7869 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

7870 
cuºít
->
°‹e_hèbÀ
[
i
] = 
NULL
;

7871 
	}
}

7877 
	#HASH_ADDR
(
ADDR
Ë((((ADDRË>> 24)^((ADDRË>> 16)^((ADDRË>> 8)^(ADDR)Ë& (
STORE_HASH_SIZE
-1))

	)

7889 
md_Áu…_ty≥


7890 
	$•ec_mem_ac˚ss
 (
mem_t
 *
mem
,

7891 
mem_cmd
 
cmd
,

7892 
md_addr_t
 
addr
,

7893 *
p
,

7894 
nbyãs
)

7896 
i
, 
ödex
;

7897 
•ec_mem_ít
 *
ít
, *
¥ev
;

7899 
c⁄ãxt
 *
cuºít
;

7900 
thªadid
 = 
mem
->threadid;

7902 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

7908 i‡((
nbyãs
 & (nbyã†- 1)Ë!0 || (
addr
 & (nbytes - 1)) != 0)

7911 
i
 = 0; i < 
nbyãs
; i++)

7912 ((*Ë
p
)[
i
] = 0;

7914  
md_Áu…_n⁄e
;

7917 i‡(!((
addr
 >
cuºít
->
ld_ãxt_ba£
 &&ádd∏< (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& 
cmd
 =
Ród
Ë|| 
	`md_vÆid_addr
 (addr, cuºít->
ma°îid
)))

7920 
i
 = 0; i < 
nbyãs
; i++)

7921 ((*Ë
p
)[
i
] = 0;

7923  
md_Áu…_n⁄e
;

7927 
ödex
 = 
	`HASH_ADDR
 (
addr
);

7928 
¥ev
 = 
NULL
, 
ít
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];É¡;Öªv =É¡,É¡ =É¡->
√xt
)

7930 i‡(
ít
->
addr
 ==áddr)

7933 i‡(
¥ev
 !
NULL
)

7936 
¥ev
->
√xt
 = 
ít
->next;

7937 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7938 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7945 i‡(!
ít
 && 
cmd
 =
Wrôe
)

7948 i‡(!
cuºít
->
buckë_‰ì_li°
)

7951 
cuºít
->
buckë_‰ì_li°
 = 
	`ˇŒoc
 (1,  (
•ec_mem_ít
));

7952 i‡(!
cuºít
->
buckë_‰ì_li°
)

7953 
	`Áèl
 ("thªad %d , ouào‡vútuÆ mem‹y", 
thªadid
);

7955 
ít
 = 
cuºít
->
buckë_‰ì_li°
;

7956 
cuºít
->
buckë_‰ì_li°
 = cuºít->buckë_‰ì_li°->
√xt
;

7958 i‡(!
bugcom∑t_mode
)

7961 
ít
->
√xt
 = 
cuºít
->
°‹e_hèbÀ
[
ödex
];

7962 
cuºít
->
°‹e_hèbÀ
[
ödex
] = 
ít
;

7963 
ít
->
addr
 =áddr;

7964 
ít
->
d©a
[0] = 0;

7965 
ít
->
d©a
[1] = 0;

7970 
nbyãs
)

7973 i‡(
cmd
 =
Ród
)

7975 i‡(
ít
)

7978 *((
byã_t
 *Ë
p
Ë*((byã_à*Ë(&
ít
->
d©a
[0]));

7984 *((
byã_t
 *Ë
p
Ë
	`MEM_READ_BYTE
 (
mem
, 
addr
);

7990 *((
byã_t
 *Ë(&
ít
->
d©a
[0])Ë*((byã_à*Ë
p
);

7994 i‡(
cmd
 =
Ród
)

7996 i‡(
ít
)

7999 *((
hÆf_t
 *Ë
p
Ë*((hÆf_à*Ë(&
ít
->
d©a
[0]));

8005 *((
hÆf_t
 *Ë
p
Ë
	`MEM_READ_HALF
 (
mem
, 
addr
);

8011 *((
hÆf_t
 *Ë& 
ít
->
d©a
[0]Ë*((hÆf_à*Ë
p
);

8015 i‡(
cmd
 =
Ród
)

8017 i‡(
ít
)

8020 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

8026 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

8032 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

8036 i‡(
cmd
 =
Ród
)

8038 i‡(
ít
)

8041 *((
w‹d_t
 *Ë
p
Ë*((w‹d_à*Ë& 
ít
->
d©a
[0]);

8042 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë*((w‹d_à*Ë& 
ít
->
d©a
[1]);

8048 *((
w‹d_t
 *Ë
p
Ë
	`MEM_READ_WORD
 (
mem
, 
addr
);

8049 *(((
w‹d_t
 *Ë
p
Ë+ 1Ë
	`MEM_READ_WORD
 (
mem
, 
addr
 +  (word_t));

8055 *((
w‹d_t
 *Ë& 
ít
->
d©a
[0]Ë*((w‹d_à*Ë
p
);

8056 *((
w‹d_t
 *Ë& 
ít
->
d©a
[1]Ë*(((w‹d_à*Ë
p
) + 1);

8060 
	`∑nic
 ("access sizeÇot supported in mis-speculative mode");

8063  
md_Áu…_n⁄e
;

8064 
	}
}

8068 
	$m•ec_dump
 (
FILE
 * 
°ªam
, 
thªadid
)

8070 
i
, 
j
;

8071 
•ec_mem_ít
 *
ít
;

8073 
c⁄ãxt
 *
cuºít
;

8075 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8077 i‡(!
°ªam
)

8078 
°ªam
 = 
°dîr
;

8080 
	`Ârötf
 (
°ªam
, "Thªad %d, ** s≥cuœtivêmem‹y c⁄ã¡†**\n", 
thªadid
);

8082 
	`Ârötf
 (
°ªam
, "•ec_mode: %s\n", 
cuºít
->
•ec_mode
 ? "t" : "f");

8084 
j
 = 0; j < 
numc⁄ãxts
; j++)

8086 
	`Ârötf
 (
°ªam
, "thªad %d : \n", 
j
);

8087 
i
 = 0; i < 
STORE_HASH_SIZE
; i++)

8090 
ít
 = 
thec⁄ãxts
[
j
]->
°‹e_hèbÀ
[
i
];É¡;É¡ =É¡->
√xt
)

8092 
	`myÂrötf
 (
°ªam
, "[0x%08p]: %12.0f/0x%08x:%08x\n", 
ít
->
addr
, (Ë(*((*Ëít->
d©a
)), *((*) &ent->data[0]), *(((*) &ent->data[0]) + 1));

8096 
	}
}

8100 
	$simoo_mem_obj
 (
mem_t
 *
mem
,

8101 
is_wrôe
,

8102 
md_addr_t
 
addr
,

8103 *
p
,

8104 
nbyãs
)

8106 
mem_cmd
 
cmd
;

8108 
thªadid
 = 
mem
->threadid;

8109 
c⁄ãxt
 *
cuºít
;

8111 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8113 i‡(!
is_wrôe
)

8114 
cmd
 = 
Ród
;

8116 
cmd
 = 
Wrôe
;

8119 *
îr°r
;

8121 
îr°r
 = 
	`mem_vÆid
 (
cmd
, 
addr
, 
nbyãs
, 
FALSE
);

8122 i‡(
îr°r
)

8123  
îr°r
;

8127 i‡(
cuºít
->
•ec_mode
)

8128 
	`•ec_mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
);

8130 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadid
);

8133  
NULL
;

8134 
	}
}

8140 
	$ÊushWrôeBuf„r
 (
thªadid
)

8142 
ödex
;

8143 
wb_mem_ít
 *
ít
, *
¥ev
;

8144 
nbyãs
;

8145 
byã_t
 *
p
, *
q
;

8146 
md_addr_t
 
addr
;

8147 
ii
;

8149 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8151 
ít
 = 
cuºít
->
WBèbÀTaû
;É¡ !
NULL
;É¡ =É¡->
¥ev
)

8153 
p
 = 
ít
->
d©a
;

8154 
nbyãs
 = 
ít
->nbytes;

8155 
addr
 = 
ít
->addr;

8157 #i‡!
WATER_NSQUARED


8158 i‡(!
ít
->
wrôeAÃódyD⁄e
)

8160 
nbyãs
-- > 0)

8162 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

8163 
p
 + (
byã_t
);

8164 
addr
 + (
byã_t
);

8168 
ít
->
wrôeAÃódyD⁄e
 = 1;

8171 
	}
}

8175 
	$com∂ëeSt‹e
 (
thªadid
, 
md_addr_t
 
addr
, 
width
, 
isFaû
)

8178 
byã_t
 *
p
, *
q
;

8179 
c⁄ãxt
 *
cuºít
;

8180 
wb_mem_ít
 *
ít
, *
¥ev
;

8183 
nbyãs
;

8184 
md_›code
 
›
;

8185 
md_addr_t
 
ö°
;

8186 
do_wrôe
 = 1;

8187 
jj
;

8188 
ac˚s£d
;

8190 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8191 
ít
 = 
cuºít
->
WBèbÀTaû
;

8193 i‡((
width
 & (width - 1)Ë!0 || (
addr
 & (width - 1)) != 0)

8196 
p
 = 
ít
->
d©a
;

8197 
nbyãs
 = 
ít
->nbytes;

8198 i‡(
addr
 !
ít
->addr)

8199 
	`¥ötf
("ít->add∏%Œd\n", 
ít
->
addr
);

8200 i‡(
addr
 !
ít
->addr)

8201 
	`∑nic
 ("write buffer miss-alignment\n");

8203 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

8204 
ö°
 = 
ít
->
ö°r
;

8206 
p
 = 
ít
->
d©a
;

8207 
nbyãs
 = 
ít
->nbytes;

8210 i‡(
›
 != 35)

8212 #i‡!
WATER_NSQUARED


8213 i‡(!
ít
->
wrôeAÃódyD⁄e
)

8215 
nbyãs
-- > 0)

8217 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

8218 
p
 + (
byã_t
);

8219 
addr
 + (
byã_t
);

8226 #i‡
WATER_NSQUARED


8227 
cuºít
->
waôF‹STLC
 = 0;

8229 i‡(!
isFaû
 && (
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 !0Ë&& (comm⁄_ªgs_s[cuºít->ma°îid][cuºít->a˘uÆid].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
)))

8231 
do_wrôe
 = 1;

8233 
jj
 = 0; jj < 
THREADS_PER_JOB
; jj++)

8235 i‡(
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 =
	`GPR
 (
RB
Ë+ 
	`SEXT
 (
OFS
))

8237 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
ªgs_lock
 = 0;

8238 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
jj
].
addªss
 = 0;

8241 i‡(!
ít
->
wrôeAÃódyD⁄e
)

8244 
nbyãs
-- > 0)

8246 
	`MEM_WRITE_BYTE
 (
cuºít
->
mem
, 
addr
, *((
byã_t
 *Ë
p
));

8247 
p
 + (
byã_t
);

8248 
addr
 + (
byã_t
);

8251 
°‹eC⁄dFaû
 = 0;

8255 
cuºít
->
ªgs
.
ªgs_R
[((
ö°
 >> 21) & 0x1f)] = 0;

8256 
do_wrôe
 = 0;

8257 
°‹eC⁄dFaû
 = 1;

8259 
cuºít
->
waôF‹STLC
 = 0;

8262 
ac˚s£d
 = 
ít
->accessed;

8263 
cuºít
->
numOfWBE¡ry
--;

8264 i‡((
ít
->
¥ev
 =
NULL
Ë&& (ít->
√xt
 == NULL))

8266 
cuºít
->
WBèbÀTaû
 = 
NULL
;

8267 
cuºít
->
WBèbÀHód
 = 
NULL
;

8268 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

8269 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

8271 i‡(
ít
->
√xt
 =
NULL
)

8273 
cuºít
->
WBèbÀTaû
 = 
ít
->
¥ev
;

8274 
ít
->
¥ev
->
√xt
 = 
NULL
;

8275 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

8276 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

8279 i‡(
ít
->
¥ev
 =
NULL
)

8281 
cuºít
->
WBèbÀHód
 = 
ít
->
√xt
;

8282 
ít
->
√xt
->
¥ev
 = 
NULL
;

8283 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

8284 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

8288 
ít
->
¥ev
->
√xt
 =Ént->next;

8289 
ít
->
√xt
->
¥ev
 =Ént->prev;

8290 
ít
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

8291 
cuºít
->
WBbuckë_‰ì_li°
 = 
ít
;

8293 
	}
}

8298 
	$commôWrôe
 (
md_addr_t
 
addr
, 
thªadID
, 
cou¡î_t
 
com∂ëeCy˛e
, 
√edBusAc˚ss
, 
ac˚s£d
)

8300 
ödex
;

8301 
wb_mem_ít
 *
ít
;

8302 
c⁄ãxt
 *
cuºít
;

8303 
md_›code
 
›
;

8304 
œt
 = 0;

8305 
p‹t_œt
 = 0, 
now_œt
 = 0, 
p‹t_now
 = 0;

8308 
cuºít
 = 
thec⁄ãxts
[
thªadID
];

8309 i‡(!
COHERENT_CACHE
)

8311 
	`¥ötf
 ("This isÇot TRUE forÇon-coherent cache\n");

8312 
	`exô
 (0);

8314 
ödex
 = 0;

8315 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

8317 i‡(
ít
->
addr
 =add∏&& !ít->
com∂ëeCy˛e
)

8319 
	`MD_SET_OPCODE
 (
›
, 
ít
->
ö°r
);

8320 i‡(
›
 == 35)

8322 
ít
->
com∂ëeCy˛e
 = 
sim_cy˛e
 + 
œt
;

8323 
ít
->
√edBusAc˚ss
 = 1;

8324 
ít
->
ac˚s£d
 =áccessed;

8328 
ít
->
com∂ëeCy˛e
 = completeCycle;

8329 
ít
->
√edBusAc˚ss
 =ÇeedBusAccess;

8330 
ít
->
ac˚s£d
 =áccessed;

8335 
	}
}

8339 #i‡
PROCESS_MODEL


8341 
	$checkF‹Sh¨edAddr
 (
addr
)

8343 
sh¨edAddªssLi°_s
 *
tmpPå
;

8345 
ödx
 = (Ë(((Ë
addr
 & 1016) >> 3);

8347 
ödx
 = 0;

8348 
tmpPå
 = 
sh¨edAddªssLi°
[
ödx
];

8349 i‡((
addr
 >
La°Sh¨edAddªss
Ë&& (add∏< (La°Sh¨edAddªs†+ 
La°Sh¨edSize
)))

8353 
tmpPå
 !
NULL
)

8355 i‡((
addr
 >
tmpPå
->
addªss
Ë&& (add∏< (tmpPå->addªs†+ÅmpPå->
size
)))

8357 
La°Sh¨edAddªss
 = 
tmpPå
->
addªss
;

8358 
La°Sh¨edSize
 = 
tmpPå
->
size
;

8361 
tmpPå
 =ÅmpPå->
√xt
;

8364 
	}
}

8367 
md_Áu…_ty≥


8368 
	$WB_ac˚ss1
 (
mem_t
 *
mem
, 
mem_cmd
 
cmd
, 
md_addr_t
 
addr
, *
p
, 
nbyãs
, 
thªadID
, md_addr_à
ö°r
)

8370 
md_›code
 
›
;

8371 
md_Áu…_ty≥
 
ªtu∫_ty≥
;

8373 
TempIn°r
 = 
ö°r
;

8374 
	`MD_SET_OPCODE
 (
›
, 
TempIn°r
);

8376 if(!
thec⁄ãxts
[
thªadID
]->
•ec_mode


8377 && (
addr
 <
thec⁄ãxts
[0]->
ld_°ack_ba£
Ë&& (add∏>Åhec⁄ãxts[0]->ld_°ack_ba£-
numc⁄ãxts
*
STACKSIZE
Ë&& !◊dd∏<thec⁄ãxts[
thªadID
]->ld_stack_base &&áddr >Åhecontexts[threadID]->ld_stack_base-STACKSIZE))

8382 #i‡
	`deföed
(
DO_COMPLETE_FASTFWD
Ë|| deföed(
PARALLEL_EMUL
)

8383 #i‡
PROCESS_MODEL


8384 i‡(
	`checkF‹Sh¨edAddr
 ((Ë
addr
))

8386 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
thec⁄ãxts
[0]->
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

8387  
ªtu∫_ty≥
;

8390 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

8391  
ªtu∫_ty≥
;

8395 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

8397 i‡(
›
 == 35)

8399 
thec⁄ãxts
[
thªadID
]->
waôF‹STLC
 = 1;

8401 
ªtu∫_ty≥
 = 
	`mem_ac˚ss
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

8402 #i‡
WATER_NSQUARED


8403 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

8406 i‡(
ac˚ss_mem
 && 
ac˚ss_mem_id
 =
thªadID
)

8408 
	`ÊushWrôeBuf„r
 (
thªadID
);

8410  
ªtu∫_ty≥
;

8414 
ªtu∫_ty≥
 = 
	`mem_ac˚ss_dr˘
 (
mem
, 
cmd
, 
addr
, 
p
, 
nbyãs
, 
thªadID
);

8415  
ªtu∫_ty≥
;

8417 
	}
}

8421 
INLINE
 

8422 
	$ruu_lök_idï
 (
RUU_°©i⁄
 *
rs
,

8423 
idï_num
,

8424 
idï_«me
)

8426 
CV_lök
 
hód
;

8427 
RS_lök
 *
lök
;

8429 
thªadid
 = 
rs
->threadid;

8430 
c⁄ãxt
 *
cuºít
;

8432 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8434 
rs
->
¥od
[
idï_num
] = 
NULL
;

8435 
rs
->
idï_«me
[
idï_num
] = idep_name;

8437 i‡(
idï_«me
 =
NA
)

8440 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

8441 
rs
->
whí_ªady
[
idï_num
] = 0;

8442 
rs
->
whí_idï_ªady
[
idï_num
] = 
WAIT_TIME
;

8446 
hód
 = 
	`CREATE_VECTOR
 (
idï_«me
);

8449 i‡(!
hód
.
rs
 || hód.rs->
com∂ëed
)

8451 
rs
->
idï_ªady
[
idï_num
] = 
TRUE
;

8452 
rs
->
whí_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

8453 
rs
->
whí_idï_ªady
[
idï_num
] = 
sim_cy˛e
 - 1;

8456 
rs
->
idï_ªady
[
idï_num
] = 
FALSE
;

8457 
rs
->
¥od
[
idï_num
] = 
hód
.rs;

8459 
	`RSLINK_NEW
 (
lök
, 
rs
);

8460 
lök
->
x
.
›num
 = 
idï_num
;

8461 
lök
->
√xt
 = 
hód
.
rs
->
odï_li°
[hód.
odï_num
];

8462 
hód
.
rs
->
odï_li°
[hód.
odï_num
] = 
lök
;

8463 
	}
}

8466 
	$√edsWBÊush
 (
c⁄ãxt
 * 
cuºít
, 
md_›code
 
›
, 
md_addr_t
 
addr
)

8468 
nbyãs
 = 
	`GëMemAccWidth
 (
›
);

8470 i‡(
›
 =
LDQ_U
)

8471 
addr
 =áddr & ~7;

8473 
wb_mem_ít
 *
ít
;

8475 
ít
 = 
cuºít
->
WBèbÀHód
;É¡;É¡ =É¡->
√xt
)

8477 i‡(
nbyãs
 == 1)

8479 i‡(!(
ít
->
nbyãs
 ==Çbytes))

8481 i‡((
ít
->
addr
 <addrË&& (”¡->add∏+É¡->
nbyãs
) >áddr))

8487 i‡(
nbyãs
 == 2)

8489 i‡(
ít
->
nbyãs
 !=Çbytes)

8491 i‡(
ít
->
nbyãs
 <Çbytes)

8493 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

8500 i‡((
addr
 >
ít
->addrË&& (add∏< (ít->add∏+É¡->
nbyãs
)))

8507 i‡(
nbyãs
 == 4)

8509 i‡(
nbyãs
 !
ít
->nbytes)

8511 i‡(
ít
->
nbyãs
 <Çbytes)

8513 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

8520 i‡(
nbyãs
 == 8)

8522 i‡(
nbyãs
 !
ít
->nbytes)

8524 i‡((
ít
->
nbyãs
 == 1) || (ent->nbytes == 2) || (ent->nbytes == 4))

8526 i‡((
ít
->
addr
 >addrË&& (ít->add∏< (add∏+ 
nbyãs
)))

8535 
	}
}

8540 
INLINE
 

8541 
	$ruu_ö°Æl_odï
 (
RUU_°©i⁄
 *
rs
,

8542 
odï_num
,

8543 
odï_«me
)

8545 
CV_lök
 
cv
;

8547 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
rs
->
thªadid
];

8550 i‡(
odï_«me
 =
NA
)

8553 
rs
->
⁄ames
[
odï_num
] = 
NA
;

8558 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

8560 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

8563 
	`CVLINK_INIT
 (
cv
, 
rs
, 
odï_num
);

8564 
	`SET_CREATE_VECTOR
 (
odï_«me
, 
cv
);

8565 
	}
}

8569 
INLINE
 

8570 
	$ruu_ö°Æl_odï_skù
 (
RUU_°©i⁄
 *
rs
,

8571 
odï_num
,

8572 
odï_«me
)

8576 i‡(
odï_«me
 =
NA
)

8579 
rs
->
⁄ames
[
odï_num
] = 
NA
;

8584 
rs
->
⁄ames
[
odï_num
] = 
odï_«me
;

8586 
rs
->
odï_li°
[
odï_num
] = 
NULL
;

8588 
	}
}

8594 
	$simoo_ªg_obj
 (
ªgs_t
 *
xªgs
,

8595 
is_wrôe
,

8596 
md_ªg_ty≥
 
π
,

8597 
ªg
,

8598 
evÆ_vÆue_t
 *
vÆ
)

8601 
thªadid
 = 0;

8602 
c⁄ãxt
 *
cuºít
;

8604 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8606 
π
)

8608 
π_g¥
:

8609 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_IREGS
)

8612 i‡(!
is_wrôe
)

8614 
vÆ
->
ty≥
 = 
ë_uöt
;

8615 
vÆ
->
vÆue
.
as_uöt
 = 
	`GPR
 (
ªg
);

8618 
	`SET_GPR
 (
ªg
, 
	`evÆ_as_uöt
 (*
vÆ
));

8621 
π_Õr
:

8622 i‡(
ªg
 < 0 ||Ñeg >
MD_NUM_FREGS
)

8626 
	`ab‹t
 ();

8629 
π_Âr
:

8631 
	`ab‹t
 ();

8634 
π_d¥
:

8636 
	`ab‹t
 ();

8641 
π_PC
:

8642 i‡(!
is_wrôe
)

8644 
vÆ
->
ty≥
 = 
ë_addr
;

8645 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_PC
;

8648 
cuºít
->
ªgs
.
ªgs_PC
 = 
	`evÆ_as_addr
 (*
vÆ
);

8651 
π_NPC
:

8652 i‡(!
is_wrôe
)

8654 
vÆ
->
ty≥
 = 
ë_addr
;

8655 
vÆ
->
vÆue
.
as_addr
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

8658 
cuºít
->
ªgs
.
ªgs_NPC
 = 
	`evÆ_as_addr
 (*
vÆ
);

8662 
	`∑nic
 ("bogusÑegister bank");

8666  
NULL
;

8667 
	}
}

8670 
ruu_„tch
 ();

8672 
	g°ÆlCau£
[
MAXTHREADS
] = {0};

8673 
cou¡î_t
 
	gmb_cou¡
 = 0;

8681 
	$isLockIn°
(
md_addr_t
 
PC
)

8683 if(
PC
 <
LockInôPC
 && PC >= LockInitPC - 68)

8687 
	}
}

8688 
	$isB¨RñIn°
(
md_addr_t
 
PC
)

8690 if(
PC
 <
œ°_œ°_pc
 + 112 && PC >=Üast_last_pc - 844)

8694 
	}
}

8697 
	$ruu_di•©ch
 (
thªadid
)

8699 
i
;

8700 
ãmp˛
;

8701 
ãmµc
 = 0;

8702 
mm
, 
k
;

8703 
f‹˚_b™k
;

8704 
¶Ÿ
;

8706 
n_di•©ched
;

8707 
md_ö°_t
 
ö°
;

8708 
md_›code
 
›
;

8709 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

8710 
md_addr_t
 
èrgë_PC
 = 0;

8711 
md_addr_t
 
addr
 = 0;

8712 
RUU_°©i⁄
 *
rs
;

8713 
RUU_°©i⁄
 *
lsq
;

8716 
RUU_°©i⁄
 *
rs_dup
;

8717 
b¥ed_upd©e_t
 *
dú_upd©e_±r
;

8718 
°ack_ªcovî_idx
;

8719 
p£q
;

8720 
is_wrôe
 = 
FALSE
;

8721 
made_check
;

8722 
br_èkí
, 
br_¥ed_èkí
;

8723 
byã_t
 
ãmp_byã
;

8724 
hÆf_t
 
ãmp_hÆf
;

8725 
w‹d_t
 
ãmp_w‹d
;

8727 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

8728 
qw‹d_t
 
ãmp_qw‹d
 = 0;

8730 
qw‹d_t
 
ªgVÆ
;

8731 
hÆf_t
 
ushLdFœg
;

8733 
ªgs_t
 
ãmpReg
;

8736 
ªgs_t
 
ãmpRegPªv
;

8738 
md_Áu…_ty≥
 
Áu…
;

8740 
so·_îr‹
, 
ãmp_„tch_num
;

8743 
qw‹d_t
 
vÆ_ø
 = 0, 
vÆ_rb
 = 0, 
vÆ_rc
 = 0, 
vÆ_ø_ªsu…
 = 0;

8744 
	`c›y_to
 ();

8745 
	`b™k_lookup
 (
md_addr_t
, , );

8747 
c⁄ãxt
 *
cuºít
;

8748 
„tch_time
 = 0;

8750 
£c⁄d_run
 = 
TRUE
, 
no_d•_˛s
;

8752 
ö_LSQ
 = 0;

8753 
lsq_fuŒ
 = 0;

8755 
∑ª¡ID
;

8757 
ªsour˚_√ed
[4];

8759 
ªsour˚_√ed
[0] = 1;

8760 
ªsour˚_√ed
[1] = 1;

8761 
ªsour˚_√ed
[2] = 3;

8762 
ªsour˚_√ed
[3] = 3;

8764 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

8766 
n_di•©ched
 = 0;

8767 
ãmp_„tch_num
 = 
cuºít
->
„tch_num
;

8769 
cuºít
->
„tch_ªdúe˘ed
 = 
FALSE
;

8770 
°ÆlCau£
[
thªadid
] = 0;

8771 
lsq_miss_°Æl
 = 0;

8773 i‡(
ãmp_„tch_num
 != 0)

8775 
made_check
 = 
FALSE
;

8776 
ãmp˛
 = 
a˘uÆ_˛u°îs
;

8779 
n_di•©ched
 < (
ruu_decode_width
 * 
„tch_•ìd
)

8780 && 
cuºít
->
LSQ_num
 < 
LSQ_size
 && cuºít->
m_shLQNum
 < 
m_shLQSize


8781 && (
cuºít
->
m_shSQNum
 + 
m_L1WBufC¡
[
thªadid
]Ë< 
m_shSQSize


8782 && (
cuºít
->
RUU_num
 < 
RUU_size
)

8783 && 
ãmp_„tch_num
 != 0

8784 && (
ruu_ö˛ude_•ec
 || !
cuºít
->
•ec_mode
)

8788 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8789 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

8791 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

8792 
ö_LSQ
 = 1;

8794 
ö_LSQ
 = 0;

8796 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

8798 
ªsour˚_√ed
[0] = 0;

8799 
ªsour˚_√ed
[1] = 1;

8800 
ªsour˚_√ed
[2] = 0;

8801 
ªsour˚_√ed
[3] = 3;

8805 
ªsour˚_√ed
[0] = 1;

8806 
ªsour˚_√ed
[1] = 0;

8807 
ªsour˚_√ed
[2] = 3;

8808 
ªsour˚_√ed
[3] = 1;

8811 i‡(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesour˚_√ed[1])Ë&& (
úegfûe_˛
[thªadid] <((
IPREG_size
Ë-Ñesour˚_√ed[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8813 if(!((
iissueq_˛
[
thªadid
] <(
IIQ_size
 - 
ªsour˚_√ed
[0])Ë&& (
fissueq_˛
[thªadid] <(
FIQ_size
 -Ñesource_need[1]))))

8814 
°ÆlCau£
[
thªadid
] = 
SèŒIssueFuŒ
;

8815 if(!((
úegfûe_˛
[
thªadid
] <((
IPREG_size
Ë- 
ªsour˚_√ed
[2])Ë&& (
‰egfûe_˛
[thªadid] <((
FPREG_size
) -Ñesource_need[3]))))

8816 
°ÆlCau£
[
thªadid
] = 
SèŒRegFuŒ
;

8820 i‡((
thec⁄ãxts
[
thªadid
]->
waôF‹BønchResﬁve
 =1Ë|| (thec⁄ãxts[thªadid]->
waôF‹STLC
))

8822 
°ÆlCau£
[
thªadid
] = 
SèŒSTLC
;

8831 #i‡
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

8832 i‡(
busSlŸCou¡
 < 11)

8834 
°ÆlNoBusSlŸ
++;

8839 i‡(
cﬁÀ˘SètSt›
[
cuºít
->
id
])

8844 
j
, 
boﬁ
 = 0, 
tmp
, 
Œ_sc
 = 0;

8845 
c⁄ãxt
 *
tmpCxt
;

8846 
md_addr_t
 
mask
;

8848 
mask
 = ~
ˇche_dl1
[
cuºít
->
id
]->
blk_mask
;

8851 
ö°
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
IR
;

8852 
dú_upd©e_±r
 = &(
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
dú_upd©e
);

8853 
°ack_ªcovî_idx
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->stack_recover_idx;

8854 
p£q
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
±ø˚_£q
;

8855 
„tch_time
 = 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->fetch_time;

8857 
cuºít
->
„tch_d©a
[cuºít->
„tch_hód
]->
is_dup
 = 
TRUE
;

8858 if(
m_upd©e_miss_Êag
[
thªadid
])

8860 
m_upd©e_miss_Êag
[
thªadid
] = 0;

8861 if(
m_upd©e_miss_dïíd_°¨t
[
thªadid
])

8862 
Upd©eDïídCy˛e
 +(
sim_cy˛e
 - 
m_upd©e_miss_dïíd_°¨t
[
thªadid
]);

8863 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 0;

8867 i‡(
›
 =
STL_C
)

8870 
Œ_sc
++;

8874 i‡(
›
 =
LDL_L
)

8876 
Œ_sc
++;

8878 if(
	`MD_OP_FLAGS
(
›
Ë& 
F_FENCE
)

8879 
mb_cou¡
++;

8882 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_TRAP
)

8890 
	#OSF_SYS_gëthªadid
 162

	)

8891 
	#OSF_SYS_STATS
 174

	)

8892 
	#OSF_SYS_BARRIER_STATS
 175

	)

8893 
	#OSF_SYS_LOCK_STATS
 176

	)

8894 
	#OSF_SYS_BARRIER_INSTR
 177

	)

8895 
qw‹d_t
 
syscode
 = 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_V0
];

8896 if(
cuºít
->
•ec_mode


8897 || !(
syscode
 =
OSF_SYS_gëthªadid
 || syscodê=
OSF_SYS_STATS
 || syscodê=
OSF_SYS_BARRIER_INSTR
 ))

8899 i‡(
cuºít
->
RUU_num
 != 0)

8901 
°ÆlCau£
[
thªadid
] = 
SèŒTøp
;

8906 i‡(
cuºít
->
•ec_mode
)

8907 
	`∑nic
 ("drainedánd speculative");

8910 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->regs_PC;

8911 
cuºít
->
¥ed_PC
 = cuºít->
„tch_d©a
[cuºít->
„tch_hód
]->pred_PC;

8912 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

8915 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

8916 
cuºít
->
•ec_ªgs_R
[
MD_REG_ZERO
] = 0;

8917 #ifde‡
TARGET_ALPHA


8918 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8919 
cuºít
->
•ec_ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

8923 
addr
 = 0;

8924 
is_wrôe
 = 
FALSE
;

8927 #i‡
	`deföed
(
TARGET_PISA
)

8928 
vÆ_ø
 = 
	`GPR
 (
RS
);

8929 
vÆ_rb
 = 
	`GPR
 (
RT
);

8930 #ñi‡
	`deföed
(
TARGET_ALPHA
)

8934 
Áu…
 = 
md_Áu…_n⁄e
;

8935 
so·_îr‹
 = 
FALSE
;

8938 
ãmpRegPªv
 = 
cuºít
->
ªgs
;

8941 
ushLdFœg
 = 0;

8943 
›
)

8945 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
CLASS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

8946 
OP
: \

8948 
ö1
 = 
I1
; 
ö2
 = 
I2
; 
ö3
 = 
I3
; \

8949 
out1
 = 
O1
; 
out2
 = 
O2
; \

8950 if(
ö1
 < 32Ë
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in1]; \

8951 
vÆ_ø
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö1
 - 32]; \

8952 if(
ö2
 < 32Ë
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - in2]; \

8953 
vÆ_rb
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
ö2
 - 32]; \

8954 if(
out1
 < 32Ë
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - out1]; \

8955 
ªgVÆ
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32]; \

8957 if(
£c⁄d_run
Ë
	`SYMCAT
(
OP
,
_IMPL
); \

8959 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

8960 
OP
: \

8962 
›
 = 
MD_NOP_OP
; \

8964 
out1
 = 
NA
; 
out2
 = NA; \

8965 
ö1
 = 
NA
; 
ö2
 = NA; 
ö3
 = NA; \

8968 
	#CONNECT
(
OP
Ë

	)

8975 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

8977 i‡(!
cuºít
->
•ec_mode
 ) \

8978 
Áu…
 = (
FAULT
); \

8983 
	#THREADID
 (
cuºít
->
id
)

	)

8984 
	~"machöe.def
"

8987 
›
 = 
MD_NOP_OP
;

8989 
out1
 = 
NA
;

8990 
out2
 = 
NA
;

8991 
ö1
 = 
NA
;

8992 
ö2
 = 
NA
;

8993 
ö3
 = 
NA
;

8996 i‡(!
cuºít
->
•ec_mode
)

8998 if(!(
cﬁÀ˘_lock_°©s
[
thªadid
] | 
cﬁÀ˘_b¨rõr_°©s
[threadid]))

8999 
puª_num_ö¢
++;

9000 
tŸÆ_num_ö¢
++;

9001 
sim_num_ö¢
++;

9004 #ifde‡
CPU_TRACE


9005 
FILE
 *
fCpuTø˚
;

9006 
fCpuTø˚
=
	`f›í
(
˝u_åa˚
,"at+");

9007 
	`Ârötf
(
fCpuTø˚
,"%d di•©ch %Œd\n",
cuºít
->
id
,
sim_cy˛e
);

9008 
	`f˛o£
(
fCpuTø˚
);

9012 
cuºít
->
sim_num_ö¢
++;

9015 i‡(
Áu…
 !
md_Áu…_n⁄e
)

9017 
	`Ârötf
 (
°dîr
, "sim_cy˛ê%ld\¿sim_ö¢ %ld,Åhrdid %d,Ö¯%lx, Next_p¯%lx\n", (Ë
sim_cy˛e
, (Ë
cuºít
->
sim_num_ö¢
, cuºít->
id
, (Ëcuºít->
ªgs
.
ªgs_PC
,

9018 (Ë
cuºít
->
ªgs
.
ªgs_PC
);

9019 
	`Ârötf
 (
°dîr
, "„tchÖ¯ %lx,„tch Next_p¯ %lx\n", (Ë
cuºít
->
„tch_ªgs_PC
, (Ëcuºít->
„tch_¥ed_PC
);

9020 
	`Áèl
 ("Thªad %d,Ç⁄-•ecuœtivêÁu… (%dËdëe˘ed @ %lx", 
thªadid
, 
Áu…
, (Ë
cuºít
->
ªgs
.
ªgs_PC
);

9024 #i‡
	`deföed
(
TARGET_PISA
)

9025 
vÆ_rc
 = 
	`GPR
 (
RD
);

9026 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RS
);

9027 #ñi‡
	`deföed
(
TARGET_ALPHA
)

9028 i‡(
out1
 < 32)

9029 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_R
[31 - 
out1
];

9031 
vÆ_rc
 = 
cuºít
->
ªgs
.
ªgs_F
.
q
[
out1
 - 32];

9032 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_LOAD
)Ë&& 
	`isFPMemAcc
 (op))

9033 
vÆ_ø_ªsu…
 = 
	`FPR_Q
 (
RA
);

9035 
vÆ_ø_ªsu…
 = 
	`GPR
 (
RA
);

9038 
ãmpReg
 = 
cuºít
->
ªgs
;

9041 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
))

9043 
sim_tŸÆ_ªfs
++;

9044 i‡(!
cuºít
->
•ec_mode
)

9045 
sim_num_ªfs
++;

9047 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

9048 
is_wrôe
 = 
TRUE
;

9051 
sim_tŸÆ_lﬂds
++;

9052 i‡(!
cuºít
->
•ec_mode
)

9053 
sim_num_lﬂds
++;

9057 
br_èkí
 = (
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
)));

9058 
br_¥ed_èkí
 = (
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +  (
md_ö°_t
)));

9061 i‡(
›
 !
MD_NOP_OP
)

9082 
DUPLICATION_ac˚ss
[
thªadid
]++;

9083 
du∂iˇti⁄_ac˚ss
++;

9085 
rs
 = &
cuºít
->
RUU
[cuºít->
RUU_èû
];

9087 #ifde‡
HOTLEAKAGE


9088 
rs
->
¶ù
 = 
sim_cy˛e
 - 1;

9090 if(!
ruu_ö‹dî_issue
)

9092 
ª«me_ac˚ss
++;

9093 
cuºít
->
ª«me_ac˚ss
++;

9096 
rs
->
thªadid
 =Åhreadid;

9097 
rs
->
IR
 = 
ö°
;

9098 
rs
->
›
 = op;

9099 
rs
->
ö°num
 = ++
ö°£qnum
;

9100 
rs
->
isSyncIn°
 = (rs->
›
 =
LDL_L
 ||Ñs->› =
STL_C
);

9101 
rs
->
isSyncIn°B¨
 = (
cﬁÀ˘_b¨rõr_°©s
[
thªadid
]);

9102 
rs
->
isSyncIn°B¨Rñ
 = (
cﬁÀ˘_b¨rõr_ªÀa£
 && 
	`isB¨RñIn°
(
cuºít
->
ªgs
.
ªgs_PC
));

9107 if(
cuºít
->
ªgs
.
ªgs_PC
 >100000 && 
thªadid
 == 15)

9109 
œ°_œ°_pc
 = 
œ°_pc
;

9110 
œ°_pc
 = 
cuºít
->
ªgs
.
ªgs_PC
;

9113 
rs
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

9114 
rs
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

9115 
rs
->
¥ed_PC
 = 
cuºít
->pred_PC;

9116 
rs
->
ö_LSQ
 = 
FALSE
;

9117 
rs
->
ó_comp
 = 
FALSE
;

9118 
rs
->
ab™k
 = -1;

9119 
rs
->
pb™k
 = -1;

9120 
rs
->
ªcovî_ö°
 = 
FALSE
;

9121 
rs
->
dú_upd©e
 = *
dú_upd©e_±r
;

9122 
rs
->
°ack_ªcovî_idx
 = stack_recover_idx;

9123 
rs
->
•ec_mode
 = 
cuºít
->spec_mode;

9124 
rs
->
„tch_time
 = fetch_time;

9125 
rs
->
di•_time
 = 
sim_cy˛e
;

9126 
rs
->
föish_time
 = 0;

9127 
rs
->
ˇche_ªady
 = 0;

9128 
rs
->
ö_qwaô
 = 0;

9129 
rs
->
issue_time
 = 0;

9130 
rs
->
addr
 = 0;

9131 
rs
->
di°issue
 = 0;

9132 
rs
->
lsqE¡ry
 = 0;

9133 
rs
->
miss_Êag
 = 0;

9135 
rs
->
£q
 = ++(
cuºít
->
ö°_£q
);

9136 
rs
->
queued
 =Ñs->
issued
 =Ñs->
com∂ëed
 = 
FALSE
;

9137 
rs
->
±ø˚_£q
 = 
p£q
;

9138 
rs
->
cou¡ed_iissueq
 = 0;

9139 
rs
->
cou¡ed_fissueq
 = 0;

9140 
rs
->
övÆid©i⁄Re˚ived
 = 0;

9141 
rs
->
du∂iˇã
 = (1 - 
£c⁄d_run
);

9143 
rs
->
¥evRegVÆ
 = 
ªgVÆ
;

9145 
rs
->
backupReg
 = 
ãmpRegPªv
;

9146 
rs
->
wrôewaô
 = 0;

9147 
rs
->
RódSh¨eDú
 = 0;

9148 
rs
->
wrôemiss
 = 0;

9149 
rs
->
STL_C_Áû
 = 0;

9150 i‡(!
£c⁄d_run
)

9151 
rs
->
•ec_mode
 = 0;

9152 
rs
->
Áu…ög_ö°r
 = 
FALSE
;

9154 #ifde‡
PWR_WAKE


9155 
rs
->
cou¡ed_úódy
 = 0;

9156 
rs
->
cou¡ed_‰ódy
 = 0;

9157 
rs
->
cou¡ed_lsqªady
 = 0;

9160 
rs
->
‰ìd
 = 0;

9161 
rs
->
vÆ_ø
 = val_ra;

9162 
rs
->
vÆ_rb
 = val_rb;

9163 
rs
->
vÆ_rc
 = val_rc;

9164 
rs
->
vÆ_ø_ªsu…
 = val_ra_result;

9165 
rs
->
whí_ªady
[0] = 
WAIT_TIME
;

9166 
rs
->
whí_ªady
[1] = 
WAIT_TIME
;

9167 
rs
->
whí_ªady
[2] = 
WAIT_TIME
;

9168 
rs
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

9169 
rs
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

9170 
rs
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

9171 
rs
->
idï_«me
[0] = 0;

9172 
rs
->
idï_«me
[1] = 0;

9173 
rs
->
idï_«me
[2] = 0;

9174 
rs
->
isL1Miss
 = 0;

9176 
rs
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

9177 
rs
->
outReg
 = 
out1
;

9179 
rs
->
¥evReg
 = 
ãmpReg
;

9181 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& !
£c⁄d_run
)

9182 
rs
->
›
 = 
MD_AGEN_OP
;

9185 i‡((
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
Ë&& 
£c⁄d_run
)

9187 
lsq
 = &
cuºít
->
LSQ
[cuºít->
LSQ_èû
];

9188 #ifde‡
HOTLEAKAGE


9189 
lsq
->
¶ù
 = 
sim_cy˛e
 - 1;

9191 
rs
->
›
 = 
MD_AGEN_OP
;

9192 
rs
->
ó_comp
 = 
TRUE
;

9197 
lsq
->
sqSt‹eF‹w¨dT
 = -1;

9201 
lsq
->
ushFœg
 = 
ushLdFœg
;

9204 
lsq
->
thªadid
 =Åhreadid;

9205 
lsq
->
IR
 = 
ö°
;

9206 
lsq
->
›
 = op;

9207 
lsq
->
ö°num
 = 
ö°£qnum
;

9208 
lsq
->
isSyncIn°
 = (lsq->
›
 =
LDL_L
 ||Üsq->› =
STL_C
);

9209 
lsq
->
isSyncIn°B¨
 = (
cﬁÀ˘_b¨rõr_°©s
[
thªadid
]);

9210 
lsq
->
isSyncIn°B¨Rñ
 = (
cﬁÀ˘_b¨rõr_ªÀa£
 && 
	`isB¨RñIn°
(
cuºít
->
ªgs
.
ªgs_PC
));

9211 
lsq
->
STL_C_Áû
 = 0;

9213 
lsq
->
PC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

9214 
lsq
->
√xt_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

9215 
lsq
->
¥ed_PC
 = 
cuºít
->pred_PC;

9216 
lsq
->
ö_LSQ
 = 
TRUE
;

9217 
lsq
->
ó_comp
 = 
FALSE
;

9218 
lsq
->
ö_qwaô
 = 0;

9219 
lsq
->
di°issue
 = 0;

9220 
lsq
->
‰ìd
 = 0;

9221 
lsq
->
ab™k
 = -1;

9222 
lsq
->
pb™k
 = -1;

9224 
lsq
->
ªcovî_ö°
 = 
FALSE
;

9225 
lsq
->
dú_upd©e
.
pdú1
 =Üsq->dú_upd©e.
pdú2
 = 
NULL
;

9226 
lsq
->
dú_upd©e
.
pmëa
 = 
NULL
;

9227 
lsq
->
°ack_ªcovî_idx
 = 0;

9228 
lsq
->
•ec_mode
 = 
cuºít
->spec_mode;

9229 
lsq
->
„tch_time
 = fetch_time;

9230 
lsq
->
di•_time
 = 
sim_cy˛e
;

9231 
lsq
->
föish_time
 = 0;

9232 
lsq
->
ˇche_ªady
 = 0;

9233 
lsq
->
issue_time
 = 0;

9234 
lsq
->
cou¡ed_iissueq
 = 0;

9235 
lsq
->
cou¡ed_fissueq
 = 0;

9236 
lsq
->
miss_Êag
 = 0;

9238 
lsq
->
övÆid©i⁄Re˚ived
 = 0;

9239 #ifde‡
PWR_WAKE


9240 
lsq
->
cou¡ed_úódy
 = 0;

9241 
lsq
->
cou¡ed_‰ódy
 = 0;

9242 
lsq
->
cou¡ed_lsqªady
 = 0;

9244 
mm
 = 0; mm < 
CLUSTERS
; mm++)

9246 
lsq
->
°_ªach
[
mm
] = 0;

9249 
lsq
->
backupReg
 = 
ãmpRegPªv
;

9250 
lsq
->
addr
 =áddr;

9251 
rs
->
addr
 =áddr;

9253 
rs
->
ab™k
 = 
lsq
->abank;

9254 i‡(!
BANKPRED
)

9256 
rs
->
pb™k
 =Ñs->
ab™k
;

9257 
lsq
->
pb™k
 =Üsq->
ab™k
;

9259 
rs
->
ab™k
 =Ñs->ab™k % 
CLUSTERS
;

9260 
lsq
->
ab™k
 = 
rs
->abank;

9261 
rs
->
pb™k
 =Ñs->pb™k % 
CLUSTERS
;

9262 
lsq
->
pb™k
 = 
rs
->pbank;

9263 i‡(!
lsq
->
•ec_mode


9266 i‡(
lsq
->
ab™k
 =lsq->
pb™k
)

9267 
ac_b™k_¥ed_c‹r
++;

9269 
ac_b™k_¥ed_wr⁄g
++;

9271 
lsq
->
£q
 = ++(
cuºít
->
ö°_£q
);

9272 
lsq
->
±ø˚_£q
 =Ötrace_seq++;

9273 
lsq
->
vÆ_ø
 = val_ra;

9274 
lsq
->
vÆ_rb
 = val_rb;

9275 
lsq
->
vÆ_rc
 = val_rc;

9276 
lsq
->
vÆ_ø_ªsu…
 = val_ra_result;

9277 
	`±ø˚_√wu›
 (
lsq
->
±ø˚_£q
, "öã∫ÆÜd/°",Üsq->
PC
, 0);

9278 
	`±ø˚_√w°age
 (
lsq
->
±ø˚_£q
, 
PST_DISPATCH
, 0);

9279 
lsq
->
queued
 =Üsq->
issued
 =Üsq->
com∂ëed
 = 
FALSE
;

9281 
lsq
->
whí_ªady
[0] = 
WAIT_TIME
;

9282 
lsq
->
whí_ªady
[1] = 
WAIT_TIME
;

9283 
lsq
->
whí_ªady
[2] = 
WAIT_TIME
;

9284 
lsq
->
whí_idï_ªady
[0] = 
WAIT_TIME
;

9285 
lsq
->
whí_idï_ªady
[1] = 
WAIT_TIME
;

9286 
lsq
->
whí_idï_ªady
[2] = 
WAIT_TIME
;

9287 
lsq
->
idï_«me
[0] = 0;

9288 
lsq
->
idï_«me
[1] = 0;

9289 
lsq
->
idï_«me
[2] = 0;

9292 
lsq
->
sim_num_ö¢
 = 
cuºít
->sim_num_insn;

9293 
lsq
->
outReg
 = 
out1
;

9296 
lsq
->
robE¡ry
 = 
rs
->
ödex
;

9297 
rs
->
lsqE¡ry
 = 
lsq
->
ödex
;

9298 
lsq
->
isPª„tch
 = 0;

9299 
lsq
->
isL1Miss
 = 0;

9301 
rs
->
ùªg
[0] = 0;

9302 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

9303 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

9305 
rs
->
˛u°î
 = 
lsq
->˛u°î = 
thªadid
;

9306 
cuºít
->
iissueq_thrd
++;

9307 
iissueq
++;

9308 
iissueq_˛
[
rs
->
thªadid
]++;

9310 #ifde‡ 
PWR_CLUSTER


9311 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

9314 
lsq
->
cou¡ed_iissueq
 = 1;

9316 
lsq
->
pb™k
 =Üsq->
˛u°î
;

9317 
rs
->
pb™k
 =Ñs->
˛u°î
;

9319 
rs
->
whí_öq
 = 
sim_cy˛e
;

9320 
lsq
->
whí_öq
 = 
rs
->when_inq;

9322 
lsq
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

9323 
lsq
->
ùªg
[1] = 0;

9324 
lsq
->
ùªg
[2] = 0;

9326 
lsq
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

9327 
lsq
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

9332 
	`ruu_lök_idï
 (
rs
, 0, 
NA
);

9333 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

9334 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

9336 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
DTMP
);

9337 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
NA
);

9339 
rs
->
out1
 = 
DTMP
;

9340 
rs
->
›ªg
 = 0;

9341 
rs
->
ﬁd¥eg
 = 0;

9343 
	`ruu_lök_idï
 (
lsq
, 
STORE_OP_INDEX
, 
ö1
);

9344 
	`ruu_lök_idï
 (
lsq
, 
STORE_ADDR_INDEX
, 
DTMP
);

9345 
	`ruu_lök_idï
 (
lsq
, 2, 
NA
);

9347 
	`ruu_ö°Æl_odï
 (
lsq
, 0, 
out1
);

9348 
	`ruu_ö°Æl_odï
 (
lsq
, 1, 
out2
);

9349 
lsq
->
out1
 = out1;

9351 
n_di•©ched
++;

9353 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

9354 
cuºít
->
RUU_num
++;

9355 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 1Ë% 
LSQ_size
;

9356 
cuºít
->
LSQ_num
++;

9358 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

9361 i‡(
out1
 != 0 && out1 != 63)

9362 
cuºít
->
m_shLQNum
++;

9364 
lsq
->
isPª„tch
 = 1;

9367 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

9369 
cuºít
->
m_shSQNum
++;

9372 
lsq_ac˚ss
++;

9373 
cuºít
->
lsq_ac˚ss
++;

9374 
lsq_¥eg_ac˚ss
++;

9375 
cuºít
->
lsq_¥eg_ac˚ss
++;

9379 if(!
ruu_ö‹dî_issue
)

9381 
rob2_ac˚ss
++;

9382 
cuºít
->
rob2_ac˚ss
++;

9385 i‡(
	`OPERANDS_READY
 (
rs
))

9387 
n_ªady
++;

9388 
	`ªadyq_íqueue
 (
rs
);

9390 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
lsq
);

9392 i‡(((
	`MD_OP_FLAGS
 (
›
Ë& (
F_MEM
 | 
F_STORE
)Ë=(F_MEM | F_STORE)Ë&& 
	`OPERANDS_READY
 (
lsq
))

9394 
lsq_°‹e_d©a_ac˚ss
++;

9395 
	`ªadyq_íqueue
 (
lsq
);

9398 i‡(
›
 =
STL_C
 || o∞=
LDL_L
)

9407 
rs
->
ùªg
[0] = 
cuºít
->
…›m≠
[
ö1
];

9408 
rs
->
ùªg
[1] = 
cuºít
->
…›m≠
[
ö2
];

9409 
rs
->
ùªg
[2] = 
cuºít
->
…›m≠
[
ö3
];

9411 
rs
->
ﬁd¥eg
 = 
cuºít
->
…›m≠
[
out1
];

9412 
rs
->
›ªg
 = 
	`gë_‰ì_ªg
 (
out1
, 
thªadid
);

9413 
rs
->
out1
 = out1;

9415 
rs
->
˛u°î
 =Ñs->
thªadid
;

9417 i‡((
	`MD_OP_FUCLASS
 (
›
) > 3) && (MD_OP_FUCLASS (op) < 10))

9419 
cuºít
->
fissueq_thrd
++;

9420 
fissueq
++;

9421 
fissueq_˛
[
rs
->
thªadid
]++;

9422 #ifde‡ 
PWR_CLUSTER


9423 
fqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

9425 
rs
->
cou¡ed_fissueq
 = 1;

9426 
fqøm_ac˚ss
++;

9427 
cuºít
->
fqøm_ac˚ss
++;

9431 
cuºít
->
iissueq_thrd
++;

9432 
iissueq
++;

9433 
iissueq_˛
[
rs
->
thªadid
]++;

9434 #ifde‡ 
PWR_CLUSTER


9435 
iqøm_ac˚ss_˛
[
rs
->
˛u°î
]++;

9437 
rs
->
cou¡ed_iissueq
 = 1;

9438 
iqøm_ac˚ss
++;

9439 
cuºít
->
iqøm_ac˚ss
++;

9442 
rs
->
whí_öq
 = 
sim_cy˛e
;

9444 i‡(!
£c⁄d_run
)

9446 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

9447 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

9448 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

9449 i‡(
out1
)

9451 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
out1
);

9452 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
out2
);

9453 
rs
->
out1
 = out1;

9457 
	`ruu_ö°Æl_odï_skù
 (
rs
, 0, 
DTMP
);

9458 
	`ruu_ö°Æl_odï_skù
 (
rs
, 1, 
NA
);

9459 
rs
->
out1
 = 
DTMP
;

9464 
	`ruu_lök_idï
 (
rs
, 0, 
ö1
);

9465 
	`ruu_lök_idï
 (
rs
, 1, 
ö2
);

9466 
	`ruu_lök_idï
 (
rs
, 2, 
ö3
);

9468 
	`ruu_ö°Æl_odï
 (
rs
, 0, 
out1
);

9469 
	`ruu_ö°Æl_odï
 (
rs
, 1, 
out2
);

9470 
rs
->
out1
 = out1;

9474 
n_di•©ched
++;

9476 
cuºít
->
RUU_èû
 = (cuºít->RUU_èû + 1Ë% 
RUU_size
;

9477 
cuºít
->
RUU_num
++;

9478 if(!
ruu_ö‹dî_issue
)

9480 
rob2_ac˚ss
++;

9481 
cuºít
->
rob2_ac˚ss
++;

9485 i‡(
	`OPERANDS_READY
 (
rs
))

9487 
n_ªady
++;

9488 
	`ªadyq_íqueue
 (
rs
);

9489 
cuºít
->
œ°_›
 = 
RSLINK_NULL
;

9493 
	`RSLINK_INIT
 (
cuºít
->
œ°_›
, 
rs
);

9500 
rs
 = 
NULL
;

9504 
sim_tŸÆ_ö¢
++;

9505 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9506 
sim_tŸÆ_bønches
++;

9507 i‡(!
cuºít
->
•ec_mode
 && 
£c⁄d_run
)

9511 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9513 
sim_num_bønches
++;

9515 i‡(!(
rs
->
du∂iˇã
))

9517 
cuºít
->
b¥ed_ac˚ss
++;

9518 
b¥ed_ac˚ss
++;

9521 i‡(
cuºít
->
¥ed
 && 
b¥ed_•ec_upd©e
 =
•ec_ID
)

9523 
	`b¥ed_upd©e
 (
cuºít
->
¥ed
,

9524  
cuºít
->
ªgs
.
ªgs_PC
,

9525  
cuºít
->
ªgs
.
ªgs_NPC
,

9526  
cuºít
->
ªgs
.
ªgs_NPC
 !(cuºít->ªgs.
ªgs_PC
 +

9527  (
md_ö°_t
)),

9528  
cuºít
->
¥ed_PC
 !(cuºít->
ªgs
.
ªgs_PC
 +

9529  (
md_ö°_t
)),

9530  
cuºít
->
¥ed_PC
 =cuºít->
ªgs
.
ªgs_NPC
,

9531  
›
,

9532  &
rs
->
dú_upd©e
,

9533 
rs
->
thªadid
, (
b¥ed_btb_u£_ma°îid
 ? 
thec⁄ãxts
[rs->thªadid]->
ma°îid
 :Ñs->threadid));

9536 i‡(
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
 && !cuºít->
„tch_ªdúe˘ed
)

9538 
cuºít
->
•ec_mode
 = 
TRUE
;

9539 
rs
->
ªcovî_ö°
 = 
TRUE
;

9540 
cuºít
->
ªcovî_PC
 = cuºít->
ªgs
.
ªgs_NPC
;

9541 
	`c›y_to
 (
thªadid
);

9546 
	`±ø˚_√w°age
 (
p£q
, 
PST_DISPATCH
, (
cuºít
->
¥ed_PC
 !cuºít->
ªgs
.
ªgs_NPC
Ë? 
PEV_MPOCCURED
 : 0);

9547 i‡(
›
 =
MD_NOP_OP
)

9549 
	`±ø˚_ídö°
 (
p£q
);

9552 
i
 = 0; i < 
pc°©_√…
; i++)

9554 
cou¡î_t
 
√wvÆ
;

9555 
dñè
;

9558 
√wvÆ
 = 
	`STATVAL
 (
pc°©_°©s
[
i
]);

9559 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

9560 i‡(
dñè
 != 0)

9562 
	`°©_add_ßm∂es
 (
pc°©_sdi°s
[
i
], 
cuºít
->
ªgs
.
ªgs_PC
, 
dñè
);

9563 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

9567 
cuºít
->
„tch_hód
 = (cuºít->„tch_hód + 1Ë& (
ruu_ifq_size
 - 1);

9568 
cuºít
->
„tch_num
--;

9569 
ãmp_„tch_num
--;

9572 i‡(!
made_check
)

9574 i‡(
	`dlôe_check_bªak
 (0, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, 
sim_cy˛e
))

9575 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

9580 
°ÆlCau£
[
thªadid
] = 
SèŒFëchEm±y
;

9581 i‡(!
n_di•©ched
)

9583 
m_tŸÆSèŒ
[
thªadid
]++;

9584 if(
°ÆlCau£
[
thªadid
])

9586 
°ÆlCau£
[
thªadid
])

9588 
SèŒRegFuŒ
 :

9589 
m_ªgFuŒ
[
thªadid
]++;

9591 
SèŒIssueFuŒ
 :

9592 
m_issueFuŒ
[
thªadid
]++;

9594 
SèŒFëchEm±y
 :

9595 if(
thec⁄ãxts
[
thªadid
]->
ruu_„tch_issue_dñay
)

9596 
m_û1Miss
[
thªadid
]++;

9598 
m_„tchEm±y
[
thªadid
]++;

9600 
SèŒSTLC
 :

9601 
m_STLC
[
thªadid
]++;

9603 
SèŒTøp
 :

9604 
m_å≠
[
thªadid
]++;

9606  : 
	`∑nic
("No stall cause found");

9609 i‡(
cuºít
->
m_shLQNum
 =
m_shLQSize
)

9611 
°ÆlCau£
[
thªadid
] = 
SèŒLQFuŒ
;

9612 
m_sqLQFuŒ
[
thªadid
]++;

9613 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9614 
m_LﬂdRólMiss
[
thªadid
]++;

9616 
m_LﬂdRólHô
[
thªadid
]++;

9618 i‡(
m_shSQSize
 =(
cuºít
->
m_shSQNum
+
m_L1WBufC¡
[
thªadid
]))

9620 
°ÆlCau£
[
thªadid
] = 
SèŒSQFuŒ
;

9621 
m_sqSQFuŒ
[
thªadid
]++;

9622 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9623 
m_St‹eRólMiss
[
thªadid
]++;

9625 
m_St‹eRólHô
[
thªadid
]++;

9627 if(
cuºít
->
RUU_num
 =
RUU_size
)

9629 
°ÆlCau£
[
thªadid
] = 
SèŒRUUFuŒ
;

9630 
m_RUUFuŒ
[
thªadid
]++;

9633 if((
°ÆlCau£
[
thªadid
] =
SèŒRUUFuŒ
 || sèŒCau£[thªadid] =
SèŒLQFuŒ
 || sèŒCau£[thªadid] =
SèŒSQFuŒ
 || sèŒCau£[thªadid] =
SèŒRegFuŒ
 || sèŒCau£[thªadid] =
SèŒIssueFuŒ
 || sèŒCau£[thªadid] =
SèŒSTLC
 || sèŒCau£[thªadid] =
SèŒTøp
))

9635 if(
cuºít
->
LSQ_num
)

9637 if(
	`MD_OP_FLAGS
(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
›
Ë& 
F_LOAD
)

9639 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9640 
m_LﬂdSèŒMiss
[
thªadid
]++;

9642 
m_LﬂdSèŒHô
[
thªadid
]++;

9643 
m_LﬂdMiss
[
thªadid
]++;

9647 
m_St‹eMiss
[
thªadid
]++;

9648 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9649 
m_St‹eSèŒMiss
[
thªadid
]++;

9651 
m_St‹eSèŒHô
[
thªadid
]++;

9652 if(
m_upd©e_miss
[
thªadid
])

9653 
m_St‹eUpd©eMiss
[
thªadid
]++;

9654 if(
m_upd©e_miss
[
thªadid
] && !
m_upd©e_miss_Êag
[threadid])

9656 
m_upd©e_miss_Êag
[
thªadid
] = 1;

9657 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 
sim_cy˛e
;

9661 if(
	`MD_OP_FLAGS
(
cuºít
->
RUU
[cuºít->
RUU_hód
].
›
Ë& 
F_FENCE
)

9663 
m_St‹eMiss
[
thªadid
]++;

9664 if(
cuºít
->
LSQ
[cuºít->
LSQ_hód
].
miss_Êag
)

9665 
m_St‹eSèŒMiss
[
thªadid
]++;

9667 
m_St‹eSèŒHô
[
thªadid
]++;

9668 if(
m_upd©e_miss
[
thªadid
])

9669 
m_St‹eUpd©eMiss
[
thªadid
]++;

9670 if(
m_upd©e_miss
[
thªadid
] && !
m_upd©e_miss_Êag
[threadid])

9672 
m_upd©e_miss_Êag
[
thªadid
] = 1;

9673 
m_upd©e_miss_dïíd_°¨t
[
thªadid
] = 
sim_cy˛e
;

9678  
n_di•©ched
;

9679 
	}
}

9687 
	$„tch_öô
 (
thªadid
)

9690 
i
 = 0;

9691 
c⁄ãxt
 *
cuºít
;

9693 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9695 
i
 = 0; i < 
ruu_ifq_size
; i++)

9697 
cuºít
->
„tch_d©a
[
i
] = (
„tch_ªc
 *Ë
	`ˇŒoc
 (1,  (fetch_rec));

9698 i‡(!
cuºít
->
„tch_d©a
[
i
])

9699 
	`Áèl
 ("out of virtual memory");

9700 
cuºít
->
„tch_d©a
[
i
]->
ödex
 = i;

9701 
cuºít
->
„tch_d©a
[
i
]->
thªadid
 =Åhreadid;

9703 
cuºít
->
„tch_num
 = 0;

9704 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

9705 
IFQ_cou¡
 = 0;

9706 
IFQ_fcou¡
 = 0;

9708 
	}
}

9710 
	gœ°_ö°_mis£d
 = 
FALSE
;

9711 
	gœ°_ö°_tmis£d
 = 
FALSE
;

9717 
	$ruu_„tch
 ()

9719 
i
 = 0, 
j
 = 0, 
k
 = 0, 
œt
, 
éb_œt
, 
d⁄e
 = 
FALSE
;

9720 
md_ö°_t
 
ö°
;

9721 
°ack_ªcovî_idx
;

9722 
bønch_˙t
, 
øy_mu…
;

9723 
md_addr_t
 
„tch_£t
 = 0, 
ö°_£t
;

9724 
ödex
;

9725 
md_›code
 
›
;

9727 
thªadid
, 
tID
 = 0;

9728 
c⁄ãxt
 *
cuºít
 = 0;

9729 
thªads„tched
 = 0;

9730 
ãmp
;

9732 i‡(
dißbÀ_øy
)

9733 
øy_mu…
 = 1;

9735 
øy_mu…
 = 2;

9738 
tID
 < 
numc⁄ãxts
)

9740 
cuºít
 = 
thec⁄ãxts
[
tID
];

9741 
tID
++;

9743 
thªadid
 = 
cuºít
->
id
;

9745 i‡(
cuºít
->
waô_f‹_„tch
 == 2)

9746 
cuºít
->
waô_f‹_„tch
 = 1;

9747 
„tch_d⁄e
[
thªadid
] = 0;

9749 
j
 = 0, 
d⁄e
 = 
FALSE
, 
bønch_˙t
 = 0;

9750 (
cuºít
->
„tch_num
 < 
ruu_ifq_size
-1)

9751 && !
d⁄e
 && !
cuºít
->
ruu_„tch_issue_dñay
 && cuºít->
ru¬ög
 && 
j
 < (
ruu_decode_width
 * 
„tch_•ìd
Ë&& cuºít->
a˘ive_this_cy˛e
 ; 
i
++, j++)

9753 i‡(!
j
)

9755 
iˇche_ac˚ss
++;

9756 
cuºít
->
iˇche_ac˚ss
++;

9760 
cuºít
->
„tch_ªgs_PC
 = cuºít->
„tch_¥ed_PC
;

9763 i‡(
cuºít
->
ld_ãxt_ba£
 <cuºít->
„tch_ªgs_PC
 && cuºít->„tch_ªgs_PC < (cuºít->ld_ãxt_ba£ + cuºít->
ld_ãxt_size
Ë&& !(cuºít->„tch_ªgs_PC & ( (
md_ö°_t
) - 1)))

9767 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
„tch_ªgs_PC
);

9777 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9779 
œt
 = 
ˇche_û1_œt
;

9782 i‡(!
j
)

9783 
„tch_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9784 
ö°_£t
 = 
	`CACHE_SET
 (
ˇche_û1
[
thªadid
], 
cuºít
->
„tch_ªgs_PC
);

9785 i‡(
„tch_£t
 !
ö°_£t
)

9788 #ifde‡ 
FIX2_BUG


9789 i‡(!
cuºít
->
waô_f‹_„tch
)

9792 i‡(
ˇche_û1
[
thªadid
])

9796 
rsCacheAc˚ss
 = 
NULL
;

9797 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9798 
	`¥ötf
("debug 1\n");

9799 
œt
 = 
	`ˇche_ac˚ss
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9800 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9801 
NULL
, NULL, NULL,
thªadid
, NULL);

9802 i‡(
œt
 > (
ˇche_û1_œt
))

9803 
œ°_ö°_mis£d
 = 
TRUE
;

9806 i‡(
ôlb
[
thªadid
])

9808 if(
	`ISCOMPRESS
((
md_ö°_t
)) == 32)

9809 
	`¥ötf
("debug 2\n");

9810 
éb_œt
 = 
	`ˇche_ac˚ss
(
ôlb
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
),

9811 
NULL
, 
	`ISCOMPRESS
((
md_ö°_t
)), 
sim_cy˛e
,

9812 
NULL
, NULL, NULL, 
thªadid
, NULL);

9814 i‡(
éb_œt
 > 1)

9815 
œ°_ö°_tmis£d
 = 
TRUE
;

9817 
œt
 = 
	`max2
 (
éb_œt
,Üat);

9820 i‡(
œt
 !(
ˇche_û1_œt
))

9822 
cuºít
->
ruu_„tch_issue_dñay
 +(
œt
 - 1);

9823 #ifde‡ 
FIX2_BUG


9824 
cuºít
->
waô_f‹_„tch
 = 2;

9829 #ifde‡ 
FIX2_BUG


9835 
ö°
 = 
MD_NOP_INST
;

9838 i‡(
cuºít
->
¥ed
)

9840 
bønchIn°
 *
bønchInfo
 = 
NULL
;

9841 
md_›code
 
›
;

9844 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

9849 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_CTRL
)

9851 
md_addr_t
 
bèrgë
;

9853 i‡((
	`MD_OP_FLAGS
 (
›
Ë& (
F_CTRL
 | 
F_UNCOND
 | 
F_INDIRJMP
)) == (F_CTRL | F_UNCOND | F_INDIRJMP))

9854 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * (
ö°
 & 0x00003fff);

9856 
bèrgë
 = 
cuºít
->
„tch_ªgs_PC
 + 4 + 4 * 
	`SEXT21
 (
ö°
 & 0x001fffff);

9858 
cuºít
->
„tch_¥ed_PC
 = 
	`b¥ed_lookup
 (cuºít->
¥ed
,

9859  
cuºít
->
„tch_ªgs_PC
,

9861  
›
,

9862  
	`MD_IS_CALL
 (
›
),

9863  
	`MD_IS_RETURN
 (
›
),

9864  &(
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
dú_upd©e
),

9865  &
°ack_ªcovî_idx
,

9866  
cuºít
->
id
,

9867  (
b¥ed_btb_u£_ma°îid
 ? 
cuºít
->
ma°îid
 : cuºít->
id
));

9870 
cuºít
->
„tch_¥ed_PC
 = 0;

9873 i‡(!
cuºít
->
„tch_¥ed_PC
)

9875 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9877 i‡(
cuºít
->
„tch_¥ed_PC
 !cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
))

9880 
bønch_˙t
++;

9881 i‡(
bønch_˙t
 >
„tch_•ìd
)

9882 
d⁄e
 = 
TRUE
;

9887 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 +  (
md_ö°_t
);

9890 
cuºít
->
„tch_tŸÆ_ö¢
++;

9891 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
thªadid
 =Åhreadid;

9892 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
IR
 = 
ö°
;

9893 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
ªgs_PC
 = cuºít->
„tch_ªgs_PC
;

9894 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
¥ed_PC
 = cuºít->
„tch_¥ed_PC
;

9895 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
°ack_ªcovî_idx
 = stack_recover_idx;

9896 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
 =Ötrace_seq++;

9897 
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
„tch_time
 = (Ë
sim_cy˛e
;

9899 
	`±ø˚_√wö°
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
ö°
, cuºít->„tch_d©a[cuºít->„tch_èû]->
ªgs_PC
, 0);

9900 
	`±ø˚_√w°age
 (
cuºít
->
„tch_d©a
[cuºít->
„tch_èû
]->
±ø˚_£q
, 
PST_IFETCH
, ((
œ°_ö°_mis£d
 ? 
PEV_CACHEMISS
 : 0Ë| (
œ°_ö°_tmis£d
 ? 
PEV_TLBMISS
 : 0)));

9902 
cuºít
->
„tch_èû
 = (cuºít->„tch_èû + 1Ë& (
ruu_ifq_size
 - 1);

9903 
cuºít
->
„tch_num
++;

9904 
„tch_d⁄e
[
thªadid
]++;

9907 #ifde‡ 
FIX2_BUG


9909 i‡(
cuºít
->
waô_f‹_„tch
 == 1)

9911 i‡(!
j
 && 
cuºít
->
ruu_„tch_issue_dñay
)

9912 
cuºít
->
waô_f‹_„tch
 = 2;

9914 
cuºít
->
waô_f‹_„tch
 = 0;

9918 
	}
}

9924 
	$simoo_m°©e_obj
 (
FILE
 * 
°ªam
,

9925 *
cmd
,

9926 
ªgs_t
 *
ªgs
,

9927 
mem_t
 *
mem
)

9930 
thªadid
 = 
mem
->threadid;

9931 
c⁄ãxt
 *
cuºít
;

9933 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

9935 i‡(!
cmd
 || !
	`°rcmp
 (cmd, "help"))

9936 
	`Ârötf
 (
°ªam
,

9948 i‡(!
	`°rcmp
 (
cmd
, "stats"))

9951 
	`sim_¥öt_°©s
 (
°ªam
);

9953 i‡(!
	`°rcmp
 (
cmd
, "res"))

9956 
	`ªs_dump
 (
fu_poﬁ
, 
°ªam
);

9958 i‡(!
	`°rcmp
 (
cmd
, "ruu"))

9961 
	`ruu_dump
 (
°ªam
, 
thªadid
);

9968 i‡(!
	`°rcmp
 (
cmd
, "eventq"))

9971 
	`evítq_dump
 (
°ªam
, 
thªadid
);

9973 i‡(!
	`°rcmp
 (
cmd
, "readyq"))

9976 
	`ªadyq_dump
 (
°ªam
, 
thªadid
);

9978 i‡(!
	`°rcmp
 (
cmd
, "cv"))

9981 
	`cv_dump
 (
°ªam
, 
thªadid
);

9983 i‡(!
	`°rcmp
 (
cmd
, "rspec"))

9986 
	`r•ec_dump
 (
°ªam
, 
thªadid
);

9988 i‡(!
	`°rcmp
 (
cmd
, "mspec"))

9991 
	`m•ec_dump
 (
°ªam
, 
thªadid
);

10002  
NULL
;

10003 
	}
}

10005 
	#TAKE_STATS_PHASE
 1

	)

10006 
	#DRAIN_PIPELINE_PHASE
 2

	)

10007 
	#RECONFIGURE_PHASE
 3

	)

10008 
	#NORMAL_PHASE
 4

	)

10009 
	#PRIVTOSHARED
 5

	)

10010 
	#SHAREDTOPRIV
 6

	)

10011 
	#EXTRA_PHASE
 7

	)

10012 
	gch™geC⁄fig
 = 0;

10013 
	gcuºítPha£
 = 
NORMAL_PHASE
;

10018 
ªgíî©e_„tch_queue
 ();

10019 
c›y_„tch_queue
 ();

10021 
ªgíî©e_f_queue
 ();

10022 
c›y_f_queue
 ();

10023 
bønch_addªss_c›y
 (
ma°îid
, 
chunkExecuãd
);

10028 
time_t
 
	g¥öt_time
, 
	gnow_time
;

10029 
ruu_ªÀa£_wrôebuf„r
 ();

10030 
ruu_wrôe_‰om_Wrôebuf„r
 ();

10031 #ifdef 
COLLECT_STAT_STARTUP


10032 
f°fwd_föeAdju°
 ();

10033 
f°fwd_cﬁÀ˘Sèts
();

10036 
	$sim_maö
 ()

10038 
unPrötLimô
 = 1;

10039 
i
, 
j
, 
k
, 
l
;

10040 
ãmp˛
, 
maxguy
, 
maxvÆ
, 
ªf_mis
, 
ªf_imis
, 
ªf_br
, 
ªf_ªfs
, 
ªf_cyc
, 
mm
, 
¬
;

10041 
gŸ_ªf_poöt
 = 0;

10042 
möguy
, 
mövÆ
;

10043 
cyc_cou¡
 = 0;

10044 
num_picks
[
NUMPHASES
 + 1];

10045 
sim_ñ≠£d_£c
;

10046 
di•©ched
 = 0;

10048 
thªadid
 = 0, 
thªad_°›
 = 0;

10049 
c⁄ãxt
 *
cuºít
;

10050 
kûœŒ
 = 0;

10051 
„tch_blocked
 = 1;

10052 
˙t
;

10054 
FILE
 *
Â
, *
Â1
;

10055 
brNum
, 
ldNum
;

10057 #ifde‡
DO_COMPLETE_FASTFWD


10058 
out1
, 
out2
, 
ö1
, 
ö2
, 
ö3
;

10059 
x
, 
lo›ôî
;

10067 
	`sig«l
 (
SIGFPE
, 
SIG_IGN
);

10070 
«ck_cou¡î
 = 0;

10071 
Êù_cou¡î
 = 0;

10072 
°‹e_c⁄dôi⁄Æ_Áûed
 = 0;

10073 
L1_Êù_cou¡î
 = 0;

10074 
e_to_m
 = 0;

10075 
f
;

10076 
f
=0;f<16;f++)

10077 
mem_p‹t_œt
[
f
] = 0;

10078 
tŸÆevítcou¡num
 = 0;

10079 
tŸÆWrôeIndiˇã
 = 0;

10080 
tŸÆ_ex˛usive_modifõd
 = 0;

10081 
tŸÆ_ex˛usive_c⁄f
 = 0;

10082 
tŸÆ_ex˛usive_¸oss
 = 0;

10083 
tŸÆSyncEvít
 = 0;

10084 
tŸÆN‹mÆEvít
 = 0;

10085 
tŸÆSyncWrôeup
 = 0;

10086 
tŸÆSyncWrôeM
 = 0;

10087 
tŸÆSyncRódM
 = 0;

10088 
tŸÆmis°imef‹Sync
 = 0;

10089 
tŸÆmis°imef‹N‹mÆ
 = 0;

10090 
tŸÆ_L1_¥e„tch
 = 0;

10091 
wrôe_back_óæy
 = 0;

10092 
tŸÆ_L1_fú°_¥e„tch
 = 0;

10093 
tŸÆ_L1_£c_¥e„tch
 = 0;

10094 
tŸÆªqcou¡num
 = 0;

10095 
tŸÆmisscou¡num
 = 0;

10096 
övﬁve_4_h›s
 = 0;

10097 
övﬁve_4_h›s_upgøde
 = 0;

10098 
övﬁve_4_h›s_miss
 = 0;

10099 
övﬁve_2_h›s
 = 0;

10100 
övﬁve_2_h›_touch
 = 0;

10101 
övﬁve_2_h›_wb
 = 0;

10102 
övﬁve_4_h›s_wm
 = 0;

10103 
tŸÆS∂ôWM
 = 0;

10104 
tŸÆS∂ôNo
 = 0;

10105 
övﬁve_2_h›s_wm
 = 0;

10106 
övﬁve_2_h›s_upgøde
 = 0;

10107 
övﬁve_2_h›s_miss
 = 0;

10108 
d©a_sh¨ed_ªad
 = 0;

10109 
d©a_¥iv©e_ªad
 = 0;

10110 
d©a_sh¨ed_wrôe
 = 0;

10111 
d©a_¥iv©e_wrôe
 = 0;

10112 
tŸÆ_Æl_˛o£
 = 0;

10113 
tŸÆ_Æl_Æmo°˛o£
 = 0;

10114 
tŸÆ_nŸ_Æl_˛o£
 = 0;

10115 
tŸÆ_p_c_evíts
 = 0;

10116 
tŸÆ_c⁄sumîs
 = 0;

10117 
tŸÆ_d©a_c⁄sumîs
 = 0;

10118 
tŸÆ_d©a_Ár
 = 0;

10119 
tŸÆ_d©a_©_c‹√r
 = 0;

10120 
tŸÆ_d©a_˛o£
 = 0;

10121 
tŸÆ_∑ckës_ö_√ighb‹
 = 0;

10122 
tŸÆ_∑ckës_©_c‹√rs
 = 0;

10123 
avîage_outside_≥r˚¡
 = 0;

10124 
avîage_outside_abs_≥r˚¡
 = 0;

10125 
avîage_öside_≥r˚¡
 = 0;

10126 
avîage_c‹√r_≥r˚¡
 = 0;

10128 
i
 = 0; i< 
numc⁄ãxts
; i++)

10129 
sh¨î_num
[
i
] = 0;

10131 #i‡
PROCESS_MODEL


10132 
i
 = 0; i < 128; i++)

10134 
sh¨edAddªssLi°
[
i
] = 
NULL
;

10136 
La°Sh¨edAddªss
 = 0;

10137 
La°Sh¨edSize
 = 0;

10140 
	`öôClu°îInfo
 ();

10142 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

10143 
	`busInô
 ();

10146 
‚m
[256];

10147 
nm
[256];

10149 
	`°r˝y
 (
nm
, 
thec⁄ãxts
[0]->
‚ame
);

10151 
l
 = 0;Ü < 
MAXTHREADS
;Ü++)

10153 
numThªads
[
l
] = 
mè_maxthªads
;

10158 
n_limô_thrd
[0] =Ç_limit_thrd[1] =Ç_limit_thrd[2] =Ç_limit_thrd[3] = 1;

10162 
	`Ârötf
 (
°dîr
, "Issueq sizê - i¡ %d f∞%d\n", 
IIQ_size
, 
FIQ_size
);

10163 #ifde‡
REG_RENAME_CONFIGUARE


10164 
	`Ârötf
 (
°dîr
, "ª«mêPªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

10166 
	`Ârötf
 (
°dîr
, "Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

10168 
	`Ârötf
 (
°dîr
, "CLUSTERS %d\n", 
CLUSTERS
);

10169 
	`Ârötf
 (
°dîr
, "ROWCOUNT %d\n", 
ROWCOUNT
);

10170 
	`Ârötf
 (
°dîr
, "CENTRAL_CACHE %d\n", 
CENTRAL_CACHE
);

10171 
	`Ârötf
 (
°dîr
, "CENTRALCACHELAT %d\n", 
CENTRALCACHELAT
);

10172 
	`Ârötf
 (
°dîr
, "CACHELOC %d\n", 
CACHELOC
);

10173 
	`Ârötf
 (
°dîr
, "PRED_BR_CHANGES %d\n", 
PRED_BR_CHANGES
);

10174 
	`Ârötf
 (
°dîr
, "PRED_JR_CHANGES %d\n", 
PRED_JR_CHANGES
);

10175 
	`Ârötf
 (
°dîr
, "DYNAMIC_CHANGE %d\n", 
DYNAMIC_CHANGE
);

10176 
	`Ârötf
 (
°dîr
, "METRIC_CHANGE %d\n", 
METRIC_CHANGE
);

10177 
	`Ârötf
 (
°dîr
, "LINEAR_PHASE %d\n", 
LINEAR_PHASE
);

10178 
	`Ârötf
 (
°dîr
, "SMALLEST_CONFIG %d\n", 
SMALLEST_CONFIG
);

10179 
	`Ârötf
 (
°dîr
, "GRID %d\n", 
GRID
);

10180 
	`Ârötf
 (
°dîr
, "CACHEPORTS %d\n", 
CACHEPORTS
);

10181 
	`Ârötf
 (
°dîr
, "RES_CACHEPORTS %d\n", 
RES_CACHEPORTS
);

10182 
	`Ârötf
 (
°dîr
, "READY_COMM %d\n", 
READY_COMM
);

10183 
	`Ârötf
 (
°dîr
, "HOLY_REGS %d\n", 
HOLY_REGS
);

10184 
	`Ârötf
 (
°dîr
, "NUM_H_REGS %d\n", 
NUM_H_REGS
);

10185 
	`Ârötf
 (
°dîr
, "COPY_THRESH %d\n", 
COPY_THRESH
);

10186 
	`Ârötf
 (
°dîr
, "FIRST_FIT %d\n", 
FIRST_FIT
);

10187 
	`Ârötf
 (
°dîr
, "FIRST_FIT_ENFORCE %d\n", 
FIRST_FIT_ENFORCE
);

10188 
	`Ârötf
 (
°dîr
, "FIRST_VAL %d\n", 
FIRST_VAL
);

10189 
	`Ârötf
 (
°dîr
, "STEER_ENFORCE %d\n", 
STEER_ENFORCE
);

10190 
	`Ârötf
 (
°dîr
, "MOD_N %d\n", 
MOD_N
);

10191 
	`Ârötf
 (
°dîr
, "MOD_N_N %d\n", 
MOD_N_N
);

10192 
	`Ârötf
 (
°dîr
, "FIRST_MOD %d\n", 
FIRST_MOD
);

10193 
	`Ârötf
 (
°dîr
, "GROUPSIZE %d\n", 
GROUPSIZE
);

10194 
	`Ârötf
 (
°dîr
, "MOD_N_T %d\n", 
MOD_N_T
);

10195 
	`Ârötf
 (
°dîr
, "ANYWILLDO %d\n", 
ANYWILLDO
);

10196 
	`Ârötf
 (
°dîr
, "NEIGHBOR_SEEK %d\n", 
NEIGHBOR_SEEK
);

10197 
	`Ârötf
 (
°dîr
, "PICKMIDDLE %d\n", 
PICKMIDDLE
);

10198 
	`Ârötf
 (
°dîr
, "MIDTHRESH %d\n", 
MIDTHRESH
);

10199 
	`Ârötf
 (
°dîr
, "HOPTIME %d\n", 
HOPTIME
);

10200 
	`Ârötf
 (
°dîr
, "COMM_LATENCY %d\n", 
COMM_LATENCY
);

10201 #i‚de‡
CONFIG_BASED_ICS


10202 
	`Ârötf
 (
°dîr
, "FE_LAT %d\n", 
FE_LAT
);

10204 
	`Ârötf
 (
°dîr
, "CACHE_REFILL_LAT %d\n", 
CACHE_REFILL_LAT
);

10205 
	`Ârötf
 (
°dîr
, "MPRED_COMM_LAT %d\n", 
MPRED_COMM_LAT
);

10206 
	`Ârötf
 (
°dîr
, "LD_PROXIMITY %d\n", 
LD_PROXIMITY
);

10207 
	`Ârötf
 (
°dîr
, "LDPROX_FACTOR %d\n", 
LDPROX_FACTOR
);

10208 
	`Ârötf
 (
°dîr
, "STEER_2NONREADY %d\n", 
STEER_2NONREADY
);

10209 
	`Ârötf
 (
°dîr
, "STEER_CRITICAL %d\n", 
STEER_CRITICAL
);

10210 
	`Ârötf
 (
°dîr
, "ILOAD_MIN %d\n", 
ILOAD_MIN
);

10211 
	`Ârötf
 (
°dîr
, "IFACTOR %d\n", 
IFACTOR
);

10212 
	`Ârötf
 (
°dîr
, "RLOAD_MIN %d\n", 
RLOAD_MIN
);

10213 
	`Ârötf
 (
°dîr
, "RFACTOR %d\n", 
RFACTOR
);

10214 
	`Ârötf
 (
°dîr
, "DEP_FACTOR %d\n", 
DEP_FACTOR
);

10215 
	`Ârötf
 (
°dîr
, "LD_FACTOR %d\n", 
LD_FACTOR
);

10216 
	`Ârötf
 (
°dîr
, "IQBUF %d\n", 
IQBUF
);

10217 
	`Ârötf
 (
°dîr
, "REGFREE %d\n", 
REGFREE
);

10218 
	`Ârötf
 (
°dîr
, "FREE_CURR_REGS %d\n", 
FREE_CURR_REGS
);

10219 
	`Ârötf
 (
°dîr
, "FREE_INTERVAL %d\n", 
FREE_INTERVAL
);

10220 
	`Ârötf
 (
°dîr
, "DISPDELAY %d\n", 
DISPDELAY
);

10221 
	`Ârötf
 (
°dîr
, "RING_BW %d\n", 
RING_BW
);

10222 
	`Ârötf
 (
°dîr
, "TIMEWINDOW %d\n", 
TIMEWINDOW
);

10223 
	`Ârötf
 (
°dîr
, "ST_ADDR_COMM %d\n", 
ST_ADDR_COMM
);

10224 
	`Ârötf
 (
°dîr
, "ST_RING_BW %d\n", 
ST_RING_BW
);

10225 
	`Ârötf
 (
°dîr
, "RING_IC %d\n", 
RING_IC
);

10226 
	`Ârötf
 (
°dîr
, "IGNORE_COMM_LATENCY %d\n", 
IGNORE_COMM_LATENCY
);

10227 
	`Ârötf
 (
°dîr
, "TOL_COUNT %d\n", 
TOL_COUNT
);

10228 
	`Ârötf
 (
°dîr
, "STOREDELAY %d\n", 
STOREDELAY
);

10229 
	`Ârötf
 (
°dîr
, "BANKPRED %d\n", 
BANKPRED
);

10230 
	`Ârötf
 (
°dîr
, "BANKMISPREDLAT %d\n", 
BANKMISPREDLAT
);

10231 
	`Ârötf
 (
°dîr
, "BANKP_SPEC %d\n", 
BANKP_SPEC
);

10232 
	`Ârötf
 (
°dîr
, "LEV1SIZE %d\n", 
LEV1SIZE
);

10233 
	`Ârötf
 (
°dîr
, "LEV2SIZE %d\n", 
LEV2SIZE
);

10234 
	`Ârötf
 (
°dîr
, "XORSIZE %d\n", 
XORSIZE
);

10235 
	`Ârötf
 (
°dîr
, "WORD_INTERLEAVED %d\n", 
WORD_INTERLEAVED
);

10236 
	`Ârötf
 (
°dîr
, "WORDSIZE %d\n", 
WORDSIZE
);

10237 
	`Ârötf
 (
°dîr
, "SORT %d\n", 
SORT
);

10238 
	`Ârötf
 (
°dîr
, "NUMPHASES %d\n", 
NUMPHASES
);

10239 
	`Ârötf
 (
°dîr
, "MIN_INSN_INT %d\n", 
MIN_INSN_INT
);

10240 
	`Ârötf
 (
°dîr
, "STOP_EXPL_THRESH %d\n", 
STOP_EXPL_THRESH
);

10241 
	`Ârötf
 (
°dîr
, "ILPTAGCHECK %d\n", 
ILPTAGCHECK
);

10242 
	`Ârötf
 (
°dîr
, "DISTILP %d\n", 
DISTILP
);

10243 
	`Ârötf
 (
°dîr
, "DISTILPTHRESH %d\n", 
DISTILPTHRESH
);

10244 
	`Ârötf
 (
°dîr
, "SAMPLETHRESH %d\n", 
SAMPLETHRESH
);

10245 
	`Ârötf
 (
°dîr
, "BR_INT %d\n", 
BR_INT
);

10246 
	`Ârötf
 (
°dîr
, "ITABLESIZE %d\n", 
ITABLESIZE
);

10247 
	`Ârötf
 (
°dîr
, "OWINDOWSIZE %d\n", 
OWINDOWSIZE
);

10248 
	`Ârötf
 (
°dîr
, "ILPCLEARINT %d\n", 
ILPCLEARINT
);

10249 
	`Ârötf
 (
°dîr
, "STATPRINT %d\n", 
STATPRINT
);

10250 
	`Ârötf
 (
°dîr
, "CYCNOISE %d\n", 
CYCNOISE
);

10251 
	`Ârötf
 (
°dîr
, "NUMCYCTHRESH %d\n", 
NUMCYCTHRESH
);

10252 
	`Ârötf
 (
°dîr
, "STATINT %d\n", 
STATINT
);

10253 
	`Ârötf
 (
°dîr
, "FREE_REG_THRESH %d\n", 
FREE_REG_THRESH
);

10254 
	`Ârötf
 (
°dîr
, "TABLE2SIZE %d\n", 
TABLE2SIZE
);

10255 
	`Ârötf
 (
°dîr
, "TABLESIZE %d\n", 
TABLESIZE
);

10257 #ifdef 
COLLECT_STAT_STARTUP


10261 
thrdPîJobC¡
 = 1;

10262 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10263 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

10264 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

10267 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

10268 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

10272 i‡(!
cuºít
->
Á°fwd_d⁄e
)

10274 
cou¡î_t
 
icou¡
;

10275 
md_ö°_t
 
ö°
;

10276 
md_›code
 
›
;

10277 
md_addr_t
 
èrgë_PC
;

10278 
md_addr_t
 
addr
;

10279 
is_wrôe
;

10280 
byã_t
 
ãmp_byã
;

10281 
hÆf_t
 
ãmp_hÆf
;

10282 
w‹d_t
 
ãmp_w‹d
;

10283 
Ê_Êag_0
;

10284 
Ê_Êag_0
 = 0;

10288 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

10289 
qw‹d_t
 
ãmp_qw‹d
 = 0;

10292 
md_Áu…_ty≥
 
Áu…
;

10294 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

10296 !
cuºít
->
Á°fwd_d⁄e
)

10299 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

10300 #ifde‡
TARGET_ALPHA


10301 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

10305 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

10306 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

10310 
addr
 = 0;

10311 
is_wrôe
 = 
FALSE
;

10314 
Áu…
 = 
md_Áu…_n⁄e
;

10317 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

10320 
›
)

10322 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

10323 
OP
: \

10324 
	`SYMCAT
(
OP
,
_IMPL
); \

10326 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

10327 
OP
: \

10328 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

10329 
	#CONNECT
(
OP
)

	)

10330 #unde‡
DECLARE_FAULT


10331 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

10332 { 
Áu…
 = (
FAULT
); ; }

10333 
	~"machöe.def
"

10335 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

10338 i‡(
Áu…
 !
md_Áu…_n⁄e
)

10339 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

10342 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

10344 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

10346 
is_wrôe
 = 
TRUE
;

10348 #i‚de‡
PARALLEL_EMUL


10349 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

10352 #i‚de‡
PARALLEL_EMUL


10354 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

10359 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

10360 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10365 if–
Ê_cou¡
 == 19090609 )

10366 
Ê_Êag_0
 = 1;

10367 
Ê_cou¡
 = fl_count +1;

10368 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10369 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10374 
i
 = 0; i < 
numc⁄ãxts
; i++)

10376 
thec⁄ãxts
[
i
]->
jobThdId
 = i;

10377 
thec⁄ãxts
[
i
]->
hñpThdId
 = -1;

10378 
thec⁄ãxts
[
i
]->
‹a˛eId
 = -1;

10381 
	`¥ötf
 ("ff Stage 0 done\n");

10382 
	`fÊush
 (
°dout
);

10384 
	`f°fwd_cﬁÀ˘Sèts
();

10387 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10389 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10390 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->
ld_¥og_íåy
;

10391 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
 +  (
md_ö°_t
);

10394 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

10395 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

10399 i‡(
cuºít
->
Á°fwd_cou¡
 > 0)

10401 
cou¡î_t
 
icou¡
;

10402 
md_ö°_t
 
ö°
;

10403 
md_›code
 
›
;

10404 
md_addr_t
 
èrgë_PC
;

10405 
md_addr_t
 
addr
;

10406 
is_wrôe
;

10407 
byã_t
 
ãmp_byã
;

10408 
hÆf_t
 
ãmp_hÆf
;

10409 
w‹d_t
 
ãmp_w‹d
;

10411 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

10412 
qw‹d_t
 
ãmp_qw‹d
 = 0;

10415 
md_Áu…_ty≥
 
Áu…
;

10417 
	`Ârötf
 (
°dîr
, "Thªad %d, sim: ** fa° f‹w¨dög %ld in°†**\n", 
thªadid
, 
cuºít
->
Á°fwd_cou¡
);

10419 
icou¡
 = 0; icou¡ < 
cuºít
->
Á°fwd_cou¡
; icount++)

10422 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

10423 #ifde‡
TARGET_ALPHA


10424 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

10428 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

10431 
addr
 = 0;

10432 
is_wrôe
 = 
FALSE
;

10435 
Áu…
 = 
md_Áu…_n⁄e
;

10438 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

10441 
›
)

10443 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

10444 
OP
: \

10445 
	`SYMCAT
(
OP
,
_IMPL
); \

10447 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

10448 
OP
: \

10449 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

10450 
	#CONNECT
(
OP
)

	)

10451 #unde‡
DECLARE_FAULT


10452 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

10453 { 
Áu…
 = (
FAULT
); ; }

10454 
	~"machöe.def
"

10456 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

10459 i‡(
Áu…
 !
md_Áu…_n⁄e
)

10460 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

10463 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

10465 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

10467 
is_wrôe
 = 
TRUE
;

10468 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

10471 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

10475 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

10476 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

10479 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

10480 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

10487 
	`¥ötf
 ("ff stage 1 done\n");

10488 
	`fÊush
 (
°dout
);

10490 
	`Ârötf
 (
°dîr
, "sim: ** startingÖerformance simulation **\n");

10491 #ifde‡
LOAD_PREDICTOR


10492 
	`Ârötf
 (
°dîr
, " LOAD_PREDICTOR\n");

10493 #ifde‡
COUNT_MISS_ONLY


10494 
	`Ârötf
 (
°dîr
, "COUNT_MISS_ONLY \n");

10496 #ifde‡
PREDICT_LOAD_COMM


10497 
	`Ârötf
 (
°dîr
, "PREDICT_LOAD_COMM \n");

10499 #ifde‡
GATE_L1_MISS


10500 
	`Ârötf
 (
°dîr
, "GATE_L1_MISS \n");

10502 #ifde‡
GATE_L2_MISS


10503 
	`Ârötf
 (
°dîr
, "GATE_L2_MISS\n");

10505 #ifde‡
PDG


10506 
	`Ârötf
 (
°dîr
, "PDG \n");

10509 #ifde‡
ACTIVE_N_WAY


10510 
	`Ârötf
 (
°dîr
, " ACTIVE_N_WAY\n");

10511 #ifde‡
FIXED_N_WAY


10512 
	`Ârötf
 (
°dîr
, " FIXED_N_WAY\n");

10515 #ifde‡ 
SMT_TEST


10516 
	`Ârötf
 (
°dîr
, "SMT_TEST\n");

10518 #ifde‡ 
THRD_WAY_CACHE


10519 
	`Ârötf
 (
°dîr
, " THRD_WAY_CACHE\n");

10521 #ifde‡ 
N_WAY_CACHE


10522 
	`Ârötf
 (
°dîr
, " N_WAY_CACHE: deÁu… o∆y, %d\n", 
n_way_ˇche
);

10523 #ifde‡
SET_BASED


10524 
	`Ârötf
 (
°dîr
, "SET_BASED\n");

10527 #ifde‡
PARTITIONED_LSQ


10528 
	`Ârötf
 (
°dîr
, "PARTITIONED_LSQ\n");

10530 
	`Ârötf
 (
°dîr
, "(PARTITIONED_LSQÇot defined)\n");

10532 #ifde‡
CENTRALIZED_LSQ


10533 
	`Ârötf
 (
°dîr
, "CENTRALIZED_LSQ\n");

10535 #ifde‡
DE_CENTRALIZED_LSQ


10536 
	`Ârötf
 (
°dîr
, "DE_CENTRALIZED_LSQ\n");

10537 #ifde‡
DE_CENTRALIZED_POWER_BUG


10538 
	`Ârötf
 (
°dîr
, " DE_CENTRALIZED_POWER_BUG\n");

10540 #ifde‡ 
SPLIT_LSQ


10541 
	`Ârötf
 (
°dîr
, "SPLIT_LSQ\n");

10543 #ifde‡
DISTRIBUTE_STORE


10544 
	`Ârötf
 (
°dîr
, "DISTRIBUTE_STORE\n");

10546 #ifde‡ 
PWR_DE_CENTRALIZED_LSQ


10547 
	`Ârötf
 (
°dîr
, " PWR_DE_CENTRALIZED_LSQ\n");

10550 #ifde‡
ALLOW_ANY_CLUSTER


10551 
	`Ârötf
 (
°dîr
, "ALLOW_ANY_CLUSTER\n");

10553 #ifde‡ 
CLUSTER_PRIORITY


10554 
	`Ârötf
 (
°dîr
, "CLUSTER_PRIORITY\n");

10556 #ifde‡
DISTRIBUTED_STEER


10557 
	`Ârötf
 (
°dîr
, "DISTRIBUTED_STEER\n");

10559 #ifde‡
CENTRALIZED_STEER


10560 
	`Ârötf
 (
°dîr
, "CENTRALIZED_STEER\n");

10562 #ifde‡
MINIMUM_STEER


10563 
	`Ârötf
 (
°dîr
, "MINIMUM_STEER\n");

10565 #ifde‡
INIT_CENTRALIZED_STEER


10566 
	`Ârötf
 (
°dîr
, "INIT_CENTRALIZED_STEER\n");

10568 #ifde‡
CMP_STEER


10569 
	`Ârötf
 (
°dîr
, "CMP_STEER\n");

10571 #ifde‡
INIT_CMP_STEER


10572 
	`Ârötf
 (
°dîr
, "INIT_CMP_STEER\n");

10574 #ifde‡
N_WAY_STEER


10575 
	`Ârötf
 (
°dîr
, "N_WAY_STEER ,N_WAY:deÁu… %d \n", 
n_way
);

10576 #ifde‡
PRIVATE_STEER


10577 
	`Ârötf
 (
°dîr
, " PRIVATE_STEER\n");

10579 #ifde‡
N_WAY_ADAPT


10580 
	`Ârötf
 (
°dîr
, " N_WAY_ADAPT,ADAPT_RATE %d \n", 
ADAPT_RATE
);

10581 #ifde‡
STABLE_IPC_ADAPT


10582 
	`Ârötf
 (
°dîr
, "STABLE_IPC_ADAPT\n");

10584 #ifde‡
PERIODIC_INCREASE_ADAPT


10585 
	`Ârötf
 (
°dîr
, "PERIODIC_INCREASE_ADAPT\n");

10587 #ifde‡
DOUBLE_ADAPT


10588 
	`Ârötf
 (
°dîr
, "DOUBLE_ADAPT\n");

10590 #ifde‡
OVERALL_LIMIT


10591 
	`Ârötf
 (
°dîr
, "OVERALL_LIMIT\n");

10593 #ifde‡ 
PRIVATE_STEER


10594 
	`Ârötf
 (
°dîr
, "PRIVATE_STEER\n");

10597 #ifde‡
THRD_PRIO_ADAPT


10598 
	`Ârötf
 (
°dîr
, " THRD_PRIO_ADAPT\n");

10599 #ifde‡
ADAPT_LIMIT


10600 
	`Ârötf
 (
°dîr
, " ADAPT_LIMIT\n");

10603 #ifde‡
PDG_ADAPT


10604 
	`Ârötf
 (
°dîr
, " PDG_ADAPT\n");

10606 #ifde‡
PDG_STOP_ADAPT


10607 
	`Ârötf
 (
°dîr
, " PDG_STOP_ADAPT\n");

10609 #ifde‡
PDG_THRD_ADAPT


10610 
	`Ârötf
 (
°dîr
, " PDG_THRD_ADAPT\n");

10611 #ifde‡
PDG_THRD_AGGRESSIVE


10612 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10614 #ifde‡
PDG_THRD_SOFT


10615 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10618 #ifde‡
PDG_THRD_PRIO_ADAPT


10619 
	`Ârötf
 (
°dîr
, "PDG_THRD_PRIO_ADAPT \n");

10620 #ifde‡
COMM_OPER_LIMIT


10621 
	`Ârötf
 (
°dîr
, "COMM_OPER_LIMIT COMM_OPER_RATIO %2.2f\n", 
COMM_OPER_RATIO
);

10623 #ifde‡
ADAPT_NO_PRIO


10624 
	`Ârötf
 (
°dîr
, " ADAPT_NO_PRIO\n");

10626 #ifde‡
ADAPT_NO_COMM_OPER


10627 
	`Ârötf
 (
°dîr
, " ADAPT_NO_COMM_OPER\n");

10629 #ifde‡
AVG_LIMIT


10630 
	`Ârötf
 (
°dîr
, " AVG_LIMIT\n");

10632 #ifde‡
PDG_THRD_AGGRESSIVE


10633 
	`Ârötf
 (
°dîr
, " PDG_THRD_AGGRESSIVE\n");

10635 #ifde‡
PDG_THRD_SOFT


10636 
	`Ârötf
 (
°dîr
, " PDG_THRD_SOFT\n");

10639 #ifde‡
INIT_N_WAY_CENTRAL


10640 
	`Ârötf
 (
°dîr
, " INIT_N_WAY_CENTRAL\n");

10642 #ifde‡
N_WAY_BALANCE


10643 
	`Ârötf
 (
°dîr
, "N_WAY_BALANCE \n");

10645 #ifde‡
THRD_PROFILE


10646 
	`Ârötf
 (
°dîr
, " THRD_PROFILE\n");

10648 #ifde‡
N_CACHE_FIXED


10649 
	`Ârötf
 (
°dîr
, "N_CACHE_FIXED \n");

10651 #ifde‡
PRIVATE_CACHE


10652 
	`Ârötf
 (
°dîr
, " PRIVATE_CACHE\n");

10655 #ifde‡
STEER_MEM_LSQ


10656 
	`Ârötf
 (
°dîr
, "STEER_MEM_LSQ\n");

10658 #ifde‡
STEER_MEM_NEIGHBOR


10659 
	`Ârötf
 (
°dîr
, "STEER_MEM_NEIGHBOR\n");

10661 #ifde‡
STEER_OPRANDS


10662 
	`Ârötf
 (
°dîr
, "STEER_OPRANDS\n");

10664 #ifde‡ 
STEER_FU


10665 
	`Ârötf
 (
°dîr
, "STEER_FU\n");

10667 #ifde‡
SELECTIVE_DISPATCH


10668 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH\n");

10670 #ifde‡
SELECTIVE_FETCH


10671 
	`Ârötf
 (
°dîr
, "SELECTIVE_FETCH\n");

10673 #ifde‡
SELECTIVE_DISPATCH_GATE


10674 
	`Ârötf
 (
°dîr
, "SELECTIVE_DISPATCH_GATE\n");

10675 #ifde‡
UNREADY_PRIVATE


10676 
	`Ârötf
 (
°dîr
, " UNREADY_PRIVATE \n");

10678 #ifde‡
UNREADY_COUNT


10679 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT %d\n", 
UNREADY_COUNT_LIMIT
);

10681 #ifde‡
UNREADY_COUNT_ONLY


10682 
	`Ârötf
 (
°dîr
, " UNREADY_COUNT_ONLY \n");

10684 #ifde‡
UNREADY_CHAIN_PRIVATE


10685 
	`Ârötf
 (
°dîr
, " UNREADY_CHAIN_PRIVATE %d\n", 
UNREADY_CHAIN_LIMIT
);

10688 #ifde‡ 
RAW


10689 
	`Ârötf
 (
°dîr
, "RAW ,deÁu… RAWSIZE %d\n", 
RAWSIZE
);

10691 #ifde‡ 
RABMAP


10692 
	`Ârötf
 (
°dîr
, "RABMAP \n");

10694 #ifde‡ 
RABCOMM


10695 
	`Ârötf
 (
°dîr
, "RABCOMM \n");

10697 #ifde‡ 
ALU_MERGE


10698 
	`Ârötf
 (
°dîr
, "ALU_MERGE \n");

10700 #ifde‡
INST_TRANS_RATE


10701 
	`Ârötf
 (
°dîr
, "INST_TRANS_RATE\n");

10702 #ifde‡
TRACE_REG


10703 
	`Ârötf
 (
°dîr
, " TRACE_REG\n");

10706 #ifde‡
IGNORE_ALL_COMM_LATENCY


10707 
	`Ârötf
 (
°dîr
, "IGNORE_ALL_COMM_LATENCY\n");

10709 #ifde‡
IGNORE_MEM_COMM_LATENCY


10710 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10712 #ifde‡
COUNT_COMMIT


10713 
	`Ârötf
 (
°dîr
, "COUNT_COMMIT\n");

10715 #ifde‡
CYCLE_JUMP


10716 
	`Ârötf
 (
°dîr
, "CYCLE_JUMP \n");

10718 #ifde‡
FETCH_ONE_BLOCK


10719 
	`Ârötf
 (
°dîr
, "FETCH_ONE_BLOCK \n");

10721 #ifde‡ 
MSHR


10722 
	`Ârötf
 (
°dîr
, "MSHR , MSHRSIZE %d\n", 
MSHRSIZE
);

10724 #ifde‡
GENERIC_FU


10725 
	`Ârötf
 (
°dîr
, "GENERIC_FU\n");

10727 #ifde‡
NO_EXTRA_REG


10728 
	`Ârötf
 (
°dîr
, "NO_EXTRA_REG\n");

10730 #ifde‡
NO_CACHE_BANK


10731 
	`Ârötf
 (
°dîr
, "NO_CACHE_BANK\n");

10733 #ifde‡
NO_QFILL_CONTENTION


10734 
	`Ârötf
 (
°dîr
, "NO_QFILL_CONTENTION\n");

10736 #ifde‡
NO_BUS_CONTENTION


10737 
	`Ârötf
 (
°dîr
, " NO_BUS_CONTENTION \n");

10739 #ifde‡
EVENT_CACHE_UPDATE


10740 
	`Ârötf
 (
°dîr
, "EVENT_CACHE_UPDATE\n");

10741 #ifde‡
APPROXIMATE_LAT


10742 
	`Ârötf
 (
°dîr
, " APPROXIMATE_LAT \n");

10744 #ifde‡ 
ACURATE_LAT


10745 
	`Ârötf
 (
°dîr
, " ACURATE_LAT \n");

10747 #ifde‡ 
MOST_ACURATE_LAT


10748 
	`Ârötf
 (
°dîr
, " MOST_ACURATE_LAT \n");

10751 #ifde‡
PORT_PER_BANK


10752 
	`Ârötf
 (
°dîr
, "PORT_PER_BANK\n");

10754 #ifde‡ 
LINE_INTERLEAVED


10755 
	`Ârötf
 (
°dîr
, "LINE_INTERLEAVED\n");

10757 #ifde‡ 
PWR_CLUSTER


10758 
	`Ârötf
 (
°dîr
, "PWR_CLUSTER,ISSUE_PER_CLUSTER \n");

10760 #ifde‡ 
CHECKS


10761 
	`Ârötf
 (
°dîr
, "CHECKS\n");

10763 #ifde‡ 
PWR__SMT_RR


10764 
	`Ârötf
 (
°dîr
, "PWR__SMT_RR\n");

10766 
	`Ârötf
 (
°dîr
, "REMOVE_ILP = %d\n", (Ë
REMOVE_ILP
);

10767 
	`Ârötf
 (
°dîr
, "HOPTIME = %d\n", (Ë
HOPTIME
);

10768 #ifde‡
CENTRALIZED_CACHE_BANK


10769 
	`Ârötf
 (
°dîr
, "CENTRALIZED_CACHE_BANK\n");

10771 #ifde‡
IGNORE_MEM_COMM_LATENCY


10772 
	`Ârötf
 (
°dîr
, "IGNORE_MEM_COMM_LATENCY\n");

10774 
	`Ârötf
 (
°dîr
, "DO_DYNAMIC_ADAPTATION = %d\n", (Ë
DO_DYNAMIC_ADAPTATION
);

10775 
	`Ârötf
 (
°dîr
, "N_WAY = %d\n", 
n_way
);

10776 
	`Ârötf
 (
°dîr
, "n_way_ˇchê%d\n", 
n_way_ˇche
);

10777 #ifde‡
OPTICAL_FE_LINK


10778 
	`Ârötf
 (
°dîr
, "OPTICAL_FE_LINK\n");

10780 #ifde‡
MONOLETHIC_MACHINE


10781 
	`Ârötf
 (
°dîr
, "MONOLETHIC_MACHINE\n");

10784 #ifde‡
TOKENB


10785 
	`Ârötf
 (
°dîr
, "TOKENB\n");

10789 *
sim_°r_dump
;

10790 *
sim_dump
 = 
sim_°r_dump
;

10791 
°rFûeName
[256];

10792 i‡(!
sim_dump
)

10794 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

10795 
	`exô
 (1);

10798 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

10799 
	`°rˇt
 (
°rFûeName
, ".trc");

10800 
Â_åa˚
 = 
	`f›í
 (
°rFûeName
, "w");

10801 if(!
Â_åa˚
Ë
	`∑nic
("CouldÇot openÅrace file");

10804 
	`Æloˇã_‰ì_evít_li°
();

10807 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10809 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10810 
cuºít
->
„tch_¥ed_PC
 = cuºít->
ªgs
.
ªgs_PC
;

10811 
cuºít
->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

10813 
cuºít
->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_PC
 -  (
md_ö°_t
);

10814 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.ªgs_PC -  (
md_ö°_t
);

10815 #ifde‡
PDG


10816 
cuºít
->
a˘ive
 = 1;

10821 
	`bö_öô
 ();

10822 
	`ˇche_öô
 ();

10823 
	`∑ge_èbÀ_öô
 ();

10824 
	`éb_mshr_öô
 ();

10825 
	`éb_cu_öô
 ();

10826 #ifde‡ 
STREAM_PREFETCHER


10827 
	`öô_•
 ();

10829 #ifde‡ 
L1_STREAM_PREFETCHER


10830 
	`l1öô_•
 ();

10833 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

10835 
di•_time
[
i
] = 0;

10838 
i
 = 0; i < 
numc⁄ãxts
; i++)

10840 
	`ªg_öô
 (
i
);

10841 
	`b¥ed_öô
 (
i
);

10844 #ifde‡
REG_RENAME_CONFIGUARE


10845 
	`Ârötf
 (
°dîr
, "TŸÆ Pªgfûêsizê- i¡ %d f∞%d\n", 
IPREG_size
, 
FPREG_size
);

10848 
i
 = 0; i < 
CLUSTERS
; i++)

10850 
num_°‹eq
[
i
] = 0;

10851 
max_°‹eq
[
i
] = 0;

10854 
mm
 = 0; mm <
NUMPHASES
; mm++)

10856 
num_picks
[
mm
] = 0;

10859 i‡(
CENTRAL_CACHE
)

10861 
a˘uÆ_ˇchï‹ts
 = 
CACHEPORTS
;

10862 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10866 
	`ˇche_ch™ge_c⁄fig
 (
SMALLEST_CONFIG
);

10867 
a˘uÆ_˛u°îs
 = 
SMALLEST_CONFIG
;

10868 
a˘uÆ_ˇchï‹ts
 = (
CACHEPORTS
 * 
a˘uÆ_˛u°îs
Ë/ 
CLUSTERS
;

10871 
πhªsh
 = 
ö¢_öãrvÆ
 / 100;

10872 
bπhªsh
 = 
ö¢_öãrvÆ
 / 100;

10873 
m°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10874 
im°hªsh
 = 
ö¢_öãrvÆ
 / 1000;

10875 
cy˘hªsh
 = 
ö¢_öãrvÆ
 / 100;

10876 
∫oi£
 = 
ö¢_öãrvÆ
 / 20;

10877 
b∫oi£
 = 
ö¢_öãrvÆ
 / 50;

10878 
m¢oi£
 = 
ö¢_öãrvÆ
 / 100;

10879 
im¢oi£
 = 
ö¢_öãrvÆ
 / 200;

10881 #ifdef 
COLLECT_STAT_STARTUP


10882 
a˘uÆPro˚ss
 = 1;

10884 
a˘uÆPro˚ss
 = 
numc⁄ãxts
;

10886 
execuãMaxIn¢
 = 
max_ö°s
;

10892 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

10894 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

10895 
cuºít
->
a˘ive_this_cy˛e
 = 1;

10900 
thªadid
 = 0;Åhªadid < 
MAXTHREADS
;Åhreadid++)

10902 
i
 = 0; i < 
SMD_L1_WBUF_SIZE
; i++)

10904 
m_L1WBuf
[
thªadid
][
i
].
PC
 = 0;

10905 
m_L1WBuf
[
thªadid
][
i
].
lsqId
 = 0;

10906 
m_L1WBuf
[
thªadid
][
i
].
robId
 = 0;

10907 
m_L1WBuf
[
thªadid
][
i
].
robExId
 = 0;

10908 
m_L1WBuf
[
thªadid
][
i
].
addr
 = 0;

10909 
m_L1WBuf
[
thªadid
][
i
].
›
 = 0;

10910 
m_L1WBuf
[
thªadid
][
i
].
œt
 = 0;

10911 
m_L1WBuf
[
thªadid
][
i
].
sim_num_ö¢
 = 0;

10912 
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
 = 0;

10913 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 0;

10914 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 0;

10915 
m_L1WBuf
[
thªadid
][
i
].
íåyTime
 = 0;

10916 
m_L1WBuf
[
thªadid
][
i
].
wrôeVÆue
 = 0;

10917 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 0;

10918 
m_L1WBuf
[
thªadid
][
i
].
STL_C_Áû
 = 0;

10919 
m_L1WBuf
[
thªadid
][
i
].
Æªady_check
 = 0;

10921 
m_L1WBufC¡
[
thªadid
] = 0;

10922 
m_L1WBuf_hód
[
thªadid
] = 0;

10923 
m_L1WBuf_èû
[
thªadid
] = 0;

10926 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

10927 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10928 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

10929 
	`maöP›√t
(
mesh_size
+2);

10930 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

10932 
	`maödúe˘sim
(
√tw‹k_ª˚ivî
, 
√tw‹k_c⁄Êi˘
);

10933 
	`maöP›√t
(
mesh_size
+2);

10939 #ifdef 
DCACHE_MSHR


10940 
i
 = 0; i < 
numc⁄ãxts
; i++)

10942 
	`‰ìMSHR
(
ˇche_dl1
[
i
]->
mshr
);

10943 
	`éb_Êush_check
(
i
);

10945 
	`‰ìL2MSHR
(
ˇche_dl2
->
mshr
);

10948 #ifde‡
POWER_ACCESS_STAT


10949 
lsq_¥eg_ac˚ss_cou¡
 +
lsq_¥eg_ac˚ss
;

10950 
lsq_wakeup_ac˚ss_cou¡
 +
lsq_wakeup_ac˚ss
;

10956 
	`±ø˚_check_a˘ive
 (
thec⁄ãxts
[0]->
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, 
sim_cy˛e
);

10958 
	`±ø˚_√wcy˛e
 (
sim_cy˛e
);

10960 
i
 = 0; i<
numc⁄ãxts
; i++)

10964 
commô_Êag
[
i
] ++;

10967 
	`ruu_commô
 ();

10970 
	`ruu_ªÀa£_wrôebuf„r
 ();

10971 
	`ruu_wrôe_‰om_Wrôebuf„r
 ();

10975 
	`ruu_ªÀa£_fu
 ();

10977 
	`ruu_wrôeback
 ();

10980 i‡(!
bugcom∑t_mode
)

10982 
	`lsq_ª‰esh
 ();

10983 
	`ruu_issue
 ();

10986 
ggg
;

10988 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

10990 
di•©ch_d⁄e
[
ggg
] = 0;

10991 i‡(
thec⁄ãxts
[
ggg
]->
a˘ive_this_cy˛e
)

10993 
di•©ch_d⁄e
[
ggg
] = 
di•©ched
 = 
	`ruu_di•©ch
 (ggg);

10997 i‡(!
ÆlF‹ked
)

10999 #ifdef 
COLLECT_STAT_STARTUP


11000 
ggg
 = 0; ggg < 
numc⁄ãxts
; ggg++)

11002 
cﬁÀ˘SètSt›
[
ggg
] = 0;

11005 
cﬁÀ˘SètB¨rõr
 = 0;

11006 
ÆlF‹ked
 = 1;

11008 
	`öôP¨ÆÀlSimuœti⁄
 ();

11009 
cﬁÀ˘_°©s
 = 1;

11014 i‡(
ÊushImpSèts
)

11016 
ÊushImpSèts
 = 0;

11017 
cﬁÀ˘_°©s
 = 1;

11018 
sim_num_ö¢
 = 0;

11019 
ªÆSimCy˛e
 = 0;

11021 
i
 = 0; i < 
MAXTHREADS
; i++)

11023 
m_sqLQFuŒ
[
i
] = 0;

11024 
m_sqSQFuŒ
[
i
] = 0;

11025 
m_sqNumLdRïœy
[
i
] = 0;

11026 
ld°Reje˘i⁄Cou¡
[
i
] = 0;

11027 
£qC⁄sRïœy
[
i
] = 0;

11028 
£qC⁄sIn¢Rïœy
[
i
] = 0;

11031 
övÆid©i⁄_ª∂ay
[
i
] = 0;

11033 
tŸÆRUUsize
[
i
] = 
tŸÆLQsize
[i] = 
tŸÆSQsize
[i] = 0;

11035 #ifde‡
RELAXED_CONSISTENCY


11036 
lﬂdLﬂdRïœyCou¡
[
i
] = 0;

11039 
m_sqPª„tchC¡
 = 0;

11042 i‡(
timeToRëu∫
)

11044 
	`f˛o£
 (
Â_åa˚
);

11046 
i
 = 0; i < 
numc⁄ãxts
; i++)

11047 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

11048 
	`Ârötf
(
°dîr
,"[INFO 0]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

11052 
i
 = 0; i < 
numc⁄ãxts
; i++)

11054 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

11056 
tŸÆRUUsize
[
i
] +
thec⁄ãxts
[i]->
RUU_num
;

11057 
avgRUUsize
[
i
] = (1.0 * 
tŸÆRUUsize
[i]Ë/ 
ªÆSimCy˛e
;

11059 
tŸÆLQsize
[
i
] +
thec⁄ãxts
[i]->
m_shLQNum
;

11060 
avgLQsize
[
i
] = (1.0 * 
tŸÆLQsize
[i]Ë/ 
ªÆSimCy˛e
;

11063 
tŸÆSQsize
[
i
] +
thec⁄ãxts
[i]->
m_shSQNum
 + 
m_L1WBufC¡
[i];

11065 
avgSQsize
[
i
] = (1.0 * 
tŸÆSQsize
[i]Ë/ 
ªÆSimCy˛e
;

11070 #ifde‡ 
CHECK_FETCH_QUEUE


11071 
	`check_„tch_queue
 ();

11074 i‡(
bugcom∑t_mode
)

11078 
	`lsq_ª‰esh
 ();

11082 
	`ruu_issue
 ();

11085 
	`ruu_„tch
 ();

11087 
	`dú_fifo_dequeue
();

11088 
	`dú_evítq_√xãvít
();

11089 #ifde‡
LOCK_HARD


11090 
	`lock_evítq_√xãvít
();

11092 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

11093 
	`dúe˘RunSim
(
sim_cy˛e
);

11094 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

11095 
	`p›√tRunSim
(
sim_cy˛e
);

11096 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

11098 
	`dúe˘RunSim
(
sim_cy˛e
);

11099 
	`p›√tRunSim
(
sim_cy˛e
);

11102 
f
, 
j
;

11103 
f
=0; f<16; f++)

11105 if(
mem_p‹t_œt
[
f
] != 0)

11106 
mem_p‹t_œt
[
f
] --;

11108 if(!
	`my°ricmp
(
√tw‹k_ty≥
, "HYBRID"))

11110 
f
 = 0; f< 100; f++)

11111 
j
 = 0; j< 100; j++)

11112 if(
lök_£r_œt
[
f
][
j
] > 0)

11113 
lök_£r_œt
[
f
][
j
] --;

11116 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11118 
	`upd©e_powî_°©s
(
thec⁄ãxts
[0]->
powî
, 
thªadid
,Åhecontexts[threadid]);

11120 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11121 i‡(
cuºít
->
ruu_„tch_issue_dñay
)

11122 
cuºít
->
ruu_„tch_issue_dñay
--;

11124 
	`˛ór_ac˚ss_°©s
();

11130 #ifde‡ 
CHECKS


11131 
	`check_ªg
 ();

11134 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_cy˛e
 >
œ°_hŸ•Ÿ_cy˛e
 + 
hŸ•Ÿ_cy˛e_ßm∂ög_ötvl
)

11136 
	`upd©e_hŸ•Ÿ_°©s
 (
sim_cy˛e
 - 
œ°_hŸ•Ÿ_cy˛e
);

11137 
œ°_hŸ•Ÿ_cy˛e
 = 
sim_cy˛e
;

11140 
	`check_fu_busy
 ();

11141 
â
;

11143 i‡(!
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
)

11145 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11147 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11148 i‡(((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ë
max_ö°s
Ë&& cuºít->
ru¬ög
)

11150 
	`Ârötf
 (
°dîr
, "Thªad %d ha†ex˚eded max_ö°s; kûlögáŒÅhªads.\n", 
thªadid
);

11151 
kûœŒ
 = 1;

11156 
thªadid
 = 0, 
thªad_°›
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11158 
tmp
 = 0, 
tid
;

11160 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11162 i‡(((
kûœŒ
 || 
tmp
 || (
•ec_bíchm¨ks
 && 
max_ö°s
 && !
max_b¨rõr
 && ((Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë>(Ëmax_ö°s))Ë&& cuºít->
ru¬ög
))

11164 
cuºít
->
föish_cy˛e
 = (Ë(
sim_cy˛e
 - 
cy˛echeck
);

11165 
cuºít
->
ru¬ög
 = 0;

11166 
°›≥d_num_thªads
++;

11168 
a˘ivec⁄ãxts
 = 
numc⁄ãxts
 - 
°›≥d_num_thªads
;

11170 
thªad_°›
 = 1;

11171 
	`Ârötf
 (
°dîr
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

11172 
	`Ârötf
 (
°dîr
, "IPC_∑tül%d,≥∏thªad %4.3f, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

11174 i‡(
hŸ•Ÿ_a˘ive
 && 
sim_hŸ•Ÿout_fd
 !
°dîr
)

11176 
	`Ârötf
 (
sim_hŸ•Ÿout_fd
, "********Thªad %d föisháà%lu**********\n", 
thªadid
, (Ë
cuºít
->
föish_cy˛e
);

11179 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11181 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11182 i‡(
cuºít
->
föish_cy˛e
)

11183 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(cuºít->
föish_cy˛e
 - 
cy˛echeck
));

11185 
	`Ârötf
 (
°dîr
, "%4.3f, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
Ë/ (Ë(
sim_cy˛e
 - 
cy˛echeck
));

11187 
	`Ârötf
 (
°dîr
, "\n");

11188 
	`Ârötf
 (
°dîr
, "num_ö¢_∑tül%d,≥∏thªad %lu, ", 
°›≥d_num_thªads
, (Ë(
sim_num_ö¢
 - 
WARMUP
));

11190 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11192 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11193 i‡(
cuºít
->
föish_cy˛e
)

11194 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

11196 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
sim_num_ö¢
 - 
WARMUP
));

11198 
	`Ârötf
 (
°dîr
, "\n");

11199 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

11201 
	`Ârötf
 (
°dîr
, "********All finish simulation done**********\n");

11202 
	`Ârötf
 (
°dîr
, "föish_cy˛ê%lu,ÖîÅhªad , ", (Ë
sim_cy˛e
);

11203 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

11205 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11206 
	`Ârötf
 (
°dîr
, "%lu, ", (Ë(
cuºít
->
föish_cy˛e
 - 
WARMUP
));

11208 
	`Ârötf
 (
°dîr
, "\n");

11212 
now_time
 = 
	`time
 ((
time_t
 *Ë
NULL
);

11214 i‡(!
sim_cy˛e
)

11215 
¥öt_time
 = 
now_time
;

11216 
sim_ñ≠£d_£c
 = 0;

11218 i‡((Ë
sim_num_ö¢
 && ((
°›≥d_num_thªads
 =
numc⁄ãxts
Ë|| 
thªad_°›
))

11220 i‡(
°›≥d_num_thªads
 =
numc⁄ãxts
)

11222 
sim_cy˛e
 -
w¨mupEndCy˛e
;

11223 
	`Ârötf
(
°dîr
,"[INFO 1]: sim_num_ö¢=%Œu", 
puª_num_ö¢
);

11228 
	#PERIOD
 100000

	)

11229 
	#INTERVAL
 10000

	)

11230 
	#NUM_CONFIG
 3

	)

11231 #i‡
DO_DYNAMIC_ADAPTATION


11233 i‡(
mè_maxthªads
 == 1)

11235 i‡(((
sim_num_ö¢
 % 
PERIOD
Ë>0Ë&& ((sim_num_ö¢ % PERIODË< 
NUM_CONFIG
 * 
INTERVAL
))

11236 
	`≥riodic_ad≠èti⁄
 ();

11240 
	#PRINT_STATISTICS
 0

	)

11241 #i‡
PRINT_STATISTICS


11242 
	`ch™geCacheC⁄fig
 ();

11245 #ifde‡
INTERVAL_BASED


11246 i‡(!((Ë
sim_cy˛e
 % 
ADAPT_INTERVAL
) && (() sim_cycle))

11249 #ifde‡ 
EXAMIN_N_WAY_ADAPT


11250 
	`upd©e_examö_n_limô
 ();

11252 #ifde‡ 
N_WAY_ADAPT


11253 
	`upd©e_n_limô
 ();

11255 #ifde‡
THRD_PRIO_ADAPT


11256 
	`¥i‹ôy_n_way
 ();

11258 #ifde‡
PDG_THRD_ADAPT


11259 
	`pdg_thrd_n_way
 ();

11261 #ifde‡
PDG_THRD_PRIO_ADAPT


11262 
	`pdg_¥i‹ôy_n_way
 ();

11264 #ifde‡
PDG_ADAPT


11265 
	`pdg_n_way
 ();

11267 #ifde‡
N_WAY_CACHE_ADAPT


11268 
	`n_way_ˇche_ad≠t
 ();

11270 #ifde‡
INTERVAL_BASED


11274 #i‡ 
	`deföed
(
BUS_INTERCONNECT
Ë|| deföed(
CROSSBAR_INTERCONNECT
)

11275 
	`busFªe
 ();

11277 
sim_cy˛e
++;

11279 
	`ª£t_p‹ts
();

11281 #ifde‡
SEQUENTIAL_CONSISTENCY


11282 
i
 = 0; i < 
numc⁄ãxts
; i++)

11284 i‡(
övÆid©i⁄SèŒ
[
i
])

11285 
övÆid©i⁄SèŒ
[
i
]--;

11286 i‡(
commôSèŒ
[
i
])

11287 
commôSèŒ
[
i
]--;

11290 
ªÆSimCy˛e
++;

11291 
no_idól
 = 1;

11292 
i
 = 0; i < 
numc⁄ãxts
; i++)

11294 
œt
 = 1000;

11295 i‡(!
ÆlF‹ked
)

11297 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (—hec⁄ãxts[i]->
¶ïtAt
 + 1000Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
))

11299 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

11300 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

11305 i‡((
thec⁄ãxts
[
i
]->
‰ìze
 =1Ë&& (thec⁄ãxts[i]->
ru¬ög
 =0Ë&& (thec⁄ãxts[i]->
¶ïtAt
 + 
œt
 + (
	`øndom
 (Ë% 20Ë< 
sim_cy˛e
Ë&& (!
•ec_bíchm¨ks
Ë&& 
no_idól
)

11307 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

11308 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

11309 i‡(
cﬁÀ˘_°©s
)

11310 
quõn£Wakeup
[
i
]++;

11315 i‡(((!
max_b¨rõr
 && (
puª_num_ö¢
 > 
execuãMaxIn¢
)Ë|| (max_b¨rõ∏&& 
TŸÆB¨rõrs
 >max_b¨rõr)Ë&& 
cﬁÀ˘_°©s
)

11317 
i
 = 0; i < 
numc⁄ãxts
; i++)

11318 
simIn¢
[
i
] = 
thec⁄ãxts
[i]->
sim_num_ö¢
;

11319 
i
 = 0; i < 
numc⁄ãxts
; i++)

11321 
ˇche_t
 *
˝
 = 
ˇche_dl1
[
i
];

11322 
j
 = 0, 
£t
 = 0, 
m
 = 0;

11323 
ˇche_blk_t
 *
blk
;

11324 
j
=0;j<
˝
->
n£ts
;j++)

11326 
blk
 = 
˝
->
£ts
[
j
].
way_hód
; blk; blk = blk->
way_√xt
)

11328 
m
=0;m<8;m++)

11329 if(
blk
->
W‹dU£Fœg
[
m
])

11330 
blk
->
W‹dCou¡
 ++;

11331 
	`°©s_do
(
blk
->
addr
, blk->
RódCou¡
, blk->
WrôeCou¡
, blk->
W‹dCou¡
, blk->
Ty≥
, 
i
);

11335 
	`°©s_cﬁÀ˘
();

11336 
	`Ârötf
(
°dîr
,"[INFO 2]: sim_num_ö¢=%Œu, b¨rõrs=%d", 
puª_num_ö¢
, 
TŸÆB¨rõrs
);

11339 i‡(
unPrötLimô
 < 
STATUS_NUM
 && (
puª_num_ö¢
 >(unPrötLimô * (
max_ö°s
 / STATUS_NUM))))

11341 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "FSOI") || !mystricmp (network_type, "HYBRID"))

11343 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11344 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d\%\td©a_∑ckës_gíî©e=%d\t", 
sim_cy˛e
, 
puª_num_ö¢
, ()((
unPrötLimô
 * 100Ë/ 
STATUS_NUM
), 
globÆ_d©a_∑ckës_gíî©i⁄
);

11346 i‡(!
	`my°ricmp
 (
√tw‹k_ty≥
, "MESH"))

11348 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\t", 
sim_cy˛e
);

11349 
	`¥ötf
 ("sim_num_ö¢=%Œd\t", 
puª_num_ö¢
);

11350 
	`¥ötf
 ("Progªss=%d%\t", (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11351 
	`¥ötf
 ("d©a_∑ckës_gíî©e=%d\t",
D©aPackës_1
);

11352 
	`¥ötf
 ("mëa_∑ckës=%d\t", 
MëaPackës_1
);

11353 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\t", 
sim_cy˛e
);

11354 
	`Ârötf
 (
°dîr
, "sim_num_ö¢=%Œd\t", 
puª_num_ö¢
);

11355 
	`Ârötf
 (
°dîr
, "Progªss=%d\t", (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11356 
	`Ârötf
 (
°dîr
, "d©a_∑ckës_gíî©e=%d\t", 
D©aPackës_1
);

11357 
	`Ârötf
 (
°dîr
, "mëa_∑ckës=%d\t", 
MëaPackës_1
);

11359 i‡((!
	`my°ricmp
 (
√tw‹k_ty≥
, "COMB")))

11361 
	`¥ötf
 ("[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11362 
	`Ârötf
 (
°dîr
, "[INFO]: sim_cy˛e%Œd\tsim_num_ö¢=%Œd\tProgªss=%d%\t", 
sim_cy˛e
, 
puª_num_ö¢
, (
unPrötLimô
 * 100Ë/ 
STATUS_NUM
);

11364 
	`fÊush
 (
°dîr
);

11365 
	`fÊush
 (
°dout
);

11367 
löe_˛ass
 = 
	`f›í
 ("line_class.txt", "w");

11368 
ve˘‹_di°r_fûe
 = 
	`f›í
 ("vector_distr_file.txt", "w");

11369 
ve˘‹_öc_di°r_fûe
 = 
	`f›í
 ("vector_inc_distr_file.txt", "w");

11370 
i
,
j
;

11371 
SWP_tŸÆ_löe
 = 0;

11372 
SWP_sw_löe
 = 0;

11373 
SWP_§_löe
 = 0;

11374 
SWP_pw_löe
 = 0;

11375 
SWP_¥_löe
 = 0;

11376 
i
=0;i<
PAGE_NUM
;i++)

11379 if(!
∑ge_èbÀ
[
i
]->
vÆid
)

11381 if(
∑ge_èbÀ
[
i
]->
°©e
 !
SHARED_WRITE
 )

11385 
j
=0;j<(
MD_PAGE_SIZE
/
ˇche_dl1
[0]->
bsize
);j++)

11387 if(
∑ge_èbÀ
[
i
]->
löe_hód
[
j
].
löe_°©e
 != -1)

11388 
SWP_tŸÆ_löe
++;

11389 if(
∑ge_èbÀ
[
i
]->
löe_hód
[
j
].
löe_°©e
 =
SHARED_WRITE
)

11390 
SWP_sw_löe
++;

11391 if(
∑ge_èbÀ
[
i
]->
löe_hód
[
j
].
löe_°©e
 =
SHARED_READ
)

11392 
SWP_§_löe
++;

11393 if(
∑ge_èbÀ
[
i
]->
löe_hód
[
j
].
löe_°©e
 =
PRIVATE_WRITE
)

11394 
SWP_pw_löe
++;

11395 if(
∑ge_èbÀ
[
i
]->
löe_hód
[
j
].
löe_°©e
 =
PRIVATE_READ
)

11396 
SWP_¥_löe
++;

11400 
	`Ârötf
(
löe_˛ass
,"%d:\t", 
∑ge_èbÀ
[
i
]->
°©e
 );

11401 
j
=0;j<(
MD_PAGE_SIZE
/
ˇche_dl1
[0]->
bsize
);j++)

11402 
	`Ârötf
(
löe_˛ass
,"%d\t", 
∑ge_èbÀ
[
i
]->
löe_hód
[
j
].
löe_°©e
 );

11403 
	`Ârötf
(
löe_˛ass
,"\n");

11406 
i
=0;i<
ˇche_ml2
->
n£ts
;i++)

11408 
	`Ârötf
(
ve˘‹_di°r_fûe
,"%d\t", 
ˇche_ml2
->
£ts
[
i
].
PVC_ve˘‹_di°r_ªc‹d_num
 );

11409 
j
=0;j<=
ˇche_ml2
->
assoc
;j++)

11410 
	`Ârötf
(
ve˘‹_di°r_fûe
,"%d\t", 
ˇche_ml2
->
£ts
[
i
].
PVC_ve˘‹_di°r
[
j
] );

11411 
	`Ârötf
(
ve˘‹_di°r_fûe
,"\n");

11413 
	`Ârötf
(
ve˘‹_öc_di°r_fûe
,"%d\t", 
ˇche_ml2
->
£ts
[
i
].
PVC_ve˘‹_öc_di°r_ªc‹d_num
 );

11414 
j
=0;j<=
ˇche_ml2
->
assoc
;j++)

11415 
	`Ârötf
(
ve˘‹_öc_di°r_fûe
,"%d\t", 
ˇche_ml2
->
£ts
[
i
].
PVC_ve˘‹_öc_di°r
[
j
] );

11416 
	`Ârötf
(
ve˘‹_öc_di°r_fûe
,"\n");

11418 
	`f˛o£
 (
löe_˛ass
);

11419 
	`f˛o£
 (
ve˘‹_di°r_fûe
);

11420 
	`f˛o£
 (
ve˘‹_öc_di°r_fûe
);

11422 
	`¥ötf
("b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

11423 
	`Ârötf
(
°dîr
, "b¨rõrs=%Œd\éocks=%Œd\n", 
TŸÆB¨rõrs
, 
TŸÆLocks
);

11424 
	`fÊush
 (
°dîr
);

11425 
	`fÊush
 (
°dout
);

11426 
unPrötLimô
++;

11427 
globÆ_d©a_∑ckës_gíî©i⁄
 = 0;

11428 
TŸÆ_MëaPackës_1
 +
MëaPackës_1
;

11429 
TŸÆ_D©aPackës_1
 +
D©aPackës_1
;

11430 
D©aPackës_1
 = 0;

11431 
MëaPackës_1
 = 0;

11438 
	`gë_‰ì_ªg
 (
Ãegnum
, 
thªadid
)

11440 
ãmpvÆ
;

11441 
li°ñt
 *
ãmp
;

11443 
c⁄ãxt
 *
cuºít
;

11445 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11447 i‡((
Ãegnum
 < 1) || (lregnum > 62))

11449 i‡(
Ãegnum
 < 32)

11451 i‡(!
i‰ìli°_hód
[
thªadid
])

11453 
	`¥ötf
 ("Num o‡IREG=%d\n", 
úegfûe
);

11454 
	`Ârötf
 (
°dîr
, "Num o‡IREG=%d\n", 
úegfûe
);

11455 
	`∑nic
 ("Out ofÑegisters?!");

11458 
ãmp
 = 
i‰ìli°_hód
[
thªadid
];

11459 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11460 
i‰ìli°_hód
[
thªadid
] = i‰ìli°_hód[thªadid]->
√xt
;

11461 i‡(!
i‰ìli°_hód
[
thªadid
])

11462 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11463 i‡(
i‰ìli°_hód
[
thªadid
])

11464 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11465 
	`‰ì
 (
ãmp
);

11466 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11467 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11468 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11469 #ifde‡ 
REMOVE_REG_COUNT


11470 
úegfûe
++;

11472 
úegfûe_˛
[
thªadid
]++;

11473  
ãmpvÆ
;

11477 i‡(!
f‰ìli°_hód
[
thªadid
])

11479 
	`¥ötf
 ("Num o‡FREG=%d\n", 
‰egfûe
);

11480 
	`Ârötf
 (
°dîr
, "Num o‡FREG=%d\n", 
‰egfûe
);

11481 
	`∑nic
 ("Out ofÑegisters?!");

11484 
ãmp
 = 
f‰ìli°_hód
[
thªadid
];

11485 
ãmpvÆ
 = 
ãmp
->
¥eg
;

11486 
f‰ìli°_hód
[
thªadid
] = f‰ìli°_hód[thªadid]->
√xt
;

11487 i‡(!
f‰ìli°_hód
[
thªadid
])

11488 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11489 i‡(
f‰ìli°_hód
[
thªadid
])

11490 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
NULL
;

11491 
	`‰ì
 (
ãmp
);

11492 
cuºít
->
…›m≠
[
Ãegnum
] = 
ãmpvÆ
;

11493 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
Ãeg
 = 
Ãegnum
;

11494 
cuºít
->
±ﬁm≠
[
ãmpvÆ
].
thªadid
 =Åhreadid;

11495 #ifde‡ 
REMOVE_REG_COUNT


11496 
‰egfûe
++;

11498 
‰egfûe_˛
[
thªadid
]++;

11499  
ãmpvÆ
;

11505 
	`‰ìli°_ö£π
 (
¥egnum
, 
thªadid
)

11507 
li°ñt
 *
ñt
;

11508 
li°ñt
 *
p
;

11509 
li°ñt
 *
q
;

11511 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11514 i‡(
thªadid
 == 0)

11516 
p
 = 
i‰ìli°_hód
[
thªadid
];

11517 
p
)

11519 
q
 = 
p
;

11520 
p
 =Ö->
√xt
;

11525 i‡(!
¥egnum
)

11527 i‡(
¥egnum
 <
IPREG_size
)

11529 #ifde‡ 
REMOVE_REG_COUNT


11530 
úegfûe
--;

11532 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11533 
ñt
->
¥eg
 = 
¥egnum
;

11534 i‡(
i‰ìli°_èû
[
thªadid
])

11536 
p
 = 
i‰ìli°_hód
[
thªadid
];

11537 
q
 = 
NULL
;

11538 
p
 && (p->
¥eg
 < 
¥egnum
))

11540 
q
 = 
p
;

11541 
p
 =Ö->
√xt
;

11543 i‡(!
p
 || !
SORT
)

11545 
i‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11546 
ñt
->
¥ev
 = 
i‰ìli°_èû
[
thªadid
];

11547 
ñt
->
√xt
 = 
NULL
;

11548 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11550 i‡(
q
)

11552 
q
->
√xt
 = 
ñt
;

11553 
ñt
->
¥ev
 = 
q
;

11554 
ñt
->
√xt
 = 
p
;

11555 
p
->
¥ev
 = 
ñt
;

11559 
ñt
->
√xt
 = 
i‰ìli°_hód
[
thªadid
];

11560 
i‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11561 
ñt
->
¥ev
 = 
NULL
;

11562 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11567 
ñt
->
√xt
 = 
NULL
;

11568 
ñt
->
¥ev
 = 
NULL
;

11569 
i‰ìli°_èû
[
thªadid
] = 
ñt
;

11570 
i‰ìli°_hód
[
thªadid
] = 
ñt
;

11572 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11573 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11574 
úegfûe_˛
[
thªadid
]--;

11578 #ifde‡ 
REMOVE_REG_COUNT


11579 
‰egfûe
--;

11581 
ñt
 = (
li°ñt
 *Ë
	`mÆloc
 ( (listelt));

11582 
ñt
->
¥eg
 = 
¥egnum
;

11583 i‡(
f‰ìli°_èû
[
thªadid
])

11585 
p
 = 
f‰ìli°_hód
[
thªadid
];

11586 
q
 = 
NULL
;

11587 
p
 && (p->
¥eg
 < 
¥egnum
))

11589 
q
 = 
p
;

11590 
p
 =Ö->
√xt
;

11592 i‡(!
p
 || !
SORT
)

11594 
f‰ìli°_èû
[
thªadid
]->
√xt
 = 
ñt
;

11595 
ñt
->
¥ev
 = 
f‰ìli°_èû
[
thªadid
];

11596 
ñt
->
√xt
 = 
NULL
;

11597 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11599 i‡(
q
)

11601 
q
->
√xt
 = 
ñt
;

11602 
ñt
->
¥ev
 = 
q
;

11603 
ñt
->
√xt
 = 
p
;

11604 
p
->
¥ev
 = 
ñt
;

11608 
ñt
->
√xt
 = 
f‰ìli°_hód
[
thªadid
];

11609 
f‰ìli°_hód
[
thªadid
]->
¥ev
 = 
ñt
;

11610 
ñt
->
¥ev
 = 
NULL
;

11611 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11616 
ñt
->
√xt
 = 
NULL
;

11617 
ñt
->
¥ev
 = 
NULL
;

11618 
f‰ìli°_èû
[
thªadid
] = 
ñt
;

11619 
f‰ìli°_hód
[
thªadid
] = 
ñt
;

11621 
‰egfûe_˛
[
thªadid
]--;

11622 
cuºít
->
±ﬁm≠
[
¥egnum
].
Ãeg
 = 0;

11623 
cuºít
->
±ﬁm≠
[
¥egnum
].
thªadid
 = -1;

11628 
	`ªcFªeRegLi°
 (
thªadid
)

11630 
li°ñt
 *
p
;

11631 
li°ñt
 *
ãmp
;

11632 
cou¡
 = 0;

11633 
i
;

11635 
p
 = 
i‰ìli°_hód
[
thªadid
];

11636 i‡(
p
)

11638 
cou¡
++;

11639 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11641 
cou¡
++;

11642 
ãmp
 = 
p
;

11643 
p
 =Ö->
√xt
;

11644 
	`‰ì
 (
ãmp
);

11648 
p
 = 
f‰ìli°_hód
[
thªadid
];

11649 i‡(
p
)

11651 
cou¡
++;

11652 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11654 
cou¡
++;

11655 
ãmp
 = 
p
;

11656 
p
 =Ö->
√xt
;

11657 
	`‰ì
 (
ãmp
);

11661 
	`ªg_öô
 (
thªadid
);

11665 
	`numFªeReg
 (
thªadid
)

11667 
li°ñt
 *
p
;

11668 
cou¡
 = 0;

11670 
p
 = 
i‰ìli°_hód
[
thªadid
];

11671 i‡(
p
)

11673 
cou¡
++;

11674 (
p
 !
i‰ìli°_èû
[
thªadid
]) &&Ö)

11676 
cou¡
++;

11677 
p
 =Ö->
√xt
;

11681 
p
 = 
f‰ìli°_hód
[
thªadid
];

11682 i‡(
p
)

11684 
cou¡
++;

11685 (
p
 !
f‰ìli°_èû
[
thªadid
]) &&Ö)

11687 
cou¡
++;

11688 
p
 =Ö->
√xt
;

11691  
cou¡
;

11696 
	`c›y_to
 (
thªadid
)

11698 
i
;

11700 
c⁄ãxt
 *
cuºít
;

11702 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11704 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11706 
cuºít
->
…›m≠_chk
[
i
] = cuºít->
…›m≠
[i];

11708 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11710 i‡(
cuºít
->
±ﬁm≠
[
i
].
thªadid
 ==Åhreadid)

11712 
cuºít
->
±ﬁm≠_chk
[
i
].
Ãeg
 = cuºít->
±ﬁm≠
[i].lreg;

11713 
cuºít
->
±ﬁm≠_chk
[
i
].
thªadid
 = cuºít->
±ﬁm≠
[i].threadid;

11720 
	`c›y_‰om
 (
thªadid
)

11722 
i
;

11724 
c⁄ãxt
 *
cuºít
;

11726 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11728 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

11730 
cuºít
->
…›m≠
[
i
] = cuºít->
…›m≠_chk
[i];

11736 
	`b¥ed_öô
 (
i
)

11739 i‡(
ruu_bønch_≥«…y
 < 1)

11740 
	`Áèl
 ("mis-predictionÖenalty must beátÜeast 1 cycle");

11742 i‡(
„tch_•ìd
 != 1)

11743 
	`Áèl
 ("front-end speed must be 1 for SMT version of simulator");

11745 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "bimod"))

11747 i‡(
bimod_√…
 != 1)

11748 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11749 i‡(
btb_√…
 != 2)

11750 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11751 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2bô
,

11752  
bimod_c⁄fig
[0],

11758  
btb_c⁄fig
[0],

11759  
btb_c⁄fig
[1],

11760  
øs_size
);

11762 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "2lev"))

11765 i‡(
twﬁev_√…
 != 4)

11766 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11767 i‡(
btb_√…
 != 2)

11768 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11770 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªd2Levñ
,

11772  
twﬁev_c⁄fig
[0],

11773  
twﬁev_c⁄fig
[1],

11775  
twﬁev_c⁄fig
[2],

11776  
twﬁev_c⁄fig
[3],

11777  
btb_c⁄fig
[0],

11778  
btb_c⁄fig
[1],

11779  
øs_size
);

11781 i‡(!
	`my°ricmp
 (
¥ed_ty≥
, "comb"))

11784 i‡(
twﬁev_√…
 != 4)

11785 
	`Áèl
 ("bad 2-levelÖred config (<l1size> <l2size> <hist_size> <xor>)");

11786 i‡(
bimod_√…
 != 1)

11787 
	`Áèl
 ("bad bimodÖredictor config (<table_size>)");

11788 i‡(
comb_√…
 != 1)

11789 
	`Áèl
 ("bad combiningÖredictor config (<meta_table_size>)");

11790 i‡(
btb_√…
 != 2)

11791 
	`Áèl
 ("bad btb config (<num_sets> <associativity>)");

11793 
thec⁄ãxts
[
i
]->
¥ed
 = 
	`b¥ed_¸óã
 (
BPªdComb
,

11794  
bimod_c⁄fig
[0],

11795  
twﬁev_c⁄fig
[0],

11796  
twﬁev_c⁄fig
[1],

11797  
comb_c⁄fig
[0],

11798  
twﬁev_c⁄fig
[2],

11799  
twﬁev_c⁄fig
[3],

11800  
btb_c⁄fig
[0],

11801  
btb_c⁄fig
[1],

11802  
øs_size
);

11805 i‡(!
b¥ed_•ec_›t
)

11806 
b¥ed_•ec_upd©e
 = 
•ec_CT
;

11807 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "ID"))

11808 
b¥ed_•ec_upd©e
 = 
•ec_ID
;

11809 i‡(!
	`my°ricmp
 (
b¥ed_•ec_›t
, "WB"))

11810 
b¥ed_•ec_upd©e
 = 
•ec_WB
;

11812 
	`Áèl
 ("bad speculative update stage specifier, use {ID|WB}");

11814 
	`b¥ed_ªg_°©s
 (
thec⁄ãxts
[
i
]->
¥ed
, 
sim_sdb
, i);

11819 
	`ªg_öô
 (
thªadid
)

11821 
i
;

11823 
c⁄ãxt
 *
cuºít
;

11825 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11827 
i‰ìli°_hód
[
thªadid
] = 
NULL
;

11828 
i‰ìli°_èû
[
thªadid
] = 
NULL
;

11829 
f‰ìli°_hód
[
thªadid
] = 
NULL
;

11830 
f‰ìli°_èû
[
thªadid
] = 
NULL
;

11832 #ifde‡ 
REMOVE_REG_COUNT


11835 
úegfûe
 = 
IPREG_size
;

11836 
‰egfûe
 = 
FPREG_size
;

11838 
i
 = 0; i < 
p_tŸÆ_ªgs
; i++)

11840 
	`‰ìli°_ö£π
 (
i
, 
thªadid
);

11841 
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 = 0;

11842 
cuºít
->
±ﬁm≠
[
i
].
thªadid
 = -1;

11844 
úegfûe_˛
[
thªadid
] = 0;

11845 
‰egfûe_˛
[
thªadid
] = 0;

11846 #i‚de‡ 
NO_REG_INIT


11848 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11849 
i
 = 0; i < 63; i++)

11851 
cuºít
->
…›m≠
[
i
] = 
	`gë_‰ì_ªg
 (i, 
thªadid
);

11853 
i
 = 63; i < 
MD_TOTAL_REGS
; i++)

11854 
cuºít
->
…›m≠
[
i
] = 0;

11861 
	`ªg_cou¡
 ()

11864 
úegfûe
 = 0;

11865 
‰egfûe
 = 0;

11866 
i
, 
j
;

11867 
c⁄ãxt
 *
cuºít
;

11869 
j
 = 0; j < 
numc⁄ãxts
; j++)

11871 
cuºít
 = 
thec⁄ãxts
[
j
];

11872 
i
 = 1; i < 
p_tŸÆ_ªgs
; i++)

11874 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 0Ë&& (cuºít->±ﬁm≠[i].Ãeg < 32Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11876 
úegfûe
++;

11878 i‡((
cuºít
->
±ﬁm≠
[
i
].
Ãeg
 > 31Ë&& (cuºít->±ﬁm≠[i].Ãeg < 63Ë&& cuºít->±ﬁm≠[i].
thªadid
 != -1)

11880 
‰egfûe
++;

11884 i‡(
úegfûe
 < 31)

11885 
	`∑nic
 ("phys iregfileÜessÅhan 31");

11886 i‡(
‰egfûe
 < 31)

11887 
	`∑nic
 ("phys fregfileÜessÅhan 31");

11892 
	`öôP¨ÆÀlSimuœti⁄
 ()

11894 
˙t
, 
cx
, 
j
;

11895 
x
, 
y
, 
z
, 
max
;

11897 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

11898 
thec⁄ãxts
[
˙t
]->
°¨t_cy˛e
 = 
sim_cy˛e
;

11900 
cx
 = 0; cx < 
numc⁄ãxts
; cx++)

11902 
thec⁄ãxts
[
cx
]->
„tch_num
 = 0;

11903 
thec⁄ãxts
[
cx
]->
„tch_èû
 =Åhec⁄ãxts[cx]->
„tch_hód
 = 0;

11904 
thec⁄ãxts
[
cx
]->
„tch_¥ed_PC
 =Åhec⁄ãxts[cx]->
„tch_ªgs_PC
 =Åhec⁄ãxts[cx]->
ªgs
.
ªgs_NPC
;

11905 
cﬁÀ˘SètSt›
[
cx
] = 0;

11906 
thec⁄ãxts
[
cx
]->
sim_num_ö¢
 = 0;

11908 
cﬁÀ˘SètB¨rõr
 = 0;

11909 
ÆlF‹ked
 = 1;

11956 
	`checkLSQf‹St
 (
i
, 
c⁄ãxt
 * 
cuºít
)

11959 
RUU_°©i⁄
 *
rs
 = &
cuºít
->
LSQ
[
i
];

11960 
nW1
 = 
	`GëMemAccWidth
 (
rs
->
›
);

11962 i‡(
i
 !
cuºít
->
LSQ_hód
)

11966 
i
 = (ò+ (
LSQ_size
 - 1)) % LSQ_size;

11968 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
i
].
›
Ë& 
F_STORE
Ë&& (
	`STORE_ADDR_READY
 (&cuºít->LSQ[i])Ë&& (cuºít->LSQ[i].
thªadid
 =
rs
->threadid))

11970 
nW2
 = 
	`GëMemAccWidth
 (
cuºít
->
LSQ
[
i
].
›
);

11971 
nW
 = (
nW1
 >
nW2
) ?ÇW1 :ÇW2;

11972 
md_addr_t
 
qwAddr1
 = 
rs
->
addr
 & ~(
nW
 - 1);

11973 
md_addr_t
 
qwAddr2
 = 
cuºít
->
LSQ
[
i
].
addr
 & ~(
nW
 - 1);

11975 i‡(
qwAddr1
 =
qwAddr2
)

11977 i‡(
cuºít
->
LSQ
[
i
].
issued
)

11983 i‡(
i
 =
cuºít
->
LSQ_hód
)

11993 
	`£qC⁄si°™cyRïœy
 (
ª∂ay_ödex
, 
thªadid
)

11995 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

11996 
i
, 
RUU_ödex
, 
LSQ_ödex
, 
ãmp_RUU_num
, 
j
, 
°‹eCou¡
 = 
m_L1WBufC¡
[
thªadid
];

11997 
wb_mem_ít
 *
lök
;

11999 
RUU_°©i⁄
 *
ãmp_LSQ_rs
;

12000 
ãmp_LSQ_ödex
, 
ãmp_LSQ_num
;

12001 
shi·_right
 = 0;

12004 
£qC⁄sRïœy
[
cuºít
->
a˘uÆid
]++;

12006 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

12007 
ãmp_RUU_num
 = 
cuºít
->
RUU_num
;

12008 
LSQ_ödex
 = 
cuºít
->
LSQ_hód
;

12009 
ãmp_LSQ_num
 = 
cuºít
->
LSQ_num
;

12011 i‡(!
cuºít
->
RUU_num
)

12012 
	`∑nic
 ("empty RUU");

12014 
RUU_ödex
 !
ª∂ay_ödex
)

12017 i‡(!
ãmp_RUU_num
)

12018 
	`∑nic
 ("empty RUU");

12021 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

12023 i‡(
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& 
F_STORE
)

12025 
width
 = 
	`GëMemAccWidth
(
cuºít
->
LSQ
[
LSQ_ödex
].
›
);

12027 i‡((
width
 & (width - 1)Ë=0 && (
cuºít
->
LSQ
[
LSQ_ödex
].
addr
 & (width - 1)Ë=0 && !cuºít->LSQ[LSQ_ödex].
isPª„tch
)

12028 
°‹eCou¡
++;

12030 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

12031 
ãmp_LSQ_num
--;

12033 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

12034 
ãmp_RUU_num
--;

12037 
RUU_ödex
 !
cuºít
->
RUU_èû
)

12040 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
)

12042 
cuºít
->
iissueq_thrd
--;

12043 
iissueq
--;

12044 
iissueq_˛
[
cuºít
->
id
]--;

12045 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_iissueq
 = 0;

12047 i‡(
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
)

12049 
cuºít
->
fissueq_thrd
--;

12050 
fissueq
--;

12051 
fissueq_˛
[
cuºít
->
id
]--;

12052 
cuºít
->
RUU
[
RUU_ödex
].
cou¡ed_fissueq
 = 0;

12055 
cuºít
->
sim_num_ö¢
--;

12056 
sim_num_ö¢
--;

12057 
£qC⁄sIn¢Rïœy
[
cuºít
->
a˘uÆid
]++;

12059 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ó_comp
)

12061 i‡(!
ãmp_LSQ_num
)

12062 
	`∑nic
 ("RUUánd LSQ out of sync");

12064 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
)

12066 
cuºít
->
iissueq_thrd
--;

12067 
iissueq
--;

12068 
iissueq_˛
[
cuºít
->
id
]--;

12069 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_iissueq
 = 0;

12071 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
)

12073 
cuºít
->
fissueq_thrd
--;

12074 
fissueq
--;

12075 
fissueq_˛
[
cuºít
->
id
]--;

12076 
cuºít
->
LSQ
[
LSQ_ödex
].
cou¡ed_fissueq
 = 0;

12079 
i
 = 0; i < 
MAX_ODEPS
; i++)

12081 
	`RSLINK_FREE_LIST
 (
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
]);

12082 
cuºít
->
LSQ
[
LSQ_ödex
].
odï_li°
[
i
] = 
NULL
;

12085 i‡(
cuºít
->
LSQ
[
LSQ_ödex
].
›
 =
STL_C
 || cuºít->LSQ[LSQ_ödex].› =
STQ_C
)

12087 
cuºít
->
waôF‹STLC
 = 0;

12089 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
cuºít
->
LSQ
[
LSQ_ödex
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

12090 if(
m©chnum
)

12092 
m©chnum
 = matchnum-1;

12093 
RUU_°©i⁄
 *
rs_rob
 = &
cuºít
->
RUU
[
RUU_ödex
];

12094 
RUU_°©i⁄
 *
rs_lsq
 = &
cuºít
->
LSQ
[
LSQ_ödex
];

12096 if(
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
rs
 =
rs_rob
 || cache_dl1[thªadid]->mshr->mshrE¡ry[m©chnum].r†=
rs_lsq
)

12097 
ˇche_dl1
[
thªadid
]->
mshr
->
mshrE¡ry
[
m©chnum
].
evít
->
rs
 = 
NULL
;

12099 
RS_li°
 *
cur
 = 
rs_ˇche_li°
[
thªadid
][
m©chnum
];

12101 
cur
)

12103 if(
cur
->
rs
 =
rs_rob
 || cur->r†=
rs_lsq
)

12104 
cur
->
rs
 = 
NULL
;

12105 
cur
 = cur->
√xt
;

12108 
	`‰ìli°_ö£π
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›ªg
, 
thªadid
);

12109 
	`ch™geInEvítQueue
(&
cuºít
->
LSQ
[
LSQ_ödex
], 
thªadid
);

12110 
cuºít
->
LSQ
[
LSQ_ödex
].
èg
++;

12111 
	`±ø˚_ídö°
 (
cuºít
->
LSQ
[
LSQ_ödex
].
±ø˚_£q
);

12112 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_LOAD
)) == (F_MEM | F_LOAD))

12114 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

12115 
cuºít
->
m_shLQNum
--;

12117 i‡((
	`MD_OP_FLAGS
 (
cuºít
->
LSQ
[
LSQ_ödex
].
›
Ë& (
F_MEM
 | 
F_STORE
)) == (F_MEM | F_STORE))

12119 i‡(!
cuºít
->
LSQ
[
LSQ_ödex
].
isPª„tch
)

12120 
cuºít
->
m_shSQNum
--;

12123 
cuºít
->
LSQ_èû
 = (cuºít->LSQ_èû + 
LSQ_size
 - 1) % LSQ_size;

12124 
LSQ_ödex
 = (LSQ_ödex + 1Ë% 
LSQ_size
;

12125 
cuºít
->
LSQ_num
--;

12126 
ãmp_LSQ_num
--;

12131 
i
 = 0; i < 
MAX_ODEPS
; i++)

12133 
	`RSLINK_FREE_LIST
 (
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
]);

12134 
cuºít
->
RUU
[
RUU_ödex
].
odï_li°
[
i
] = 
NULL
;

12136 
	`‰ìli°_ö£π
 (
cuºít
->
RUU
[
RUU_ödex
].
›ªg
, 
thªadid
);

12137 
	`ch™geInEvítQueue
(&
cuºít
->
RUU
[
RUU_ödex
], 
thªadid
);

12138 
cuºít
->
RUU
[
RUU_ödex
].
èg
++;

12139 
	`±ø˚_ídö°
 (
cuºít
->
RUU
[
RUU_ödex
].
±ø˚_£q
);

12140 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

12141 
cuºít
->
RUU_num
--;

12143 
cuºít
->
RUU_èû
 = 
ª∂ay_ödex
;

12146 
lök
 = 
cuºít
->
WBèbÀTaû
;

12148 i‡(
lök
 =
NULL
 || 
°‹eCou¡
 == 0)

12150 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
 = 
NULL
;

12151 i‡(
lök
 !
NULL
)

12153 
lök
 !
NULL
)

12155 
cuºít
->
numOfWBE¡ry
--;

12156 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

12157 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

12158 
lök
 =Üök->
¥ev
;

12159 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

12165 
cuºít
->
WBèbÀHód
 = cuºít->
WBèbÀTaû
;

12166 
°‹eCou¡
--;

12167 
°‹eCou¡
)

12169 
cuºít
->
WBèbÀHód
 = cuºít->WBèbÀHód->
¥ev
;

12170 
°‹eCou¡
--;

12172 
lök
 = 
cuºít
->
WBèbÀHód
->
¥ev
;

12173 
cuºít
->
WBèbÀHód
->
¥ev
 = 
NULL
;

12175 
lök
 !
NULL
)

12177 
cuºít
->
numOfWBE¡ry
--;

12178 
lök
->
√xt
 = 
cuºít
->
WBbuckë_‰ì_li°
;

12179 
cuºít
->
WBbuckë_‰ì_li°
 = 
lök
;

12180 
lök
 =Üök->
¥ev
;

12181 
cuºít
->
WBbuckë_‰ì_li°
->
¥ev
 = 
NULL
;

12185 
i
 = 0; i < 
MD_TOTAL_REGS
; i++)

12187 
cuºít
->
¸óã_ve˘‹
[
i
] = 
CVLINK_NULL
;

12188 
cuºít
->
¸óã_ve˘‹_π
[
i
] = 
sim_cy˛e
;

12191 if(
cuºít
->
ruu_„tch_issue_dñay
 < 
WAIT_TIME
/2)

12192 
cuºít
->
ruu_„tch_issue_dñay
 = 
ruu_bønch_≥«…y
;

12195 
md_›code
 
›
;

12197 
j
 = 
cuºít
->
„tch_num
;

12198 
i
 = 
cuºít
->
„tch_hód
; 
j
 > 0;)

12200 
	`MD_SET_OPCODE
 (
›
, 
cuºít
->
„tch_d©a
[
i
]->
IR
);

12201 
i
 = (ò+ 1Ë& (
ruu_ifq_size
 - 1);

12202 
j
--;

12204 
cuºít
->
„tch_num
 = 0;

12205 
cuºít
->
„tch_èû
 = cuºít->
„tch_hód
 = 0;

12206 
cuºít
->
„tch_¥ed_PC
 = cuºít->
„tch_ªgs_PC
 = cuºít->
ªgs
.
ªgs_NPC
 = cuºít->ªgs.
ªgs_PC
;

12214 
	`fixS≥cSèã
 (
ª∂ay_ödex
, 
thªadid
)

12217 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12218 
RUU_°©i⁄
 *
rs
;

12219 
i
, 
RUU_ödex
;

12221 
RUU_ödex
 = 
cuºít
->
RUU_hód
;

12223 
RUU_ödex
 !
ª∂ay_ödex
)

12225 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

12228 
RUU_ödex
 !
cuºít
->
RUU_èû
)

12230 i‡(
cuºít
->
RUU
[
RUU_ödex
].
ªcovî_ö°
 && !cuºít->RUU[RUU_ödex].
com∂ëed
)

12232 
rs
 = &
cuºít
->
RUU
[
RUU_ödex
];

12233 
	`ruu_ªcovî
 (
rs
 - 
cuºít
->
RUU
,Ñs->
thªadid
, 0);

12234 
	`åa˚r_ªcovî
 (
rs
->
thªadid
);

12235 
	`b¥ed_ªcovî
 (
cuºít
->
¥ed
, 
rs
->
PC
,Ñs->
°ack_ªcovî_idx
,Ñs->
thªadid
);

12238 
RUU_ödex
 = (RUU_ödex + 1Ë% 
RUU_size
;

12245 
	`ruu_ªÀa£_wrôebuf„r
 ()

12247 
thªadid
, 
i
, 
˙t
, 
j
;

12249 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12251 
j
 = 
m_L1WBufC¡
[
thªadid
];

12252 
˙t
 = 0;

12253 
i
 = 
m_L1WBuf_hód
[
thªadid
];

12255 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

12256 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

12258 
˙t
 !
j
)

12260 i‡(
sim_cy˛e
 >
m_L1WBuf
[
thªadid
][
i
].
föishTime
 && m_L1WBuf[thªadid][i].
wrôeSèπed
)

12262 if(
m_L1WBuf
[
thªadid
][
i
].
isMiss
 && 
	`MSHR_block_check
(
ˇche_dl1
[thªadid]->
mshr
, m_L1WBuf[thªadid][i].
addr
, cache_dl1[thªadid]->
£t_shi·
))

12264 if(!
m_L1WBuf
[
thªadid
][
i
].
commôD⁄e
)

12267 
	`com∂ëeSt‹e
(
thªadid
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
	`GëMemAccWidth
(m_L1WBuf[thªadid][i].
›
), m_L1WBuf[thªadid][i].
STL_C_Áû
);

12268 
m_L1WBuf
[
thªadid
][
i
].
STL_C_Áû
 = 0;

12271 
m_L1WBufC¡
[
thªadid
]--;

12272 
m_L1WBuf_hód
[
thªadid
] = (m_L1WBuf_hód[thªadid] + 1Ë% 
SMD_L1_WBUF_SIZE
;

12273 
i
 = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
;

12274 
˙t
++;

12280 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

12281 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

12286 
	`ruu_wrôe_‰om_Wrôebuf„r
 ()

12288 
thªadid
, 
i
, 
˙t
;

12289 
ªs_ãm∂©e
 *
fu
;

12290 
œt
 = 0;

12291 
c⁄ãxt
 *
cuºít
;

12293 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12295 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12297 i‡((
m_L1WBufC¡
[
thªadid
] =0 || m_L1WBufC¡[thªadid] =
SMD_L1_WBUF_SIZE
Ë&& (
m_L1WBuf_èû
[thªadid] !
m_L1WBuf_hód
[threadid]))

12298 
	`∑nic
 ("HeadándÅailÖointer messed up\n");

12300 
˙t
 = 0, 
i
 = 
m_L1WBuf_hód
[
thªadid
]; c¡ < 
m_L1WBufC¡
[thªadid]; c¡++, i = (ò+ 1Ë% 
SMD_L1_WBUF_SIZE
)

12302 
œt
 = 0;

12303 i‡(!
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
)

12305 #ifdef 
DCACHE_MSHR


12306 
m©chnum
;

12307 
m©chnum
 = 
	`MSHR_block_check
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, cache_dl1[thªadid]->
£t_shi·
);

12308 if(
m©chnum
)

12310 if(
m_L1WBuf
[
thªadid
][
i
].
Æªady_check
)

12312 
ˇche_dl1
[
thªadid
]->
ö_mshr
 ++;

12313 
m_L1WBuf
[
thªadid
][
i
].
Æªady_check
 = 1;

12318 
m_L1WBuf
[
thªadid
][
i
].
Æªady_check
 = 0;

12321 
fu
 = 
	`ªs_gë
 (
fu_poﬁ
, 
	`MD_OP_FUCLASS
 (
m_L1WBuf
[
thªadid
][
i
].
›
),Åhreadid);

12323 i‡(
fu


12324 #ifdef 
DCACHE_MSHR


12325 && !
	`isMSHRFuŒ
(
ˇche_dl1
[
thªadid
]->
mshr
, 0,Åhreadid)

12329 i‡(
fu
->
ma°î
->
busy
)

12330 
	`∑nic
 ("functional unitálready in use");

12332 
fu
->
ma°î
->
busy
 = fu->
issuñ©
;

12333 
fu
->
ma°î
->
u§_id
 = 
thªadid
;

12334 
fu
->
ma°î
->
du∂iˇã
 = 0;

12336 i‡(
ˇche_dl1
[
thªadid
])

12338 
dˇche_ac˚ss
++;

12339 
cuºít
->
dˇche_ac˚ss
++;

12341 
övÆid©eOthîCache
 = 0;

12343 i‡(
COHERENT_CACHE
 && 
ÆlF‹ked
)

12345 if(
m_L1WBuf
[
thªadid
][
i
].
›
 =
STL_C
 && m_L1WBuf[thªadid][i].
commôD⁄e
)

12347 
œt
 = 
ˇche_dl1_œt
;

12351 if(
	`md_vÆid_addr
 (
m_L1WBuf
[
thªadid
][
i
].
addr
, 
cuºít
->
ma°îid
))

12354 
œt
 = 
	`ˇche_ac˚ss
(
ˇche_dl1
[
thªadid
], 
Wrôe
, (
m_L1WBuf
[thªadid][
i
].
addr
&~3), 
NULL
, 4, 
sim_cy˛e
, NULL, NULL, NULL,Åhreadid, &m_L1WBuf[threadid][i]);

12358 #ifdef 
DCACHE_MSHR


12359 if(
œt
 > 
ˇche_dl1_œt
)

12361 
	`MSHRLookup
(
ˇche_dl1
[
thªadid
]->
mshr
, 
m_L1WBuf
[thªadid][
i
].
addr
, 
œt
, 0, 
NULL
);

12362 
m_L1WBuf
[
thªadid
][
i
].
isMiss
 = 1;

12364 
m_L1WBuf
[
thªadid
][
i
].
föishTime
 = 
sim_cy˛e
 ;

12367 
m_L1WBuf
[
thªadid
][
i
].
wrôeSèπed
 = 1;

12379 #ifdef 
COLLECT_STAT_STARTUP


12381 
	`f°fwd_cﬁÀ˘Sèts
()

12383 
b¨rõrCou¡
 = 0;

12384 
thªadid
;

12386 
	`¥ötf
("Fast-forwardingÅillÅhe collect stats system call\n");

12387 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12390 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12392 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12393 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12396 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12397 
	`∑nic
 ("Fast forwardÉrror\n");

12399 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12400 
	`∑nic
 ("Fast forwardÉrror\n");

12406 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12408 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12411 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12412 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12414 
md_ö°_t
 
ö°
;

12415 
md_›code
 
›
;

12416 
md_addr_t
 
èrgë_PC
;

12417 
md_addr_t
 
addr
;

12418 
is_wrôe
;

12419 
byã_t
 
ãmp_byã
;

12420 
hÆf_t
 
ãmp_hÆf
;

12421 
w‹d_t
 
ãmp_w‹d
;

12422 if(
cuºít
->
ru¬ög
 =0 && 
b¨rõr_waôög
[
thªadid
])

12425 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12426 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12429 
md_Áu…_ty≥
 
Áu…
;

12432 #i‚de‡
PARALLEL_EMUL


12436 #ifde‡
PARALLEL_EMUL


12437 
sim_num_ö¢
++;

12440 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12441 #ifde‡
TARGET_ALPHA


12442 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12446 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12447 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12448 if(
cuºít
->
ru¬ög
 =0 && 
b¨rõr_waôög
[
thªadid
])

12451 
addr
 = 0;

12452 
is_wrôe
 = 
FALSE
;

12455 
Áu…
 = 
md_Áu…_n⁄e
;

12458 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12462 
›
)

12464 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12465 
OP
: \

12466 
	`SYMCAT
(
OP
,
_IMPL
); \

12468 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12469 
OP
: \

12470 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12471 
	#CONNECT
(
OP
)

	)

12472 #unde‡
DECLARE_FAULT


12473 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12474 { 
Áu…
 = (
FAULT
); ; }

12475 
	~"machöe.def
"

12477 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12480 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12481 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12484 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12486 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12488 
is_wrôe
 = 
TRUE
;

12489 #i‚de‡
PARALLEL_EMUL


12490 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12493 #i‚de‡
PARALLEL_EMUL


12495 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12500 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12501 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12504 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12505 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12507 #i‚de‡
PARALLEL_EMUL


12508 i‡((
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12510 if(
cuºít
->
b¨rõrRóched
 == 2)

12512 
b¨rõrCou¡
++;

12513 
	`¥ötf
("Cros£dÅhêb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12515 
cuºít
->
b¨rõrRóched
 = 0;

12519 if(
cﬁÀ˘_°©s
)

12521 
	`¥ötf
("Föished fa°-f‹w¨dögáàb¨rõ∏numbî: %d wôhÅhªadid: %d\n", 
b¨rõrCou¡
, 
thªadid
);

12531 
	`f°fwd_föeAdju°
 ()

12533 
thªadid
;

12534 
cou¡
 = 0;

12535 
tŸÆIå
 = 2;

12536 
¥Id
 = 0;

12537 
md_addr_t
 
ãmpPC
[3] = { 0, 0, 0 };

12539 
thªadid
 = 0;Åhªadid < 
numc⁄ãxts
;Åhreadid++)

12542 i‡(
thec⁄ãxts
[
thªadid
]->
jobThdId
 != 0)

12544 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_PC
 =Åhec⁄ãxts[thªadid]->ªgs.
ªgs_NPC
;

12545 
thec⁄ãxts
[
thªadid
]->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12548 i‡(
thec⁄ãxts
[
thªadid
]->
b¨rõrRóched
 == 1)

12549 
	`∑nic
 ("Fast forwardÉrror\n");

12551 i‡(
thec⁄ãxts
[
thªadid
]->
°¨tRóched
 == 1)

12552 
	`∑nic
 ("Fast forwardÉrror\n");

12554 if(
ûök_run
)

12556 
cﬁÀ˘_°©s
 = 1;

12562 
cou¡
 = 0;

12565 
thªadid
 = 0;thªadid < 
numc⁄ãxts
;Åhreadid = (threadid +Çumcontexts + 1) %Çumcontexts)

12567 
c⁄ãxt
 *
cuºít
 = 
thec⁄ãxts
[
thªadid
];

12569 i‡(
cuºít
->
ma°îid
 !
¥Id
)

12573 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

12574 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.ªgs_PC +  (
md_ö°_t
), 
sim_cy˛e
, &(cuºít->ªgs), cuºít->
mem
);

12576 
cou¡î_t
 
icou¡
 = 0;

12577 
md_ö°_t
 
ö°
;

12578 
md_›code
 
›
;

12579 
md_addr_t
 
èrgë_PC
;

12580 
md_addr_t
 
addr
;

12581 
is_wrôe
;

12582 
byã_t
 
ãmp_byã
;

12583 
hÆf_t
 
ãmp_hÆf
;

12584 
w‹d_t
 
ãmp_w‹d
;

12586 #i‡
	`deföed
(
HOST_HAS_QWORD
Ë&& deföed(
TARGET_ALPHA
)

12587 
qw‹d_t
 
ãmp_qw‹d
 = 0;

12590 
md_Áu…_ty≥
 
Áu…
;

12594 
icou¡
++;

12596 
cuºít
->
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

12597 #ifde‡
TARGET_ALPHA


12598 
cuºít
->
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

12602 
	`MD_FETCH_INST
 (
ö°
, 
cuºít
->
mem
, cuºít->
ªgs
.
ªgs_PC
);

12603 
	`ˇche_w¨mup
 (
ˇche_û1
[
thªadid
], 
Ród
, 
	`IACOMPRESS
(
cuºít
->
„tch_ªgs_PC
), 
	`ISCOMPRESS
((
md_ö°_t
)),Åhreadid);

12606 
addr
 = 0;

12607 
is_wrôe
 = 
FALSE
;

12610 
Áu…
 = 
md_Áu…_n⁄e
;

12613 
	`MD_SET_OPCODE
 (
›
, 
ö°
);

12616 
›
)

12618 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

12619 
OP
: \

12620 
	`SYMCAT
(
OP
,
_IMPL
); \

12622 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

12623 
OP
: \

12624 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

12625 
	#CONNECT
(
OP
)

	)

12626 #unde‡
DECLARE_FAULT


12627 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

12628 { 
Áu…
 = (
FAULT
); ; }

12629 
	~"machöe.def
"

12631 
	`∑nic
 ("attemptedÅoÉxecuteá bogus opcode");

12634 i‡(
Áu…
 !
md_Áu…_n⁄e
)

12635 
	`Áèl
 ("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
cuºít
->
ªgs
.
ªgs_PC
);

12638 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_MEM
)

12640 i‡(
	`MD_OP_FLAGS
 (
›
Ë& 
F_STORE
)

12642 
is_wrôe
 = 
TRUE
;

12643 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Wrôe
, 
addr
 & ~7, 8,Åhreadid);

12646 
	`ˇche_w¨mup
(
ˇche_dl1
[
thªadid
], 
Ród
, 
addr
 & ~7, 8,Åhreadid);

12650 i‡(
	`dlôe_check_bªak
 (
cuºít
->
ªgs
.
ªgs_NPC
, 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
, 
addr
, 
sim_num_ö¢
, sim_num_insn))

12651 
	`dlôe_maö
 (
cuºít
->
ªgs
.
ªgs_PC
, cuºít->ªgs.
ªgs_NPC
, 
sim_num_ö¢
, &(cuºít->ªgs), cuºít->
mem
);

12654 
cuºít
->
ªgs
.
ªgs_PC
 = cuºít->ªgs.
ªgs_NPC
;

12655 
cuºít
->
ªgs
.
ªgs_NPC
 + (
md_ö°_t
);

12657 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12660 i‡(
cou¡
 =0 && 
cuºít
->
°¨tRóched
)

12662 
cuºít
->
°¨tRóched
 = 0;

12664 if(
cuºít
->
jobThdId
 != 0)

12665 
	`∑nic
 ("CanÇot beÑeached by otherÅhreads");

12667 
cou¡
++;

12671 if(
cou¡
 == 5)

12674 if(
cou¡
 > 0 && count < 6)

12675 
cou¡
++;

12677 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12681 i‡(
cou¡
 =0 && (
cuºít
->
b¨rõrRóched
 == 1 || current->barrierReached == 2))

12683 if(
cuºít
->
b¨rõrRóched
 =2 && cuºít->
jobThdId
 !(
THREADS_PER_JOB
-1))

12684 
	`∑nic
("End of barrierÑeached with wrong id");

12686 
cuºít
->
b¨rõrRóched
 = 0;

12690 i‡(
cou¡
 == 5)

12692 
cou¡
++;

12693 
ãmpPC
[
cuºít
->
ma°îid
] = cuºít->
ªgs
.
ªgs_PC
;

12697 i‡(
cou¡
 =6 && 
cuºít
->
ªgs
.
ªgs_PC
 =
ãmpPC
[cuºít->
ma°îid
])

12699 i‡(
cuºít
->
jobThdId
 =(
THREADS_PER_JOB
-1))

12706 
	`¥ötf
("Job %d synchr⁄ized\n", 
¥Id
);

12707 
	`fÊush
(
°dout
);

	@sim-outorder.h

1 #i‚de‡
__SIM_OUT_ORDER_H__


2 
	#__SIM_OUT_ORDER_H__


	)

4 
	#SMD_USE_WRITE_BUF


	)

8 
	#GHB_size
 512

	)

9 
	#DELTA_INDEX_TABLE_Size
 8

	)

10 
	#TAG_INDEX_TABLE_Size
 128

	)

11 
	#NET_ALGR


	)

13 #ifdef 
EDA


14 
ˇlcuœãWr⁄gVÆue
(
RUU_°©i⁄
 *
rs
);

15 
	sp¢_°ru˘_t


17 
	mdúty
;

18 
qw‹d_t
 
	md©a
;

24 
	#SMD_L1_WBUF_SIZE
 8

25 
	sm_L1WBufE¡ry


	)

27 
md_addr_t
 
	mPC
;

28 
md_ö°_t
 
	mIR
;

29 
	mlsqId
;

30 
	mrobId
;

31 
	mrobExId
;

32 
md_addr_t
 
	maddr
;

33 
md_›code
 
	m›
;

34 
cou¡î_t
 
	mœt
;

35 
cou¡î_t
 
	msim_num_ö¢
;

36 
	mcommôD⁄e
, 
	mwrôeSèπed
;

37 
	misMiss
;

38 
cou¡î_t
 
	mföishTime
, 
	míåyTime
;

39 
quad_t
 
	mwrôeVÆue
;

40 
	mSTL_C_Áû
;

41 
	mÆªady_check
;

43 #ifde‡
DIRECTORY


44 
RUU_°©i⁄
 *
	mrs
;

47 #ifdef 
EDA


48 
p¢_°ru˘_t
 
	mpois⁄
[2];

50 }
	tm_L1WBufE¡ry
;

52 
m_L1WBufE¡ry
 
	gm_L1WBuf
[
MAXTHREADS
][
SMD_L1_WBUF_SIZE
];

56 
	gm_L1WBuf_hód
[
MAXTHREADS
];

57 
	gm_L1WBuf_èû
[
MAXTHREADS
];

59 
M¨kWrôeCommô
(
thªadid
, 
RUU_°©i⁄
 *
rs
);

61 
	gm_L1WBufC¡
[
MAXTHREADS
];

	@sim-profile.c

87 
	~<°dio.h
>

88 
	~<°dlib.h
>

89 
	~<m©h.h
>

91 
	~"ho°.h
"

92 
	~"misc.h
"

93 
	~"machöe.h
"

94 
	~"ªgs.h
"

95 
	~"mem‹y.h
"

96 
	~"lﬂdî.h
"

97 
	~"sysˇŒ.h
"

98 
	~"dlôe.h
"

99 
	~"symbﬁ.h
"

100 
	~"›ti⁄s.h
"

101 
	~"°©s.h
"

102 
	~"sim.h
"

110 
ªgs_t
 
	gªgs
;

113 
mem_t
 *
	gmem
 = 
NULL
;

116 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

119 
	gmax_ö°s
;

122 
	g¥of_Æl
 ;

123 
	g¥of_ic
 ;

124 
	g¥of_ö°
 ;

125 
	g¥of_bc
 ;

126 
	g¥of_am
 ;

127 
	g¥of_£g
 ;

128 
	g¥of_tsyms
 ;

129 
	g¥of_dsyms
 ;

130 
	glﬂd_loˇls
 ;

131 
	g¥of_èddr
 ;

134 
	#MAX_PCSTAT_VARS
 8

	)

135 
	gpc°©_√…
 = 0;

136 *
	gpc°©_v¨s
[
MAX_PCSTAT_VARS
];

140 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

142 
	`›t_ªg_hódî
(
odb
,

149 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

150 &
max_ö°s
, 0,

151  
TRUE
, 
NULL
);

153 
	`›t_ªg_Êag
(
odb
, "-all", "enableállÖrofile options",

154 &
¥of_Æl
, 
FALSE
, 
TRUE
, 
NULL
);

156 
	`›t_ªg_Êag
(
odb
, "-iclass", "enable instruction classÖrofiling",

157 &
¥of_ic
, 
FALSE
, 
TRUE
, 
NULL
);

159 
	`›t_ªg_Êag
(
odb
, "-iprof", "enable instructionÖrofiling",

160 &
¥of_ö°
, 
FALSE
, 
TRUE
, 
NULL
);

162 
	`›t_ªg_Êag
(
odb
, "-brprof", "enable branch instructionÖrofiling",

163 &
¥of_bc
, 
FALSE
, 
TRUE
, 
NULL
);

165 
	`›t_ªg_Êag
(
odb
, "-amprof", "enableáddress modeÖrofiling",

166 &
¥of_am
, 
FALSE
, 
TRUE
, 
NULL
);

168 
	`›t_ªg_Êag
(
odb
, "-segprof", "enableÜoad/storeáddress segmentÖrofiling",

169 &
¥of_£g
, 
FALSE
, 
TRUE
, 
NULL
);

171 
	`›t_ªg_Êag
(
odb
, "-tsymprof", "enableÅext symbolÖrofiling",

172 &
¥of_tsyms
, 
FALSE
, 
TRUE
, 
NULL
);

174 
	`›t_ªg_Êag
(
odb
, "-taddrprof", "enableÅextáddressÖrofiling",

175 &
¥of_èddr
, 
FALSE
, 
TRUE
, 
NULL
);

177 
	`›t_ªg_Êag
(
odb
, "-dsymprof", "enable data symbolÖrofiling",

178 &
¥of_dsyms
, 
FALSE
, 
TRUE
, 
NULL
);

180 
	`›t_ªg_Êag
(
odb
, "-internal",

182 &
lﬂd_loˇls
, 
FALSE
, 
TRUE
, 
NULL
);

184 
	`›t_ªg_°rög_li°
(
odb
, "-pcstat",

186 
pc°©_v¨s
, 
MAX_PCSTAT_VARS
, &
pc°©_√…
, 
NULL
,

187  
FALSE
, 
NULL
, 
TRUE
);

188 
	}
}

192 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

194 i‡(
¥of_Æl
)

197 
¥of_ic
 = 
TRUE
;

198 
¥of_ö°
 = 
TRUE
;

199 
¥of_bc
 = 
TRUE
;

200 
¥of_am
 = 
TRUE
;

201 
¥of_£g
 = 
TRUE
;

202 
¥of_tsyms
 = 
TRUE
;

203 
¥of_dsyms
 = 
TRUE
;

204 
¥of_èddr
 = 
TRUE
;

206 
	}
}

209 
	eö°_˛ass_t
 {

210 
	mic_lﬂd
,

211 
	mic_°‹e
,

212 
	mic_unc⁄d
,

213 
	mic_c⁄d
,

214 
	mic_icomp
,

215 
	mic_fcomp
,

216 
	mic_å≠
,

217 
	mic_NUM


221 *
	gö°_˛ass_°r
[
ic_NUM
] = {

232 
°©_°©_t
 *
	gic_¥of
 = 
NULL
;

235 *
	gö°_°r
[
OP_MAX
];

238 
°©_°©_t
 *
	gö°_¥of
 = 
NULL
;

241 
	ebønch_˛ass_t
 {

242 
	mbc_unc⁄d_dú
,

243 
	mbc_c⁄d_dú
,

244 
	mbc_ˇŒ_dú
,

245 
	mbc_unc⁄d_ödú
,

246 
	mbc_c⁄d_ödú
,

247 
	mbc_ˇŒ_ödú
,

248 
	mbc_NUM


252 *
	gbønch_˛ass_°r
[
bc_NUM
] = {

262 
°©_°©_t
 *
	gbc_¥of
 = 
NULL
;

265 
°©_°©_t
 *
	gam_¥of
 = 
NULL
;

268 
	eaddr_£g_t
 {

269 
	m£g_d©a
,

270 
	m£g_hóp
,

271 
	m£g_°ack
,

272 
	m£g_ãxt
,

273 
	m£g_NUM


277 *
	gaddr_£g_°r
[
£g_NUM
] = {

285 
°©_°©_t
 *
	g£g_¥of
 = 
NULL
;

288 
addr_£g_t


289 
	$böd_to_£g
(
md_addr_t
 
addr
)

291 i‡(
ld_d©a_ba£
 <
addr
 &&ádd∏< (ld_d©a_ba£ + 
ld_d©a_size
))

292  
£g_d©a
;

293 i‡((
ld_d©a_ba£
 + 
ld_d©a_size
Ë<
addr
 &&ádd∏< 
ld_brk_poöt
)

294  
£g_hóp
;

296 i‡((
ld_°ack_ba£
 - (16*1024*1024)Ë<
addr
 &&áddr <Üd_stack_base)

297  
£g_°ack
;

298 i‡(
ld_ãxt_ba£
 <
addr
 &&ádd∏< (ld_ãxt_ba£ + 
ld_ãxt_size
))

299  
£g_ãxt
;

301 
	`∑nic
("cannot bindáddressÅo segment");

302 
	}
}

305 
°©_°©_t
 *
	gtsym_¥of
 = 
NULL
;

306 **
	gtsym_«mes
 = 
NULL
;

309 
°©_°©_t
 *
	gdsym_¥of
 = 
NULL
;

310 **
	gdsym_«mes
 = 
NULL
;

313 
°©_°©_t
 *
	gèddr_¥of
 = 
NULL
;

316 
°©_°©_t
 *
	gpc°©_°©s
[
MAX_PCSTAT_VARS
];

317 
cou¡î_t
 
	gpc°©_œ°vÆs
[
MAX_PCSTAT_VARS
];

318 
°©_°©_t
 *
	gpc°©_sdi°s
[
MAX_PCSTAT_VARS
];

321 
	#STATVAL
(
STAT
Ë\

	)

322 ((
	gSTAT
)->
	gsc
 =
sc_öt
 \

323 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_öt
.
v¨
) \

324 : ((
STAT
)->
sc
 =
sc_uöt
 \

325 ? (
cou¡î_t
)*((
STAT
)->
v¨ü¡
.
f‹_uöt
.
v¨
) \

326 : ((
STAT
)->
sc
 =
sc_cou¡î
 \

327 ? *((
STAT
)->
v¨ü¡
.
f‹_cou¡î
.
v¨
) \

328 : (
∑nic
("bad stat class"), 0))))

332 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

334 
i
;

336 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

338 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

339 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

341 &
sim_num_ªfs
, 0, 
NULL
);

342 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

344 &
sim_ñ≠£d_time
, 0, 
NULL
);

345 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

347 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

349 i‡(
¥of_ic
)

352 
ic_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_class_prof",

355  
ic_NUM
,

357  (
PF_COUNT
|
PF_PDF
),

358  
NULL
,

359  
ö°_˛ass_°r
,

360  
NULL
);

363 i‡(
¥of_ö°
)

365 
i
;

366 
buf
[512];

369 
i
=0; i < 
OP_MAX
-1; i++)

371 
	`•rötf
(
buf
, "%-8†%-6s", 
md_›2«me
[
i
+1], 
md_›2f‹m©
[i+1]);

372 
ö°_°r
[
i
] = 
	`my°rdup
(
buf
);

376 
ö°_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_inst_prof",

379  
OP_MAX
-1,

381  (
PF_COUNT
|
PF_PDF
),

382  
NULL
,

383  
ö°_°r
,

384  
NULL
);

387 i‡(
¥of_bc
)

390 
bc_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_branch_prof",

393  
bc_NUM
,

395  (
PF_COUNT
|
PF_PDF
),

396  
NULL
,

397  
bønch_˛ass_°r
,

398  
NULL
);

401 i‡(
¥of_am
)

404 
am_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_mode_prof",

407  
md_amode_NUM
,

409  (
PF_COUNT
|
PF_PDF
),

410  
NULL
,

411  
md_amode_°r
,

412  
NULL
);

415 i‡(
¥of_£g
)

418 
£g_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_addr_seg_prof",

421  
£g_NUM
,

423  (
PF_COUNT
|
PF_PDF
),

424  
NULL
,

425  
addr_£g_°r
,

426  
NULL
);

429 i‡(
¥of_tsyms
 && 
sym_¡extsyms
 != 0)

431 
i
;

434 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

437 
tsym_«mes
 = (**)
	`ˇŒoc
(
sym_¡extsyms
, (*));

439 
i
=0; i < 
sym_¡extsyms
; i++)

440 
tsym_«mes
[
i
] = 
sym_ãxtsyms
[i]->
«me
;

443 
tsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_text_sym_prof",

446  
sym_¡extsyms
,

448  (
PF_COUNT
|
PF_PDF
),

449  
NULL
,

450  
tsym_«mes
,

451  
NULL
);

454 i‡(
¥of_dsyms
 && 
sym_nd©asyms
 != 0)

456 
i
;

459 
	`sym_lﬂdsyms
(
ld_¥og_‚ame
, 
lﬂd_loˇls
);

462 
dsym_«mes
 = (**)
	`ˇŒoc
(
sym_nd©asyms
, (*));

464 
i
=0; i < 
sym_nd©asyms
; i++)

465 
dsym_«mes
[
i
] = 
sym_d©asyms
[i]->
«me
;

468 
dsym_¥of
 = 
	`°©_ªg_di°
(
sdb
, "sim_data_sym_prof",

471  
sym_nd©asyms
,

473  (
PF_COUNT
|
PF_PDF
),

474  
NULL
,

475  
dsym_«mes
,

476  
NULL
);

479 i‡(
¥of_èddr
)

485 
èddr_¥of
 = 
	`°©_ªg_sdi°
(
sdb
, "sim_text_addr_prof",

488  (
PF_COUNT
|
PF_PDF
),

490  
NULL
);

493 
i
=0; i<
pc°©_√…
; i++)

495 
buf
[512], 
buf1
[512];

496 
°©_°©_t
 *
°©
;

501 
°©
 = 
	`°©_föd_°©
(
sdb
, 
pc°©_v¨s
[
i
]);

502 i‡(!
°©
)

503 
	`Áèl
("ˇ¬ŸÜoˇãány sèti°i¯«med `%s'", 
pc°©_v¨s
[
i
]);

506 i‡(
°©
->
sc
 !
sc_öt
 && sèt->s¯!
sc_uöt
 && sèt->s¯!
sc_cou¡î
)

507 
	`Áèl
("`-pcstat' statistical variable `%s' isÇotán integralÅype",

508 
°©
->
«me
);

511 
pc°©_°©s
[
i
] = 
°©
;

512 
pc°©_œ°vÆs
[
i
] = 
	`STATVAL
(
°©
);

515 
	`•rötf
(
buf
, "%s_by_pc", 
°©
->
«me
);

516 
	`•rötf
(
buf1
, "%†(byÅexàaddªss)", 
°©
->
desc
);

517 
pc°©_sdi°s
[
i
] = 
	`°©_ªg_sdi°
(
sdb
, 
buf
, 
buf1
,

519  (
PF_COUNT
|
PF_PDF
),

521  
NULL
);

523 
	`ld_ªg_°©s
(
sdb
);

524 
	`mem_ªg_°©s
(
mem
, 
sdb
);

525 
	}
}

529 
	$sim_öô
()

531 
sim_num_ªfs
 = 0;

534 
	`ªgs_öô
(&
ªgs
);

537 
mem
 = 
	`mem_¸óã
("mem");

538 
	`mem_öô
(
mem
);

539 
	}
}

543 
	$¥ofûe_m°©e_obj
(
FILE
 *
°ªam
,

544 *
cmd
,

545 
ªgs_t
 *
ªgs
,

546 
mem_t
 *
mem
)

549 
	`sim_¥öt_°©s
(
°ªam
);

552  
NULL
;

553 
	}
}

557 
	$sim_lﬂd_¥og
(*
‚ame
,

558 
¨gc
, **
¨gv
,

559 **
ívp
)

562 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

565 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
¥ofûe_m°©e_obj
);

566 
	}
}

571 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

574 
	}
}

578 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

580 
	}
}

584 
	$sim_unöô
()

587 
	}
}

599 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

602 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

605 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

606 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

608 #i‡
deföed
(
TARGET_PISA
)

611 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

612 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

613 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

614 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

615 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

616 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

619 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

620 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

621 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

622 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

623 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

624 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

626 #ñi‡
deföed
(
TARGET_ALPHA
)

629 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

630 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

631 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

632 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

635 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

636 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

637 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

638 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

641 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

645 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

646 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

647 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

648 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

649 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

650 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

651 #ifde‡
HOST_HAS_QUAD


652 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

653 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_QUAD
(
mem
, 
addr
 = (
SRC
)))

656 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

657 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

658 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

659 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

660 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

661 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

662 #ifde‡
HOST_HAS_QUAD


663 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

664 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_QUAD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

668 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

672 
	gfsm
 = 0;

676 
	$sim_maö
()

678 
i
;

679 
md_ö°_t
 
ö°
;

680 
md_addr_t
 
addr
;

681 
is_wrôe
;

682 
md_›code
 
›
;

683 
Êags
;

684 
md_Áu…_ty≥
 
Áu…
;

686 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

689 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

692 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

693 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),Ñegs.regs_PC,

694 
sim_num_ö¢
, &
ªgs
, 
mem
);

696 
TRUE
)

699 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

700 #ifde‡
TARGET_ALPHA


701 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

705 
	`mem_ac˚ss
(
mem
, 
Ród
, 
ªgs
.
ªgs_PC
, &
ö°
, (
md_ö°_t
));

707 i‡(
vîbo£
)

709 
	`myÂrötf
(
°dîr
, "%10¿@ 0x%08p: ", 
sim_num_ö¢
, 
ªgs
.
ªgs_PC
);

710 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

711 
	`Ârötf
(
°dîr
, "\n");

716 
sim_num_ö¢
++;

719 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

722 
Áu…
 = 
md_Áu…_n⁄e
;

725 
	`MD_SET_OPCODE
(
›
, 
ö°
);

728 
›
)

730 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

731 
OP
: \

732 
	`SYMCAT
(
OP
,
_IMPL
); \

734 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

735 
OP
: \

736 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

737 
	#CONNECT
(
OP
)

	)

738 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

739 { 
Áu…
 = (
FAULT
); ; }

740 
	~"machöe.def
"

742 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

745 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

747 
sim_num_ªfs
++;

748 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

749 
is_wrôe
 = 
TRUE
;

755 
Êags
 = 
	`MD_OP_FLAGS
(
›
);

757 i‡(
¥of_ic
)

759 
ö°_˛ass_t
 
ic
;

762 i‡(
Êags
 & 
F_LOAD
)

763 
ic
 = 
ic_lﬂd
;

764 i‡(
Êags
 & 
F_STORE
)

765 
ic
 = 
ic_°‹e
;

766 i‡(
Êags
 & 
F_UNCOND
)

767 
ic
 = 
ic_unc⁄d
;

768 i‡(
Êags
 & 
F_COND
)

769 
ic
 = 
ic_c⁄d
;

770 i‡(
Êags
 & 
F_ICOMP
)

771 
ic
 = 
ic_icomp
;

772 i‡(
Êags
 & 
F_FCOMP
)

773 
ic
 = 
ic_fcomp
;

774 i‡(
Êags
 & 
F_TRAP
)

775 
ic
 = 
ic_å≠
;

777 
	`∑nic
("instruction hasÇo class");

780 
	`°©_add_ßm∂e
(
ic_¥of
, ()
ic
);

783 i‡(
¥of_ö°
)

786 
	`°©_add_ßm∂e
(
ö°_¥of
, ()
›
 - 1);

789 i‡(
¥of_bc
)

791 
bønch_˛ass_t
 
bc
;

794 i‡(
Êags
 & 
F_CTRL
)

796 i‡((
Êags
 & (
F_CALL
|
F_DIRJMP
)) == (F_CALL|F_DIRJMP))

797 
bc
 = 
bc_ˇŒ_dú
;

798 i‡((
Êags
 & (
F_CALL
|
F_INDIRJMP
)) == (F_CALL|F_INDIRJMP))

799 
bc
 = 
bc_ˇŒ_ödú
;

800 i‡((
Êags
 & (
F_UNCOND
|
F_DIRJMP
)) == (F_UNCOND|F_DIRJMP))

801 
bc
 = 
bc_unc⁄d_dú
;

802 i‡((
Êags
 & (
F_UNCOND
|
F_INDIRJMP
))== (F_UNCOND|F_INDIRJMP))

803 
bc
 = 
bc_unc⁄d_ödú
;

804 i‡((
Êags
 & (
F_COND
|
F_DIRJMP
)) == (F_COND|F_DIRJMP))

805 
bc
 = 
bc_c⁄d_dú
;

806 i‡((
Êags
 & (
F_COND
|
F_INDIRJMP
)) == (F_COND|F_INDIRJMP))

807 
bc
 = 
bc_c⁄d_ödú
;

809 
	`∑nic
("branch hasÇo class");

812 
	`°©_add_ßm∂e
(
bc_¥of
, ()
bc
);

816 i‡(
¥of_am
)

818 
md_amode_ty≥
 
am
;

821 
	`MD_AMODE_PREPROBE
(
›
, 
fsm
);

824 i‡(
Êags
 & 
F_MEM
)

827 
	`MD_AMODE_PROBE
(
am
, 
›
, 
fsm
);

830 
	`°©_add_ßm∂e
(
am_¥of
, ()
am
);

833 
	`MD_AMODE_POSTPROBE
(
fsm
);

837 i‡(
¥of_£g
)

839 i‡(
Êags
 & 
F_MEM
)

842 
	`°©_add_ßm∂e
(
£g_¥of
, ()
	`böd_to_£g
(
addr
));

846 i‡(
¥of_tsyms
)

848 
tödex
;

851 
	`sym_böd_addr
(
ªgs
.
ªgs_PC
, &
tödex
, 
FALSE
, 
sdb_ãxt
);

853 i‡(
tödex
 >= 0)

855 i‡(
tödex
 > 
sym_¡extsyms
)

856 
	`∑nic
("bogusÅext symbol index");

858 
	`°©_add_ßm∂e
(
tsym_¥of
, 
tödex
);

863 i‡(
¥of_dsyms
)

865 
dödex
;

867 i‡(
Êags
 & 
F_MEM
)

870 
	`sym_böd_addr
(
addr
, &
dödex
, 
FALSE
, 
sdb_d©a
);

872 i‡(
dödex
 >= 0)

874 i‡(
dödex
 > 
sym_nd©asyms
)

875 
	`∑nic
("bogus data symbol index");

877 
	`°©_add_ßm∂e
(
dsym_¥of
, 
dödex
);

883 i‡(
¥of_èddr
)

886 
	`°©_add_ßm∂e
(
èddr_¥of
, 
ªgs
.
ªgs_PC
);

890 
i
=0; i<
pc°©_√…
; i++)

892 
cou¡î_t
 
√wvÆ
;

893 
dñè
;

896 
√wvÆ
 = 
	`STATVAL
(
pc°©_°©s
[
i
]);

897 
dñè
 = 
√wvÆ
 - 
pc°©_œ°vÆs
[
i
];

898 i‡(
dñè
 != 0)

900 
	`°©_add_ßm∂es
(
pc°©_sdi°s
[
i
], 
ªgs
.
ªgs_PC
, 
dñè
);

901 
pc°©_œ°vÆs
[
i
] = 
√wvÆ
;

907 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

908 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

909 
addr
, 
sim_num_ö¢
, sim_num_insn))

910 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

913 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

914 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

917 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

920 
	}
}

	@sim-safe.c

108 
	~<°dio.h
>

109 
	~<°dlib.h
>

110 
	~<m©h.h
>

112 
	~"ho°.h
"

113 
	~"misc.h
"

114 
	~"machöe.h
"

115 
	~"ªgs.h
"

116 
	~"mem‹y.h
"

117 
	~"lﬂdî.h
"

118 
	~"sysˇŒ.h
"

119 
	~"dlôe.h
"

120 
	~"›ti⁄s.h
"

121 
	~"°©s.h
"

122 
	~"sim.h
"

132 
ªgs_t
 
	gªgs
;

135 
mem_t
 *
	gmem
 = 
NULL
;

138 
cou¡î_t
 
	gsim_num_ªfs
 = 0;

141 
	gmax_ö°s
;

145 
	$sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
)

147 
	`›t_ªg_hódî
(
odb
,

156 
	`›t_ªg_uöt
(
odb
, "-max:inst", "maximumÇumber of inst'sÅoÉxecute",

157 &
max_ö°s
, 0,

158  
TRUE
, 
NULL
);

160 
	}
}

164 
	$sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
)

167 
	}
}

171 
	$sim_ªg_°©s
(
°©_sdb_t
 *
sdb
)

173 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_insn",

175 &
sim_num_ö¢
, sim_num_ö¢, 
NULL
);

176 
	`°©_ªg_cou¡î
(
sdb
, "sim_num_refs",

178 &
sim_num_ªfs
, 0, 
NULL
);

179 
	`°©_ªg_öt
(
sdb
, "sim_elapsed_time",

181 &
sim_ñ≠£d_time
, 0, 
NULL
);

182 
	`°©_ªg_f‹muœ
(
sdb
, "sim_inst_rate",

184 "sim_num_ö¢ / sim_ñ≠£d_time", 
NULL
);

185 
	`ld_ªg_°©s
(
sdb
);

186 
	`mem_ªg_°©s
(
mem
, 
sdb
);

187 
	}
}

191 
	$sim_öô
()

193 
sim_num_ªfs
 = 0;

196 
	`ªgs_öô
(&
ªgs
);

199 
mem
 = 
	`mem_¸óã
("mem");

200 
	`mem_öô
(
mem
);

201 
	}
}

205 
	$sim_lﬂd_¥og
(*
‚ame
,

206 
¨gc
, **
¨gv
,

207 **
ívp
)

210 
	`ld_lﬂd_¥og
(
‚ame
, 
¨gc
, 
¨gv
, 
ívp
, &
ªgs
, 
mem
, 
TRUE
);

213 
	`dlôe_öô
(
md_ªg_obj
, 
dlôe_mem_obj
, 
dlôe_m°©e_obj
);

214 
	}
}

218 
	$sim_aux_c⁄fig
(
FILE
 *
°ªam
)

221 
	}
}

225 
	$sim_aux_°©s
(
FILE
 *
°ªam
)

228 
	}
}

232 
	$sim_unöô
()

235 
	}
}

247 
	#SET_NPC
(
EXPR
Ë(
ªgs
.
ªgs_NPC
 = (EXPR))

	)

250 
	#CPC
 (
ªgs
.
ªgs_PC
)

	)

253 
	#GPR
(
N
Ë(
ªgs
.
ªgs_R
[N])

	)

254 
	#SET_GPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_R
[N] = (EXPR))

	)

256 #i‡
deföed
(
TARGET_PISA
)

259 
	#FPR_L
(
N
Ë(
ªgs
.
ªgs_F
.
l
[(N)])

	)

260 
	#SET_FPR_L
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
l
[(N)] = (EXPR))

	)

261 
	#FPR_F
(
N
Ë(
ªgs
.
ªgs_F
.
f
[(N)])

	)

262 
	#SET_FPR_F
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
f
[(N)] = (EXPR))

	)

263 
	#FPR_D
(
N
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1])

	)

264 
	#SET_FPR_D
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[(NË>> 1] = (EXPR))

	)

267 
	#SET_HI
(
EXPR
Ë(
ªgs
.
ªgs_C
.
hi
 = (EXPR))

	)

268 
	#HI
 (
ªgs
.
ªgs_C
.
hi
)

	)

269 
	#SET_LO
(
EXPR
Ë(
ªgs
.
ªgs_C
.
lo
 = (EXPR))

	)

270 
	#LO
 (
ªgs
.
ªgs_C
.
lo
)

	)

271 
	#FCC
 (
ªgs
.
ªgs_C
.
fcc
)

	)

272 
	#SET_FCC
(
EXPR
Ë(
ªgs
.
ªgs_C
.
fcc
 = (EXPR))

	)

274 #ñi‡
deföed
(
TARGET_ALPHA
)

277 
	#FPR_Q
(
N
Ë(
ªgs
.
ªgs_F
.
q
[N])

	)

278 
	#SET_FPR_Q
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
q
[N] = (EXPR))

	)

279 
	#FPR
(
N
Ë(
ªgs
.
ªgs_F
.
d
[N])

	)

280 
	#SET_FPR
(
N
,
EXPR
Ë(
ªgs
.
ªgs_F
.
d
[N] = (EXPR))

	)

283 
	#FPCR
 (
ªgs
.
ªgs_C
.
Â¸
)

	)

284 
	#SET_FPCR
(
EXPR
Ë(
ªgs
.
ªgs_C
.
Â¸
 = (EXPR))

	)

285 
	#UNIQ
 (
ªgs
.
ªgs_C
.
uniq
)

	)

286 
	#SET_UNIQ
(
EXPR
Ë(
ªgs
.
ªgs_C
.
uniq
 = (EXPR))

	)

289 #îr‹ 
No
 
ISA
 
èrgë
 
deföed
...

293 
	#READ_BYTE
(
SRC
, 
FAULT
Ë\

	)

294 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_BYTE
(
mem
, 
addr
 = (
SRC
)))

295 
	#READ_HALF
(
SRC
, 
FAULT
Ë\

	)

296 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_HALF
(
mem
, 
addr
 = (
SRC
)))

297 
	#READ_WORD
(
SRC
, 
FAULT
Ë\

	)

298 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_WORD
(
mem
, 
addr
 = (
SRC
)))

299 #ifde‡
HOST_HAS_QUAD


300 
	#READ_QUAD
(
SRC
, 
FAULT
Ë\

	)

301 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_READ_QUAD
(
mem
, 
addr
 = (
SRC
)))

304 
	#WRITE_BYTE
(
SRC
, 
DST
, 
FAULT
Ë\

	)

305 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_BYTE
(
mem
, 
addr
 = (
DST
), (
SRC
)))

306 
	#WRITE_HALF
(
SRC
, 
DST
, 
FAULT
Ë\

	)

307 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_HALF
(
mem
, 
addr
 = (
DST
), (
SRC
)))

308 
	#WRITE_WORD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

309 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_WORD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

310 #ifde‡
HOST_HAS_QUAD


311 
	#WRITE_QUAD
(
SRC
, 
DST
, 
FAULT
Ë\

	)

312 ((
	gFAULT
Ë
md_Áu…_n⁄e
, 
MEM_WRITE_QUAD
(
mem
, 
addr
 = (
DST
), (
SRC
)))

316 
	#SYSCALL
(
INST
Ë
	`sys_sysˇŒ
(&
ªgs
, 
mem_ac˚ss
, 
mem
, INST, 
TRUE
)

	)

320 
	$sim_maö
()

322 
md_ö°_t
 
ö°
;

323 
md_addr_t
 
addr
;

324 
md_›code
 
›
;

325 
is_wrôe
;

326 
md_Áu…_ty≥
 
Áu…
;

328 
	`Ârötf
(
°dîr
, "sim: ** starting functional simulation **\n");

331 
ªgs
.
ªgs_NPC
 =Ñegs.
ªgs_PC
 + (
md_ö°_t
);

334 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_PC
, 0, 0, 0, 0))

335 
	`dlôe_maö
(
ªgs
.
ªgs_PC
 - (
md_ö°_t
),

336 
ªgs
.
ªgs_PC
, 
sim_num_ö¢
, &ªgs, 
mem
);

338 
TRUE
)

341 
ªgs
.
ªgs_R
[
MD_REG_ZERO
] = 0;

342 #ifde‡
TARGET_ALPHA


343 
ªgs
.
ªgs_F
.
d
[
MD_REG_ZERO
] = 0.0;

347 
ö°
 = 
	`__UNCHK_MEM_READ
(
mem
, 
ªgs
.
ªgs_PC
, 
md_ö°_t
);

350 
sim_num_ö¢
++;

353 
addr
 = 0; 
is_wrôe
 = 
FALSE
;

356 
Áu…
 = 
md_Áu…_n⁄e
;

359 
	`MD_SET_OPCODE
(
›
, 
ö°
);

362 
›
)

364 
	#DEFINST
(
OP
,
MSK
,
NAME
,
OPFORM
,
RES
,
FLAGS
,
O1
,
O2
,
I1
,
I2
,
I3
Ë\

	)

365 
OP
: \

366 
	`SYMCAT
(
OP
,
_IMPL
); \

368 
	#DEFLINK
(
OP
,
MSK
,
NAME
,
MASK
,
SHIFT
Ë\

	)

369 
OP
: \

370 
	`∑nic
("attemptedÅoÉxecuteáÜinking opcode");

371 
	#CONNECT
(
OP
)

	)

372 
	#DECLARE_FAULT
(
FAULT
Ë\

	)

373 { 
Áu…
 = (
FAULT
); ; }

374 
	~"machöe.def
"

376 
	`∑nic
("attemptedÅoÉxecuteá bogus opcode");

379 i‡(
Áu…
 !
md_Áu…_n⁄e
)

380 
	`Áèl
("Áu… (%dËdëe˘ed @ 0x%08p", 
Áu…
, 
ªgs
.
ªgs_PC
);

382 i‡(
vîbo£
)

384 
	`myÂrötf
(
°dîr
, "%10n [xor: 0x%08x] @ 0x%08p: ",

385 
sim_num_ö¢
, 
	`md_x‹_ªgs
(&
ªgs
),Ñegs.
ªgs_PC
);

386 
	`md_¥öt_ö¢
(
ö°
, 
ªgs
.
ªgs_PC
, 
°dîr
);

387 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

388 
	`myÂrötf
(
°dîr
, " mem: 0x%08p", 
addr
);

389 
	`Ârötf
(
°dîr
, "\n");

393 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_MEM
)

395 
sim_num_ªfs
++;

396 i‡(
	`MD_OP_FLAGS
(
›
Ë& 
F_STORE
)

397 
is_wrôe
 = 
TRUE
;

401 i‡(
	`dlôe_check_bªak
(
ªgs
.
ªgs_NPC
,

402 
is_wrôe
 ? 
ACCESS_WRITE
 : 
ACCESS_READ
,

403 
addr
, 
sim_num_ö¢
, sim_num_insn))

404 
	`dlôe_maö
(
ªgs
.
ªgs_PC
,Ñegs.
ªgs_NPC
, 
sim_num_ö¢
, &ªgs, 
mem
);

407 
ªgs
.
ªgs_PC
 =Ñegs.
ªgs_NPC
;

408 
ªgs
.
ªgs_NPC
 +(
md_ö°_t
);

411 i‡(
max_ö°s
 && 
sim_num_ö¢
 >= max_insts)

414 
	}
}

	@sim.h

97 #i‚de‡
SIM_H


98 
	#SIM_H


	)

100 
	~<°dio.h
>

101 
	~<£tjmp.h
>

102 
	~<time.h
>

104 
	~"›ti⁄s.h
"

105 
	~"°©s.h
"

106 
	~"ªgs.h
"

107 
	~"mem‹y.h
"

109 
	~"smt.h
"

112 
sim_dump_°©s
;

115 
sim_exô_now
;

118 
jmp_buf
 
sim_exô_buf
;

121 
sim_sw≠_byãs
;

122 
sim_sw≠_w‹ds
;

125 
cou¡î_t
 
sim_num_ö¢
;

128 
time_t
 
sim_°¨t_time
;

129 
time_t
 
sim_íd_time
;

130 
sim_ñ≠£d_time
;

133 
›t_odb_t
 *
sim_odb
;

136 
°©_sdb_t
 *
sim_sdb
;

138 #i‚de‡
SMT_SS


140 *
sim_eio_‚ame
;

141 *
sim_chk±_‚ame
;

142 
FILE
 *
sim_eio_fd
;

144 
FILE
 *
sim_eio_fd
;

146 
FILE
 *
sim_¥ogfd
;

154 
sim_ªg_›ti⁄s
(
›t_odb_t
 *
odb
);

159 
sim_check_›ti⁄s
(
›t_odb_t
 *
odb
, 
¨gc
, **
¨gv
);

162 
sim_ªg_°©s
(
°©_sdb_t
 *
sdb
);

165 
sim_öô
();

167 #ifde‡
SMT_SS


169 
sim_lﬂd_thªads
(
¨gc
, **
¨gv
, **
ívp
);

173 
sim_lﬂd_¥og
(*
‚ame
, 
¨gc
, **
¨gv
, **
ívp
);

178 
sim_aux_c⁄fig
(
FILE
 *
°ªam
);

181 
sim_maö
();

186 
sim_aux_°©s
(
FILE
 *
°ªam
);

189 
sim_unöô
();

193 
sim_¥öt_°©s
(
FILE
 *
fd
);

	@size.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
a
;

6 
b
;

7 
c
;

9 
a
 = 0 -1;

10 
b
 = 0 -1;

11 
c
 = 0 -1;

13 
	`¥ötf
("I¡ Max = %u \àL⁄g Max = %lu \àL⁄g L⁄g Max = %Œu\n", 
a
, 
b
, 
c
);

14 
	`¥ötf
("I¡ Max = %d \àL⁄g Max = %d \àL⁄g L⁄g Max = %d\n", (
a
),(
b
),(
c
));

15 
	}
}

	@skeleton_chk.cpp

1 
	~<°dio.h
>

2 
	~<io°ªam
>

3 
	~<°rög.h
>

4 
	~"ho°.h
"

5 
	~"machöe.h
"

6 
	~"misc.h
"

8 
usög
 
«me•a˚
 
	g°d
;

10 "C" 
SèπSkñë⁄Ród
 (
ty≥
);

11 "C" 
GëExecSètus
 (
md_addr_t
 
pc
, md_addr_à*
bPt
);

13 "C" 
PushMissPªdLﬂd
 (
md_addr_t
 
pc
, 
œãncy
);

14 "C" 
CacheProfWrôe
 ();

16 "C" 
ö£π_br_dú
 (
md_addr_t
 
pc
, 
dú
, 
missPªd
);

17 "C" 
BønchProfWrôe
 ();

19 
AddSt‹eRef
 (
md_addr_t
 
PC
, md_addr_à
lﬂdPC
, 
cou¡î_t
 
commDi°
);

20 "C" 
St‹eProfWrôe
 ();

22 "C" 
ö°ExecuãdFªq
 (
md_addr_t
 
pc
);

23 "C" 
FªquícyWrôe
 ();

25 
	#CONFIG_NINS
 (1024*768)

	)

27 
	sö°_°©


29 
md_addr_t
 
	mPC
;

30 
	m‰eqCou¡
;

31 
	mdïCou¡
;

32 
ö°_°©
 *
	m√xt
;

35 
ö°_°©
 *
	gœ°Ac˚s£dT¨gës
;

38 ˛as†
	c°©sE¡ry


40 
	mpublic
:

41 
md_addr_t
 
pc
;

42 
cou¡î_t
 
	mcou¡
;

43 
°©sE¡ry
 *
	m√xt
;

46 
	$°©sE¡ry
 ()

48 
pc
 = 0;

49 
cou¡
 = 0;

50 
√xt
 = 
NULL
;

53 
	$°©sE¡ry
 (
md_addr_t
 
pc_√w
)

55 
pc
 = 
pc_√w
;

56 
cou¡
 = 1;

57 
√xt
 = 
NULL
;

58 
	}
}

61 ~
	$°©sE¡ry
 ()

63 
	}
};

65 
	$ö£πSèt
 (
md_addr_t
 
pc_√w
)

67 i‡(
pc
 =
pc_√w
)

69 
cou¡
++;

73 i‡(
√xt
 =
NULL
)

75 
√xt
 = 
√w
 
	`°©sE¡ry
 (
pc_√w
);

79 
√xt
->
	`ö£πSèt
 (
pc_√w
);

81 
	}
}

83 
	$wrôeCommLﬂd
 (
FILE
 * 
Â
)

85 
	`Ârötf
 (
Â
, "PC: 0x%Œx\tCou¡: %Œd\t", 
pc
, 
cou¡
);

86 i‡(
√xt
 !
NULL
)

87 
√xt
->
	`wrôeCommLﬂd
 (
Â
);

88 
	}
}

91 ˛as†
	cSkñë⁄Chk


93 
	m¥iv©e
:

94 
md_addr_t
 
PC
[
CONFIG_NINS
];

95 
	mInsToExec
[
CONFIG_NINS
];

96 
md_addr_t
 
	mBound¨yPt
[
CONFIG_NINS
];

98 
cou¡î_t
 
	m°©sTabÀ
[
CONFIG_NINS
][14];

101 
cou¡î_t
 
	mªfCou¡
[
CONFIG_NINS
];

104 
cou¡î_t
 
	m°‹eRefCou¡
[
CONFIG_NINS
];

105 
cou¡î_t
 
	m°‹e2LdDis
[
CONFIG_NINS
];

107 
°©sE¡ry
 *
	m°LdArcs
[
CONFIG_NINS
];

110 
cou¡î_t
 
	mnŸTakíBr
[
CONFIG_NINS
];

111 
cou¡î_t
 
	mèkíBr
[
CONFIG_NINS
];

112 
cou¡î_t
 
	mmissPªd
[
CONFIG_NINS
];

115 
cou¡î_t
 
	mmissPªdi˘Cou¡
[
CONFIG_NINS
];

116 
cou¡î_t
 
	mmissPªdi˘L©
[
CONFIG_NINS
];

119 
ö°_°©
 *
	mö°Sèt
[
CONFIG_NINS
];

121 
	muIns
;

122 
md_addr_t
 
	mSèπ
;

124 
	mpublic
:

126 
	$Skñë⁄Chk
 ()

128 
uIns
 = 0;

129 
i
 = 0; i < 
CONFIG_NINS
; i++)

131 
ii
;

132 
InsToExec
[
i
] = 0;

133 
Bound¨yPt
[
i
] = 0;

134 
ii
 = 0; ii < 14; ii++)

135 
°©sTabÀ
[
i
][
ii
] = 0;

136 
ªfCou¡
[
i
] = 0;

137 
°‹eRefCou¡
[
i
] = 0;

138 
°‹e2LdDis
[
i
] = 0;

139 
°LdArcs
[
i
] = 
NULL
;

140 
nŸTakíBr
[
i
] = 0;

141 
èkíBr
[
i
] = 0;

142 
missPªd
[
i
] = 0;

143 
missPªdi˘Cou¡
[
i
] = 0;

144 
missPªdi˘L©
[
i
] = 0;

145 
ö°Sèt
[
i
] = 
NULL
;

150 ~
	$Skñë⁄Chk
 ()

152 
	}
};

156 
	$ExecFªq
 (
md_addr_t
 
pc
)

158 
Index
 = (
pc
 - 
Sèπ
) / 4;

160 i‡(
uIns
 > 
Index
 && 
PC
[Index] =
pc
)

161 
ªfCou¡
[
Index
]++;

162 
	}
}

165 
	$FªquícyWrôe
 (
FILE
 * 
Â
)

167 
md_addr_t
 
max_ö°s
;

168 
	`fwrôe
 (&
uIns
,  (), 1, 
Â
);

169 
	`fwrôe
 (
ªfCou¡
,  (
cou¡î_t
), 
uIns
, 
Â
);

170 
	}
}

174 
	$AddSt‹eRef
 (
md_addr_t
 
pc
, md_addr_à
lﬂdPC
, 
cou¡î_t
 
commDi°
)

176 
Index
 = (Ë(
pc
 - 
Sèπ
) / 4;

178 i‡(
uIns
 > 
Index
 && 
PC
[Index] =
pc
)

180 
°‹eRefCou¡
[
Index
]++;

181 
°‹e2LdDis
[
Index
] +
commDi°
;

182 i‡(
°LdArcs
[
Index
] =
NULL
)

183 
°LdArcs
[
Index
] = 
√w
 
	`°©sE¡ry
 (
lﬂdPC
);

185 
°LdArcs
[
Index
]->
	`ö£πSèt
 (
lﬂdPC
);

187 
	}
}

189 
	$St‹eProfWrôe
 (
FILE
 * 
Â
)

191 
i
 = 0; i < 
uIns
; i++)

193 i‡(
°‹eRefCou¡
[
i
] == 0)

194 
°‹e2LdDis
[
i
] = 2000000000;

197 
°‹e2LdDis
[
i
] = st‹e2LdDis[i] / 
°‹eRefCou¡
[i];

198 
	`Ârötf
 (
Â
, "PC: 0x%Œx\tSt‹eLdDi°: %Œd\tIn°Cou¡: %Œd\tRefCou¡: %Œd\t", 
PC
[
i
], 
°‹e2LdDis
[i], 
ªfCou¡
[i], 
°‹eRefCou¡
[i]);

199 i‡(
°LdArcs
[
i
] !
NULL
)

200 
°LdArcs
[
i
]->
	`wrôeCommLﬂd
 (
Â
);

201 
	`Ârötf
 (
Â
, "\n");

204 
	}
}

208 
	$ö£πBrDú
 (
md_addr_t
 
pc
, 
dú
, 
isMissPªd
)

210 
Index
 = (Ë(
pc
 - 
Sèπ
) / 4;

212 i‡(
uIns
 > 
Index
 && 
PC
[Index] =
pc
)

214 i‡(
dú
 == 0)

215 
nŸTakíBr
[
Index
]++;

217 
èkíBr
[
Index
]++;

218 
missPªd
[
Index
] +
isMissPªd
;

220 
	}
}

222 
	$BønchProfWrôe
 (
FILE
 * 
Â
)

224 
i
 = 0; i < 
uIns
; i++)

226 i‡(
nŸTakíBr
[
i
] !0 || 
èkíBr
[i] != 0)

227 
	`Ârötf
 (
Â
, "PC: 0x%Œx\tNŸTakí: %Œd\tTakí Bønch: %Œd TŸÆ Mis•ªdi˘i⁄ %Œd\n", 
PC
[
i
], 
nŸTakíBr
[i], 
èkíBr
[i], 
missPªd
[i]);

229 
	}
}

233 
	$PushMissPªdLﬂd
 (
md_addr_t
 
pc
, 
œãncy
)

235 
Index
 = (Ë(
pc
 - 
Sèπ
) / 4;

237 i‡(
uIns
 > 
Index
 && 
PC
[Index] =
pc
)

239 
missPªdi˘Cou¡
[
Index
]++;

240 
missPªdi˘L©
[
Index
] +
œãncy
;

242 
	}
}

244 
	$CacheProfWrôe
 (
FILE
 * 
Â
)

246 
i
 = 0; i < 
uIns
; i++)

248 i‡(
missPªdi˘Cou¡
[
i
] != 0)

249 
	`Ârötf
 (
Â
, "PC: 0x%Œx\tTŸÆMissL©: %Œd\tMis†Cou¡: %Œd\n", 
PC
[
i
], 
missPªdi˘L©
[i], 
missPªdi˘Cou¡
[i]);

251 
	}
}

255 
	$RódSkñë⁄
 (
FILE
 * 
Â
, 
ty≥
)

257 
löe
[20000];

258 *
w‹d
;

259 *
√xt
;

260 *
tokí
;

262 
	`fgës
 (
löe
, 20000, 
Â
))

264 
w‹d
 = 
löe
;

265 
tokí
 = 
	`°πok_r
 (
w‹d
, " ", &
√xt
);

266 
w‹d
 = 
√xt
;

267 
PC
[
uIns
] = (
md_addr_t
Ë
	`°πﬁl
 (
tokí
, &
√xt
, 0);

269 
tokí
 = 
	`°πok_r
 (
w‹d
, "\t", &
√xt
);

270 
w‹d
 = 
√xt
;

271 
InsToExec
[
uIns
] = (Ë
	`°πﬁ
 (
tokí
, &
√xt
, 0);

273 i‡(
ty≥
 == 1)

275 
i
 = 0; i < 
InsToExec
[
uIns
]; i++)

277 
tokí
 = 
	`°πok_r
 (
w‹d
, "\t", &
√xt
);

278 
w‹d
 = 
√xt
;

279 
md_addr_t
 
èrgëPC
 = (md_addr_tË
	`°πﬁl
 (
tokí
, &
√xt
, 0);

281 i‡(
èrgëPC
 == 0)

282 
	`Ârötf
 (
°dîr
, "Target PC canÇot beÜoaded zero\n");

284 i‡(
ö°Sèt
[
uIns
] =
NULL
)

286 
md_addr_t
 
ãmpMask
 = 1;

288 
ãmpMask
 = (tempMask << 32);

289 
ö°Sèt
[
uIns
] = 
√w
 
ö°_°©
;

291 
ö°Sèt
[
uIns
]->
PC
 = 0;

292 
ö°Sèt
[
uIns
]->
PC
 = 
èrgëPC
;

293 
ö°Sèt
[
uIns
]->
PC
 = in°Sèt[uIns]->PC | 
ãmpMask
;

294 
ö°Sèt
[
uIns
]->
√xt
 = 
NULL
;

298 
md_addr_t
 
ãmpMask
 = 1;

300 
ãmpMask
 = (tempMask << 32);

301 
ö°_°©
 *
ãmp
 = 
√w
 inst_stat;

303 
ãmp
->
PC
 = 0;

304 
ãmp
->
PC
 = 
èrgëPC
;

305 
ãmp
->
PC
 |
ãmpMask
;

306 
ãmp
->
√xt
 = 
NULL
;

307 
ö°_°©
 *
åavî£
 = 
ö°Sèt
[
uIns
];

309 
åavî£
->
√xt
 !
NULL
)

310 
åavî£
 =Åøvî£->
√xt
;

311 
åavî£
->
√xt
 = 
ãmp
;

316 i‡(
uIns
 == 0)

318 
Sèπ
 = 
PC
[
uIns
];

320 i‡(
PC
[
uIns
] !(
md_addr_t
Ë(
Sèπ
 + 4 * uIns))

322 
	`Ârötf
 (
°dîr
, "Skeleton Read Contunity Error\n");

323 
	`exô
 (0);

325 
uIns
++;

327 
	}
}

330 
	$ExecSètus
 (
md_addr_t
 
pc
, md_addr_à*
bPt
)

332 
Index
 = (
pc
 - 
Sèπ
) / 4;

334 i‡(
uIns
 > 
Index
 && Index >= 0)

336 i‡(
PC
[
Index
] !
pc
)

341 
œ°Ac˚s£dT¨gës
 = 
ö°Sèt
[
Index
];

342 if(
bPt
)

343 *
bPt
 = 
Bound¨yPt
[
Index
];

344  
InsToExec
[
Index
];

348 
	}
}

351 
Skñë⁄Chk
 
	gskñë⁄
;

354 
	$SèπSkñë⁄Ród
 (
ty≥
)

356 
FILE
 *
Â
;

357 *
sim_°r_dump
;

358 *
sim_dump
 = 
sim_°r_dump
;

359 
°rFûeName
[256];

361 i‡(!
sim_dump
)

363 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

364 
	`exô
 (1);

367 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

368 i‡(
ty≥
 == 0)

369 
	`°rˇt
 (
°rFûeName
, ".dis");

371 
	`°rˇt
 (
°rFûeName
, ".bbl");

373 i‡((
Â
 = 
	`f›í
 (
°rFûeName
, "r")Ë=
NULL
)

375 
	`Ârötf
 (
°dîr
, "Error opening file\n");

376 
	`exô
 (0);

378 
skñë⁄
.
	`RódSkñë⁄
 (
Â
, 
ty≥
);

379 
	`f˛o£
 (
Â
);

380 
	}
}

383 
	$GëExecSètus
 (
md_addr_t
 
pc
, md_addr_à*
bPt
)

385  
skñë⁄
.
	`ExecSètus
 (
pc
, 
bPt
);

386 
	}
}

390 
	$ö°ExecuãdFªq
 (
md_addr_t
 
pc
)

392 
skñë⁄
.
	`ExecFªq
 (
pc
);

393 
	}
}

396 
	$FªquícyWrôe
 ()

398 
FILE
 *
Â
;

399 *
sim_°r_dump
;

400 *
sim_dump
 = 
sim_°r_dump
;

401 
°rFûeName
[256];

403 i‡(!
sim_dump
)

405 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

406 
	`exô
 (1);

409 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

410 
	`°rˇt
 (
°rFûeName
, ".fpf");

412 i‡((
Â
 = 
	`f›í
 (
°rFûeName
, "w")Ë=
NULL
)

414 
	`Ârötf
 (
°dîr
, "Error opening file\n");

415 
	`exô
 (0);

417 
skñë⁄
.
	`FªquícyWrôe
 (
Â
);

418 
	`f˛o£
 (
Â
);

419 
	}
}

423 
	$AddSt‹eRef
 (
md_addr_t
 
PC
, md_addr_à
lﬂdPC
, 
cou¡î_t
 
commDi°
)

425 
skñë⁄
.
	`AddSt‹eRef
 (
PC
, 
lﬂdPC
, 
commDi°
);

426 
	}
}

429 
	$St‹eProfWrôe
 ()

431 
FILE
 *
Â
;

432 *
sim_°r_dump
;

433 *
sim_dump
 = 
sim_°r_dump
;

434 
°rFûeName
[256];

436 i‡(!
sim_dump
)

438 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

439 
	`exô
 (1);

442 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

443 
	`°rˇt
 (
°rFûeName
, ".spf");

445 i‡((
Â
 = 
	`f›í
 (
°rFûeName
, "w")Ë=
NULL
)

447 
	`Ârötf
 (
°dîr
, "Error opening file\n");

448 
	`exô
 (0);

450 
skñë⁄
.
	`St‹eProfWrôe
 (
Â
);

451 
	`f˛o£
 (
Â
);

452 
	}
}

456 
	$ö£π_br_dú
 (
md_addr_t
 
pc
, 
dú
, 
missPªd
)

458 
skñë⁄
.
	`ö£πBrDú
 (
pc
, 
dú
, 
missPªd
);

459 
	}
}

462 
	$BønchProfWrôe
 ()

464 
FILE
 *
Â
;

465 *
sim_°r_dump
;

466 *
sim_dump
 = 
sim_°r_dump
;

467 
°rFûeName
[256];

469 i‡(!
sim_dump
)

471 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

472 
	`exô
 (1);

475 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

476 
	`°rˇt
 (
°rFûeName
, ".bpf");

478 i‡((
Â
 = 
	`f›í
 (
°rFûeName
, "w")Ë=
NULL
)

480 
	`Ârötf
 (
°dîr
, "Error opening file\n");

481 
	`exô
 (0);

483 
skñë⁄
.
	`BønchProfWrôe
 (
Â
);

484 
	`f˛o£
 (
Â
);

485 
	}
}

489 
	$PushMissPªdLﬂd
 (
md_addr_t
 
pc
, 
œãncy
)

491 
skñë⁄
.
	`PushMissPªdLﬂd
 (
pc
, 
œãncy
);

492 
	}
}

495 
	$CacheProfWrôe
 ()

497 
FILE
 *
Â
;

498 *
sim_°r_dump
;

499 *
sim_dump
 = 
sim_°r_dump
;

500 
°rFûeName
[256];

502 i‡(!
sim_dump
)

504 
	`Ârötf
 (
°dîr
, "NoÇame for dump file\n");

505 
	`exô
 (1);

508 
	`°r˝y
 (
°rFûeName
, 
sim_dump
);

509 
	`°rˇt
 (
°rFûeName
, ".cpf");

511 i‡((
Â
 = 
	`f›í
 (
°rFûeName
, "w")Ë=
NULL
)

513 
	`Ârötf
 (
°dîr
, "Error opening file\n");

514 
	`exô
 (0);

516 
skñë⁄
.
	`CacheProfWrôe
 (
Â
);

517 
	`f˛o£
 (
Â
);

518 
	}
}

	@smt.h

102 
	#SMT_SS


	)

104 #ifde‡
SMT_SS


107 
	#RELAXED_CONSISTENCY


	)

110 
	#MAXTHREADS
 64

	)

111 
	#WORDSIZE
 8

	)

120 
	#COUNT_LSQ


	)

123 #ifde‡
COUNT_LSQ


136 
	#RES1_FULL_MASK


	)

141 
	#CMP_MACHINE


	)

143 #i‡(
MAXTHREADS
 == 1)

144 
	#MESH_SIZE
 1

	)

145 
	#CLUSTERS
 1

	)

146 
	#PREG_CLUSTER
 1

	)

147 
	#CL_INT_DIV
(
x
) ((x) >> 0)

148 
	#CL_FLOAT_DIV
(
x
) ((x) * 1)

149 
	#CL_MOD
(
x
) ((x) & 0)

151 #i‡(
MAXTHREADS
 =2)

	)

152 
	#MESH_SIZE
 2

	)

153 
	#CLUSTERS
 2

	)

154 
	#PREG_CLUSTER
 2

	)

155 
	#CL_INT_DIV
(
x
) ((x) >> 1)

156 
	#CL_FLOAT_DIV
(
x
) ((x) * .5)

157 
	#CL_MOD
(
x
) ((x) & 1)

159 #i‡(
MAXTHREADS
 =4)

	)

160 
	#MESH_SIZE
 2

	)

161 
	#CLUSTERS
 4

	)

162 
	#PREG_CLUSTER
 4

	)

163 
	#CL_INT_DIV
(
x
) ((x) >> 2)

164 
	#CL_FLOAT_DIV
(
x
) ((x) * .25)

165 
	#CL_MOD
(
x
) ((x) & 3)

167 #i‡(
MAXTHREADS
 =8)

	)

168 
	#MESH_SIZE
 4

	)

169 
	#CLUSTERS
 8

	)

170 
	#PREG_CLUSTER
 8

	)

171 
	#CL_INT_DIV
(
x
) ((x) >> 3)

172 
	#CL_FLOAT_DIV
(
x
) ((x) * .125)

173 
	#CL_MOD
(
x
) ((x) & 7)

175 #i‡(
MAXTHREADS
 =16)

	)

176 
	#MESH_SIZE
 4

	)

177 
	#CLUSTERS
 16

	)

178 
	#PREG_CLUSTER
 16

	)

179 
	#CL_INT_DIV
(
x
) ((x) >> 4)

180 
	#CL_FLOAT_DIV
(
x
) ((x) * .0625)

181 
	#CL_MOD
(
x
) ((x) & 15)

183 #i‡(
MAXTHREADS
 =32)

	)

184 
	#MESH_SIZE
 4

	)

185 
	#CLUSTERS
 32

	)

186 
	#PREG_CLUSTER
 32

	)

187 
	#CL_INT_DIV
(
x
) ((x) >> 5)

188 
	#CL_FLOAT_DIV
(
x
) ((x) * .03125)

189 
	#CL_MOD
(
x
) ((x) & 31)

191 #i‡(
MAXTHREADS
 =64)

	)

192 
	#MESH_SIZE
 8

	)

193 
	#CLUSTERS
 64

	)

194 
	#PREG_CLUS64R
 64

	)

195 
	#CL_INT_DIV
(
x
) ((x) >> 6)

196 
	#CL_FLOAT_DIV
(
x
) ((x) * .015625)

197 
	#CL_MOD
(
x
) ((x) & 63)

199 #i‡(
MAXTHREADS
 =80)

	)

200 
	#MESH_SIZE
 10

	)

201 
	#CLUSTERS
 80

	)

202 
	#PREG_CLUS64R
 80

	)

203 
	#CL_INT_DIV
(
x
) ((x) >> 6)

204 
	#CL_FLOAT_DIV
(
x
) ((x) * .015625)

205 
	#CL_MOD
(
x
) ((x) & 63)

207 #i‡(
MAXTHREADS
 =128)

	)

208 
	#MESH_SIZE
 16

	)

209 
	#CLUSTERS
 128

	)

210 
	#PREG_CLUS64R
 128

	)

211 
	#CL_INT_DIV
(
x
) ((x) >> 7)

212 
	#CL_FLOAT_DIV
(
x
) ((x) * .0078125)

213 
	#CL_MOD
(
x
) ((x) & 127)

215 #i‡(
MAXTHREADS
 =256)

	)

216 
	#MESH_SIZE
 16

	)

217 
	#CLUSTERS
 256

	)

218 
	#PREG_CLUS64R
 256

	)

219 
	#CL_INT_DIV
(
x
) ((x) >> 8)

220 
	#CL_FLOAT_DIV
(
x
) ((x) * .00390625)

221 
	#CL_MOD
(
x
) ((x) & 255)

223 

	)

224 #ifde‡
CMC_MACHINE


225 
	#CMC_PARTS
 2

226 
	#CMC_N_WAY
 (
CLUSTERS
/
CMC_PARTS
)

	)

227 
	#CMC_START_N_WAY


	)

228 
	#CMC_FRONT_END


	)

229 
	#PARTITIONED_LSQ


	)

235 #ifde‡
CMP_MACHINE


237 
	#CMP_N_WAY


	)

238 
	#PARTITIONED_FRONT_END


	)

239 
	#PARTITIONED_LSQ


	)

240 
	#NO_OVERHEAD


	)

241 
	#NO_COMMUNICATION


	)

266 #ifde‡
NO_OVERHEAD


267 
	#IGNORE_ALL_COMM_LATENCY


	)

268 
	#NO_EXTRA_RESOURCE


270 

	)

271 #ifde‡
IGNORE_ALL_COMM_LATENCY


272 
	#IGNORE_MEM_COMM_LATENCY


	)

273 
	#IGNORE_DISPATCH_COMM_LATENCY


	)

276 #ifde‡
NO_EXTRA_RESOURCE


277 
	#NO_EXTRA_REG


	)

278 
	#NO_EXTRA_LSQ


	)

282 
	#IFREELIST_FREELIST


	)

287 
	#ALLOW_ANY_CLUSTER


	)

299 #ifde‡
ACTIVE_N_WAY


302 
	#FIXED_N_WAY


304 

	)

306 
	#FETCH_QUEUE_COMPACT


308 
	#PERFECT_PREDICTOR_BUG


	)

309 
	#FETCH_LIMIT_THREAD_BUG


	)

338 #ifde‡
INTERLEAVE_FETCH


339 
	#ROUND_ROBIN


	)

340 
	#FETCH_BANK_MULT


	)

342 
	#STEER_NEIGHBOR_BIAS


	)

347 #ifde‡
EXAMINE_FETCH


349 
	#FETCH_TARGET_TRACE


	)

362 #ifde‡
PARTITIONED_FRONT_END


364 
	#FETCH_QUEUE_CLUSTER


	)

368 
	#DISPATCH_CLUSTER


	)

371 
	#ICACHE_BANK_CLUSTER


	)

372 
	#FETCH_BANK_MULT


375 

	)

376 #ifde‡
CMC_FRONT_END


378 
	#FETCH_QUEUE_CMC


	)

380 
	#DISPATCH_CMC


	)

381 
	#SELECTIVE_DISPATCH


	)

385 
	#DISPATCH_COMM_LATENCY_CMC


	)

387 
	#ICACHE_BANK_CMC


	)

388 
	#FETCH_BANK_MULT


391 

	)

395 
	#FETCH_QUEUE_THREAD


	)

396 
	#SELECTIVE_DISPATCH


	)

417 
	#NO_GATE


	)

418 #ifde‡
NO_GATE


419 
	#MIN_PDG
 
MAXTHREADS
+1

	)

421 
	#MIN_PDG
 2

	)

437 
	#LOAD_MISS


	)

457 
	#N_WAY_STEER


	)

471 
	#TOTAL_COMM


	)

474 
	#COMM_FACTOR
 10

	)

476 
	#MEM_BANK_FACTOR
 0

	)

483 #i‚de‡
IGNORE_ALL_COMM_LATENCY


484 
	#STEER_OPRANDS


	)

488 #i‚de‡
IGNORE_MEM_COMM_LATENCY


489 
	#STEER_MEM_NEIGHBOR
 1

	)

499 
	#STEER_RES1


	)

507 #ifde‡
STEER_NEIGHBOR_BIAS


510 
	#INIT_N_WAY_CENTRAL


	)

513 #ifde‡ 
CENTRALIZED_STEER


515 
	#INIT_CENTRALIZED_STEER


	)

518 #ifde‡ 
MINIMUM_STEER


520 
	#INIT_CENTRALIZED_STEER


	)

523 #ifde‡ 
MEM_STEER


524 
	#DISTRIBUTED_STEER


	)

525 
	#CENTRALIZED_LSQ


	)

528 #ifde‡ 
STEER_MEM_LSQ


529 #i‚de‡ 
INIT_CMP_STEER


530 
	#DISTRIBUTED_STEER


	)

534 #ifde‡ 
N_WAY_STEER


539 #ifde‡
EXAMIN_N_WAY_ADAPT


542 
	#PERIODIC_INVASTIGATE
 1000

	)

543 
	#DOUBLE_ADAPT


	)

546 
	#ADAPT_RATE
 1000

	)

550 
	#ARITHMATIC_MEAN


	)

551 
	#ACCUMILATE
 5

	)

553 #ifde‡ 
CMC_PARTS


554 
	#EXAMIN_CMC


	)

566 
	#DISABLE_DISPATCH_GATE
 0

	)

575 
	#RATIO_LIMIT
 1.5

	)

588 
	#UNREADY_COUNT_LIMIT
 100

	)

591 
	#UNREADY_CHAIN_LIMIT
 100

	)

602 #ifde‡ 
FIXED_N_WAY


603 #ifde‡
MONOLETHIC_MACHINE


604 
	#N_WAY
 1

	)

606 #ifde‡
CMC_N_WAY


607 
	#N_WAY
 
CMC_N_WAY


608 #ñ£ // f‹ CMC_N_WAY

	)

609 #ifde‡ 
CMP_N_WAY


610 
	#N_WAY
 1

	)

612 #ifde‡
N_WAY


614 #i‡
N_WAY
 > 
CLUSTERS


615 #îr‹ 
N_WAY
 > 
CLUSTERS
 
d€s
 
nŸ
 
make
 
£n£


618 
	#N_WAY
 2

624 

	)

628 #ifde‡ 
COUNT_LSQ


635 #ifde‡ 
THRD_PROFILE


642 
	#mix1_4_m


	)

645 
	#NUMPARTITIONS
 2

	)

651 
	#LINE_INTERLEAVED


	)

653 #ifde‡ 
LINE_INTERLEAVED


654 
	#THRD_WAY_CACHE


	)

655 
	#WORD_INTERLEAVED
 0

	)

657 
	#WORD_INTERLEAVED
 1

	)

662 #i‚de‡ 
CENTRALIZED_LSQ


663 
	#DE_CENTRALIZED_LSQ


	)

666 #ifde‡
DE_CENTRALIZED_LSQ


668 
	#SPLIT_LSQ


670 

	)

671 #ifde‡ 
SPLIT_LSQ


672 
	#LSQ_FULL_MASK


	)

673 
	#PARTITIONED_LSQ


675 #i‚de‡
NO_EXTRA_LSQ


	)

676 
	#DISTRIBUTE_STORE


	)

678 
	#PWR_DE_CENTRALIZED_LSQ


	)

682 
	#CENTRALIZED_CACHE_BANK


	)

692 #ifde‡ 
PARTITIONED_LSQ


693 
	#CENTRALIZED_CACHE_BANK


	)

694 #ifde‡
CMP_N_WAY


695 
	#LSQ_PARTS
 
CLUSTERS


	)

697 #ifde‡
CMC_N_WAY


698 
	#LSQ_PARTS
 
CMC_PARTS


	)

700 
	#LSQ_PARTS
 4

703 #ñ£ // f‹ PARTITIONED_LSQ

	)

704 
	#LSQ_PARTS
 
CLUSTERS


	)

707 #ifde‡
CENTRALIZED_CACHE_BANK


708 #i‚de‡
PARTITIONED_LSQ


709 
	#STEER_MEM_NEIGHBOR
 0

	)

717 #ifde‡
PWR_DE_CENTRALIZED_LSQ


718 
	#DE_CENTRALIZED_POWER_BUG


	)

721 #ifde‡ 
THRD_WAY_CACHE


722 
	#SEQUENTIAL_LINE


	)

726 #ifde‡ 
FIXED_N_WAY


728 #ifde‡ 
STEER_CACHE_COUPLING


729 
	#N_WAY_CACHE
 
N_WAY


	)

731 #ifde‡ 
CMP_N_WAY


732 
	#N_WAY_CACHE
 1

	)

734 
	#N_WAY_CACHE
 1

740 

	)

742 #ifde‡
N_WAY_CACHE_ADAPT


744 
	#PRIVATE_CACHE


	)

745 
	#DOUBLE_ADAPT


	)

746 
	#ADAPT_RATE
 1000

	)

747 
	#PER_FACTOR
 0.25

	)

748 
	#MEMORYLESS


	)

749 
	#MEM_REF


	)

752 
	#MEM_REF_FACTOR
 0.16

	)

762 #i‚de‡ 
NO_COMMUNICATION


764 
	#RAW


	)

766 
	#RABMAP


	)

767 #ifde‡ 
RABMAP


768 
	#RAWMAP


	)

769 
	#RABCOMM


	)

774 
	#COMM_BUFF


	)

776 
	#COMM_LINK_PWR


	)

780 
	#INST_TRANS_RATE


782 #ifde‡
INST_TRANS_RATE


	)

783 
	#LINK_WIDTH
 2

784 
	#TRACE_REG


	)

788 
	#MEM_COMM_LAT


789 #ifde‡
MEM_COMM_LAT


	)

790 
	#LOAD_COMM_BUG


795 

	)

796 
	#STRUCT_HAZARD


797 

	)

799 
	#PWR_CLUSTER


	)

801 #ifde‡ 
PWR_CLUSTER


803 
	#ISSUE_PER_CLUSTER


	)

808 
	#CLUSTER_CONFLICTS


	)

809 
	#DELAY_STAT


	)

810 
	#CACHE_MISS_STAT


	)

811 
	#STEER_STAT


	)

812 
	#COMM_LAT_STAT


	)

814 
	#CACHE_BANK_STAT


	)

815 
	#PERFORMANCE_STAT


	)

816 
	#FETCH_DELAY_STAT


	)

817 
	#DISPATCH_STAT


	)

818 
	#ISSUE_STAT


	)

819 
	#CACHE_THRD_STAT


	)

820 
	#MEM_REF_STAT


	)

824 #ifde‡
CACHE_SET_STAT


825 
	#MAXCACHESET
 1024

	)

829 #ifde‡ 
STEER_DISPATCH_STAT


831 
	#MAXDEV
 256

	)

833 
	#OPERANDS_READY
(
RS
Ë\

	)

834 ((
	gRS
)->
	gidï_ªady
[0] && (RS)->idep_ready[1] && (RS)->idep_ready[2])

835 
	#UNREADY_DISPATCH_STAT


	)

838 
	#IC_STAT


	)

844 
	#REG_RENAME_CONFIGUARE


	)

847 
	#ISSUE_FU


	)

850 
	#ISSUE_FU_PORT


	)

853 
	#PORT_PER_BANK


	)

866 #i‚de‡
FETCH_TARGET_TRACE


868 
	#FETCH_ONE_BLOCK


	)

874 
	#MSHR


	)

875 #ifde‡ 
MSHR


877 
	#MSHRSIZE
 10000000

878 
	#MSHR_DIST


880 

	)

881 
	#PWR_CLOCK_DIST


	)

882 
	#PWR_WAKEUP_SELECT


883 
	#PWR_ACCESS


884 

	)

887 
	#PWR__SMT_RR


888 
	#PWR__SMT_MULTIRAT


889 

	)

890 
	#PWR_WAKE


892 #ifde‡ 
PWR_WAKE


	)

896 
	#ICACHEBANKS
 8

897 

	)

898 #ifde‡ 
PORT_PER_BANK


899 
	#PWR_BANKS


901 

	)

904 
	#ISU_N2


905 

	)

908 #ifde‡ 
EVENT_CACHE_UPDATE


914 
	#NO_RONZ_PRINT


	)

930 
	#DISPATCH_COMM_LATENCY_BUG


	)

932 
	#ERRNO_BUG


	)

934 
	#MISFETCH_BUG


	)

958 
	#FIX2_BUG


	)

963 
	#FIX_LAT_BUG


	)

968 
	#FIX_LSQ_REFRESH_BUG


	)

976 #ifde‡ 
CYCLE_JUMP


977 
	#LATEST_CYCLE_JUMP


	)

978 
	#SKIP_JUMP_LIMIT
 500

980 

	)

	@stats.c

95 
	~<°dio.h
>

96 
	~<°dlib.h
>

97 
	~<limôs.h
>

98 
	~<m©h.h
>

100 
	~"ho°.h
"

101 
	~"misc.h
"

102 
	~"machöe.h
"

103 
	~"evÆ.h
"

104 
	~"°©s.h
"

107 (*
	tqs‹t_func
)(const *, const *);

110 
evÆ_vÆue_t


111 
	$°©_evÆ_idít
(
evÆ_°©e_t
 *
es
)

113 
°©_sdb_t
 *
sdb
 = 
es
->
u£r_±r
;

114 
°©_°©_t
 *
°©
;

115 
evÆ_vÆue_t
 
îr_vÆue
 = { 
ë_öt
, { 0 } };

116 
evÆ_vÆue_t
 
vÆ
;

119 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

121 i‡(!
	`°rcmp
(
°©
->
«me
, 
es
->
tok_buf
))

127 i‡(!
°©
)

130 
evÆ_îr‹
 = 
ERR_UNDEFVAR
;

131 
evÆ_îr_exåa_öfo
 = 
es
->
tok_buf
;

132  
îr_vÆue
;

137 
°©
->
sc
)

139 
sc_öt
:

140 
vÆ
.
ty≥
 = 
ë_öt
;

141 
vÆ
.
vÆue
.
as_öt
 = *
°©
->
v¨ü¡
.
f‹_öt
.
v¨
;

143 
sc_uöt
:

144 
vÆ
.
ty≥
 = 
ë_uöt
;

145 
vÆ
.
vÆue
.
as_uöt
 = *
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
;

147 #ifde‡
HOST_HAS_QWORD


148 
sc_qw‹d
:

150 
vÆ
.
ty≥
 = 
ë_doubÀ
;

151 #ifde‡
_MSC_VER


152 
vÆ
.
vÆue
.
as_doubÀ
 = ()(
sqw‹d_t
)*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

154 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
;

157 
sc_sqw‹d
:

159 
vÆ
.
ty≥
 = 
ë_doubÀ
;

160 
vÆ
.
vÆue
.
as_doubÀ
 = ()*
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
;

163 
sc_Êﬂt
:

164 
vÆ
.
ty≥
 = 
ë_Êﬂt
;

165 
vÆ
.
vÆue
.
as_Êﬂt
 = *
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
;

167 
sc_doubÀ
:

168 
vÆ
.
ty≥
 = 
ë_doubÀ
;

169 
vÆ
.
vÆue
.
as_doubÀ
 = *
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
;

171 
sc_di°
:

172 
sc_sdi°
:

173 
	`Áèl
("stat distributionsÇotállowed in formulaÉxpressions");

175 
sc_f‹muœ
:

178 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

179 *
ídp
;

181 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

182 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

185 
vÆ
 = 
îr_vÆue
;

188 
	`evÆ_dñëe
(
es
);

192 
	`∑nic
("bogus stat class");

195  
vÆ
;

196 
	}
}

199 
°©_sdb_t
 *

200 
	$°©_√w
()

202 
°©_sdb_t
 *
sdb
;

204 
sdb
 = (
°©_sdb_t
 *)
	`ˇŒoc
(1, (stat_sdb_t));

205 i‡(!
sdb
)

206 
	`Áèl
("out of virtual memory");

208 
sdb
->
°©s
 = 
NULL
;

209 
sdb
->
evÆu©‹
 = 
	`evÆ_√w
(
°©_evÆ_idít
, sdb);

211  
sdb
;

212 
	}
}

216 
	$°©_dñëe
(
°©_sdb_t
 *
sdb
)

218 
i
;

219 
°©_°©_t
 *
°©
, *
°©_√xt
;

220 
buckë_t
 *
buckë
, *
buckë_√xt
;

223 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà
°©_√xt
)

225 
°©_√xt
 = 
°©
->
√xt
;

226 
°©
->
√xt
 = 
NULL
;

229 
°©
->
sc
)

231 
sc_öt
:

232 
sc_uöt
:

233 #ifde‡
HOST_HAS_QWORD


234 
sc_qw‹d
:

235 
sc_sqw‹d
:

237 
sc_Êﬂt
:

238 
sc_doubÀ
:

239 
sc_f‹muœ
:

242 
sc_di°
:

244 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_di°
.
¨r
);

245 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 = 
NULL
;

247 
sc_sdi°
:

249 
i
=0; i<
HTAB_SZ
; i++)

251 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

252 
buckë
 !
NULL
;

253 
buckë
 = 
buckë_√xt
)

255 
buckë_√xt
 = 
buckë
->
√xt
;

256 
buckë
->
√xt
 = 
NULL
;

257 
	`‰ì
(
buckë
);

259 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
] = 
NULL
;

262 
	`‰ì
(
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
);

263 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = 
NULL
;

266 
	`∑nic
("bogus stat class");

269 
	`‰ì
(
°©
);

271 
sdb
->
°©s
 = 
NULL
;

272 
	`evÆ_dñëe
(
sdb
->
evÆu©‹
);

273 
sdb
->
evÆu©‹
 = 
NULL
;

274 
	`‰ì
(
sdb
);

275 
	}
}

279 
	$add_°©
(
°©_sdb_t
 *
sdb
,

280 
°©_°©_t
 *
°©
)

282 
°©_°©_t
 *
ñt
, *
¥ev
;

285 
¥ev
=
NULL
, 
ñt
=
sdb
->
°©s
;É… !NULL;ÖªvÛ…,É…Û…->
√xt
)

289 i‡(
¥ev
 !
NULL
)

290 
¥ev
->
√xt
 = 
°©
;

292 
sdb
->
°©s
 = 
°©
;

293 
°©
->
√xt
 = 
NULL
;

294 
	}
}

297 
°©_°©_t
 *

298 
	$°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

299 *
«me
,

300 *
desc
,

301 *
v¨
,

302 
öô_vÆ
,

303 *
f‹m©
)

305 
°©_°©_t
 *
°©
;

307 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

308 i‡(!
°©
)

309 
	`Áèl
("out of virtual memory");

311 
°©
->
«me
 = 
	`my°rdup
(name);

312 
°©
->
desc
 = 
	`my°rdup
(desc);

313 
°©
->
f‹m©
 = format ? format : "%12d";

314 
°©
->
sc
 = 
sc_öt
;

315 
°©
->
v¨ü¡
.
f‹_öt
.
v¨
 = var;

316 
°©
->
v¨ü¡
.
f‹_öt
.
öô_vÆ
 = init_val;

319 
	`add_°©
(
sdb
, 
°©
);

322 *
v¨
 = 
öô_vÆ
;

324  
°©
;

325 
	}
}

328 
°©_°©_t
 *

329 
	$°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

330 *
«me
,

331 *
desc
,

332 *
v¨
,

333 
öô_vÆ
,

334 *
f‹m©
)

336 
°©_°©_t
 *
°©
;

338 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

339 i‡(!
°©
)

340 
	`Áèl
("out of virtual memory");

342 
°©
->
«me
 = 
	`my°rdup
(name);

343 
°©
->
desc
 = 
	`my°rdup
(desc);

344 
°©
->
f‹m©
 = format ? format : "%12u";

345 
°©
->
sc
 = 
sc_uöt
;

346 
°©
->
v¨ü¡
.
f‹_uöt
.
v¨
 = var;

347 
°©
->
v¨ü¡
.
f‹_uöt
.
öô_vÆ
 = init_val;

350 
	`add_°©
(
sdb
, 
°©
);

353 *
v¨
 = 
öô_vÆ
;

355  
°©
;

356 
	}
}

358 #ifde‡
HOST_HAS_QWORD


360 
°©_°©_t
 *

361 
	$°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

362 *
«me
,

363 *
desc
,

364 
qw‹d_t
 *
v¨
,

365 
qw‹d_t
 
öô_vÆ
,

366 *
f‹m©
)

368 
°©_°©_t
 *
°©
;

370 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

371 i‡(!
°©
)

372 
	`Áèl
("out of virtual memory");

374 
°©
->
«me
 = 
	`my°rdup
(name);

375 
°©
->
desc
 = 
	`my°rdup
(desc);

376 
°©
->
f‹m©
 = format ? format : "%12lu";

377 
°©
->
sc
 = 
sc_qw‹d
;

378 
°©
->
v¨ü¡
.
f‹_qw‹d
.
v¨
 = var;

379 
°©
->
v¨ü¡
.
f‹_qw‹d
.
öô_vÆ
 = init_val;

382 
	`add_°©
(
sdb
, 
°©
);

385 *
v¨
 = 
öô_vÆ
;

387  
°©
;

388 
	}
}

391 
°©_°©_t
 *

392 
	$°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

393 *
«me
,

394 *
desc
,

395 
sqw‹d_t
 *
v¨
,

396 
sqw‹d_t
 
öô_vÆ
,

397 *
f‹m©
)

399 
°©_°©_t
 *
°©
;

401 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

402 i‡(!
°©
)

403 
	`Áèl
("out of virtual memory");

405 
°©
->
«me
 = 
	`my°rdup
(name);

406 
°©
->
desc
 = 
	`my°rdup
(desc);

407 
°©
->
f‹m©
 = format ? format : "%12ld";

408 
°©
->
sc
 = 
sc_sqw‹d
;

409 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
v¨
 = var;

410 
°©
->
v¨ü¡
.
f‹_sqw‹d
.
öô_vÆ
 = init_val;

413 
	`add_°©
(
sdb
, 
°©
);

416 *
v¨
 = 
öô_vÆ
;

418  
°©
;

419 
	}
}

423 
°©_°©_t
 *

424 
	$°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

425 *
«me
,

426 *
desc
,

427 *
v¨
,

428 
öô_vÆ
,

429 *
f‹m©
)

431 
°©_°©_t
 *
°©
;

433 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

434 i‡(!
°©
)

435 
	`Áèl
("out of virtual memory");

437 
°©
->
«me
 = 
	`my°rdup
(name);

438 
°©
->
desc
 = 
	`my°rdup
(desc);

439 
°©
->
f‹m©
 = format ? format : "%12.4f";

440 
°©
->
sc
 = 
sc_Êﬂt
;

441 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
v¨
 = var;

442 
°©
->
v¨ü¡
.
f‹_Êﬂt
.
öô_vÆ
 = init_val;

445 
	`add_°©
(
sdb
, 
°©
);

448 *
v¨
 = 
öô_vÆ
;

450  
°©
;

451 
	}
}

454 
°©_°©_t
 *

455 
	$°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

456 *
«me
,

457 *
desc
,

458 *
v¨
,

459 
öô_vÆ
,

460 *
f‹m©
)

462 
°©_°©_t
 *
°©
;

464 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

465 i‡(!
°©
)

466 
	`Áèl
("out of virtual memory");

468 
°©
->
«me
 = 
	`my°rdup
(name);

469 
°©
->
desc
 = 
	`my°rdup
(desc);

470 
°©
->
f‹m©
 = format ? format : "%12.4f";

471 
°©
->
sc
 = 
sc_doubÀ
;

472 
°©
->
v¨ü¡
.
f‹_doubÀ
.
v¨
 = var;

473 
°©
->
v¨ü¡
.
f‹_doubÀ
.
öô_vÆ
 = init_val;

476 
	`add_°©
(
sdb
, 
°©
);

479 *
v¨
 = 
öô_vÆ
;

481  
°©
;

482 
	}
}

490 
°©_°©_t
 *

491 
	$°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

492 *
«me
,

493 *
desc
,

494 
öô_vÆ
,

495 
¨r_sz
,

496 
buckë_sz
,

497 
pf
,

498 *
f‹m©
,

499 **
im≠
,

500 
¥öt_‚_t
 
¥öt_‚
)

502 
i
;

503 
°©_°©_t
 *
°©
;

504 *
¨r
;

506 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

507 i‡(!
°©
)

508 
	`Áèl
("out of virtual memory");

510 
°©
->
«me
 = 
	`my°rdup
(name);

511 
°©
->
desc
 = 
	`my°rdup
(desc);

512 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

513 
°©
->
sc
 = 
sc_di°
;

514 
°©
->
v¨ü¡
.
f‹_di°
.
öô_vÆ
 = init_val;

515 
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
 =árr_sz;

516 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
 = bucket_sz;

517 
°©
->
v¨ü¡
.
f‹_di°
.
pf
 =Öf;

518 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
 = imap;

519 
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
 =Örint_fn;

520 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 = 0;

522 
¨r
 = (*)
	`ˇŒoc
(
¨r_sz
, ());

523 i‡(!
¨r
)

524 
	`Áèl
("out of virtual memory");

525 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
 =árr;

528 
	`add_°©
(
sdb
, 
°©
);

531 
i
=0; i < 
¨r_sz
; i++)

532 
¨r
[
i
] = 
öô_vÆ
;

534  
°©
;

535 
	}
}

544 
°©_°©_t
 *

545 
	$°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

546 *
«me
,

547 *
desc
,

548 
öô_vÆ
,

549 
pf
,

550 *
f‹m©
,

551 
¥öt_‚_t
 
¥öt_‚
)

553 
°©_°©_t
 *
°©
;

554 
buckë_t
 **
ßº
;

556 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

557 i‡(!
°©
)

558 
	`Áèl
("out of virtual memory");

560 
°©
->
«me
 = 
	`my°rdup
(name);

561 
°©
->
desc
 = 
	`my°rdup
(desc);

562 
°©
->
f‹m©
 = f‹m© ? f‹m© : 
NULL
;

563 
°©
->
sc
 = 
sc_sdi°
;

564 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
 = init_val;

565 
°©
->
v¨ü¡
.
f‹_sdi°
.
pf
 =Öf;

566 
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
 =Örint_fn;

569 
ßº
 = (
buckë_t
 **)
	`ˇŒoc
(
HTAB_SZ
, (bucket_t *));

570 i‡(!
ßº
)

571 
	`Áèl
("out of virtual memory");

572 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
 = sarr;

575 
	`add_°©
(
sdb
, 
°©
);

577  
°©
;

578 
	}
}

582 
	$°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

583 
md_addr_t
 
ödex
,

584 
nßm∂es
)

586 
°©
->
sc
)

588 
sc_di°
:

590 
i
;

593 
i
 = 
ödex
 / 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
;

596 i‡(
i
 >
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
)

597 
°©
->
v¨ü¡
.
f‹_di°
.
ovîÊows
 +
nßm∂es
;

599 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] +
nßm∂es
;

602 
sc_sdi°
:

604 
buckë_t
 *
buckë
;

605 
hash
 = 
	`HTAB_HASH
(
ödex
);

607 i‡(
hash
 < 0 || hash >
HTAB_SZ
)

608 
	`∑nic
("hashÅable index overflow");

611 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

612 
buckë
 !
NULL
;

613 
buckë
 = buckë->
√xt
)

615 i‡(
buckë
->
ödex
 == index)

618 i‡(!
buckë
)

621 
buckë
 = (
buckë_t
 *)
	`ˇŒoc
(1, (bucket_t));

622 i‡(!
buckë
)

623 
	`Áèl
("out of virtual memory");

624 
buckë
->
√xt
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
];

625 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
hash
] = 
buckë
;

626 
buckë
->
ödex
 = index;

627 
buckë
->
cou¡
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
öô_vÆ
;

629 
buckë
->
cou¡
 +
nßm∂es
;

633 
	`∑nic
("stat variable isÇotánárray distribution");

635 
	}
}

639 
	$°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

640 
md_addr_t
 
ödex
)

642 
	`°©_add_ßm∂es
(
°©
, 
ödex
, 1);

643 
	}
}

652 
°©_°©_t
 *

653 
	$°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

654 *
«me
,

655 *
desc
,

656 *
f‹muœ
,

657 *
f‹m©
)

659 
°©_°©_t
 *
°©
;

661 
°©
 = (
°©_°©_t
 *)
	`ˇŒoc
(1, (stat_stat_t));

662 i‡(!
°©
)

663 
	`Áèl
("out of virtual memory");

665 
°©
->
«me
 = 
	`my°rdup
(name);

666 
°©
->
desc
 = 
	`my°rdup
(desc);

667 
°©
->
f‹m©
 = format ? format : "%12.4f";

668 
°©
->
sc
 = 
sc_f‹muœ
;

669 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
 = 
	`my°rdup
(formula);

672 
	`add_°©
(
sdb
, 
°©
);

674  
°©
;

675 
	}
}

680 
	$com∑ª_‚
(*
p1
, *
p2
)

682 
buckë_t
 **
pb1
 = 
p1
, **
pb2
 = 
p2
;

685 i‡((*
pb1
)->
ödex
 < (*
pb2
)->index)

687 i‡((*
pb1
)->
ödex
 > (*
pb2
)->index)

691 
	}
}

695 
	$¥öt_di°
(
°©_°©_t
 *
°©
,

696 
FILE
 *
fd
)

698 
i
, 
bcou¡
, 
imax
, 
imö
;

699 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

700 
pf
 = 
°©
->
v¨ü¡
.
f‹_di°
.pf;

703 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

704 
imax
 = 0; 
imö
 = 
UINT_MAX
;

705 
i
=0; i<
°©
->
v¨ü¡
.
f‹_di°
.
¨r_sz
; i++)

707 
bcou¡
++;

708 
btŸÆ
 +
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

710 
bsqsum
 +(()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] *

711 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

712 
bavg
 = 
btŸÆ
 / 
	`max2
(()
bcou¡
, 1.0);

713 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

714 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

718 
	`Ârötf
(
fd
, "\n");

719 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

720 
	`Ârötf
(
fd
, "%s.array_size = %u\n",

721 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
¨r_sz
);

722 
	`Ârötf
(
fd
, "%s.bucket_size = %u\n",

723 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

725 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

726 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

727 i‡(
bcou¡
 > 0)

729 
	`Ârötf
(
fd
, "%s.imö = %u\n", 
°©
->
«me
, 0U);

730 
	`Ârötf
(
fd
, "%s.imax = %u\n", 
°©
->
«me
, 
bcou¡
);

734 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

735 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

737 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
	`max2
(
bcou¡
, 1.0));

738 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

739 
	`Ârötf
(
fd
, "%s.overflows = %u\n",

740 
°©
->
«me
, sèt->
v¨ü¡
.
f‹_di°
.
ovîÊows
);

742 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

743 
	`Ârötf
(
fd
, "# %14s ", "index");

744 i‡(
pf
 & 
PF_COUNT
)

745 
	`Ârötf
(
fd
, "%10s ", "count");

746 i‡(
pf
 & 
PF_PDF
)

747 
	`Ârötf
(
fd
, "%6s ", "pdf");

748 i‡(
pf
 & 
PF_CDF
)

749 
	`Ârötf
(
fd
, "%6s ", "cdf");

750 
	`Ârötf
(
fd
, "\n");

752 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

754 i‡(
bcou¡
 > 0)

757 
bsum
 = 0.0;

758 
i
=0; i<
bcou¡
; i++)

760 
bsum
 +()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
];

761 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
¥öt_‚
)

763 
°©
->
v¨ü¡
.
f‹_di°
.
	`¥öt_‚
(stat,

764 
i
,

765 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

766 
bsum
,

767 
btŸÆ
);

771 i‡(
°©
->
f‹m©
 =
NULL
)

773 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

774 
	`Ârötf
(
fd
, "%-16†", 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
]);

776 
	`Ârötf
(
fd
, "%16u ",

777 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
);

778 i‡(
pf
 & 
PF_COUNT
)

779 
	`Ârötf
(
fd
, "%10u ", 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
]);

780 i‡(
pf
 & 
PF_PDF
)

781 
	`Ârötf
(
fd
, "%6.2f ",

782 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

783 
	`max2
(
btŸÆ
, 1.0) * 100.0);

784 i‡(
pf
 & 
PF_CDF
)

785 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`max2
(
btŸÆ
, 1.0) * 100.0);

789 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

791 i‡(
°©
->
v¨ü¡
.
f‹_di°
.
im≠
)

792 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

793 
°©
->
v¨ü¡
.
f‹_di°
.
im≠
[
i
],

794 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

795 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

796 
	`max2
(
btŸÆ
, 1.0) * 100.0,

797 
bsum
/
	`max2
(
btŸÆ
, 1.0) * 100.0);

799 
	`Ârötf
(
fd
, 
°©
->
f‹m©
,

800 
i
 * 
°©
->
v¨ü¡
.
f‹_di°
.
buckë_sz
,

801 
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
],

802 ()
°©
->
v¨ü¡
.
f‹_di°
.
¨r
[
i
] /

803 
	`max2
(
btŸÆ
, 1.0) * 100.0,

804 
bsum
/
	`max2
(
btŸÆ
, 1.0) * 100.0);

807 
	`Áèl
("distribution formatÇot yet implemented");

809 
	`Ârötf
(
fd
, "\n");

814 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

815 
	}
}

819 
	$¥öt_sdi°
(
°©_°©_t
 *
°©
,

820 
FILE
 *
fd
)

822 
i
, 
bcou¡
;

823 
md_addr_t
 
imax
, 
imö
;

824 
btŸÆ
, 
bsum
, 
bv¨
, 
bavg
, 
bsqsum
;

825 
buckë_t
 *
buckë
;

826 
pf
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.pf;

829 
bcou¡
 = 0; 
btŸÆ
 = 0.0; 
bv¨
 = 0.0; 
bsqsum
 = 0.0;

830 
imax
 = 0; 
imö
 = 
UINT_MAX
;

831 
i
=0; i<
HTAB_SZ
; i++)

833 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

834 
buckë
 !
NULL
;

835 
buckë
 = buckë->
√xt
)

837 
bcou¡
++;

838 
btŸÆ
 +
buckë
->
cou¡
;

840 
bsqsum
 +(()
buckë
->
cou¡
 * ()bucket->count);

841 
bavg
 = 
btŸÆ
 / ()
bcou¡
;

842 
bv¨
 = (
bsqsum
 - (()
bcou¡
 * 
bavg
 * bavg)) /

843 ()(((
bcou¡
 - 1) > 0) ? (bcount - 1) : 1);

844 i‡(
buckë
->
ödex
 < 
imö
)

845 
imö
 = 
buckë
->
ödex
;

846 i‡(
buckë
->
ödex
 > 
imax
)

847 
imax
 = 
buckë
->
ödex
;

852 
	`Ârötf
(
fd
, "\n");

853 
	`Ârötf
(
fd
, "%-22†# %s\n", 
°©
->
«me
, sèt->
desc
);

854 
	`Ârötf
(
fd
, "%s.cou¡ = %u\n", 
°©
->
«me
, 
bcou¡
);

855 
	`Ârötf
(
fd
, "%s.tŸÆ = %.0f\n", 
°©
->
«me
, 
btŸÆ
);

856 i‡(
bcou¡
 > 0)

858 
	`myÂrötf
(
fd
, "%s.imö = 0x%p\n", 
°©
->
«me
, 
imö
);

859 
	`myÂrötf
(
fd
, "%s.imax = 0x%p\n", 
°©
->
«me
, 
imax
);

863 
	`Ârötf
(
fd
, "%s.imö = %d\n", 
°©
->
«me
, -1);

864 
	`Ârötf
(
fd
, "%s.imax = %d\n", 
°©
->
«me
, -1);

866 
	`Ârötf
(
fd
, "%s.avîagê%8.4f\n", 
°©
->
«me
, 
btŸÆ
/
bcou¡
);

867 
	`Ârötf
(
fd
, "%s.°d_dev = %8.4f\n", 
°©
->
«me
, 
	`sqπ
(
bv¨
));

868 
	`Ârötf
(
fd
, "%s.ovîÊow†0\n", 
°©
->
«me
);

870 
	`Ârötf
(
fd
, "#Ödf ==Örob dist fn, cdf == cumulative dist fn\n");

871 
	`Ârötf
(
fd
, "# %14s ", "index");

872 i‡(
pf
 & 
PF_COUNT
)

873 
	`Ârötf
(
fd
, "%10s ", "count");

874 i‡(
pf
 & 
PF_PDF
)

875 
	`Ârötf
(
fd
, "%6s ", "pdf");

876 i‡(
pf
 & 
PF_CDF
)

877 
	`Ârötf
(
fd
, "%6s ", "cdf");

878 
	`Ârötf
(
fd
, "\n");

880 
	`Ârötf
(
fd
, "%s.°¨t_di°\n", 
°©
->
«me
);

882 i‡(
bcou¡
 > 0)

884 
bödex
;

885 
buckë_t
 **
b¨r
;

888 
b¨r
 = (
buckë_t
 **)
	`ˇŒoc
(
bcou¡
, (bucket_t *));

889 i‡(!
b¨r
)

890 
	`Áèl
("out of virtual memory");

891 
bödex
=0,
i
=0; i<
HTAB_SZ
; i++)

893 
buckë
 = 
°©
->
v¨ü¡
.
f‹_sdi°
.
ßº
[
i
];

894 
buckë
 !
NULL
;

895 
buckë
 = buckë->
√xt
)

897 
b¨r
[
bödex
++] = 
buckë
;

902 
	`qs‹t
(
b¨r
, 
bcou¡
, (
buckë_t
 *), (
qs‹t_func
Ë
com∑ª_‚
);

905 
bsum
 = 0.0;

906 
i
=0; i<
bcou¡
; i++)

908 
bsum
 +()
b¨r
[
i
]->
cou¡
;

909 i‡(
°©
->
v¨ü¡
.
f‹_sdi°
.
¥öt_‚
)

911 
°©
->
v¨ü¡
.
f‹_sdi°
.
	`¥öt_‚
(stat,

912 
b¨r
[
i
]->
ödex
,

913 
b¨r
[
i
]->
cou¡
,

914 
bsum
,

915 
btŸÆ
);

919 i‡(
°©
->
f‹m©
 =
NULL
)

921 
	`myÂrötf
(
fd
, "0x%∞", 
b¨r
[
i
]->
ödex
);

922 i‡(
pf
 & 
PF_COUNT
)

923 
	`Ârötf
(
fd
, "%10u ", 
b¨r
[
i
]->
cou¡
);

924 i‡(
pf
 & 
PF_PDF
)

925 
	`Ârötf
(
fd
, "%6.2f ",

926 ()
b¨r
[
i
]->
cou¡
/
	`max2
(
btŸÆ
, 1.0) * 100.0);

927 i‡(
pf
 & 
PF_CDF
)

928 
	`Ârötf
(
fd
, "%6.2‡", 
bsum
/
	`max2
(
btŸÆ
, 1.0) * 100.0);

932 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
|
PF_CDF
))

934 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

935 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

936 ()
b¨r
[
i
]->
cou¡
/
	`max2
(
btŸÆ
, 1.0)*100.0,

937 
bsum
/
	`max2
(
btŸÆ
, 1.0) * 100.0);

939 i‡(
pf
 =(
PF_COUNT
|
PF_PDF
))

941 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

942 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
,

943 ()
b¨r
[
i
]->
cou¡
/
	`max2
(
btŸÆ
, 1.0)*100.0);

945 i‡(
pf
 =
PF_COUNT
)

947 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
,

948 
b¨r
[
i
]->
ödex
, b¨r[i]->
cou¡
);

951 
	`Áèl
("distribution formatÇot yet implemented");

953 
	`Ârötf
(
fd
, "\n");

958 
	`‰ì
(
b¨r
);

961 
	`Ârötf
(
fd
, "%s.íd_di°\n", 
°©
->
«me
);

962 
	}
}

966 
	$°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

967 
°©_°©_t
 *
°©
,

968 
FILE
 *
fd
)

970 
evÆ_vÆue_t
 
vÆ
;

972 
°©
->
sc
)

974 
sc_öt
:

975 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

976 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_öt
.
v¨
);

977 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

979 
sc_uöt
:

980 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

981 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_uöt
.
v¨
);

982 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

984 #ifde‡
HOST_HAS_QWORD


985 
sc_qw‹d
:

987 
buf
[128];

989 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

990 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_qw‹d
.
v¨
);

991 
	`Ârötf
(
fd
, "%†\t\t\t# %s", 
buf
, 
°©
->
desc
);

994 
sc_sqw‹d
:

996 
buf
[128];

998 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

999 
	`my•rötf
(
buf
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_sqw‹d
.
v¨
);

1000 
	`Ârötf
(
fd
, "%†\t\t\t# %s", 
buf
, 
°©
->
desc
);

1004 
sc_Êﬂt
:

1005 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

1006 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, ()*°©->
v¨ü¡
.
f‹_Êﬂt
.
v¨
);

1007 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

1009 
sc_doubÀ
:

1010 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

1011 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, *°©->
v¨ü¡
.
f‹_doubÀ
.
v¨
);

1012 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

1014 
sc_di°
:

1015 
	`¥öt_di°
(
°©
, 
fd
);

1017 
sc_sdi°
:

1018 
	`¥öt_sdi°
(
°©
, 
fd
);

1020 
sc_f‹muœ
:

1023 
evÆ_°©e_t
 *
es
 = 
	`evÆ_√w
(
°©_evÆ_idít
, 
sdb
);

1024 *
ídp
;

1026 
	`Ârötf
(
fd
, "%-22†", 
°©
->
«me
);

1027 
vÆ
 = 
	`evÆ_ex¥
(
es
, 
°©
->
v¨ü¡
.
f‹_f‹muœ
.
f‹muœ
, &
ídp
);

1028 i‡(
evÆ_îr‹
 !
ERR_NOERR
 || *
ídp
 != '\0')

1030 i‡(
evÆ_îr_exåa_öfo
)

1031 
	`Ârötf
(
fd
, "<îr‹: %s: %s>", 
evÆ_îr_°r
[
evÆ_îr‹
], 
evÆ_îr_exåa_öfo
);

1033 
	`Ârötf
(
fd
, "<îr‹: %s>", 
evÆ_îr_°r
[
evÆ_îr‹
]);

1036 
	`myÂrötf
(
fd
, 
°©
->
f‹m©
, 
	`evÆ_as_doubÀ
(
vÆ
));

1037 
	`Ârötf
(
fd
, " # %s", 
°©
->
desc
);

1040 
	`evÆ_dñëe
(
es
);

1044 
	`∑nic
("bogus stat class");

1046 
	`Ârötf
(
fd
, "\n");

1047 
	}
}

1051 
	$°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

1052 
FILE
 *
fd
)

1054 
°©_°©_t
 *
°©
;

1056 i‡(!
sdb
)

1062 
°©
=
sdb
->
°©s
; sèà!
NULL
; sèt=°©->
√xt
)

1063 
	`°©_¥öt_°©
(
sdb
, 
°©
, 
fd
);

1064 
	}
}

1067 
°©_°©_t
 *

1068 
	$°©_föd_°©
(
°©_sdb_t
 *
sdb
,

1069 *
°©_«me
)

1071 
°©_°©_t
 *
°©
;

1073 
°©
 = 
sdb
->
°©s
; sèà!
NULL
; sèà°©->
√xt
)

1075 i‡(!
	`°rcmp
(
°©
->
«me
, 
°©_«me
))

1078  
°©
;

1079 
	}
}

1081 #ifde‡
TESTIT


1084 
	$maö
()

1086 
°©_sdb_t
 *
sdb
;

1087 
°©_°©_t
 *
°©
, *
°©1
, *
°©2
, *
°©3
, *
°©4
, *
°©5
;

1088 
™_öt
;

1089 
a_uöt
;

1090 
a_Êﬂt
;

1091 
a_doubÀ
;

1092 *
my_im≠
[8] = {

1097 
sdb
 = 
	`°©_√w
();

1100 
	`°©_ªg_öt
(
sdb
, "stat.an_int", "An integer stat variable.",

1101 &
™_öt
, 1, 
NULL
);

1102 
	`°©_ªg_uöt
(
sdb
, "stat.a_uint", "An unsigned integer stat variable.",

1103 &
a_uöt
, 2, "%u (unsigned)");

1104 
	`°©_ªg_Êﬂt
(
sdb
, "stat.a_float", "A float stat variable.",

1105 &
a_Êﬂt
, 3, 
NULL
);

1106 
	`°©_ªg_doubÀ
(
sdb
, "stat.a_double", "A double stat variable.",

1107 &
a_doubÀ
, 4, 
NULL
);

1108 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_formula", "A double stat formula.",

1109 "°©.a_Êﬂà/ sèt.a_uöt", 
NULL
);

1110 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_formula1", "A double stat formula #1.",

1111 "2 * (°©.a_f‹muœ / (1.5 * sèt.™_öt))", 
NULL
);

1112 
	`°©_ªg_f‹muœ
(
sdb
, "stat.a_bad_formula", "A double stat formula w/error.",

1113 "°©.a_Êﬂà/ (°©.a_uöà- 2)", 
NULL
);

1114 
°©
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist", "Anárray distribution.",

1115 0, 8, 1, 
PF_ALL
, 
NULL
, NULL, NULL);

1116 
°©1
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist1", "Anárray distribution #1.",

1117 0, 8, 4, 
PF_ALL
, 
NULL
, NULL, NULL);

1118 
°©2
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist2", "Anárray distribution #2.",

1119 0, 8, 1, (
PF_PDF
|
PF_CDF
), 
NULL
, NULL, NULL);

1120 
°©3
 = 
	`°©_ªg_di°
(
sdb
, "stat.a_dist3", "Anárray distribution #3.",

1121 0, 8, 1, 
PF_ALL
, 
NULL
, 
my_im≠
, NULL);

1122 
°©4
 = 
	`°©_ªg_sdi°
(
sdb
, "stat.a_sdist", "A sparseárray distribution.",

1123 0, 
PF_ALL
, 
NULL
, NULL);

1124 
°©5
 = 
	`°©_ªg_sdi°
(
sdb
, "stat.a_sdist1",

1126 0, 
PF_ALL
, "0x%08lx %10lu %6.2f %6.2f",

1127 
NULL
);

1130 
	`Ârötf
(
°dout
, "** Initial stats...\n");

1131 
	`°©_¥öt_°©s
(
sdb
, 
°dout
);

1134 
™_öt
++;

1135 
a_uöt
++;

1136 
a_Êﬂt
 *= 2;

1137 
a_doubÀ
 *= 4;

1139 
	`°©_add_ßm∂e
(
°©
, 8);

1140 
	`°©_add_ßm∂e
(
°©
, 8);

1141 
	`°©_add_ßm∂e
(
°©
, 1);

1142 
	`°©_add_ßm∂e
(
°©
, 3);

1143 
	`°©_add_ßm∂e
(
°©
, 4);

1144 
	`°©_add_ßm∂e
(
°©
, 4);

1145 
	`°©_add_ßm∂e
(
°©
, 7);

1147 
	`°©_add_ßm∂e
(
°©1
, 32);

1148 
	`°©_add_ßm∂e
(
°©1
, 32);

1149 
	`°©_add_ßm∂e
(
°©1
, 1);

1150 
	`°©_add_ßm∂e
(
°©1
, 12);

1151 
	`°©_add_ßm∂e
(
°©1
, 17);

1152 
	`°©_add_ßm∂e
(
°©1
, 18);

1153 
	`°©_add_ßm∂e
(
°©1
, 30);

1155 
	`°©_add_ßm∂e
(
°©2
, 8);

1156 
	`°©_add_ßm∂e
(
°©2
, 8);

1157 
	`°©_add_ßm∂e
(
°©2
, 1);

1158 
	`°©_add_ßm∂e
(
°©2
, 3);

1159 
	`°©_add_ßm∂e
(
°©2
, 4);

1160 
	`°©_add_ßm∂e
(
°©2
, 4);

1161 
	`°©_add_ßm∂e
(
°©2
, 7);

1163 
	`°©_add_ßm∂e
(
°©3
, 8);

1164 
	`°©_add_ßm∂e
(
°©3
, 8);

1165 
	`°©_add_ßm∂e
(
°©3
, 1);

1166 
	`°©_add_ßm∂e
(
°©3
, 3);

1167 
	`°©_add_ßm∂e
(
°©3
, 4);

1168 
	`°©_add_ßm∂e
(
°©3
, 4);

1169 
	`°©_add_ßm∂e
(
°©3
, 7);

1171 
	`°©_add_ßm∂e
(
°©4
, 800);

1172 
	`°©_add_ßm∂e
(
°©4
, 800);

1173 
	`°©_add_ßm∂e
(
°©4
, 1123);

1174 
	`°©_add_ßm∂e
(
°©4
, 3332);

1175 
	`°©_add_ßm∂e
(
°©4
, 4000);

1176 
	`°©_add_ßm∂es
(
°©4
, 4001, 18);

1177 
	`°©_add_ßm∂e
(
°©4
, 7);

1179 
	`°©_add_ßm∂e
(
°©5
, 800);

1180 
	`°©_add_ßm∂e
(
°©5
, 800);

1181 
	`°©_add_ßm∂e
(
°©5
, 1123);

1182 
	`°©_add_ßm∂e
(
°©5
, 3332);

1183 
	`°©_add_ßm∂e
(
°©5
, 4000);

1184 
	`°©_add_ßm∂es
(
°©5
, 4001, 18);

1185 
	`°©_add_ßm∂e
(
°©5
, 7);

1188 
	`Ârötf
(
°dout
, "** Final stats...\n");

1189 
	`°©_¥öt_°©s
(
sdb
, 
°dout
);

1192 
	`°©_dñëe
(
sdb
);

1193 
	`exô
(0);

1194 
	}
}

	@stats.h

92 #i‚de‡
STAT_H


93 
	#STAT_H


	)

95 
	~<°dio.h
>

97 
	~"ho°.h
"

98 
	~"machöe.h
"

99 
	~"evÆ.h
"

113 
	e°©_˛ass_t
 {

114 
	msc_öt
 = 0,

115 
	msc_uöt
,

116 #ifde‡
HOST_HAS_QWORD


117 
	msc_qw‹d
,

118 
	msc_sqw‹d
,

120 
	msc_Êﬂt
,

121 
	msc_doubÀ
,

122 
	msc_di°
,

123 
	msc_sdi°
,

124 
	msc_f‹muœ
,

125 
	msc_NUM


129 
	#HTAB_SZ
 1024

	)

130 
	#HTAB_HASH
(
I
Ë((((IË>> 8Ë^ (I)Ë& (
HTAB_SZ
 - 1))

	)

133 
	sbuckë_t
 {

134 
buckë_t
 *
	m√xt
;

135 
md_addr_t
 
	mödex
;

136 
	mcou¡
;

140 
	g°©_°©_t
;

143 
	#PF_COUNT
 0x0001

	)

144 
	#PF_PDF
 0x0002

	)

145 
	#PF_CDF
 0x0004

	)

146 
	#PF_ALL
 (
PF_COUNT
|
PF_PDF
|
PF_CDF
)

	)

152 (*
	t¥öt_‚_t
)(
	t°©_°©_t
 *
	t°©
,

153 
	tmd_addr_t
 
	tödex
,

154 
	tcou¡
,

155 
	tsum
,

156 
	ttŸÆ
);

159 
	s°©_°©_t
 {

160 
°©_°©_t
 *
	m√xt
;

161 *
	m«me
;

162 *
	mdesc
;

163 *
	mf‹m©
;

164 
°©_˛ass_t
 
	msc
;

165 
	u°©_v¨ü¡_t
 {

167 
	s°©_f‹_öt_t
 {

168 *
	mv¨
;

169 
	möô_vÆ
;

170 } 
	mf‹_öt
;

172 
	s°©_f‹_uöt_t
 {

173 *
	mv¨
;

174 
	möô_vÆ
;

175 } 
	mf‹_uöt
;

176 #ifde‡
HOST_HAS_QWORD


178 
	s°©_f‹_qw‹d_t
 {

179 
qw‹d_t
 *
	mv¨
;

180 
qw‹d_t
 
	möô_vÆ
;

181 } 
	mf‹_qw‹d
;

183 
	s°©_f‹_sqw‹d_t
 {

184 
sqw‹d_t
 *
	mv¨
;

185 
sqw‹d_t
 
	möô_vÆ
;

186 } 
	mf‹_sqw‹d
;

189 
	s°©_f‹_Êﬂt_t
 {

190 *
	mv¨
;

191 
	möô_vÆ
;

192 } 
	mf‹_Êﬂt
;

194 
	s°©_f‹_doubÀ_t
 {

195 *
	mv¨
;

196 
	möô_vÆ
;

197 } 
	mf‹_doubÀ
;

199 
	s°©_f‹_di°_t
 {

200 
	möô_vÆ
;

201 *
	m¨r
;

202 
	m¨r_sz
;

203 
	mbuckë_sz
;

204 
	mpf
;

205 **
	mim≠
;

206 
¥öt_‚_t
 
	m¥öt_‚
;

207 
	movîÊows
;

208 } 
	mf‹_di°
;

210 
	s°©_f‹_sdi°_t
 {

211 
	möô_vÆ
;

212 
buckë_t
 **
	mßº
;

213 
	mpf
;

214 
¥öt_‚_t
 
	m¥öt_‚
;

215 } 
	mf‹_sdi°
;

217 
	s°©_f‹_f‹muœ_t
 {

218 *
	mf‹muœ
;

219 } 
	mf‹_f‹muœ
;

220 } 
	mv¨ü¡
;

224 
	s°©_sdb_t
 {

225 
°©_°©_t
 *
	m°©s
;

226 
evÆ_°©e_t
 *
	mevÆu©‹
;

230 
evÆ_vÆue_t


231 
°©_evÆ_idít
(
evÆ_°©e_t
 *
es
);

234 
°©_sdb_t
 *
°©_√w
();

238 
°©_dñëe
(
°©_sdb_t
 *
sdb
);

241 
°©_°©_t
 *

242 
°©_ªg_öt
(
°©_sdb_t
 *
sdb
,

243 *
«me
,

244 *
desc
,

245 *
v¨
,

246 
öô_vÆ
,

247 *
f‹m©
);

250 
°©_°©_t
 *

251 
°©_ªg_uöt
(
°©_sdb_t
 *
sdb
,

252 *
«me
,

253 *
desc
,

254 *
v¨
,

255 
öô_vÆ
,

256 *
f‹m©
);

258 #ifde‡
HOST_HAS_QWORD


260 
°©_°©_t
 *

261 
°©_ªg_qw‹d
(
°©_sdb_t
 *
sdb
,

262 *
«me
,

263 *
desc
,

264 
qw‹d_t
 *
v¨
,

265 
qw‹d_t
 
öô_vÆ
,

266 *
f‹m©
);

269 
°©_°©_t
 *

270 
°©_ªg_sqw‹d
(
°©_sdb_t
 *
sdb
,

271 *
«me
,

272 *
desc
,

273 
sqw‹d_t
 *
v¨
,

274 
sqw‹d_t
 
öô_vÆ
,

275 *
f‹m©
);

279 
°©_°©_t
 *

280 
°©_ªg_Êﬂt
(
°©_sdb_t
 *
sdb
,

281 *
«me
,

282 *
desc
,

283 *
v¨
,

284 
öô_vÆ
,

285 *
f‹m©
);

288 
°©_°©_t
 *

289 
°©_ªg_doubÀ
(
°©_sdb_t
 *
sdb
,

290 *
«me
,

291 *
desc
,

292 *
v¨
,

293 
öô_vÆ
,

294 *
f‹m©
);

302 
°©_°©_t
 *

303 
°©_ªg_di°
(
°©_sdb_t
 *
sdb
,

304 *
«me
,

305 *
desc
,

306 
öô_vÆ
,

307 
¨r_sz
,

308 
buckë_sz
,

309 
pf
,

310 *
f‹m©
,

311 **
im≠
,

312 
¥öt_‚_t
 
¥öt_‚
);

321 
°©_°©_t
 *

322 
°©_ªg_sdi°
(
°©_sdb_t
 *
sdb
,

323 *
«me
,

324 *
desc
,

325 
öô_vÆ
,

326 
pf
,

327 *
f‹m©
,

328 
¥öt_‚_t
 
¥öt_‚
);

332 
°©_add_ßm∂es
(
°©_°©_t
 *
°©
,

333 
md_addr_t
 
ödex
,

334 
nßm∂es
);

338 
°©_add_ßm∂e
(
°©_°©_t
 *
°©
,

339 
md_addr_t
 
ödex
);

348 
°©_°©_t
 *

349 
°©_ªg_f‹muœ
(
°©_sdb_t
 *
sdb
,

350 *
«me
,

351 *
desc
,

352 *
f‹muœ
,

353 *
f‹m©
);

357 
°©_¥öt_°©
(
°©_sdb_t
 *
sdb
,

358 
°©_°©_t
 *
°©
,

359 
FILE
 *
fd
);

363 
°©_¥öt_°©s
(
°©_sdb_t
 *
sdb
,

364 
FILE
 *
fd
);

368 
°©_°©_t
 *

369 
°©_föd_°©
(
°©_sdb_t
 *
sdb
,

370 *
°©_«me
);

	@store2Load.cpp

1 
	~<°dio.h
>

2 
	~<io°ªam
>

3 
	~<°rög.h
>

4 
	~"ho°.h
"

5 
	~"machöe.h
"

6 
usög
 
«me•a˚
 
	g°d
;

8 "C" 
pushSt‹e
 (
md_addr_t
 
pc
, md_addr_à
addr
, 
cou¡î_t
 
sim_cy˛e
, 
width
);

9 "C" 
vîifyLﬂd
 (
md_addr_t
 
pc
, md_addr_à
addr
, 
cou¡î_t
 
sim_cy˛e
, 
width
);

11 
AddSt‹eRef
 (
md_addr_t
 
pc
, md_addr_à
lﬂdPC
, 
cou¡î_t
 
commDi°
);

13 
	#TABLE_LENGTH
 2048

	)

14 
	#SHIFT_LENGTH
 3

	)

15 
	#ASSOC
 32

	)

16 ˛as†
	cíåy


18 
	mpublic
:

19 
md_addr_t
 
pc
;

20 
md_addr_t
 
	maddr
;

21 
cou¡î_t
 
	mtimeSèmp
;

22 
	mvÆid
;

23 
	mwidth
;

26 
	$íåy
 ()

28 
pc
 = 0;

29 
addr
 = 0;

30 
timeSèmp
 = 0;

31 
vÆid
 = 0;

32 
width
 = 0;

36 ~
	$íåy
 ()

38 
	}
}

41 ˛as†
	chashTabÀ


43 
	mpublic
:

44 
íåy
 
èbÀ
[
TABLE_LENGTH
][
ASSOC
];

45 
cou¡î_t
 
	mevi˘Cou¡
;

46 
	mhi°TabÀ
[10000];

49 
	$hashTabÀ
 ()

51 
evi˘Cou¡
 = 0;

52 
i
 = 0; i < 10000; i++)

54 
hi°TabÀ
[
i
] = 0;

59 ~
	$hashTabÀ
 ()

61 
	}
}

65 
hashTabÀ
 
	g°‹eBuf„r
;

68 
	$pushSt‹e
 (
md_addr_t
 
pc
, md_addr_à
addr
, 
cou¡î_t
 
sim_cy˛e
, 
width
)

70 
ödex
;

71 
i
;

73 
ödex
 = (
addr
 >> 
SHIFT_LENGTH
Ë& (
TABLE_LENGTH
 - 1);

74 
found
 = 0;

75 
cou¡î_t
 
ﬁde°_timeSèmp
;

76 
ﬁde°_íåy
;

79 
i
 = 0; i < 
ASSOC
; i++)

81 i‡(
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
vÆid
 == 1)

83 
bigMemWidth
 = (
width
 > 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].width) ? width : storeBuffer.table[index][i].width;

84 
md_addr_t
 
locAddr
 = (
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
addr
 & ~(
bigMemWidth
 - 1));

85 
md_addr_t
 
extAddr
 = (
addr
 & ~(
bigMemWidth
 - 1));

87 i‡(
locAddr
 =
extAddr
)

89 i‡(!
found
)

91 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
pc
 =Öc;

92 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
timeSèmp
 = 
sim_cy˛e
;

93 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
addr
 =áddr;

94 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
width
 = width;

95 
found
 = 1;

99 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
vÆid
 = 0;

100 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
pc
 = 0;

101 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
timeSèmp
 = 0;

102 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
addr
 = 0;

103 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
width
 = 0;

109 i‡(
found
)

112 
ﬁde°_timeSèmp
 = 
°‹eBuf„r
.
èbÀ
[
ödex
][0].
timeSèmp
;

113 
ﬁde°_íåy
 = 0;

116 
i
 = 0; i < 
ASSOC
; i++)

118 i‡(
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
vÆid
 == 0)

120 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
pc
 =Öc;

121 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
addr
 =áddr;

122 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
timeSèmp
 = 
sim_cy˛e
;

123 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
vÆid
 = 1;

124 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
width
 = width;

127 i‡(
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
timeSèmp
 < 
ﬁde°_timeSèmp
)

129 
ﬁde°_timeSèmp
 = 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
timeSèmp
;

130 
ﬁde°_íåy
 = 
i
;

135 
°‹eBuf„r
.
èbÀ
[
ödex
][
ﬁde°_íåy
].
pc
 =Öc;

136 
°‹eBuf„r
.
èbÀ
[
ödex
][
ﬁde°_íåy
].
addr
 =áddr;

137 
°‹eBuf„r
.
èbÀ
[
ödex
][
ﬁde°_íåy
].
timeSèmp
 = 
sim_cy˛e
;

138 
°‹eBuf„r
.
èbÀ
[
ödex
][
ﬁde°_íåy
].
vÆid
 = 1;

139 
°‹eBuf„r
.
èbÀ
[
ödex
][
ﬁde°_íåy
].
width
 = width;

140 
°‹eBuf„r
.
evi˘Cou¡
++;

142 
	}
}

145 
	$vîifyLﬂd
 (
md_addr_t
 
pc
, md_addr_à
addr
, 
cou¡î_t
 
sim_cy˛e
, 
width
)

147 
ödex
;

148 
i
;

150 
ödex
 = (
addr
 >> 
SHIFT_LENGTH
Ë& (
TABLE_LENGTH
 - 1);

152 
i
 = 0; i < 
ASSOC
; i++)

156 i‡(
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
vÆid
 == 1)

158 
bigMemWidth
 = (
width
 > 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].width) ? width : storeBuffer.table[index][i].width;

159 
md_addr_t
 
locAddr
 = (
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
addr
 & ~(
bigMemWidth
 - 1));

160 
md_addr_t
 
extAddr
 = (
addr
 & ~(
bigMemWidth
 - 1));

162 i‡(
locAddr
 =
extAddr
 && (
sim_cy˛e
 - 
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
timeSèmp
 < 5000))

163 
	`AddSt‹eRef
 (
°‹eBuf„r
.
èbÀ
[
ödex
][
i
].
pc
,Öc, 
sim_cy˛e
 - st‹eBuf„r.èbÀ[ödex][i].
timeSèmp
);

167 
	}
}

	@symbol.c

92 
	~<°dio.h
>

93 
	~<°dlib.h
>

95 
	~"ho°.h
"

96 
	~"misc.h
"

97 
	~"lﬂdî.h
"

98 
	~"symbﬁ.h
"

100 
	~"smt.h
"

102 #ifde‡
SMT_SS


103 
	~"c⁄ãxt.h
"

107 #ifde‡
BFD_LOADER


108 
	~<bfd.h
>

110 
	~"èrgë-Æpha/ecoff.h
"

114 (*
	tqs‹t_‚
)(const *, const *);

119 
sym_sym_t
 *
sym_db
 = 
NULL
;

122 
sym_nsyms
 = 0;

123 
sym_sym_t
 **
sym_syms
 = 
NULL
;

126 
sym_sym_t
 **
sym_syms_by_«me
 = 
NULL
;

129 
sym_¡extsyms
 = 0;

130 
sym_sym_t
 **
sym_ãxtsyms
 = 
NULL
;

133 
sym_sym_t
 **
sym_ãxtsyms_by_«me
 = 
NULL
;

136 
sym_nd©asyms
 = 0;

137 
sym_sym_t
 **
sym_d©asyms
 = 
NULL
;

140 
sym_sym_t
 **
sym_d©asyms_by_«me
 = 
NULL
;

143 
syms_lﬂded
 = 
FALSE
;

145 #ifde‡
PRINT_SYMS


148 
	$Êags2°r
(
Êags
)

150 
buf
[256];

151 *
p
;

153 i‡(!
Êags
)

156 
p
 = 
buf
;

157 *
p
 = '\0';

159 i‡(
Êags
 & 
BSF_LOCAL
)

161 *
p
++ = 'L';

162 *
p
++ = '|';

164 i‡(
Êags
 & 
BSF_GLOBAL
)

166 *
p
++ = 'G';

167 *
p
++ = '|';

169 i‡(
Êags
 & 
BSF_DEBUGGING
)

171 *
p
++ = 'D';

172 *
p
++ = '|';

174 i‡(
Êags
 & 
BSF_FUNCTION
)

176 *
p
++ = 'F';

177 *
p
++ = '|';

179 i‡(
Êags
 & 
BSF_KEEP
)

181 *
p
++ = 'K';

182 *
p
++ = '|';

184 i‡(
Êags
 & 
BSF_KEEP_G
)

186 *
p
++ = 'k'; *p++ = '|';

188 i‡(
Êags
 & 
BSF_WEAK
)

190 *
p
++ = 'W';

191 *
p
++ = '|';

193 i‡(
Êags
 & 
BSF_SECTION_SYM
)

195 *
p
++ = 'S'; *p++ = '|';

197 i‡(
Êags
 & 
BSF_OLD_COMMON
)

199 *
p
++ = 'O';

200 *
p
++ = '|';

202 i‡(
Êags
 & 
BSF_NOT_AT_END
)

204 *
p
++ = 'N';

205 *
p
++ = '|';

207 i‡(
Êags
 & 
BSF_CONSTRUCTOR
)

209 *
p
++ = 'C';

210 *
p
++ = '|';

212 i‡(
Êags
 & 
BSF_WARNING
)

214 *
p
++ = 'w';

215 *
p
++ = '|';

217 i‡(
Êags
 & 
BSF_INDIRECT
)

219 *
p
++ = 'I';

220 *
p
++ = '|';

222 i‡(
Êags
 & 
BSF_FILE
)

224 *
p
++ = 'f';

225 *
p
++ = '|';

228 i‡(
p
 =
buf
)

229 
	`∑nic
("no flags detected");

231 *--
p
 = '\0';

232  
buf
;

233 
	}
}

238 
	$acmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

240  ()((*
sym1
)->
addr
 - (*
sym2
)->addr);

241 
	}
}

245 
	$ncmp
(
sym_sym_t
 **
sym1
, sym_sym_à**
sym2
)

247  
	`°rcmp
((*
sym1
)->
«me
, (*
sym2
)->name);

248 
	}
}

250 
	#RELEVANT_SCOPE
(
SYM
Ë\

	)

252 ((
	gSYM
)->
	gÊags
 & 
	gBSF_GLOBAL
) \

254 (((
	gSYM
)->
	gÊags
 & (
	gBSF_LOCAL
|
	gBSF_DEBUGGING
)Ë=
BSF_LOCAL
) \

255 && (
SYM
)->
«me
[0] != '$') \

257 
lﬂd_loˇls
 \

259 ((
SYM
)->
Êags
&(
BSF_LOCAL
|
BSF_DEBUGGING
))==(BSF_LOCAL|BSF_DEBUGGING)\

260 && (
SYM
)->
«me
[0] == '$') \

262 ((
SYM
)->
Êags
 & (
BSF_LOCAL
|
BSF_DEBUGGING
)) == (BSF_LOCAL) \

263 && (
SYM
)->
«me
[0] == '$'))))

267 #ifde‡
SMT_SS


269 
	$sym_lﬂdsyms
(*
‚ame
,

270 
lﬂd_loˇls
,
thªadid
)

273 
	$sym_lﬂdsyms
(*
‚ame
,

274 
lﬂd_loˇls
)

277 
i
, 
debug_˙t
;

279 #ifde‡
BFD_LOADER


280 
bfd
 *
abfd
;

281 
asymbﬁ
 **
syms
;

282 
°‹age
, 
i
, 
nsyms
, 
debug_˙t
;

284 
Àn
;

285 
FILE
 *
fobj
;

286 
ecoff_fûehdr
 
fhdr
;

287 
ecoff_aouthdr
 
ahdr
;

288 
ecoff_symhdr_t
 
symhdr
;

289 *
°πab
 = 
NULL
;

290 
ecoff_EXTR
 *
exå
;

293 #ifde‡
SMT_SS


294 
c⁄ãxt
 *
cuºít
;

295 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

298 i‡(
syms_lﬂded
)

305 #ifde‡
BFD_LOADER


308 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-big")))

309 i‡(!(
abfd
 = 
	`bfd_›ír
(
‚ame
, "ss-coff-little")))

310 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

315 i‡(!
	`bfd_check_f‹m©
(
abfd
, 
bfd_obje˘
))

317 
	`bfd_˛o£
(
abfd
);

318 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

322 i‡(
abfd
->
xvec
->
byã‹dî_big_p
 !()
ld_èrgë_big_ídün
)

323 
	`∑nic
("binaryÉndian changed");

325 i‡((
	`bfd_gë_fûe_Êags
(
abfd
Ë& (
HAS_SYMS
|
HAS_LOCALS
)))

328 
°‹age
 = 
	`bfd_gë_symèb_uµî_bound
(
abfd
);

329 i‡(
°‹age
 <= 0)

330 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

332 
syms
 = (
asymbﬁ
 **)
	`ˇŒoc
(
°‹age
, 1);

333 i‡(!
syms
)

334 
	`Áèl
("out of virtual memory");

336 
nsyms
 = 
	`bfd_ˇn⁄iˇlize_symèb
 (
abfd
, 
syms
);

337 i‡(
nsyms
 <= 0)

338 
	`Áèl
("HAS_SYMS i†£t, buà`%s' stû»œck†symbﬁs", 
‚ame
);

345 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

346 
i
=0; i < 
nsyms
; i++)

348 
asymbﬁ
 *
sym
 = 
syms
[
i
];

352 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

353 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

354 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

355 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

356 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

358 && 
	`RELEVANT_SCOPE
(
sym
))

361 
sym_nd©asyms
++;

362 #ifde‡
PRINT_SYMS


363 
	`Ârötf
(
°dîr
,

365 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

366 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

370 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

372 && 
	`RELEVANT_SCOPE
(
sym
))

375 
sym_¡extsyms
++;

376 #ifde‡
PRINT_SYMS


377 
	`Ârötf
(
°dîr
,

379 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

380 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

386 #ifde‡
PRINT_SYMS


387 
	`Ârötf
(
°dîr
,

389 
sym
->
«me
, sym->
£˘i⁄
->«me, 
	`Êags2°r
(sym->
Êags
),

390 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
);

394 
sym_nsyms
 = 
sym_¡extsyms
 + 
sym_nd©asyms
;

395 i‡(
sym_nsyms
 <= 0)

396 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

399 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t));

400 i‡(!
sym_db
)

401 
	`Áèl
("out of virtual memory");

404 
debug_˙t
=0, 
i
=0; i < 
nsyms
; i++)

406 
asymbﬁ
 *
sym
 = 
syms
[
i
];

410 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

411 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

412 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata")

413 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".bss")

414 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sbss"))

416 && 
	`RELEVANT_SCOPE
(
sym
))

419 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

420 
sym_db
[
debug_˙t
].
£g
 = 
ss_d©a
;

421 
sym_db
[
debug_˙t
].
öôülized
 =

422 (!
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".rdata")

423 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".data")

424 || !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".sdata"));

425 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

426 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

427 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

429 
debug_˙t
++;

432 !
	`°rcmp
(
sym
->
£˘i⁄
->
«me
, ".text")

434 && 
	`RELEVANT_SCOPE
(
sym
))

437 
sym_db
[
debug_˙t
].
«me
 = 
	`my°rdup
((*)
sym
->name);

438 
sym_db
[
debug_˙t
].
£g
 = 
ss_ãxt
;

439 
sym_db
[
debug_˙t
].
öôülized
 = 
TRUE
;

440 
sym_db
[
debug_˙t
].
pub
 = (
sym
->
Êags
 & 
BSF_GLOBAL
);

441 
sym_db
[
debug_˙t
].
loˇl
 = (
sym
->
«me
[0] == '$');

442 
sym_db
[
debug_˙t
].
addr
 = 
sym
->
vÆue
 + sym->
£˘i⁄
->
vma
;

444 
debug_˙t
++;

452 i‡(
debug_˙t
 !
sym_nsyms
)

453 
	`∑nic
("couldÇotÜocateáll counted symbols");

456 
	`‰ì
(
syms
);

460 i‡(!
	`bfd_˛o£
(
abfd
))

461 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

466 #i‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

467 
fobj
 = 
	`f›í
(
‚ame
, "rb");

469 
fobj
 = 
	`f›í
(
‚ame
, "r");

471 i‡(!
fobj
)

472 
	`Áèl
("ˇ¬Ÿ o≥¿execuèbÀ `%s'", 
‚ame
);

474 i‡(
	`‰ód
(&
fhdr
, (
ecoff_fûehdr
), 1, 
fobj
) < 1)

475 
	`Áèl
("ˇ¬ŸÑód hódî fromÉxecuèbÀ `%s'", 
‚ame
);

478 i‡(
fhdr
.
f_magic
 !
ECOFF_ALPHAMAGIC
)

479 
	`Áèl
("bad magi¯numbî i¿execuèbÀ `%s'", 
‚ame
);

481 i‡(
	`‰ód
(&
ahdr
, (
ecoff_aouthdr
), 1, 
fobj
) < 1)

482 
	`Áèl
("ˇ¬ŸÑód AOUT hódî fromÉxecuèbÀ `%s'", 
‚ame
);

485 
	`f£ek
(
fobj
, ()
fhdr
.
f_sym±r
, 0);

487 i‡(
	`‰ód
(&
symhdr
, (
ecoff_symhdr_t
), 1, 
fobj
) < 1)

488 
	`Áèl
("couldÇŸÑód symbﬁi¯hódî fromÉxecuèbÀ `%s'", 
‚ame
);

490 i‡(
symhdr
.
magic
 !
ECOFF_magicSym
)

491 
	`Áèl
("bad magi¯numbî (0x%xËö symbﬁi¯hódî", 
symhdr
.
magic
);

494 
Àn
 = 
symhdr
.
issMax
 + symhdr.
issExtMax
;

495 
°πab
 = (*)
	`ˇŒoc
(
Àn
, ());

496 i‡(!
°πab
)

497 
	`Áèl
("out of virtual memory");

500 
	`f£ek
(
fobj
, ()
symhdr
.
cbSsExtOff£t
 , 0);

501 i‡(
	`‰ód
(
°πab
, 
Àn
, 1, 
fobj
) < 1)

502 
	`Áèl
("error whileÑeading symbolÅableÇames");

505 
Àn
 = 
symhdr
.
isymMax
 + symhdr.
õxtMax
;

506 i‡(
Àn
 <= 0)

507 
	`Áèl
("`%s' ha†nÿãxà‹ d©®symbﬁs", 
‚ame
);

508 
sym_db
 = (
sym_sym_t
 *)
	`ˇŒoc
(
Àn
, (sym_sym_t));

509 i‡(!
sym_db
)

510 
	`Áèl
("out of virtual memory");

513 
exå
 =

514 (
ecoff_EXTR
 *)
	`ˇŒoc
(
symhdr
.
õxtMax
, (ecoff_EXTR));

515 i‡(!
exå
)

516 
	`Áèl
("out of virtual memory");

518 
	`f£ek
(
fobj
, ()
symhdr
.
cbExtOff£t
, 0);

519 i‡(
	`‰ód
(
exå
, (
ecoff_EXTR
), 
symhdr
.
õxtMax
, 
fobj
) < 1)

520 
	`Áèl
("errorÑeadingÉxternal symbolÉntries");

522 
sym_nsyms
 = 0; 
sym_nd©asyms
 = 0; 
sym_¡extsyms
 = 0;

525 
i
=0; i < 
symhdr
.
õxtMax
; i++)

527 
°r_off£t
;

529 
°r_off£t
 = 
symhdr
.
issMax
 + 
exå
[
i
].
asym
.
iss
;

532 
	`¥ötf
("ext %2d: ifd = %2d, iss = %3d, value = %8x, st = %3x, "

534 
i
, 
exå
[i].
ifd
,

535 
exå
[
i
].
asym
.
iss
,Éxå[i].asym.
vÆue
,

536 
exå
[
i
].
asym
.
°
,Éxå[i].asym.
sc
,

537 
exå
[
i
].
asym
.
ödex
);

538 
	`¥ötf
(" %08x %2d %2d %s\n",

539 
exå
[
i
].
asym
.
vÆue
,

540 
exå
[
i
].
asym
.
°
,

541 
exå
[
i
].
asym
.
sc
,

542 &
°πab
[
°r_off£t
]);

545 
exå
[
i
].
asym
.
°
)

547 
ECOFF_°GlobÆ
:

548 
ECOFF_°Sètic
:

550 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

551 
sym_db
[
sym_nsyms
].
£g
 = 
ss_d©a
;

552 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

553 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

554 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

555 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

556 
sym_nsyms
++;

557 
sym_nd©asyms
++;

560 
ECOFF_°Proc
:

561 
ECOFF_°SèticProc
:

562 
ECOFF_°Labñ
:

564 
sym_db
[
sym_nsyms
].
«me
 = 
	`my°rdup
(&
°πab
[
°r_off£t
]);

565 
sym_db
[
sym_nsyms
].
£g
 = 
ss_ãxt
;

566 
sym_db
[
sym_nsyms
].
öôülized
 = 
TRUE
;

567 
sym_db
[
sym_nsyms
].
pub
 = 
TRUE
;

568 
sym_db
[
sym_nsyms
].
loˇl
 = 
FALSE
;

569 
sym_db
[
sym_nsyms
].
addr
 = 
exå
[
i
].
asym
.
vÆue
;

570 
sym_nsyms
++;

571 
sym_¡extsyms
++;

577 
	`Ârötf
(
°dîr
, "** skùpög: %s...\n", &
°πab
[
°r_off£t
]);

582 
	`‰ì
(
exå
);

585 i‡(
	`f˛o£
(
fobj
))

586 
	`Áèl
("couldÇŸ clo£ÉxecuèbÀ `%s'", 
‚ame
);

595 
sym_syms
 =

596 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

597 i‡(!
sym_syms
)

598 
	`Áèl
("out of virtual memory");

600 
sym_syms_by_«me
 =

601 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nsyms
, (sym_sym_t *));

602 i‡(!
sym_syms_by_«me
)

603 
	`Áèl
("out of virtual memory");

605 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

607 
sym_syms
[
debug_˙t
] = &
sym_db
[
i
];

608 
sym_syms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

609 
debug_˙t
++;

612 i‡(
debug_˙t
 !
sym_nsyms
)

613 
	`∑nic
("couldÇotÜocateáll symbols");

616 
	`qs‹t
(
sym_syms
, 
sym_nsyms
, (
sym_sym_t
 *), (
qs‹t_‚
Ë
acmp
);

619 
	`qs‹t
(
sym_syms_by_«me
, 
sym_nsyms
, (
sym_sym_t
 *), (
qs‹t_‚
Ë
ncmp
);

622 
sym_ãxtsyms
 =

623 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

624 i‡(!
sym_ãxtsyms
)

625 
	`Áèl
("out of virtual memory");

627 
sym_ãxtsyms_by_«me
 =

628 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_¡extsyms
, (sym_sym_t *));

629 i‡(!
sym_ãxtsyms_by_«me
)

630 
	`Áèl
("out of virtual memory");

632 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

634 i‡(
sym_db
[
i
].
£g
 =
ss_ãxt
)

636 
sym_ãxtsyms
[
debug_˙t
] = &
sym_db
[
i
];

637 
sym_ãxtsyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

638 
debug_˙t
++;

642 i‡(
debug_˙t
 !
sym_¡extsyms
)

643 
	`∑nic
("couldÇotÜocateállÅext symbols");

646 
	`qs‹t
(
sym_ãxtsyms
, 
sym_¡extsyms
, (
sym_sym_t
 *), (
qs‹t_‚
Ë
acmp
);

649 
	`qs‹t
(
sym_ãxtsyms_by_«me
, 
sym_¡extsyms
, (
sym_sym_t
 *), (
qs‹t_‚
Ë
ncmp
);

652 
sym_d©asyms
 =

653 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

654 i‡(!
sym_d©asyms
)

655 
	`Áèl
("out of virtual memory");

657 
sym_d©asyms_by_«me
 =

658 (
sym_sym_t
 **)
	`ˇŒoc
(
sym_nd©asyms
, (sym_sym_t *));

659 i‡(!
sym_d©asyms_by_«me
)

660 
	`Áèl
("out of virtual memory");

662 
debug_˙t
=0, 
i
=0; i<
sym_nsyms
; i++)

664 i‡(
sym_db
[
i
].
£g
 =
ss_d©a
)

666 
sym_d©asyms
[
debug_˙t
] = &
sym_db
[
i
];

667 
sym_d©asyms_by_«me
[
debug_˙t
] = &
sym_db
[
i
];

668 
debug_˙t
++;

672 i‡(
debug_˙t
 !
sym_nd©asyms
)

673 
	`∑nic
("couldÇotÜocateáll data symbols");

676 
	`qs‹t
(
sym_d©asyms
, 
sym_nd©asyms
, (
sym_sym_t
 *), (
qs‹t_‚
Ë
acmp
);

679 
	`qs‹t
(
sym_d©asyms_by_«me
, 
sym_nd©asyms
, (
sym_sym_t
 *), (
qs‹t_‚
Ë
ncmp
);

682 #ifde‡
SMT_SS


683 
i
=0; i<
sym_¡extsyms
; i++)

685 
sym_ãxtsyms
[
i
]->
size
 =

686 (
i
 !(
sym_¡extsyms
 - 1)

687 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

688 : ((
cuºít
->
ld_ãxt_ba£
 + cuºít->
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

690 
i
=0; i<
sym_nd©asyms
; i++)

692 
sym_d©asyms
[
i
]->
size
 =

693 (
i
 !(
sym_nd©asyms
 - 1)

694 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

695 : ((
cuºít
->
ld_d©a_ba£
 + cuºít->
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

698 
i
=0; i<
sym_¡extsyms
; i++)

700 
sym_ãxtsyms
[
i
]->
size
 =

701 (
i
 !(
sym_¡extsyms
 - 1)

702 ? (
sym_ãxtsyms
[
i
+1]->
addr
 - sym_textsyms[i]->addr)

703 : ((
ld_ãxt_ba£
 + 
ld_ãxt_size
Ë- 
sym_ãxtsyms
[
i
]->
addr
));

705 
i
=0; i<
sym_nd©asyms
; i++)

707 
sym_d©asyms
[
i
]->
size
 =

708 (
i
 !(
sym_nd©asyms
 - 1)

709 ? (
sym_d©asyms
[
i
+1]->
addr
 - sym_datasyms[i]->addr)

710 : ((
ld_d©a_ba£
 + 
ld_d©a_size
Ë- 
sym_d©asyms
[
i
]->
addr
));

715 
syms_lﬂded
 = 
TRUE
;

716 
	}
}

720 
	$sym_dumpsym
(
sym_sym_t
 *
sym
,

721 
FILE
 *
fd
)

723 
	`myÂrötf
(
fd
,

725 
sym
->
«me
,

726 
sym
->
£g
 =
ss_d©a
 ? "data" : "text",

727 
sym
->
öôülized
 ? "y" : "n",

728 
sym
->
pub
 ? "y" : "n",

729 
sym
->
loˇl
 ? "y" : "n",

730 
sym
->
addr
,

731 
sym
->
size
);

732 
	}
}

736 
	$sym_dumpsyms
(
FILE
 *
fd
)

738 
i
;

740 
i
=0; i < 
sym_nsyms
; i++)

741 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

742 
	}
}

746 
	$sym_dump°©e
(
FILE
 *
fd
)

748 
i
;

750 i‡(
fd
 =
NULL
)

751 
fd
 = 
°dîr
;

753 
	`Ârötf
(
fd
, "** All symbols sorted byáddress:\n");

754 
i
=0; i < 
sym_nsyms
; i++)

755 
	`sym_dumpsym
(
sym_syms
[
i
], 
fd
);

757 
	`Ârötf
(
fd
, "\n** All symbols sorted byÇame:\n");

758 
i
=0; i < 
sym_nsyms
; i++)

759 
	`sym_dumpsym
(
sym_syms_by_«me
[
i
], 
fd
);

761 
	`Ârötf
(
fd
, "** Text symbols sorted byáddress:\n");

762 
i
=0; i < 
sym_¡extsyms
; i++)

763 
	`sym_dumpsym
(
sym_ãxtsyms
[
i
], 
fd
);

765 
	`Ârötf
(
fd
, "\n** Text symbols sorted byÇame:\n");

766 
i
=0; i < 
sym_¡extsyms
; i++)

767 
	`sym_dumpsym
(
sym_ãxtsyms_by_«me
[
i
], 
fd
);

769 
	`Ârötf
(
fd
, "** Data symbols sorted byáddress:\n");

770 
i
=0; i < 
sym_nd©asyms
; i++)

771 
	`sym_dumpsym
(
sym_d©asyms
[
i
], 
fd
);

773 
	`Ârötf
(
fd
, "\n** Data symbols sorted byÇame:\n");

774 
i
=0; i < 
sym_nd©asyms
; i++)

775 
	`sym_dumpsym
(
sym_d©asyms_by_«me
[
i
], 
fd
);

776 
	}
}

782 
sym_sym_t
 *

783 
	$sym_böd_addr
(
md_addr_t
 
addr
,

784 *
pödex
,

785 
exa˘
,

786 
sym_db_t
 
db
)

788 
nsyms
, 
low
, 
high
, 
pos
;

789 
sym_sym_t
 **
syms
;

791 
db
)

793 
sdb_™y
:

794 
syms
 = 
sym_syms
;

795 
nsyms
 = 
sym_nsyms
;

797 
sdb_ãxt
:

798 
syms
 = 
sym_ãxtsyms
;

799 
nsyms
 = 
sym_¡extsyms
;

801 
sdb_d©a
:

802 
syms
 = 
sym_d©asyms
;

803 
nsyms
 = 
sym_nd©asyms
;

806 
	`∑nic
("bogus symbol database");

810 i‡(!
nsyms
)

812 i‡(
pödex
)

813 *
pödex
 = -1;

814  
NULL
;

818 
low
 = 0;

819 
high
 = 
nsyms
-1;

820 
pos
 = (
low
 + 
high
) >> 1;

822 (
exa˘
 && 
syms
[
pos
]->
addr
 ==áddr)

824 || (!
exa˘


825 && 
syms
[
pos
]->
addr
 <=áddr

826 && 
addr
 < (
syms
[
pos
]->add∏+ 
	`max2
(1, syms[pos]->
size
)))))

828 i‡(
addr
 < 
syms
[
pos
]->addr)

829 
high
 = 
pos
 - 1;

831 
low
 = 
pos
 + 1;

832 i‡(
high
 >
low
)

833 
pos
 = (
low
 + 
high
) >> 1;

836 i‡(
pödex
)

837 *
pödex
 = -1;

838  
NULL
;

843 i‡(
pödex
)

844 *
pödex
 = 
pos
;

845  
syms
[
pos
];

846 
	}
}

851 
sym_sym_t
 *

852 
	$sym_böd_«me
(c⁄° *
«me
,

853 *
pödex
,

854 
sym_db_t
 
db
)

856 
nsyms
, 
low
, 
high
, 
pos
, 
cmp
;

857 
sym_sym_t
 **
syms
;

859 
db
)

861 
sdb_™y
:

862 
syms
 = 
sym_syms_by_«me
;

863 
nsyms
 = 
sym_nsyms
;

865 
sdb_ãxt
:

866 
syms
 = 
sym_ãxtsyms_by_«me
;

867 
nsyms
 = 
sym_¡extsyms
;

869 
sdb_d©a
:

870 
syms
 = 
sym_d©asyms_by_«me
;

871 
nsyms
 = 
sym_nd©asyms
;

874 
	`∑nic
("bogus symbol database");

878 i‡(!
nsyms
)

880 i‡(
pödex
)

881 *
pödex
 = -1;

882  
NULL
;

886 
low
 = 0;

887 
high
 = 
nsyms
-1;

888 
pos
 = (
low
 + 
high
) >> 1;

889 !–!(
cmp
 = 
	`°rcmp
(
syms
[
pos
]->
«me
,Çame))))

891 i‡(
cmp
 > 0)

892 
high
 = 
pos
 - 1;

894 
low
 = 
pos
 + 1;

895 i‡(
high
 >
low
)

896 
pos
 = (
low
 + 
high
) >> 1;

899 i‡(
pödex
)

900 *
pödex
 = -1;

901  
NULL
;

906 i‡(
pödex
)

907 *
pödex
 = 
pos
;

908  
syms
[
pos
];

909 
	}
}

	@symbol.h

89 #i‚de‡
SYMBOL_H


90 
	#SYMBOL_H


	)

92 
	~<°dio.h
>

94 
	~"ho°.h
"

95 
	~"misc.h
"

96 
	~"machöe.h
"

99 
	~"smt.h
"

101 
	esym_£g_t
 {

102 
	mss_d©a
,

103 
	mss_ãxt
,

104 
	mss_NUM


108 
	ssym_sym_t
 {

109 *
	m«me
;

110 
sym_£g_t
 
	m£g
;

111 
	möôülized
;

112 
	mpub
;

113 
	mloˇl
;

114 
md_addr_t
 
	maddr
;

115 
	msize
;

119 
sym_sym_t
 *
sym_db
;

122 
sym_nsyms
;

123 
sym_sym_t
 **
sym_syms
;

126 
sym_sym_t
 **
sym_syms_by_«me
;

129 
sym_¡extsyms
;

130 
sym_sym_t
 **
sym_ãxtsyms
;

133 
sym_sym_t
 **
sym_ãxtsyms_by_«me
;

136 
sym_nd©asyms
;

137 
sym_sym_t
 **
sym_d©asyms
;

140 
sym_sym_t
 **
sym_d©asyms_by_«me
;

143 #ifde‡
SMT_SS


145 
sym_lﬂdsyms
(*
‚ame
,

146 
lﬂd_loˇls
, 
thªadid
);

149 
sym_lﬂdsyms
(*
‚ame
,

150 
lﬂd_loˇls
);

156 
sym_dumpsym
(
sym_sym_t
 *
sym
,

157 
FILE
 *
fd
);

161 
sym_dumpsyms
(
FILE
 *
fd
);

165 
sym_dump°©e
(
FILE
 *
fd
);

168 
	esym_db_t
 {

169 
	msdb_™y
,

170 
	msdb_ãxt
,

171 
	msdb_d©a
,

172 
	msdb_NUM


179 
sym_sym_t
 *

180 
sym_böd_addr
(
md_addr_t
 
addr
,

181 *
pödex
,

182 
exa˘
,

183 
sym_db_t
 
db
);

188 
sym_sym_t
 *

189 
sym_böd_«me
(c⁄° *
«me
,

190 *
pödex
,

191 
sym_db_t
 
db
);

	@syscall.c

134 
	~<°dio.h
>

135 
	~<°dlib.h
>

136 
	~<sys/ty≥s.h
>

137 
	~<sys/°©.h
>

138 
	~<sys/ut¢ame.h
>

139 
	~<sys/sysöfo.h
>

140 
	~<sys/time.h
>

141 
	~<sys/uio.h
>

143 
	~"smt.h
"

145 #ifde‡
SMT_SS


146 
	~"c⁄ãxt.h
"

149 
	~"bønchC‹r.h
"

155 #i‚de‡
MIN_SYSCALL_MODE


156 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

157 
	#MIN_SYSCALL_MODE


	)

162 #ifde‡
_MSC_VER


163 
	~<io.h
>

165 
	~<uni°d.h
>

167 
	~<f˙é.h
>

168 
	~<sys/ty≥s.h
>

169 #i‚de‡
_MSC_VER


170 
	~<sys/∑øm.h
>

172 
	~<î∫o.h
>

173 
	~<time.h
>

174 #i‚de‡
_MSC_VER


175 
	~<sys/time.h
>

177 #i‚de‡
_MSC_VER


178 
	~<sys/ªsour˚.h
>

180 
	~<sig«l.h
>

181 #i‚de‡
_MSC_VER


182 
	~<sys/fûe.h
>

184 
	~<sys/°©.h
>

185 #i‚de‡
_MSC_VER


186 
	~<sys/uio.h
>

188 
	~<£tjmp.h
>

189 #i‚de‡
_MSC_VER


190 
	~<sys/times.h
>

192 
	~<limôs.h
>

193 #i‚de‡
_MSC_VER


194 
	~<sys/io˘l.h
>

196 #i‡
deföed
(
löux
Ë|| deföed(
_AIX
)

197 
	~<utime.h
>

198 
	~<dúít.h
>

199 
	~<sys/vfs.h
>

201 #i‡
deföed
(
_AIX
)

202 
	~<sys/°©fs.h
>

204 #i‚de‡
_MSC_VER


205 
	~<sys/mou¡.h
>

208 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

209 #i‚de‡
_MSC_VER


210 
	~<sys/£À˘.h
>

213 #i‡
deföed
(
löux
Ë|| deföed(
_AIX
)

214 
	~<sgây.h
>

215 
	~<√töë/t˝.h
>

216 
	~<√töë/udp.h
>

217 
	~<√töë/ö.h
>

220 #i‡
deföed
(
__svr4__
)

221 
	~<sys/dúít.h
>

222 
	~<sys/fûio.h
>

223 #ñi‡
deföed
(
__osf__
)

224 
	~<dúít.h
>

229 
gëdúíåõs
 (
fd
, *
buf
, 
nbyãs
, *
ba£p
);

232 
cﬁÀ˘SètB¨rõr
, 
cﬁÀ˘SètSt›
[
MAXTHREADS
], 
timeToRëu∫
;

233 
‰ìzeCou¡î
;

234 
thªadF‹ked
[4];

237 
cou¡î_t
 
¶ìpCou¡
[];

240 #i‡
deföed
(
MTA
)

241 
RUU_size
;

242 
RS_lök
 *
r¶ök_‰ì_li°
;

244 #i‚de‡
RSLINK_NEW


245 
	#RSLINK_NEW
(
DST
, 
RS
Ë\

	)

246 { 
RS_lök
 *
	gn_lök
; \

247 i‡(!
	gr¶ök_‰ì_li°
) \

248 
∑nic
("out ofÑsÜinks"); \

249 
	gn_lök
 = 
r¶ök_‰ì_li°
; \

250 
	gr¶ök_‰ì_li°
 = 
r¶ök_‰ì_li°
->
√xt
; \

251 
	gn_lök
->
	g√xt
 = 
NULL
; \

252 
	gn_lök
->
	grs
 = (
RS
);Ç_lök->
	gèg
 = 
n_lök
->
rs
->
èg
; \

253 (
	gDST
Ë
n_lök
; \

256 
CV_lök
 
CVLINK_NULL
;

258 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

259 
¥i‹ôy
[
MAXTHREADS
];

262 
key
[
MAXTHREADS
];

266 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

267 
	~<sys/°©vfs.h
>

268 
	#°©fs
 
°©vfs


	)

269 
	~<sys/time.h
>

270 
	~<utime.h
>

271 
	~<sgây.h
>

272 
	~<√töë/ö.h
>

273 
	~<√töë/t˝.h
>

276 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

277 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

278 
	~<dúít.h
>

280 
	~<sys/dú.h
>

284 #unde‡
NL0


285 #unde‡
NL1


286 #unde‡
CR0


287 #unde‡
CR1


288 #unde‡
CR2


289 #unde‡
CR3


290 #unde‡
TAB0


291 #unde‡
TAB1


292 #unde‡
TAB2


293 #unde‡
XTABS


294 #unde‡
BS0


295 #unde‡
BS1


296 #unde‡
FF0


297 #unde‡
FF1


298 #unde‡
ECHO


299 #unde‡
NOFLSH


300 #unde‡
TOSTOP


301 #unde‡
FLUSHO


302 #unde‡
PENDIN


305 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

306 #unde‡
CR0


309 #ifde‡
__FªeBSD__


310 
	~<sys/io˘l_com∑t.h
>

312 #i‚de‡
_MSC_VER


313 
	~<ãrmio.h
>

317 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

319 #unde‡
HUPCL


320 #unde‡
ECHO


321 #unde‡
B50


322 #unde‡
B75


323 #unde‡
B110


324 #unde‡
B134


325 #unde‡
B150


326 #unde‡
B200


327 #unde‡
B300


328 #unde‡
B600


329 #unde‡
B1200


330 #unde‡
B1800


331 #unde‡
B2400


332 #unde‡
B4800


333 #unde‡
B9600


334 #unde‡
B19200


335 #unde‡
B38400


336 #unde‡
NL0


337 #unde‡
NL1


338 #unde‡
CR0


339 #unde‡
CR1


340 #unde‡
CR2


341 #unde‡
CR3


342 #unde‡
TAB0


343 #unde‡
TAB1


344 #unde‡
BS0


345 #unde‡
BS1


346 #unde‡
FF0


347 #unde‡
FF1


348 #unde‡
EXTA


349 #unde‡
EXTB


350 #unde‡
B900


351 #unde‡
B3600


352 #unde‡
B7200


353 #unde‡
XTABS


354 
	~<sgây.h
>

355 
	~<utime.h
>

358 #ifde‡
__CYGWIN32__


359 
	~<sys/uni°d.h
>

360 
	~<sys/vfs.h
>

363 
	~<sys/sockë.h
>

364 
	~<sys/pﬁl.h
>

366 #ifde‡
_MSC_VER


367 
	#ac˚ss
 
_ac˚ss


	)

368 
	#chmod
 
_chmod


	)

369 
	#chdú
 
_chdú


	)

370 
	#u∆ök
 
_u∆ök


	)

371 
	#›í
 
_›í


	)

372 
	#¸ót
 
_¸ót


	)

373 
	#pùe
 
_pùe


	)

374 
	#dup
 
_dup


	)

375 
	#dup2
 
_dup2


	)

376 
	#°©
 
_°©


	)

377 
	#f°©
 
_f°©


	)

378 
	#l£ek
 
_l£ek


	)

379 
	#ªad
 
_ªad


	)

380 
	#wrôe
 
_wrôe


	)

381 
	#˛o£
 
_˛o£


	)

382 
	#gëpid
 
_gëpid


	)

383 
	#utime
 
_utime


	)

384 
	~<sys/utime.h
>

387 #i‡
deföed
(
_AIX
)

388 
	~<°rögs.h
>

389 
	~<√tdb.h
>

390 #i‡!
deföed
(
POWER_64
)

391 
Êock
 (, );

395 #i‡
deföed
(
__osf__
)

396 
gëdomaö«me
 (*, );

397 
Êock
 (, );

398 
u¶ìp
 (
u£c⁄ds_t
);

401 
ruu_öô
 ();

402 
lsq_öô
 ();

403 
„tch_öô
 ();

404 
cv_öô
 ();

405 
ªg_öô
 ();

406 
b¥ed_öô
 ();

409 
	~"ho°.h
"

410 
	~"misc.h
"

411 
	~"machöe.h
"

412 
	~"ªgs.h
"

413 
	~"mem‹y.h
"

414 
	~"lﬂdî.h
"

415 
	~"sim.h
"

416 
	~"ídün.h
"

417 
	~"eio.h
"

418 
	~"sysˇŒ.h
"

419 #i‡
deföed
(
MTA
)

420 
	~"MTA.h
"

423 
	#OSF_SYS_sysˇŒ
 0

	)

425 
	#OSF_SYS_f‹k
 2

	)

426 
	#OSF_SYS_ªad
 3

	)

428 
	#OSF_SYS_ﬁd_›í
 5

	)

429 
	#OSF_SYS_˛o£
 6

	)

430 
	#OSF_SYS_waô4
 7

	)

431 
	#OSF_SYS_ﬁd_¸ót
 8

	)

432 
	#OSF_SYS_lök
 9

	)

433 
	#OSF_SYS_u∆ök
 10

	)

434 
	#OSF_SYS_execv
 11

	)

435 
	#OSF_SYS_chdú
 12

	)

436 
	#OSF_SYS_fchdú
 13

	)

437 
	#OSF_SYS_mknod
 14

	)

438 
	#OSF_SYS_chmod
 15

	)

439 
	#OSF_SYS_chown
 16

	)

440 
	#OSF_SYS_obªak
 17

	)

441 
	#OSF_SYS_gëfs°©
 18

	)

442 
	#OSF_SYS_l£ek
 19

	)

443 
	#OSF_SYS_gëpid
 20

	)

444 
	#OSF_SYS_mou¡
 21

	)

445 
	#OSF_SYS_unmou¡
 22

	)

446 
	#OSF_SYS_£tuid
 23

	)

447 
	#OSF_SYS_gëuid
 24

	)

448 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

449 
	#OSF_SYS_±ø˚
 26

	)

450 #ifde‡ 
COMPAT_43


451 
	#OSF_SYS_ƒecvmsg
 27

	)

452 
	#OSF_SYS_n£ndmsg
 28

	)

453 
	#OSF_SYS_ƒecv‰om
 29

	)

454 
	#OSF_SYS_«c˚±
 30

	)

455 
	#OSF_SYS_ngë≥î«me
 31

	)

456 
	#OSF_SYS_ngësock«me
 32

	)

458 
	#OSF_SYS_ªcvmsg
 27

	)

459 
	#OSF_SYS_£ndmsg
 28

	)

460 
	#OSF_SYS_ªcv‰om
 29

	)

461 
	#OSF_SYS_ac˚±
 30

	)

462 
	#OSF_SYS_gë≥î«me
 31

	)

463 
	#OSF_SYS_gësock«me
 32

	)

465 
	#OSF_SYS_ac˚ss
 33

	)

466 
	#OSF_SYS_chÊags
 34

	)

467 
	#OSF_SYS_fchÊags
 35

	)

468 
	#OSF_SYS_sync
 36

	)

469 
	#OSF_SYS_kûl
 37

	)

470 
	#OSF_SYS_ﬁd_°©
 38

	)

471 
	#OSF_SYS_£çgid
 39

	)

472 
	#OSF_SYS_ﬁd_l°©
 40

	)

473 
	#OSF_SYS_dup
 41

	)

474 
	#OSF_SYS_pùe
 42

	)

475 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

476 
	#OSF_SYS_¥ofû
 44

	)

477 
	#OSF_SYS_›í
 45

	)

479 
	#OSF_SYS_gëgid
 47

	)

480 
	#OSF_SYS_sig¥ocmask
 48

	)

481 
	#OSF_SYS_gëlogö
 49

	)

482 
	#OSF_SYS_£éogö
 50

	)

483 
	#OSF_SYS_ac˘
 51

	)

484 
	#OSF_SYS_sig≥ndög
 52

	)

485 
	#OSF_SYS_io˘l
 54

	)

486 
	#OSF_SYS_ªboŸ
 55

	)

487 
	#OSF_SYS_ªvoke
 56

	)

488 
	#OSF_SYS_symlök
 57

	)

489 
	#OSF_SYS_ªadlök
 58

	)

490 
	#OSF_SYS_execve
 59

	)

491 
	#OSF_SYS_umask
 60

	)

492 
	#OSF_SYS_chroŸ
 61

	)

493 
	#OSF_SYS_ﬁd_f°©
 62

	)

494 
	#OSF_SYS_gëpgΩ
 63

	)

495 
	#OSF_SYS_gë∑gesize
 64

	)

496 
	#OSF_SYS_mªm≠
 65

	)

497 
	#OSF_SYS_vf‹k
 66

	)

498 
	#OSF_SYS_°©
 67

	)

499 
	#OSF_SYS_l°©
 68

	)

500 
	#OSF_SYS_sbrk
 69

	)

501 
	#OSF_SYS_s°k
 70

	)

502 
	#OSF_SYS_mm≠
 71

	)

503 
	#OSF_SYS_ovadvi£
 72

	)

504 
	#OSF_SYS_munm≠
 73

	)

505 
	#OSF_SYS_m¥Ÿe˘
 74

	)

506 
	#OSF_SYS_madvi£
 75

	)

507 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

508 
	#OSF_SYS_kmodˇŒ
 77

	)

509 
	#OSF_SYS_möc‹e
 78

	)

510 
	#OSF_SYS_gëgroups
 79

	)

511 
	#OSF_SYS_£tgroups
 80

	)

512 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

513 
	#OSF_SYS_£çgΩ
 82

	)

514 
	#OSF_SYS_£tôimî
 83

	)

515 
	#OSF_SYS_ﬁd_waô
 84

	)

516 
	#OSF_SYS_èbÀ
 85

	)

517 
	#OSF_SYS_gëôimî
 86

	)

518 
	#OSF_SYS_gëho°«me
 87

	)

519 
	#OSF_SYS_£tho°«me
 88

	)

520 
	#OSF_SYS_gëdèbÀsize
 89

	)

521 
	#OSF_SYS_dup2
 90

	)

522 
	#OSF_SYS_f°©
 91

	)

523 
	#OSF_SYS_f˙é
 92

	)

524 
	#OSF_SYS_£À˘
 93

	)

525 
	#OSF_SYS_pﬁl
 94

	)

526 
	#OSF_SYS_fsync
 95

	)

527 
	#OSF_SYS_£çri‹ôy
 96

	)

528 
	#OSF_SYS_sockë
 97

	)

529 
	#OSF_SYS_c⁄√˘
 98

	)

530 #ifde‡ 
COMPAT_43


531 
	#OSF_SYS_ac˚±
 99

	)

533 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

535 
	#OSF_SYS_gë¥i‹ôy
 100

	)

536 #ifde‡ 
COMPAT_43


537 
	#OSF_SYS_£nd
 101

	)

538 
	#OSF_SYS_ªcv
 102

	)

540 
	#OSF_SYS_ﬁd_£nd
 101

	)

541 
	#OSF_SYS_ﬁd_ªcv
 102

	)

543 
	#OSF_SYS_sigªtu∫
 103

	)

544 
	#OSF_SYS_böd
 104

	)

545 
	#OSF_SYS_£tsock›t
 105

	)

546 
	#OSF_SYS_li°í
 106

	)

547 
	#OSF_SYS_∂ock
 107

	)

548 
	#OSF_SYS_ﬁd_sigvec
 108

	)

549 
	#OSF_SYS_ﬁd_sigblock
 109

	)

550 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

551 
	#OSF_SYS_sigsu•íd
 111

	)

552 
	#OSF_SYS_sig°ack
 112

	)

553 #ifde‡ 
COMPAT_43


554 
	#OSF_SYS_ªcvmsg
 113

	)

555 
	#OSF_SYS_£ndmsg
 114

	)

557 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

558 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

561 
	#OSF_SYS_gëtimeofday
 116

	)

562 
	#OSF_SYS_gërußge
 117

	)

563 
	#OSF_SYS_gësock›t
 118

	)

564 
	#OSF_SYS_ªadv
 120

	)

565 
	#OSF_SYS_wrôev
 121

	)

566 
	#OSF_SYS_£âimeofday
 122

	)

567 
	#OSF_SYS_fchown
 123

	)

568 
	#OSF_SYS_fchmod
 124

	)

569 #ifde‡ 
COMPAT_43


570 
	#OSF_SYS_ªcv‰om
 125

	)

572 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

574 
	#OSF_SYS_£åeuid
 126

	)

575 
	#OSF_SYS_£åegid
 127

	)

576 
	#OSF_SYS_ª«me
 128

	)

577 
	#OSF_SYS_åunˇã
 129

	)

578 
	#OSF_SYS_·runˇã
 130

	)

579 
	#OSF_SYS_Êock
 131

	)

580 
	#OSF_SYS_£tgid
 132

	)

581 
	#OSF_SYS_£ndto
 133

	)

582 
	#OSF_SYS_shutdown
 134

	)

583 
	#OSF_SYS_sockë∑ú
 135

	)

584 
	#OSF_SYS_mkdú
 136

	)

585 
	#OSF_SYS_rmdú
 137

	)

586 
	#OSF_SYS_utimes
 138

	)

588 
	#OSF_SYS_adjtime
 140

	)

589 #ifde‡ 
COMPAT_43


590 
	#OSF_SYS_gë≥î«me
 141

	)

592 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

594 
	#OSF_SYS_gëho°id
 142

	)

595 
	#OSF_SYS_£tho°id
 143

	)

596 
	#OSF_SYS_gëæimô
 144

	)

597 
	#OSF_SYS_£ålimô
 145

	)

598 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

599 
	#OSF_SYS_£tsid
 147

	)

600 
	#OSF_SYS_quŸa˘l
 148

	)

601 
	#OSF_SYS_ﬁdquŸa
 149

	)

602 #ifde‡ 
COMPAT_43


603 
	#OSF_SYS_gësock«me
 150

	)

605 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

607 
	#OSF_SYS_pid_block
 153

	)

608 
	#OSF_SYS_pid_unblock
 154

	)

609 
	#OSF_SYS_siga˘i⁄
 156

	)

610 
	#OSF_SYS_sigwaô¥im
 157

	)

611 
	#OSF_SYS_nfssvc
 158

	)

612 
	#OSF_SYS_gëdúíåõs
 159

	)

613 
	#OSF_SYS_°©fs
 160

	)

614 
	#OSF_SYS_f°©fs
 161

	)

615 
	#OSF_SYS_async_d´m⁄
 163

	)

616 
	#OSF_SYS_gëfh
 164

	)

617 
	#OSF_SYS_gëdomaö«me
 165

	)

618 
	#OSF_SYS_£tdomaö«me
 166

	)

619 
	#OSF_SYS_exp‹tfs
 169

	)

620 
	#OSF_SYS_Æt_∂ock
 181

	)

621 
	#OSF_SYS_gëm¡
 184

	)

622 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

623 
	#OSF_SYS_Æt_£tsid
 188

	)

624 
	#OSF_SYS_sw≠⁄
 199

	)

625 
	#OSF_SYS_msg˘l
 200

	)

626 
	#OSF_SYS_msggë
 201

	)

627 
	#OSF_SYS_msgrcv
 202

	)

628 
	#OSF_SYS_msg¢d
 203

	)

629 
	#OSF_SYS_£m˘l
 204

	)

630 
	#OSF_SYS_£mgë
 205

	)

631 
	#OSF_SYS_£m›
 206

	)

632 
	#OSF_SYS_u«me
 207

	)

633 
	#OSF_SYS_lchown
 208

	)

634 
	#OSF_SYS_shm©
 209

	)

635 
	#OSF_SYS_shm˘l
 210

	)

636 
	#OSF_SYS_shmdt
 211

	)

637 
	#OSF_SYS_shmgë
 212

	)

638 
	#OSF_SYS_mvÆid
 213

	)

639 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

640 
	#OSF_SYS_m¶ìp
 215

	)

641 
	#OSF_SYS_mwakeup
 216

	)

642 
	#OSF_SYS_msync
 217

	)

643 
	#OSF_SYS_sig«l
 218

	)

644 
	#OSF_SYS_utc_gëtime
 219

	)

645 
	#OSF_SYS_utc_adjtime
 220

	)

646 
	#OSF_SYS_£curôy
 222

	)

647 
	#OSF_SYS_klﬂdˇŒ
 223

	)

648 
	#OSF_SYS_gëpgid
 233

	)

649 
	#OSF_SYS_gësid
 234

	)

650 
	#OSF_SYS_sigÆt°ack
 235

	)

651 
	#OSF_SYS_waôid
 236

	)

652 
	#OSF_SYS_¥io˙é£t
 237

	)

653 
	#OSF_SYS_sig£nd£t
 238

	)

654 
	#OSF_SYS_£t_•ecuœtive
 239

	)

655 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

656 
	#OSF_SYS_sysöfo
 241

	)

657 
	#OSF_SYS_uadmö
 242

	)

658 
	#OSF_SYS_fu£r
 243

	)

659 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

660 
	#OSF_SYS_¡p_adjtime
 245

	)

661 
	#OSF_SYS_¡p_gëtime
 246

	)

662 
	#OSF_SYS_∑thc⁄f
 247

	)

663 
	#OSF_SYS_Â©hc⁄f
 248

	)

664 
	#OSF_SYS_uswôch
 250

	)

665 
	#OSF_SYS_u¶ìp_thªad
 251

	)

666 
	#OSF_SYS_aud˙é
 252

	)

667 
	#OSF_SYS_audgí
 253

	)

668 
	#OSF_SYS_sysfs
 254

	)

669 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

670 
	#OSF_SYS_gësysöfo
 256

	)

671 
	#OSF_SYS_£tsysöfo
 257

	)

672 
	#OSF_SYS_afs_sysˇŒ
 258

	)

673 
	#OSF_SYS_sw≠˘l
 259

	)

674 
	#OSF_SYS_mem˙é
 260

	)

675 
	#OSF_SYS_fd©async
 261

	)

676 #i‡
deföed
(
MTA
)

677 
	#OSF_SYS_gëthªadid
 162

	)

678 
	#OSF_SYS_öô_°¨t
 501

	)

679 
	#OSF_SYS_öô
 167

	)

680 
	#OSF_SYS_öô_com∂ëe
 503

	)

681 
	#OSF_SYS_di°ribuã
 504

	)

682 
	#OSF_SYS_time
 505

	)

684 
	#OSF_SYS_lock_acquúe
 507

	)

685 
	#OSF_SYS_lock_ªÀa£
 508

	)

686 
	#OSF_SYS_Êag_acquúe
 509

	)

687 
	#OSF_SYS_Êag_ªÀa£
 510

	)

688 
	#OSF_SYS_öc_Êag
 511

	)

689 
	#OSF_SYS_pﬁl_Êag
 512

	)

690 
	#OSF_SYS_waô_gt_Êag
 513

	)

691 
	#OSF_SYS_waô_…_Êag
 514

	)

693 
	#OSF_SYS_¥ötf
 168

	)

694 
	#OSF_SYS_MTA_hÆt
 170

	)

695 
	#OSF_SYS_b¨rõr
 171

	)

696 
	#OSF_SYS_mem‹y_∑ge_round
 519

	)

697 
	#OSF_SYS_MTA_°¨t
 172

	)

698 
	#OSF_SYS_WAIT
 173

	)

699 
	#OSF_SYS_STATS
 174

	)

701 
	#OSF_SYS_BARRIER_STATS
 175

	)

702 
	#OSF_SYS_LOCK_STATS
 176

	)

704 
	#OSF_SYS_BARRIER_INSTR
 177

	)

705 
	#OSF_SYS_QUEISCE
 178

	)

706 
	#OSF_SYS_FASTFWD
 179

	)

707 
	#OSF_SYS_RANDOM
 180

	)

708 
	#OSF_SYS_MEM
 182

	)

709 
	#OSF_SYS_PRINTGP
 183

	)

710 
	#OSF_SYS_SHDADDR
 185

	)

711 
	#OSF_SYS_STOPSIM
 186

	)

712 
	#OSF_SYS_PRINTINSTR
 189

	)

713 
	#OSF_SYS_LOCKADDR
 557

	)

714 
	#OSF_SYS_IDEAL_LOCKACQ
 190

	)

715 
	#OSF_SYS_IDEAL_LOCKREL
 191

	)

716 
	#OSF_SYS_IDEAL_BAR
 192

	)

720 #ifde‡
LOCK_OPTI


721 
md_addr_t
 
	glock_addr
[
MAXTHREADS
][
MAXLOCK
];

722 
	glock_èû
[
MAXTHREADS
];

724 
FILE
 *
Â_åa˚
;

729 
	gLock_Acquúe
[
MAXLOCK
] = {0};

730 
	gLock_waô_id
[
MAXLOCK
][MAXLOCK];

731 
	gLock_hód
[
MAXLOCK
];

732 
	gLock_èû
[
MAXLOCK
];

733 
	gLock_waô_num
[
MAXLOCK
];

734 
	glock_waôög
[
MAXTHREADS
];

737 
	gB¨rõr_Êag
[
MAXTHREADS
];

738 
	gB¨rõr_num
[
MAXBARRIER
];

739 
	gb¨rõr_ãmp
 = 0;

740 
	gb¨rõr_waôög
[
MAXTHREADS
];

742 
cou¡î_t
 
TŸÆB¨rõrs
;

743 
cou¡î_t
 
TŸÆLocks
;

744 
gíîÆ_°©
 (
id
);

745 
MTA_¥ötInfo
 (
id
);

746 
	gtmpNum
;

747 
numThªads
[
CLUSTERS
];

748 
mè_maxthªads
;

749 
cﬁÀ˘_°©s
;

750 
ÊushImpSèts
;

752 
cﬁÀ˘_b¨rõr_°©s
[
CLUSTERS
];

753 
cﬁÀ˘_b¨rõr_ªÀa£
;

754 
md_addr_t
 
	gb¨rõr_addr
;

755 
	gcﬁÀ˘_b¨rõr_°©s_own
[
CLUSTERS
];

756 
cﬁÀ˘_lock_°©s
[
CLUSTERS
];

757 
md_addr_t
 
LockInôPC
;

758 
cou¡î_t
 
sim_cy˛e
;

759 
°¨tTakögSèti°ics
;

760 
cuºítPha£
;

761 
cou¡î_t
 
∑øŒñ_sim_cy˛e
;

762 
quõs˚Såu˘
 
quõs˚AddrSåu˘
[
CLUSTERS
];

763 
ÊushWrôeBuf„r
 (
thªadid
);

764 
Á°fwd
;

765 
°›sim
;

766 
ac˚ss_mem
;

767 
ac˚ss_mem_id
;

768 
ˇche_t
 *
ˇche_dl1
[
CLUSTERS
];

774 
	#PAGE_SIZE
 8192

775 

	)

777 c⁄° 
	gALPHA_O_RDONLY
 = 00000000;

778 c⁄° 
	gALPHA_O_WRONLY
 = 00000001;

779 c⁄° 
	gALPHA_O_RDWR
 = 00000002;

780 c⁄° 
	gALPHA_O_NONBLOCK
 = 00000004;

781 c⁄° 
	gALPHA_O_APPEND
 = 00000010;

782 c⁄° 
	gALPHA_O_CREAT
 = 00001000;

783 c⁄° 
	gALPHA_O_TRUNC
 = 00002000;

784 c⁄° 
	gALPHA_O_EXCL
 = 00004000;

785 c⁄° 
	gALPHA_O_NOCTTY
 = 00010000;

786 c⁄° 
	gALPHA_O_SYNC
 = 00040000;

787 c⁄° 
	gALPHA_O_DRD
 = 00100000;

788 c⁄° 
	gALPHA_O_DIRECTIO
 = 00200000;

789 c⁄° 
	gALPHA_O_CACHE
 = 00400000;

790 c⁄° 
	gALPHA_O_DSYNC
 = 02000000;

791 c⁄° 
	gALPHA_O_RSYNC
 = 04000000;

794 c⁄° 
	gALPHA_IOCTL_TIOCGETP
 = 0x40067408;

795 c⁄° 
	gALPHA_IOCTL_TIOCSETP
 = 0x80067409;

796 c⁄° 
	gALPHA_IOCTL_TIOCSETN
 = 0x8006740a;

797 c⁄° 
	gALPHA_IOCTL_TIOCSETC
 = 0x80067411;

798 c⁄° 
	gALPHA_IOCTL_TIOCGETC
 = 0x40067412;

799 c⁄° 
	gALPHA_IOCTL_FIONREAD
 = 0x4004667f;

800 c⁄° 
	gALPHA_IOCTL_TIOCISATTY
 = 0x2000745e;

801 c⁄° 
	gALPHA_IOCTL_TIOCGETS
 = 0x402c7413;

802 c⁄° 
	gALPHA_IOCTL_TIOCGETA
 = 0x40127417;

805 c⁄° 
	gALPHA_RLIMIT_CPU
 = 0;

806 c⁄° 
	gALPHA_RLIMIT_FSIZE
 = 1;

807 c⁄° 
	gALPHA_RLIMIT_DATA
 = 2;

808 c⁄° 
	gALPHA_RLIMIT_STACK
 = 3;

809 c⁄° 
	gALPHA_RLIMIT_CORE
 = 4;

810 c⁄° 
	gALPHA_RLIMIT_RSS
 = 5;

811 c⁄° 
	gALPHA_RLIMIT_NOFILE
 = 6;

812 c⁄° 
	gALPHA_RLIMIT_AS
 = 7;

813 c⁄° 
	gALPHA_RLIMIT_VMEM
 = 7;

814 c⁄° 
	gALPHA_RLIMIT_NPROC
 = 8;

815 c⁄° 
	gALPHA_RLIMIT_MEMLOCK
 = 9;

816 c⁄° 
	gALPHA_RLIMIT_LOCKS
 = 10;

825 
	msy¢ame
[65];

826 
	mnodíame
[65];

827 
	mªÀa£
[65];

828 
	mvîsi⁄
[65];

829 
	mmachöe
[65];

830 
	mdomaö«me
[65];

831 } 
	tÆpha_ut¢ame
;

835 
uöt64_t
 
	mæim_cur
;

836 
uöt64_t
 
	mæim_max
;

837 } 
	tÆpha_æimô
;

841 
uöt32_t
 
	m°_dev
;

842 
uöt32_t
 
	m°_öo
;

843 
uöt32_t
 
	m°_mode
;

844 
uöt32_t
 
	m°_∆ök
;

845 
uöt32_t
 
	m°_uid
;

846 
uöt32_t
 
	m°_gid
;

847 
uöt32_t
 
	m°_rdev
;

848 
öt32_t
 
	m__∑d0
;

849 
öt64_t
 
	m°_size
;

850 
uöt64_t
 
	m°_©imeX
;

851 
uöt64_t
 
	m°_mtimeX
;

852 
uöt64_t
 
	m°_˘imeX
;

853 
uöt32_t
 
	m°_blksize
;

854 
öt32_t
 
	m°_blocks
;

855 
uöt32_t
 
	m°_Êags
;

856 
uöt32_t
 
	m°_gí
;

857 } 
	tÆpha_°©
;

861 
uöt64_t
 
	m°_dev
;

862 
uöt64_t
 
	m°_öo
;

863 
uöt64_t
 
	m°_rdev
;

864 
uöt64_t
 
	m°_size
;

865 
uöt64_t
 
	m°_blocks
;

867 
uöt32_t
 
	m°_mode
;

868 
uöt32_t
 
	m°_uid
;

869 
uöt32_t
 
	m°_gid
;

870 
uöt32_t
 
	m°_blksize
;

871 
uöt32_t
 
	m°_∆ök
;

872 
uöt32_t
 
	m__∑d0
;

874 
uöt64_t
 
	m°_©imeX
;

875 
uöt64_t
 
	m°_©ime_n£c
;

876 
uöt64_t
 
	m°_mtimeX
;

877 
uöt64_t
 
	m°_mtime_n£c
;

878 
uöt64_t
 
	m°_˘imeX
;

879 
uöt64_t
 
	m°_˘ime_n£c
;

880 
öt64_t
 
	m__unu£d
[3];

881 } 
	tÆpha_°©64
;

885 
öt64_t
 
	mtv_£c
;

886 
öt64_t
 
	mtv_u£c
;

887 } 
	tÆpha_timevÆ
;

891 
öt64_t
 
	mtz_möuãswe°
;

892 
öt64_t
 
	mtz_d°time
;

893 } 
	tÆpha_timez⁄e
;

897 
uöt64_t
 
	miov_ba£
;

898 
uöt64_t
 
	miov_Àn
;

899 } 
	tÆpha_iovec
;

902 
	sxœã_èbÀ_t


904 
	mèrgë_vÆ
;

905 
	mho°_vÆ
;

909 
	$xœã_¨g
 (
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

911 
i
;

913 
i
 = 0; i < 
m≠_sz
; i++)

915 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

916  
m≠
[
i
].
ho°_vÆ
;

920 
	`w¨n
 ("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

921  
èrgë_vÆ
;

922 
	}
}

926 
	#MAXBUFSIZE
 1024

	)

932 
	#NUM_IOCTL_BYTES
 128

	)

933 
	#SYSCALL_BUFFER_SIZE
 1024

934 

	)

936 
	#OSF_TIOCGETP
 0x40067408

	)

937 
	#OSF_FIONREAD
 0x4004667f

	)

941 
	sosf_°©buf


943 
w‹d_t
 
	mosf_°_dev
;

944 
w‹d_t
 
	mosf_°_öo
;

945 
w‹d_t
 
	mosf_°_mode
;

946 
hÆf_t
 
	mosf_°_∆ök
;

947 
hÆf_t
 
	m∑d0
;

948 
w‹d_t
 
	mosf_°_uid
;

949 
w‹d_t
 
	mosf_°_gid
;

950 
w‹d_t
 
	mosf_°_rdev
;

951 
w‹d_t
 
	m∑d1
;

952 
qw‹d_t
 
	mosf_°_size
;

953 
w‹d_t
 
	mosf_°_©ime
;

954 
w‹d_t
 
	mosf_°_•¨e1
;

955 
w‹d_t
 
	mosf_°_mtime
;

956 
w‹d_t
 
	mosf_°_•¨e2
;

957 
w‹d_t
 
	mosf_°_˘ime
;

958 
w‹d_t
 
	mosf_°_•¨e3
;

959 
w‹d_t
 
	mosf_°_blksize
;

960 
w‹d_t
 
	mosf_°_blocks
;

961 
w‹d_t
 
	mosf_°_gínum
;

962 
w‹d_t
 
	mosf_°_•¨e4
;

965 
	sosf_sgâyb


967 
byã_t
 
	msg_i•ìd
;

968 
byã_t
 
	msg_o•ìd
;

969 
byã_t
 
	msg_îa£
;

970 
byã_t
 
	msg_kûl
;

971 
shÆf_t
 
	msg_Êags
;

974 
	#OSF_NSIG
 32

	)

976 
	#OSF_SIG_BLOCK
 1

	)

977 
	#OSF_SIG_UNBLOCK
 2

	)

978 
	#OSF_SIG_SETMASK
 3

	)

980 
	sosf_sigc⁄ãxt


982 
qw‹d_t
 
	msc_⁄°ack
;

983 
qw‹d_t
 
	msc_mask
;

984 
qw‹d_t
 
	msc_pc
;

985 
qw‹d_t
 
	msc_ps
;

986 
qw‹d_t
 
	msc_ªgs
[32];

987 
qw‹d_t
 
	msc_ow√dÂ
;

988 
qw‹d_t
 
	msc_Âªgs
[32];

989 
qw‹d_t
 
	msc_Â¸
;

990 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

993 
	sosf_°©fs


995 
shÆf_t
 
	mf_ty≥
;

996 
shÆf_t
 
	mf_Êags
;

997 
w‹d_t
 
	mf_fsize
;

998 
w‹d_t
 
	mf_bsize
;

999 
w‹d_t
 
	mf_blocks
;

1001 
w‹d_t
 
	mf_b‰ì
;

1002 
w‹d_t
 
	mf_bavaû
;

1003 
w‹d_t
 
	mf_fûes
;

1004 
w‹d_t
 
	mf_f‰ì
;

1005 
qw‹d_t
 
	mf_fsid
;

1006 
w‹d_t
 
	mf_•¨e
[9];

1009 
	sosf_timevÆ


1011 
sw‹d_t
 
	mosf_tv_£c
;

1012 
sw‹d_t
 
	mosf_tv_u£c
;

1015 
	sosf_timez⁄e


1017 
sw‹d_t
 
	mosf_tz_möuãswe°
;

1018 
sw‹d_t
 
	mosf_tz_d°time
;

1023 
	sosf_rußge


1025 
osf_timevÆ
 
	mosf_ru_utime
;

1026 
osf_timevÆ
 
	mosf_ru_°ime
;

1027 
sw‹d_t
 
	mosf_ru_maxrss
;

1028 
sw‹d_t
 
	mosf_ru_ixrss
;

1029 
sw‹d_t
 
	mosf_ru_idrss
;

1030 
sw‹d_t
 
	mosf_ru_i§ss
;

1031 
sw‹d_t
 
	mosf_ru_möÊt
;

1032 
sw‹d_t
 
	mosf_ru_majÊt
;

1033 
sw‹d_t
 
	mosf_ru_nsw≠
;

1034 
sw‹d_t
 
	mosf_ru_öblock
;

1035 
sw‹d_t
 
	mosf_ru_oublock
;

1036 
sw‹d_t
 
	mosf_ru_msg¢d
;

1037 
sw‹d_t
 
	mosf_ru_msgrcv
;

1038 
sw‹d_t
 
	mosf_ru_nsig«ls
;

1039 
sw‹d_t
 
	mosf_ru_nvcsw
;

1040 
sw‹d_t
 
	mosf_ru_nivcsw
;

1043 
	sosf_æimô


1045 
qw‹d_t
 
	mosf_æim_cur
;

1046 
qw‹d_t
 
	mosf_æim_max
;

1049 
	sosf_sockaddr


1051 
hÆf_t
 
	mß_Ámûy
;

1052 
byã_t
 
	mß_d©a
[24];

1055 
	sosf_iovec


1057 
md_addr_t
 
	miov_ba£
;

1058 
w‹d_t
 
	miov_Àn
;

1059 
w‹d_t
 
	m∑d
;

1063 
	#OSF_DIRENT_SZ
(
STR
Ë\

	)

1064 ((
	gw‹d_t
Ë+ 2*(
	ghÆf_t
Ë+ (((
°æí
(
STR
) + 1) + 3)/4)*4)

1067 
	sosf_dúít


1069 
w‹d_t
 
	md_öo
;

1070 
hÆf_t
 
	md_ª˛í
;

1071 
hÆf_t
 
	md_«mÀn
;

1072 
	md_«me
[256];

1082 
	#OSF_O_RDONLY
 0x0000

	)

1083 
	#OSF_O_WRONLY
 0x0001

	)

1084 
	#OSF_O_RDWR
 0x0002

	)

1085 
	#OSF_O_NONBLOCK
 0x0004

	)

1086 
	#OSF_O_APPEND
 0x0008

	)

1087 
	#OSF_O_CREAT
 0x0200

	)

1088 
	#OSF_O_TRUNC
 0x0400

	)

1089 
	#OSF_O_EXCL
 0x0800

	)

1090 
	#OSF_O_NOCTTY
 0x1000

	)

1091 
	#OSF_O_SYNC
 0x4000

	)

1096 
	mosf_Êag
;

1097 
	mloˇl_Êag
;

1098 } 
	gosf_Êag_èbÀ
[] =

1101 #ifde‡
_MSC_VER


1103 
OSF_O_RDONLY
, 
_O_RDONLY
},

1105 
OSF_O_WRONLY
, 
_O_WRONLY
},

1107 
OSF_O_RDWR
, 
_O_RDWR
},

1109 
OSF_O_APPEND
, 
_O_APPEND
},

1111 
OSF_O_CREAT
, 
_O_CREAT
},

1113 
OSF_O_TRUNC
, 
_O_TRUNC
},

1115 
OSF_O_EXCL
, 
_O_EXCL
},

1116 #ifde‡
_O_NONBLOCK


1118 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
},

1120 #ifde‡
_O_NOCTTY


1122 
OSF_O_NOCTTY
, 
_O_NOCTTY
},

1124 #ifde‡
_O_SYNC


1126 
OSF_O_SYNC
, 
_O_SYNC
},

1130 
OSF_O_RDONLY
, 
O_RDONLY
},

1132 
OSF_O_WRONLY
, 
O_WRONLY
},

1134 
OSF_O_RDWR
, 
O_RDWR
},

1136 
OSF_O_APPEND
, 
O_APPEND
},

1138 
OSF_O_CREAT
, 
O_CREAT
},

1140 
OSF_O_TRUNC
, 
O_TRUNC
},

1142 
OSF_O_EXCL
, 
O_EXCL
},

1144 
OSF_O_NONBLOCK
, 
O_NONBLOCK
},

1146 
OSF_O_NOCTTY
, 
O_NOCTTY
},

1147 #ifde‡
O_SYNC


1149 
OSF_O_SYNC
, 
O_SYNC
},

1154 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

1157 
qw‹d_t
 
	gSigMask
 = 0;

1159 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

1162 
	#OSF_SO_DEBUG
 0x0001

	)

1163 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

1164 
	#OSF_SO_REUSEADDR
 0x0004

	)

1165 
	#OSF_SO_KEEPALIVE
 0x0008

	)

1166 
	#OSF_SO_DONTROUTE
 0x0010

	)

1167 
	#OSF_SO_BROADCAST
 0x0020

	)

1168 
	#OSF_SO_USELOOPBACK
 0x0040

	)

1169 
	#OSF_SO_LINGER
 0x0080

	)

1170 
	#OSF_SO_OOBINLINE
 0x0100

	)

1171 
	#OSF_SO_REUSEPORT
 0x0200

	)

1173 
xœã_èbÀ_t
 
	gsock›t_m≠
[] = {

1174 {
OSF_SO_DEBUG
, 
SO_DEBUG
},

1175 #ifde‡
SO_ACCEPTCONN


1176 {
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
},

1178 {
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
},

1179 {
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
},

1180 {
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
},

1181 {
OSF_SO_BROADCAST
, 
SO_BROADCAST
},

1182 #ifde‡
SO_USELOOPBACK


1183 {
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
},

1185 {
OSF_SO_LINGER
, 
SO_LINGER
},

1186 {
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
},

1187 #ifde‡
SO_REUSEPORT


1188 {
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
}

1193 
	#OSF_TCP_NODELAY
 0x01

	)

1194 
	#OSF_TCP_MAXSEG
 0x02

	)

1195 
	#OSF_TCP_RPTR2RXT
 0x03

	)

1196 
	#OSF_TCP_KEEPIDLE
 0x04

	)

1197 
	#OSF_TCP_KEEPINTVL
 0x05

	)

1198 
	#OSF_TCP_KEEPCNT
 0x06

	)

1199 
	#OSF_TCP_KEEPINIT
 0x07

	)

1200 
	#OSF_TCP_PUSH
 0x08

	)

1201 
	#OSF_TCP_NODELACK
 0x09

	)

1203 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] = {

1204 {
OSF_TCP_NODELAY
, 
TCP_NODELAY
},

1205 {
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
},

1206 #ifde‡
TCP_RPTR2RXT


1207 {
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
},

1209 #ifde‡
TCP_KEEPIDLE


1210 {
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
},

1212 #ifde‡
TCP_KEEPINTVL


1213 {
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
},

1215 #ifde‡
TCP_KEEPCNT


1216 {
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
},

1218 #ifde‡
TCP_KEEPINIT


1219 {
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
},

1221 #ifde‡
TCP_PUSH


1222 {
OSF_TCP_PUSH
, 
TCP_PUSH
},

1224 #ifde‡
TCP_NODELACK


1225 {
OSF_TCP_NODELACK
, 
TCP_NODELACK
}

1230 
	#OSF_SOL_SOCKET
 0xfff‡

	)

1231 
	#OSF_SOL_IP
 0

	)

1232 
	#OSF_SOL_TCP
 6

	)

1233 
	#OSF_SOL_UDP
 17

	)

1235 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] = {

1236 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
Ë|| deföed(
_AIX
)

1237 {
OSF_SOL_SOCKET
, 
SOL_SOCKET
},

1238 {
OSF_SOL_IP
, 
IPPROTO_IP
},

1239 {
OSF_SOL_TCP
, 
IPPROTO_TCP
},

1240 {
OSF_SOL_UDP
, 
IPPROTO_UDP
}

1242 {
OSF_SOL_SOCKET
, 
SOL_SOCKET
},

1243 {
OSF_SOL_IP
, 
SOL_IP
},

1244 {
OSF_SOL_TCP
, 
SOL_TCP
},

1245 {
OSF_SOL_UDP
, 
SOL_UDP
}

1250 
	#OSF_AF_UNSPEC
 0

	)

1251 
	#OSF_AF_UNIX
 1

	)

1252 
	#OSF_AF_INET
 2

	)

1253 
	#OSF_AF_IMPLINK
 3

	)

1254 
	#OSF_AF_PUP
 4

	)

1255 
	#OSF_AF_CHAOS
 5

	)

1256 
	#OSF_AF_NS
 6

	)

1257 
	#OSF_AF_ISO
 7

	)

1259 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] = {

1260 {
OSF_AF_UNSPEC
, 
AF_UNSPEC
},

1261 {
OSF_AF_UNIX
, 
AF_UNIX
},

1262 {
OSF_AF_INET
, 
AF_INET
},

1263 #ifde‡
AF_IMPLINK


1264 {
OSF_AF_IMPLINK
, 
AF_IMPLINK
},

1266 #ifde‡
AF_PUP


1267 {
OSF_AF_PUP
, 
AF_PUP
},

1269 #ifde‡
AF_CHAOS


1270 {
OSF_AF_CHAOS
, 
AF_CHAOS
},

1272 #ifde‡
AF_NS


1273 {
OSF_AF_NS
, 
AF_NS
},

1275 #ifde‡
AF_ISO


1276 {
OSF_AF_ISO
, 
AF_ISO
}

1281 
	#OSF_SOCK_STREAM
 1

	)

1282 
	#OSF_SOCK_DGRAM
 2

	)

1283 
	#OSF_SOCK_RAW
 3

	)

1284 
	#OSF_SOCK_RDM
 4

	)

1285 
	#OSF_SOCK_SEQPACKET
 5

	)

1287 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] = {

1288 {
OSF_SOCK_STREAM
, 
SOCK_STREAM
},

1289 {
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
},

1290 {
OSF_SOCK_RAW
, 
SOCK_RAW
},

1291 {
OSF_SOCK_RDM
, 
SOCK_RDM
},

1292 {
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
}

1296 
	#OSF_TBL_SYSINFO
 12

	)

1297 
	sosf_tbl_sysöfo


1299 
	msi_u£r
;

1300 
	msi_ni˚
;

1301 
	msi_sys
;

1302 
	msi_idÀ
;

1303 
	msi_hz
;

1304 
	msi_phz
;

1305 
	msi_boŸtime
;

1306 
	mwaô
;

1310 
	$AddToTheSh¨edAddrLi°
 (
addr
, 
size
)

1312 
sh¨edAddªssLi°_s
 *
tmpPå1
, *
tmpPå2
;

1313 
ödx
;

1315 
ödx
 = (Ë(((Ë
addr
 & 1016) >> 3);

1316 
ödx
 = 0;

1318 i‡(
sh¨edAddªssLi°
[
ödx
] =
NULL
)

1320 
sh¨edAddªssLi°
[
ödx
] = (
sh¨edAddªssLi°_s
 *Ë
	`mÆloc
 ( (sharedAddressList_s));

1321 
sh¨edAddªssLi°
[
ödx
]->
addªss
 = 
addr
;

1322 
sh¨edAddªssLi°
[
ödx
]->
size
 = size;

1323 
sh¨edAddªssLi°
[
ödx
]->
√xt
 = 
NULL
;

1327 
tmpPå1
 = 
sh¨edAddªssLi°
[
ödx
];

1328 
tmpPå2
 = 
sh¨edAddªssLi°
[
ödx
];

1329 
tmpPå1
 !
NULL
)

1331 
tmpPå2
 = 
tmpPå1
;

1332 
tmpPå1
 =ÅmpPå1->
√xt
;

1334 
tmpPå2
->
√xt
 = (
sh¨edAddªssLi°_s
 *Ë
	`mÆloc
 ( (sharedAddressList_s));

1335 
tmpPå2
->
√xt
->
addªss
 = 
addr
;

1336 
tmpPå2
->
√xt
->
size
 = size;

1337 
tmpPå2
->
√xt
->√xà
NULL
;

1340 
tmpPå1
 = 
sh¨edAddªssLi°
;

1341 
tmpPå1
 !
NULL
)

1343 
	`¥ötf
 ("Add∏%Œx, Sizê%d\n", (Ë
addr
, (Ë
size
);

1344 
tmpPå1
 =ÅmpPå1->
√xt
;

1347 
	}
}

1349 #i‡
deföed
(
MTA
)

1351 
	$¥öt_°©s
 (
c⁄ãxt
 * 
cuºít
)

1353 
	`¥ötf
 ("TŸÆÇumbî o‡ö°ru˘i⁄†execuãd = %d (%d)\n", 
cuºít
->
sim_num_ö¢
, cuºít->
id
);

1356 
	}
}

1359 
	$InôülizeRUU
 (
c⁄ãxt
 * 
de°
, c⁄ãxà* 
§c
)

1361 
˙t
, 
i
, 
RUUIndx
;

1362 
RUU_°©i⁄
 *
RUUDe°
, *
RUUSrc
, *
rs
;

1363 
RS_lök
 *
lök
, *
√wlök
;

1366 
RS_lök
 *
ãmpRS
;

1369 
i
 = 0; i < 
RUU_size
; i++)

1371 
	`¥ötf
 ("Index o‡%d = %d, IR = %lx\n", 
i
, 
§c
->
RUU
[i].
ödex
, src->RUU[i].
IR
);

1372 
ãmpRS
 = 
§c
->
RUU
[
i
].
odï_li°
[1];

1373 
ãmpRS
 !
NULL
)

1375 
	`¥ötf
 ("X = %d ", 
ãmpRS
->
rs
->
ödex
);

1376 
ãmpRS
 =ÅempRS->
√xt
;

1378 
	`¥ötf
 ("\n");

1383 
˙t
 = 0; c¡ < 
RUU_size
; cnt++)

1385 
RUUDe°
 = &(
de°
->
RUU
[
˙t
]);

1386 
RUUSrc
 = &(
§c
->
RUU
[
˙t
]);

1388 
RUUDe°
->
ödex
 = 
RUUSrc
->index;

1389 
RUUDe°
->
thªadid
 = 
de°
->
id
;

1390 
RUUDe°
->
IR
 = 
RUUSrc
->IR;

1391 
RUUDe°
->
›
 = 
RUUSrc
->op;

1392 
RUUDe°
->
PC
 = 
RUUSrc
->PC;

1393 
RUUDe°
->
√xt_PC
 = 
RUUSrc
->next_PC;

1394 
RUUDe°
->
¥ed_PC
 = 
RUUSrc
->pred_PC;

1395 
RUUDe°
->
ö_LSQ
 = 
RUUSrc
->in_LSQ;

1396 
RUUDe°
->
ó_comp
 = 
RUUSrc
->ea_comp;

1397 
RUUDe°
->
ªcovî_ö°
 = 
RUUSrc
->recover_inst;

1398 
RUUDe°
->
°ack_ªcovî_idx
 = 
RUUSrc
->stack_recover_idx;

1400 
	`¥ötf
 ("YOU HAVE NOT INITALIZED BRANCH PREDICTOR INFO IN RUU RESULTS MAY NOT CORRECT\n");

1401 
RUUDe°
->
•ec_mode
 = 
RUUSrc
->spec_mode;

1402 
RUUDe°
->
addr
 = 
RUUSrc
->addr;

1403 
RUUDe°
->
èg
 = 
RUUSrc
->tag;

1404 
RUUDe°
->
£q
 = 
RUUSrc
->seq;

1405 
RUUDe°
->
±ø˚_£q
 = 
RUUSrc
->ptrace_seq;

1406 
RUUDe°
->
queued
 = 
RUUSrc
->queued;

1407 
RUUDe°
->
issued
 = 
RUUSrc
->issued;

1408 
RUUDe°
->
com∂ëed
 = 
RUUSrc
->completed;

1412 
RUUDe°
->
vÆ_ø
 = 
RUUSrc
->val_ra;

1413 
RUUDe°
->
vÆ_rb
 = 
RUUSrc
->val_rb;

1414 
RUUDe°
->
vÆ_rc
 = 
RUUSrc
->val_rc;

1415 
RUUDe°
->
vÆ_ø_ªsu…
 = 
RUUSrc
->val_ra_result;

1418 
RUUDe°
->
⁄ames
[0] = 
RUUSrc
->onames[0];

1419 
RUUDe°
->
⁄ames
[1] = 
RUUSrc
->onames[1];

1428 
i
 = 0; i < 
MAX_ODEPS
; i++)

1430 
lök
 = 
RUUSrc
->
odï_li°
[
i
];

1431 
lök
)

1433 
RUUIndx
 = 
lök
->
rs
->
ödex
;

1434 
rs
 = &(
de°
->
RUU
[
RUUIndx
]);

1435 
	`RSLINK_NEW
 (
√wlök
, 
rs
);

1436 
√wlök
->
x
.
whí
 = 
lök
->x.when;

1438 
√wlök
->
√xt
 = 
RUUDe°
->
odï_li°
[
i
];

1439 
RUUDe°
->
odï_li°
[
i
] = 
√wlök
;

1440 
lök
 =Üök->
√xt
;

1443 
i
 = 0; i < 
MAX_IDEPS
; i++)

1445 
RUUDe°
->
idï_ªady
[
i
] = 
RUUSrc
->idep_ready[i];

1446 
RUUDe°
->
whí_idï_ªady
[
i
] = 
RUUSrc
->when_idep_ready[i];

1447 
RUUDe°
->
idï_«me
[
i
] = 
RUUSrc
->idep_name[i];

1448 i‡(
RUUSrc
->
¥od
[
i
])

1449 
RUUDe°
->
¥od
[
i
] = &(
de°
->
RUU
[
RUUSrc
->¥od[i]->
ödex
]);

1451 
RUUDe°
->
¥od
[
i
] = 
NULL
;

1454 
RUUDe°
->
di•_time
 = 
RUUSrc
->disp_time;

1455 
RUUDe°
->
föish_time
 = 
RUUSrc
->finish_time;

1456 
RUUDe°
->
issue_time
 = 
RUUSrc
->issue_time;

1457 
RUUDe°
->
out1
 = 
RUUSrc
->out1;

1460 
RUUDe°
->
ﬁd¥eg
 = 
RUUSrc
->oldpreg;

1462 
RUUDe°
->
›ªg
 = 
RUUSrc
->opreg;

1465 
RUUDe°
->
˛u°î
 = 
RUUSrc
->cluster;

1466 
i
 = 0; i < 
MAX_IDEPS
; i++)

1468 
RUUDe°
->
whí_ªady
[
i
] = 
RUUSrc
->when_ready[i];

1470 
RUUDe°
->
whí_öq
 = 
RUUSrc
->when_inq;

1471 
RUUDe°
->
pb™k
 = 
RUUSrc
->pbank;

1472 
RUUDe°
->
ab™k
 = 
RUUSrc
->abank;

1473 
RUUDe°
->
ö_qwaô
 = 
RUUSrc
->in_qwait;

1474 
RUUDe°
->
‰ìd
 = 
RUUSrc
->freed;

1475 
RUUDe°
->
ùªg
[0] = 
RUUSrc
->ipreg[0];

1476 
RUUDe°
->
ùªg
[1] = 
RUUSrc
->ipreg[1];

1477 
RUUDe°
->
ùªg
[2] = 
RUUSrc
->ipreg[2];

1478 
i
 = 0; i < 
CLUSTERS
; i++)

1480 
RUUDe°
->
°_ªach
[
i
] = 
RUUSrc
->st_reach[i];

1482 
RUUDe°
->
ö°num
 = 
RUUSrc
->instnum;

1483 
RUUDe°
->
di°issue
 = 
RUUSrc
->distissue;

1487 
	}
}

1489 #ifde‡
LOCK_HARD


1490 
mesh_size
;

1491 
	#MEM_LOC_SHIFT
 1

	)

1492 
	#WAIT_TIME
 800000000

	)

1493 
	$lock_evít_íqueue
(
LOCK_EVENT
 *
evít
)

1495 
LOCK_EVENT
 *
ev
, *
¥ev
;

1497 
¥ev
 = 
NULL
, 
ev
 = 
lock_evít_queue
;Év && (”v->
whí
Ë<(
evít
->whí));Öªv =Év,Év =Év->
√xt
);

1498 i‡(
¥ev
)

1500 
evít
->
√xt
 = 
ev
;

1501 
¥ev
->
√xt
 = 
evít
;

1505 
evít
->
√xt
 = 
lock_evít_queue
;

1506 
lock_evít_queue
 = 
evít
;

1508 
	}
}

1509 
	$lock_evítq_√xãvít
()

1511 
LOCK_EVENT
 *
evít
, *
ev
, *
√xt
, *
¥ev
;

1512 
i
, 
ö£π_Êag
 = 0;

1513 
evít
 = 
lock_evít_queue
;

1514 
ev
 = 
NULL
;

1515 
evít
!=
NULL
)

1517 
√xt
 = 
evít
->next;

1519 i‡(
evít
->
whí
 <
sim_cy˛e
)

1521 if(
evít
 =
lock_evít_queue
)

1523 
lock_evít_queue
 = 
evít
->
√xt
;

1524 
evít
->
√xt
 = 
NULL
;

1525 
	`SyncO≥øti⁄
(
evít
->
lock_id
,Évít->
thªadid
,Évít->
›t
);

1526 
¥ev
 = 
evít
;

1527 
	`‰ì
(
¥ev
);

1528 
evít
 = 
lock_evít_queue
;

1532 
ev
->
√xt
 = 
evít
->next;

1533 
evít
->
√xt
 = 
NULL
;

1534 
	`SyncO≥øti⁄
(
evít
->
lock_id
,Évít->
thªadid
,Évít->
›t
);

1535 
¥ev
 = 
evít
;

1536 
	`‰ì
(
¥ev
);

1537 
evít
 = 
ev
->
√xt
;

1542 
ev
 = 
evít
;

1543 
evít
 =Évít->
√xt
;

1547 
	}
}

1550 
	$SyncO≥øti⁄
 (
lock_id
, 
thªadid
, 
›
)

1552 
lock_node
 = 
lock_id
%
numc⁄ãxts
;

1553 
lock_addr
 = 
lock_id
/
numc⁄ãxts
;

1554 
b¨_node
 = 
lock_node
;

1555 
b¨_addr
 = 
lock_addr
;

1556 
›
)

1558 
BAR_ACQUIRE
:

1559 
cﬁÀ˘_b¨rõr_°©s
[
thªadid
] = 1;

1560 if(
b¨_node
 =
thªadid
)

1562 
BAR_ENTRY
 *
b¨_ãmp
 = 
BAR_REG
[
b¨_node
][
b¨_addr
];

1563 
b¨_ãmp
->
b¨rõr_num
 ++;

1564 if(
b¨_ãmp
->
b¨rõr_num
 =
MAXTHREADS
)

1566 
b¨_ãmp
->
b¨rõr_num
 = 0;

1567 
i
 = 0;

1568 
i
=0;i<
numc⁄ãxts
;i++)

1570 
LOCK_EVENT
 *
lock_evít
;

1571 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1572 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1573 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

1574 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1575 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1576 
lock_evít
->
des1
 = 
i
/
mesh_size
+
MEM_LOC_SHIFT
;

1577 
lock_evít
->
des2
 = 
i
%
mesh_size
;

1578 
lock_evít
->
›t
 = 
BAR_RELEASE
;

1579 
lock_evít
->
thªadid
 = 
i
;

1580 
lock_evít
->
lock_id
 =Üock_id;

1581 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1582 
	`scheduÀ_√tw‹k
(
lock_evít
);

1583 
	`lock_evít_íqueue
(
lock_evít
);

1586 if(
cﬁÀ˘_°©s
)

1587 
TŸÆB¨rõrs
 ++;

1591 
b¨rõr_waôög
[
thªadid
] = 1;

1592 
thec⁄ãxts
[
thªadid
]->
ru¬ög
 = 0;

1593 
thec⁄ãxts
[
thªadid
]->
‰ìze
 = 1;

1594 
¶ìpCou¡
[
thªadid
]++;

1595 
thec⁄ãxts
[
thªadid
]->
¶ïtAt
 = 
sim_cy˛e
;

1596 
‰ìzeCou¡î
++;

1601 
LOCK_EVENT
 *
lock_evít
;

1602 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1603 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1604 
lock_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1605 
lock_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1606 
lock_evít
->
des1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1607 
lock_evít
->
des2
 = 
lock_node
%
mesh_size
;

1608 
lock_evít
->
›t
 = 
BAR_REMOTE_ACC
;

1609 
lock_evít
->
thªadid
 =Åhreadid;

1610 
lock_evít
->
lock_id
 =Üock_id;

1611 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1612 
	`scheduÀ_√tw‹k
(
lock_evít
);

1613 
	`lock_evít_íqueue
(
lock_evít
);

1614 
b¨rõr_waôög
[
thªadid
] = 1;

1617 
BAR_REMOTE_ACC
:

1619 
BAR_ENTRY
 *
b¨_ãmp
 = 
BAR_REG
[
b¨_node
][
b¨_addr
];

1620 
b¨_ãmp
->
¨rivög_ve˘‹
[
thªadid
] = 1;

1621 
b¨_ãmp
->
b¨rõr_num
 ++;

1622 if(
b¨_ãmp
->
b¨rõr_num
 =
numc⁄ãxts
)

1624 
b¨_ãmp
->
b¨rõr_num
 = 0;

1625 
i
 = 0;

1626 
i
=0;i<
numc⁄ãxts
;i++)

1628 
b¨_ãmp
->
¨rivög_ve˘‹
[
thªadid
] = 0;

1629 
LOCK_EVENT
 *
lock_evít
;

1630 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1631 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1632 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

1633 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1634 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1635 
lock_evít
->
des1
 = 
i
/
mesh_size
+
MEM_LOC_SHIFT
;

1636 
lock_evít
->
des2
 = 
i
%
mesh_size
;

1637 
lock_evít
->
›t
 = 
BAR_RELEASE
;

1638 
lock_evít
->
thªadid
 = 
i
;

1639 
lock_evít
->
lock_id
 =Üock_id;

1640 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1641 
	`scheduÀ_√tw‹k
(
lock_evít
);

1642 
	`lock_evít_íqueue
(
lock_evít
);

1645 if(
cﬁÀ˘_°©s
)

1646 
TŸÆB¨rõrs
 ++;

1650 
LOCK_EVENT
 *
lock_evít
;

1651 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1652 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1653 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1654 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1655 
lock_evít
->
des1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1656 
lock_evít
->
des2
 = 
thªadid
%
mesh_size
;

1657 
lock_evít
->
›t
 = 
BAR_WAIT_ACK
;

1658 
lock_evít
->
thªadid
 =Åhreadid;

1659 
lock_evít
->
lock_id
 =Üock_id;

1660 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1661 
	`scheduÀ_√tw‹k
(
lock_evít
);

1662 
	`lock_evít_íqueue
(
lock_evít
);

1666 
BAR_WAIT_ACK
:

1667 
cﬁÀ˘_b¨rõr_°©s
[
thªadid
] = 1;

1668 
b¨rõr_waôög
[
thªadid
] = 1;

1669 
thec⁄ãxts
[
thªadid
]->
ru¬ög
 = 0;

1670 
thec⁄ãxts
[
thªadid
]->
‰ìze
 = 1;

1671 
¶ìpCou¡
[
thªadid
]++;

1672 
thec⁄ãxts
[
thªadid
]->
¶ïtAt
 = 
sim_cy˛e
;

1673 
‰ìzeCou¡î
++;

1675 
BAR_RELEASE
:

1676 
thec⁄ãxts
[
thªadid
]->
ru¬ög
 = 1;

1677 
thec⁄ãxts
[
thªadid
]->
‰ìze
 = 0;

1678 
b¨rõr_waôög
[
thªadid
] = 0;

1679 
cﬁÀ˘_b¨rõr_°©s
[
thªadid
] = 0;

1681 
ACQUIRE
:

1682 if(
lock_node
 =
thªadid
)

1684 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1685 if(
Lock_ãmp
->
lock_ow√r
 != 0)

1687 
lock_waôög
[
thªadid
] = 1;

1688 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_èû
] = 
thªadid
;

1689 
Lock_ãmp
->
waôög_num
 ++;

1690 
Lock_ãmp
->
waôög_èû
 = (Lock_ãmp->waôög_èû+1+
MAXLOCK
)%MAXLOCK;

1691 if(
Lock_ãmp
->
waôög_èû
 =Lock_ãmp->
waôög_hód
)

1692 
	`∑nic
("IdealÜock: Lockácquire queue full\n");

1696 
Lock_ãmp
->
lock_ow√r
 = 
thªadid
 + 1;

1701 
LOCK_EVENT
 *
lock_evít
;

1702 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1703 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1704 
lock_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1705 
lock_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1706 
lock_evít
->
des1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1707 
lock_evít
->
des2
 = 
lock_node
%
mesh_size
;

1708 
lock_evít
->
›t
 = 
ACQ_REMOTE_ACC
;

1709 
lock_evít
->
thªadid
 =Åhreadid;

1710 
lock_evít
->
lock_id
 =Üock_id;

1711 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1712 
	`scheduÀ_√tw‹k
(
lock_evít
);

1713 
	`lock_evít_íqueue
(
lock_evít
);

1714 
lock_waôög
[
thªadid
] = 1;

1717 
RELEASE
:

1718 if(
lock_node
 =
thªadid
)

1720 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1721 if(
Lock_ãmp
->
lock_ow√r
 !
thªadid
 + 1)

1722 
	`∑nic
("IdealÜock:ÇotÅheÑightÅhreadÑeleaseÅheÜock!\n");

1725 
Lock_ãmp
->
lock_ow√r
 = 0;

1726 if(
Lock_ãmp
->
waôög_num
)

1728 
˙t
 = 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_hód
];

1729 
Lock_ãmp
->
lock_ow√r
 = 
˙t
+1;

1730 
Lock_ãmp
->
waôög_num
 --;

1731 
Lock_ãmp
->
waôög_hód
 = (Lock_ãmp->waôög_hód+1+
MAXLOCK
)%MAXLOCK;

1732 if(
˙t
 =
thªadid
)

1733 
	`∑nic
("thread canÇotácquireÅwoÜocksátÅhe sameÅime");

1736 
LOCK_EVENT
 *
lock_evít
;

1737 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1738 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1739 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1740 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1741 
lock_evít
->
des1
 = 
˙t
/
mesh_size
+
MEM_LOC_SHIFT
;

1742 
lock_evít
->
des2
 = 
˙t
%
mesh_size
;

1743 
lock_evít
->
›t
 = 
ACQ_ACK
;

1744 
lock_evít
->
thªadid
 = 
˙t
;

1745 
lock_evít
->
lock_id
 =Üock_id;

1746 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1747 
	`scheduÀ_√tw‹k
(
lock_evít
);

1748 
	`lock_evít_íqueue
(
lock_evít
);

1755 
LOCK_EVENT
 *
lock_evít
;

1756 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1757 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1758 
lock_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1759 
lock_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1760 
lock_evít
->
des1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1761 
lock_evít
->
des2
 = 
lock_node
%
mesh_size
;

1762 
lock_evít
->
›t
 = 
REL_REMOTE_ACC
;

1763 
lock_evít
->
thªadid
 =Åhreadid;

1764 
lock_evít
->
lock_id
 =Üock_id;

1765 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1766 
	`scheduÀ_√tw‹k
(
lock_evít
);

1767 
	`lock_evít_íqueue
(
lock_evít
);

1771 
ACQ_REMOTE_ACC
:

1773 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1774 
LOCK_EVENT
 *
lock_evít
;

1775 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1776 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1778 if(
Lock_ãmp
->
lock_ow√r
 != 0)

1780 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_èû
] = 
thªadid
;

1781 
Lock_ãmp
->
waôög_num
 ++;

1782 
Lock_ãmp
->
waôög_èû
 = (Lock_ãmp->waôög_èû+1+
MAXLOCK
)%MAXLOCK;

1783 if(
Lock_ãmp
->
waôög_èû
 =Lock_ãmp->
waôög_hód
)

1784 
	`∑nic
("IdealÜock: Lockácquire queue full\n");

1785 
lock_evít
->
›t
 = 
WAIT_ACK
;

1789 
Lock_ãmp
->
lock_ow√r
 = 
thªadid
 + 1;

1790 
lock_evít
->
›t
 = 
ACQ_ACK
;

1793 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1794 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1795 
lock_evít
->
des1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1796 
lock_evít
->
des2
 = 
thªadid
%
mesh_size
;

1797 
lock_evít
->
thªadid
 =Åhreadid;

1798 
lock_evít
->
lock_id
 =Üock_id;

1799 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1800 
	`scheduÀ_√tw‹k
(
lock_evít
);

1801 
	`lock_evít_íqueue
(
lock_evít
);

1804 
REL_REMOTE_ACC
:

1806 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1807 if(
Lock_ãmp
->
lock_ow√r
 !
thªadid
 + 1)

1808 
	`∑nic
("IdealÜock:ÇotÅheÑightÅhreadÑeleaseÅheÜock!\n");

1811 
Lock_ãmp
->
lock_ow√r
 = 0;

1812 if(
Lock_ãmp
->
waôög_num
)

1814 
˙t
 = 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_hód
];

1815 
Lock_ãmp
->
lock_ow√r
 = 
˙t
+1;

1816 
Lock_ãmp
->
waôög_num
 --;

1817 
Lock_ãmp
->
waôög_hód
 = (Lock_ãmp->waôög_hód+1+
MAXLOCK
)%MAXLOCK;

1819 
LOCK_EVENT
 *
lock_evít
;

1820 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1821 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1822 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1823 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1824 
lock_evít
->
des1
 = 
˙t
/
mesh_size
+
MEM_LOC_SHIFT
;

1825 
lock_evít
->
des2
 = 
˙t
%
mesh_size
;

1826 
lock_evít
->
›t
 = 
ACQ_ACK
;

1827 
lock_evít
->
thªadid
 = 
˙t
;

1828 
lock_evít
->
lock_id
 =Üock_id;

1829 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1830 
	`scheduÀ_√tw‹k
(
lock_evít
);

1831 
	`lock_evít_íqueue
(
lock_evít
);

1836 
ACQ_ACK
:

1837 
lock_waôög
[
thªadid
] = 0;

1839 
WAIT_ACK
:

1840 
lock_waôög
[
thªadid
] = 1;

1843 
	`∑nic
("no one comes here!");

1846 
	}
}

1861  
	mR_V0
,

1862  
	mR_T0
,

1863  
	mR_T1
,

1864  
	mR_T2
,

1865  
	mR_T3
,

1866  
	mR_T4
,

1867  
	mR_T5
,

1868  
	mR_T6
,

1869  
	mR_T7
,

1870  
	mR_S0
,

1871  
	mR_S1
,

1872  
	mR_S2
,

1873  
	mR_S3
,

1874  
	mR_S4
,

1875  
	mR_S5
,

1876  
	mR_FP
,

1877  
	mR_A0
,

1878  
	mR_A1
,

1879  
	mR_A2
,

1880  
	mR_A3
,

1881  
	mR_A4
,

1882  
	mR_A5
,

1883  
	mR_T8
,

1884  
	mR_T9
,

1885  
	mR_T10
,

1886  
	mR_T11
,

1887  
	mR_RA
,

1888  
	mR_PV
,

1889  
	mR_AT
,

1890  
	mR_GP
,

1891  
	mR_SP
,

1892  
	mR_IZERO
,

1893  
	mR_F0
,

1894  
	mR_F1
,

1895  
	mR_F2
,

1896  
	mR_F3
,

1897  
	mR_F4
,

1898  
	mR_F5
,

1899  
	mR_F6
,

1900  
	mR_F7
,

1901  
	mR_F8
,

1902  
	mR_F9
,

1903  
	mR_F10
,

1904  
	mR_F11
,

1905  
	mR_F12
,

1906  
	mR_F13
,

1907  
	mR_F14
,

1908  
	mR_F15
,

1909  
	mR_F16
,

1910  
	mR_F17
,

1911  
	mR_F18
,

1912  
	mR_F19
,

1913  
	mR_F20
,

1914  
	mR_F21
,

1915  
	mR_F22
,

1916  
	mR_F23
,

1917  
	mR_F24
,

1918  
	mR_F25
,

1919  
	mR_F26
,

1920  
	mR_F27
,

1921  
	mR_F28
,

1922  
	mR_F29
,

1923  
	mR_F30
,

1924  
	mR_FZERO
,

1925  
	mR_FPCR
,

1926  
	mR_UNIQ
,

1927  
	mNUM_REGS


1928 } 
	tRegNames
;

1931 
	mÁl£
,

1932 
	måue


1933 } 
	tboﬁ
;

1938  
	mSYSCALL_OSF_SYSCALL
,

1939  
	mSYSCALL_EXIT
,

1940  
	mSYSCALL_FORK
,

1941  
	mSYSCALL_READ
,

1942  
	mSYSCALL_WRITE
,

1943  
	mSYSCALL_OSF_OLD_OPEN
,

1944  
	mSYSCALL_CLOSE
,

1945  
	mSYSCALL_OSF_WAIT4
,

1946  
	mSYSCALL_OSF_OLD_CREAT
,

1947  
	mSYSCALL_LINK
,

1948  
	mSYSCALL_UNLINK
,

1949  
	mSYSCALL_OSF_EXECVE
,

1950  
	mSYSCALL_CHDIR
,

1951  
	mSYSCALL_FCHDIR
,

1952  
	mSYSCALL_MKNOD
,

1953  
	mSYSCALL_CHMOD
,

1954  
	mSYSCALL_CHOWN
,

1955  
	mSYSCALL_BRK
,

1956  
	mSYSCALL_OSF_GETFSSTAT
,

1957  
	mSYSCALL_LSEEK
,

1958  
	mSYSCALL_GETXPID
,

1959  
	mSYSCALL_OSF_MOUNT
,

1960  
	mSYSCALL_UMOUNT
,

1961  
	mSYSCALL_SETUID
,

1962  
	mSYSCALL_GETXUID
,

1963  
	mSYSCALL_EXEC_WITH_LOADER
,

1964  
	mSYSCALL_OSF_PTRACE
,

1965  
	mSYSCALL_OSF_NRECVMSG
,

1966  
	mSYSCALL_OSF_NSENDMSG
,

1967  
	mSYSCALL_OSF_NRECVFROM
,

1968  
	mSYSCALL_OSF_NACCEPT
,

1969  
	mSYSCALL_OSF_NGETPEERNAME
,

1970  
	mSYSCALL_OSF_NGETSOCKNAME
,

1971  
	mSYSCALL_ACCESS
,

1972  
	mSYSCALL_OSF_CHFLAGS
,

1973  
	mSYSCALL_OSF_FCHFLAGS
,

1974  
	mSYSCALL_SYNC
,

1975  
	mSYSCALL_KILL
,

1976  
	mSYSCALL_OSF_OLD_STAT
,

1977  
	mSYSCALL_SETPGID
,

1978  
	mSYSCALL_OSF_OLD_LSTAT
,

1979  
	mSYSCALL_DUP
,

1980  
	mSYSCALL_PIPE
,

1981  
	mSYSCALL_OSF_SET_PROGRAM_ATTRIBUTES
,

1982  
	mSYSCALL_OSF_PROFIL
,

1983  
	mSYSCALL_OPEN
,

1984  
	mSYSCALL_OSF_OLD_SIGACTION
,

1985  
	mSYSCALL_GETXGID
,

1986  
	mSYSCALL_OSF_SIGPROCMASK
,

1987  
	mSYSCALL_OSF_GETLOGIN
,

1988  
	mSYSCALL_OSF_SETLOGIN
,

1989  
	mSYSCALL_ACCT
,

1990  
	mSYSCALL_SIGPENDING
,

1991  
	mSYSCALL_OSF_CLASSCNTL
,

1992  
	mSYSCALL_IOCTL
,

1993  
	mSYSCALL_OSF_REBOOT
,

1994  
	mSYSCALL_OSF_REVOKE
,

1995  
	mSYSCALL_SYMLINK
,

1996  
	mSYSCALL_READLINK
,

1997  
	mSYSCALL_EXECVE
,

1998  
	mSYSCALL_UMASK
,

1999  
	mSYSCALL_CHROOT
,

2000  
	mSYSCALL_OSF_OLD_FSTAT
,

2001  
	mSYSCALL_GETPGRP
,

2002  
	mSYSCALL_GETPAGESIZE
,

2003  
	mSYSCALL_OSF_MREMAP
,

2004  
	mSYSCALL_VFORK
,

2005  
	mSYSCALL_STAT
,

2006  
	mSYSCALL_LSTAT
,

2007  
	mSYSCALL_OSF_SBRK
,

2008  
	mSYSCALL_OSF_SSTK
,

2009  
	mSYSCALL_MMAP
,

2010  
	mSYSCALL_OSF_OLD_VADVISE
,

2011  
	mSYSCALL_MUNMAP
,

2012  
	mSYSCALL_MPROTECT
,

2013  
	mSYSCALL_MADVISE
,

2014  
	mSYSCALL_VHANGUP
,

2015  
	mSYSCALL_OSF_KMODCALL
,

2016  
	mSYSCALL_OSF_MINCORE
,

2017  
	mSYSCALL_GETGROUPS
,

2018  
	mSYSCALL_SETGROUPS
,

2019  
	mSYSCALL_OSF_OLD_GETPGRP
,

2020  
	mSYSCALL_SETPGRP
,

2021  
	mSYSCALL_OSF_SETITIMER
,

2022  
	mSYSCALL_OSF_OLD_WAIT
,

2023  
	mSYSCALL_OSF_TABLE
,

2024  
	mSYSCALL_OSF_GETITIMER
,

2025  
	mSYSCALL_GETHOSTNAME
,

2026  
	mSYSCALL_SETHOSTNAME
,

2027  
	mSYSCALL_GETDTABLESIZE
,

2028  
	mSYSCALL_DUP2
,

2029  
	mSYSCALL_FSTAT
,

2030  
	mSYSCALL_FCNTL
,

2031  
	mSYSCALL_OSF_SELECT
,

2032  
	mSYSCALL_POLL
,

2033  
	mSYSCALL_FSYNC
,

2034  
	mSYSCALL_SETPRIORITY
,

2035  
	mSYSCALL_SOCKET
,

2036  
	mSYSCALL_CONNECT
,

2037  
	mSYSCALL_ACCEPT
,

2038  
	mSYSCALL_GETPRIORITY
,

2039  
	mSYSCALL_SEND
,

2040  
	mSYSCALL_RECV
,

2041  
	mSYSCALL_SIGRETURN
,

2042  
	mSYSCALL_BIND
,

2043  
	mSYSCALL_SETSOCKOPT
,

2044  
	mSYSCALL_LISTEN
,

2045  
	mSYSCALL_OSF_PLOCK
,

2046  
	mSYSCALL_OSF_OLD_SIGVEC
,

2047  
	mSYSCALL_OSF_OLD_SIGBLOCK
,

2048  
	mSYSCALL_OSF_OLD_SIGSETMASK
,

2049  
	mSYSCALL_SIGSUSPEND
,

2050  
	mSYSCALL_OSF_SIGSTACK
,

2051  
	mSYSCALL_RECVMSG
,

2052  
	mSYSCALL_SENDMSG
,

2053  
	mSYSCALL_OSF_OLD_VTRACE
,

2054  
	mSYSCALL_OSF_GETTIMEOFDAY
,

2055  
	mSYSCALL_OSF_GETRUSAGE
,

2056  
	mSYSCALL_GETSOCKOPT
,

2057  
	mSYSCALL_NUMA_SYSCALLS
,

2058  
	mSYSCALL_READV
,

2059  
	mSYSCALL_WRITEV
,

2060  
	mSYSCALL_OSF_SETTIMEOFDAY
,

2061  
	mSYSCALL_FCHOWN
,

2062  
	mSYSCALL_FCHMOD
,

2063  
	mSYSCALL_RECVFROM
,

2064  
	mSYSCALL_SETREUID
,

2065  
	mSYSCALL_SETREGID
,

2066  
	mSYSCALL_RENAME
,

2067  
	mSYSCALL_TRUNCATE
,

2068  
	mSYSCALL_FTRUNCATE
,

2069  
	mSYSCALL_FLOCK
,

2070  
	mSYSCALL_SETGID
,

2071  
	mSYSCALL_SENDTO
,

2072  
	mSYSCALL_SHUTDOWN
,

2073  
	mSYSCALL_SOCKETPAIR
,

2074  
	mSYSCALL_MKDIR
,

2075  
	mSYSCALL_RMDIR
,

2076  
	mSYSCALL_OSF_UTIMES
,

2077  
	mSYSCALL_OSF_OLD_SIGRETURN
,

2078  
	mSYSCALL_OSF_ADJTIME
,

2079  
	mSYSCALL_GETPEERNAME
,

2080  
	mSYSCALL_OSF_GETHOSTID
,

2081  
	mSYSCALL_OSF_SETHOSTID
,

2082  
	mSYSCALL_GETRLIMIT
,

2083  
	mSYSCALL_SETRLIMIT
,

2084  
	mSYSCALL_OSF_OLD_KILLPG
,

2085  
	mSYSCALL_SETSID
,

2086  
	mSYSCALL_QUOTACTL
,

2087  
	mSYSCALL_OSF_OLDQUOTA
,

2088  
	mSYSCALL_GETSOCKNAME
,

2089  
	mSYSCALL_OSF_PREAD
,

2090  
	mSYSCALL_OSF_PWRITE
,

2091  
	mSYSCALL_OSF_PID_BLOCK
,

2092  
	mSYSCALL_OSF_PID_UNBLOCK
,

2093  
	mSYSCALL_OSF_SIGNAL_URTI
,

2094  
	mSYSCALL_SIGACTION
,

2095  
	mSYSCALL_OSF_SIGWAITPRIM
,

2096  
	mSYSCALL_OSF_NFSSVC
,

2097  
	mSYSCALL_OSF_GETDIRENTRIES
,

2098  
	mSYSCALL_OSF_STATFS
,

2099  
	mSYSCALL_OSF_FSTATFS
,

2100  
	mSYSCALL_UNKNOWN_162
,

2101  
	mSYSCALL_OSF_ASYNC_DAEMON
,

2102  
	mSYSCALL_OSF_GETFH
,

2103  
	mSYSCALL_OSF_GETDOMAINNAME
,

2104  
	mSYSCALL_SETDOMAINNAME
,

2105  
	mSYSCALL_UNKNOWN_167
,

2106  
	mSYSCALL_UNKNOWN_168
,

2107  
	mSYSCALL_OSF_EXPORTFS
,

2108  
	mSYSCALL_UNKNOWN_170
,

2109  
	mSYSCALL_UNKNOWN_171
,

2110  
	mSYSCALL_UNKNOWN_172
,

2111  
	mSYSCALL_UNKNOWN_173
,

2112  
	mSYSCALL_UNKNOWN_174
,

2113  
	mSYSCALL_UNKNOWN_175
,

2114  
	mSYSCALL_UNKNOWN_176
,

2115  
	mSYSCALL_UNKNOWN_177
,

2116  
	mSYSCALL_UNKNOWN_178
,

2117  
	mSYSCALL_UNKNOWN_179
,

2118  
	mSYSCALL_UNKNOWN_180
,

2119  
	mSYSCALL_OSF_ALT_PLOCK
,

2120  
	mSYSCALL_UNKNOWN_182
,

2121  
	mSYSCALL_UNKNOWN_183
,

2122  
	mSYSCALL_OSF_GETMNT
,

2123  
	mSYSCALL_UNKNOWN_185
,

2124  
	mSYSCALL_UNKNOWN_186
,

2125  
	mSYSCALL_OSF_ALT_SIGPENDING
,

2126  
	mSYSCALL_OSF_ALT_SETSID
,

2127  
	mSYSCALL_UNKNOWN_189
,

2128  
	mSYSCALL_UNKNOWN_190
,

2129  
	mSYSCALL_UNKNOWN_191
,

2130  
	mSYSCALL_UNKNOWN_192
,

2131  
	mSYSCALL_UNKNOWN_193
,

2132  
	mSYSCALL_UNKNOWN_194
,

2133  
	mSYSCALL_UNKNOWN_195
,

2134  
	mSYSCALL_UNKNOWN_196
,

2135  
	mSYSCALL_UNKNOWN_197
,

2136  
	mSYSCALL_UNKNOWN_198
,

2137  
	mSYSCALL_OSF_SWAPON
,

2138  
	mSYSCALL_MSGCTL
,

2139  
	mSYSCALL_MSGGET
,

2140  
	mSYSCALL_MSGRCV
,

2141  
	mSYSCALL_MSGSND
,

2142  
	mSYSCALL_SEMCTL
,

2143  
	mSYSCALL_SEMGET
,

2144  
	mSYSCALL_SEMOP
,

2145  
	mSYSCALL_OSF_UTSNAME
,

2146  
	mSYSCALL_LCHOWN
,

2147  
	mSYSCALL_OSF_SHMAT
,

2148  
	mSYSCALL_SHMCTL
,

2149  
	mSYSCALL_SHMDT
,

2150  
	mSYSCALL_SHMGET
,

2151  
	mSYSCALL_OSF_MVALID
,

2152  
	mSYSCALL_OSF_GETADDRESSCONF
,

2153  
	mSYSCALL_OSF_MSLEEP
,

2154  
	mSYSCALL_OSF_MWAKEUP
,

2155  
	mSYSCALL_MSYNC
,

2156  
	mSYSCALL_OSF_SIGNAL
,

2157  
	mSYSCALL_OSF_UTC_GETTIME
,

2158  
	mSYSCALL_OSF_UTC_ADJTIME
,

2159  
	mSYSCALL_UNKNOWN_221
,

2160  
	mSYSCALL_OSF_SECURITY
,

2161  
	mSYSCALL_OSF_KLOADCALL
,

2162  
	mSYSCALL_UNKNOWN_224
,

2163  
	mSYSCALL_UNKNOWN_225
,

2164  
	mSYSCALL_UNKNOWN_226
,

2165  
	mSYSCALL_UNKNOWN_227
,

2166  
	mSYSCALL_UNKNOWN_228
,

2167  
	mSYSCALL_UNKNOWN_229
,

2168  
	mSYSCALL_UNKNOWN_230
,

2169  
	mSYSCALL_UNKNOWN_231
,

2170  
	mSYSCALL_UNKNOWN_232
,

2171  
	mSYSCALL_GETPGID
,

2172  
	mSYSCALL_GETSID
,

2173  
	mSYSCALL_SIGALTSTACK
,

2174  
	mSYSCALL_OSF_WAITID
,

2175  
	mSYSCALL_OSF_PRIOCNTLSET
,

2176  
	mSYSCALL_OSF_SIGSENDSET
,

2177  
	mSYSCALL_OSF_SET_SPECULATIVE
,

2178  
	mSYSCALL_OSF_MSFS_SYSCALL
,

2179  
	mSYSCALL_OSF_SYSINFO
,

2180  
	mSYSCALL_OSF_UADMIN
,

2181  
	mSYSCALL_OSF_FUSER
,

2182  
	mSYSCALL_OSF_PROPLIST_SYSCALL
,

2183  
	mSYSCALL_OSF_NTP_ADJTIME
,

2184  
	mSYSCALL_OSF_NTP_GETTIME
,

2185  
	mSYSCALL_OSF_PATHCONF
,

2186  
	mSYSCALL_OSF_FPATHCONF
,

2187  
	mSYSCALL_UNKNOWN_249
,

2188  
	mSYSCALL_OSF_USWITCH
,

2189  
	mSYSCALL_OSF_USLEEP_THREAD
,

2190  
	mSYSCALL_OSF_AUDCNTL
,

2191  
	mSYSCALL_OSF_AUDGEN
,

2192  
	mSYSCALL_SYSFS
,

2193  
	mSYSCALL_OSF_SUBSYS_INFO
,

2194  
	mSYSCALL_OSF_GETSYSINFO
,

2195  
	mSYSCALL_OSF_SETSYSINFO
,

2196  
	mSYSCALL_OSF_AFS_SYSCALL
,

2197  
	mSYSCALL_OSF_SWAPCTL
,

2198  
	mSYSCALL_OSF_MEMCNTL
,

2199  
	mSYSCALL_OSF_FDATASYNC
,

2200  
	mSYSCALL_UNKNOWN_262
,

2201  
	mSYSCALL_UNKNOWN_263
,

2202  
	mSYSCALL_UNKNOWN_264
,

2203  
	mSYSCALL_UNKNOWN_265
,

2204  
	mSYSCALL_UNKNOWN_266
,

2205  
	mSYSCALL_UNKNOWN_267
,

2206  
	mSYSCALL_UNKNOWN_268
,

2207  
	mSYSCALL_UNKNOWN_269
,

2208  
	mSYSCALL_UNKNOWN_270
,

2209  
	mSYSCALL_UNKNOWN_271
,

2210  
	mSYSCALL_UNKNOWN_272
,

2211  
	mSYSCALL_UNKNOWN_273
,

2212  
	mSYSCALL_UNKNOWN_274
,

2213  
	mSYSCALL_UNKNOWN_275
,

2214  
	mSYSCALL_UNKNOWN_276
,

2215  
	mSYSCALL_UNKNOWN_277
,

2216  
	mSYSCALL_UNKNOWN_278
,

2217  
	mSYSCALL_UNKNOWN_279
,

2218  
	mSYSCALL_UNKNOWN_280
,

2219  
	mSYSCALL_UNKNOWN_281
,

2220  
	mSYSCALL_UNKNOWN_282
,

2221  
	mSYSCALL_UNKNOWN_283
,

2222  
	mSYSCALL_UNKNOWN_284
,

2223  
	mSYSCALL_UNKNOWN_285
,

2224  
	mSYSCALL_UNKNOWN_286
,

2225  
	mSYSCALL_UNKNOWN_287
,

2226  
	mSYSCALL_UNKNOWN_288
,

2227  
	mSYSCALL_UNKNOWN_289
,

2228  
	mSYSCALL_UNKNOWN_290
,

2229  
	mSYSCALL_UNKNOWN_291
,

2230  
	mSYSCALL_UNKNOWN_292
,

2231  
	mSYSCALL_UNKNOWN_293
,

2232  
	mSYSCALL_UNKNOWN_294
,

2233  
	mSYSCALL_UNKNOWN_295
,

2234  
	mSYSCALL_UNKNOWN_296
,

2235  
	mSYSCALL_UNKNOWN_297
,

2236  
	mSYSCALL_UNKNOWN_298
,

2237  
	mSYSCALL_UNKNOWN_299
,

2240  
	mSYSCALL_BDFLUSH
,

2241  
	mSYSCALL_SETHAE
,

2242  
	mSYSCALL_MOUNT
,

2243  
	mSYSCALL_OLD_ADJTIMEX
,

2244  
	mSYSCALL_SWAPOFF
,

2245  
	mSYSCALL_GETDENTS
,

2246  
	mSYSCALL_CREATE_MODULE
,

2247  
	mSYSCALL_INIT_MODULE
,

2248  
	mSYSCALL_DELETE_MODULE
,

2249  
	mSYSCALL_GET_KERNEL_SYMS
,

2250  
	mSYSCALL_SYSLOG
,

2251  
	mSYSCALL_REBOOT
,

2252  
	mSYSCALL_CLONE
,

2253  
	mSYSCALL_USELIB
,

2254  
	mSYSCALL_MLOCK
,

2255  
	mSYSCALL_MUNLOCK
,

2256  
	mSYSCALL_MLOCKALL
,

2257  
	mSYSCALL_MUNLOCKALL
,

2258  
	mSYSCALL_SYSINFO
,

2259  
	mSYSCALL__SYSCTL
,

2260  
	mSYSCALL_WAS_SYS_IDLE
,

2261  
	mSYSCALL_OLDUMOUNT
,

2262  
	mSYSCALL_SWAPON
,

2263  
	mSYSCALL_TIMES
,

2264  
	mSYSCALL_PERSONALITY
,

2265  
	mSYSCALL_SETFSUID
,

2266  
	mSYSCALL_SETFSGID
,

2267  
	mSYSCALL_USTAT
,

2268  
	mSYSCALL_STATFS
,

2269  
	mSYSCALL_FSTATFS
,

2270  
	mSYSCALL_SCHED_SETPARAM
,

2271  
	mSYSCALL_SCHED_GETPARAM
,

2272  
	mSYSCALL_SCHED_SETSCHEDULER
,

2273  
	mSYSCALL_SCHED_GETSCHEDULER
,

2274  
	mSYSCALL_SCHED_YIELD
,

2275  
	mSYSCALL_SCHED_GET_PRIORITY_MAX
,

2276  
	mSYSCALL_SCHED_GET_PRIORITY_MIN
,

2277  
	mSYSCALL_SCHED_RR_GET_INTERVAL
,

2278  
	mSYSCALL_AFS_SYSCALL
,

2279  
	mSYSCALL_UNAME
,

2280  
	mSYSCALL_NANOSLEEP
,

2281  
	mSYSCALL_MREMAP
,

2282  
	mSYSCALL_NFSSERVCTL
,

2283  
	mSYSCALL_SETRESUID
,

2284  
	mSYSCALL_GETRESUID
,

2285  
	mSYSCALL_PCICONFIG_READ
,

2286  
	mSYSCALL_PCICONFIG_WRITE
,

2287  
	mSYSCALL_QUERY_MODULE
,

2288  
	mSYSCALL_PRCTL
,

2289  
	mSYSCALL_PREAD
,

2290  
	mSYSCALL_PWRITE
,

2291  
	mSYSCALL_RT_SIGRETURN
,

2292  
	mSYSCALL_RT_SIGACTION
,

2293  
	mSYSCALL_RT_SIGPROCMASK
,

2294  
	mSYSCALL_RT_SIGPENDING
,

2295  
	mSYSCALL_RT_SIGTIMEDWAIT
,

2296  
	mSYSCALL_RT_SIGQUEUEINFO
,

2297  
	mSYSCALL_RT_SIGSUSPEND
,

2298  
	mSYSCALL_SELECT
,

2299  
	mSYSCALL_GETTIMEOFDAY
,

2300  
	mSYSCALL_SETTIMEOFDAY
,

2301  
	mSYSCALL_GETITIMER
,

2302  
	mSYSCALL_SETITIMER
,

2303  
	mSYSCALL_UTIMES
,

2304  
	mSYSCALL_GETRUSAGE
,

2305  
	mSYSCALL_WAIT4
,

2306  
	mSYSCALL_ADJTIMEX
,

2307  
	mSYSCALL_GETCWD
,

2308  
	mSYSCALL_CAPGET
,

2309  
	mSYSCALL_CAPSET
,

2310  
	mSYSCALL_SENDFILE
,

2311  
	mSYSCALL_SETRESGID
,

2312  
	mSYSCALL_GETRESGID
,

2313  
	mSYSCALL_DIPC
,

2314  
	mSYSCALL_PIVOT_ROOT
,

2315  
	mSYSCALL_MINCORE
,

2316  
	mSYSCALL_PCICONFIG_IOBASE
,

2317  
	mSYSCALL_GETDENTS64
,

2318  
	mSYSCALL_GETTID
,

2319  
	mSYSCALL_READAHEAD
,

2320  
	mSYSCALL_SECURITY
,

2321  
	mSYSCALL_TKILL
,

2322  
	mSYSCALL_SETXATTR
,

2323  
	mSYSCALL_LSETXATTR
,

2324  
	mSYSCALL_FSETXATTR
,

2325  
	mSYSCALL_GETXATTR
,

2326  
	mSYSCALL_LGETXATTR
,

2327  
	mSYSCALL_FGETXATTR
,

2328  
	mSYSCALL_LISTXATTR
,

2329  
	mSYSCALL_LLISTXATTR
,

2330  
	mSYSCALL_FLISTXATTR
,

2331  
	mSYSCALL_REMOVEXATTR
,

2332  
	mSYSCALL_LREMOVEXATTR
,

2333  
	mSYSCALL_FREMOVEXATTR
,

2334  
	mSYSCALL_FUTEX
,

2335  
	mSYSCALL_SCHED_SETAFFINITY
,

2336  
	mSYSCALL_SCHED_GETAFFINITY
,

2337  
	mSYSCALL_TUXCALL
,

2338  
	mSYSCALL_IO_SETUP
,

2339  
	mSYSCALL_IO_DESTROY
,

2340  
	mSYSCALL_IO_GETEVENTS
,

2341  
	mSYSCALL_IO_SUBMIT
,

2342  
	mSYSCALL_IO_CANCEL
,

2343  
	mSYSCALL_UNKNOWN_403
,

2344  
	mSYSCALL_UNKNOWN_404
,

2345  
	mSYSCALL_EXIT_GROUP
,

2346  
	mSYSCALL_LOOKUP_DCOOKIE
,

2347  
	mSYSCALL_SYS_EPOLL_CREATE
,

2348  
	mSYSCALL_SYS_EPOLL_CTL
,

2349  
	mSYSCALL_SYS_EPOLL_WAIT
,

2350  
	mSYSCALL_REMAP_FILE_PAGES
,

2351  
	mSYSCALL_SET_TID_ADDRESS
,

2352  
	mSYSCALL_RESTART_SYSCALL
,

2353  
	mSYSCALL_FADVISE64
,

2354  
	mSYSCALL_TIMER_CREATE
,

2355  
	mSYSCALL_TIMER_SETTIME
,

2356  
	mSYSCALL_TIMER_GETTIME
,

2357  
	mSYSCALL_TIMER_GETOVERRUN
,

2358  
	mSYSCALL_TIMER_DELETE
,

2359  
	mSYSCALL_CLOCK_SETTIME
,

2360  
	mSYSCALL_CLOCK_GETTIME
,

2361  
	mSYSCALL_CLOCK_GETRES
,

2362  
	mSYSCALL_CLOCK_NANOSLEEP
,

2363  
	mSYSCALL_SEMTIMEDOP
,

2364  
	mSYSCALL_TGKILL
,

2365  
	mSYSCALL_STAT64
,

2366  
	mSYSCALL_LSTAT64
,

2367  
	mSYSCALL_FSTAT64
,

2368  
	mSYSCALL_VSERVER
,

2369  
	mSYSCALL_MBIND
,

2370  
	mSYSCALL_GET_MEMPOLICY
,

2371  
	mSYSCALL_SET_MEMPOLICY
,

2372  
	mSYSCALL_MQ_OPEN
,

2373  
	mSYSCALL_MQ_UNLINK
,

2374  
	mSYSCALL_MQ_TIMEDSEND
,

2375  
	mSYSCALL_MQ_TIMEDRECEIVE
,

2376  
	mSYSCALL_MQ_NOTIFY
,

2377  
	mSYSCALL_MQ_GETSETATTR
,

2378  
	mSYSCALL_WAITID
,

2379  
	mSYSCALL_ADD_KEY
,

2380  
	mSYSCALL_REQUEST_KEY
,

2381  
	mSYSCALL_KEYCTL


2382 } 
	tAÕhaLöuxSysˇŒs
;

2384 
	$å™¶©e_°©_buf
(
Æpha_°©
 *
t_buf
, 
°©
 *
h_buf
)

2387 
t_buf
->
°_dev
 = 
h_buf
->st_dev;

2388 
t_buf
->
°_öo
 = 
h_buf
->st_ino;

2389 
t_buf
->
°_mode
 = 
h_buf
->st_mode;

2390 
t_buf
->
°_∆ök
 = 
h_buf
->st_nlink;

2391 
t_buf
->
°_uid
 = 
h_buf
->st_uid;

2392 
t_buf
->
°_gid
 = 
h_buf
->st_gid;

2393 
t_buf
->
°_rdev
 = 
h_buf
->st_rdev;

2394 
t_buf
->
°_size
 = 
h_buf
->st_size;

2395 
t_buf
->
°_©imeX
 = 
h_buf
->
°_©ime
;

2396 
t_buf
->
°_mtimeX
 = 
h_buf
->
°_mtime
;

2397 
t_buf
->
°_˘imeX
 = 
h_buf
->
°_˘ime
;

2398 
t_buf
->
°_blksize
 = 
h_buf
->st_blksize;

2399 
t_buf
->
°_blocks
 = 
h_buf
->st_blocks;

2400 
t_buf
->
°_Êags
 = 0;

2401 
t_buf
->
°_gí
 = 0;

2402 
	}
}

2415 
	$sys_sysˇŒ
 (
ªgs_t
 *
ªgs
,

2416 
mem_ac˚ss_‚
 
mem_‚
,

2417 
mem_t
 *
mem
,

2418 
md_ö°_t
 
ö°
,

2419 
åa˚abÀ
)

2421 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

2422 
Lock_id
 = 0;

2423 
a
;

2425 #ifde‡
SMT_SS


2426 #i‡
	`deföed
(
MTA
)

2427 *
p
;

2429 
˙t
;

2430 
thªadid
 = 0;

2431 
mem_±e_t
 *
tmpMemPåD
, *
tmpMemPåS
, *
tmpMemPå
;

2432 
c⁄ãxt
 *
cuºít
;

2433 
c⁄ãxt
 *
√wC⁄ãxt
;

2435 
thªadid
 = 
ªgs
->threadid;

2436 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

2440 i‡(
syscode
 =
SYSCALL_OSF_SYSCALL
)

2441 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2444 #ifde‡
SMT_SS


2445 i‡(
åa˚abÀ
 && 
cuºít
->
sim_eio_fd
 !
NULL
)

2447 
	`¥ötf
 ("PROBLEM\n");

2448 
	`fÊush
 (
°dout
);

2449 
	`eio_ªad_åa˚
 (
cuºít
->
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

2451 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

2453 
	`eio_ªad_åa˚
 (
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

2472 i‡(
syscode
 =
SYSCALL_SIGRETURN
)

2474 
i
;

2475 
osf_sigc⁄ãxt
 
sc
;

2476 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2478 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
, 
sc_addr
,

2479 &
sc
, (
osf_sigc⁄ãxt
), 
cuºít
->
id
);

2480 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

2481 
i
=0; i < 32; ++i)

2482 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

2483 
i
=0; i < 32; ++i)

2484 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

2485 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

2486 
¥ogøm_com∂ëe
 = 1;

2490 
	`¥ötf
 ("Am I coming here\n");

2496 
uöt64_t
 
sysˇŒ_code
 = 
ªgs
->
ªgs_R
[
R_V0
];

2498 
öt64_t
 
ªtu∫_vÆue
 = 0;

2500 
boﬁ
 
suc˚ss
 = 
Ál£
;

2501 
syscode
)

2503 
SYSCALL_EXIT
:

2507 if(
cuºít
->
ma°îid
 != 0)

2509 
	`¥ötf
 ("In OSF_SYS_exit\n");

2510 
	`¥ötf
 ("[INFO]: sim_num_ö¢=%Œd, b¨rõrs=%d,Üocks=%d\n", 
sim_num_ö¢
, 
TŸÆB¨rõrs
, 
TŸÆLocks
);

2511 
	`Ârötf
 (
°dîr
, "[INFO]: sim_num_ö¢=%Œd, b¨rõrs=%d,Üocks=%d\n", 
sim_num_ö¢
, 
TŸÆB¨rõrs
, 
TŸÆLocks
);

2512 
	`fÊush
 (
°dîr
);

2513 
	`fÊush
 (
°dout
);

2514 #ifde‡
DO_COMPLETE_FASTFWD


2515 #ifde‡ 
CACHE_PROFILE


2516 
	`CacheProfWrôe
 ();

2518 #ifde‡ 
BRANCH_PROFILE


2519 
	`BønchProfWrôe
 ();

2521 #ifde‡ 
BRPRED_PROFILE


2522 
	`BønchProfWrôe
 ();

2524 #ifde‡ 
STORE_PROFILE


2525 
	`St‹eProfWrôe
 ();

2527 #ifde‡ 
INDIRECTJUMP_PROFILE


2528 
	`¥ötJumpSèts
 ();

2530 #ifde‡ 
FREQ_PROFILE


2531 
	`FªquícyWrôe
 ();

2534 
timeToRëu∫
 = 1;

2536 
	`l⁄gjmp
 (
sim_exô_buf
,

2537  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

2538 
	`¥ötf
 ("Am I coming here\n");

2542 
SYSCALL_READ
:

2544 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2545 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2546 
öt64_t
 
cou¡
 = 
ªgs
->
ªgs_R
[
R_A2
];

2547 
öt64_t
 
Àn
;

2548 *
buf
;

2551 
buf
 = (*)
	`ˇŒoc
(
cou¡
, ());

2552 i‡(!
buf
Ë
	`Áèl
("ArchLib: syscallÑeadÑan out of memory");

2555 
Àn
 = 
	`ªad
(
fd
, 
buf
, 
cou¡
);

2558 i‡(
Àn
 > 0)

2560 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

2561  
vaddr
, 
buf
, 
Àn
, 
cuºít
->
id
);

2563 
ªtu∫_vÆue
 = 
Àn
;

2564 
suc˚ss
 = 
åue
;

2566 i‡(
Àn
 == 0)

2568 
ªtu∫_vÆue
 = 0;

2569 
suc˚ss
 = 
åue
;

2573 
ªtu∫_vÆue
 = 
î∫o
;

2574 
	`¥ötf
("îr‹Ñódög %d", 
î∫o
);

2578 
	`‰ì
(
buf
);

2582 
SYSCALL_WRITE
:

2584 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2585 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

2586 
öt64_t
 
cou¡
 = 
ªgs
->
ªgs_R
[
R_A2
];

2587 
öt64_t
 
Àn
;

2588 *
buf
;

2591 
buf
 = (*)
	`ˇŒoc
(
cou¡
, ());

2592 i‡(!
buf
Ë
	`Áèl
("ArchLib: syscallÑeadÑan out of memory");

2595 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

2596  
vaddr
, 
buf
, 
cou¡
, 
cuºít
->
id
);

2600 
Àn
 = 
	`wrôe
(
fd
, 
buf
, 
cou¡
);

2601 
	`fsync
(
fd
);

2604 i‡(
Àn
 >= 0)

2606 
ªtu∫_vÆue
 = 
Àn
;

2607 
suc˚ss
 = 
åue
;

2610 
ªtu∫_vÆue
 = 
î∫o
;

2613 
	`‰ì
(
buf
);

2617 
SYSCALL_CLOSE
:

2619 
ªs
;

2622 i‡(
ªgs
->
ªgs_R
[
R_A0
] > 2)

2624 
ªs
 = 
	`˛o£
(
ªgs
->
ªgs_R
[
R_A0
]);

2625 i‡(
ªs
 !(
öt64_t
)-1)

2627 
ªtu∫_vÆue
 = 0;

2628 
suc˚ss
 = 
åue
;

2631 
ªtu∫_vÆue
 = 
î∫o
;

2635 
ªtu∫_vÆue
 = 0;

2636 
suc˚ss
 = 
åue
;

2641 
SYSCALL_UNLINK
:

2643 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

2644 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

2645 
öt64_t
 
ªsu…
;

2648 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
, 
cuºít
->
id
);

2651 
ªsu…
 = 
	`u∆ök
(
∑th«me
);

2652 i‡(
ªsu…
 == -1)

2653 
ªtu∫_vÆue
 = 
î∫o
;

2656 
ªtu∫_vÆue
 = 0;

2657 
suc˚ss
 = 
åue
;

2662 
SYSCALL_BRK
:

2665 
sqw‹d_t
 
dñè
;

2666 
md_addr_t
 
addr
;

2668 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2670 i‡(!
dñè
)

2671 
addr
 = 
_sy°em
.
brk_poöt
;

2673 
addr
 = 
dñè
;

2675 i‡(
vîbo£
)

2676 
	`myÂrötf
(
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

2678 
ld_brk_poöt
 = 
addr
;

2679 
_sy°em
.
brk_poöt
 = 
addr
;

2680 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

2681 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2683 i‡(
vîbo£
)

2684 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

2686 
ªtu∫_vÆue
 = 
addr
;

2687 
suc˚ss
 = 
åue
;

2691 
md_addr_t
 
addr
;

2695 
addr
 = 
	`ROUND_UP
–
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

2697 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2699 i‡(
vîbo£
)

2700 
	`myÂrötf
(
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

2702 
ld_brk_poöt
 = 
addr
;

2703 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

2704 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2706 i‡(
vîbo£
)

2707 
	`myÂrötf
(
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

2729 
SYSCALL_LSEEK
:

2731 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2732 
uöt64_t
 
off£t
 = 
ªgs
->
ªgs_R
[
R_A1
];

2733 
öt64_t
 
whí˚
 = 
ªgs
->
ªgs_R
[
R_A2
];

2734 
off_t
 
ªsu…
;

2736 
ªsu…
 = 
	`l£ek
(
fd
, 
off£t
, 
whí˚
);

2738 i‡(
ªsu…
 =(
off_t
)-1)

2739 
ªtu∫_vÆue
 = 
î∫o
;

2742 
ªtu∫_vÆue
 = 
ªsu…
;

2743 
suc˚ss
 = 
åue
;

2748 
SYSCALL_GETXPID
:

2752 
ªtu∫_vÆue
 = 
	`gëpid
();

2753 
suc˚ss
 = 
åue
;

2757 
SYSCALL_GETXUID
:

2760 
ªgs
->
ªgs_R
[
R_A4
] = (
uöt64_t
)
	`gëeuid
();

2761 
ªtu∫_vÆue
 = (
uöt64_t
)
	`gëuid
();

2762 
suc˚ss
 = 
åue
;

2766 
SYSCALL_KILL
:

2769 
	`w¨n
("sysˇŒ_kû»pid %i\n", 
ªgs
[
R_A0
]);

2773 
SYSCALL_OPEN
:

2775 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

2776 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

2777 
uöt64_t
 
sim_Êags
 = 
ªgs
->
ªgs_R
[
R_A1
];

2778 
uöt64_t
 
mode
 = 
ªgs
->
ªgs_R
[
R_A2
];

2779 
loˇl_Êags
;

2780 
fd
;

2783 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
, 
cuºít
->
id
);

2787 
loˇl_Êags
 = 0;

2788 i‡(
sim_Êags
 & 
ALPHA_O_RDONLY
Ë
loˇl_Êags
 |
O_RDONLY
;

2789 i‡(
sim_Êags
 & 
ALPHA_O_WRONLY
Ë
loˇl_Êags
 |
O_WRONLY
;

2790 i‡(
sim_Êags
 & 
ALPHA_O_RDWR
Ë
loˇl_Êags
 |
O_RDWR
;

2791 i‡(
sim_Êags
 & 
ALPHA_O_NONBLOCK
Ë
loˇl_Êags
 |
O_NONBLOCK
;

2792 i‡(
sim_Êags
 & 
ALPHA_O_APPEND
Ë
loˇl_Êags
 |
O_APPEND
;

2793 i‡(
sim_Êags
 & 
ALPHA_O_CREAT
Ë
loˇl_Êags
 |
O_CREAT
;

2794 i‡(
sim_Êags
 & 
ALPHA_O_TRUNC
Ë
loˇl_Êags
 |
O_TRUNC
;

2795 i‡(
sim_Êags
 & 
ALPHA_O_EXCL
Ë
loˇl_Êags
 |
O_EXCL
;

2796 i‡(
sim_Êags
 & 
ALPHA_O_NOCTTY
Ë
loˇl_Êags
 |
O_NOCTTY
;

2797 i‡(
sim_Êags
 & 
ALPHA_O_SYNC
Ë
loˇl_Êags
 |
O_SYNC
;

2798 i‡(
sim_Êags
 & 
ALPHA_O_DSYNC
Ë
loˇl_Êags
 |
O_DSYNC
;

2799 i‡(
sim_Êags
 & 
ALPHA_O_RSYNC
Ë
loˇl_Êags
 |
O_RSYNC
;

2802 
fd
 = 
	`›í
(
∑th«me
, 
loˇl_Êags
, 
mode
);

2804 i‡(
fd
 == -1)

2805 
ªtu∫_vÆue
 = 
î∫o
;

2808 
ªtu∫_vÆue
 = 
fd
;

2809 
suc˚ss
 = 
åue
;

2814 
SYSCALL_GETXGID
:

2817 
ªgs
->
ªgs_R
[
R_A4
] = (
uöt64_t
)
	`gëegid
();

2818 
ªtu∫_vÆue
 = (
uöt64_t
)
	`gëgid
();

2819 
suc˚ss
 = 
åue
;

2823 
SYSCALL_OSF_SIGPROCMASK
:

2826 
ªtu∫_vÆue
 = 0;

2827 
suc˚ss
 = 
åue
;

2831 
SYSCALL_IOCTL
:

2836 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2837 
öt64_t
 
ªque°
 = 
ªgs
->
ªgs_R
[
R_A1
];

2839 i‡(
fd
 < 0)

2840 
ªtu∫_vÆue
 = 
EBADF
;

2843 
ªque°
)

2853 
ªtu∫_vÆue
 = 
ENOTTY
;

2857 
	`Áèl
("unsupported ioctl call: %x on fd: %dÖc: 0x%llx",

2858 
ªque°
, 
fd
, 0);

2864 
SYSCALL_MMAP
:

2869 
uöt64_t
 
addr
 = 
ªgs
->
ªgs_R
[
R_A0
];

2870 
uöt64_t
 
Àngth
 = 
ªgs
->
ªgs_R
[
R_A1
];

2871 
öt64_t
 
Êags
 = 
ªgs
->
ªgs_R
[
R_A3
];

2872 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A4
];

2879 if((
Àngth
 % 
PAGE_SIZE
) != 0)

2880 
Àngth
 = 
PAGE_SIZE
 * (length/PAGE_SIZE + 1);

2883 i‡(
addr
 != 0)

2884 
	`¥ötf
("mmap ignorning suggested mapáddress");

2886 
addr
 = 
_sy°em
.
mm≠_íd
;

2887 
_sy°em
.
mm≠_íd
 +
Àngth
;

2889 i‡(!(
Êags
 & 0x10))

2890 
	`¥ötf
("mm≠pög fd %d.Åhi†i†bad i‡nŸ /dev/zîo", 
fd
);

2891 
ªtu∫_vÆue
 = 
addr
;

2892 
suc˚ss
 = 
åue
;

2901 
SYSCALL_MUNMAP
:

2905 
ªtu∫_vÆue
 = 0;

2906 
suc˚ss
 = 
åue
;

2910 
SYSCALL_MPROTECT
:

2913 
ªtu∫_vÆue
 = 0;

2914 
suc˚ss
 = 
åue
;

2918 
SYSCALL_FCNTL
:

2920 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2921 
öt64_t
 
cmd
 = 
ªgs
->
ªgs_R
[
R_A1
];

2923 i‡(
fd
 < 0)

2924 
ªtu∫_vÆue
 = 
EBADF
;

2927 
cmd
)

2930 
ªtu∫_vÆue
 = 
EMFILE
;

2933 
ªtu∫_vÆue
 = 0;

2934 
suc˚ss
 = 
åue
;

2939 
ªtu∫_vÆue
 = 
	`f˙é
(
fd
, 
cmd
);

2940 i‡(
ªtu∫_vÆue
 != -1)

2941 
suc˚ss
 = 
åue
;

2943 
ªtu∫_vÆue
 = 
î∫o
;

2951 
	`¥ötf
("ign‹ed f˙é comm™d %d o¿fd %d", 
cmd
, 
fd
);

2952 
ªtu∫_vÆue
 = 0;

2953 
suc˚ss
 = 
åue
;

2992 
SYSCALL_WRITEV
:

2994 
öt64_t
 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

2995 
uöt64_t
 
iov±r
 = 
ªgs
->
ªgs_R
[
R_A1
];

2996 
öt64_t
 
iov˙t
 = 
ªgs
->
ªgs_R
[
R_A2
];

2997 
iovec
 *
iov
;

2998 
Æpha_iovec
 
a_iov
;

2999 
i
, 
ªs
;

3001 i‡(
fd
 < 0)

3002 
ªtu∫_vÆue
 = 
EBADF
;

3005 
iov
 = 
	`mÆloc
–(
iovec
)*
iov˙t
);

3008 
i
 = 0; i < 
iov˙t
; i++)

3011 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3012  
iov±r
 + 
i
*(
a_iov
), &a_iov, ◊_iov), 
cuºít
->
id
);

3019 
iov
[
i
].
iov_Àn
 = 
a_iov
.iov_len;

3021 
iov
[
i
].
iov_ba£
 = 
	`mÆloc
–()*(iov[i].
iov_Àn
));

3024 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3025  
a_iov
.
iov_ba£
, 
iov
[
i
].iov_ba£,á_iov.
iov_Àn
, 
cuºít
->
id
);

3033 
ªs
 = 
	`wrôev
(
fd
, 
iov
, 
iov˙t
);

3035 i‡(
ªs
 < 0)

3036 
ªtu∫_vÆue
 = 
î∫o
;

3039 
ªtu∫_vÆue
 = 0;

3040 
suc˚ss
 = 
åue
;

3044 
i
 = 0; i < 
iov˙t
; i++)

3045 
	`‰ì
(
iov
[
i
].
iov_ba£
);

3048 
	`‰ì
(
iov
);

3053 
SYSCALL_FTRUNCATE
:

3055 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

3056 
off_t
 
Àngth
 = 
ªgs
->
ªgs_R
[
R_A1
];

3058 i‡(
fd
 < 0)

3059 
ªtu∫_vÆue
 = 
EBADF
;

3062 
ªtu∫_vÆue
 = 
	`·runˇã
(
fd
, 
Àngth
);

3063 i‡(
ªtu∫_vÆue
 == -1)

3064 
ªtu∫_vÆue
 = 
î∫o
;

3066 
suc˚ss
 = 
åue
;

3071 
SYSCALL_GETRLIMIT
:

3073 
uöt64_t
 
ªsour˚
 = 
ªgs
->
ªgs_R
[
R_A0
];

3074 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3075 
Æpha_æimô
 
¨lm
;

3077 
ªsour˚
)

3080 
¨lm
.
æim_cur
 = 16 * 1024 * 1024;

3081 
¨lm
.
æim_max
 =áæm.
æim_cur
;

3082 
ªtu∫_vÆue
 = 0;

3083 
suc˚ss
 = 
åue
;

3087 
¨lm
.
æim_cur
 = 1024 * 1024 * 1024;

3088 
¨lm
.
æim_max
 =áæm.
æim_cur
;

3089 
ªtu∫_vÆue
 = 0;

3090 
suc˚ss
 = 
åue
;

3094 
	`¥ötf
("unim∂emíãdÑlimôÑesour˚ %u ... faûög ...", 
ªsour˚
);

3100 
SYSCALL_SETRLIMIT
:

3103 
ªtu∫_vÆue
 = 0;

3104 
suc˚ss
 = 
åue
;

3108 
SYSCALL_OSF_GETSYSINFO
:

3110 
uöt64_t
 
›
 = 
ªgs
->
ªgs_R
[
R_A0
];

3111 
uöt64_t
 
vaddr
;

3113 
›
)

3118 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3120 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3121  
vaddr
, &
ªgs
->
ªgs_R
[
R_FPCR
], (
uöt64_t
), 
cuºít
->
id
);

3123 
ªtu∫_vÆue
 = 0;

3124 
suc˚ss
 = 
åue
;

3128 
	`Áèl
("unsupported operation %u on system call OSF_GETSYSINFO",

3129 
›
);

3135 
SYSCALL_OSF_SETSYSINFO
:

3137 
uöt64_t
 
›
 = 
ªgs
->
ªgs_R
[
R_A0
];

3138 
uöt64_t
 
vaddr
;

3140 
›
)

3144 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3146 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3147  
vaddr
, &(
ªgs
->
ªgs_R
[
R_FPCR
]), (
uöt64_t
), 
cuºít
->
id
);

3149 
ªtu∫_vÆue
 = 0;

3150 
suc˚ss
 = 
åue
;

3154 
	`Áèl
("unsupported operation %u on system call OSF_GETSYSINFO",

3155 
›
);

3161 
SYSCALL_TIMES
:

3164 
ªtu∫_vÆue
 = 0;

3165 
suc˚ss
 = 
åue
;

3169 
SYSCALL_UNAME
:

3171 
Æpha_ut¢ame
 
buf
;

3172 
uöt64_t
 
vaddr
;

3174 
	`°r˝y
(
buf
.
sy¢ame
, "Linux");

3175 
	`°r˝y
(
buf
.
nodíame
, "mjdechen");

3176 
	`°r˝y
(
buf
.
ªÀa£
, "2.6.27.5-117.fc10");

3177 
	`°r˝y
(
buf
.
vîsi⁄
, "Mon Dec 8 21:18:29 PST 2008");

3178 
	`°r˝y
(
buf
.
machöe
, "alpha");

3179 
	`°r˝y
(
buf
.
domaö«me
, "");

3182 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A0
];

3185 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3186  
vaddr
, &
buf
, (buf), 
cuºít
->
id
);

3188 
ªtu∫_vÆue
 = 0;

3189 
suc˚ss
 = 
åue
;

3193 
SYSCALL_MREMAP
:

3195 
addr
 = 
ªgs
->
ªgs_R
[
R_A0
];

3196 
uöt64_t
 
ﬁd_Àngth
 = 
ªgs
->
ªgs_R
[
R_A1
];

3197 
uöt64_t
 
√w_Àngth
 = 
ªgs
->
ªgs_R
[
R_A2
];

3198 
uöt64_t
 
Êags
 = 
ªgs
->
ªgs_R
[
R_A3
];

3200 i‡(
√w_Àngth
 > 
ﬁd_Àngth
) {

3201 i‡((
addr
 + 
ﬁd_Àngth
Ë=
_sy°em
.
mm≠_íd
) {

3202 
diff
 = 
√w_Àngth
 - 
ﬁd_Àngth
;

3203 
_sy°em
.
mm≠_íd
 +
diff
;

3204 
ªtu∫_vÆue
 = 
addr
;

3205 
suc˚ss
 = 
åue
;

3209 *
buf
;

3210 
buf
 = (*)
	`ˇŒoc
(
ﬁd_Àngth
, ());

3211 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Ród
,

3212  
addr
, 
buf
, 
ﬁd_Àngth
, 
cuºít
->
id
);

3213 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3214  
_sy°em
.
mm≠_íd
, 
buf
, 
ﬁd_Àngth
, 
cuºít
->
id
);

3215 
ªtu∫_vÆue
 = 
_sy°em
.
mm≠_íd
;

3216 
_sy°em
.
mm≠_íd
 +
√w_Àngth
;

3218 
suc˚ss
 = 
åue
;

3219 
	`‰ì
(
buf
);

3225 
ªtu∫_vÆue
 = 
addr
;

3226 
suc˚ss
 = 
åue
;

3233 
ªtu∫_vÆue
 = 0;

3234 
suc˚ss
 = 
Ál£
;

3238 
SYSCALL_RT_SIGACTION
:

3241 
ªtu∫_vÆue
 = 0;

3242 
suc˚ss
 = 
åue
;

3246 
SYSCALL_GETTIMEOFDAY
:

3256 
timevÆ
 
tv
;

3257 
timez⁄e
 
tz
;

3258 
uöt64_t
 
tvaddr
 = 
ªgs
->
ªgs_R
[
R_A0
];

3259 
uöt64_t
 
tzaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3260 
Æpha_timevÆ
 
©v
;

3261 
Æpha_timez⁄e
 
©z
;

3262 
öt64_t
 
ªsu…
;

3264 i‡(
tzaddr
)

3265 
ªsu…
 = 
	`gëtimeofday
(&
tv
, &
tz
);

3267 
ªsu…
 = 
	`gëtimeofday
(&
tv
, 0);

3269 i‡(
ªsu…
 == 0)

3271 
©v
.
tv_£c
 = 
tv
.tv_sec;

3272 
©v
.
tv_u£c
 = 
tv
.tv_usec;

3273 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3274  
tvaddr
, &
©v
, ◊tv), 
cuºít
->
id
);

3277 i‡(
tzaddr
)

3279 
©z
.
tz_möuãswe°
 = 
tz
.tz_minuteswest;

3280 
©z
.
tz_d°time
 = 
tz
.tz_dsttime;

3281 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
,

3282  
tzaddr
, &
©z
, ◊tz), 
cuºít
->
id
);

3286 
ªtu∫_vÆue
 = 0;

3287 
suc˚ss
 = 
åue
;

3290 
ªtu∫_vÆue
 = 
î∫o
;

3294 
SYSCALL_GETCWD
:

3296 *
buf
;

3297 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A0
];

3298 
uöt64_t
 
size
 = 
ªgs
->
ªgs_R
[
R_A1
];

3299 *
ªs
;

3302 
buf
 = (*)
	`ˇŒoc
(
size
, ());

3304 
ªs
 = 
	`gëcwd
(
buf
, 
size
);

3306 i‡(
ªs
 < 0)

3307 
ªtu∫_vÆue
 = 
î∫o
;

3310 
ªtu∫_vÆue
 = 
	`°æí
(
ªs
);

3311 
suc˚ss
 = 
åue
;

3312 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Wrôe
, 
vaddr
, 
buf
, 
cuºít
->
id
);

3317 
	`‰ì
(
buf
);

3321 
SYSCALL_EXIT_GROUP
:

3324 
¥ogøm_com∂ëe
 = 
åue
;

3325 
ªtu∫_vÆue
 = 0;

3326 
suc˚ss
 = 
åue
;

3330 
SYSCALL_STAT64
:

3332 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

3333 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

3334 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3335 
Æpha_°©64
 
Æpha_buf
;

3336 
°©
 
ho°_buf
;

3337 
ªsu…
;

3340 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
, 
cuºít
->
id
);

3343 
ªsu…
 = 
	`°©
(
∑th«me
, &
ho°_buf
);

3344 
Æpha_buf
.
°_dev
 = 
ho°_buf
.st_dev;

3345 
Æpha_buf
.
°_öo
 = 
ho°_buf
.st_ino;

3346 
Æpha_buf
.
°_rdev
 = 
ho°_buf
.st_rdev;

3347 
Æpha_buf
.
°_size
 = 
ho°_buf
.st_size;

3348 
Æpha_buf
.
°_blocks
 = 
ho°_buf
.st_blocks;

3349 
Æpha_buf
.
°_mode
 = 
ho°_buf
.st_mode;

3350 
Æpha_buf
.
°_uid
 = 
ho°_buf
.st_uid;

3351 
Æpha_buf
.
°_gid
 = 
ho°_buf
.st_gid;

3352 
Æpha_buf
.
°_blksize
 = 
ho°_buf
.st_blksize;

3353 
Æpha_buf
.
°_∆ök
 = 
ho°_buf
.st_nlink;

3359 i‡(
ªsu…
 < 0)

3361 
ªtu∫_vÆue
 = 
î∫o
;

3362 
	`¥ötf
("\nSYSCALL_STAT64 ERROR\n");

3366 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
vaddr
, &
Æpha_buf
, ◊Õha_buf), 
cuºít
->
id
);

3367 
ªtu∫_vÆue
 = 0;

3368 
suc˚ss
 = 
åue
;

3373 
SYSCALL_LSTAT64
:

3375 
∑th«me
[
SYSCALL_BUFFER_SIZE
];

3376 
uöt64_t
 
∑th«me_±r
 = 
ªgs
->
ªgs_R
[
R_A0
];

3377 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3379 
°©
 
ho°_buf
;

3380 
Æpha_°©64
 
Æpha_buf
;

3381 
ªsu…
;

3384 
	`mem_°r˝y
(
mem_‚
, 
mem
, 
Ród
, 
∑th«me_±r
, 
∑th«me
, 
cuºít
->
id
);

3388 
ªsu…
 = 
	`°©
(
∑th«me
, &
ho°_buf
);

3389 
Æpha_buf
.
°_dev
 = 
ho°_buf
.st_dev;

3390 
Æpha_buf
.
°_öo
 = 
ho°_buf
.st_ino;

3391 
Æpha_buf
.
°_rdev
 = 
ho°_buf
.st_rdev;

3392 
Æpha_buf
.
°_size
 = 
ho°_buf
.st_size;

3393 
Æpha_buf
.
°_blocks
 = 
ho°_buf
.st_blocks;

3394 
Æpha_buf
.
°_mode
 = 
ho°_buf
.st_mode;

3395 
Æpha_buf
.
°_uid
 = 
ho°_buf
.st_uid;

3396 
Æpha_buf
.
°_gid
 = 
ho°_buf
.st_gid;

3397 
Æpha_buf
.
°_blksize
 = 
ho°_buf
.st_blksize;

3398 
Æpha_buf
.
°_∆ök
 = 
ho°_buf
.st_nlink;

3404 i‡(
ªsu…
 < 0)

3406 
ªtu∫_vÆue
 = 
î∫o
;

3407 
	`¥ötf
("\nSYSCALL_LSTAT64 ERROR\n");

3411 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
vaddr
, &
Æpha_buf
, ◊Õha_buf), 
cuºít
->
id
);

3412 
ªtu∫_vÆue
 = 0;

3413 
suc˚ss
 = 
åue
;

3418 
SYSCALL_FSTAT64
:

3421 
fd
 = 
ªgs
->
ªgs_R
[
R_A0
];

3422 
uöt64_t
 
vaddr
 = 
ªgs
->
ªgs_R
[
R_A1
];

3424 
Æpha_°©64
 
Æpha_buf
;

3425 
°©
 
ho°_buf
;

3426 
ªsu…
;

3430 i‡(
fd
 < 0)

3431 
ªgs
->
ªgs_R
[
R_V0
] = 
EBADF
;

3434 
ªsu…
 = 
	`f°©64
(
fd
, &
ho°_buf
);

3435 
Æpha_buf
.
°_dev
 = 
ho°_buf
.st_dev;

3436 
Æpha_buf
.
°_öo
 = 
ho°_buf
.st_ino;

3437 
Æpha_buf
.
°_rdev
 = 
ho°_buf
.st_rdev;

3438 
Æpha_buf
.
°_size
 = 
ho°_buf
.st_size;

3439 
Æpha_buf
.
°_blocks
 = 
ho°_buf
.st_blocks;

3440 
Æpha_buf
.
°_mode
 = 
ho°_buf
.st_mode;

3441 
Æpha_buf
.
°_uid
 = 
ho°_buf
.st_uid;

3442 
Æpha_buf
.
°_gid
 = 
ho°_buf
.st_gid;

3443 
Æpha_buf
.
°_blksize
 = 
ho°_buf
.st_blksize;

3444 
Æpha_buf
.
°_∆ök
 = 
ho°_buf
.st_nlink;

3453 i‡(
ªsu…
 < 0)

3455 
ªtu∫_vÆue
 = 
î∫o
;

3456 
	`¥ötf
("\nSYSCALL_FSTAT64 ERROR\n");

3460 
	`mem_bc›y
(
mem_‚
, 
mem
, 
Wrôe
, 
vaddr
, &
Æpha_buf
, ◊Õha_buf), 
cuºít
->
id
);

3461 
ªtu∫_vÆue
 = 0;

3462 
suc˚ss
 = 
åue
;

3468 
OSF_SYS_f‹k
:

3469 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

3470 
	`ÊushWrôeBuf„r
 (
˙t
);

3471 #i‡
	`deföed
(
MTA
)

3475 i‡(
numc⁄ãxts
 >
MAXTHREADS
)

3476 
	`Áèl
 ("TotalÇumber ofÅhreads hasÉxceededÅheÜimit");

3479 
	`Ârötf
 (
°dîr
, "C⁄ãxà%d AŒoˇtögÅhªad IDáà%Œd: %d\n", 
cuºít
->
id
, (
numc⁄ãxts
), 
sim_num_ö¢
);

3480 
	`¥ötf
 ("C⁄ãxà%d AŒoˇtögÅhªad ID: %dáà%Œd\n", 
cuºít
->
id
, (
numc⁄ãxts
), 
sim_num_ö¢
);

3481 
	`fÊush
 (
°dîr
);

3482 
	`fÊush
 (
°dout
);

3484 
√wC⁄ãxt
 = 
thec⁄ãxts
[
numc⁄ãxts
] = (
c⁄ãxt
 *Ë
	`ˇŒoc
 (1,  (context));

3485 i‡(
√wC⁄ãxt
 =
NULL
)

3487 
	`Ârötf
 (
°dîr
, "Allocation ofÇewÅhreads in fork failed\n");

3488 
	`exô
 (1);

3493 
√wC⁄ãxt
->
¨gv
 = (**Ë
	`mÆloc
 (30 *  (*));

3494 i‡(
√wC⁄ãxt
->
¨gv
 =
NULL
)

3496 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

3497 
	`exô
 (1);

3500 #ifdef 
COLLECT_STAT_STARTUP


3501 
thrdPîJobC¡
++;

3502 i‡(
thrdPîJobC¡
 =
THREADS_PER_JOB
)

3503 
cuºít
->
Á°fwd_d⁄e
 = 1;

3504 
√wC⁄ãxt
->
Á°fwd_d⁄e
 = 1;

3505 
√wC⁄ãxt
->
b¨rõrRóched
 = 0;

3506 
√wC⁄ãxt
->
°¨tRóched
 = 0;

3509 #ifdef 
EDA


3510 
√wC⁄ãxt
->
¥edQueue
 = 
NULL
;

3511 
√wC⁄ãxt
->
lockSètus
 = 0;

3512 
√wC⁄ãxt
->
boqIndex
 = -1;

3514 
˙t
 = 0; cnt < 30; cnt++)

3516 
√wC⁄ãxt
->
¨gv
[
˙t
] = 
NULL
;

3517 
√wC⁄ãxt
->
¨gv
[
˙t
] = (*Ë
	`mÆloc
 (240 *  ());

3518 i‡(
√wC⁄ãxt
->
¨gv
[
˙t
] =
NULL
)

3520 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

3521 
	`exô
 (1);

3525 
√wC⁄ãxt
->
sim_¥ogout
 = (*Ë
	`mÆloc
 (240);

3526 i‡(
√wC⁄ãxt
->
sim_¥ogout
 =
NULL
)

3528 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

3529 
	`exô
 (1);

3531 
√wC⁄ãxt
->
sim_¥ogö
 = (*Ë
	`mÆloc
 (240);

3532 i‡(
√wC⁄ãxt
->
sim_¥ogö
 =
NULL
)

3534 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

3535 
	`exô
 (1);

3540 
√wC⁄ãxt
->
¨gc
 = 0;

3541 
√wC⁄ãxt
->
sim_öputfd
 = 0;

3542 
√wC⁄ãxt
->
sim_¥ogfd
 = 
NULL
;

3544 
√wC⁄ãxt
->
Á°fwd_cou¡
 = 0;

3546 
√wC⁄ãxt
->
id
 = 
numc⁄ãxts
;

3547 
√wC⁄ãxt
->
ma°îid
 = 
cuºít
->
id
;

3549 
√wC⁄ãxt
->
∑ª¡
 = 
cuºít
->
id
;

3551 
√wC⁄ãxt
->
a˘ive_this_cy˛e
 = 1;

3553 
√wC⁄ãxt
->
num_chûd
 = 0;

3554 
cuºít
->
num_chûd
++;

3555 
cuºít
->
num_chûd_a˘ive
++;

3559 
cﬁÀ˘SètB¨rõr
++;

3560 
cﬁÀ˘SètSt›
[
√wC⁄ãxt
->
id
] = 1;

3565 
√wC⁄ãxt
->
a˘uÆid
 = ++
thªadF‹ked
[
cuºít
->
id
];

3567 i‡(
thªadF‹ked
[
cuºít
->
id
] =(
THREADS_PER_JOB
-1))

3568 
cﬁÀ˘SètSt›
[
cuºít
->
id
] = 1;

3571 
√wC⁄ãxt
->
¨gfûe
 = 
cuºít
->argfile;

3572 
	`mem˝y
 (
√wC⁄ãxt
->
sim_¥ogout
, 
cuºít
->sim_progout, 240);

3573 
	`mem˝y
 (
√wC⁄ãxt
->
sim_¥ogö
, 
cuºít
->sim_progin, 240);

3579 
√wC⁄ãxt
->
sim_¥ogfd
 = 
cuºít
->sim_progfd;

3582 
√wC⁄ãxt
->
sim_öputfd
 = 
cuºít
->sim_inputfd;

3585 
√wC⁄ãxt
->
‚ame
 = 
NULL
;

3586 
˙t
 = 0; cnt < 30; cnt++)

3588 i‡(
cuºít
->
¨gv
[
˙t
])

3590 
	`mem˝y
 (
√wC⁄ãxt
->
¨gv
[
˙t
], 
cuºít
->argv[cnt], 240);

3593 
√wC⁄ãxt
->
¨gc
 = 
cuºít
->argc;

3597 
	`mem˝y
 (&
√wC⁄ãxt
->
ªgs
, &
cuºít
->ªgs,  (
ªgs_t
));

3599 
√wC⁄ãxt
->
ªgs
.
thªadid
 = 
numc⁄ãxts
;

3601 #i‡
PROCESS_MODEL


3603 
√wC⁄ãxt
->
mem
 = (
mem_t
 *Ë
	`ˇŒoc
 ( (mem_t), 1);

3604 
√wC⁄ãxt
->
mem
->
thªadid
 = 
numc⁄ãxts
;

3605 
√wC⁄ãxt
->
mem
->
∑ge_cou¡
 = 
cuºít
->mem->page_count;

3606 
√wC⁄ãxt
->
mem
->
±ab_mis£s
 = 
cuºít
->mem->ptab_misses;

3607 
√wC⁄ãxt
->
mem
->
±ab_ac˚s£s
 = 
cuºít
->mem->ptab_accesses;

3611 
√wC⁄ãxt
->
mem
->
«me
 = 
cuºít
->mem->name;

3612 
˙t
 = 0; c¡ < 
MEM_PTAB_SIZE
; cnt++)

3614 i‡(
cuºít
->
mem
->
±ab
[
˙t
] !
NULL
)

3617 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
] = (
mem_±e_t
 *Ë
	`ˇŒoc
 ( (mem_pte_t), 1);

3618 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
]->
èg
 = 
cuºít
->mem->ptab[cnt]->tag;

3620 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
]->
∑ge
 = (
byã_t
 *Ë
	`ˇŒoc
 (
MD_PAGE_SIZE
, 1);

3621 
	`mem˝y
 (
√wC⁄ãxt
->
mem
->
±ab
[
˙t
]->
∑ge
, 
cuºít
->mem->±ab[˙t]->∑ge, 
MD_PAGE_SIZE
);

3623 
tmpMemPåS
 = 
cuºít
->
mem
->
±ab
[
˙t
]->
√xt
;

3624 
tmpMemPåD
 = 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
];

3625 
tmpMemPåS
 !
NULL
)

3627 
tmpMemPå
 = (
mem_±e_t
 *Ë
	`ˇŒoc
 ( (mem_pte_t), 1);

3628 
tmpMemPå
->
èg
 = 
tmpMemPåS
->tag;

3629 
tmpMemPå
->
∑ge
 = (
byã_t
 *Ë
	`ˇŒoc
 (
MD_PAGE_SIZE
, 1);

3630 
tmpMemPå
->
√xt
 = 
NULL
;

3631 
	`mem˝y
 (
tmpMemPå
->
∑ge
, 
tmpMemPåS
->∑ge, 
MD_PAGE_SIZE
);

3632 
tmpMemPåD
->
√xt
 = 
tmpMemPå
;

3633 
tmpMemPåD
 = 
tmpMemPå
;

3634 
tmpMemPåS
 =ÅmpMemPåS->
√xt
;

3641 
√wC⁄ãxt
->
mem
 = 
cuºít
->mem;

3645 
√wC⁄ãxt
->
ld_èrgë_big_ídün
 = 
cuºít
->ld_target_big_endian;

3647 
√wC⁄ãxt
->
ld_ãxt_ba£
 = 
cuºít
->ld_text_base;

3648 
√wC⁄ãxt
->
ld_ãxt_size
 = 
cuºít
->ld_text_size;

3649 
√wC⁄ãxt
->
ld_¥og_íåy
 = 
cuºít
->ld_prog_entry;

3650 
√wC⁄ãxt
->
ld_d©a_ba£
 = 
cuºít
->ld_data_base;

3651 
√wC⁄ãxt
->
ld_d©a_size
 = 
cuºít
->ld_data_size;

3652 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_GP
] = 
cuºít
->regs.regs_R[MD_REG_GP];

3655 
√wC⁄ãxt
->
sim_sw≠_byãs
 = 
cuºít
->sim_swap_bytes;

3656 
√wC⁄ãxt
->
sim_sw≠_w‹ds
 = 
cuºít
->sim_swap_words;

3664 #i‡
PROCESS_MODEL


3665 
√wC⁄ãxt
->
ld_°ack_ba£
 = 
cuºít
->
°ack_ba£
;

3666 
√wC⁄ãxt
->
°ack_ba£
 = 
cuºít
->stack_base;

3668 
√wC⁄ãxt
->
ld_°ack_ba£
 = 
cuºít
->
°ack_ba£
;

3669 
cuºít
->
°ack_ba£
 = cuºít->°ack_ba£ - 
STACKSIZE
;

3670 
√wC⁄ãxt
->
°ack_ba£
 = 
cuºít
->stack_base;

3674 
p
 = 
	`ˇŒoc
 (
STACKSIZE
,  ());

3675 
	`mem_bc›y
 (
mem_ac˚ss
, 
cuºít
->
mem
, 
Ród
, cuºít->
ld_°ack_ba£
 - 
STACKSIZE
, 
p
, STACKSIZE, cuºít->
id
);

3676 
	`mem_bc›y
 (
mem_ac˚ss
, 
cuºít
->
mem
, 
Wrôe
, 
√wC⁄ãxt
->
ld_°ack_ba£
 - 
STACKSIZE
, 
p
, STACKSIZE, cuºít->
id
);

3681 
√wC⁄ãxt
->
ld_°ack_size
 = 
cuºít
->ld_stack_size;

3682 
√wC⁄ãxt
->
ld_ívú⁄_ba£
 =ÇewC⁄ãxt->ld_ívú⁄_ba£ - 
STACKSIZE
;

3683 
√wC⁄ãxt
->
ld_brk_poöt
 = 
cuºít
->ld_brk_point;

3684 #i‡
PROCESS_MODEL


3685 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_SP
] = 
cuºít
->regs.regs_R[MD_REG_SP];

3687 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_SP
] = 
cuºít
->ªgs.ªgs_R[MD_REG_SP] - cuºít->
ld_°ack_ba£
 +ÇewContext->ld_stack_base;

3689 
√wC⁄ãxt
->
ªgs
.
ªgs_PC
 = 
cuºít
->regs.regs_PC;

3691 
√wC⁄ãxt
->
ld_°ack_mö
 =ÇewC⁄ãxt->
ld_°ack_ba£
;

3694 
√wC⁄ãxt
->
sim_eio_‚ame
 = 
NULL
;

3695 
√wC⁄ãxt
->
sim_chk±_‚ame
 = 
NULL
;

3696 
√wC⁄ãxt
->
sim_eio_fd
 = 
NULL
;

3697 
√wC⁄ãxt
->
ld_¥og_‚ame
 = 
NULL
;

3701 
√wC⁄ãxt
->
ª«me_ac˚ss
 = 0;

3702 
√wC⁄ãxt
->
rob1_ac˚ss
 = 0;

3703 
√wC⁄ãxt
->
rob2_ac˚ss
 = 0;

3704 
√wC⁄ãxt
->
sim_num_ö¢
 = 0;

3705 
√wC⁄ãxt
->
sim_tŸÆ_ö¢
 = 0;

3706 
√wC⁄ãxt
->
„tch_num_ö¢
 = 0;

3707 
√wC⁄ãxt
->
„tch_tŸÆ_ö¢
 = 0;

3708 
√wC⁄ãxt
->
sim_num_ªfs
 = 0;

3709 
√wC⁄ãxt
->
sim_tŸÆ_ªfs
 = 0;

3710 
√wC⁄ãxt
->
sim_num_lﬂds
 = 0;

3711 
√wC⁄ãxt
->
sim_tŸÆ_lﬂds
 = 0;

3712 
√wC⁄ãxt
->
sim_num_bønches
 = 0;

3713 
√wC⁄ãxt
->
sim_tŸÆ_bønches
 = 0;

3714 
√wC⁄ãxt
->
sim_övÆid_addrs
 = 0;

3715 
√wC⁄ãxt
->
ö°_£q
 = 0;

3716 
√wC⁄ãxt
->
±ø˚_£q
 = 0;

3717 
√wC⁄ãxt
->
ruu_„tch_issue_dñay
 = 0;

3718 
√wC⁄ãxt
->
waô_f‹_„tch
 = 0;

3719 #ifdef 
CACHE_MISS_STAT


3720 
√wC⁄ãxt
->
•ec_rdb_miss_cou¡
 = 0;

3721 
√wC⁄ãxt
->
•ec_wrb_miss_cou¡
 = 0;

3722 
√wC⁄ãxt
->
n⁄_•ec_rdb_miss_cou¡
 = 0;

3723 
√wC⁄ãxt
->
n⁄_•ec_wrb_miss_cou¡
 = 0;

3724 
√wC⁄ãxt
->
ö°_miss_cou¡
 = 0;

3725 
√wC⁄ãxt
->
lﬂd_miss_cou¡
 = 0;

3726 
√wC⁄ãxt
->
°‹e_miss_cou¡
 = 0;

3729 
√wC⁄ãxt
->
„tch_num_thrd
 = 0;

3730 
√wC⁄ãxt
->
iissueq_thrd
 = 0;

3731 
√wC⁄ãxt
->
fissueq_thrd
 = 0;

3732 
√wC⁄ãxt
->
icou¡_thrd
 = 0;

3733 
√wC⁄ãxt
->
œ°_›
.
√xt
 = 
NULL
;

3734 
√wC⁄ãxt
->
œ°_›
.
rs
 = 
NULL
;

3735 
√wC⁄ãxt
->
œ°_›
.
èg
 = 0;

3737 
√wC⁄ãxt
->
„tch_ªdúe˘ed
 = 
FALSE
;

3738 
√wC⁄ãxt
->
buckë_‰ì_li°
 = 
NULL
;

3739 
√wC⁄ãxt
->
°¨t_cy˛e
 = 
sim_cy˛e
;

3740 
√wC⁄ãxt
->
°ÆlThªad
 = 0;

3741 
√wC⁄ãxt
->
waôF‹
 = 0;

3742 
√wC⁄ãxt
->
WBFuŒ
 = 0;

3743 
√wC⁄ãxt
->
waôF‹BønchResﬁve
 = 0;

3744 
√wC⁄ãxt
->
NRLoˇlHôsLﬂd
 = 0;

3745 
√wC⁄ãxt
->
NRRemŸeHôsLﬂd
 = 0;

3746 
√wC⁄ãxt
->
NRMissLﬂd
 = 0;

3747 
√wC⁄ãxt
->
NRLoˇlHôsSt‹e
 = 0;

3748 
√wC⁄ãxt
->
NRRemŸeHôsSt‹e
 = 0;

3749 
√wC⁄ãxt
->
NRMissSt‹e
 = 0;

3750 
√wC⁄ãxt
->
¥e£¡
 = 0;

3765 
√wC⁄ãxt
->
D©aLoˇt‹Hô
 = 0;

3766 
√wC⁄ãxt
->
D©aLoˇt‹Miss
 = 0;

3769 
√wC⁄ãxt
->
•ec_mode
 = 
cuºít
->spec_mode;

3774 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_R
, 
R_BMAP_SZ
);

3775 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_F
, 
F_BMAP_SZ
);

3776 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_C
, 
C_BMAP_SZ
);

3777 
˙t
 = 0; c¡ < 
STORE_HASH_SIZE
; cnt++)

3779 
√wC⁄ãxt
->
°‹e_hèbÀ
[
˙t
] = 
NULL
;

3782 
˙t
 = 0; c¡ < 
MD_TOTAL_REGS
; cnt++)

3784 
√wC⁄ãxt
->
¸óã_ve˘‹
[
˙t
] = 
CVLINK_NULL
;

3785 
√wC⁄ãxt
->
¸óã_ve˘‹_π
[
˙t
] = 0;

3786 
√wC⁄ãxt
->
•ec_¸óã_ve˘‹
[
˙t
] = 
CVLINK_NULL
;

3787 
√wC⁄ãxt
->
•ec_¸óã_ve˘‹_π
[
˙t
] = 0;

3790 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

3793 
√wC⁄ãxt
->
RUU
 = 
	`ˇŒoc
 (
RUU_size
,  (
RUU_°©i⁄
));

3795 
˙t
 = 0; c¡ < 
RUU_size
; cnt++)

3796 
√wC⁄ãxt
->
RUU
[
˙t
].
ödex
 = cnt;

3797 
√wC⁄ãxt
->
RUU_num
 = 0;

3798 
√wC⁄ãxt
->
RUU_hód
 =ÇewC⁄ãxt->
RUU_èû
 = 0;

3799 
√wC⁄ãxt
->
RUU_cou¡_thrd
 = 0;

3800 
√wC⁄ãxt
->
RUU_fcou¡_thrd
 = 0;

3802 
√wC⁄ãxt
->
numDL1CacheAc˚ss
 = 0;

3803 
√wC⁄ãxt
->
numLoˇlHôs
 = 0;

3804 
√wC⁄ãxt
->
numRemŸeHôs
 = 0;

3805 
√wC⁄ãxt
->
numMemAc˚ss
 = 0;

3806 
√wC⁄ãxt
->
numRódCacheAc˚ss
 = 0;

3807 
√wC⁄ãxt
->
numWrôeCacheAc˚ss
 = 0;

3808 
√wC⁄ãxt
->
numInvÆid©i⁄s
 = 0;

3809 
√wC⁄ãxt
->
numDL1Hôs
 = 0;

3810 
√wC⁄ãxt
->
numDL1Mis£s
 = 0;

3811 
√wC⁄ãxt
->
numIn¢
 = 0;

3812 
√wC⁄ãxt
->
numIn°rB¨rõr
 = 0;

3813 
√wC⁄ãxt
->
numCy˛eB¨rõr
 = 0;

3814 
√wC⁄ãxt
->
tŸÆB¨rõrIn°r
 = 0;

3815 
√wC⁄ãxt
->
tŸÆB¨rõrCy˛e
 = 0;

3817 
√wC⁄ãxt
->
TŸÆnumDL1CacheAc˚ss
 = 0;

3818 
√wC⁄ãxt
->
TŸÆnumLoˇlHôs
 = 0;

3819 
√wC⁄ãxt
->
TŸÆnumRemŸeHôs
 = 0;

3820 
√wC⁄ãxt
->
TŸÆnumMemAc˚ss
 = 0;

3821 
√wC⁄ãxt
->
TŸÆnumRódCacheAc˚ss
 = 0;

3822 
√wC⁄ãxt
->
TŸÆnumWrôeCacheAc˚ss
 = 0;

3823 
√wC⁄ãxt
->
TŸÆnumInvÆid©i⁄s
 = 0;

3824 
√wC⁄ãxt
->
TŸÆnumDL1Hôs
 = 0;

3825 
√wC⁄ãxt
->
TŸÆnumDL1Mis£s
 = 0;

3826 
√wC⁄ãxt
->
TŸÆnumIn¢
 = 0;

3827 
√wC⁄ãxt
->
‰ìze
 = 0;

3828 
√wC⁄ãxt
->
waôF‹STLC
 = 0;

3829 
√wC⁄ãxt
->
¶ïtAt
 = 0;

3833 #i‡
	`deföed
(
TEMPDEBUG
)

3834 
	`¥ötf
 ("Cuºít->RUU_num = %d\n", 
cuºít
->
RUU_num
);

3836 
√wC⁄ãxt
->
föish_cy˛e
 = 0;

3837 
√wC⁄ãxt
->
ru¬ög
 = 1;

3838 
√wC⁄ãxt
->
„tch_ªgs_PC
 = 
cuºít
->fetch_regs_PC;

3839 
√wC⁄ãxt
->
„tch_¥ed_PC
 = 
cuºít
->fetch_pred_PC;

3840 
√wC⁄ãxt
->
¥ed_PC
 = 
cuºít
->pred_PC;

3841 
√wC⁄ãxt
->
ªcovî_PC
 = 
cuºít
->recover_PC;

3842 
√wC⁄ãxt
->
°¨t_cy˛e
 = 
sim_cy˛e
;

3845 
√wC⁄ãxt
->
„tch_¥ed_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

3846 #ifde‡
DO_COMPLETE_FASTFWD


3847 
√wC⁄ãxt
->
ªgs
.
ªgs_PC
 + (
md_ö°_t
);

3848 
√wC⁄ãxt
->
ªgs
.
ªgs_NPC
 = 
cuºít
->ªgs.ªgs_NPC +  (
md_ö°_t
);

3852 
thec⁄ãxts
[
numc⁄ãxts
] = 
√wC⁄ãxt
;

3853 
numc⁄ãxts
++;

3856 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

3858 
¥i‹ôy
[
˙t
] = cnt;

3859 
key
[
˙t
] = 0;

3862 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

3863 
	`ˇche_Êush
 (
ˇche_dl1
[
˙t
], 
sim_cy˛e
);

3865 
	`°ìr_öô
 ();

3866 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3867 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_V0
] =ÇewC⁄ãxt->
a˘uÆid
;

3868 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3869 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_A3
] = 0;

3870 
ªgs
->
ªgs_R
[
MD_REG_A4
] = 0;

3871 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_A4
] = 0;

3873 
	`ruu_öô
 (
√wC⁄ãxt
->
id
);

3874 
	`lsq_öô
 (
√wC⁄ãxt
->
id
);

3875 
	`„tch_öô
 (
√wC⁄ãxt
->
id
);

3876 
	`cv_öô
 (
√wC⁄ãxt
->
id
);

3879 #i‡
	`deföed
(
MTA
)

3880 
OSF_SYS_gëthªadid
:

3882 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
cuºít
->
a˘uÆid
;

3883 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3885 
OSF_SYS_öô_°¨t
:

3886 
	`¥ötf
 ("init_start...\n");

3888 
OSF_SYS_öô
:

3889 
MTAc⁄ãxts
 = 
numc⁄ãxts
;

3890 
	`¥ötf
 ("öô ...%d\n", 
cuºít
->
id
);

3891 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3892 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3895 
OSF_SYS_öô_com∂ëe
:

3896 
	`¥ötf
 ("init_complete ...\n");

3898 
OSF_SYS_di°ribuã
:

3899 
	`¥ötf
 ("distribute ...\n");

3901 
OSF_SYS_time
:

3902 
	`¥ötf
 ("time ...\n");

3905 
OSF_SYS_b¨rõr
:

3906 
	`¥ötf
 ("barrier ...\n");

3909 
OSF_SYS_lock_acquúe
:

3910 
	`¥ötf
 ("lock_acquire ...\n");

3912 
OSF_SYS_lock_ªÀa£
:

3913 
	`¥ötf
 ("lock_release ...\n");

3915 
OSF_SYS_Êag_acquúe
:

3916 
	`¥ötf
 ("flag_acquire ...\n");

3918 
OSF_SYS_Êag_ªÀa£
:

3919 
	`¥ötf
 ("flag_release ...\n");

3921 
OSF_SYS_öc_Êag
:

3922 
	`¥ötf
 ("inc_flag ...\n");

3924 
OSF_SYS_pﬁl_Êag
:

3925 
	`¥ötf
 ("poll_flag ...\n");

3927 
OSF_SYS_waô_gt_Êag
:

3928 
	`¥ötf
 ("gt_flag ...\n");

3930 
OSF_SYS_waô_…_Êag
:

3931 
	`¥ötf
 ("lt_flag ...\n");

3936 
OSF_SYS_¥ötf
:

3938 
	`fÊush
 (
°dîr
);

3939 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3940 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3942 
OSF_SYS_STATS
:

3943 if(
cﬁÀ˘_°©s
 == 0)

3945 #i‚de‡
PARALLEL_EMUL


3946 
cﬁÀ˘_°©s
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3948 #ifdef 
COLLECT_STAT_STARTUP


3949 
cuºít
->
°¨tRóched
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3951 i‡(
cﬁÀ˘_°©s
 == 1)

3953 
	`¥ötf
("Initialization over:Åiming simulation can startÇow\n");

3954 
	`Ârötf
(
°dîr
,"Initialization over:Åiming simulation can startÇow\n");

3955 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

3956 
thec⁄ãxts
[
˙t
]->
°¨t_cy˛e
 = 
sim_cy˛e
;

3957 
ÊushImpSèts
 = 1;

3960 i‡(
cﬁÀ˘_°©s
 == 1)

3962 
cﬁÀ˘_°©s
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3963 #ifdef 
COLLECT_STAT_STARTUP


3964 
cuºít
->
°¨tRóched
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3966 if(
cﬁÀ˘_°©s
 == 0)

3968 
	`¥ötf
("Computation over:Åiming simulation can stopÇow\n");

3969 
	`Ârötf
(
°dîr
,"Computation over:Åiming simulation can stopÇow\n");

3970 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

3971 
thec⁄ãxts
[
˙t
]->
föish_cy˛e
 = 
sim_cy˛e
;

3972 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

3974 
	`¥ötf
 ("free freeze\n");

3975 
thec⁄ãxts
[
˙t
]->
‰ìze
 = 0;

3976 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

3977 
thec⁄ãxts
[
˙t
]->
waôF‹STLC
 = 0;

3978 
	`ÊushWrôeBuf„r
 (
˙t
);

3980 
timeToRëu∫
 = 1;

3984 
	`∑nic
 ("collect_stats is invalid");

3985 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3986 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3988 
OSF_SYS_FASTFWD
:

3989 
Á°fwd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3990 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3991 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3994 
OSF_SYS_BARRIER_STATS
:

3995 
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3997 i‡(
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] == 1)

3999 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 
cﬁÀ˘_b¨rõr_°©s_own
[current->id];

4000 
	`¥ötf
("E¡îög b¨rõ∏%d\n", 
cuºít
->
id
);

4001 if(
cuºít
->
Á°fwd_d⁄e
 == 0)

4002 
cuºít
->
Á°fwd_d⁄e
 = 1;

4004 
	`fÊush
(
°dout
);

4005 
cuºít
->
numIn°rB¨rõr
 = cuºít->
numIn¢
;

4006 
cuºít
->
numCy˛eB¨rõr
 = 
sim_cy˛e
;

4008 i‡(
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] == 0)

4010 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 
cﬁÀ˘_b¨rõr_°©s_own
[current->id];

4011 
	`¥ötf
("Lóvög b¨rõ∏%d\n", 
cuºít
->
id
);

4012 
	`fÊush
(
°dout
);

4013 
cuºít
->
tŸÆB¨rõrIn°r
 +(cuºít->
numIn¢
 - cuºít->
numIn°rB¨rõr
);

4014 
cuºít
->
tŸÆB¨rõrCy˛e
 +(
sim_cy˛e
 - cuºít->
numCy˛eB¨rõr
);

4016 if(
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] == 2)

4017 
cﬁÀ˘_b¨rõr_ªÀa£
 = 2;

4019 
b¨rõr_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4026 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4027 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4029 
OSF_SYS_LOCK_STATS
:

4030 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4031 i‡(
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1)

4033 
cuºít
->
numIn°rLock
 = cuºít->
numIn¢
;

4034 
cuºít
->
numCy˛eLock
 = 
sim_cy˛e
;

4035 if(
LockInôPC
 == 0)

4037 
LockInôPC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

4038 
	`¥ötf
("öôülizedÖ¯f‹Üock i†%Œx\n", 
LockInôPC
);

4041 i‡(
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0)

4043 
TŸÆLocks
++;

4044 
cuºít
->
tŸÆLockIn°r
 +(cuºít->
numIn¢
 - cuºít->
numIn°rLock
);

4045 
cuºít
->
tŸÆLockCy˛e
 +(
sim_cy˛e
 - cuºít->
numCy˛eLock
);

4046 
lock_waôög
[
cuºít
->
id
] = 0;

4048 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4049 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4051 
OSF_SYS_WAIT
:

4062 i‡(
cuºít
->
∑ª¡
 != -1)

4064 
	`Ârötf
 (
°dîr
, "***************Thªad %d i†hÆtög**************\n", 
cuºít
->
id
);

4065 
	`Ârötf
 (
°dîr
, "TŸB¨Cy˛ê%8ld, TŸB¨In°∏%8ld\n", (Ë
cuºít
->
tŸÆB¨rõrCy˛e
, (Ëcuºít->
tŸÆB¨rõrIn°r
);

4066 
	`Ârötf
 (
°dîr
, "TŸLockCy˛ê%8ld, TŸLockIn°∏%8ld\n", (Ë
cuºít
->
tŸÆLockCy˛e
, (Ëcuºít->
tŸÆLockIn°r
);

4067 
	`¥öt_°©s
 (
cuºít
);

4069 
	`MTA_¥ötInfo
 (
cuºít
->
id
);

4070 
cuºít
->
ru¬ög
 = 0;

4071 
cuºít
->
‰ìze
 = 1;

4072 
	`¥ötf
 ("‰ìzêby WAIT: %d\n", 
cuºít
->
id
);

4075 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4076 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4077 
thec⁄ãxts
[
cuºít
->
∑ª¡
]->
num_chûd
--;

4081 i‡(
cuºít
->
num_chûd
 == 0)

4083 
	`Ârötf
 (
°dîr
, "***************Thªad %d i†hÆtög**************\n", 
cuºít
->
id
);

4084 
	`Ârötf
 (
°dîr
, "TŸB¨Cy˛ê%10ld, TŸB¨In°∏%10ld\n", (Ë
cuºít
->
tŸÆB¨rõrCy˛e
, (Ëcuºít->
tŸÆB¨rõrIn°r
);

4085 
	`Ârötf
 (
°dîr
, "TŸLockCy˛ê%10ld, TŸLockIn°∏%10ld\n", (Ë
cuºít
->
tŸÆLockCy˛e
, (Ëcuºít->
tŸÆLockIn°r
);

4087 
	`¥öt_°©s
 (
cuºít
);

4089 
	`MTA_¥ötInfo
 (
cuºít
->
id
);

4090 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 1;

4091 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4095 
ªgs
->
ªgs_R
[
MD_REG_V0
] = -1;

4096 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4101 
OSF_SYS_MTA_hÆt
:

4102 
cuºít
->
ru¬ög
 = 0;

4103 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4104 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4107 
OSF_SYS_MTA_°¨t
:

4108 
	`¥ötf
 ("StartingÅhreads\n");

4109 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4110 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

4111 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4112 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4114 
OSF_SYS_b¨rõr
:

4115 i‡(
cuºít
->
∑ª¡
 == -1)

4117 
tmpNum
 = 
numThªads
[
cuºít
->
id
] =ÇumThreads[current->id] - 1;

4121 
tmpNum
 = 
numThªads
[
cuºít
->
∑ª¡
] =ÇumThreads[current->parent] - 1;

4124 i‡(
tmpNum
 == 0)

4126 
	`Ârötf
 (
°dîr
, "BARRIER\n");

4127 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4129 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

4131 i‡(
cuºít
->
∑ª¡
 == -1)

4133 
numThªads
[
cuºít
->
id
] = 
mè_maxthªads
;

4137 
numThªads
[
cuºít
->
∑ª¡
] = 
mè_maxthªads
;

4139 i‡(
°¨tTakögSèti°ics
 == 1)

4140 
cuºítPha£
 = 7;

4141 
°¨tTakögSèti°ics
 = 1;

4145 
cuºít
->
ru¬ög
 = 0;

4147 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4148 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4151 
OSF_SYS_BARRIER_INSTR
:

4152 #ifdef 
COLLECT_STAT_STARTUP


4153 
cuºít
->
b¨rõrRóched
 = 2;

4155 #i‚de‡
PARALLEL_EMUL


4156 if(
cﬁÀ˘_°©s
)

4158 
TŸÆB¨rõrs
 ++;

4159 
cﬁÀ˘_b¨rõr_ªÀa£
 = 0;

4160 i‡(
°¨tTakögSèti°ics
 == 1)

4161 
cuºítPha£
 = 7;

4162 
°¨tTakögSèti°ics
 = 1;

4163 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4164 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4165 
i
=0;

4167 #ifde‡
LOCK_OPTI


4168 
OSF_SYS_LOCKADDR
:

4169 
lock_èû
[
cuºít
->
id
] = 0;

4170 
lock_addr
[
cuºít
->
id
][
lock_èû
[cuºít->id]] = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4171 
	`¥ötf
("thªadid %d,Üockádd∏%u\n", 
cuºít
->
id
, 
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4174 
OSF_SYS_IDEAL_BAR
:

4175 #ifde‡
IDEAL_LOCK


4176 
B¨rõr_Êag
[
ªgs
->
ªgs_R
[
MD_REG_A0
]] = 1;

4177 
B¨rõr_num
[
b¨rõr_ãmp
] ++;

4178 if(
B¨rõr_num
[
b¨rõr_ãmp
] =
numc⁄ãxts
)

4180 
B¨rõr_num
[
b¨rõr_ãmp
] = 0;

4181 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

4182 
i
 = 0;

4183 
i
=0;i<
numc⁄ãxts
;i++)

4185 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

4186 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

4187 
b¨rõr_waôög
[
i
] = 0;

4188 
cﬁÀ˘_b¨rõr_°©s
[
i
] = 0;

4190 if(
cﬁÀ˘_°©s
)

4191 
TŸÆB¨rõrs
 ++;

4195 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 1;

4196 
b¨rõr_waôög
[
cuºít
->
id
] = 1;

4197 
cuºít
->
ru¬ög
 = 0;

4198 
cuºít
->
‰ìze
 = 1;

4199 
¶ìpCou¡
[
cuºít
->
id
]++;

4200 
cuºít
->
¶ïtAt
 = 
sim_cy˛e
;

4201 
‰ìzeCou¡î
++;

4204 #ifde‡
LOCK_HARD


4205 if(
cﬁÀ˘_°©s
)

4206 
	`SyncO≥øti⁄
(
b¨rõr_ãmp
, 
cuºít
->
id
, 
BAR_ACQUIRE
);

4209 
B¨rõr_Êag
[
ªgs
->
ªgs_R
[
MD_REG_A0
]] = 1;

4210 
B¨rõr_num
[
b¨rõr_ãmp
] ++;

4211 if(
B¨rõr_num
[
b¨rõr_ãmp
] =
numc⁄ãxts
)

4213 
B¨rõr_num
[
b¨rõr_ãmp
] = 0;

4214 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

4215 
i
 = 0;

4216 
i
=0;i<
numc⁄ãxts
;i++)

4218 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

4219 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

4220 
b¨rõr_waôög
[
i
] = 0;

4221 
cﬁÀ˘_b¨rõr_°©s
[
i
] = 0;

4223 if(
cﬁÀ˘_°©s
)

4224 
TŸÆB¨rõrs
 ++;

4228 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 1;

4229 
b¨rõr_waôög
[
cuºít
->
id
] = 1;

4230 
cuºít
->
ru¬ög
 = 0;

4231 
cuºít
->
‰ìze
 = 1;

4232 
¶ìpCou¡
[
cuºít
->
id
]++;

4233 
cuºít
->
¶ïtAt
 = 
sim_cy˛e
;

4234 
‰ìzeCou¡î
++;

4240 
OSF_SYS_IDEAL_LOCKACQ
:

4241 #ifde‡
IDEAL_LOCK


4244 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4245 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 1;

4246 if(
Lock_Acquúe
[
Lock_id
] != 0)

4248 
lock_waôög
[
cuºít
->
id
] = 1;

4255 
Lock_waô_id
[
Lock_id
][
Lock_èû
[Lock_id]] = 
cuºít
->
id
;

4256 
Lock_waô_num
[
Lock_id
] ++;

4257 
Lock_èû
[
Lock_id
] = (Lock_èû[Lock_id]+1+
MAXLOCK
)%MAXLOCK;

4258 if(
Lock_èû
[
Lock_id
] =
Lock_hód
[Lock_id])

4259 
	`∑nic
("IdealÜock: Lockácquire queue full\n");

4263 
Lock_Acquúe
[
Lock_id
] = 
cuºít
->
id
 + 1;

4266 #ifde‡
LOCK_HARD


4268 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4269 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 1;

4270 
	`Ârötf
(
Â_åa˚
, "thªadid %dácqÜock %d\n", 
cuºít
->
id
, 
Lock_id
);

4271 
	`SyncO≥øti⁄
(
Lock_id
, 
cuºít
->
id
, 
ACQUIRE
);

4275 
OSF_SYS_IDEAL_LOCKREL
:

4276 #ifde‡
IDEAL_LOCK


4279 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4280 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 0;

4281 if(
Lock_Acquúe
[
Lock_id
] !
cuºít
->
id
 + 1)

4282 
	`∑nic
("IdealÜock:ÇotÅheÑightÅhreadÑeleaseÅheÜock!\n");

4286 
Lock_Acquúe
[
Lock_id
] = 0;

4287 if(
Lock_waô_num
[
Lock_id
])

4289 
˙t
 = 
Lock_waô_id
[
Lock_id
][
Lock_hód
[Lock_id]];

4292 
lock_waôög
[
˙t
] = 0;

4294 
Lock_Acquúe
[
Lock_id
] = 
˙t
+1;

4295 
Lock_waô_num
[
Lock_id
] --;

4296 
Lock_hód
[
Lock_id
] = (Lock_hód[Lock_id]+1+
MAXLOCK
)%MAXLOCK;

4300 #ifde‡
LOCK_HARD


4301 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4302 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 0;

4303 
	`SyncO≥øti⁄
(
Lock_id
, 
cuºít
->
id
, 
RELEASE
);

4308 
OSF_SYS_QUEISCE
:

4309 #ifdef 
COLLECT_STAT_STARTUP


4310 
cuºít
->
b¨rõrRóched
 = 1;

4315 i‡(!
cuºít
->
ma°îid
)

4317 
cuºít
->
ru¬ög
 = 0;

4318 
cuºít
->
‰ìze
 = 1;

4319 
¶ìpCou¡
[
cuºít
->
id
]++;

4323 
	`fÊush
 (
°dout
);

4324 
quõs˚AddrSåu˘
[
cuºít
->
id
].
addªss
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4325 
quõs˚AddrSåu˘
[
cuºít
->
id
].
thªadid
 = current->id;

4326 
cuºít
->
¶ïtAt
 = 
sim_cy˛e
;

4327 
‰ìzeCou¡î
++;

4329 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4330 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4332 
OSF_SYS_RANDOM
:

4333 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`øndom
 ();

4334 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4336 
OSF_SYS_MEM
:

4337 
ac˚ss_mem
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4338 
ac˚ss_mem_id
 = 
cuºít
->
id
;

4339 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4340 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4342 
OSF_SYS_PRINTGP
:

4343 
	`¥ötf
 ("%d, GP = %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_R
[
MD_REG_GP
]);

4344 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4345 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4349 
OSF_SYS_SHDADDR
:

4350 
	`AddToTheSh¨edAddrLi°
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
], (Ëªgs->ªgs_R[
MD_REG_A1
]);

4351 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4352 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4354 
OSF_SYS_STOPSIM
:

4355 
°›sim
 = 1;

4356 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4357 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4359 
OSF_SYS_PRINTINSTR
:

4360 
	`Ârötf
 (
°dîr
, "%Œd\n", (Ë
sim_num_ö¢
);

4361 
	`fÊush
 (
°dîr
);

4362 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4363 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4367 
	`¥ötf
 ("övÆid/unim∂emíãd sysˇŒ %ld, PC=0x%08p, RA=0x%08p, wögög it", 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

4368 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4369 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4371 
	`Áèl
 ("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

4377 –
syscode
 < 500 ) &&

4378 –
syscode
 != 2 ) &&

4379 –
syscode
 != 162 ) &&

4380 –
syscode
 != 167 ) &&

4381 –
syscode
 != 168 ) &&

4382 –
syscode
 != 170 ) &&

4383 –
syscode
 != 171 ) &&

4384 –
syscode
 != 172 ) &&

4385 –
syscode
 != 173 ) &&

4386 –
syscode
 != 174 ) &&

4387 –
syscode
 != 175 ) &&

4388 –
syscode
 != 176 ) &&

4389 –
syscode
 != 177 ) &&

4390 –
syscode
 != 178 ) &&

4391 –
syscode
 != 179 ) &&

4392 –
syscode
 != 180 ) &&

4393 –
syscode
 != 182 ) &&

4394 –
syscode
 != 183 ) &&

4395 –
syscode
 != 185 ) &&

4396 –
syscode
 != 186 ) &&

4397 –
syscode
 != 189 ) &&

4398 –
syscode
 != 190 ) &&

4399 –
syscode
 != 191 ) &&

4400 –
syscode
 != 192 )

4403 i‡(
suc˚ss
)

4404 
ªgs
->
ªgs_R
[
R_A3
] = 0;

4406 
ªgs
->
ªgs_R
[
R_A3
] = -1;

4407 
ªgs
->
ªgs_R
[
R_V0
] = 
ªtu∫_vÆue
;

4412 i‡(
vîbo£
)

4413 
	`Ârötf
(
°dîr
, "syscall(%d):Ñeturned %d:%d...\n",

4414 ()
syscode
, ()
ªgs
->
ªgs_R
[
MD_REG_A3
],

4415 ()
ªgs
->
ªgs_R
[
MD_REG_V0
]);

4417 
	}
}

4420 
	$ˇŒ_quõs˚
 (
thªadID
)

4422 
	`¥ötf
 ("Quõs˚¡ in°ru˘i⁄ cÆÀd by %d\n", 
thªadID
);

4423 
	}
}

	@syscall.h

93 #i‚de‡
SYSCALL_H


94 
	#SYSCALL_H


	)

96 
	~<sys/ty≥s.h
>

97 #ifde‡
_MSC_VER


98 
	~<time.h
>

100 
	~<sys/time.h
>

103 
	~"ho°.h
"

104 
	~"misc.h
"

105 
	~"machöe.h
"

133 
	#MAXLOCK
 2048

	)

134 
	#MAXBARRIER
 512

	)

137 #ifde‡
LOCK_HARD


138 
	sLOCK_ENTRY
 {

139 
	mlock_ow√r
;

140 
	mwaôög_li°
[
MAXLOCK
];

141 
	mwaôög_num
;

142 
	mwaôög_hód
;

143 
	mwaôög_èû
;

144 } *
	gLOCK_REG
[256][
MAXLOCK
];

146 
	sBAR_ENTRY
 {

147 
	mb¨rõr_num
;

148 
	m¨rivög_ve˘‹
[256];

149 } *
	gBAR_REG
[256][
MAXBARRIER
];

151 
	sLOCK_EVENT
 {

152 
	m§c1
;

153 
	m§c2
;

154 
	mdes1
;

155 
	mdes2
;

156 
	m›t
;

157 
	mlock_id
;

158 
	mthªadid
;

159 
cou¡î_t
 
	mwhí
;

160 
cou¡î_t
 
	mp›√tMsgNo
;

161 
LOCK_EVENT
 *
	m√xt
;

163 
	#ACQUIRE
 100

	)

164 
	#RELEASE
 101

	)

165 
	#ACQ_REMOTE_ACC
 102

	)

166 
	#REL_REMOTE_ACC
 103

	)

167 
	#ACQ_ACK
 104

	)

168 
	#WAIT_ACK
 105

	)

169 
	#BAR_ACQUIRE
 106

	)

170 
	#BAR_REMOTE_ACC
 107

	)

171 
	#BAR_WAIT_ACK
 108

	)

172 
	#BAR_RELEASE
 109

	)

174 
LOCK_EVENT
 *
	glock_evít_queue
;

176 
lock_evít_íqueue
(
LOCK_EVENT
 *
evít
);

177 
lock_evítq_√xãvít
();

178 
Lock_›î©i⁄
 (
lock_id
, 
thªadid
, 
›
);

182 
sys_sysˇŒ
(
ªgs_t
 *
ªgs
,

183 
mem_ac˚ss_‚
 
mem_‚
,

184 
mem_t
 *
mem
,

185 
md_ö°_t
 
ö°
,

186 
åa˚abÀ
);

	@syscall_old.c

134 
	~<°dio.h
>

135 
	~<°dlib.h
>

138 
	~"smt.h
"

140 #ifde‡
SMT_SS


141 
	~"c⁄ãxt.h
"

144 
	~"bønchC‹r.h
"

148 #i‚de‡
MIN_SYSCALL_MODE


149 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__CYGWIN32__
Ë|| deföed(
MD_CROSS_ENDIAN
)

150 
	#MIN_SYSCALL_MODE


	)

155 #ifde‡
_MSC_VER


156 
	~<io.h
>

158 
	~<uni°d.h
>

160 
	~<f˙é.h
>

161 
	~<sys/ty≥s.h
>

162 #i‚de‡
_MSC_VER


163 
	~<sys/∑øm.h
>

165 
	~<î∫o.h
>

166 
	~<time.h
>

167 #i‚de‡
_MSC_VER


168 
	~<sys/time.h
>

170 #i‚de‡
_MSC_VER


171 
	~<sys/ªsour˚.h
>

173 
	~<sig«l.h
>

174 #i‚de‡
_MSC_VER


175 
	~<sys/fûe.h
>

177 
	~<sys/°©.h
>

178 #i‚de‡
_MSC_VER


179 
	~<sys/uio.h
>

181 
	~<£tjmp.h
>

182 #i‚de‡
_MSC_VER


183 
	~<sys/times.h
>

185 
	~<limôs.h
>

186 #i‚de‡
_MSC_VER


187 
	~<sys/io˘l.h
>

189 #i‡
deföed
(
löux
Ë|| deföed(
_AIX
)

190 
	~<utime.h
>

191 
	~<dúít.h
>

192 
	~<sys/vfs.h
>

194 #i‡
deföed
(
_AIX
)

195 
	~<sys/°©fs.h
>

197 #i‚de‡
_MSC_VER


198 
	~<sys/mou¡.h
>

201 #i‡!
deföed
(
löux
Ë&& !deföed(
•¨c
Ë&& !deföed(
hpux
Ë&& !deföed(
__hpux
Ë&& !deföed(
__CYGWIN32__
Ë&& !deföed(
u…rix
)

202 #i‚de‡
_MSC_VER


203 
	~<sys/£À˘.h
>

206 #i‡
deföed
(
löux
Ë|| deföed(
_AIX
)

207 
	~<sgây.h
>

208 
	~<√töë/t˝.h
>

209 
	~<√töë/udp.h
>

210 
	~<√töë/ö.h
>

213 #i‡
deföed
(
__svr4__
)

214 
	~<sys/dúít.h
>

215 
	~<sys/fûio.h
>

216 #ñi‡
deföed
(
__osf__
)

217 
	~<dúít.h
>

222 
gëdúíåõs
 (
fd
, *
buf
, 
nbyãs
, *
ba£p
);

225 
cﬁÀ˘SètB¨rõr
, 
cﬁÀ˘SètSt›
[
MAXTHREADS
], 
timeToRëu∫
;

226 
‰ìzeCou¡î
;

227 
thªadF‹ked
[4];

230 
cou¡î_t
 
¶ìpCou¡
[];

233 #i‡
deföed
(
MTA
)

234 
RUU_size
;

235 
RS_lök
 *
r¶ök_‰ì_li°
;

237 #i‚de‡
RSLINK_NEW


238 
	#RSLINK_NEW
(
DST
, 
RS
Ë\

	)

239 { 
RS_lök
 *
	gn_lök
; \

240 i‡(!
	gr¶ök_‰ì_li°
) \

241 
∑nic
("out ofÑsÜinks"); \

242 
	gn_lök
 = 
r¶ök_‰ì_li°
; \

243 
	gr¶ök_‰ì_li°
 = 
r¶ök_‰ì_li°
->
√xt
; \

244 
	gn_lök
->
	g√xt
 = 
NULL
; \

245 
	gn_lök
->
	grs
 = (
RS
);Ç_lök->
	gèg
 = 
n_lök
->
rs
->
èg
; \

246 (
	gDST
Ë
n_lök
; \

249 
CV_lök
 
CVLINK_NULL
;

251 
	#CV_BMAP_SZ
 (
	`BITMAP_SIZE
(
MD_TOTAL_REGS
))

	)

252 
¥i‹ôy
[
MAXTHREADS
];

255 
key
[
MAXTHREADS
];

259 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
)

260 
	~<sys/°©vfs.h
>

261 
	#°©fs
 
°©vfs


	)

262 
	~<sys/time.h
>

263 
	~<utime.h
>

264 
	~<sgây.h
>

265 
	~<√töë/ö.h
>

266 
	~<√töë/t˝.h
>

269 #i‡
deföed
(
•¨c
Ë&& deföed(
__unix__
)

270 #i‡
deföed
(
__svr4__
Ë|| deföed(
__USLC__
)

271 
	~<dúít.h
>

273 
	~<sys/dú.h
>

277 #unde‡
NL0


278 #unde‡
NL1


279 #unde‡
CR0


280 #unde‡
CR1


281 #unde‡
CR2


282 #unde‡
CR3


283 #unde‡
TAB0


284 #unde‡
TAB1


285 #unde‡
TAB2


286 #unde‡
XTABS


287 #unde‡
BS0


288 #unde‡
BS1


289 #unde‡
FF0


290 #unde‡
FF1


291 #unde‡
ECHO


292 #unde‡
NOFLSH


293 #unde‡
TOSTOP


294 #unde‡
FLUSHO


295 #unde‡
PENDIN


298 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

299 #unde‡
CR0


302 #ifde‡
__FªeBSD__


303 
	~<sys/io˘l_com∑t.h
>

305 #i‚de‡
_MSC_VER


306 
	~<ãrmio.h
>

310 #i‡
deföed
(
hpux
Ë|| deföed(
__hpux
)

312 #unde‡
HUPCL


313 #unde‡
ECHO


314 #unde‡
B50


315 #unde‡
B75


316 #unde‡
B110


317 #unde‡
B134


318 #unde‡
B150


319 #unde‡
B200


320 #unde‡
B300


321 #unde‡
B600


322 #unde‡
B1200


323 #unde‡
B1800


324 #unde‡
B2400


325 #unde‡
B4800


326 #unde‡
B9600


327 #unde‡
B19200


328 #unde‡
B38400


329 #unde‡
NL0


330 #unde‡
NL1


331 #unde‡
CR0


332 #unde‡
CR1


333 #unde‡
CR2


334 #unde‡
CR3


335 #unde‡
TAB0


336 #unde‡
TAB1


337 #unde‡
BS0


338 #unde‡
BS1


339 #unde‡
FF0


340 #unde‡
FF1


341 #unde‡
EXTA


342 #unde‡
EXTB


343 #unde‡
B900


344 #unde‡
B3600


345 #unde‡
B7200


346 #unde‡
XTABS


347 
	~<sgây.h
>

348 
	~<utime.h
>

351 #ifde‡
__CYGWIN32__


352 
	~<sys/uni°d.h
>

353 
	~<sys/vfs.h
>

356 
	~<sys/sockë.h
>

357 
	~<sys/pﬁl.h
>

359 #ifde‡
_MSC_VER


360 
	#ac˚ss
 
_ac˚ss


	)

361 
	#chmod
 
_chmod


	)

362 
	#chdú
 
_chdú


	)

363 
	#u∆ök
 
_u∆ök


	)

364 
	#›í
 
_›í


	)

365 
	#¸ót
 
_¸ót


	)

366 
	#pùe
 
_pùe


	)

367 
	#dup
 
_dup


	)

368 
	#dup2
 
_dup2


	)

369 
	#°©
 
_°©


	)

370 
	#f°©
 
_f°©


	)

371 
	#l£ek
 
_l£ek


	)

372 
	#ªad
 
_ªad


	)

373 
	#wrôe
 
_wrôe


	)

374 
	#˛o£
 
_˛o£


	)

375 
	#gëpid
 
_gëpid


	)

376 
	#utime
 
_utime


	)

377 
	~<sys/utime.h
>

380 #i‡
deföed
(
_AIX
)

381 
	~<°rögs.h
>

382 
	~<√tdb.h
>

383 #i‡!
deföed
(
POWER_64
)

384 
Êock
 (, );

388 #i‡
deföed
(
__osf__
)

389 
gëdomaö«me
 (*, );

390 
Êock
 (, );

391 
u¶ìp
 (
u£c⁄ds_t
);

394 
ruu_öô
 ();

395 
lsq_öô
 ();

396 
„tch_öô
 ();

397 
cv_öô
 ();

398 
ªg_öô
 ();

399 
b¥ed_öô
 ();

402 
	~"ho°.h
"

403 
	~"misc.h
"

404 
	~"machöe.h
"

405 
	~"ªgs.h
"

406 
	~"mem‹y.h
"

407 
	~"lﬂdî.h
"

408 
	~"sim.h
"

409 
	~"ídün.h
"

410 
	~"eio.h
"

411 
	~"sysˇŒ.h
"

412 #i‡
deföed
(
MTA
)

413 
	~"MTA.h
"

416 
	#OSF_SYS_sysˇŒ
 0

	)

418 
	#OSF_SYS_f‹k
 2

	)

419 
	#OSF_SYS_ªad
 3

	)

421 
	#OSF_SYS_ﬁd_›í
 5

	)

422 
	#OSF_SYS_˛o£
 6

	)

423 
	#OSF_SYS_waô4
 7

	)

424 
	#OSF_SYS_ﬁd_¸ót
 8

	)

425 
	#OSF_SYS_lök
 9

	)

426 
	#OSF_SYS_u∆ök
 10

	)

427 
	#OSF_SYS_execv
 11

	)

428 
	#OSF_SYS_chdú
 12

	)

429 
	#OSF_SYS_fchdú
 13

	)

430 
	#OSF_SYS_mknod
 14

	)

431 
	#OSF_SYS_chmod
 15

	)

432 
	#OSF_SYS_chown
 16

	)

433 
	#OSF_SYS_obªak
 17

	)

434 
	#OSF_SYS_gëfs°©
 18

	)

435 
	#OSF_SYS_l£ek
 19

	)

436 
	#OSF_SYS_gëpid
 20

	)

437 
	#OSF_SYS_mou¡
 21

	)

438 
	#OSF_SYS_unmou¡
 22

	)

439 
	#OSF_SYS_£tuid
 23

	)

440 
	#OSF_SYS_gëuid
 24

	)

441 
	#OSF_SYS_exec_wôh_lﬂdî
 25

	)

442 
	#OSF_SYS_±ø˚
 26

	)

443 #ifde‡ 
COMPAT_43


444 
	#OSF_SYS_ƒecvmsg
 27

	)

445 
	#OSF_SYS_n£ndmsg
 28

	)

446 
	#OSF_SYS_ƒecv‰om
 29

	)

447 
	#OSF_SYS_«c˚±
 30

	)

448 
	#OSF_SYS_ngë≥î«me
 31

	)

449 
	#OSF_SYS_ngësock«me
 32

	)

451 
	#OSF_SYS_ªcvmsg
 27

	)

452 
	#OSF_SYS_£ndmsg
 28

	)

453 
	#OSF_SYS_ªcv‰om
 29

	)

454 
	#OSF_SYS_ac˚±
 30

	)

455 
	#OSF_SYS_gë≥î«me
 31

	)

456 
	#OSF_SYS_gësock«me
 32

	)

458 
	#OSF_SYS_ac˚ss
 33

	)

459 
	#OSF_SYS_chÊags
 34

	)

460 
	#OSF_SYS_fchÊags
 35

	)

461 
	#OSF_SYS_sync
 36

	)

462 
	#OSF_SYS_kûl
 37

	)

463 
	#OSF_SYS_ﬁd_°©
 38

	)

464 
	#OSF_SYS_£çgid
 39

	)

465 
	#OSF_SYS_ﬁd_l°©
 40

	)

466 
	#OSF_SYS_dup
 41

	)

467 
	#OSF_SYS_pùe
 42

	)

468 
	#OSF_SYS_£t_¥ogøm_©åibuãs
 43

	)

469 
	#OSF_SYS_¥ofû
 44

	)

470 
	#OSF_SYS_›í
 45

	)

472 
	#OSF_SYS_gëgid
 47

	)

473 
	#OSF_SYS_sig¥ocmask
 48

	)

474 
	#OSF_SYS_gëlogö
 49

	)

475 
	#OSF_SYS_£éogö
 50

	)

476 
	#OSF_SYS_ac˘
 51

	)

477 
	#OSF_SYS_sig≥ndög
 52

	)

478 
	#OSF_SYS_io˘l
 54

	)

479 
	#OSF_SYS_ªboŸ
 55

	)

480 
	#OSF_SYS_ªvoke
 56

	)

481 
	#OSF_SYS_symlök
 57

	)

482 
	#OSF_SYS_ªadlök
 58

	)

483 
	#OSF_SYS_execve
 59

	)

484 
	#OSF_SYS_umask
 60

	)

485 
	#OSF_SYS_chroŸ
 61

	)

486 
	#OSF_SYS_ﬁd_f°©
 62

	)

487 
	#OSF_SYS_gëpgΩ
 63

	)

488 
	#OSF_SYS_gë∑gesize
 64

	)

489 
	#OSF_SYS_mªm≠
 65

	)

490 
	#OSF_SYS_vf‹k
 66

	)

491 
	#OSF_SYS_°©
 67

	)

492 
	#OSF_SYS_l°©
 68

	)

493 
	#OSF_SYS_sbrk
 69

	)

494 
	#OSF_SYS_s°k
 70

	)

495 
	#OSF_SYS_mm≠
 71

	)

496 
	#OSF_SYS_ovadvi£
 72

	)

497 
	#OSF_SYS_munm≠
 73

	)

498 
	#OSF_SYS_m¥Ÿe˘
 74

	)

499 
	#OSF_SYS_madvi£
 75

	)

500 
	#OSF_SYS_ﬁd_vh™gup
 76

	)

501 
	#OSF_SYS_kmodˇŒ
 77

	)

502 
	#OSF_SYS_möc‹e
 78

	)

503 
	#OSF_SYS_gëgroups
 79

	)

504 
	#OSF_SYS_£tgroups
 80

	)

505 
	#OSF_SYS_ﬁd_gëpgΩ
 81

	)

506 
	#OSF_SYS_£çgΩ
 82

	)

507 
	#OSF_SYS_£tôimî
 83

	)

508 
	#OSF_SYS_ﬁd_waô
 84

	)

509 
	#OSF_SYS_èbÀ
 85

	)

510 
	#OSF_SYS_gëôimî
 86

	)

511 
	#OSF_SYS_gëho°«me
 87

	)

512 
	#OSF_SYS_£tho°«me
 88

	)

513 
	#OSF_SYS_gëdèbÀsize
 89

	)

514 
	#OSF_SYS_dup2
 90

	)

515 
	#OSF_SYS_f°©
 91

	)

516 
	#OSF_SYS_f˙é
 92

	)

517 
	#OSF_SYS_£À˘
 93

	)

518 
	#OSF_SYS_pﬁl
 94

	)

519 
	#OSF_SYS_fsync
 95

	)

520 
	#OSF_SYS_£çri‹ôy
 96

	)

521 
	#OSF_SYS_sockë
 97

	)

522 
	#OSF_SYS_c⁄√˘
 98

	)

523 #ifde‡ 
COMPAT_43


524 
	#OSF_SYS_ac˚±
 99

	)

526 
	#OSF_SYS_ﬁd_ac˚±
 99

	)

528 
	#OSF_SYS_gë¥i‹ôy
 100

	)

529 #ifde‡ 
COMPAT_43


530 
	#OSF_SYS_£nd
 101

	)

531 
	#OSF_SYS_ªcv
 102

	)

533 
	#OSF_SYS_ﬁd_£nd
 101

	)

534 
	#OSF_SYS_ﬁd_ªcv
 102

	)

536 
	#OSF_SYS_sigªtu∫
 103

	)

537 
	#OSF_SYS_böd
 104

	)

538 
	#OSF_SYS_£tsock›t
 105

	)

539 
	#OSF_SYS_li°í
 106

	)

540 
	#OSF_SYS_∂ock
 107

	)

541 
	#OSF_SYS_ﬁd_sigvec
 108

	)

542 
	#OSF_SYS_ﬁd_sigblock
 109

	)

543 
	#OSF_SYS_ﬁd_sig£tmask
 110

	)

544 
	#OSF_SYS_sigsu•íd
 111

	)

545 
	#OSF_SYS_sig°ack
 112

	)

546 #ifde‡ 
COMPAT_43


547 
	#OSF_SYS_ªcvmsg
 113

	)

548 
	#OSF_SYS_£ndmsg
 114

	)

550 
	#OSF_SYS_ﬁd_ªcvmsg
 113

	)

551 
	#OSF_SYS_ﬁd_£ndmsg
 114

	)

554 
	#OSF_SYS_gëtimeofday
 116

	)

555 
	#OSF_SYS_gërußge
 117

	)

556 
	#OSF_SYS_gësock›t
 118

	)

557 
	#OSF_SYS_ªadv
 120

	)

558 
	#OSF_SYS_wrôev
 121

	)

559 
	#OSF_SYS_£âimeofday
 122

	)

560 
	#OSF_SYS_fchown
 123

	)

561 
	#OSF_SYS_fchmod
 124

	)

562 #ifde‡ 
COMPAT_43


563 
	#OSF_SYS_ªcv‰om
 125

	)

565 
	#OSF_SYS_ﬁd_ªcv‰om
 125

	)

567 
	#OSF_SYS_£åeuid
 126

	)

568 
	#OSF_SYS_£åegid
 127

	)

569 
	#OSF_SYS_ª«me
 128

	)

570 
	#OSF_SYS_åunˇã
 129

	)

571 
	#OSF_SYS_·runˇã
 130

	)

572 
	#OSF_SYS_Êock
 131

	)

573 
	#OSF_SYS_£tgid
 132

	)

574 
	#OSF_SYS_£ndto
 133

	)

575 
	#OSF_SYS_shutdown
 134

	)

576 
	#OSF_SYS_sockë∑ú
 135

	)

577 
	#OSF_SYS_mkdú
 136

	)

578 
	#OSF_SYS_rmdú
 137

	)

579 
	#OSF_SYS_utimes
 138

	)

581 
	#OSF_SYS_adjtime
 140

	)

582 #ifde‡ 
COMPAT_43


583 
	#OSF_SYS_gë≥î«me
 141

	)

585 
	#OSF_SYS_ﬁd_gë≥î«me
 141

	)

587 
	#OSF_SYS_gëho°id
 142

	)

588 
	#OSF_SYS_£tho°id
 143

	)

589 
	#OSF_SYS_gëæimô
 144

	)

590 
	#OSF_SYS_£ålimô
 145

	)

591 
	#OSF_SYS_ﬁd_kûÕg
 146

	)

592 
	#OSF_SYS_£tsid
 147

	)

593 
	#OSF_SYS_quŸa˘l
 148

	)

594 
	#OSF_SYS_ﬁdquŸa
 149

	)

595 #ifde‡ 
COMPAT_43


596 
	#OSF_SYS_gësock«me
 150

	)

598 
	#OSF_SYS_ﬁd_gësock«me
 150

	)

600 
	#OSF_SYS_pid_block
 153

	)

601 
	#OSF_SYS_pid_unblock
 154

	)

602 
	#OSF_SYS_siga˘i⁄
 156

	)

603 
	#OSF_SYS_sigwaô¥im
 157

	)

604 
	#OSF_SYS_nfssvc
 158

	)

605 
	#OSF_SYS_gëdúíåõs
 159

	)

606 
	#OSF_SYS_°©fs
 160

	)

607 
	#OSF_SYS_f°©fs
 161

	)

608 
	#OSF_SYS_async_d´m⁄
 163

	)

609 
	#OSF_SYS_gëfh
 164

	)

610 
	#OSF_SYS_gëdomaö«me
 165

	)

611 
	#OSF_SYS_£tdomaö«me
 166

	)

612 
	#OSF_SYS_exp‹tfs
 169

	)

613 
	#OSF_SYS_Æt_∂ock
 181

	)

614 
	#OSF_SYS_gëm¡
 184

	)

615 
	#OSF_SYS_Æt_sig≥ndög
 187

	)

616 
	#OSF_SYS_Æt_£tsid
 188

	)

617 
	#OSF_SYS_sw≠⁄
 199

	)

618 
	#OSF_SYS_msg˘l
 200

	)

619 
	#OSF_SYS_msggë
 201

	)

620 
	#OSF_SYS_msgrcv
 202

	)

621 
	#OSF_SYS_msg¢d
 203

	)

622 
	#OSF_SYS_£m˘l
 204

	)

623 
	#OSF_SYS_£mgë
 205

	)

624 
	#OSF_SYS_£m›
 206

	)

625 
	#OSF_SYS_u«me
 207

	)

626 
	#OSF_SYS_lchown
 208

	)

627 
	#OSF_SYS_shm©
 209

	)

628 
	#OSF_SYS_shm˘l
 210

	)

629 
	#OSF_SYS_shmdt
 211

	)

630 
	#OSF_SYS_shmgë
 212

	)

631 
	#OSF_SYS_mvÆid
 213

	)

632 
	#OSF_SYS_gëaddªssc⁄f
 214

	)

633 
	#OSF_SYS_m¶ìp
 215

	)

634 
	#OSF_SYS_mwakeup
 216

	)

635 
	#OSF_SYS_msync
 217

	)

636 
	#OSF_SYS_sig«l
 218

	)

637 
	#OSF_SYS_utc_gëtime
 219

	)

638 
	#OSF_SYS_utc_adjtime
 220

	)

639 
	#OSF_SYS_£curôy
 222

	)

640 
	#OSF_SYS_klﬂdˇŒ
 223

	)

641 
	#OSF_SYS_gëpgid
 233

	)

642 
	#OSF_SYS_gësid
 234

	)

643 
	#OSF_SYS_sigÆt°ack
 235

	)

644 
	#OSF_SYS_waôid
 236

	)

645 
	#OSF_SYS_¥io˙é£t
 237

	)

646 
	#OSF_SYS_sig£nd£t
 238

	)

647 
	#OSF_SYS_£t_•ecuœtive
 239

	)

648 
	#OSF_SYS_msfs_sysˇŒ
 240

	)

649 
	#OSF_SYS_sysöfo
 241

	)

650 
	#OSF_SYS_uadmö
 242

	)

651 
	#OSF_SYS_fu£r
 243

	)

652 
	#OSF_SYS_¥›li°_sysˇŒ
 244

	)

653 
	#OSF_SYS_¡p_adjtime
 245

	)

654 
	#OSF_SYS_¡p_gëtime
 246

	)

655 
	#OSF_SYS_∑thc⁄f
 247

	)

656 
	#OSF_SYS_Â©hc⁄f
 248

	)

657 
	#OSF_SYS_uswôch
 250

	)

658 
	#OSF_SYS_u¶ìp_thªad
 251

	)

659 
	#OSF_SYS_aud˙é
 252

	)

660 
	#OSF_SYS_audgí
 253

	)

661 
	#OSF_SYS_sysfs
 254

	)

662 
	#OSF_SYS_subOSF_SYS_öfo
 255

	)

663 
	#OSF_SYS_gësysöfo
 256

	)

664 
	#OSF_SYS_£tsysöfo
 257

	)

665 
	#OSF_SYS_afs_sysˇŒ
 258

	)

666 
	#OSF_SYS_sw≠˘l
 259

	)

667 
	#OSF_SYS_mem˙é
 260

	)

668 
	#OSF_SYS_fd©async
 261

	)

669 #i‡
deföed
(
MTA
)

670 
	#OSF_SYS_gëthªadid
 500

	)

671 
	#OSF_SYS_öô_°¨t
 501

	)

672 
	#OSF_SYS_öô
 502

	)

673 
	#OSF_SYS_öô_com∂ëe
 503

	)

674 
	#OSF_SYS_di°ribuã
 504

	)

675 
	#OSF_SYS_time
 505

	)

677 
	#OSF_SYS_lock_acquúe
 507

	)

678 
	#OSF_SYS_lock_ªÀa£
 508

	)

679 
	#OSF_SYS_Êag_acquúe
 509

	)

680 
	#OSF_SYS_Êag_ªÀa£
 510

	)

681 
	#OSF_SYS_öc_Êag
 511

	)

682 
	#OSF_SYS_pﬁl_Êag
 512

	)

683 
	#OSF_SYS_waô_gt_Êag
 513

	)

684 
	#OSF_SYS_waô_…_Êag
 514

	)

686 
	#OSF_SYS_¥ötf
 516

	)

687 
	#OSF_SYS_MTA_hÆt
 517

	)

688 
	#OSF_SYS_b¨rõr
 518

	)

689 
	#OSF_SYS_mem‹y_∑ge_round
 519

	)

690 
	#OSF_SYS_MTA_°¨t
 520

	)

691 
	#OSF_SYS_WAIT
 521

	)

692 
	#OSF_SYS_STATS
 530

	)

694 
	#OSF_SYS_BARRIER_STATS
 531

	)

695 
	#OSF_SYS_LOCK_STATS
 532

	)

697 
	#OSF_SYS_BARRIER_INSTR
 533

	)

698 
	#OSF_SYS_QUEISCE
 534

	)

699 
	#OSF_SYS_FASTFWD
 550

	)

700 
	#OSF_SYS_RANDOM
 551

	)

701 
	#OSF_SYS_MEM
 552

	)

702 
	#OSF_SYS_PRINTGP
 553

	)

703 
	#OSF_SYS_SHDADDR
 554

	)

704 
	#OSF_SYS_STOPSIM
 555

	)

705 
	#OSF_SYS_PRINTINSTR
 556

	)

706 
	#OSF_SYS_LOCKADDR
 557

	)

707 
	#OSF_SYS_IDEAL_LOCKACQ
 558

	)

708 
	#OSF_SYS_IDEAL_LOCKREL
 559

	)

709 
	#OSF_SYS_IDEAL_BAR
 560

	)

713 #ifde‡
LOCK_OPTI


714 
md_addr_t
 
	glock_addr
[
MAXTHREADS
][
MAXLOCK
];

715 
	glock_èû
[
MAXTHREADS
];

717 
FILE
 *
Â_åa˚
;

720 
	gLock_Acquúe
[
MAXLOCK
] = {0};

721 
	gLock_waô_id
[
MAXLOCK
][MAXLOCK];

722 
	gLock_hód
[
MAXLOCK
];

723 
	gLock_èû
[
MAXLOCK
];

724 
	gLock_waô_num
[
MAXLOCK
];

725 
	glock_waôög
[
MAXTHREADS
];

728 
	gB¨rõr_Êag
[
MAXTHREADS
];

729 
	gB¨rõr_num
[
MAXBARRIER
];

730 
	gb¨rõr_ãmp
 = 0;

731 
	gb¨rõr_waôög
[
MAXTHREADS
];

733 
cou¡î_t
 
TŸÆB¨rõrs
;

734 
cou¡î_t
 
TŸÆLocks
;

735 
gíîÆ_°©
 (
id
);

736 
MTA_¥ötInfo
 (
id
);

737 
	gtmpNum
;

738 
numThªads
[
CLUSTERS
];

739 
mè_maxthªads
;

740 
cﬁÀ˘_°©s
;

741 
ÊushImpSèts
;

743 
cﬁÀ˘_b¨rõr_°©s
[
CLUSTERS
];

744 
cﬁÀ˘_b¨rõr_ªÀa£
;

745 
md_addr_t
 
	gb¨rõr_addr
;

746 
	gcﬁÀ˘_b¨rõr_°©s_own
[
CLUSTERS
];

747 
cﬁÀ˘_lock_°©s
[
CLUSTERS
];

748 
md_addr_t
 
LockInôPC
;

749 
cou¡î_t
 
sim_cy˛e
;

750 
°¨tTakögSèti°ics
;

751 
cuºítPha£
;

752 
cou¡î_t
 
∑øŒñ_sim_cy˛e
;

753 
quõs˚Såu˘
 
quõs˚AddrSåu˘
[
CLUSTERS
];

754 
ÊushWrôeBuf„r
 (
thªadid
);

755 
Á°fwd
;

756 
°›sim
;

757 
ac˚ss_mem
;

758 
ac˚ss_mem_id
;

759 
ˇche_t
 *
ˇche_dl1
[
CLUSTERS
];

762 
	sxœã_èbÀ_t


764 
	mèrgë_vÆ
;

765 
	mho°_vÆ
;

769 
	$xœã_¨g
 (
èrgë_vÆ
, 
xœã_èbÀ_t
 *
m≠
, 
m≠_sz
, *
«me
)

771 
i
;

773 
i
 = 0; i < 
m≠_sz
; i++)

775 i‡(
èrgë_vÆ
 =
m≠
[
i
].target_val)

776  
m≠
[
i
].
ho°_vÆ
;

780 
	`w¨n
 ("couldÇŸÅøn¶©ê¨gumíàf‹ `%s': %d", 
«me
, 
èrgë_vÆ
);

781  
èrgë_vÆ
;

782 
	}
}

786 
	#MAXBUFSIZE
 1024

	)

792 
	#NUM_IOCTL_BYTES
 128

	)

795 
	#OSF_TIOCGETP
 0x40067408

	)

796 
	#OSF_FIONREAD
 0x4004667f

	)

800 
	sosf_°©buf


802 
w‹d_t
 
	mosf_°_dev
;

803 
w‹d_t
 
	mosf_°_öo
;

804 
w‹d_t
 
	mosf_°_mode
;

805 
hÆf_t
 
	mosf_°_∆ök
;

806 
hÆf_t
 
	m∑d0
;

807 
w‹d_t
 
	mosf_°_uid
;

808 
w‹d_t
 
	mosf_°_gid
;

809 
w‹d_t
 
	mosf_°_rdev
;

810 
w‹d_t
 
	m∑d1
;

811 
qw‹d_t
 
	mosf_°_size
;

812 
w‹d_t
 
	mosf_°_©ime
;

813 
w‹d_t
 
	mosf_°_•¨e1
;

814 
w‹d_t
 
	mosf_°_mtime
;

815 
w‹d_t
 
	mosf_°_•¨e2
;

816 
w‹d_t
 
	mosf_°_˘ime
;

817 
w‹d_t
 
	mosf_°_•¨e3
;

818 
w‹d_t
 
	mosf_°_blksize
;

819 
w‹d_t
 
	mosf_°_blocks
;

820 
w‹d_t
 
	mosf_°_gínum
;

821 
w‹d_t
 
	mosf_°_•¨e4
;

824 
	sosf_sgâyb


826 
byã_t
 
	msg_i•ìd
;

827 
byã_t
 
	msg_o•ìd
;

828 
byã_t
 
	msg_îa£
;

829 
byã_t
 
	msg_kûl
;

830 
shÆf_t
 
	msg_Êags
;

833 
	#OSF_NSIG
 32

	)

835 
	#OSF_SIG_BLOCK
 1

	)

836 
	#OSF_SIG_UNBLOCK
 2

	)

837 
	#OSF_SIG_SETMASK
 3

	)

839 
	sosf_sigc⁄ãxt


841 
qw‹d_t
 
	msc_⁄°ack
;

842 
qw‹d_t
 
	msc_mask
;

843 
qw‹d_t
 
	msc_pc
;

844 
qw‹d_t
 
	msc_ps
;

845 
qw‹d_t
 
	msc_ªgs
[32];

846 
qw‹d_t
 
	msc_ow√dÂ
;

847 
qw‹d_t
 
	msc_Âªgs
[32];

848 
qw‹d_t
 
	msc_Â¸
;

849 
qw‹d_t
 
	msc_Â_c⁄åﬁ
;

852 
	sosf_°©fs


854 
shÆf_t
 
	mf_ty≥
;

855 
shÆf_t
 
	mf_Êags
;

856 
w‹d_t
 
	mf_fsize
;

857 
w‹d_t
 
	mf_bsize
;

858 
w‹d_t
 
	mf_blocks
;

860 
w‹d_t
 
	mf_b‰ì
;

861 
w‹d_t
 
	mf_bavaû
;

862 
w‹d_t
 
	mf_fûes
;

863 
w‹d_t
 
	mf_f‰ì
;

864 
qw‹d_t
 
	mf_fsid
;

865 
w‹d_t
 
	mf_•¨e
[9];

868 
	sosf_timevÆ


870 
sw‹d_t
 
	mosf_tv_£c
;

871 
sw‹d_t
 
	mosf_tv_u£c
;

874 
	sosf_timez⁄e


876 
sw‹d_t
 
	mosf_tz_möuãswe°
;

877 
sw‹d_t
 
	mosf_tz_d°time
;

882 
	sosf_rußge


884 
osf_timevÆ
 
	mosf_ru_utime
;

885 
osf_timevÆ
 
	mosf_ru_°ime
;

886 
sw‹d_t
 
	mosf_ru_maxrss
;

887 
sw‹d_t
 
	mosf_ru_ixrss
;

888 
sw‹d_t
 
	mosf_ru_idrss
;

889 
sw‹d_t
 
	mosf_ru_i§ss
;

890 
sw‹d_t
 
	mosf_ru_möÊt
;

891 
sw‹d_t
 
	mosf_ru_majÊt
;

892 
sw‹d_t
 
	mosf_ru_nsw≠
;

893 
sw‹d_t
 
	mosf_ru_öblock
;

894 
sw‹d_t
 
	mosf_ru_oublock
;

895 
sw‹d_t
 
	mosf_ru_msg¢d
;

896 
sw‹d_t
 
	mosf_ru_msgrcv
;

897 
sw‹d_t
 
	mosf_ru_nsig«ls
;

898 
sw‹d_t
 
	mosf_ru_nvcsw
;

899 
sw‹d_t
 
	mosf_ru_nivcsw
;

902 
	sosf_æimô


904 
qw‹d_t
 
	mosf_æim_cur
;

905 
qw‹d_t
 
	mosf_æim_max
;

908 
	sosf_sockaddr


910 
hÆf_t
 
	mß_Ámûy
;

911 
byã_t
 
	mß_d©a
[24];

914 
	sosf_iovec


916 
md_addr_t
 
	miov_ba£
;

917 
w‹d_t
 
	miov_Àn
;

918 
w‹d_t
 
	m∑d
;

922 
	#OSF_DIRENT_SZ
(
STR
Ë\

	)

923 ((
	gw‹d_t
Ë+ 2*(
	ghÆf_t
Ë+ (((
°æí
(
STR
) + 1) + 3)/4)*4)

926 
	sosf_dúít


928 
w‹d_t
 
	md_öo
;

929 
hÆf_t
 
	md_ª˛í
;

930 
hÆf_t
 
	md_«mÀn
;

931 
	md_«me
[256];

941 
	#OSF_O_RDONLY
 0x0000

	)

942 
	#OSF_O_WRONLY
 0x0001

	)

943 
	#OSF_O_RDWR
 0x0002

	)

944 
	#OSF_O_NONBLOCK
 0x0004

	)

945 
	#OSF_O_APPEND
 0x0008

	)

946 
	#OSF_O_CREAT
 0x0200

	)

947 
	#OSF_O_TRUNC
 0x0400

	)

948 
	#OSF_O_EXCL
 0x0800

	)

949 
	#OSF_O_NOCTTY
 0x1000

	)

950 
	#OSF_O_SYNC
 0x4000

	)

955 
	mosf_Êag
;

956 
	mloˇl_Êag
;

957 } 
	gosf_Êag_èbÀ
[] =

960 #ifde‡
_MSC_VER


962 
OSF_O_RDONLY
, 
_O_RDONLY
},

964 
OSF_O_WRONLY
, 
_O_WRONLY
},

966 
OSF_O_RDWR
, 
_O_RDWR
},

968 
OSF_O_APPEND
, 
_O_APPEND
},

970 
OSF_O_CREAT
, 
_O_CREAT
},

972 
OSF_O_TRUNC
, 
_O_TRUNC
},

974 
OSF_O_EXCL
, 
_O_EXCL
},

975 #ifde‡
_O_NONBLOCK


977 
OSF_O_NONBLOCK
, 
_O_NONBLOCK
},

979 #ifde‡
_O_NOCTTY


981 
OSF_O_NOCTTY
, 
_O_NOCTTY
},

983 #ifde‡
_O_SYNC


985 
OSF_O_SYNC
, 
_O_SYNC
},

989 
OSF_O_RDONLY
, 
O_RDONLY
},

991 
OSF_O_WRONLY
, 
O_WRONLY
},

993 
OSF_O_RDWR
, 
O_RDWR
},

995 
OSF_O_APPEND
, 
O_APPEND
},

997 
OSF_O_CREAT
, 
O_CREAT
},

999 
OSF_O_TRUNC
, 
O_TRUNC
},

1001 
OSF_O_EXCL
, 
O_EXCL
},

1003 
OSF_O_NONBLOCK
, 
O_NONBLOCK
},

1005 
OSF_O_NOCTTY
, 
O_NOCTTY
},

1006 #ifde‡
O_SYNC


1008 
OSF_O_SYNC
, 
O_SYNC
},

1013 
	#OSF_NFLAGS
 ((
osf_Êag_èbÀ
)/(osf_Êag_èbÀ[0]))

	)

1016 
qw‹d_t
 
	gSigMask
 = 0;

1018 
qw‹d_t
 
	gsiga˘i⁄_¨øy
[
OSF_NSIG
] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

1021 
	#OSF_SO_DEBUG
 0x0001

	)

1022 
	#OSF_SO_ACCEPTCONN
 0x0002

	)

1023 
	#OSF_SO_REUSEADDR
 0x0004

	)

1024 
	#OSF_SO_KEEPALIVE
 0x0008

	)

1025 
	#OSF_SO_DONTROUTE
 0x0010

	)

1026 
	#OSF_SO_BROADCAST
 0x0020

	)

1027 
	#OSF_SO_USELOOPBACK
 0x0040

	)

1028 
	#OSF_SO_LINGER
 0x0080

	)

1029 
	#OSF_SO_OOBINLINE
 0x0100

	)

1030 
	#OSF_SO_REUSEPORT
 0x0200

	)

1032 
xœã_èbÀ_t
 
	gsock›t_m≠
[] = {

1033 {
OSF_SO_DEBUG
, 
SO_DEBUG
},

1034 #ifde‡
SO_ACCEPTCONN


1035 {
OSF_SO_ACCEPTCONN
, 
SO_ACCEPTCONN
},

1037 {
OSF_SO_REUSEADDR
, 
SO_REUSEADDR
},

1038 {
OSF_SO_KEEPALIVE
, 
SO_KEEPALIVE
},

1039 {
OSF_SO_DONTROUTE
, 
SO_DONTROUTE
},

1040 {
OSF_SO_BROADCAST
, 
SO_BROADCAST
},

1041 #ifde‡
SO_USELOOPBACK


1042 {
OSF_SO_USELOOPBACK
, 
SO_USELOOPBACK
},

1044 {
OSF_SO_LINGER
, 
SO_LINGER
},

1045 {
OSF_SO_OOBINLINE
, 
SO_OOBINLINE
},

1046 #ifde‡
SO_REUSEPORT


1047 {
OSF_SO_REUSEPORT
, 
SO_REUSEPORT
}

1052 
	#OSF_TCP_NODELAY
 0x01

	)

1053 
	#OSF_TCP_MAXSEG
 0x02

	)

1054 
	#OSF_TCP_RPTR2RXT
 0x03

	)

1055 
	#OSF_TCP_KEEPIDLE
 0x04

	)

1056 
	#OSF_TCP_KEEPINTVL
 0x05

	)

1057 
	#OSF_TCP_KEEPCNT
 0x06

	)

1058 
	#OSF_TCP_KEEPINIT
 0x07

	)

1059 
	#OSF_TCP_PUSH
 0x08

	)

1060 
	#OSF_TCP_NODELACK
 0x09

	)

1062 
xœã_èbÀ_t
 
	gt˝›t_m≠
[] = {

1063 {
OSF_TCP_NODELAY
, 
TCP_NODELAY
},

1064 {
OSF_TCP_MAXSEG
, 
TCP_MAXSEG
},

1065 #ifde‡
TCP_RPTR2RXT


1066 {
OSF_TCP_RPTR2RXT
, 
TCP_RPTR2RXT
},

1068 #ifde‡
TCP_KEEPIDLE


1069 {
OSF_TCP_KEEPIDLE
, 
TCP_KEEPIDLE
},

1071 #ifde‡
TCP_KEEPINTVL


1072 {
OSF_TCP_KEEPINTVL
, 
TCP_KEEPINTVL
},

1074 #ifde‡
TCP_KEEPCNT


1075 {
OSF_TCP_KEEPCNT
, 
TCP_KEEPCNT
},

1077 #ifde‡
TCP_KEEPINIT


1078 {
OSF_TCP_KEEPINIT
, 
TCP_KEEPINIT
},

1080 #ifde‡
TCP_PUSH


1081 {
OSF_TCP_PUSH
, 
TCP_PUSH
},

1083 #ifde‡
TCP_NODELACK


1084 {
OSF_TCP_NODELACK
, 
TCP_NODELACK
}

1089 
	#OSF_SOL_SOCKET
 0xfff‡

	)

1090 
	#OSF_SOL_IP
 0

	)

1091 
	#OSF_SOL_TCP
 6

	)

1092 
	#OSF_SOL_UDP
 17

	)

1094 
xœã_èbÀ_t
 
	gsockÀvñ_m≠
[] = {

1095 #i‡
deföed
(
__svr4__
Ë|| deföed(
__osf__
Ë|| deföed(
_AIX
)

1096 {
OSF_SOL_SOCKET
, 
SOL_SOCKET
},

1097 {
OSF_SOL_IP
, 
IPPROTO_IP
},

1098 {
OSF_SOL_TCP
, 
IPPROTO_TCP
},

1099 {
OSF_SOL_UDP
, 
IPPROTO_UDP
}

1101 {
OSF_SOL_SOCKET
, 
SOL_SOCKET
},

1102 {
OSF_SOL_IP
, 
SOL_IP
},

1103 {
OSF_SOL_TCP
, 
SOL_TCP
},

1104 {
OSF_SOL_UDP
, 
SOL_UDP
}

1109 
	#OSF_AF_UNSPEC
 0

	)

1110 
	#OSF_AF_UNIX
 1

	)

1111 
	#OSF_AF_INET
 2

	)

1112 
	#OSF_AF_IMPLINK
 3

	)

1113 
	#OSF_AF_PUP
 4

	)

1114 
	#OSF_AF_CHAOS
 5

	)

1115 
	#OSF_AF_NS
 6

	)

1116 
	#OSF_AF_ISO
 7

	)

1118 
xœã_èbÀ_t
 
	gÁmûy_m≠
[] = {

1119 {
OSF_AF_UNSPEC
, 
AF_UNSPEC
},

1120 {
OSF_AF_UNIX
, 
AF_UNIX
},

1121 {
OSF_AF_INET
, 
AF_INET
},

1122 #ifde‡
AF_IMPLINK


1123 {
OSF_AF_IMPLINK
, 
AF_IMPLINK
},

1125 #ifde‡
AF_PUP


1126 {
OSF_AF_PUP
, 
AF_PUP
},

1128 #ifde‡
AF_CHAOS


1129 {
OSF_AF_CHAOS
, 
AF_CHAOS
},

1131 #ifde‡
AF_NS


1132 {
OSF_AF_NS
, 
AF_NS
},

1134 #ifde‡
AF_ISO


1135 {
OSF_AF_ISO
, 
AF_ISO
}

1140 
	#OSF_SOCK_STREAM
 1

	)

1141 
	#OSF_SOCK_DGRAM
 2

	)

1142 
	#OSF_SOCK_RAW
 3

	)

1143 
	#OSF_SOCK_RDM
 4

	)

1144 
	#OSF_SOCK_SEQPACKET
 5

	)

1146 
xœã_èbÀ_t
 
	gsockty≥_m≠
[] = {

1147 {
OSF_SOCK_STREAM
, 
SOCK_STREAM
},

1148 {
OSF_SOCK_DGRAM
, 
SOCK_DGRAM
},

1149 {
OSF_SOCK_RAW
, 
SOCK_RAW
},

1150 {
OSF_SOCK_RDM
, 
SOCK_RDM
},

1151 {
OSF_SOCK_SEQPACKET
, 
SOCK_SEQPACKET
}

1155 
	#OSF_TBL_SYSINFO
 12

	)

1156 
	sosf_tbl_sysöfo


1158 
	msi_u£r
;

1159 
	msi_ni˚
;

1160 
	msi_sys
;

1161 
	msi_idÀ
;

1162 
	msi_hz
;

1163 
	msi_phz
;

1164 
	msi_boŸtime
;

1165 
	mwaô
;

1169 
	$AddToTheSh¨edAddrLi°
 (
addr
, 
size
)

1171 
sh¨edAddªssLi°_s
 *
tmpPå1
, *
tmpPå2
;

1172 
ödx
;

1174 
ödx
 = (Ë(((Ë
addr
 & 1016) >> 3);

1175 
ödx
 = 0;

1177 i‡(
sh¨edAddªssLi°
[
ödx
] =
NULL
)

1179 
sh¨edAddªssLi°
[
ödx
] = (
sh¨edAddªssLi°_s
 *Ë
	`mÆloc
 ( (sharedAddressList_s));

1180 
sh¨edAddªssLi°
[
ödx
]->
addªss
 = 
addr
;

1181 
sh¨edAddªssLi°
[
ödx
]->
size
 = size;

1182 
sh¨edAddªssLi°
[
ödx
]->
√xt
 = 
NULL
;

1186 
tmpPå1
 = 
sh¨edAddªssLi°
[
ödx
];

1187 
tmpPå2
 = 
sh¨edAddªssLi°
[
ödx
];

1188 
tmpPå1
 !
NULL
)

1190 
tmpPå2
 = 
tmpPå1
;

1191 
tmpPå1
 =ÅmpPå1->
√xt
;

1193 
tmpPå2
->
√xt
 = (
sh¨edAddªssLi°_s
 *Ë
	`mÆloc
 ( (sharedAddressList_s));

1194 
tmpPå2
->
√xt
->
addªss
 = 
addr
;

1195 
tmpPå2
->
√xt
->
size
 = size;

1196 
tmpPå2
->
√xt
->√xà
NULL
;

1199 
tmpPå1
 = 
sh¨edAddªssLi°
;

1200 
tmpPå1
 !
NULL
)

1202 
	`¥ötf
 ("Add∏%Œx, Sizê%d\n", (Ë
addr
, (Ë
size
);

1203 
tmpPå1
 =ÅmpPå1->
√xt
;

1206 
	}
}

1208 #i‡
deföed
(
MTA
)

1210 
	$¥öt_°©s
 (
c⁄ãxt
 * 
cuºít
)

1212 
	`¥ötf
 ("TŸÆÇumbî o‡ö°ru˘i⁄†execuãd = %d (%d)\n", 
cuºít
->
sim_num_ö¢
, cuºít->
id
);

1215 
	}
}

1218 
	$InôülizeRUU
 (
c⁄ãxt
 * 
de°
, c⁄ãxà* 
§c
)

1220 
˙t
, 
i
, 
RUUIndx
;

1221 
RUU_°©i⁄
 *
RUUDe°
, *
RUUSrc
, *
rs
;

1222 
RS_lök
 *
lök
, *
√wlök
;

1225 
RS_lök
 *
ãmpRS
;

1228 
i
 = 0; i < 
RUU_size
; i++)

1230 
	`¥ötf
 ("Index o‡%d = %d, IR = %lx\n", 
i
, 
§c
->
RUU
[i].
ödex
, src->RUU[i].
IR
);

1231 
ãmpRS
 = 
§c
->
RUU
[
i
].
odï_li°
[1];

1232 
ãmpRS
 !
NULL
)

1234 
	`¥ötf
 ("X = %d ", 
ãmpRS
->
rs
->
ödex
);

1235 
ãmpRS
 =ÅempRS->
√xt
;

1237 
	`¥ötf
 ("\n");

1242 
˙t
 = 0; c¡ < 
RUU_size
; cnt++)

1244 
RUUDe°
 = &(
de°
->
RUU
[
˙t
]);

1245 
RUUSrc
 = &(
§c
->
RUU
[
˙t
]);

1247 
RUUDe°
->
ödex
 = 
RUUSrc
->index;

1248 
RUUDe°
->
thªadid
 = 
de°
->
id
;

1249 
RUUDe°
->
IR
 = 
RUUSrc
->IR;

1250 
RUUDe°
->
›
 = 
RUUSrc
->op;

1251 
RUUDe°
->
PC
 = 
RUUSrc
->PC;

1252 
RUUDe°
->
√xt_PC
 = 
RUUSrc
->next_PC;

1253 
RUUDe°
->
¥ed_PC
 = 
RUUSrc
->pred_PC;

1254 
RUUDe°
->
ö_LSQ
 = 
RUUSrc
->in_LSQ;

1255 
RUUDe°
->
ó_comp
 = 
RUUSrc
->ea_comp;

1256 
RUUDe°
->
ªcovî_ö°
 = 
RUUSrc
->recover_inst;

1257 
RUUDe°
->
°ack_ªcovî_idx
 = 
RUUSrc
->stack_recover_idx;

1259 
	`¥ötf
 ("YOU HAVE NOT INITALIZED BRANCH PREDICTOR INFO IN RUU RESULTS MAY NOT CORRECT\n");

1260 
RUUDe°
->
•ec_mode
 = 
RUUSrc
->spec_mode;

1261 
RUUDe°
->
addr
 = 
RUUSrc
->addr;

1262 
RUUDe°
->
èg
 = 
RUUSrc
->tag;

1263 
RUUDe°
->
£q
 = 
RUUSrc
->seq;

1264 
RUUDe°
->
±ø˚_£q
 = 
RUUSrc
->ptrace_seq;

1265 
RUUDe°
->
queued
 = 
RUUSrc
->queued;

1266 
RUUDe°
->
issued
 = 
RUUSrc
->issued;

1267 
RUUDe°
->
com∂ëed
 = 
RUUSrc
->completed;

1271 
RUUDe°
->
vÆ_ø
 = 
RUUSrc
->val_ra;

1272 
RUUDe°
->
vÆ_rb
 = 
RUUSrc
->val_rb;

1273 
RUUDe°
->
vÆ_rc
 = 
RUUSrc
->val_rc;

1274 
RUUDe°
->
vÆ_ø_ªsu…
 = 
RUUSrc
->val_ra_result;

1277 
RUUDe°
->
⁄ames
[0] = 
RUUSrc
->onames[0];

1278 
RUUDe°
->
⁄ames
[1] = 
RUUSrc
->onames[1];

1287 
i
 = 0; i < 
MAX_ODEPS
; i++)

1289 
lök
 = 
RUUSrc
->
odï_li°
[
i
];

1290 
lök
)

1292 
RUUIndx
 = 
lök
->
rs
->
ödex
;

1293 
rs
 = &(
de°
->
RUU
[
RUUIndx
]);

1294 
	`RSLINK_NEW
 (
√wlök
, 
rs
);

1295 
√wlök
->
x
.
whí
 = 
lök
->x.when;

1297 
√wlök
->
√xt
 = 
RUUDe°
->
odï_li°
[
i
];

1298 
RUUDe°
->
odï_li°
[
i
] = 
√wlök
;

1299 
lök
 =Üök->
√xt
;

1302 
i
 = 0; i < 
MAX_IDEPS
; i++)

1304 
RUUDe°
->
idï_ªady
[
i
] = 
RUUSrc
->idep_ready[i];

1305 
RUUDe°
->
whí_idï_ªady
[
i
] = 
RUUSrc
->when_idep_ready[i];

1306 
RUUDe°
->
idï_«me
[
i
] = 
RUUSrc
->idep_name[i];

1307 i‡(
RUUSrc
->
¥od
[
i
])

1308 
RUUDe°
->
¥od
[
i
] = &(
de°
->
RUU
[
RUUSrc
->¥od[i]->
ödex
]);

1310 
RUUDe°
->
¥od
[
i
] = 
NULL
;

1313 
RUUDe°
->
di•_time
 = 
RUUSrc
->disp_time;

1314 
RUUDe°
->
föish_time
 = 
RUUSrc
->finish_time;

1315 
RUUDe°
->
issue_time
 = 
RUUSrc
->issue_time;

1316 
RUUDe°
->
out1
 = 
RUUSrc
->out1;

1319 
RUUDe°
->
ﬁd¥eg
 = 
RUUSrc
->oldpreg;

1321 
RUUDe°
->
›ªg
 = 
RUUSrc
->opreg;

1324 
RUUDe°
->
˛u°î
 = 
RUUSrc
->cluster;

1325 
i
 = 0; i < 
MAX_IDEPS
; i++)

1327 
RUUDe°
->
whí_ªady
[
i
] = 
RUUSrc
->when_ready[i];

1329 
RUUDe°
->
whí_öq
 = 
RUUSrc
->when_inq;

1330 
RUUDe°
->
pb™k
 = 
RUUSrc
->pbank;

1331 
RUUDe°
->
ab™k
 = 
RUUSrc
->abank;

1332 
RUUDe°
->
ö_qwaô
 = 
RUUSrc
->in_qwait;

1333 
RUUDe°
->
‰ìd
 = 
RUUSrc
->freed;

1334 
RUUDe°
->
ùªg
[0] = 
RUUSrc
->ipreg[0];

1335 
RUUDe°
->
ùªg
[1] = 
RUUSrc
->ipreg[1];

1336 
RUUDe°
->
ùªg
[2] = 
RUUSrc
->ipreg[2];

1337 
i
 = 0; i < 
CLUSTERS
; i++)

1339 
RUUDe°
->
°_ªach
[
i
] = 
RUUSrc
->st_reach[i];

1341 
RUUDe°
->
ö°num
 = 
RUUSrc
->instnum;

1342 
RUUDe°
->
di°issue
 = 
RUUSrc
->distissue;

1346 
	}
}

1348 #ifde‡
LOCK_HARD


1349 
mesh_size
;

1350 
	#MEM_LOC_SHIFT
 1

	)

1351 
	#WAIT_TIME
 800000000

	)

1352 
	$lock_evít_íqueue
(
LOCK_EVENT
 *
evít
)

1354 
LOCK_EVENT
 *
ev
, *
¥ev
;

1356 
¥ev
 = 
NULL
, 
ev
 = 
lock_evít_queue
;Év && (”v->
whí
Ë<(
evít
->whí));Öªv =Év,Év =Év->
√xt
);

1357 i‡(
¥ev
)

1359 
evít
->
√xt
 = 
ev
;

1360 
¥ev
->
√xt
 = 
evít
;

1364 
evít
->
√xt
 = 
lock_evít_queue
;

1365 
lock_evít_queue
 = 
evít
;

1367 
	}
}

1368 
	$lock_evítq_√xãvít
()

1370 
LOCK_EVENT
 *
evít
, *
ev
, *
√xt
, *
¥ev
;

1371 
i
, 
ö£π_Êag
 = 0;

1372 
evít
 = 
lock_evít_queue
;

1373 
ev
 = 
NULL
;

1374 
evít
!=
NULL
)

1376 
√xt
 = 
evít
->next;

1378 i‡(
evít
->
whí
 <
sim_cy˛e
)

1380 if(
evít
 =
lock_evít_queue
)

1382 
lock_evít_queue
 = 
evít
->
√xt
;

1383 
evít
->
√xt
 = 
NULL
;

1384 
	`SyncO≥øti⁄
(
evít
->
lock_id
,Évít->
thªadid
,Évít->
›t
);

1385 
¥ev
 = 
evít
;

1386 
	`‰ì
(
¥ev
);

1387 
evít
 = 
lock_evít_queue
;

1391 
ev
->
√xt
 = 
evít
->next;

1392 
evít
->
√xt
 = 
NULL
;

1393 
	`SyncO≥øti⁄
(
evít
->
lock_id
,Évít->
thªadid
,Évít->
›t
);

1394 
¥ev
 = 
evít
;

1395 
	`‰ì
(
¥ev
);

1396 
evít
 = 
ev
->
√xt
;

1401 
ev
 = 
evít
;

1402 
evít
 =Évít->
√xt
;

1406 
	}
}

1409 
	$SyncO≥øti⁄
 (
lock_id
, 
thªadid
, 
›
)

1411 
lock_node
 = 
lock_id
%
numc⁄ãxts
;

1412 
lock_addr
 = 
lock_id
/
numc⁄ãxts
;

1413 
b¨_node
 = 
lock_node
;

1414 
b¨_addr
 = 
lock_addr
;

1415 
›
)

1417 
BAR_ACQUIRE
:

1418 
cﬁÀ˘_b¨rõr_°©s
[
thªadid
] = 1;

1419 if(
b¨_node
 =
thªadid
)

1421 
BAR_ENTRY
 *
b¨_ãmp
 = 
BAR_REG
[
b¨_node
][
b¨_addr
];

1422 
b¨_ãmp
->
b¨rõr_num
 ++;

1423 if(
b¨_ãmp
->
b¨rõr_num
 =
MAXTHREADS
)

1425 
b¨_ãmp
->
b¨rõr_num
 = 0;

1426 
i
 = 0;

1427 
i
=0;i<
numc⁄ãxts
;i++)

1429 
LOCK_EVENT
 *
lock_evít
;

1430 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1431 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1432 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

1433 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1434 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1435 
lock_evít
->
des1
 = 
i
/
mesh_size
+
MEM_LOC_SHIFT
;

1436 
lock_evít
->
des2
 = 
i
%
mesh_size
;

1437 
lock_evít
->
›t
 = 
BAR_RELEASE
;

1438 
lock_evít
->
thªadid
 = 
i
;

1439 
lock_evít
->
lock_id
 =Üock_id;

1440 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1441 
	`scheduÀ_√tw‹k
(
lock_evít
);

1442 
	`lock_evít_íqueue
(
lock_evít
);

1445 if(
cﬁÀ˘_°©s
)

1446 
TŸÆB¨rõrs
 ++;

1450 
b¨rõr_waôög
[
thªadid
] = 1;

1451 
thec⁄ãxts
[
thªadid
]->
ru¬ög
 = 0;

1452 
thec⁄ãxts
[
thªadid
]->
‰ìze
 = 1;

1453 
¶ìpCou¡
[
thªadid
]++;

1454 
thec⁄ãxts
[
thªadid
]->
¶ïtAt
 = 
sim_cy˛e
;

1455 
‰ìzeCou¡î
++;

1460 
LOCK_EVENT
 *
lock_evít
;

1461 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1462 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1463 
lock_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1464 
lock_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1465 
lock_evít
->
des1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1466 
lock_evít
->
des2
 = 
lock_node
%
mesh_size
;

1467 
lock_evít
->
›t
 = 
BAR_REMOTE_ACC
;

1468 
lock_evít
->
thªadid
 =Åhreadid;

1469 
lock_evít
->
lock_id
 =Üock_id;

1470 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1471 
	`scheduÀ_√tw‹k
(
lock_evít
);

1472 
	`lock_evít_íqueue
(
lock_evít
);

1473 
b¨rõr_waôög
[
thªadid
] = 1;

1476 
BAR_REMOTE_ACC
:

1478 
BAR_ENTRY
 *
b¨_ãmp
 = 
BAR_REG
[
b¨_node
][
b¨_addr
];

1479 
b¨_ãmp
->
¨rivög_ve˘‹
[
thªadid
] = 1;

1480 
b¨_ãmp
->
b¨rõr_num
 ++;

1481 if(
b¨_ãmp
->
b¨rõr_num
 =
numc⁄ãxts
)

1483 
b¨_ãmp
->
b¨rõr_num
 = 0;

1484 
i
 = 0;

1485 
i
=0;i<
numc⁄ãxts
;i++)

1487 
b¨_ãmp
->
¨rivög_ve˘‹
[
thªadid
] = 0;

1488 
LOCK_EVENT
 *
lock_evít
;

1489 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1490 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1491 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

1492 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1493 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1494 
lock_evít
->
des1
 = 
i
/
mesh_size
+
MEM_LOC_SHIFT
;

1495 
lock_evít
->
des2
 = 
i
%
mesh_size
;

1496 
lock_evít
->
›t
 = 
BAR_RELEASE
;

1497 
lock_evít
->
thªadid
 = 
i
;

1498 
lock_evít
->
lock_id
 =Üock_id;

1499 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1500 
	`scheduÀ_√tw‹k
(
lock_evít
);

1501 
	`lock_evít_íqueue
(
lock_evít
);

1504 if(
cﬁÀ˘_°©s
)

1505 
TŸÆB¨rõrs
 ++;

1509 
LOCK_EVENT
 *
lock_evít
;

1510 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1511 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1512 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1513 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1514 
lock_evít
->
des1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1515 
lock_evít
->
des2
 = 
thªadid
%
mesh_size
;

1516 
lock_evít
->
›t
 = 
BAR_WAIT_ACK
;

1517 
lock_evít
->
thªadid
 =Åhreadid;

1518 
lock_evít
->
lock_id
 =Üock_id;

1519 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1520 
	`scheduÀ_√tw‹k
(
lock_evít
);

1521 
	`lock_evít_íqueue
(
lock_evít
);

1525 
BAR_WAIT_ACK
:

1526 
cﬁÀ˘_b¨rõr_°©s
[
thªadid
] = 1;

1527 
b¨rõr_waôög
[
thªadid
] = 1;

1528 
thec⁄ãxts
[
thªadid
]->
ru¬ög
 = 0;

1529 
thec⁄ãxts
[
thªadid
]->
‰ìze
 = 1;

1530 
¶ìpCou¡
[
thªadid
]++;

1531 
thec⁄ãxts
[
thªadid
]->
¶ïtAt
 = 
sim_cy˛e
;

1532 
‰ìzeCou¡î
++;

1534 
BAR_RELEASE
:

1535 
thec⁄ãxts
[
thªadid
]->
ru¬ög
 = 1;

1536 
thec⁄ãxts
[
thªadid
]->
‰ìze
 = 0;

1537 
b¨rõr_waôög
[
thªadid
] = 0;

1538 
cﬁÀ˘_b¨rõr_°©s
[
thªadid
] = 0;

1540 
ACQUIRE
:

1541 if(
lock_node
 =
thªadid
)

1543 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1544 if(
Lock_ãmp
->
lock_ow√r
 != 0)

1546 
lock_waôög
[
thªadid
] = 1;

1547 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_èû
] = 
thªadid
;

1548 
Lock_ãmp
->
waôög_num
 ++;

1549 
Lock_ãmp
->
waôög_èû
 = (Lock_ãmp->waôög_èû+1+
MAXLOCK
)%MAXLOCK;

1550 if(
Lock_ãmp
->
waôög_èû
 =Lock_ãmp->
waôög_hód
)

1551 
	`∑nic
("IdealÜock: Lockácquire queue full\n");

1555 
Lock_ãmp
->
lock_ow√r
 = 
thªadid
 + 1;

1560 
LOCK_EVENT
 *
lock_evít
;

1561 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1562 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1563 
lock_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1564 
lock_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1565 
lock_evít
->
des1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1566 
lock_evít
->
des2
 = 
lock_node
%
mesh_size
;

1567 
lock_evít
->
›t
 = 
ACQ_REMOTE_ACC
;

1568 
lock_evít
->
thªadid
 =Åhreadid;

1569 
lock_evít
->
lock_id
 =Üock_id;

1570 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1571 
	`scheduÀ_√tw‹k
(
lock_evít
);

1572 
	`lock_evít_íqueue
(
lock_evít
);

1573 
lock_waôög
[
thªadid
] = 1;

1576 
RELEASE
:

1577 if(
lock_node
 =
thªadid
)

1579 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1580 if(
Lock_ãmp
->
lock_ow√r
 !
thªadid
 + 1)

1581 
	`∑nic
("IdealÜock:ÇotÅheÑightÅhreadÑeleaseÅheÜock!\n");

1584 
Lock_ãmp
->
lock_ow√r
 = 0;

1585 if(
Lock_ãmp
->
waôög_num
)

1587 
˙t
 = 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_hód
];

1588 
Lock_ãmp
->
lock_ow√r
 = 
˙t
+1;

1589 
Lock_ãmp
->
waôög_num
 --;

1590 
Lock_ãmp
->
waôög_hód
 = (Lock_ãmp->waôög_hód+1+
MAXLOCK
)%MAXLOCK;

1591 if(
˙t
 =
thªadid
)

1592 
	`∑nic
("thread canÇotácquireÅwoÜocksátÅhe sameÅime");

1595 
LOCK_EVENT
 *
lock_evít
;

1596 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1597 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1598 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1599 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1600 
lock_evít
->
des1
 = 
˙t
/
mesh_size
+
MEM_LOC_SHIFT
;

1601 
lock_evít
->
des2
 = 
˙t
%
mesh_size
;

1602 
lock_evít
->
›t
 = 
ACQ_ACK
;

1603 
lock_evít
->
thªadid
 = 
˙t
;

1604 
lock_evít
->
lock_id
 =Üock_id;

1605 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1606 
	`scheduÀ_√tw‹k
(
lock_evít
);

1607 
	`lock_evít_íqueue
(
lock_evít
);

1614 
LOCK_EVENT
 *
lock_evít
;

1615 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1616 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1617 
lock_evít
->
§c1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1618 
lock_evít
->
§c2
 = 
thªadid
%
mesh_size
;

1619 
lock_evít
->
des1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1620 
lock_evít
->
des2
 = 
lock_node
%
mesh_size
;

1621 
lock_evít
->
›t
 = 
REL_REMOTE_ACC
;

1622 
lock_evít
->
thªadid
 =Åhreadid;

1623 
lock_evít
->
lock_id
 =Üock_id;

1624 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1625 
	`scheduÀ_√tw‹k
(
lock_evít
);

1626 
	`lock_evít_íqueue
(
lock_evít
);

1630 
ACQ_REMOTE_ACC
:

1632 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1633 
LOCK_EVENT
 *
lock_evít
;

1634 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1635 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1637 if(
Lock_ãmp
->
lock_ow√r
 != 0)

1639 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_èû
] = 
thªadid
;

1640 
Lock_ãmp
->
waôög_num
 ++;

1641 
Lock_ãmp
->
waôög_èû
 = (Lock_ãmp->waôög_èû+1+
MAXLOCK
)%MAXLOCK;

1642 if(
Lock_ãmp
->
waôög_èû
 =Lock_ãmp->
waôög_hód
)

1643 
	`∑nic
("IdealÜock: Lockácquire queue full\n");

1644 
lock_evít
->
›t
 = 
WAIT_ACK
;

1648 
Lock_ãmp
->
lock_ow√r
 = 
thªadid
 + 1;

1649 
lock_evít
->
›t
 = 
ACQ_ACK
;

1652 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1653 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1654 
lock_evít
->
des1
 = 
thªadid
/
mesh_size
+
MEM_LOC_SHIFT
;

1655 
lock_evít
->
des2
 = 
thªadid
%
mesh_size
;

1656 
lock_evít
->
thªadid
 =Åhreadid;

1657 
lock_evít
->
lock_id
 =Üock_id;

1658 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1659 
	`scheduÀ_√tw‹k
(
lock_evít
);

1660 
	`lock_evít_íqueue
(
lock_evít
);

1663 
REL_REMOTE_ACC
:

1665 
LOCK_ENTRY
 *
Lock_ãmp
 = 
LOCK_REG
[
lock_node
][
lock_addr
];

1666 if(
Lock_ãmp
->
lock_ow√r
 !
thªadid
 + 1)

1667 
	`∑nic
("IdealÜock:ÇotÅheÑightÅhreadÑeleaseÅheÜock!\n");

1670 
Lock_ãmp
->
lock_ow√r
 = 0;

1671 if(
Lock_ãmp
->
waôög_num
)

1673 
˙t
 = 
Lock_ãmp
->
waôög_li°
[Lock_ãmp->
waôög_hód
];

1674 
Lock_ãmp
->
lock_ow√r
 = 
˙t
+1;

1675 
Lock_ãmp
->
waôög_num
 --;

1676 
Lock_ãmp
->
waôög_hód
 = (Lock_ãmp->waôög_hód+1+
MAXLOCK
)%MAXLOCK;

1678 
LOCK_EVENT
 *
lock_evít
;

1679 
lock_evít
 = 
	`ˇŒoc
(1, (
LOCK_EVENT
));

1680 if(
lock_evít
 =
NULL
Ë
	`∑nic
("Out of Virtual memory");

1681 
lock_evít
->
§c1
 = 
lock_node
/
mesh_size
+
MEM_LOC_SHIFT
;

1682 
lock_evít
->
§c2
 = 
lock_node
%
mesh_size
;

1683 
lock_evít
->
des1
 = 
˙t
/
mesh_size
+
MEM_LOC_SHIFT
;

1684 
lock_evít
->
des2
 = 
˙t
%
mesh_size
;

1685 
lock_evít
->
›t
 = 
ACQ_ACK
;

1686 
lock_evít
->
thªadid
 = 
˙t
;

1687 
lock_evít
->
lock_id
 =Üock_id;

1688 
lock_evít
->
whí
 = 
sim_cy˛e
 + 
WAIT_TIME
;

1689 
	`scheduÀ_√tw‹k
(
lock_evít
);

1690 
	`lock_evít_íqueue
(
lock_evít
);

1695 
ACQ_ACK
:

1696 
lock_waôög
[
thªadid
] = 0;

1698 
WAIT_ACK
:

1699 
lock_waôög
[
thªadid
] = 1;

1702 
	`∑nic
("no one comes here!");

1705 
	}
}

1718 
	$sys_sysˇŒ
 (
ªgs_t
 *
ªgs
,

1719 
mem_ac˚ss_‚
 
mem_‚
,

1720 
mem_t
 *
mem
,

1721 
md_ö°_t
 
ö°
,

1722 
åa˚abÀ
)

1724 
qw‹d_t
 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_V0
];

1725 
Lock_id
 = 0;

1726 
a
;

1728 #ifde‡
SMT_SS


1729 #i‡
	`deföed
(
MTA
)

1730 *
p
;

1732 
˙t
;

1733 
thªadid
 = 0;

1734 
mem_±e_t
 *
tmpMemPåD
, *
tmpMemPåS
, *
tmpMemPå
;

1735 
c⁄ãxt
 *
cuºít
;

1736 
c⁄ãxt
 *
√wC⁄ãxt
;

1738 
thªadid
 = 
ªgs
->threadid;

1739 
cuºít
 = 
thec⁄ãxts
[
thªadid
];

1743 i‡(
syscode
 =
OSF_SYS_sysˇŒ
)

1744 
syscode
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1747 #ifde‡
SMT_SS


1748 i‡(
åa˚abÀ
 && 
cuºít
->
sim_eio_fd
 !
NULL
)

1750 
	`¥ötf
 ("PROBLEM\n");

1751 
	`fÊush
 (
°dout
);

1752 
	`eio_ªad_åa˚
 (
cuºít
->
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

1754 i‡(
åa˚abÀ
 && 
sim_eio_fd
 !
NULL
)

1756 
	`eio_ªad_åa˚
 (
sim_eio_fd
, 
sim_num_ö¢
, 
ªgs
, 
mem_‚
, 
mem
, 
ö°
);

1760 i‡(
syscode
 =
OSF_SYS_sigªtu∫
)

1762 
i
;

1763 
osf_sigc⁄ãxt
 
sc
;

1764 
md_addr_t
 
sc_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

1766 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
sc_addr
, &
sc
,  (
osf_sigc⁄ãxt
), 
cuºít
->
id
);

1767 
ªgs
->
ªgs_NPC
 = 
sc
.
sc_pc
;

1768 
i
 = 0; i < 32; ++i)

1769 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

1770 
i
 = 0; i < 32; ++i)

1771 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

1772 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

1776 
	`¥ötf
 ("Am I coming here\n");

1781 
syscode
)

1783 
OSF_SYS_exô
:

1787 if(
cuºít
->
ma°îid
 != 0)

1789 
	`¥ötf
 ("In OSF_SYS_exit\n");

1790 
	`¥ötf
 ("[INFO]: sim_num_ö¢=%Œd, b¨rõrs=%d,Üocks=%d\n", 
sim_num_ö¢
, 
TŸÆB¨rõrs
, 
TŸÆLocks
);

1791 
	`Ârötf
 (
°dîr
, "[INFO]: sim_num_ö¢=%Œd, b¨rõrs=%d,Üocks=%d\n", 
sim_num_ö¢
, 
TŸÆB¨rõrs
, 
TŸÆLocks
);

1792 
	`fÊush
 (
°dîr
);

1793 
	`fÊush
 (
°dout
);

1794 #ifde‡
DO_COMPLETE_FASTFWD


1795 #ifde‡ 
CACHE_PROFILE


1796 
	`CacheProfWrôe
 ();

1798 #ifde‡ 
BRANCH_PROFILE


1799 
	`BønchProfWrôe
 ();

1801 #ifde‡ 
BRPRED_PROFILE


1802 
	`BønchProfWrôe
 ();

1804 #ifde‡ 
STORE_PROFILE


1805 
	`St‹eProfWrôe
 ();

1807 #ifde‡ 
INDIRECTJUMP_PROFILE


1808 
	`¥ötJumpSèts
 ();

1810 #ifde‡ 
FREQ_PROFILE


1811 
	`FªquícyWrôe
 ();

1814 
timeToRëu∫
 = 1;

1816 
	`l⁄gjmp
 (
sim_exô_buf
,

1817  (
ªgs
->
ªgs_R
[
MD_REG_A0
] & 0xff) + 1);

1818 
	`¥ötf
 ("Am I coming here\n");

1821 
OSF_SYS_ªad
:

1823 *
buf
;

1826 i‡(!(
buf
 = (*Ë
	`ˇŒoc
 ( 
ªgs
->
ªgs_R
[
MD_REG_A2
],  ())))

1827 
	`Áèl
 ("out of memory in SYS_read");

1833 i‡((
ªgs
->
ªgs_R
[
MD_REG_A0
] =0Ë&& (
cuºít
->
sim_öputfd
 != 0))

1834  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1835 
	`ªad
 ( 
cuºít
->
sim_öputfd
, 
buf
,

1836  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1839  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1840 
	`ªad
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,

1841  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1843  
ªgs
->
ªgs_R
[
MD_REG_V0
] =(
qw‹d_t
) - 1

1844 && 
î∫o
 =
EAGAIN
);

1847 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

1848 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1851 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1852 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1856 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

1859 
	`‰ì
 (
buf
);

1863 
OSF_SYS_wrôe
:

1865 *
buf
;

1868 i‡(!(
buf
 = (*Ë
	`ˇŒoc
 ( 
ªgs
->
ªgs_R
[
MD_REG_A2
],  ())))

1869 
	`Áèl
 ("out of memory in SYS_write");

1872 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
,Ñegs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

1875 #ifde‡
SMT_SS


1876 i‡(
cuºít
->
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
 (
ªgs
))

1880  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1881 
	`fwrôe
 (
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
cuºít
->
sim_¥ogfd
);

1882 
	`fÊush
 (
cuºít
->
sim_¥ogfd
);

1885 i‡(
sim_¥ogfd
 && 
	`MD_OUTPUT_SYSCALL
 (
ªgs
))

1889  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1890 
	`fwrôe
 (
buf
, 1, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
sim_¥ogfd
);

1899  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1900 
	`wrôe
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
],

1901 
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

1903  
ªgs
->
ªgs_R
[
MD_REG_V0
] =(
qw‹d_t
) - 1

1904 && 
î∫o
 =
EAGAIN
);

1908 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] =ªgs->ªgs_R[
MD_REG_A2
])

1909 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1912 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1913 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1917 
	`‰ì
 (
buf
);

1921 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1923 
OSF_SYS_gëdomaö«me
:

1926 *
buf
;

1928 
buf
 = 
	`mÆloc
 ( (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1929 i‡(!
buf
)

1930 
	`Áèl
 ("out of virtual memory in gethostname()");

1932  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

1933 
	`gëdomaö«me
 ( 
buf
,

1934  (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1937 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

1938 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1941 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1942 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1946 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,Ñegs->ªgs_R[
MD_REG_A1
], 
cuºít
->
id
);

1951 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
Ë&& (!deföed(
_AIX
Ë|| !deföed(
POWER_64
))

1953 
OSF_SYS_Êock
:

1956 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`Êock
 ( (Ëªgs->ªgs_R[
MD_REG_A0
],

1957  (Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

1960 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

1961 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1964 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1965 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1971 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1973 
OSF_SYS_böd
:

1975 
sockaddr
 
a_sock
;

1977 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
a_sock
, (Ëªgs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

1979 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`böd
 ((Ëªgs->ªgs_R[
MD_REG_A0
], &
a_sock
, (Ëªgs->ªgs_R[
MD_REG_A2
]);

1982 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

1983 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

1986 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

1987 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

1993 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

1995 
OSF_SYS_£ndto
:

1997 *
buf
 = 
NULL
;

1998 
sockaddr
 
d_sock
;

1999 
buf_Àn
 = 0;

2001 
buf_Àn
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2003 i‡(
buf_Àn
 > 0)

2004 
buf
 = (*Ë
	`mÆloc
 (
buf_Àn
 *  ());

2006 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

2008 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

2009 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
], &
d_sock
, (Ëªgs->ªgs_R[
MD_REG_A5
], 
cuºít
->
id
);

2011 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`£ndto
 ((Ëªgs->ªgs_R[
MD_REG_A0
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_A2
], (Ëªgs->ªgs_R[
MD_REG_A3
], &
d_sock
, (Ëªgs->ªgs_R[
MD_REG_A5
]);

2013 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

2016 i‡(
ªgs
->
ªgs_R
[
MD_REG_A5
] > 0)

2017 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
], &
d_sock
, (Ëªgs->ªgs_R[
MD_REG_A5
], 
cuºít
->
id
);

2020 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2021 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2024 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2025 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2028 i‡(
buf
 !
NULL
)

2029 
	`‰ì
 (
buf
);

2034 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

2036 
OSF_SYS_ﬁd_ªcv‰om
:

2037 
OSF_SYS_ªcv‰om
:

2039 #i‡
	`deföed
(
_AIX
)

2040 
addr_Àn
;

2042 
addr_Àn
;

2044 *
buf
;

2045 
sockaddr
 *
a_sock
;

2047 
buf
 = (*Ë
	`mÆloc
 ( (Ë* 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2049 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

2051 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A5
], &
addr_Àn
,  (), 
cuºít
->
id
);

2053 
a_sock
 = (
sockaddr
 *Ë
	`mÆloc
 (
addr_Àn
);

2055 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
], 
a_sock
, 
addr_Àn
, 
cuºít
->
id
);

2057 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`ªcv‰om
 ((Ëªgs->ªgs_R[
MD_REG_A0
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_A2
], (Ëªgs->ªgs_R[
MD_REG_A3
], 
a_sock
, &
addr_Àn
);

2059 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_V0
], 
cuºít
->
id
);

2061 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A5
], &
addr_Àn
,  (), 
cuºít
->
id
);

2063 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
], 
a_sock
, 
addr_Àn
, 
cuºít
->
id
);

2066 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2067 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2070 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2071 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2073 i‡(
buf
 !
NULL
)

2074 
	`‰ì
 (
buf
);

2079 
OSF_SYS_›í
:

2081 
buf
[
MAXBUFSIZE
];

2082 
i
;

2083 
osf_Êags
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
loˇl_Êags
 = 0;

2086 
i
 = 0; i < 
OSF_NFLAGS
; i++)

2088 i‡(
osf_Êags
 & 
osf_Êag_èbÀ
[
i
].
osf_Êag
)

2090 
osf_Êags
 &~
osf_Êag_èbÀ
[
i
].
osf_Êag
;

2091 
loˇl_Êags
 |
osf_Êag_èbÀ
[
i
].
loˇl_Êag
;

2095 i‡(
osf_Êags
 != 0)

2096 
	`Áèl
 ("sysˇŒ: o≥n: c™nŸ decodêÊags: 0x%08x", 
osf_Êags
);

2099 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2102 #ifde‡
__CYGWIN32__


2103  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2104 
	`›í
 (
buf
, 
loˇl_Êags
 | 
O_BINARY
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2106  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2107 
	`›í
 (
buf
, 
loˇl_Êags
, 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2111 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2112 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2115 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2116 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2121 
OSF_SYS_˛o£
:

2123 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0

2124 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1

2125 || 
ªgs
->
ªgs_R
[
MD_REG_A0
] == 2)

2127 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2132 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`˛o£
 (Ñegs->ªgs_R[
MD_REG_A0
]);

2135 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2136 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2139 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2140 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2145 
OSF_SYS_¸ót
:

2147 
buf
[
MAXBUFSIZE
];

2150 
	`mem_°r˝y
 (
mem_‚
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
);

2153  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2154 
	`¸ót
 (
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2157 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2158 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2161 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2162 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2168 
OSF_SYS_u∆ök
:

2170 
buf
[
MAXBUFSIZE
];

2173 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2176  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u∆ök
 (
buf
);

2179 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2180 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2183 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2184 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2189 
OSF_SYS_chdú
:

2191 
buf
[
MAXBUFSIZE
];

2194 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2197  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`chdú
 (
buf
);

2200 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2201 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2204 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2205 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2210 
OSF_SYS_chmod
:

2212 
buf
[
MAXBUFSIZE
];

2215 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2218  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2219 
	`chmod
 (
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2222 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2223 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2226 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2227 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2232 
OSF_SYS_chown
:

2233 #ifde‡
_MSC_VER


2234 
	`w¨n
 ("syscall chown()Çot yet implemented for MSC...");

2235 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2238 
buf
[
MAXBUFSIZE
];

2241 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2244  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2245 
	`chown
 (
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
],

2246  
ªgs
->
ªgs_R
[
MD_REG_A2
]);

2249 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2250 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2253 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2254 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2260 
OSF_SYS_sbrk
:

2262 
sqw‹d_t
 
dñè
;

2263 
md_addr_t
 
addr
;

2265 
dñè
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2266 #ifde‡
SMT_SS


2267 
addr
 = 
cuºít
->
ld_brk_poöt
 + 
dñè
;

2269 
addr
 = 
ld_brk_poöt
 + 
dñè
;

2272 i‡(
vîbo£
)

2273 
	`myÂrötf
 (
°dîr
, "SYS_sbrk: dñè: 0x%012∞(%ld)\n", 
dñè
, delta);

2275 #ifde‡
SMT_SS


2276 
cuºít
->
ld_brk_poöt
 = 
addr
;

2277 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
cuºít
->
ld_brk_poöt
;

2278 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2280 i‡(
vîbo£
)

2281 
	`myÂrötf
 (
°dîr
, "thªad %d,Üd_brk_poöt: 0x%012p\n", 
thªadid
, 
cuºít
->
ld_brk_poöt
);

2283 
ld_brk_poöt
 = 
addr
;

2284 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

2285 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2287 i‡(
vîbo£
)

2288 
	`myÂrötf
 (
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

2293 i‡– 
addr
 < 
ªgs
->
ªgs_R
[
MD_REG_SP
])

2295 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2296 
ld_brk_poöt
 = 
addr
;

2301 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2307 
OSF_SYS_obªak
:

2309 
md_addr_t
 
addr
;

2313 
addr
 = 
	`ROUND_UP
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
MD_PAGE_SIZE
);

2315 
addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

2317 i‡(
vîbo£
)

2318 
	`myÂrötf
 (
°dîr
, "SYS_obªak:áddr: 0x%012p\n", 
addr
);

2320 #ifde‡
SMT_SS


2321 
cuºít
->
ld_brk_poöt
 = 
addr
;

2322 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
cuºít
->
ld_brk_poöt
;

2323 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2325 i‡(
vîbo£
)

2326 
	`myÂrötf
 (
°dîr
, "thªad %d,Üd_brk_poöt: 0x%012p\n", 
thªadid
, 
cuºít
->
ld_brk_poöt
);

2328 
ld_brk_poöt
 = 
addr
;

2329 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
ld_brk_poöt
;

2330 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2332 i‡(
vîbo£
)

2333 
	`myÂrötf
 (
°dîr
, "ld_brk_poöt: 0x%012p\n", 
ld_brk_poöt
);

2339 
OSF_SYS_l£ek
:

2341 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l£ek
 (Ñegs->ªgs_R[
MD_REG_A0
],

2342  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

2345 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2346 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2349 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2350 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2354 
OSF_SYS_gëpid
:

2356  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëpid
 ();

2359 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2360 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2363 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2364 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2368 
OSF_SYS_gëuid
:

2369 #ifde‡
_MSC_VER


2370 
	`w¨n
 ("syscall getuid()Çot yet implemented for MSC...");

2371 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2374  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëuid
 ();

2375  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëeuid
 ();

2378 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2379 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2382 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2383 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2388 
OSF_SYS_ac˚ss
:

2390 
buf
[
MAXBUFSIZE
];

2393 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2396  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2397 
	`ac˚ss
 (
buf
, 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2400 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2401 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2404 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2405 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2410 
OSF_SYS_°©
:

2411 
OSF_SYS_l°©
:

2413 
buf
[
MAXBUFSIZE
];

2414 
osf_°©buf
 
osf_sbuf
;

2416 #ifde‡
_MSC_VER


2417 
_°©
 
sbuf
;

2419 
°©
 
sbuf
;

2423 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

2426 i‡(
syscode
 =
OSF_SYS_°©
)

2427  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©
 (
buf
, &
sbuf
);

2430 #ifde‡
_MSC_VER


2431 
	`w¨n
 ("syscallÜstat()Çot yet implemented for MSC...");

2432 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2435  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`l°©
 (
buf
, &
sbuf
);

2440 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2441 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2444 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2445 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2449 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
 (
sbuf
.
°_dev
);

2450 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
 (
sbuf
.
°_öo
);

2451 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
 (
sbuf
.
°_mode
);

2452 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
 (
sbuf
.
°_∆ök
);

2453 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
 (
sbuf
.
°_uid
);

2454 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
 (
sbuf
.
°_gid
);

2455 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
 (
sbuf
.
°_rdev
);

2456 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
 (
sbuf
.
°_size
);

2457 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
 (
sbuf
.
°_©ime
);

2458 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
 (
sbuf
.
°_mtime
);

2459 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
 (
sbuf
.
°_˘ime
);

2460 #i‚de‡
_MSC_VER


2461 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
 (
sbuf
.
°_blksize
);

2462 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
 (
sbuf
.
°_blocks
);

2466 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_sbuf
,  (
osf_°©buf
), 
cuºít
->
id
);

2470 
OSF_SYS_dup
:

2472  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup
 (Ñegs->ªgs_R[
MD_REG_A0
]);

2475 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2476 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2479 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2480 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2485 
OSF_SYS_pùe
:

2487 
fd
[2];

2490 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
],

2491 
fd
,  (fd));

2494  
ªgs
->
ªgs_R
[7] = 
	`pùe
 (
fd
);

2497  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
fd
[0];

2498  
ªgs
->
ªgs_R
[3] = 
fd
[1];

2501 i‡(
ªgs
->
ªgs_R
[7] =(
qw‹d_t
) - 1)

2503 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2504 
ªgs
->
ªgs_R
[7] = 1;

2510 
OSF_SYS_gëgid
:

2511 #ifde‡
_MSC_VER


2512 
	`w¨n
 ("syscall getgid()Çot yet implemented for MSC...");

2513 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2516  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëgid
 ();

2517  
ªgs
->
ªgs_R
[
MD_REG_A4
] = 
	`gëegid
 ();

2520 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2521 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2524 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2525 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2530 
OSF_SYS_io˘l
:

2531  
ªgs
->
ªgs_R
[
MD_REG_A1
])

2533 #i‡!
	`deföed
(
TIOCGETP
Ë&& deföed(
löux
)

2534 
OSF_TIOCGETP
:

2536 
ãrmios
 
lbuf
;

2537 
osf_sgâyb
 
buf
;

2539  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2540 
	`tcgë©å
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2541 &
lbuf
);

2544 
buf
.
sg_i•ìd
 = 
lbuf
.
c_i•ìd
;

2545 
buf
.
sg_o•ìd
 = 
lbuf
.
c_o•ìd
;

2546 
buf
.
sg_îa£
 = 
lbuf
.
c_cc
[
VERASE
];

2547 
buf
.
sg_kûl
 = 
lbuf
.
c_cc
[
VKILL
];

2548 
buf
.
sg_Êags
 = 0;

2550 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,  (
osf_sgâyb
), 
cuºít
->
id
);

2552 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2553 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2556 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2557 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2562 #ifde‡
TIOCGETP


2563 
OSF_TIOCGETP
:

2565 
sgâyb
 
lbuf
;

2566 
osf_sgâyb
 
buf
;

2568  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2569 
	`io˘l
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2570  
TIOCGETP
,

2571 &
lbuf
);

2574 
buf
.
sg_i•ìd
 = 
lbuf
.sg_ispeed;

2575 
buf
.
sg_o•ìd
 = 
lbuf
.sg_ospeed;

2576 
buf
.
sg_îa£
 = 
lbuf
.sg_erase;

2577 
buf
.
sg_kûl
 = 
lbuf
.sg_kill;

2578 
buf
.
sg_Êags
 = 
lbuf
.sg_flags;

2579 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
buf
,  (
osf_sgâyb
), 
cuºít
->
id
);

2581 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2582 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2585 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2586 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2591 #ifde‡
FIONREAD


2592 
OSF_FIONREAD
:

2594 
ƒód
;

2596  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2597 
	`io˘l
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2598  
FIONREAD
,

2599  &
ƒód
);

2601 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
ƒód
,  (ƒód), 
cuºít
->
id
);

2603 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2604 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2607 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2608 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2613 #ifde‡
FIONBIO


2614 
FIONBIO
:

2616 
¨g
 = 0;

2618 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

2619 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
¨g
,  (¨g), 
cuºít
->
id
);

2621 #ifde‡
NOTNOW


2622 
	`Ârötf
 (
°dîr
, "FIONBIO: %d, %d\n", (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
], 
¨g
);

2624  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2625 
	`io˘l
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

2626  
FIONBIO
,

2627  &
¨g
);

2629 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

2630 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
¨g
,  (¨g), 
cuºít
->
id
);

2632 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2633 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2636 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2637 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2643 
	`w¨n
 ("unsuµ‹ãd io˘»ˇŒ: io˘l(%ld, ...)", 
ªgs
->
ªgs_R
[
MD_REG_A1
]);

2644 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2651 
buf
[
NUM_IOCTL_BYTES
];

2652 
loˇl_ªq
 = 0;

2655  
ªgs
->
ªgs_R
[
MD_REG_A1
])

2658 
SS_IOCTL_TIOCGETP
:

2659 
loˇl_ªq
 = 
TIOCGETP
;

2661 
SS_IOCTL_TIOCSETP
:

2662 
loˇl_ªq
 = 
TIOCSETP
;

2664 
SS_IOCTL_TCGETP
:

2665 
loˇl_ªq
 = 
TIOCGETP
;

2668 #ifde‡
TCGETA


2669 
SS_IOCTL_TCGETA
:

2670 
loˇl_ªq
 = 
TCGETA
;

2673 #ifde‡
TIOCGLTC


2674 
SS_IOCTL_TIOCGLTC
:

2675 
loˇl_ªq
 = 
TIOCGLTC
;

2678 #ifde‡
TIOCSLTC


2679 
SS_IOCTL_TIOCSLTC
:

2680 
loˇl_ªq
 = 
TIOCSLTC
;

2683 
SS_IOCTL_TIOCGWINSZ
:

2684 
loˇl_ªq
 = 
TIOCGWINSZ
;

2686 #ifde‡
TCSETAW


2687 
SS_IOCTL_TCSETAW
:

2688 
loˇl_ªq
 = 
TCSETAW
;

2691 #ifde‡
TIOCGETC


2692 
SS_IOCTL_TIOCGETC
:

2693 
loˇl_ªq
 = 
TIOCGETC
;

2696 #ifde‡
TIOCSETC


2697 
SS_IOCTL_TIOCSETC
:

2698 
loˇl_ªq
 = 
TIOCSETC
;

2701 #ifde‡
TIOCLBIC


2702 
SS_IOCTL_TIOCLBIC
:

2703 
loˇl_ªq
 = 
TIOCLBIC
;

2706 #ifde‡
TIOCLBIS


2707 
SS_IOCTL_TIOCLBIS
:

2708 
loˇl_ªq
 = 
TIOCLBIS
;

2711 #ifde‡
TIOCLGET


2712 
SS_IOCTL_TIOCLGET
:

2713 
loˇl_ªq
 = 
TIOCLGET
;

2716 #ifde‡
TIOCLSET


2717 
SS_IOCTL_TIOCLSET
:

2718 
loˇl_ªq
 = 
TIOCLSET
;

2723 i‡(!
loˇl_ªq
)

2727 
	`w¨n
 ("sysˇŒ: io˘l: io˘»codênŸ suµ‹ãd d=%d,Ñeq=%d", 
ªgs
->
ªgs_R
[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

2728 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

2729 
ªgs
->
ªgs_R
[7] = 0;

2736 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

2737 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
],

2738 
buf
, 
NUM_IOCTL_BYTES
);

2741  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2742 
	`io˘l
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
loˇl_ªq
, 
buf
);

2745 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

2746 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], 
buf
, 
NUM_IOCTL_BYTES
);

2749 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2750 
ªgs
->
ªgs_R
[7] = 0;

2754 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2755 
ªgs
->
ªgs_R
[7] = 1;

2762 
OSF_SYS_f°©
:

2764 
osf_°©buf
 
osf_sbuf
;

2766 #ifde‡
_MSC_VER


2767 
_°©
 
sbuf
;

2769 
°©
 
sbuf
;

2773  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

2774 
	`f°©
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sbuf
);

2777 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2778 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2781 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2782 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2786 
osf_sbuf
.
osf_°_dev
 = 
	`MD_SWAPW
 (
sbuf
.
°_dev
);

2787 
osf_sbuf
.
osf_°_öo
 = 
	`MD_SWAPW
 (
sbuf
.
°_öo
);

2788 
osf_sbuf
.
osf_°_mode
 = 
	`MD_SWAPW
 (
sbuf
.
°_mode
);

2789 
osf_sbuf
.
osf_°_∆ök
 = 
	`MD_SWAPH
 (
sbuf
.
°_∆ök
);

2790 
osf_sbuf
.
osf_°_uid
 = 
	`MD_SWAPW
 (
sbuf
.
°_uid
);

2791 
osf_sbuf
.
osf_°_gid
 = 
	`MD_SWAPW
 (
sbuf
.
°_gid
);

2792 
osf_sbuf
.
osf_°_rdev
 = 
	`MD_SWAPW
 (
sbuf
.
°_rdev
);

2793 
osf_sbuf
.
osf_°_size
 = 
	`MD_SWAPQ
 (
sbuf
.
°_size
);

2794 
osf_sbuf
.
osf_°_©ime
 = 
	`MD_SWAPW
 (
sbuf
.
°_©ime
);

2795 
osf_sbuf
.
osf_°_mtime
 = 
	`MD_SWAPW
 (
sbuf
.
°_mtime
);

2796 
osf_sbuf
.
osf_°_˘ime
 = 
	`MD_SWAPW
 (
sbuf
.
°_˘ime
);

2797 #i‚de‡
_MSC_VER


2798 
osf_sbuf
.
osf_°_blksize
 = 
	`MD_SWAPW
 (
sbuf
.
°_blksize
);

2799 
osf_sbuf
.
osf_°_blocks
 = 
	`MD_SWAPW
 (
sbuf
.
°_blocks
);

2803 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_sbuf
,  (
osf_°©buf
), 
cuºít
->
id
);

2807 
OSF_SYS_gë∑gesize
:

2809 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
MD_PAGE_SIZE
;

2812 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2813 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2816 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2817 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2821 
OSF_SYS_£tôimî
:

2823 
	`w¨n
 ("syscall: setitimer ignored");

2824 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2827 
OSF_SYS_èbÀ
:

2829 
qw‹d_t
 
èbÀ_id
, 
èbÀ_ödex
, 
buf_addr
, 
num_ñem
, 
size_ñem
;

2830 
osf_tbl_sysöfo
 
sysöfo
;

2832 
èbÀ_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

2833 
èbÀ_ödex
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

2834 
buf_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

2835 
num_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A4
];

2836 
size_ñem
 = 
ªgs
->
ªgs_R
[
MD_REG_A5
];

2838 
èbÀ_id
)

2840 
OSF_TBL_SYSINFO
:

2841 i‡(
èbÀ_ödex
 != 0)

2843 
	`∑nic
 ("èbÀ:ÅabÀ id TBL_SYSINFOÑequúe†0 index, gŸ %08d", 
èbÀ_ödex
);

2845 i‡(
num_ñem
 != 1)

2847 
	`∑nic
 ("èbÀ:ÅabÀ id TBL_SYSINFOÑequúe†1É…s, gŸ %08d", 
num_ñem
);

2851 
rußge
 
rußge_öfo
;

2854 i‡(
	`gërußge
 (
RUSAGE_SELF
, &
rußge_öfo
) < 0)

2857 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2860 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2865 
sysöfo
.
si_hz
 = 
	`sysc⁄f
 (
_SC_CLK_TCK
);

2868 
sysöfo
.
si_u£r
 = 
rußge_öfo
.
ru_utime
.
tv_£c
 * sysöfo.
si_hz
 + (rußge_öfo.ru_utime.
tv_u£c
 * sysinfo.si_hz) / 1000000UL;

2869 
sysöfo
.
si_sys
 = 
rußge_öfo
.
ru_°ime
.
tv_£c
 * sysöfo.
si_hz
 + (rußge_öfo.ru_°ime.
tv_u£c
 * sysinfo.si_hz) / 1000000UL;

2873 
sysöfo
.
si_ni˚
 = 0;

2874 
sysöfo
.
si_idÀ
 = 0;

2875 
sysöfo
.
si_phz
 = 0;

2876 
sysöfo
.
si_boŸtime
 = 0;

2877 
sysöfo
.
waô
 = 0;

2880 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
buf_addr
, &
sysöfo
,  (
osf_tbl_sysöfo
), 
cuºít
->
id
);

2883 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2888 
	`w¨n
 ("èbÀ: unsuµ‹ãdÅabÀ id %dÑeque°ed, ign‹ed", 
èbÀ_id
);

2889 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2894 
OSF_SYS_gëdèbÀsize
:

2895 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__Æpha
)

2897 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdèbÀsize
 ();

2900 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2901 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2904 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2905 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2907 #ñi‡
	`deföed
(
u…rix
)

2910 
	`w¨n
 ("syscall: called getdtablesize\n");

2911 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2912 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2914 #ñi‡
	`deföed
(
MIN_SYSCALL_MODE
)

2917 
	`w¨n
 ("syscall: called getdtablesize\n");

2918 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 16;

2919 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2923 
æimô
 
æ
;

2926 i‡(
	`gëæimô
 (
RLIMIT_NOFILE
, &
æ
Ë!(
qw‹d_t
) - 1)

2928 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
æ
.
æim_cur
;

2929 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2933 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2934 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2940 
OSF_SYS_dup2
:

2942 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`dup2
 (Ñegs->ªgs_R[
MD_REG_A0
],Ñegs->ªgs_R[
MD_REG_A1
]);

2945 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2946 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2949 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2950 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2954 
OSF_SYS_f˙é
:

2955 #ifde‡
_MSC_VER


2956 
	`w¨n
 ("syscall fcntl()Çot yet implemented for MSC...");

2957 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2960 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`f˙é
 (Ñegs->ªgs_R[
MD_REG_A0
],

2961  
ªgs
->
ªgs_R
[
MD_REG_A1
],Ñegs->ªgs_R[
MD_REG_A2
]);

2964 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

2965 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2968 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

2969 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

2975 
OSF_SYS_sigvec
:

2977 
	`w¨n
 ("syscall: sigvec ignored");

2978 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2983 
OSF_SYS_sigblock
:

2985 
	`w¨n
 ("syscall: sigblock ignored");

2986 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2991 
OSF_SYS_sig£tmask
:

2993 
	`w¨n
 ("syscall: sigsetmask ignored");

2994 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

2998 
OSF_SYS_gëtimeofday
:

2999 #ifde‡
_MSC_VER


3000 
	`w¨n
 ("syscall gettimeofday()Çot yet implemented for MSC...");

3001 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3004 
osf_timevÆ
 
osf_tv
;

3005 
timevÆ
 
tv
, *
tvp
;

3006 
osf_timez⁄e
 
osf_tz
;

3007 
timez⁄e
 
tz
, *
tzp
;

3009 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

3012 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], &
osf_tv
,  (
osf_timevÆ
), 
cuºít
->
id
);

3015 
tv
.
tv_£c
 = 
	`MD_SWAPW
 (
osf_tv
.
osf_tv_£c
);

3016 
tv
.
tv_u£c
 = 
	`MD_SWAPW
 (
osf_tv
.
osf_tv_u£c
);

3017 
tvp
 = &
tv
;

3020 
tvp
 = 
NULL
;

3022 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3025 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_tz
,  (
osf_timez⁄e
), 
cuºít
->
id
);

3028 
tz
.
tz_möuãswe°
 = 
	`MD_SWAPW
 (
osf_tz
.
osf_tz_möuãswe°
);

3029 
tz
.
tz_d°time
 = 
	`MD_SWAPW
 (
osf_tz
.
osf_tz_d°time
);

3030 
tzp
 = &
tz
;

3033 
tzp
 = 
NULL
;

3036  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëtimeofday
 (
tvp
, 
tzp
);

3039 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3040 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3043 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3044 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3047 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A0
] != 0)

3050 
osf_tv
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
tv
.
tv_£c
);

3051 
osf_tv
.
osf_tv_u£c
 = 
	`MD_SWAPW
 (
tv
.
tv_u£c
);

3054 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], &
osf_tv
,  (
osf_timevÆ
), 
cuºít
->
id
);

3057 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3060 
osf_tz
.
osf_tz_möuãswe°
 = 
	`MD_SWAPW
 (
tz
.
tz_möuãswe°
);

3061 
osf_tz
.
osf_tz_d°time
 = 
	`MD_SWAPW
 (
tz
.
tz_d°time
);

3064 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_tz
,  (
osf_timez⁄e
), 
cuºít
->
id
);

3070 
OSF_SYS_gërußge
:

3071 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
_AIX
)

3073 
tms
 
tms_buf
;

3074 
osf_rußge
 
rußge
;

3077 i‡(
	`times
 (&
tms_buf
Ë!(
qw‹d_t
) - 1)

3080 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3081 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3085 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3086 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3090 #i‡
	`deföed
(
__svr4__
)

3091 
	`mem£t
 (&
rußge
, '\0',  (
osf_rußge
));

3093 
	`bzîo
 (&
rußge
,  (
osf_rußge
));

3097 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
tms_buf
.
tms_utime
 / 
CLK_TCK
);

3098 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (rusage.osf_ru_utime.osf_tv_sec);

3099 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 0;

3100 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
tms_buf
.
tms_°ime
 / 
CLK_TCK
);

3101 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (rusage.osf_ru_stime.osf_tv_sec);

3102 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 0;

3105 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
rußge
,  (
osf_rußge
), 
cuºít
->
id
);

3107 #ñi‡
	`deföed
(
__unix__
)

3109 
rußge
 
loˇl_rußge
;

3110 
osf_rußge
 
rußge
;

3113  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3114 
	`gërußge
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
], &
loˇl_rußge
);

3117 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3118 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3121 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3122 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3126 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_utime
.
tv_£c
);

3127 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_utime
.
tv_u£c
);

3128 
rußge
.
osf_ru_utime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_utime
.
tv_£c
);

3129 
rußge
.
osf_ru_utime
.
osf_tv_u£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_utime
.
tv_u£c
);

3130 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_°ime
.
tv_£c
);

3131 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

3132 
rußge
.
osf_ru_°ime
.
osf_tv_£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_°ime
.
tv_£c
);

3133 
rußge
.
osf_ru_°ime
.
osf_tv_u£c
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_°ime
.
tv_u£c
);

3134 
rußge
.
osf_ru_maxrss
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_maxrss
);

3135 
rußge
.
osf_ru_ixrss
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_ixrss
);

3136 
rußge
.
osf_ru_idrss
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_idrss
);

3137 
rußge
.
osf_ru_i§ss
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_i§ss
);

3138 
rußge
.
osf_ru_möÊt
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_möÊt
);

3139 
rußge
.
osf_ru_majÊt
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_majÊt
);

3140 
rußge
.
osf_ru_nsw≠
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_nsw≠
);

3141 
rußge
.
osf_ru_öblock
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_öblock
);

3142 
rußge
.
osf_ru_oublock
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_oublock
);

3143 
rußge
.
osf_ru_msg¢d
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_msg¢d
);

3144 
rußge
.
osf_ru_msgrcv
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_msgrcv
);

3145 
rußge
.
osf_ru_nsig«ls
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_nsig«ls
);

3146 
rußge
.
osf_ru_nvcsw
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_nvcsw
);

3147 
rußge
.
osf_ru_nivcsw
 = 
	`MD_SWAPW
 (
loˇl_rußge
.
ru_nivcsw
);

3150 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
rußge
,  (
osf_rußge
), 
cuºít
->
id
);

3152 #ñi‡
	`deföed
(
__CYGWIN32__
Ë|| deföed(
_MSC_VER
)

3153 
	`w¨n
 ("syscall: called getrusage\n");

3154 
ªgs
->
ªgs_R
[7] = 0;

3156 #îr‹ 
No
 
	`gërußge
(Ë
im∂emíèti⁄
!

3160 
OSF_SYS_utimes
:

3162 
buf
[
MAXBUFSIZE
];

3165 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

3167 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A1
] == 0)

3169 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__i386__
)

3171  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
 (
buf
, 
NULL
);

3172 #ñi‡
	`deföed
(
_MSC_VER
)

3174  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
 (
buf
, 
NULL
);

3175 #ñi‡
	`deföed
(
__svr4__
Ë|| deföed(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

3176  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
 (
buf
, 
NULL
);

3177 #ñi‡
	`deföed
(
__CYGWIN32__
)

3178 
	`w¨n
 ("syscall: called utimes\n");

3180 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

3185 
osf_timevÆ
 
osf_tvÆ
[2];

3187 #i‚de‡
_MSC_VER


3188 
timevÆ
 
tvÆ
[2];

3192 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
osf_tvÆ
, 2 *  (
osf_timevÆ
), 
cuºít
->
id
);

3194 #i‚de‡
_MSC_VER


3196 
tvÆ
[0].
tv_£c
 = 
	`MD_SWAPW
 (
osf_tvÆ
[0].
osf_tv_£c
);

3197 
tvÆ
[0].
tv_u£c
 = 
	`MD_SWAPW
 (
osf_tvÆ
[0].
osf_tv_u£c
);

3198 
tvÆ
[1].
tv_£c
 = 
	`MD_SWAPW
 (
osf_tvÆ
[1].
osf_tv_£c
);

3199 
tvÆ
[1].
tv_u£c
 = 
	`MD_SWAPW
 (
osf_tvÆ
[1].
osf_tv_u£c
);

3202 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
Ë|| deföed(
__svr4__
)

3205 
utimbuf
 
ubuf
;

3207 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
 (
tvÆ
[0].
tv_£c
);

3208 
ubuf
.
modtime
 = 
	`MD_SWAPW
 (
tvÆ
[1].
tv_£c
);

3210  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
 (
buf
, &
ubuf
);

3212 #ñi‡
	`deföed
(
_MSC_VER
)

3215 
_utimbuf
 
ubuf
;

3217 
ubuf
.
a˘ime
 = 
	`MD_SWAPW
 (
osf_tvÆ
[0].
osf_tv_£c
);

3218 
ubuf
.
modtime
 = 
	`MD_SWAPW
 (
osf_tvÆ
[1].
osf_tv_£c
);

3220  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utime
 (
buf
, &
ubuf
);

3222 #ñi‡
	`deföed
(
__USLC__
Ë|| deföed(
unix
Ë|| deföed(
_AIX
Ë|| deföed(
__Æpha
)

3223  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`utimes
 (
buf
, 
tvÆ
);

3224 #ñi‡
	`deföed
(
__CYGWIN32__
)

3225 
	`w¨n
 ("syscall: called utimes\n");

3227 #îr‹ 
No
 
	`utimes
(Ë
im∂emíèti⁄
!

3232 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3233 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3236 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3237 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3242 
OSF_SYS_gëæimô
:

3243 
OSF_SYS_£ålimô
:

3244 #ifde‡
_MSC_VER


3245 
	`w¨n
 ("syscall get/setrlimit()Çot yet implemented for MSC...");

3246 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3247 #ñi‡
	`deföed
(
__CYGWIN32__
)

3249 
	`w¨n
 ("syscall: called get/setrlimit\n");

3250 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3254 
osf_æimô
 
osf_æ
;

3255 
æimô
 
æ
;

3258 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_æ
,  (
osf_æimô
), 
cuºít
->
id
);

3261 
æ
.
æim_cur
 = 
	`MD_SWAPQ
 (
osf_æ
.
osf_æim_cur
);

3262 
æ
.
æim_max
 = 
	`MD_SWAPQ
 (
osf_æ
.
osf_æim_max
);

3265 i‡(
syscode
 =
OSF_SYS_gëæimô
)

3266  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3267 
	`gëæimô
 (
ªgs
->
ªgs_R
[
MD_REG_A0
], &
æ
);

3270 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`£ålimô
 (ªgs->ªgs_R[
MD_REG_A0
], &
æ
);

3273 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3274 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3277 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3278 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3282 
osf_æ
.
osf_æim_cur
 = 
	`MD_SWAPQ
 (
æ
.
æim_cur
);

3283 
osf_æ
.
osf_æim_max
 = 
	`MD_SWAPQ
 (
æ
.
æim_max
);

3286 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_æ
,  (
osf_æimô
), 
cuºít
->
id
);

3291 
OSF_SYS_sig¥ocmask
:

3293 
fú°
 = 
TRUE
;

3295 i‡(
fú°
)

3297 
	`w¨n
 ("partially supported sigprocmask() call...");

3298 
fú°
 = 
FALSE
;

3310 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
SigMask
;

3311 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3313 
ªgs
->
ªgs_R
[
MD_REG_A0
])

3315 
OSF_SIG_BLOCK
:

3316 
SigMask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

3318 
OSF_SIG_UNBLOCK
:

3319 
SigMask
 &~
ªgs
->
ªgs_R
[
MD_REG_A1
];

3321 
OSF_SIG_SETMASK
:

3322 
SigMask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

3325 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EINVAL
;

3326 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 1;

3330 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] > 0x10000000)

3331 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
SigMask
,  (SigMask));

3333 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3335 
ªgs
->
ªgs_R
[
MD_REG_A0
])

3337 
OSF_SIG_BLOCK
:

3338 
SigMask
 |
ªgs
->
ªgs_R
[
MD_REG_A1
];

3340 
OSF_SIG_UNBLOCK
:

3341 
SigMask
 &
ªgs
->
ªgs_R
[
MD_REG_A1
];

3343 
OSF_SIG_SETMASK
:

3344 
SigMask
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

3347 
	`∑nic
 ("illegal how valueÅo sigprocmask()");

3350 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3351 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3356 
OSF_SYS_siga˘i⁄
:

3358 
signum
;

3359 
fú°
 = 
TRUE
;

3361 i‡(
fú°
)

3363 
	`w¨n
 ("partially supported sigaction() call...");

3364 
fú°
 = 
FALSE
;

3367 
signum
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3368 i‡(
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

3369 
siga˘i⁄_¨øy
[
signum
] = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

3371 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
])

3372 
ªgs
->
ªgs_R
[
MD_REG_A2
] = 
siga˘i⁄_¨øy
[
signum
];

3374 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3377 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3387 
OSF_SYS_sig°ack
:

3388 
	`w¨n
 ("unsupported sigstack() call...");

3389 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3392 
OSF_SYS_sigªtu∫
:

3394 
i
;

3395 
osf_sigc⁄ãxt
 
sc
;

3396 
fú°
 = 
TRUE
;

3398 i‡(
fú°
)

3400 
	`w¨n
 ("partially supported sigreturn() call...");

3401 
fú°
 = 
FALSE
;

3404 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], &
sc
,  (
osf_sigc⁄ãxt
), 
cuºít
->
id
);

3406 
SigMask
 = 
	`MD_SWAPQ
 (
sc
.
sc_mask
);

3407 
ªgs
->
ªgs_NPC
 = 
	`MD_SWAPQ
 (
sc
.
sc_pc
);

3411 
i
 = 0; i < 32; ++i)

3412 
ªgs
->
ªgs_R
[
i
] = 
sc
.
sc_ªgs
[i];

3413 
i
 = 0; i < 32; ++i)

3414 
ªgs
->
ªgs_F
.
q
[
i
] = 
sc
.
sc_Âªgs
[i];

3415 
ªgs
->
ªgs_C
.
Â¸
 = 
sc
.
sc_Â¸
;

3419 
OSF_SYS_uswôch
:

3420 
	`w¨n
 ("unsupported uswitch() call...");

3421 
ªgs
->
ªgs_R
[
MD_REG_V0
] =Ñegs->ªgs_R[
MD_REG_A1
];

3424 
OSF_SYS_£tsysöfo
:

3425 
	`w¨n
 ("unsupported setsysinfo() call...");

3426 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

3429 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3430 
OSF_SYS_gëdúíåõs
:

3432 
i
, 
˙t
, 
osf_˙t
;

3433 
dúít
 *
p
;

3434 
sw‹d_t
 
fd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

3435 
md_addr_t
 
osf_buf
 = 
ªgs
->
ªgs_R
[
MD_REG_A1
];

3436 *
buf
;

3437 
sw‹d_t
 
osf_nbyãs
 = 
ªgs
->
ªgs_R
[
MD_REG_A2
];

3438 
md_addr_t
 
osf_pba£
 = 
ªgs
->
ªgs_R
[
MD_REG_A3
];

3439 
sqw‹d_t
 
osf_ba£
;

3440 
ba£
 = 0;

3443 i‡(!
osf_nbyãs
)

3444 
	`w¨n
 ("attemptingÅo get 0 directoryÉntries...");

3447 
buf
 = 
	`ˇŒoc
 (1, 
osf_nbyãs
);

3448 i‡(!
buf
)

3449 
	`Áèl
 ("out of virtual memory");

3452 #i‡
	`deföed
(
__svr4__
)

3453 
ba£
 = 
	`l£ek
 ((Ë
fd
, (
off_t
Ë0, 
SEEK_CUR
);

3454 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdíts
 ((Ë
fd
, (
dúít
 *Ë
buf
, (
size_t
Ë
osf_nbyãs
);

3456 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`gëdúíåõs
 ((Ë
fd
, 
buf
, (
size_t
Ë
osf_nbyãs
, &
ba£
);

3460 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3462 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3465 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] > 0)

3468 
i
 = 0, 
˙t
 = 0, 
osf_˙t
 = 0, 
p
 = (
dúít
 *Ë
buf
; c¡ < 
ªgs
->
ªgs_R
[
MD_REG_V0
] &&Ö->
d_ª˛í
 > 0; i++, cnt +=Ö->d_reclen,Ö = (dirent *) (buf + cnt))

3470 
osf_dúít
 osf_dirent;

3472 
osf_dúít
.
d_öo
 = 
	`MD_SWAPW
 (
p
->d_ino);

3473 
osf_dúít
.
d_«mÀn
 = 
	`MD_SWAPH
 (
	`°æí
 (
p
->
d_«me
));

3474 
	`°r˝y
 (
osf_dúít
.
d_«me
, 
p
->d_name);

3475 
osf_dúít
.
d_ª˛í
 = 
	`MD_SWAPH
 (
	`OSF_DIRENT_SZ
 (
p
->
d_«me
));

3477 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
osf_buf
 + 
osf_˙t
, &
osf_dúít
, 
	`OSF_DIRENT_SZ
 (
p
->
d_«me
), 
cuºít
->
id
);

3478 
osf_˙t
 +
	`OSF_DIRENT_SZ
 (
p
->
d_«me
);

3481 i‡(
osf_pba£
 != 0)

3483 
osf_ba£
 = (
sqw‹d_t
Ë
ba£
;

3484 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
osf_pba£
, &
osf_ba£
,  (osf_ba£), 
cuºít
->
id
);

3488 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
osf_˙t
;

3493 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3494 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3497 
	`‰ì
 (
buf
);

3502 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3503 
OSF_SYS_åunˇã
:

3505 
buf
[
MAXBUFSIZE
];

3508 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

3511  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3512 
	`åunˇã
 (
buf
, (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3515 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3516 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3519 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3520 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3526 #i‡!
	`deföed
(
__CYGWIN32__
Ë&& !deföed(
_MSC_VER
)

3527 
OSF_SYS_·runˇã
:

3529  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3530 
	`·runˇã
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3531  (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3534 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3535 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3538 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3539 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3544 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3545 
OSF_SYS_°©fs
:

3547 
buf
[
MAXBUFSIZE
];

3548 
osf_°©fs
 
osf_sbuf
;

3549 
°©fs
 
sbuf
;

3552 
	`mem_°r˝y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
, 
cuºít
->
id
);

3555  
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`°©fs
 (
buf
, &
sbuf
);

3558 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3559 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3562 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3563 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3567 #i‡
	`deföed
(
__svr4__
Ë|| deföed(
__osf__
)

3568 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
 (0x6969) ;

3570 
osf_sbuf
.
f_ty≥
 = 
	`MD_SWAPH
 (
sbuf
.f_type);

3572 
osf_sbuf
.
f_fsize
 = 
	`MD_SWAPW
 (
sbuf
.
f_bsize
);

3573 
osf_sbuf
.
f_blocks
 = 
	`MD_SWAPW
 (
sbuf
.f_blocks);

3574 
osf_sbuf
.
f_b‰ì
 = 
	`MD_SWAPW
 (
sbuf
.f_bfree);

3575 
osf_sbuf
.
f_bavaû
 = 
	`MD_SWAPW
 (
sbuf
.f_bavail);

3576 
osf_sbuf
.
f_fûes
 = 
	`MD_SWAPW
 (
sbuf
.f_files);

3577 
osf_sbuf
.
f_f‰ì
 = 
	`MD_SWAPW
 (
sbuf
.f_ffree);

3581 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_sbuf
,  (
osf_°©buf
), 
cuºít
->
id
);

3586 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3587 
OSF_SYS_£åegid
:

3590  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3591 
	`£åegid
 ( (
gid_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3592  (
gid_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3595 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3596 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3599 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3600 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3605 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3606 
OSF_SYS_£åeuid
:

3609  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3610 
	`£åeuid
 ( (
uid_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3611  (
uid_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3614 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3615 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3618 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3619 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3624 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3625 
OSF_SYS_sockë
:

3628  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3629 
	`sockë
 ( 
	`xœã_¨g
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3630 
Ámûy_m≠
, 
	`N_ELT
 (family_map), "socket(family)"),

3631  
	`xœã_¨g
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A1
],

3632 
sockty≥_m≠
, 
	`N_ELT
 (socktype_map), "socket(type)"),

3633  
	`xœã_¨g
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

3634 
Ámûy_m≠
, 
	`N_ELT
 (family_map), "socket(proto)"));

3637 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3638 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3641 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3642 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3647 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3648 
OSF_SYS_c⁄√˘
:

3650 
osf_sockaddr
 
osf_ß
;

3655 i‡(
ªgs
->
ªgs_R
[
MD_REG_A2
] >  (
osf_sockaddr
))

3657 
	`Áèl
 ("sockadd∏sizêovîÊow:áddæí = %d", 
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3660 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
osf_ß
, (Ëªgs->ªgs_R[
MD_REG_A2
], 
cuºít
->
id
);

3662 
i
;

3664 
ß
.
ß_Ámûy
 = 
osf_ß
.sa_family;

3665 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3666 
ß
.
ß_d©a
[
i
] = 
osf_ß
.sa_data[i];

3668  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3669 
	`c⁄√˘
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3670 (*Ë&
osf_ß
, (Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3673 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3674 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3677 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3678 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3684 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3685 
OSF_SYS_u«me
:

3688 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3689 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
EPERM
;

3693 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3694 
OSF_SYS_wrôev
:

3696 
i
;

3697 *
buf
;

3698 
iovec
 *
iov
;

3701 
iov
 = (
iovec
 *Ë
	`mÆloc
 ( 
ªgs
->
ªgs_R
[
MD_REG_A2
]

3702 *  (
iovec
));

3703 i‡(!
iov
)

3704 
	`Áèl
 ("out of virtual memory in SYS_writev");

3707 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3709 
osf_iovec
 
osf_iov
;

3712 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, ( 
ªgs
->
ªgs_R
[
MD_REG_A1
] + 
i
 *  (
osf_iovec
)), &
osf_iov
,  (osf_iovec), 
cuºít
->
id
);

3714 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
 (
osf_iov
.iov_len);

3715 i‡(
osf_iov
.
iov_ba£
 !0 && osf_iov.
iov_Àn
 != 0)

3717 
buf
 = (*Ë
	`ˇŒoc
 (
	`MD_SWAPW
 (
osf_iov
.
iov_Àn
),  ());

3718 i‡(!
buf
)

3719 
	`Áèl
 ("out of virtual memory in SYS_writev");

3720 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
	`MD_SWAPQ
 (
osf_iov
.
iov_ba£
), 
buf
, 
	`MD_SWAPW
 (osf_iov.
iov_Àn
), 
cuºít
->
id
);

3721 
iov
[
i
].
iov_ba£
 = 
buf
;

3724 
iov
[
i
].
iov_ba£
 = 
NULL
;

3730  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3731 
	`wrôev
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

3732  (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3734  
ªgs
->
ªgs_R
[
MD_REG_V0
] =(
qw‹d_t
) - 1

3735 && 
î∫o
 =
EAGAIN
);

3738 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3739 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3742 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3743 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3747 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3749 i‡(
iov
[
i
].
iov_ba£
)

3751 
	`‰ì
 (
iov
[
i
].
iov_ba£
);

3752 
iov
[
i
].
iov_ba£
 = 
NULL
;

3755 
	`‰ì
 (
iov
);

3760 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3761 
OSF_SYS_ªadv
:

3763 
i
;

3764 *
buf
 = 
NULL
;

3765 
osf_iovec
 *
osf_iov
;

3766 
iovec
 *
iov
;

3769 
osf_iov
 = 
	`ˇŒoc
 ( 
ªgs
->
ªgs_R
[
MD_REG_A2
],

3770  (
osf_iovec
));

3771 i‡(!
osf_iov
)

3772 
	`Áèl
 ("out of virtual memory in SYS_readv");

3774 
iov
 = 
	`ˇŒoc
 ( 
ªgs
->
ªgs_R
[
MD_REG_A2
],  (
iovec
));

3775 i‡(!
iov
)

3776 
	`Áèl
 ("out of virtual memory in SYS_readv");

3779 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3782 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, ( 
ªgs
->
ªgs_R
[
MD_REG_A1
] + 
i
 *  (
osf_iovec
)), &
osf_iov
[i],  (osf_iovec), 
cuºít
->
id
);

3784 
iov
[
i
].
iov_Àn
 = 
	`MD_SWAPW
 (
osf_iov
[i].iov_len);

3785 i‡(
osf_iov
[
i
].
iov_ba£
 !0 && osf_iov[i].
iov_Àn
 != 0)

3787 
buf
 = (*Ë
	`ˇŒoc
 (
	`MD_SWAPW
 (
osf_iov
[
i
].
iov_Àn
),  ());

3788 i‡(!
buf
)

3789 
	`Áèl
 ("out of virtual memory in SYS_readv");

3790 
iov
[
i
].
iov_ba£
 = 
buf
;

3793 
iov
[
i
].
iov_ba£
 = 
NULL
;

3799  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3800 
	`ªadv
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
], 
iov
,

3801  (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

3803  
ªgs
->
ªgs_R
[
MD_REG_V0
] =(
qw‹d_t
) - 1

3804 && 
î∫o
 =
EAGAIN
);

3807 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3809 i‡(
osf_iov
[
i
].
iov_ba£
 != 0)

3811 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
	`MD_SWAPQ
 (
osf_iov
[
i
].
iov_ba£
), 
iov
[i].iov_ba£, 
	`MD_SWAPW
 (osf_iov[i].
iov_Àn
), 
cuºít
->
id
);

3816 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3817 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3820 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3821 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3825 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A2
]; i++)

3827 i‡(
iov
[
i
].
iov_ba£
)

3829 
	`‰ì
 (
iov
[
i
].
iov_ba£
);

3830 
iov
[
i
].
iov_ba£
 = 
NULL
;

3834 i‡(
osf_iov
)

3835 
	`‰ì
 (
osf_iov
);

3836 i‡(
iov
)

3837 
	`‰ì
 (
iov
);

3842 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3843 
OSF_SYS_£tsock›t
:

3845 *
buf
;

3846 
xœã_èbÀ_t
 *
m≠
;

3847 
nm≠
;

3852 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0

3853 && 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

3855 
buf
 = 
	`ˇŒoc
 (1, (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3856 i‡(!
buf
)

3857 
	`Áèl
 ("cannotállocate memory in OSF_SYS_setsockopt");

3860 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A3
], 
buf
, (Ëªgs->ªgs_R[
MD_REG_A4
], 
cuºít
->
id
);

3863 
buf
 = 
NULL
;

3866 i‡((Ë
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_SOCKET
)

3868 
m≠
 = 
sock›t_m≠
;

3869 
nm≠
 = 
	`N_ELT
 (
sock›t_m≠
);

3871 i‡((Ë
ªgs
->
ªgs_R
[
MD_REG_A1
] =
OSF_SOL_TCP
)

3873 
m≠
 = 
t˝›t_m≠
;

3874 
nm≠
 = 
	`N_ELT
 (
t˝›t_m≠
);

3878 
	`w¨n
 ("nÿå™¶©i⁄ m≠ávaûabÀ f‹ `£tsock›t()': %d", (Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

3879 
m≠
 = 
sock›t_m≠
;

3880 
nm≠
 = 
	`N_ELT
 (
sock›t_m≠
);

3883  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3884 
	`£tsock›t
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3885  
	`xœã_¨g
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A1
],

3886 
sockÀvñ_m≠
, 
	`N_ELT
 (socklevel_map), "setsockopt(level)"),

3887  
	`xœã_¨g
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A2
],

3888 
m≠
, 
nm≠
, "setsockopt(opt)"),

3889  
buf
,

3890  
ªgs
->
ªgs_R
[
MD_REG_A4
]);

3893 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3894 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3897 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3898 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3901 i‡(
buf
 !
NULL
)

3902 
	`‰ì
 (
buf
);

3907 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3908 
OSF_SYS_ﬁd_gësock«me
:

3911 *
buf
;

3912 
w‹d_t
 
osf_addæí
;

3914 #i‡
	`deföed
(
_AIX
)

3915 
addæí
;

3917 
addæí
;

3921 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
osf_addæí
,  (osf_addæí), 
cuºít
->
id
);

3922 
addæí
 = (Ë
osf_addæí
;

3923 i‡(
addæí
 != 0)

3925 
buf
 = 
	`ˇŒoc
 (1, 
addæí
);

3926 i‡(!
buf
)

3927 
	`Áèl
 ("cannotállocate memory in OSF_SYS_old_getsockname");

3930 
buf
 = 
NULL
;

3932  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3933 
	`gësock«me
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3934  (
sockaddr
 *Ë
buf
,

3935  &
addæí
);

3938 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3939 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3942 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3943 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3947 i‡(
addæí
 != 0)

3948 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
, 
addæí
, 
cuºít
->
id
);

3949 
osf_addæí
 = (
qw‹d_t
Ë
addæí
;

3950 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
osf_addæí
,  (osf_addæí), 
cuºít
->
id
);

3952 i‡(
buf
 !
NULL
)

3953 
	`‰ì
 (
buf
);

3958 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

3959 
OSF_SYS_ﬁd_gë≥î«me
:

3962 *
buf
;

3963 
w‹d_t
 
osf_addæí
;

3965 #i‡
	`deföed
(
_AIX
)

3966 
addæí
;

3968 
addæí
;

3972 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
osf_addæí
,  (osf_addæí), 
cuºít
->
id
);

3973 
addæí
 = (Ë
osf_addæí
;

3974 i‡(
addæí
 != 0)

3976 
buf
 = 
	`ˇŒoc
 (1, 
addæí
);

3977 i‡(!
buf
)

3978 
	`Áèl
 ("cannotállocate memory in OSF_SYS_old_getsockname");

3981 
buf
 = 
NULL
;

3983  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

3984 
	`gë≥î«me
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

3985  (
sockaddr
 *Ë
buf
,

3986  &
addæí
);

3989 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

3990 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

3993 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

3994 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

3998 i‡(
addæí
 != 0)

3999 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], 
buf
, 
addæí
, 
cuºít
->
id
);

4000 
osf_addæí
 = (
qw‹d_t
Ë
addæí
;

4001 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
osf_addæí
,  (osf_addæí), 
cuºít
->
id
);

4003 i‡(
buf
 !
NULL
)

4004 
	`‰ì
 (
buf
);

4009 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4010 
OSF_SYS_£tgid
:

4013  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4014 
	`£tgid
 ( (
gid_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4017 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4018 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4021 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4022 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4027 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4028 
OSF_SYS_£tuid
:

4031  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4032 
	`£tuid
 ( (
uid_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4035 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4036 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4039 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4040 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4045 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4046 
OSF_SYS_gë¥i‹ôy
:

4049  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4050 
	`gë¥i‹ôy
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

4051  (Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4053 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4054 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4057 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4058 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4063 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4064 
OSF_SYS_£çri‹ôy
:

4067  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4068 
	`£çri‹ôy
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

4069  (Ë
ªgs
->
ªgs_R
[
MD_REG_A1
],

4070  (Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4073 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4074 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4077 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4078 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4083 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4084 
OSF_SYS_£À˘
:

4086 
fd_£t
 
ªadfd
, 
wrôefd
, 
ex˚±fd
;

4087 
fd_£t
 *
ªadfdp
, *
wrôefdp
, *
ex˚±fdp
;

4088 
timevÆ
 
timeout
, *
timeouç
;

4091 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

4093 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
ªadfd
,  (
fd_£t
), 
cuºít
->
id
);

4094 
ªadfdp
 = &
ªadfd
;

4097 
ªadfdp
 = 
NULL
;

4100 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

4102 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
wrôefd
,  (
fd_£t
), 
cuºít
->
id
);

4103 
wrôefdp
 = &
wrôefd
;

4106 
wrôefdp
 = 
NULL
;

4109 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

4111 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A3
], &
ex˚±fd
,  (
fd_£t
), 
cuºít
->
id
);

4112 
ex˚±fdp
 = &
ex˚±fd
;

4115 
ex˚±fdp
 = 
NULL
;

4118 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

4120 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, 
ªgs
->
ªgs_R
[
MD_REG_A4
], &
timeout
,  (
timevÆ
), 
cuºít
->
id
);

4121 
timeouç
 = &
timeout
;

4124 
timeouç
 = 
NULL
;

4126 #i‡
	`deföed
(
hpux
Ë|| deföed(
__hpux
)

4128  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4129 
	`£À˘
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
],

4130 (*Ë
ªadfdp
, (*Ë
wrôefdp
, (*Ë
ex˚±fdp
, 
timeouç
);

4133  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4134 
	`£À˘
 ( 
ªgs
->
ªgs_R
[
MD_REG_A0
],

4135 
ªadfdp
, 
wrôefdp
, 
ex˚±fdp
, 
timeouç
);

4139 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4140 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4143 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4144 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4148 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A1
] != 0)

4149 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A1
], &
ªadfd
,  (
fd_£t
), 
cuºít
->
id
);

4152 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A2
] != 0)

4153 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A2
], &
wrôefd
,  (
fd_£t
), 
cuºít
->
id
);

4156 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A3
] != 0)

4157 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A3
], &
ex˚±fd
,  (
fd_£t
), 
cuºít
->
id
);

4160 i‡– 
ªgs
->
ªgs_R
[
MD_REG_A4
] != 0)

4161 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A4
], &
timeout
,  (
timevÆ
), 
cuºít
->
id
);

4166 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4167 
OSF_SYS_shutdown
:

4170  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4171 
	`shutdown
 ( (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
],

4172  (Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4175 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4176 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4179 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4180 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4185 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4186 
OSF_SYS_pﬁl
:

4188 
i
;

4189 
pﬁlfd
 *
fds
;

4192 
fds
 = 
	`ˇŒoc
 ( 
ªgs
->
ªgs_R
[
MD_REG_A1
],  (
pﬁlfd
));

4193 i‡(!
fds
)

4194 
	`Áèl
 ("out of virtual memory in SYS_poll");

4197 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

4200 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Ród
, ( 
ªgs
->
ªgs_R
[
MD_REG_A0
] + 
i
 *  (
pﬁlfd
)), &
fds
[i],  (pﬁlfd), 
cuºít
->
id
);

4204  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4205 
	`pﬁl
 ( 
fds
,

4206  (Ë
ªgs
->
ªgs_R
[
MD_REG_A1
],

4207  (Ë
ªgs
->
ªgs_R
[
MD_REG_A2
]);

4210 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4211 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4214 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4215 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4219 
i
 = 0; i < 
ªgs
->
ªgs_R
[
MD_REG_A1
]; i++)

4222 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, ( 
ªgs
->
ªgs_R
[
MD_REG_A0
] + 
i
 *  (
pﬁlfd
)), &
fds
[i],  (pﬁlfd), 
cuºít
->
id
);

4226 
	`‰ì
 (
fds
);

4231 
OSF_SYS_u¶ìp_thªad
:

4233 
	`Ârötf
 (
°dîr
, "u¶ìp(%d)\n", (Ë
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4235 #ifde‡
Æpha


4236 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`u¶ìp
 ((Ëªgs->ªgs_R[
MD_REG_A0
]);

4238 
	`u¶ìp
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4239 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4242 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4243 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4246 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4247 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4250 
	`w¨n
 ("unsupported usleep_thread() call...");

4251 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4255 #i‡!
	`deföed
(
MIN_SYSCALL_MODE
)

4256 
OSF_SYS_gëho°«me
:

4259 *
buf
;

4261 
buf
 = 
	`mÆloc
 ( (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4262 i‡(!
buf
)

4263 
	`Áèl
 ("out of virtual memory in gethostname()");

4265  
ªgs
->
ªgs_R
[
MD_REG_V0
] =

4266 
	`gëho°«me
 ( 
buf
,

4267  (
size_t
Ë
ªgs
->
ªgs_R
[
MD_REG_A1
]);

4270 i‡(
ªgs
->
ªgs_R
[
MD_REG_V0
] !(
qw‹d_t
) - 1)

4271 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4274 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

4275 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
î∫o
;

4279 
	`mem_bc›y
 (
mem_‚
, 
mem
, 
Wrôe
, 
ªgs
->
ªgs_R
[
MD_REG_A0
], 
buf
,Ñegs->ªgs_R[
MD_REG_A1
], 
cuºít
->
id
);

4284 
OSF_SYS_madvi£
:

4285 
	`w¨n
 ("unsupported madvise() call ignored...");

4286 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4288 
OSF_SYS_f‹k
:

4289 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4290 
	`ÊushWrôeBuf„r
 (
˙t
);

4291 #i‡
	`deföed
(
MTA
)

4295 i‡(
numc⁄ãxts
 >
MAXTHREADS
)

4296 
	`Áèl
 ("TotalÇumber ofÅhreads hasÉxceededÅheÜimit");

4299 
	`Ârötf
 (
°dîr
, "C⁄ãxà%d AŒoˇtögÅhªad IDáà%Œd: %d\n", 
cuºít
->
id
, (
numc⁄ãxts
), 
sim_num_ö¢
);

4300 
	`¥ötf
 ("C⁄ãxà%d AŒoˇtögÅhªad ID: %dáà%Œd\n", 
cuºít
->
id
, (
numc⁄ãxts
), 
sim_num_ö¢
);

4301 
	`fÊush
 (
°dîr
);

4302 
	`fÊush
 (
°dout
);

4304 
√wC⁄ãxt
 = 
thec⁄ãxts
[
numc⁄ãxts
] = (
c⁄ãxt
 *Ë
	`ˇŒoc
 (1,  (context));

4305 i‡(
√wC⁄ãxt
 =
NULL
)

4307 
	`Ârötf
 (
°dîr
, "Allocation ofÇewÅhreads in fork failed\n");

4308 
	`exô
 (1);

4313 
√wC⁄ãxt
->
¨gv
 = (**Ë
	`mÆloc
 (30 *  (*));

4314 i‡(
√wC⁄ãxt
->
¨gv
 =
NULL
)

4316 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

4317 
	`exô
 (1);

4320 #ifdef 
COLLECT_STAT_STARTUP


4321 
thrdPîJobC¡
++;

4322 i‡(
thrdPîJobC¡
 =
THREADS_PER_JOB
)

4323 
cuºít
->
Á°fwd_d⁄e
 = 1;

4324 
√wC⁄ãxt
->
Á°fwd_d⁄e
 = 1;

4325 
√wC⁄ãxt
->
b¨rõrRóched
 = 0;

4326 
√wC⁄ãxt
->
°¨tRóched
 = 0;

4329 #ifdef 
EDA


4330 
√wC⁄ãxt
->
¥edQueue
 = 
NULL
;

4331 
√wC⁄ãxt
->
lockSètus
 = 0;

4332 
√wC⁄ãxt
->
boqIndex
 = -1;

4334 
˙t
 = 0; cnt < 30; cnt++)

4336 
√wC⁄ãxt
->
¨gv
[
˙t
] = 
NULL
;

4337 
√wC⁄ãxt
->
¨gv
[
˙t
] = (*Ë
	`mÆloc
 (240 *  ());

4338 i‡(
√wC⁄ãxt
->
¨gv
[
˙t
] =
NULL
)

4340 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

4341 
	`exô
 (1);

4345 
√wC⁄ãxt
->
sim_¥ogout
 = (*Ë
	`mÆloc
 (240);

4346 i‡(
√wC⁄ãxt
->
sim_¥ogout
 =
NULL
)

4348 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

4349 
	`exô
 (1);

4351 
√wC⁄ãxt
->
sim_¥ogö
 = (*Ë
	`mÆloc
 (240);

4352 i‡(
√wC⁄ãxt
->
sim_¥ogö
 =
NULL
)

4354 
	`Ârötf
 (
°dîr
, "Error inállocation\n");

4355 
	`exô
 (1);

4360 
√wC⁄ãxt
->
¨gc
 = 0;

4361 
√wC⁄ãxt
->
sim_öputfd
 = 0;

4362 
√wC⁄ãxt
->
sim_¥ogfd
 = 
NULL
;

4364 
√wC⁄ãxt
->
Á°fwd_cou¡
 = 0;

4366 
√wC⁄ãxt
->
id
 = 
numc⁄ãxts
;

4367 
√wC⁄ãxt
->
ma°îid
 = 
cuºít
->
id
;

4369 
√wC⁄ãxt
->
∑ª¡
 = 
cuºít
->
id
;

4371 
√wC⁄ãxt
->
a˘ive_this_cy˛e
 = 1;

4373 
√wC⁄ãxt
->
num_chûd
 = 0;

4374 
cuºít
->
num_chûd
++;

4375 
cuºít
->
num_chûd_a˘ive
++;

4379 
cﬁÀ˘SètB¨rõr
++;

4380 
cﬁÀ˘SètSt›
[
√wC⁄ãxt
->
id
] = 1;

4385 
√wC⁄ãxt
->
a˘uÆid
 = ++
thªadF‹ked
[
cuºít
->
id
];

4387 i‡(
thªadF‹ked
[
cuºít
->
id
] =(
THREADS_PER_JOB
-1))

4388 
cﬁÀ˘SètSt›
[
cuºít
->
id
] = 1;

4391 
√wC⁄ãxt
->
¨gfûe
 = 
cuºít
->argfile;

4392 
	`mem˝y
 (
√wC⁄ãxt
->
sim_¥ogout
, 
cuºít
->sim_progout, 240);

4393 
	`mem˝y
 (
√wC⁄ãxt
->
sim_¥ogö
, 
cuºít
->sim_progin, 240);

4399 
√wC⁄ãxt
->
sim_¥ogfd
 = 
cuºít
->sim_progfd;

4402 
√wC⁄ãxt
->
sim_öputfd
 = 
cuºít
->sim_inputfd;

4405 
√wC⁄ãxt
->
‚ame
 = 
NULL
;

4406 
˙t
 = 0; cnt < 30; cnt++)

4408 i‡(
cuºít
->
¨gv
[
˙t
])

4410 
	`mem˝y
 (
√wC⁄ãxt
->
¨gv
[
˙t
], 
cuºít
->argv[cnt], 240);

4413 
√wC⁄ãxt
->
¨gc
 = 
cuºít
->argc;

4417 
	`mem˝y
 (&
√wC⁄ãxt
->
ªgs
, &
cuºít
->ªgs,  (
ªgs_t
));

4419 
√wC⁄ãxt
->
ªgs
.
thªadid
 = 
numc⁄ãxts
;

4421 #i‡
PROCESS_MODEL


4423 
√wC⁄ãxt
->
mem
 = (
mem_t
 *Ë
	`ˇŒoc
 ( (mem_t), 1);

4424 
√wC⁄ãxt
->
mem
->
thªadid
 = 
numc⁄ãxts
;

4425 
√wC⁄ãxt
->
mem
->
∑ge_cou¡
 = 
cuºít
->mem->page_count;

4426 
√wC⁄ãxt
->
mem
->
±ab_mis£s
 = 
cuºít
->mem->ptab_misses;

4427 
√wC⁄ãxt
->
mem
->
±ab_ac˚s£s
 = 
cuºít
->mem->ptab_accesses;

4431 
√wC⁄ãxt
->
mem
->
«me
 = 
cuºít
->mem->name;

4432 
˙t
 = 0; c¡ < 
MEM_PTAB_SIZE
; cnt++)

4434 i‡(
cuºít
->
mem
->
±ab
[
˙t
] !
NULL
)

4437 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
] = (
mem_±e_t
 *Ë
	`ˇŒoc
 ( (mem_pte_t), 1);

4438 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
]->
èg
 = 
cuºít
->mem->ptab[cnt]->tag;

4440 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
]->
∑ge
 = (
byã_t
 *Ë
	`ˇŒoc
 (
MD_PAGE_SIZE
, 1);

4441 
	`mem˝y
 (
√wC⁄ãxt
->
mem
->
±ab
[
˙t
]->
∑ge
, 
cuºít
->mem->±ab[˙t]->∑ge, 
MD_PAGE_SIZE
);

4443 
tmpMemPåS
 = 
cuºít
->
mem
->
±ab
[
˙t
]->
√xt
;

4444 
tmpMemPåD
 = 
√wC⁄ãxt
->
mem
->
±ab
[
˙t
];

4445 
tmpMemPåS
 !
NULL
)

4447 
tmpMemPå
 = (
mem_±e_t
 *Ë
	`ˇŒoc
 ( (mem_pte_t), 1);

4448 
tmpMemPå
->
èg
 = 
tmpMemPåS
->tag;

4449 
tmpMemPå
->
∑ge
 = (
byã_t
 *Ë
	`ˇŒoc
 (
MD_PAGE_SIZE
, 1);

4450 
tmpMemPå
->
√xt
 = 
NULL
;

4451 
	`mem˝y
 (
tmpMemPå
->
∑ge
, 
tmpMemPåS
->∑ge, 
MD_PAGE_SIZE
);

4452 
tmpMemPåD
->
√xt
 = 
tmpMemPå
;

4453 
tmpMemPåD
 = 
tmpMemPå
;

4454 
tmpMemPåS
 =ÅmpMemPåS->
√xt
;

4461 
√wC⁄ãxt
->
mem
 = 
cuºít
->mem;

4465 
√wC⁄ãxt
->
ld_èrgë_big_ídün
 = 
cuºít
->ld_target_big_endian;

4467 
√wC⁄ãxt
->
ld_ãxt_ba£
 = 
cuºít
->ld_text_base;

4468 
√wC⁄ãxt
->
ld_ãxt_size
 = 
cuºít
->ld_text_size;

4469 
√wC⁄ãxt
->
ld_¥og_íåy
 = 
cuºít
->ld_prog_entry;

4470 
√wC⁄ãxt
->
ld_d©a_ba£
 = 
cuºít
->ld_data_base;

4471 
√wC⁄ãxt
->
ld_d©a_size
 = 
cuºít
->ld_data_size;

4472 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_GP
] = 
cuºít
->regs.regs_R[MD_REG_GP];

4475 
√wC⁄ãxt
->
sim_sw≠_byãs
 = 
cuºít
->sim_swap_bytes;

4476 
√wC⁄ãxt
->
sim_sw≠_w‹ds
 = 
cuºít
->sim_swap_words;

4484 #i‡
PROCESS_MODEL


4485 
√wC⁄ãxt
->
ld_°ack_ba£
 = 
cuºít
->
°ack_ba£
;

4486 
√wC⁄ãxt
->
°ack_ba£
 = 
cuºít
->stack_base;

4488 
√wC⁄ãxt
->
ld_°ack_ba£
 = 
cuºít
->
°ack_ba£
;

4489 
cuºít
->
°ack_ba£
 = cuºít->°ack_ba£ - 
STACKSIZE
;

4490 
√wC⁄ãxt
->
°ack_ba£
 = 
cuºít
->stack_base;

4494 
p
 = 
	`ˇŒoc
 (
STACKSIZE
,  ());

4495 
	`mem_bc›y
 (
mem_ac˚ss
, 
cuºít
->
mem
, 
Ród
, cuºít->
ld_°ack_ba£
 - 
STACKSIZE
, 
p
, STACKSIZE, cuºít->
id
);

4496 
	`mem_bc›y
 (
mem_ac˚ss
, 
cuºít
->
mem
, 
Wrôe
, 
√wC⁄ãxt
->
ld_°ack_ba£
 - 
STACKSIZE
, 
p
, STACKSIZE, cuºít->
id
);

4501 
√wC⁄ãxt
->
ld_°ack_size
 = 
cuºít
->ld_stack_size;

4502 
√wC⁄ãxt
->
ld_ívú⁄_ba£
 =ÇewC⁄ãxt->ld_ívú⁄_ba£ - 
STACKSIZE
;

4503 
√wC⁄ãxt
->
ld_brk_poöt
 = 
cuºít
->ld_brk_point;

4504 #i‡
PROCESS_MODEL


4505 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_SP
] = 
cuºít
->regs.regs_R[MD_REG_SP];

4507 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_SP
] = 
cuºít
->ªgs.ªgs_R[MD_REG_SP] - cuºít->
ld_°ack_ba£
 +ÇewContext->ld_stack_base;

4509 
√wC⁄ãxt
->
ªgs
.
ªgs_PC
 = 
cuºít
->regs.regs_PC;

4511 
√wC⁄ãxt
->
ld_°ack_mö
 =ÇewC⁄ãxt->
ld_°ack_ba£
;

4514 
√wC⁄ãxt
->
sim_eio_‚ame
 = 
NULL
;

4515 
√wC⁄ãxt
->
sim_chk±_‚ame
 = 
NULL
;

4516 
√wC⁄ãxt
->
sim_eio_fd
 = 
NULL
;

4517 
√wC⁄ãxt
->
ld_¥og_‚ame
 = 
NULL
;

4521 
√wC⁄ãxt
->
ª«me_ac˚ss
 = 0;

4522 
√wC⁄ãxt
->
rob1_ac˚ss
 = 0;

4523 
√wC⁄ãxt
->
rob2_ac˚ss
 = 0;

4524 
√wC⁄ãxt
->
sim_num_ö¢
 = 0;

4525 
√wC⁄ãxt
->
sim_tŸÆ_ö¢
 = 0;

4526 
√wC⁄ãxt
->
„tch_num_ö¢
 = 0;

4527 
√wC⁄ãxt
->
„tch_tŸÆ_ö¢
 = 0;

4528 
√wC⁄ãxt
->
sim_num_ªfs
 = 0;

4529 
√wC⁄ãxt
->
sim_tŸÆ_ªfs
 = 0;

4530 
√wC⁄ãxt
->
sim_num_lﬂds
 = 0;

4531 
√wC⁄ãxt
->
sim_tŸÆ_lﬂds
 = 0;

4532 
√wC⁄ãxt
->
sim_num_bønches
 = 0;

4533 
√wC⁄ãxt
->
sim_tŸÆ_bønches
 = 0;

4534 
√wC⁄ãxt
->
sim_övÆid_addrs
 = 0;

4535 
√wC⁄ãxt
->
ö°_£q
 = 0;

4536 
√wC⁄ãxt
->
±ø˚_£q
 = 0;

4537 
√wC⁄ãxt
->
ruu_„tch_issue_dñay
 = 0;

4538 
√wC⁄ãxt
->
waô_f‹_„tch
 = 0;

4539 #ifdef 
CACHE_MISS_STAT


4540 
√wC⁄ãxt
->
•ec_rdb_miss_cou¡
 = 0;

4541 
√wC⁄ãxt
->
•ec_wrb_miss_cou¡
 = 0;

4542 
√wC⁄ãxt
->
n⁄_•ec_rdb_miss_cou¡
 = 0;

4543 
√wC⁄ãxt
->
n⁄_•ec_wrb_miss_cou¡
 = 0;

4544 
√wC⁄ãxt
->
ö°_miss_cou¡
 = 0;

4545 
√wC⁄ãxt
->
lﬂd_miss_cou¡
 = 0;

4546 
√wC⁄ãxt
->
°‹e_miss_cou¡
 = 0;

4549 
√wC⁄ãxt
->
„tch_num_thrd
 = 0;

4550 
√wC⁄ãxt
->
iissueq_thrd
 = 0;

4551 
√wC⁄ãxt
->
fissueq_thrd
 = 0;

4552 
√wC⁄ãxt
->
icou¡_thrd
 = 0;

4553 
√wC⁄ãxt
->
œ°_›
.
√xt
 = 
NULL
;

4554 
√wC⁄ãxt
->
œ°_›
.
rs
 = 
NULL
;

4555 
√wC⁄ãxt
->
œ°_›
.
èg
 = 0;

4557 
√wC⁄ãxt
->
„tch_ªdúe˘ed
 = 
FALSE
;

4558 
√wC⁄ãxt
->
buckë_‰ì_li°
 = 
NULL
;

4559 
√wC⁄ãxt
->
°¨t_cy˛e
 = 
sim_cy˛e
;

4560 
√wC⁄ãxt
->
°ÆlThªad
 = 0;

4561 
√wC⁄ãxt
->
waôF‹
 = 0;

4562 
√wC⁄ãxt
->
WBFuŒ
 = 0;

4563 
√wC⁄ãxt
->
waôF‹BønchResﬁve
 = 0;

4564 
√wC⁄ãxt
->
NRLoˇlHôsLﬂd
 = 0;

4565 
√wC⁄ãxt
->
NRRemŸeHôsLﬂd
 = 0;

4566 
√wC⁄ãxt
->
NRMissLﬂd
 = 0;

4567 
√wC⁄ãxt
->
NRLoˇlHôsSt‹e
 = 0;

4568 
√wC⁄ãxt
->
NRRemŸeHôsSt‹e
 = 0;

4569 
√wC⁄ãxt
->
NRMissSt‹e
 = 0;

4570 
√wC⁄ãxt
->
¥e£¡
 = 0;

4585 
√wC⁄ãxt
->
D©aLoˇt‹Hô
 = 0;

4586 
√wC⁄ãxt
->
D©aLoˇt‹Miss
 = 0;

4589 
√wC⁄ãxt
->
•ec_mode
 = 
cuºít
->spec_mode;

4594 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_R
, 
R_BMAP_SZ
);

4595 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_F
, 
F_BMAP_SZ
);

4596 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_C
, 
C_BMAP_SZ
);

4597 
˙t
 = 0; c¡ < 
STORE_HASH_SIZE
; cnt++)

4599 
√wC⁄ãxt
->
°‹e_hèbÀ
[
˙t
] = 
NULL
;

4602 
˙t
 = 0; c¡ < 
MD_TOTAL_REGS
; cnt++)

4604 
√wC⁄ãxt
->
¸óã_ve˘‹
[
˙t
] = 
CVLINK_NULL
;

4605 
√wC⁄ãxt
->
¸óã_ve˘‹_π
[
˙t
] = 0;

4606 
√wC⁄ãxt
->
•ec_¸óã_ve˘‹
[
˙t
] = 
CVLINK_NULL
;

4607 
√wC⁄ãxt
->
•ec_¸óã_ve˘‹_π
[
˙t
] = 0;

4610 
	`BITMAP_CLEAR_MAP
 (
√wC⁄ãxt
->
u£_•ec_cv
, 
CV_BMAP_SZ
);

4613 
√wC⁄ãxt
->
RUU
 = 
	`ˇŒoc
 (
RUU_size
,  (
RUU_°©i⁄
));

4615 
˙t
 = 0; c¡ < 
RUU_size
; cnt++)

4616 
√wC⁄ãxt
->
RUU
[
˙t
].
ödex
 = cnt;

4617 
√wC⁄ãxt
->
RUU_num
 = 0;

4618 
√wC⁄ãxt
->
RUU_hód
 =ÇewC⁄ãxt->
RUU_èû
 = 0;

4619 
√wC⁄ãxt
->
RUU_cou¡_thrd
 = 0;

4620 
√wC⁄ãxt
->
RUU_fcou¡_thrd
 = 0;

4622 
√wC⁄ãxt
->
numDL1CacheAc˚ss
 = 0;

4623 
√wC⁄ãxt
->
numLoˇlHôs
 = 0;

4624 
√wC⁄ãxt
->
numRemŸeHôs
 = 0;

4625 
√wC⁄ãxt
->
numMemAc˚ss
 = 0;

4626 
√wC⁄ãxt
->
numRódCacheAc˚ss
 = 0;

4627 
√wC⁄ãxt
->
numWrôeCacheAc˚ss
 = 0;

4628 
√wC⁄ãxt
->
numInvÆid©i⁄s
 = 0;

4629 
√wC⁄ãxt
->
numDL1Hôs
 = 0;

4630 
√wC⁄ãxt
->
numDL1Mis£s
 = 0;

4631 
√wC⁄ãxt
->
numIn¢
 = 0;

4632 
√wC⁄ãxt
->
numIn°rB¨rõr
 = 0;

4633 
√wC⁄ãxt
->
numCy˛eB¨rõr
 = 0;

4634 
√wC⁄ãxt
->
tŸÆB¨rõrIn°r
 = 0;

4635 
√wC⁄ãxt
->
tŸÆB¨rõrCy˛e
 = 0;

4637 
√wC⁄ãxt
->
TŸÆnumDL1CacheAc˚ss
 = 0;

4638 
√wC⁄ãxt
->
TŸÆnumLoˇlHôs
 = 0;

4639 
√wC⁄ãxt
->
TŸÆnumRemŸeHôs
 = 0;

4640 
√wC⁄ãxt
->
TŸÆnumMemAc˚ss
 = 0;

4641 
√wC⁄ãxt
->
TŸÆnumRódCacheAc˚ss
 = 0;

4642 
√wC⁄ãxt
->
TŸÆnumWrôeCacheAc˚ss
 = 0;

4643 
√wC⁄ãxt
->
TŸÆnumInvÆid©i⁄s
 = 0;

4644 
√wC⁄ãxt
->
TŸÆnumDL1Hôs
 = 0;

4645 
√wC⁄ãxt
->
TŸÆnumDL1Mis£s
 = 0;

4646 
√wC⁄ãxt
->
TŸÆnumIn¢
 = 0;

4647 
√wC⁄ãxt
->
‰ìze
 = 0;

4648 
√wC⁄ãxt
->
waôF‹STLC
 = 0;

4649 
√wC⁄ãxt
->
¶ïtAt
 = 0;

4653 #i‡
	`deföed
(
TEMPDEBUG
)

4654 
	`¥ötf
 ("Cuºít->RUU_num = %d\n", 
cuºít
->
RUU_num
);

4656 
√wC⁄ãxt
->
föish_cy˛e
 = 0;

4657 
√wC⁄ãxt
->
ru¬ög
 = 1;

4658 
√wC⁄ãxt
->
„tch_ªgs_PC
 = 
cuºít
->fetch_regs_PC;

4659 
√wC⁄ãxt
->
„tch_¥ed_PC
 = 
cuºít
->fetch_pred_PC;

4660 
√wC⁄ãxt
->
¥ed_PC
 = 
cuºít
->pred_PC;

4661 
√wC⁄ãxt
->
ªcovî_PC
 = 
cuºít
->recover_PC;

4662 
√wC⁄ãxt
->
°¨t_cy˛e
 = 
sim_cy˛e
;

4665 
√wC⁄ãxt
->
„tch_¥ed_PC
 = 
cuºít
->
ªgs
.
ªgs_NPC
;

4666 #ifde‡
DO_COMPLETE_FASTFWD


4667 
√wC⁄ãxt
->
ªgs
.
ªgs_PC
 + (
md_ö°_t
);

4668 
√wC⁄ãxt
->
ªgs
.
ªgs_NPC
 = 
cuºít
->ªgs.ªgs_NPC +  (
md_ö°_t
);

4672 
thec⁄ãxts
[
numc⁄ãxts
] = 
√wC⁄ãxt
;

4673 
numc⁄ãxts
++;

4676 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4678 
¥i‹ôy
[
˙t
] = cnt;

4679 
key
[
˙t
] = 0;

4682 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4683 
	`ˇche_Êush
 (
ˇche_dl1
[
˙t
], 
sim_cy˛e
);

4685 
	`°ìr_öô
 ();

4686 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4687 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_V0
] =ÇewC⁄ãxt->
a˘uÆid
;

4688 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4689 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_A3
] = 0;

4690 
ªgs
->
ªgs_R
[
MD_REG_A4
] = 0;

4691 
√wC⁄ãxt
->
ªgs
.
ªgs_R
[
MD_REG_A4
] = 0;

4693 
	`ruu_öô
 (
√wC⁄ãxt
->
id
);

4694 
	`lsq_öô
 (
√wC⁄ãxt
->
id
);

4695 
	`„tch_öô
 (
√wC⁄ãxt
->
id
);

4696 
	`cv_öô
 (
√wC⁄ãxt
->
id
);

4699 #i‡
	`deföed
(
MTA
)

4700 
OSF_SYS_gëthªadid
:

4702 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
cuºít
->
a˘uÆid
;

4703 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4705 
OSF_SYS_öô_°¨t
:

4706 
	`¥ötf
 ("init_start...\n");

4708 
OSF_SYS_öô
:

4709 
MTAc⁄ãxts
 = 
numc⁄ãxts
;

4710 
	`¥ötf
 ("öô ...%d\n", 
cuºít
->
id
);

4711 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4712 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4715 
OSF_SYS_öô_com∂ëe
:

4716 
	`¥ötf
 ("init_complete ...\n");

4718 
OSF_SYS_di°ribuã
:

4719 
	`¥ötf
 ("distribute ...\n");

4721 
OSF_SYS_time
:

4722 
	`¥ötf
 ("time ...\n");

4725 
OSF_SYS_b¨rõr
:

4726 
	`¥ötf
 ("barrier ...\n");

4729 
OSF_SYS_lock_acquúe
:

4730 
	`¥ötf
 ("lock_acquire ...\n");

4732 
OSF_SYS_lock_ªÀa£
:

4733 
	`¥ötf
 ("lock_release ...\n");

4735 
OSF_SYS_Êag_acquúe
:

4736 
	`¥ötf
 ("flag_acquire ...\n");

4738 
OSF_SYS_Êag_ªÀa£
:

4739 
	`¥ötf
 ("flag_release ...\n");

4741 
OSF_SYS_öc_Êag
:

4742 
	`¥ötf
 ("inc_flag ...\n");

4744 
OSF_SYS_pﬁl_Êag
:

4745 
	`¥ötf
 ("poll_flag ...\n");

4747 
OSF_SYS_waô_gt_Êag
:

4748 
	`¥ötf
 ("gt_flag ...\n");

4750 
OSF_SYS_waô_…_Êag
:

4751 
	`¥ötf
 ("lt_flag ...\n");

4756 
OSF_SYS_¥ötf
:

4758 
	`fÊush
 (
°dîr
);

4759 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4760 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4762 
OSF_SYS_STATS
:

4763 if(
cﬁÀ˘_°©s
 == 0)

4765 #i‚de‡
PARALLEL_EMUL


4766 
cﬁÀ˘_°©s
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4768 #ifdef 
COLLECT_STAT_STARTUP


4769 
cuºít
->
°¨tRóched
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4771 i‡(
cﬁÀ˘_°©s
 == 1)

4773 
	`¥ötf
("Initialization over:Åiming simulation can startÇow\n");

4774 
	`Ârötf
(
°dîr
,"Initialization over:Åiming simulation can startÇow\n");

4775 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4776 
thec⁄ãxts
[
˙t
]->
°¨t_cy˛e
 = 
sim_cy˛e
;

4777 
ÊushImpSèts
 = 1;

4780 i‡(
cﬁÀ˘_°©s
 == 1)

4782 
cﬁÀ˘_°©s
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4783 #ifdef 
COLLECT_STAT_STARTUP


4784 
cuºít
->
°¨tRóched
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4786 if(
cﬁÀ˘_°©s
 == 0)

4788 
	`¥ötf
("Computation over:Åiming simulation can stopÇow\n");

4789 
	`Ârötf
(
°dîr
,"Computation over:Åiming simulation can stopÇow\n");

4790 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4791 
thec⁄ãxts
[
˙t
]->
föish_cy˛e
 = 
sim_cy˛e
;

4792 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4794 
	`¥ötf
 ("free freeze\n");

4795 
thec⁄ãxts
[
˙t
]->
‰ìze
 = 0;

4796 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

4797 
thec⁄ãxts
[
˙t
]->
waôF‹STLC
 = 0;

4798 
	`ÊushWrôeBuf„r
 (
˙t
);

4800 
timeToRëu∫
 = 1;

4804 
	`∑nic
 ("collect_stats is invalid");

4805 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4806 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4808 
OSF_SYS_FASTFWD
:

4809 
Á°fwd
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4810 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4811 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4814 
OSF_SYS_BARRIER_STATS
:

4815 
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4817 i‡(
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] == 1)

4819 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 
cﬁÀ˘_b¨rõr_°©s_own
[current->id];

4820 
	`¥ötf
("E¡îög b¨rõ∏%d\n", 
cuºít
->
id
);

4821 if(
cuºít
->
Á°fwd_d⁄e
 == 0)

4822 
cuºít
->
Á°fwd_d⁄e
 = 1;

4823 
	`fÊush
(
°dout
);

4824 
cuºít
->
numIn°rB¨rõr
 = cuºít->
numIn¢
;

4825 
cuºít
->
numCy˛eB¨rõr
 = 
sim_cy˛e
;

4827 i‡(
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] == 0)

4829 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 
cﬁÀ˘_b¨rõr_°©s_own
[current->id];

4830 
	`¥ötf
("Lóvög b¨rõ∏%d\n", 
cuºít
->
id
);

4831 
	`fÊush
(
°dout
);

4832 
cuºít
->
tŸÆB¨rõrIn°r
 +(cuºít->
numIn¢
 - cuºít->
numIn°rB¨rõr
);

4833 
cuºít
->
tŸÆB¨rõrCy˛e
 +(
sim_cy˛e
 - cuºít->
numCy˛eB¨rõr
);

4835 if(
cﬁÀ˘_b¨rõr_°©s_own
[
cuºít
->
id
] == 2)

4836 
cﬁÀ˘_b¨rõr_ªÀa£
 = 2;

4838 
b¨rõr_addr
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4845 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4846 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4848 
OSF_SYS_LOCK_STATS
:

4849 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4850 i‡(
ªgs
->
ªgs_R
[
MD_REG_A0
] == 1)

4852 
cuºít
->
numIn°rLock
 = cuºít->
numIn¢
;

4853 
cuºít
->
numCy˛eLock
 = 
sim_cy˛e
;

4854 if(
LockInôPC
 == 0)

4856 
LockInôPC
 = 
cuºít
->
ªgs
.
ªgs_PC
;

4857 
	`¥ötf
("öôülizedÖ¯f‹Üock i†%Œx\n", 
LockInôPC
);

4860 i‡(
ªgs
->
ªgs_R
[
MD_REG_A0
] == 0)

4862 
TŸÆLocks
++;

4863 
cuºít
->
tŸÆLockIn°r
 +(cuºít->
numIn¢
 - cuºít->
numIn°rLock
);

4864 
cuºít
->
tŸÆLockCy˛e
 +(
sim_cy˛e
 - cuºít->
numCy˛eLock
);

4865 
lock_waôög
[
cuºít
->
id
] = 0;

4867 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4868 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4870 
OSF_SYS_WAIT
:

4881 i‡(
cuºít
->
∑ª¡
 != -1)

4883 
	`Ârötf
 (
°dîr
, "***************Thªad %d i†hÆtög**************\n", 
cuºít
->
id
);

4884 
	`Ârötf
 (
°dîr
, "TŸB¨Cy˛ê%8ld, TŸB¨In°∏%8ld\n", (Ë
cuºít
->
tŸÆB¨rõrCy˛e
, (Ëcuºít->
tŸÆB¨rõrIn°r
);

4885 
	`Ârötf
 (
°dîr
, "TŸLockCy˛ê%8ld, TŸLockIn°∏%8ld\n", (Ë
cuºít
->
tŸÆLockCy˛e
, (Ëcuºít->
tŸÆLockIn°r
);

4886 
	`¥öt_°©s
 (
cuºít
);

4888 
	`MTA_¥ötInfo
 (
cuºít
->
id
);

4889 
cuºít
->
ru¬ög
 = 0;

4890 
cuºít
->
‰ìze
 = 1;

4891 
	`¥ötf
 ("‰ìzêby WAIT: %d\n", 
cuºít
->
id
);

4894 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4895 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4896 
thec⁄ãxts
[
cuºít
->
∑ª¡
]->
num_chûd
--;

4900 i‡(
cuºít
->
num_chûd
 == 0)

4902 
	`Ârötf
 (
°dîr
, "***************Thªad %d i†hÆtög**************\n", 
cuºít
->
id
);

4903 
	`Ârötf
 (
°dîr
, "TŸB¨Cy˛ê%10ld, TŸB¨In°∏%10ld\n", (Ë
cuºít
->
tŸÆB¨rõrCy˛e
, (Ëcuºít->
tŸÆB¨rõrIn°r
);

4904 
	`Ârötf
 (
°dîr
, "TŸLockCy˛ê%10ld, TŸLockIn°∏%10ld\n", (Ë
cuºít
->
tŸÆLockCy˛e
, (Ëcuºít->
tŸÆLockIn°r
);

4906 
	`¥öt_°©s
 (
cuºít
);

4908 
	`MTA_¥ötInfo
 (
cuºít
->
id
);

4909 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 1;

4910 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4914 
ªgs
->
ªgs_R
[
MD_REG_V0
] = -1;

4915 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4920 
OSF_SYS_MTA_hÆt
:

4921 
cuºít
->
ru¬ög
 = 0;

4922 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4923 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4926 
OSF_SYS_MTA_°¨t
:

4927 
	`¥ötf
 ("StartingÅhreads\n");

4928 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4929 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

4930 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4931 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4933 
OSF_SYS_b¨rõr
:

4934 i‡(
cuºít
->
∑ª¡
 == -1)

4936 
tmpNum
 = 
numThªads
[
cuºít
->
id
] =ÇumThreads[current->id] - 1;

4940 
tmpNum
 = 
numThªads
[
cuºít
->
∑ª¡
] =ÇumThreads[current->parent] - 1;

4943 i‡(
tmpNum
 == 0)

4945 
	`Ârötf
 (
°dîr
, "BARRIER\n");

4946 
˙t
 = 0; c¡ < 
numc⁄ãxts
; cnt++)

4948 
thec⁄ãxts
[
˙t
]->
ru¬ög
 = 1;

4950 i‡(
cuºít
->
∑ª¡
 == -1)

4952 
numThªads
[
cuºít
->
id
] = 
mè_maxthªads
;

4956 
numThªads
[
cuºít
->
∑ª¡
] = 
mè_maxthªads
;

4958 i‡(
°¨tTakögSèti°ics
 == 1)

4959 
cuºítPha£
 = 7;

4960 
°¨tTakögSèti°ics
 = 1;

4964 
cuºít
->
ru¬ög
 = 0;

4966 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4967 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4970 
OSF_SYS_BARRIER_INSTR
:

4971 #ifdef 
COLLECT_STAT_STARTUP


4972 
cuºít
->
b¨rõrRóched
 = 2;

4974 #i‚de‡
PARALLEL_EMUL


4975 if(
cﬁÀ˘_°©s
)

4977 
TŸÆB¨rõrs
 ++;

4978 
cﬁÀ˘_b¨rõr_ªÀa£
 = 0;

4979 i‡(
°¨tTakögSèti°ics
 == 1)

4980 
cuºítPha£
 = 7;

4981 
°¨tTakögSèti°ics
 = 1;

4982 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

4983 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

4984 
i
=0;

4986 #ifde‡
LOCK_OPTI


4987 
OSF_SYS_LOCKADDR
:

4988 
lock_èû
[
cuºít
->
id
] = 0;

4989 
lock_addr
[
cuºít
->
id
][
lock_èû
[cuºít->id]] = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

4990 
	`¥ötf
("thªadid %d,Üockádd∏%u\n", 
cuºít
->
id
, 
ªgs
->
ªgs_R
[
MD_REG_A0
]);

4993 
OSF_SYS_IDEAL_BAR
:

4994 #ifde‡
IDEAL_LOCK


4995 
B¨rõr_Êag
[
ªgs
->
ªgs_R
[
MD_REG_A0
]] = 1;

4996 
B¨rõr_num
[
b¨rõr_ãmp
] ++;

4997 if(
B¨rõr_num
[
b¨rõr_ãmp
] =
numc⁄ãxts
)

4999 
B¨rõr_num
[
b¨rõr_ãmp
] = 0;

5000 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

5001 
i
 = 0;

5002 
i
=0;i<
numc⁄ãxts
;i++)

5004 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

5005 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

5006 
b¨rõr_waôög
[
i
] = 0;

5007 
cﬁÀ˘_b¨rõr_°©s
[
i
] = 0;

5009 if(
cﬁÀ˘_°©s
)

5010 
TŸÆB¨rõrs
 ++;

5014 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 1;

5015 
b¨rõr_waôög
[
cuºít
->
id
] = 1;

5016 
cuºít
->
ru¬ög
 = 0;

5017 
cuºít
->
‰ìze
 = 1;

5018 
¶ìpCou¡
[
cuºít
->
id
]++;

5019 
cuºít
->
¶ïtAt
 = 
sim_cy˛e
;

5020 
‰ìzeCou¡î
++;

5023 #ifde‡
LOCK_HARD


5024 if(
cﬁÀ˘_°©s
)

5025 
	`SyncO≥øti⁄
(
b¨rõr_ãmp
, 
cuºít
->
id
, 
BAR_ACQUIRE
);

5028 
B¨rõr_Êag
[
ªgs
->
ªgs_R
[
MD_REG_A0
]] = 1;

5029 
B¨rõr_num
[
b¨rõr_ãmp
] ++;

5030 if(
B¨rõr_num
[
b¨rõr_ãmp
] =
numc⁄ãxts
)

5032 
B¨rõr_num
[
b¨rõr_ãmp
] = 0;

5033 
b¨rõr_ãmp
 = (b¨rõr_ãm∞+ 1)%
MAXBARRIER
;

5034 
i
 = 0;

5035 
i
=0;i<
numc⁄ãxts
;i++)

5037 
thec⁄ãxts
[
i
]->
ru¬ög
 = 1;

5038 
thec⁄ãxts
[
i
]->
‰ìze
 = 0;

5039 
b¨rõr_waôög
[
i
] = 0;

5040 
cﬁÀ˘_b¨rõr_°©s
[
i
] = 0;

5042 if(
cﬁÀ˘_°©s
)

5043 
TŸÆB¨rõrs
 ++;

5047 
cﬁÀ˘_b¨rõr_°©s
[
cuºít
->
id
] = 1;

5048 
b¨rõr_waôög
[
cuºít
->
id
] = 1;

5049 
cuºít
->
ru¬ög
 = 0;

5050 
cuºít
->
‰ìze
 = 1;

5051 
¶ìpCou¡
[
cuºít
->
id
]++;

5052 
cuºít
->
¶ïtAt
 = 
sim_cy˛e
;

5053 
‰ìzeCou¡î
++;

5059 
OSF_SYS_IDEAL_LOCKACQ
:

5060 #ifde‡
IDEAL_LOCK


5063 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

5064 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 1;

5065 if(
Lock_Acquúe
[
Lock_id
] != 0)

5067 
lock_waôög
[
cuºít
->
id
] = 1;

5074 
Lock_waô_id
[
Lock_id
][
Lock_èû
[Lock_id]] = 
cuºít
->
id
;

5075 
Lock_waô_num
[
Lock_id
] ++;

5076 
Lock_èû
[
Lock_id
] = (Lock_èû[Lock_id]+1+
MAXLOCK
)%MAXLOCK;

5077 if(
Lock_èû
[
Lock_id
] =
Lock_hód
[Lock_id])

5078 
	`∑nic
("IdealÜock: Lockácquire queue full\n");

5082 
Lock_Acquúe
[
Lock_id
] = 
cuºít
->
id
 + 1;

5085 #ifde‡
LOCK_HARD


5087 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

5088 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 1;

5089 
	`Ârötf
(
Â_åa˚
, "thªadid %dácqÜock %d\n", 
cuºít
->
id
, 
Lock_id
);

5090 
	`SyncO≥øti⁄
(
Lock_id
, 
cuºít
->
id
, 
ACQUIRE
);

5094 
OSF_SYS_IDEAL_LOCKREL
:

5095 #ifde‡
IDEAL_LOCK


5098 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

5099 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 0;

5100 if(
Lock_Acquúe
[
Lock_id
] !
cuºít
->
id
 + 1)

5101 
	`∑nic
("IdealÜock:ÇotÅheÑightÅhreadÑeleaseÅheÜock!\n");

5105 
Lock_Acquúe
[
Lock_id
] = 0;

5106 if(
Lock_waô_num
[
Lock_id
])

5108 
˙t
 = 
Lock_waô_id
[
Lock_id
][
Lock_hód
[Lock_id]];

5111 
lock_waôög
[
˙t
] = 0;

5113 
Lock_Acquúe
[
Lock_id
] = 
˙t
+1;

5114 
Lock_waô_num
[
Lock_id
] --;

5115 
Lock_hód
[
Lock_id
] = (Lock_hód[Lock_id]+1+
MAXLOCK
)%MAXLOCK;

5119 #ifde‡
LOCK_HARD


5120 
Lock_id
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

5121 
cﬁÀ˘_lock_°©s
[
cuºít
->
id
] = 0;

5122 
	`SyncO≥øti⁄
(
Lock_id
, 
cuºít
->
id
, 
RELEASE
);

5127 
OSF_SYS_QUEISCE
:

5128 #ifdef 
COLLECT_STAT_STARTUP


5129 
cuºít
->
b¨rõrRóched
 = 1;

5134 i‡(!
cuºít
->
ma°îid
)

5136 
cuºít
->
ru¬ög
 = 0;

5137 
cuºít
->
‰ìze
 = 1;

5138 
¶ìpCou¡
[
cuºít
->
id
]++;

5142 
	`fÊush
 (
°dout
);

5143 
quõs˚AddrSåu˘
[
cuºít
->
id
].
addªss
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

5144 
quõs˚AddrSåu˘
[
cuºít
->
id
].
thªadid
 = current->id;

5145 
cuºít
->
¶ïtAt
 = 
sim_cy˛e
;

5146 
‰ìzeCou¡î
++;

5148 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5149 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5151 
OSF_SYS_RANDOM
:

5152 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 
	`øndom
 ();

5153 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5155 
OSF_SYS_MEM
:

5156 
ac˚ss_mem
 = 
ªgs
->
ªgs_R
[
MD_REG_A0
];

5157 
ac˚ss_mem_id
 = 
cuºít
->
id
;

5158 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5159 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5161 
OSF_SYS_PRINTGP
:

5162 
	`¥ötf
 ("%d, GP = %Œx\n", 
cuºít
->
id
, cuºít->
ªgs
.
ªgs_R
[
MD_REG_GP
]);

5163 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5164 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5168 
OSF_SYS_SHDADDR
:

5169 
	`AddToTheSh¨edAddrLi°
 ((Ë
ªgs
->
ªgs_R
[
MD_REG_A0
], (Ëªgs->ªgs_R[
MD_REG_A1
]);

5170 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5171 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5173 
OSF_SYS_STOPSIM
:

5174 
°›sim
 = 1;

5175 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5176 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5178 
OSF_SYS_PRINTINSTR
:

5179 
	`Ârötf
 (
°dîr
, "%Œd\n", (Ë
sim_num_ö¢
);

5180 
	`fÊush
 (
°dîr
);

5181 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5182 
ªgs
->
ªgs_R
[
MD_REG_A3
] = 0;

5186 
	`w¨n
 ("övÆid/unim∂emíãd sysˇŒ %ld, PC=0x%08p, RA=0x%08p, wögög it", 
syscode
, 
ªgs
->
ªgs_PC
,Ñegs->
ªgs_R
[
MD_REG_RA
]);

5187 
ªgs
->
ªgs_R
[
MD_REG_A3
] = -1;

5188 
ªgs
->
ªgs_R
[
MD_REG_V0
] = 0;

5190 
	`Áèl
 ("övÆid/unim∂emíãd sy°em cÆ»ícou¡îed, codê%d", 
syscode
);

5195 
	}
}

5198 
	$ˇŒ_quõs˚
 (
thªadID
)

5200 
	`¥ötf
 ("Quõs˚¡ in°ru˘i⁄ cÆÀd by %d\n", 
thªadID
);

5201 
	}
}

	@sysprobe.c

113 
	~<°dio.h
>

114 
	~<°dlib.h
>

115 #i‚de‡
_MSC_VER


116 
	~<uni°d.h
>

118 
	#ac˚ss
 
_ac˚ss


	)

119 
	#X_OK
 4

	)

122 
	~"ho°.h
"

123 
	~"misc.h
"

125 *
	ggzù_∑ths
[] =

133 
NULL


136 
	#HOST_ONLY


	)

137 
	~"ídün.c
"

139 
	#CAT
(
a
,
b
Ë®
	)
b

141 
	#MSB
 0x80000000

	)

143 
	$Á°_SRL
()

145 
w‹d_t
 
ui
;

147 i‡((
ui
) != 4)

150  
FALSE
;

153 
ui
 = (
w‹d_t
)
MSB
;

154 i‡(((
ui
 >> 1Ë& 
MSB
) != 0)

157  
FALSE
;

162  
TRUE
;

164 
	}
}

167 
	$Á°_SRA
()

169 
sw‹d_t
 
si
;

171 i‡((
si
) != 4)

174  
FALSE
;

177 
si
 = (
sw‹d_t
)
MSB
;

178 i‡((
si
 >> 1Ë& 
MSB
)

181  
TRUE
;

186  
FALSE
;

188 
	}
}

191 
	$maö
(
¨gc
, **
¨gv
)

193 
lôée_byãs
 = 0, 
lôée_w‹ds
 = 0;

195 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-s"))

197 
	`ídün_ho°_byã_‹dî
())

199 
ídün_big
:

200 
	`Ârötf
(
°dout
, "big\n");

202 
ídün_lôée
:

203 
	`Ârötf
(
°dout
, "little\n");

205 
ídün_unknown
:

206 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

207 
	`exô
(1);

209 
	`ab‹t
();

212 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-libs"))

214 #ifde‡
BFD_LOADER


215 
	`Ârötf
(
°dout
, "-lbfd -liberty ");

218 #ifde‡
löux


220 #ñi‡
	`deföed
(
_AIX
)

222 
	`Ârötf
(
°dout
, "-lbsd ");

223 #ñi‡
	`deföed
(
__USLC__
Ë|| (deföed(
__svr4__
Ë&& deföed(
__i386__
Ë&& deföed(
__unix__
))

224 
	`Ârötf
(
°dout
, "-L/usr/ucblib -lucb ");

225 #ñi‡
	`deföed
(
__svr4__
Ë&& deföed(
__sun__
Ë&& deföed(
__unix__
)

226 
	`Ârötf
(
°dout
, "-lsocket -lnsl ");

230 
	`Ârötf
(
°dout
, "-lm\n");

232 i‡(
¨gc
 =1 || (¨g¯=2 && !
	`°rcmp
(
¨gv
[1], "-flags")))

234 
	`ídün_ho°_byã_‹dî
())

236 
ídün_big
:

237 
	`Ârötf
(
°dout
, "-DBYTES_BIG_ENDIAN ");

239 
ídün_lôée
:

240 
	`Ârötf
(
°dout
, "-DBYTES_LITTLE_ENDIAN ");

241 
lôée_byãs
 = 1;

243 
ídün_unknown
:

244 
	`Ârötf
(
°dîr
, "\nerror: cannot determine byte order!\n");

245 
	`exô
(1);

247 
	`ab‹t
();

250 
	`ídün_ho°_w‹d_‹dî
())

252 
ídün_big
:

253 
	`Ârötf
(
°dout
, "-DWORDS_BIG_ENDIAN ");

255 
ídün_lôée
:

256 
	`Ârötf
(
°dout
, "-DWORDS_LITTLE_ENDIAN ");

257 
lôée_w‹ds
 = 1;

259 
ídün_unknown
:

260 
	`Ârötf
(
°dîr
, "\nerror: cannot determine word order!\n");

261 
	`exô
(1);

263 
	`ab‹t
();

266 #ifde‡
_AIX


267 
	`Ârötf
(
°dout
, "-D_ALL_SOURCE ");

269 
	`Ârötf
(
°dout
, "-DPOWER_64 ");

270 #i‚de‡
__GNUC__


271 
	`Ârötf
(
°dout
, "-D__CC_XLC ");

275 #i‡(
	`deföed
(
hpux
Ë|| deföed(
__hpux
)Ë&& !deföed(
__GNUC__
)

276 
	`Ârötf
(
°dout
, "-D_INCLUDE_HPUX_SOURCE -D_INCLUDE_XOPEN_SOURCE -D_INCLUDE_AES_SOURCE ");

279 #i‚de‡
__GNUC__


283 
i
 = 5, 
j
;

285 
j
 = 
	`CAT
(-,-
i
);

287 i‡(
j
 == 4)

290 
	`Ârötf
(
°dout
, "-DOLD_SYMCAT ");

292 i‡(
j
 == 5)

301 
	`Ârötf
(
°dîr
, "\nerror: cannot grok symbol concat method!\n");

302 
	`exô
(1);

307 #i‚de‡
SLOW_SHIFTS


309 i‡(
	`Á°_SRL
())

310 
	`Ârötf
(
°dout
, "-DFAST_SRL ");

311 i‡(
	`Á°_SRA
())

312 
	`Ârötf
(
°dout
, "-DFAST_SRA ");

316 #i‚de‡
GZIP_PATH


318 
i
;

320 
i
=0; 
gzù_∑ths
[i] !
NULL
; i++)

322 i‡(
	`ac˚ss
(
gzù_∑ths
[
i
], 
X_OK
) == 0)

324 
	`Ârötf
(
°dout
, "-DGZIP_PATH=\"%s\" ", 
gzù_∑ths
[
i
]);

332 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-t"))

334 
	`Ârötf
(
°dout
, "sizeof(int) = %lu\n", () ());

335 
	`Ârötf
(
°dout
, "sizeof(long) = %lu\n", () ());

340 i‡(
lôée_byãs
 !
lôée_w‹ds
)

342 
	`Ârötf
(
°dîr
,

344 
	`exô
(1);

347 
	`exô
(0);

349 
	}
}

	@temperature.c

1 
	~"RC.h
"

2 
	~"Êp.h
"

3 
	~"utû.h
"

5 
	~<°dio.h
>

6 
	~<m©h.h
>

7 
	~<°rögs.h
>

8 
	~"hódîs.h
"

11 
	gÁ˘‹_∑ck
 = 
C_FACTOR
;

12 
	gÁ˘‹_chù
;

13 
	gÁ˘‹_öt
;

18 
	#MAX_PD
 (1.5e7)

	)

20 **
	gb
, **
	gc
, **
	göva
, **
	gövb
, 
	gmax_¶›e
;

31 
	$¸óã_RC_m©ri˚s
(
Êp_t
 *
Êp
, 
omô_œãøl
)

33 
i
, 
j
, 
k
 = 0, 
n
 = 
Êp
->
n_unôs
;

34 **
b‹dî
;

35 **
Àn
, *
gx
, *
gy
, **
g
, *
c_vî
, **
t
, *
gx_•
, *
gy_•
;

36 
r_•1
, 
r_•2
, 
r_hs
;

41 
r_•_≥r
, 
r_hs_mid
, 
r_hs_≥r
, 
c_•_≥r
, 
c_hs_mid
, 
c_hs_≥r
;

42 
gn_•
=0, 
gs_•
=0, 
ge_•
=0, 
gw_•
=0;

44 
w_chù
 = 
	`gë_tŸÆ_width
 (
Êp
);

45 
l_chù
 = 
	`gë_tŸÆ_height
 (
Êp
);

47 
b‹dî
 = 
	`im©rix
(
n
, 4);

48 
Àn
 = 
	`m©rix
(
n
,Ç);

49 
gx
 = 
	`ve˘‹
(
n
);

50 
gy
 = 
	`ve˘‹
(
n
);

51 
gx_•
 = 
	`ve˘‹
(
n
);

52 
gy_•
 = 
	`ve˘‹
(
n
);

53 
g
 = 
	`m©rix
(
NL
*
n
+
EXTRA
, NL*n+EXTRA);

54 
c_vî
 = 
	`ve˘‹
(
NL
*
n
+
EXTRA
);

56 
b
 = 
	`m©rix
(
NL
*
n
+
EXTRA
, NL*n+EXTRA);

57 
c
 = 
	`m©rix
(
NL
*
n
+
EXTRA
, NL*n+EXTRA);

58 
öva
 = 
	`m©rix
(
NL
*
n
+
EXTRA
, NL*n+EXTRA);

59 
övb
 = 
	`m©rix
(
NL
*
n
+
EXTRA
, NL*n+EXTRA);

60 
t
 = 
	`m©rix
 (
NL
*
n
+
EXTRA
, NL*n+EXTRA);

63 
Á˘‹_chù
 = 
C_FACTOR
 * ((
SPEC_HEAT_INT
 / 
SPEC_HEAT_SI
Ë* (
w_chù
 + 0.88 * 
t_öãrÁ˚
) \

64 * (
l_chù
 + 0.88 * 
t_öãrÁ˚
Ë*Å_öãrÁ˚ / ( 
w_chù
 *Ü_chù * 
t_chù
) + 1);

67 
Á˘‹_öt
 = 
C_FACTOR
 * ((
SPEC_HEAT_CU
 / 
SPEC_HEAT_INT
Ë* (
w_chù
 + 0.88 * 
t_•ªadî
) \

68 * (
l_chù
 + 0.88 * 
t_•ªadî
Ë*Å_•ªadî / ( 
w_chù
 *Ü_chù * 
t_öãrÁ˚
) + 1);

73 
i
 = 0; i < 
n
; i++) {

75 i‡(
omô_œãøl
) {

76 
gx
[
i
] = 
gy
[i] = 0;

79 
gx
[
i
] = 1.0/
	`gër
(
K_SI
, 
Êp
->
unôs
[i].
height
, fÕ->unôs[i].
width
, 
l_chù
, 
t_chù
);

80 
gy
[
i
] = 1.0/
	`gër
(
K_SI
, 
Êp
->
unôs
[i].
width
, fÕ->unôs[i].
height
, 
w_chù
, 
t_chù
);

84 
gx_•
[
i
] = 1.0/
	`gër
(
K_CU
, 
Êp
->
unôs
[i].
height
, fÕ->unôs[i].
width
, 
l_chù
, 
t_•ªadî
);

85 
gy_•
[
i
] = 1.0/
	`gër
(
K_CU
, 
Êp
->
unôs
[i].
width
, fÕ->unôs[i].
height
, 
w_chù
, 
t_•ªadî
);

89 
i
 = 0; i < 
n
; i++)

90 
j
 = 
i
; j < 
n
; j++)

91 
Àn
[
i
][
j
] =Üí[j][i] = 
	`gë_sh¨ed_Àn
(
Êp
, i, j);

94 
r_•1
 = 
	`gër
(
K_CU
, (
s_•ªadî
+3*
w_chù
)/4.0, (s_•ªadî-w_chù)/4.0, w_chù, 
t_•ªadî
);

95 
r_•2
 = 
	`gër
(
K_CU
, (3*
s_•ªadî
+
w_chù
)/4.0, (s_•ªadî-w_chù)/4.0, (s_•ªadî+3*w_chù)/4.0, 
t_•ªadî
);

96 
r_hs
 = 
	`gër
(
K_CU
, (
s_sök
+3*
s_•ªadî
)/4.0, (s_sök-s_•ªadî)/4.0, s_•ªadî, 
t_sök
);

99 
r_•_≥r
 = 
RHO_CU
 * 
t_•ªadî
 * 4.0 / (
s_•ªadî
 * s_•ªadî - 
w_chù
*
l_chù
);

100 
c_•_≥r
 = 
Á˘‹_∑ck
 * 
SPEC_HEAT_CU
 * 
t_•ªadî
 * (
s_•ªadî
 * s_•ªadî - 
w_chù
*
l_chù
) / 4.0;

101 
r_hs_mid
 = 
RHO_CU
 * 
t_sök
 / (
s_•ªadî
*s_spreader);

102 
c_hs_mid
 = 
Á˘‹_∑ck
 * 
SPEC_HEAT_CU
 * 
t_sök
 * (
s_•ªadî
 * s_spreader);

103 
r_hs_≥r
 = 
RHO_CU
 * 
t_sök
 * 4.0 / (
s_sök
 * s_sök - 
s_•ªadî
*s_spreader);

104 
c_hs_≥r
 = 
Á˘‹_∑ck
 * 
SPEC_HEAT_CU
 * 
t_sök
 * (
s_sök
 * s_sök - 
s_•ªadî
*s_spreader) / 4.0;

107 
i
 = 0; i < 
n
; i++) {

108 i‡(
	`eq
(
Êp
->
unôs
[
i
].
bŸtomy
 + fÕ->unôs[i].
height
, 
l_chù
)) {

109 
gn_•
 +
gy_•
[
i
];

110 
b‹dî
[
i
][2] = 1;

112 i‡(
	`eq
(
Êp
->
unôs
[
i
].
bŸtomy
, 0)) {

113 
gs_•
 +
gy_•
[
i
];

114 
b‹dî
[
i
][3] = 1;

116 i‡(
	`eq
(
Êp
->
unôs
[
i
].
À·x
 + fÕ->unôs[i].
width
, 
w_chù
)) {

117 
ge_•
 +
gx_•
[
i
];

118 
b‹dî
[
i
][1] = 1;

120 i‡(
	`eq
(
Êp
->
unôs
[
i
].
À·x
, 0)) {

121 
gw_•
 +
gx_•
[
i
];

122 
b‹dî
[
i
][0] = 1;

127 
i
 = 0; i < 
n
; i++) {

128 
¨ó
 = (
Êp
->
unôs
[
i
].
height
 * fÕ->unôs[i].
width
);

134 
j
 = 0; j < 
n
; j++) {

135 
∑π
 = 0, 
∑π_•
 = 0;

136 i‡(
	`is_h‹iz_adj
(
Êp
, 
i
, 
j
)) {

137 
∑π
 = 
gx
[
i
] / 
Êp
->
unôs
[i].
height
;

138 
∑π_•
 = 
gx_•
[
i
] / 
Êp
->
unôs
[i].
height
;

140 i‡(
	`is_vît_adj
(
Êp
, 
i
,
j
)) {

141 
∑π
 = 
gy
[
i
] / 
Êp
->
unôs
[i].
width
;

142 
∑π_•
 = 
gy_•
[
i
] / 
Êp
->
unôs
[i].
width
;

144 
g
[
i
][
j
] = 
∑π
 * 
Àn
[i][j];

145 
g
[
HSP
*
n
+
i
][HSP*n+
j
] = 
∑π_•
 * 
Àn
[i][j];

149 
g
[
i
][
IFACE
*
n
+i]=g[IFACE*n+i][i]=2.0/(
RHO_SI
 * 
t_chù
 / 
¨ó
);

151 
g
[
IFACE
*
n
+
i
][
HSP
*n+i]=g[HSP*n+i][IFACE*n+i]=2.0/(
RHO_INT
 * 
t_öãrÁ˚
 / 
¨ó
);

153 
g
[
HSP
*
n
+
i
][
NL
*n+
SP_B
]=g[NL*n+SP_B][HSP*n+i]=2.0/(
RHO_CU
 * 
t_•ªadî
 / 
¨ó
);

156 
c_vî
[
i
] = 
Á˘‹_chù
 * 
SPEC_HEAT_SI
 * 
t_chù
 * 
¨ó
;

158 
c_vî
[
IFACE
*
n
+
i
] = 
Á˘‹_öt
 * 
SPEC_HEAT_INT
 * 
t_öãrÁ˚
 * 
¨ó
;

160 
c_vî
[
HSP
*
n
+
i
] = 
Á˘‹_∑ck
 * 
SPEC_HEAT_CU
 * 
t_•ªadî
 * 
¨ó
;

163 
g
[
HSP
*
n
+
i
][
NL
*n+
SP_N
]=g[NL*n+SP_N][HSP*n+i]=2.0*
b‹dî
[i][2]/((1.0/
gy_•
[i])+
r_•1
*
gn_•
/gy_sp[i]);

164 
g
[
HSP
*
n
+
i
][
NL
*n+
SP_S
]=g[NL*n+SP_S][HSP*n+i]=2.0*
b‹dî
[i][3]/((1.0/
gy_•
[i])+
r_•1
*
gs_•
/gy_sp[i]);

165 
g
[
HSP
*
n
+
i
][
NL
*n+
SP_E
]=g[NL*n+SP_E][HSP*n+i]=2.0*
b‹dî
[i][1]/((1.0/
gx_•
[i])+
r_•1
*
ge_•
/gx_sp[i]);

166 
g
[
HSP
*
n
+
i
][
NL
*n+
SP_W
]=g[NL*n+SP_W][HSP*n+i]=2.0*
b‹dî
[i][0]/((1.0/
gx_•
[i])+
r_•1
*
gw_•
/gx_sp[i]);

170 
max_¶›e
 = 
MAX_PD
 / (
Á˘‹_chù
 * 
t_chù
 * 
SPEC_HEAT_SI
);

174 
g
[
NL
*
n
+
SINK_B
][NL*n+
SP_B
]=g[NL*n+SP_B][NL*n+SINK_B]=2.0/
r_hs_mid
;

176 
c_vî
[
NL
*
n
+
SP_B
]=
c_hs_mid
;

178 
c_vî
[
NL
*
n
+
SINK_B
] = 
Á˘‹_∑ck
 * 
c_c⁄vec
;

181 
i
 = 1; i <= 4; i++) {

183 
g
[
NL
*
n
+
SP_B
-
i
][NL*n+SP_B]=g[NL*n+SP_B][NL*n+SP_B-i]=2.0/
r_•_≥r
;

185 
g
[
NL
*
n
+
SP_B
-
i
][NL*n+
SINK_B
-i]=g[NL*n+SINK_B-i][NL*n+SP_B-i]=2.0/(
r_hs
 + 
r_•2
);

187 
g
[
NL
*
n
+
SINK_B
-
i
][NL*n+SINK_B]=g[NL*n+SINK_B][NL*n+SINK_B-i]=2.0/
r_hs_≥r
;

189 
c_vî
[
NL
*
n
+
SP_B
-
i
]=
c_•_≥r
;

191 
c_vî
[
NL
*
n
+
SINK_B
-
i
]=
c_hs_≥r
;

196 
i
 = 0; i < 
NL
*
n
+
EXTRA
; i++) {

197 
j
 = 0; j < 
NL
*
n
+
EXTRA
; j++) {

198 i‡(
i
==
j
) {

199 
öva
[
i
][
j
] = 1.0/
c_vî
[i];

200 i‡(
i
 =
NL
*
n
+
SINK_B
)

201 
b
[
i
][
j
] +1.0 / 
r_c⁄vec
;

202 
k
 = 0; k < 
NL
*
n
+
EXTRA
; k++) {

203 i‡((
g
[
i
][
k
]==0.0)||(g[k][i])==0.0)

207 
b
[
i
][
j
] +1.0/((1.0/
g
[i][
k
])+(1.0/g[k][i]));

210 
öva
[
i
][
j
]=0.0;

211 i‡((
g
[
i
][
j
]==0.0)||(g[j][i])==0.0)

212 
b
[
i
][
j
]=0.0;

214 
b
[
i
][
j
]=-1.0/((1.0/
g
[i][j])+(1.0/g[j][i]));

220 
	`m©mu…
(
c
, 
öva
, 
b
, 
NL
*
n
+
EXTRA
);

222 
	`c›y_m©rix
(
t
, 
b
, 
NL
*
n
+
EXTRA
, NL*n+EXTRA);

223 
	`m©öv
(
övb
, 
t
, 
NL
*
n
+
EXTRA
);

229 
	`‰ì_m©rix
(
t
, 
NL
*
n
+
EXTRA
);

230 
	`‰ì_m©rix
(
g
, 
NL
*
n
+
EXTRA
);

231 
	`‰ì_m©rix
(
Àn
, 
n
);

232 
	`‰ì_im©rix
(
b‹dî
, 
n
);

233 
	`‰ì_ve˘‹
(
c_vî
);

234 
	`‰ì_ve˘‹
(
gx
);

235 
	`‰ì_ve˘‹
(
gy
);

236 
	`‰ì_ve˘‹
(
gx_•
);

237 
	`‰ì_ve˘‹
(
gy_•
);

238 
	}
}

241 
	$£t_öã∫Æ_powî
 (*
pow
, 
n_unôs
)

243 
i
;

244 
i
=
n_unôs
; i < 
NL
*n_unôs+
SINK_B
; i++)

245 
pow
[
i
] = 0;

246 
pow
[
NL
*
n_unôs
+
SINK_B
] = 
ambõ¡
 / 
r_c⁄vec
;

247 
	}
}

253 
	$°ódy_°©e_ãmp
(*
powî
, *
ãmp
, 
n_unôs
)

256 
	`£t_öã∫Æ_powî
(
powî
, 
n_unôs
);

259 
	`m©ve˘mu…
(
ãmp
, 
övb
, 
powî
, 
NL
*
n_unôs
+
EXTRA
);

260 
	}
}

263 
	#PRECISION
 0.001

	)

264 
	#TOO_LONG
 100000

	)

265 
	#MIN_ITER
 1

	)

273 
	$compuã_ãmp
(*
powî
, *
ãmp
, 
n_unôs
, 
time_ñ≠£d
)

275 
i
;

276 *
pow
, 
h
, 
n_ôî
;

277 
pow
 = 
	`ve˘‹
(
NL
*
n_unôs
+
EXTRA
);

280 
	`£t_öã∫Æ_powî
(
powî
, 
n_unôs
);

283 
	`m©ve˘mu…
(
pow
, 
öva
, 
powî
, 
NL
*
n_unôs
+
EXTRA
);

286 
h
 = 
PRECISION
 / 
max_¶›e
;

287 
n_ôî
 = 
time_ñ≠£d
 / 
h
;

288 
n_ôî
 = (n_ôî > 
MIN_ITER
) ?Ç_iter : MIN_ITER;

289 
h
 = 
time_ñ≠£d
 / 
n_ôî
;

291 i‡(
n_ôî
 >
TOO_LONG
)

292 
	`Ârötf
(
°dîr
, "w¨nög: cÆlög i¡îvÆÅoÿœrge,Öîf‹mög %.0‡ôî©i⁄†- iàmayÅakêREALLYÜ⁄g\n", 
n_ôî
);

298 
i
 = 0; i < 
n_ôî
; i++)

299 
	`rk4
(
c
, 
ãmp
, 
pow
, 
NL
*
n_unôs
+
EXTRA
, 
h
,Åemp);

301 
	`‰ì_ve˘‹
(
pow
);

302 
	}
}

305 *
	$hŸ•Ÿ_ve˘‹
(
n_unôs
)

307  
	`ve˘‹
(
NL
*
n_unôs
+
EXTRA
);

308 
	}
}

311 
	$£t_ãmp
(*
ãmp
, 
n_unôs
, 
vÆ
)

313 
i
;

314 
i
=0; i < 
NL
*
n_unôs
 + 
EXTRA
; i++)

315 
ãmp
[
i
] = 
vÆ
;

316 
	}
}

319 
	$dump_ãmp
(
Êp_t
 *
Êp
, *
ãmp
, *
fûe
)

321 
i
;

322 
°r
[
STR_SIZE
];

323 
FILE
 *
Â
 = 
	`f›í
 (
fûe
, "w");

324 i‡(!
Â
) {

325 
	`•rötf
 (
°r
,"îr‹: %†couldÇŸ bê›íed f‹ wrôög", 
fûe
);

326 
	`Áèl
(
°r
);

329 
i
=0; i < 
Êp
->
n_unôs
; i++)

330 
	`Ârötf
(
Â
, "%s\t%.1f\n", 
Êp
->
unôs
[
i
].
«me
, 
ãmp
[i]);

333 
i
=0; i < 
Êp
->
n_unôs
; i++)

334 
	`Ârötf
(
Â
, "iÁ˚_%s\t%.1f\n", 
Êp
->
unôs
[
i
].
«me
, 
ãmp
[
IFACE
*Êp->
n_unôs
+i]);

337 
i
=0; i < 
Êp
->
n_unôs
; i++)

338 
	`Ârötf
(
Â
, "h•_%s\t%.1f\n", 
Êp
->
unôs
[
i
].
«me
, 
ãmp
[
HSP
*Êp->
n_unôs
+i]);

341 
i
=0; i < 
EXTRA
; i++) {

342 
	`•rötf
(
°r
, "öode_%d", 
i
);

343 
	`Ârötf
(
Â
, "%s\t%.1f\n", 
°r
, 
ãmp
[
i
+
NL
*
Êp
->
n_unôs
]);

345 
	`f˛o£
(
Â
);

346 
	}
}

353 
	$ªad_ãmp
(
Êp_t
 *
Êp
, *
ãmp
, *
fûe
, 
˛ù
)

355 
i
, 
idx
;

356 
max
=0, 
vÆ
;

357 
°r
[
STR_SIZE
], 
«me
[STR_SIZE];

358 
FILE
 *
Â
 = 
	`f›í
 (
fûe
, "r");

359 i‡(!
Â
) {

360 
	`•rötf
 (
°r
,"îr‹: %†couldÇŸ bê›íed f‹Ñódög", 
fûe
);

361 
	`Áèl
(
°r
);

365 
i
=0; i < 
Êp
->
n_unôs
; i++) {

366 
	`fgës
(
°r
, 
STR_SIZE
, 
Â
);

367 i‡(
	`„of
(
Â
))

368 
	`Áèl
("notÉnoughÜines inÅemperature file");

369 i‡(
	`ssˇnf
(
°r
, "%s%lf", 
«me
, &
vÆ
) != 2)

370 
	`Áèl
("invalidÅemperature file format: ");

371 
idx
 = 
	`gë_blk_ödex
(
Êp
, 
«me
);

372 i‡(
idx
 >= 0)

373 
ãmp
[
idx
] = 
vÆ
;

375 
	`Áèl
 ("unit inÅemperature fileÇot found in floorplan");

376 i‡(
ãmp
[
idx
] > 
max
)

377 
max
 = 
ãmp
[
idx
];

381 
i
=0; i < 
Êp
->
n_unôs
; i++) {

382 
	`fgës
(
°r
, 
STR_SIZE
, 
Â
);

383 i‡(
	`„of
(
Â
))

384 
	`Áèl
("notÉnoughÜines inÅemperature file");

385 i‡(
	`ssˇnf
(
°r
, "iÁ˚_%s%lf", 
«me
, &
vÆ
) != 2)

386 
	`Áèl
("invalidÅemperature file format: missing interface");

387 
idx
 = 
	`gë_blk_ödex
(
Êp
, 
«me
);

388 i‡(
idx
 >= 0)

389 
ãmp
[
idx
+
IFACE
*
Êp
->
n_unôs
] = 
vÆ
;

391 
	`Áèl
 ("unit inÅemperature fileÇot found in floorplan");

395 
i
=0; i < 
Êp
->
n_unôs
; i++) {

396 
	`fgës
(
°r
, 
STR_SIZE
, 
Â
);

397 i‡(
	`„of
(
Â
))

398 
	`Áèl
("notÉnoughÜines inÅemperature file");

399 i‡(
	`ssˇnf
(
°r
, "h•_%s%lf", 
«me
, &
vÆ
) != 2)

400 
	`Áèl
("3invalidÅemperature file format");

401 
idx
 = 
	`gë_blk_ödex
(
Êp
, 
«me
);

402 i‡(
idx
 >= 0)

403 
ãmp
[
idx
+
HSP
*
Êp
->
n_unôs
] = 
vÆ
;

405 
	`Áèl
 ("unit inÅemperature fileÇot found in floorplan");

409 
i
=0; i < 
EXTRA
; i++) {

410 
	`fgës
(
°r
, 
STR_SIZE
, 
Â
);

411 i‡(
	`„of
(
Â
))

412 
	`Áèl
("notÉnoughÜines inÅemperature file");

413 i‡(
	`ssˇnf
(
°r
, "%s%lf", 
«me
, &
vÆ
) != 2)

414 
	`Áèl
("4invalidÅemperature file format");

415 
	`•rötf
(
°r
, "öode_%d", 
i
);

416 i‡(
	`°rˇ£cmp
(
°r
, 
«me
))

417 
	`Áèl
("5invalidÅemperature file format");

418 
ãmp
[
i
+
NL
*
Êp
->
n_unôs
] = 
vÆ
;

421 
	`f˛o£
(
Â
);

424 i‡(
˛ù
 && (
max
 > 
thîmÆ_thªshﬁd
)) {

428 
Á˘‹
 = (
thîmÆ_thªshﬁd
 - 
ambõ¡
Ë/ (
max
 -ámbient);

431 
i
=0; i < 
NL
*
Êp
->
n_unôs
 + 
EXTRA
; i++)

432 
ãmp
[
i
] = (ãmp[i]-
ambõ¡
)*
Á˘‹
 +ámbient;

434 
	}
}

436 
	$˛ónup_hŸ•Ÿ
(
n_unôs
)

438 
	`‰ì_m©rix
(
öva
, 
NL
*
n_unôs
+
EXTRA
);

439 
	`‰ì_m©rix
(
b
, 
NL
*
n_unôs
+
EXTRA
);

440 
	`‰ì_m©rix
(
övb
, 
NL
*
n_unôs
+
EXTRA
);

441 
	`‰ì_m©rix
(
c
, 
NL
*
n_unôs
+
EXTRA
);

442 
	}
}

	@test.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
bô
[4] = {0};

6 
i
 = 0;

7 
bô
[0] = 1<<127;

8 
i
=0;i<4;i++)

9 
	`¥ötf
("bô %d i†%Œx\n", 
i
, 
bô
[i]);

11 
	}
}

	@time.c

43 
	~<m©h.h
>

44 
	~"def.h
"

49 
	$logtwo
(
x
)

50 
x
;

52 i‡(
x
<=0Ë
	`¥ötf
("%e\n",x);

53 –(Ë(
	`log
(
x
)/log(2.0)) );

54 
	}
}

57 
	$g©eˇp
(
width
,
wúñígth
)

58 
width
;

59 
wúñígth
;

61 (
width
*
Leff
*
Cg©e
+
wúñígth
*
Cpﬁywúe
*Leff);

62 
	}
}

64 
	$g©eˇµass
(
width
,
wúñígth
)

65 
width
;

66 
wúñígth
;

68 (
width
*
Leff
*
Cg©ïass
+
wúñígth
*
Cpﬁywúe
*Leff);

69 
	}
}

77 
	$døöˇp
(
width
,
nch™√l
,
°ack
)

78 
width
;

79 
nch™√l
;

80 
°ack
;

82 
Cdiffside
,
CdifÁªa
,
Covîœp
,
ˇp
;

84 
Cdiffside
 = (
nch™√l
Ë? 
Cndiffside
 : 
Cpdiffside
;

85 
CdifÁªa
 = (
nch™√l
Ë? 
CndifÁªa
 : 
CpdifÁªa
;

86 
Covîœp
 = (
nch™√l
Ë? (
CndiffovÕ
+
CnoxideovÕ
) :

87 (
CpdiffovÕ
+
CpoxideovÕ
);

90 i‡(
width
 >= 10) {

91 
ˇp
 = 3.0*
Leff
*
width
/2.0*
CdifÁªa
 + 6.0*Leff*
Cdiffside
 +

92 
width
*
Covîœp
;

93 
ˇp
 +()(
°ack
-1)*(
Leff
*
width
*
CdifÁªa
 +

94 4.0*
Leff
*
Cdiffside
 + 2.0*
width
*
Covîœp
);

96 
ˇp
 = 3.0*
Leff
*
width
*
CdifÁªa
 + (6.0*Leff+width)*
Cdiffside
 +

97 
width
*
Covîœp
;

98 
ˇp
 +()(
°ack
-1)*(
Leff
*
width
*
CdifÁªa
 +

99 2.0*
Leff
*
Cdiffside
 + 2.0*
width
*
Covîœp
);

101 (
ˇp
);

102 
	}
}

111 
	$å™§esswôch
(
width
,
nch™√l
,
°ack
)

112 
width
;

113 
nch™√l
;

114 
°ack
;

116 
ª°øns
;

117 
ª°øns
 = (
nch™√l
Ë? (
Rnch™√l°©ic
):

118 (
Rpch™√l°©ic
);

121 ((1.0+((
°ack
-1.0)*0.8))*
ª°øns
/
width
);

122 
	}
}

126 
	$å™§es⁄
(
width
,
nch™√l
,
°ack
)

127 
width
;

128 
nch™√l
;

129 
°ack
;

131 
ª°øns
;

132 
ª°øns
 = (
nch™√l
Ë? 
Rnch™√l⁄
 : 
Rpch™√l⁄
;

136 (
°ack
*
ª°øns
/
width
);

138 
	}
}

146 
	$ª°owidth
(
ªs
,
nch™√l
)

147 
ªs
;

148 
nch™√l
;

150 
ª°øns
;

152 
ª°øns
 = (
nch™√l
Ë? 
Rnch™√l⁄
 : 
Rpch™√l⁄
;

154 (
ª°øns
/
ªs
);

156 
	}
}

160 
	$h‹owôz
(
öpuåam±ime
,
tf
,
vs1
,
vs2
,
ri£
)

161 
öpuåam±ime
,

162 
tf
,

163 
vs1
,
vs2
;

164 
ri£
;

166 
a
,
b
,
td
;

168 
a
 = 
öpuåam±ime
/
tf
;

169 i‡(
ri£
==
RISE
) {

170 
b
 = 0.5;

171 
td
 = 
tf
*
	`sqπ
–
	`log
(
vs1
)*log(vs1)+2*
a
*
b
*(1.0-vs1)) +

172 
tf
*(
	`log
(
vs1
)-log(
vs2
));

174 
b
 = 0.4;

175 
td
 = 
tf
*
	`sqπ
–
	`log
(1.0-
vs1
)*log(1.0-vs1)+2*
a
*
b
*(vs1)) +

176 
tf
*(
	`log
(1.0-
vs1
)-log(1.0-
vs2
));

178 (
td
);

179 
	}
}

197 
	$decodî_dñay
(
C
, 
B
, 
A
, 
Ndwl
, 
Ndbl
, 
N•d
, 
Ntwl
, 
Ntbl
, 
Nt•d
, 
Tdecdrive
,

198 
Tdecodî1
, 
Tdecodî2
,
ouåi£time
)

199 
C
,
B
,
A
,
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
;

200 *
Tdecdrive
,*
Tdecodî1
,*
Tdecodî2
,*
ouåi£time
;

202 
Ceq
,
Req
,
Rwúe
,
rows
,
tf
,
√xtöpuâime
,
vth
,
t°ï
,
m
,
a
,
b
,
c
;

203 
num°ack
;

207 
Ceq
 = 
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1) +

208 
	`g©eˇp
(
Wdecdrivï
+
Wdecdriví
,0.0);

209 
tf
 = 
Ceq
*
	`å™§es⁄
(
Wdecdriví
,
NCH
,1);

210 
√xtöpuâime
 = 
	`h‹owôz
(0.0,
tf
,
VTHINV100x60
,VTHINV100x60,
FALL
)/

211 (
VTHINV100x60
);

213 
Ceq
 = 
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1) +

214 
	`g©eˇp
(
Wdecdrivï
+
Wdecdriví
,0.0);

215 
tf
 = 
Ceq
*
	`å™§es⁄
(
Wdecdriví
,
NCH
,1);

216 
√xtöpuâime
 = 
	`h‹owôz
“extöpuâime,
tf
,
VTHINV100x60
,VTHINV100x60,

217 
RISE
)/

218 (1.0-
VTHINV100x60
);

222 
rows
 = 
C
/(8*
B
*
A
*
Ndbl
*
N•d
);

223 
Ceq
 = 
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1) +

224 4*
	`g©eˇp
(
Wdec3to8n
+
Wdec3to8p
,10.0)*(
Ndwl
*
Ndbl
)+

225 
Cw‹dmëÆ
*0.25*8*
B
*
A
*
Ndbl
*
N•d
;

226 
Rwúe
 = 
Rw‹dmëÆ
*0.125*8*
B
*
A
*
Ndbl
*
N•d
;

227 
tf
 = (
Rwúe
 + 
	`å™§es⁄
(
Wdecdrivï
,
PCH
,1))*
Ceq
;

228 *
Tdecdrive
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHINV100x60
,
VTHNAND60x90
,

229 
FALL
);

230 
√xtöpuâime
 = *
Tdecdrive
/
VTHNAND60x90
;

234 
num°ack
 =

235 
	`˚û
((1.0/3.0)*
	`logtwo
–()(()
C
/()(
B
*
A
*
Ndbl
*
N•d
))));

236 i‡(
num°ack
==0)Çumstack = 1;

237 i‡(
num°ack
>5)Çumstack = 5;

238 
Ceq
 = 3*
	`døöˇp
(
Wdec3to8p
,
PCH
,1Ë+døöˇp(
Wdec3to8n
,
NCH
,3) +

239 
	`g©eˇp
(
WdecNORn
+
WdecNORp
,((
num°ack
*40)+20.0))*
rows
 +

240 
CbômëÆ
*
rows
*8;

242 
Rwúe
 = 
RbômëÆ
*
rows
*8/2;

243 
tf
 = 
Ceq
*(
Rwúe
+
	`å™§es⁄
(
Wdec3to8n
,
NCH
,3));

249 
num°ack
) {

250 1: 
vth
 = 
VTHNOR12x4x1
; ;

251 2: 
vth
 = 
VTHNOR12x4x2
; ;

252 3: 
vth
 = 
VTHNOR12x4x3
; ;

253 4: 
vth
 = 
VTHNOR12x4x4
; ;

254 5: 
vth
 = 
VTHNOR12x4x4
; ;

255 : 
	`¥ötf
("îr‹:num°ack=%d\n",
num°ack
);

257 *
Tdecodî1
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHNAND60x90
,
vth
,
RISE
);

258 
√xtöpuâime
 = *
Tdecodî1
/(1.0-
vth
);

262 
Req
 = 
	`å™§es⁄
(
WdecNORp
,
PCH
,
num°ack
);

263 
Ceq
 = (
	`g©eˇp
(
Wdecövn
+
Wdecövp
,20.0)+

264 
num°ack
*
	`døöˇp
(
WdecNORn
,
NCH
,1)+

265 
	`døöˇp
(
WdecNORp
,
PCH
,
num°ack
));

266 
tf
 = 
Req
*
Ceq
;

267 *
Tdecodî2
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
vth
,
VSINV
,
FALL
);

268 *
ouåi£time
 = *
Tdecodî2
/(
VSINV
);

269 (*
Tdecdrive
+*
Tdecodî1
+*
Tdecodî2
);

270 
	}
}

278 
	$decodî_èg_dñay
(
C
, 
B
, 
A
, 
Ndwl
, 
Ndbl
, 
N•d
, 
Ntwl
, 
Ntbl
, 
Nt•d
,

279 
Tdecdrive
, 
Tdecodî1
, 
Tdecodî2
,
ouåi£time
)

280 
C
,
B
,
A
,
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
;

281 *
Tdecdrive
,*
Tdecodî1
,*
Tdecodî2
,*
ouåi£time
;

283 
Ceq
,
Req
,
Rwúe
,
rows
,
tf
,
√xtöpuâime
,
vth
,
t°ï
,
m
,
a
,
b
,
c
;

284 
num°ack
;

289 
Ceq
 = 
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1) +

290 
	`g©eˇp
(
Wdecdrivï
+
Wdecdriví
,0.0);

291 
tf
 = 
Ceq
*
	`å™§es⁄
(
Wdecdriví
,
NCH
,1);

292 
√xtöpuâime
 = 
	`h‹owôz
(0.0,
tf
,
VTHINV100x60
,VTHINV100x60,
FALL
)/

293 (
VTHINV100x60
);

295 
Ceq
 = 
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1) +

296 
	`g©eˇp
(
Wdecdrivï
+
Wdecdriví
,0.0);

297 
tf
 = 
Ceq
*
	`å™§es⁄
(
Wdecdriví
,
NCH
,1);

298 
√xtöpuâime
 = 
	`h‹owôz
“extöpuâime,
tf
,
VTHINV100x60
,VTHINV100x60,

299 
RISE
)/

300 (1.0-
VTHINV100x60
);

304 
rows
 = 
C
/(8*
B
*
A
*
Ntbl
*
Nt•d
);

305 
Ceq
 = 
	`døöˇp
(
Wdecdrivï
,
PCH
,1)+døöˇp(
Wdecdriví
,
NCH
,1) +

306 4*
	`g©eˇp
(
Wdec3to8n
+
Wdec3to8p
,10.0)*(
Ntwl
*
Ntbl
)+

307 
Cw‹dmëÆ
*0.25*8*
B
*
A
*
Ntbl
*
Nt•d
;

308 
Rwúe
 = 
Rw‹dmëÆ
*0.125*8*
B
*
A
*
Ntbl
*
Nt•d
;

309 
tf
 = (
Rwúe
 + 
	`å™§es⁄
(
Wdecdrivï
,
PCH
,1))*
Ceq
;

310 *
Tdecdrive
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHINV100x60
,
VTHNAND60x90
,

311 
FALL
);

312 
√xtöpuâime
 = *
Tdecdrive
/
VTHNAND60x90
;

316 
num°ack
 =

317 
	`˚û
((1.0/3.0)*
	`logtwo
–()(()
C
/()(
B
*
A
*
Ntbl
*
Nt•d
))));

318 i‡(
num°ack
==0)Çumstack = 1;

319 i‡(
num°ack
>5)Çumstack = 5;

321 
Ceq
 = 3*
	`døöˇp
(
Wdec3to8p
,
PCH
,1Ë+døöˇp(
Wdec3to8n
,
NCH
,3) +

322 
	`g©eˇp
(
WdecNORn
+
WdecNORp
,((
num°ack
*40)+20.0))*
rows
 +

323 
CbômëÆ
*
rows
*8;

325 
Rwúe
 = 
RbômëÆ
*
rows
*8/2;

326 
tf
 = 
Ceq
*(
Rwúe
+
	`å™§es⁄
(
Wdec3to8n
,
NCH
,3));

332 
num°ack
) {

333 1: 
vth
 = 
VTHNOR12x4x1
; ;

334 2: 
vth
 = 
VTHNOR12x4x2
; ;

335 3: 
vth
 = 
VTHNOR12x4x3
; ;

336 4: 
vth
 = 
VTHNOR12x4x4
; ;

337 5: 
vth
 = 
VTHNOR12x4x4
; ;

338 6: 
vth
 = 
VTHNOR12x4x4
; ;

339 : 
	`¥ötf
("îr‹:num°ack=%d\n",
num°ack
);

341 *
Tdecodî1
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHNAND60x90
,
vth
,
RISE
);

342 
√xtöpuâime
 = *
Tdecodî1
/(1.0-
vth
);

346 
Req
 = 
	`å™§es⁄
(
WdecNORp
,
PCH
,
num°ack
);

347 
Ceq
 = (
	`g©eˇp
(
Wdecövn
+
Wdecövp
,20.0)+

348 
num°ack
*
	`døöˇp
(
WdecNORn
,
NCH
,1)+

349 
	`døöˇp
(
WdecNORp
,
PCH
,
num°ack
));

350 
tf
 = 
Req
*
Ceq
;

351 *
Tdecodî2
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
vth
,
VSINV
,
FALL
);

352 *
ouåi£time
 = *
Tdecodî2
/(
VSINV
);

353 (*
Tdecdrive
+*
Tdecodî1
+*
Tdecodî2
);

354 
	}
}

362 
	$w‹dlöe_dñay
(
B
,
A
,
Ndwl
,
N•d
,
öri£time
,
ouåi£time
)

363 
B
,
A
,
Ndwl
,
N•d
;

364 
öri£time
,*
ouåi£time
;

366 
Rpdrive
,
√xåi£time
;

367 
desúedri£time
,
psize
,
nsize
;

368 
tf
,
√xtöpuâime
,
Ceq
,
Req
,
Rlöe
,
Clöe
;

369 
cﬁs
;

370 
Tw‹ddrivedñ
,
Tw‹dch¨gedñ
;

372 
cﬁs
 = 8*
B
*
A
*
N•d
/
Ndwl
;

377 
desúedri£time
 = 
kri£
*
	`log
(()(
cﬁs
))/2.0;

378 
Clöe
 = (
	`g©eˇµass
(
Wmem˚Œa
,0.0)+

379 
	`g©eˇµass
(
Wmem˚Œa
,0.0)+

380 
Cw‹dmëÆ
)*
cﬁs
;

381 
Rpdrive
 = 
desúedri£time
/(
Clöe
*
	`log
(
VSINV
)*-1.0);

382 
psize
 = 
	`ª°owidth
(
Rpdrive
,
PCH
);

383 i‡(
psize
 > 
Ww‹ddrivemax
) {

384 
psize
 = 
Ww‹ddrivemax
;

391 
nsize
 = 
psize
 * 
Wdecövn
/
Wdecövp
;

393 
Ceq
 = 
	`døöˇp
(
Wdecövn
,
NCH
,1Ë+ døöˇp(
Wdecövp
,
PCH
,1) +

394 
	`g©eˇp
(
nsize
+
psize
,20.0);

395 
tf
 = 
	`å™§es⁄
(
Wdecövn
,
NCH
,1)*
Ceq
;

397 
Tw‹ddrivedñ
 = 
	`h‹owôz
(
öri£time
,
tf
,
VSINV
,VSINV,
RISE
);

398 
√xtöpuâime
 = 
Tw‹ddrivedñ
/(1.0-
VSINV
);

400 
Clöe
 = (
	`g©eˇµass
(
Wmem˚Œa
,(
BôWidth
-2*Wmemcella)/2.0)+

401 
	`g©eˇµass
(
Wmem˚Œa
,(
BôWidth
-2*Wmemcella)/2.0)+

402 
Cw‹dmëÆ
)*
cﬁs
+

403 
	`døöˇp
(
nsize
,
NCH
,1Ë+ døöˇp(
psize
,
PCH
,1);

404 
Rlöe
 = 
Rw‹dmëÆ
*
cﬁs
/2;

405 
tf
 = (
	`å™§es⁄
(
psize
,
PCH
,1)+
Rlöe
)*
Clöe
;

406 
Tw‹dch¨gedñ
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VSINV
,VSINV,
FALL
);

407 *
ouåi£time
 = 
Tw‹dch¨gedñ
/
VSINV
;

409 (
Tw‹ddrivedñ
+
Tw‹dch¨gedñ
);

410 
	}
}

417 
	$w‹dlöe_èg_dñay
(
C
,
A
,
Nt•d
,
Ntwl
,
öri£time
,
ouåi£time
)

418 
C
,
A
,
Nt•d
,
Ntwl
;

419 *
ouåi£time
;

420 
öri£time
;

422 
tf
,
m
,
a
,
b
,
c
;

423 
Clöe
,
Rlöe
,
Ceq
,
√xtöpuâime
;

424 
ègbôs
;

425 
Tw‹ddrivedñ
,
Tw‹dch¨gedñ
;

429 
ègbôs
 = 
ADDRESS_BITS
+2-()
	`logtwo
(()
C
)+(Óogtwo(()
A
);

433 
Ceq
 = 
	`døöˇp
(
Wdecövn
,
NCH
,1Ë+ døöˇp(
Wdecövp
,
PCH
,1) +

434 
	`g©eˇp
(
Wdecövn
+
Wdecövp
,20.0);

435 
tf
 = 
	`å™§es⁄
(
Wdecövn
,
NCH
,1)*
Ceq
;

437 
Tw‹ddrivedñ
 = 
	`h‹owôz
(
öri£time
,
tf
,
VSINV
,VSINV,
RISE
);

438 
√xtöpuâime
 = 
Tw‹ddrivedñ
/(1.0-
VSINV
);

441 
Clöe
 = (
	`g©eˇµass
(
Wmem˚Œa
,(
BôWidth
-2*Wmemcella)/2.0)+

442 
	`g©eˇµass
(
Wmem˚Œa
,(
BôWidth
-2*Wmemcella)/2.0)+

443 
Cw‹dmëÆ
)*
ègbôs
*
A
*
Nt•d
/
Ntwl
+

444 
	`døöˇp
(
Wdecövn
,
NCH
,1Ë+ døöˇp(
Wdecövp
,
PCH
,1);

445 
Rlöe
 = 
Rw‹dmëÆ
*
ègbôs
*
A
*
Nt•d
/(2*
Ntwl
);

446 
tf
 = (
	`å™§es⁄
(
Wdecövp
,
PCH
,1)+
Rlöe
)*
Clöe
;

447 
Tw‹dch¨gedñ
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VSINV
,VSINV,
FALL
);

448 *
ouåi£time
 = 
Tw‹dch¨gedñ
/
VSINV
;

449 (
Tw‹ddrivedñ
+
Tw‹dch¨gedñ
);

451 
	}
}

458 
	$bôlöe_dñay
(
C
,
A
,
B
,
Ndwl
,
Ndbl
,
N•d
,
öri£time
,
ouåi£time
)

459 
C
,
A
,
B
,
Ndbl
,
N•d
;

460 
öri£time
,*
ouåi£time
;

462 
Tbô
,
Clöe
,
Ccﬁmux
,
Rlöeb
,
r1
,
r2
,
c1
,
c2
,
a
,
b
,
c
;

463 
m
,
t°ï
;

464 
Cbôrow
;

465 
rows
,
cﬁs
;

467 
Cbôrow
 = 
	`døöˇp
(
Wmem˚Œa
,
NCH
,1)/2.0;

468 
rows
 = 
C
/(
B
*
A
*
Ndbl
*
N•d
);

469 
cﬁs
 = 8*
B
*
A
*
N•d
/
Ndwl
;

470 i‡(
Ndbl
*
N•d
 == 1) {

471 
Clöe
 = 
rows
*(
Cbôrow
+
CbômëÆ
)+2*
	`døöˇp
(
Wbô¥ìqu
,
PCH
,1);

472 
Ccﬁmux
 = 2*
	`g©eˇp
(
W£n£Q1to4
,10.0);

473 
Rlöeb
 = 
RbômëÆ
*
rows
/2.0;

474 
r1
 = 
Rlöeb
;

476 
Clöe
 = 
rows
*(
Cbôrow
+
CbômëÆ
Ë+ 2*
	`døöˇp
(
Wbô¥ìqu
,
PCH
,1) +

477 
	`døöˇp
(
Wbômuxn
,
NCH
,1);

478 
Ccﬁmux
 = 
N•d
*
Ndbl
*(
	`døöˇp
(
Wbômuxn
,
NCH
,1))+2*
	`g©eˇp
(
W£n£Q1to4
,10.0);

479 
Rlöeb
 = 
RbômëÆ
*
rows
/2.0;

480 
r1
 = 
Rlöeb
 +

481 
	`å™§es⁄
(
Wbômuxn
,
NCH
,1);

483 
r2
 = 
	`å™§es⁄
(
Wmem˚Œa
,
NCH
,1) +

484 
	`å™§es⁄
(
Wmem˚Œa
*
Wmem˚ŒbsˇÀ
,
NCH
,1);

485 
c1
 = 
Ccﬁmux
;

486 
c2
 = 
Clöe
;

489 
t°ï
 = (
r2
*
c2
+(
r1
+r2)*
c1
)*
	`log
((
Vbô¥e
)/(Vbô¥e-
Vbô£n£
));

493 
m
 = 
Vdd
/
öri£time
;

494 i‡(
t°ï
 <(0.5*(
Vdd
-
Vt
)/
m
)) {

495 
a
 = 
m
;

496 
b
 = 2*((
Vdd
*0.5)-
Vt
);

497 
c
 = -2*
t°ï
*(
Vdd
-
Vt
)+1/
m
*((Vdd*0.5)-Vt)*

498 ((
Vdd
*0.5)-
Vt
);

499 
Tbô
 = (-
b
+
	`sqπ
(b*b-4*
a
*
c
))/(2*a);

501 
Tbô
 = 
t°ï
 + (
Vdd
+
Vt
)/(2*
m
) - (Vdd*0.5)/m;

504 *
ouåi£time
 = 
Tbô
/(
	`log
((
Vbô¥e
-
Vbô£n£
)/
Vdd
));

505 (
Tbô
);

506 
	}
}

516 
	$bôlöe_èg_dñay
(
C
,
A
,
B
,
Ntwl
,
Ntbl
,
Nt•d
,
öri£time
,
ouåi£time
)

517 
C
,
A
,
B
,
Ntbl
,
Nt•d
;

518 
öri£time
,*
ouåi£time
;

520 
Tbô
,
Clöe
,
Ccﬁmux
,
Rlöeb
,
r1
,
r2
,
c1
,
c2
,
a
,
b
,
c
;

521 
m
,
t°ï
;

522 
Cbôrow
;

523 
rows
,
cﬁs
;

525 
Cbôrow
 = 
	`døöˇp
(
Wmem˚Œa
,
NCH
,1)/2.0;

526 
rows
 = 
C
/(
B
*
A
*
Ntbl
*
Nt•d
);

527 
cﬁs
 = 8*
B
*
A
*
Nt•d
/
Ntwl
;

528 i‡(
Ntbl
*
Nt•d
 == 1) {

529 
Clöe
 = 
rows
*(
Cbôrow
+
CbômëÆ
)+2*
	`døöˇp
(
Wbô¥ìqu
,
PCH
,1);

530 
Ccﬁmux
 = 2*
	`g©eˇp
(
W£n£Q1to4
,10.0);

531 
Rlöeb
 = 
RbômëÆ
*
rows
/2.0;

532 
r1
 = 
Rlöeb
;

534 
Clöe
 = 
rows
*(
Cbôrow
+
CbômëÆ
Ë+ 2*
	`døöˇp
(
Wbô¥ìqu
,
PCH
,1) +

535 
	`døöˇp
(
Wbômuxn
,
NCH
,1);

536 
Ccﬁmux
 = 
Nt•d
*
Ntbl
*(
	`døöˇp
(
Wbômuxn
,
NCH
,1))+2*
	`g©eˇp
(
W£n£Q1to4
,10.0);

537 
Rlöeb
 = 
RbômëÆ
*
rows
/2.0;

538 
r1
 = 
Rlöeb
 +

539 
	`å™§es⁄
(
Wbômuxn
,
NCH
,1);

541 
r2
 = 
	`å™§es⁄
(
Wmem˚Œa
,
NCH
,1) +

542 
	`å™§es⁄
(
Wmem˚Œa
*
Wmem˚ŒbsˇÀ
,
NCH
,1);

544 
c1
 = 
Ccﬁmux
;

545 
c2
 = 
Clöe
;

547 
t°ï
 = (
r2
*
c2
+(
r1
+r2)*
c1
)*
	`log
((
Vbô¥e
)/(Vbô¥e-
Vbô£n£
));

551 
m
 = 
Vdd
/
öri£time
;

552 i‡(
t°ï
 <(0.5*(
Vdd
-
Vt
)/
m
)) {

553 
a
 = 
m
;

554 
b
 = 2*((
Vdd
*0.5)-
Vt
);

555 
c
 = -2*
t°ï
*(
Vdd
-
Vt
)+1/
m
*((Vdd*0.5)-Vt)*

556 ((
Vdd
*0.5)-
Vt
);

557 
Tbô
 = (-
b
+
	`sqπ
(b*b-4*
a
*
c
))/(2*a);

559 
Tbô
 = 
t°ï
 + (
Vdd
+
Vt
)/(2*
m
) - (Vdd*0.5)/m;

562 *
ouåi£time
 = 
Tbô
/(
	`log
((
Vbô¥e
-
Vbô£n£
)/
Vdd
));

563 (
Tbô
);

564 
	}
}

573 
	$£n£_amp_dñay
(
öri£time
,
ouåi£time
)

574 
öri£time
,*
ouåi£time
;

576 *
ouåi£time
 = 
tÁŒd©a
;

577 (
t£n£d©a
);

578 
	}
}

582 
	$£n£_amp_èg_dñay
(
öri£time
,
ouåi£time
)

583 
öri£time
,*
ouåi£time
;

585 *
ouåi£time
 = 
tÁŒèg
;

586 (
t£n£èg
);

587 
	}
}

594 
	$com∑ª_time
(
C
,
A
,
Ntbl
,
Nt•d
,
öpuâime
,
ouçuâime
)

595 
C
,
A
,
Ntbl
,
Nt•d
;

596 
öpuâime
,*
ouçuâime
;

598 
Req
,
Ceq
,
tf
,
°1dñ
,
°2dñ
,
°3dñ
,
√xtöpuâime
,
m
;

599 
c1
,
c2
,
r1
,
r2
,
t°ï
,
a
,
b
,
c
;

600 
Tcom∑øt‹ni
;

601 
cﬁs
,
ègbôs
;

605 
Ceq
 = 
	`g©eˇp
(
Wcompövn2
+
Wcompövp2
,10.0) +

606 
	`døöˇp
(
Wcompövp1
,
PCH
,1Ë+ døöˇp(
Wcompövn1
,
NCH
,1);

607 
Req
 = 
	`å™§es⁄
(
Wcompövp1
,
PCH
,1);

608 
tf
 = 
Req
*
Ceq
;

609 
°1dñ
 = 
	`h‹owôz
(
öpuâime
,
tf
,
VTHCOMPINV
,VTHCOMPINV,
FALL
);

610 
√xtöpuâime
 = 
°1dñ
/
VTHCOMPINV
;

614 
Ceq
 = 
	`g©eˇp
(
Wcompövn3
+
Wcompövp3
,10.0) +

615 
	`døöˇp
(
Wcompövp2
,
PCH
,1Ë+ døöˇp(
Wcompövn2
,
NCH
,1);

616 
Req
 = 
	`å™§es⁄
(
Wcompövn2
,
NCH
,1);

617 
tf
 = 
Req
*
Ceq
;

618 
°2dñ
 = 
	`h‹owôz
(
öpuâime
,
tf
,
VTHCOMPINV
,VTHCOMPINV,
RISE
);

619 
√xtöpuâime
 = 
°1dñ
/(1.0-
VTHCOMPINV
);

623 
Ceq
 = 
	`g©eˇp
(
WevÆövn
+
WevÆövp
,10.0) +

624 
	`døöˇp
(
Wcompövp3
,
PCH
,1Ë+ døöˇp(
Wcompövn3
,
NCH
,1);

625 
Req
 = 
	`å™§es⁄
(
Wcompövp3
,
PCH
,1);

626 
tf
 = 
Req
*
Ceq
;

627 
°3dñ
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHCOMPINV
,
VTHEVALINV
,
FALL
);

628 
√xtöpuâime
 = 
°1dñ
/(
VTHEVALINV
);

632 
ègbôs
 = 
ADDRESS_BITS
 - ()
	`logtwo
(()
C
Ë+ (Óogtwo(()
A
);

633 
cﬁs
 = 
ègbôs
*
Ntbl
*
Nt•d
;

635 
r1
 = 
	`å™§es⁄
(
Wcom≤
,
NCH
,2);

636 
r2
 = 
	`å™§esswôch
(
WevÆövn
,
NCH
,1);

637 
c2
 = (
ègbôs
)*(
	`døöˇp
(
Wcom≤
,
NCH
,1)+draincap(Wcompn,NCH,2))+

638 
	`døöˇp
(
WevÆövp
,
PCH
,1Ë+ døöˇp(
WevÆövn
,
NCH
,1);

639 
c1
 = (
ègbôs
)*(
	`døöˇp
(
Wcom≤
,
NCH
,1)+draincap(Wcompn,NCH,2))

640 +
	`døöˇp
(
Wcomµ
,
PCH
,1Ë+ 
	`g©eˇp
(
Wmuxdrv12n
+
Wmuxdrv12p
,20.0) +

641 
cﬁs
*
Cw‹dmëÆ
;

645 
t°ï
 = (
r2
*
c2
+(
r1
+r2)*
c1
)*
	`log
(1.0/
VTHMUXDRV1
);

649 
m
 = 
Vdd
/
√xtöpuâime
;

651 i‡((
t°ï
Ë<(0.5*(
Vdd
-
Vt
)/
m
)) {

652 
a
 = 
m
;

653 
b
 = 2*((
Vdd
*
VTHEVALINV
)-
Vt
);

654 
c
 = -2*(
t°ï
)*(
Vdd
-
Vt
)+1/
m
*((Vdd*
VTHEVALINV
)-Vt)*((Vdd*VTHEVALINV)-Vt);

655 
Tcom∑øt‹ni
 = (-
b
+
	`sqπ
(b*b-4*
a
*
c
))/(2*a);

657 
Tcom∑øt‹ni
 = (
t°ï
Ë+ (
Vdd
+
Vt
)/(2*
m
Ë- (Vdd*
VTHEVALINV
)/m;

659 *
ouçuâime
 = 
Tcom∑øt‹ni
/(1.0-
VTHMUXDRV1
);

661 (
Tcom∑øt‹ni
+
°1dñ
+
°2dñ
+
°3dñ
);

662 
	}
}

672 
	$mux_drivî_dñay
(
C
,
B
,
A
,
Ndbl
,
N•d
,
Ndwl
,
Ntbl
,
Nt•d
,
öpuâime
,
ouçuâime
)

673 
C
,
B
,
A
,
Ndbl
,
N•d
,
Ndwl
,
Ntbl
,
Nt•d
;

674 
öpuâime
,*
ouçuâime
;

676 
Ceq
,
Req
,
tf
,
√xtöpuâime
;

677 
T°1
,
T°2
,
T°3
;

683 
Ceq
 = 
	`g©eˇp
(
WmuxdrvNORn
+
WmuxdrvNORp
,15.0)*(8*
B
/
BITOUT
) +

684 
	`døöˇp
(
Wmuxdrv12n
,
NCH
,1Ë+ døöˇp(
Wmuxdrv12p
,
PCH
,1);

685 
Req
 = 
	`å™§es⁄
(
Wmuxdrv12p
,
PCH
,1);

686 
tf
 = 
Ceq
*
Req
;

687 
T°1
 = 
	`h‹owôz
(
öpuâime
,
tf
,
VTHMUXDRV1
,
VTHMUXDRV2
,
FALL
);

688 
√xtöpuâime
 = 
T°1
/
VTHMUXDRV2
;

692 
Ceq
 = 
	`g©eˇp
(
Wmuxdrv3n
+
Wmuxdrv3p
,15.0Ë+ 2*
	`døöˇp
(
WmuxdrvNORn
,
NCH
,1) +

693 
	`døöˇp
(
WmuxdrvNORp
,
PCH
,2);

694 
Req
 = 
	`å™§es⁄
(
WmuxdrvNORn
,
NCH
,1);

695 
tf
 = 
Ceq
*
Req
;

696 
T°2
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHMUXDRV2
,
VTHMUXDRV3
,
RISE
);

697 
√xtöpuâime
 = 
T°2
/(1-
VTHMUXDRV3
);

701 
Ceq
 = 
BITOUT
*
	`g©eˇp
(
Woutdrv£ 
+
Woutdrv£Õ
+
Woutdrvn‹n
+
Woutdrvn‹p
,20.0)+

702 
	`døöˇp
(
Wmuxdrv3p
,
PCH
,1Ë+ døöˇp(
Wmuxdrv3n
,
NCH
,1) +

703 
Cw‹dmëÆ
*8*
B
*
A
*
N•d
*
Ndbl
/2.0;

704 
Req
 = (
Rw‹dmëÆ
*8*
B
*
A
*
N•d
*
Ndbl
/2)/2 + 
	`å™§es⁄
(
Wmuxdrv3p
,
PCH
,1);

705 
tf
 = 
Ceq
*
Req
;

706 
T°3
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHMUXDRV3
,
VTHOUTDRINV
,
FALL
);

707 *
ouçuâime
 = 
T°3
/(
VTHOUTDRINV
);

709 (
T°1
 + 
T°2
 + 
T°3
);

711 
	}
}

720 
	$vÆid_drivî_dñay
(
C
,
A
,
Ntbl
,
Nt•d
,
öpuâime
)

721 
C
,
A
,
Ntbl
,
Nt•d
;

722 
öpuâime
;

724 
Ceq
,
T°1
,
tf
;

726 
Ceq
 = 
	`døöˇp
(
Wmuxdrv12n
,
NCH
,1)+døöˇp(
Wmuxdrv12p
,
PCH
,1)+
Cout
;

727 
tf
 = 
Ceq
*
	`å™§es⁄
(
Wmuxdrv12p
,
PCH
,1);

728 
T°1
 = 
	`h‹owôz
(
öpuâime
,
tf
,
VTHMUXDRV1
,0.5,
FALL
);

730 (
T°1
);

731 
	}
}

740 
	$d©aouçut_dñay
(
C
,
B
,
A
,
Ndbl
,
N•d
,
Ndwl
,

741 
öri£time
,
ouåi£time
)

742 
C
,
B
,
A
,
Ndbl
,
N•d
,
Ndwl
;

743 *
ouåi£time
,
öri£time
;

745 
Ceq
,
Rwúe
,
Rlöe
;

746 
a•e˘R©io
;

747 
ømBlocks
;

748 
tf
;

749 
n‹dñ
,
outdñ
,
√xtöpuâime
;

750 
h°ack
,
v°ack
;

754 
a•e˘R©io
 = (2.0*
C
)/(8.0*
B
*B*
A
*A*
Ndbl
*Ndbl*
N•d
*Nspd);

755 
h°ack
 = (
a•e˘R©io
 > 1.0) ?áspectRatio : 1.0/aspectRatio;

756 
ømBlocks
 = 
Ndwl
*
Ndbl
;

757 
h°ack
 = h°ack * 
	`sqπ
(
ømBlocks
/ hstack);

758 
v°ack
 = 
ømBlocks
/ 
h°ack
;

762 
Ceq
 = 2*
	`døöˇp
(
Woutdrvn‹n
,
NCH
,1)+døöˇp(
Woutdrvn‹p
,
PCH
,2)+

763 
	`g©eˇp
(
Woutdrivîn
,10.0);

764 
tf
 = 
Ceq
*
	`å™§es⁄
(
Woutdrvn‹p
,
PCH
,2);

765 
n‹dñ
 = 
	`h‹owôz
(
öri£time
,
tf
,
VTHOUTDRNOR
,
VTHOUTDRIVE
,
FALL
);

766 
√xtöpuâime
 = 
n‹dñ
/(
VTHOUTDRIVE
);

770 
Ceq
 = (
	`døöˇp
(
Woutdrivîn
,
NCH
,1)+døöˇp(
Woutdrivîp
,
PCH
,1))*

771 ((8*
B
*
A
)/
BITOUT
) +

772 
Cw‹dmëÆ
*(8*
B
*
A
*
N•d
* (
v°ack
)Ë+ 
Cout
;

773 
Rwúe
 = 
Rw‹dmëÆ
*(8*
B
*
A
*
N•d
* (
v°ack
))/2;

775 
tf
 = 
Ceq
*(
	`å™§es⁄
(
Woutdrivîp
,
PCH
,1)+
Rwúe
);

776 
outdñ
 = 
	`h‹owôz
(
√xtöpuâime
,
tf
,
VTHOUTDRIVE
,0.5,
RISE
);

777 *
ouåi£time
 = 
outdñ
/0.5;

778 (
outdñ
+
n‹dñ
);

779 
	}
}

785 
	$£lb_dñay_èg_∑th
(
öri£time
,
ouåi£time
)

786 
öri£time
,*
ouåi£time
;

788 
Ceq
,
T°1
,
tf
;

790 
Ceq
 = 
	`døöˇp
(
Woutdrv£ 
,
NCH
,1)+døöˇp(
Woutdrv£Õ
,
PCH
,1)+

791 
	`g©eˇp
(
Woutdrv«ndn
+
Woutdrv«ndp
,10.0);

792 
tf
 = 
Ceq
*
	`å™§es⁄
(
Woutdrv£ 
,
NCH
,1);

793 
T°1
 = 
	`h‹owôz
(
öri£time
,
tf
,
VTHOUTDRINV
,
VTHOUTDRNAND
,
RISE
);

794 *
ouåi£time
 = 
T°1
/(1.0-
VTHOUTDRNAND
);

796 (
T°1
);

797 
	}
}

806 
	$¥ech¨ge_dñay
(
w‹dd©a
)

807 
w‹dd©a
;

809 
Ceq
,
tf
,
¥ëime
;

815 
Ceq
 = 
	`døöˇp
(
Wdecövn
,
NCH
,1)+døöˇp(
Wdecövp
,
PCH
,1)+

816 4*
	`g©eˇp
(
Wdecövn
+
Wdecövp
,0.0);

817 
tf
 = 
Ceq
*
	`å™§es⁄
(
Wdecövn
,
NCH
,1);

818 
¥ëime
 = 4*
	`h‹owôz
(0.0,
tf
,0.5,0.5,
RISE
Ë+ 
w‹dd©a
;

820 (
¥ëime
);

821 
	}
}

831 
	$‹g™iz©i⁄Æ_∑ømëîs_vÆid
(
rows
,
cﬁs
,
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
)

832 
rows
,
cﬁs
,
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
;

836 i‡(
Ndwl
*
Ndbl
>
MAXSUBARRAYS
Ë(
FALSE
);

837 i‡(
Ntwl
*
Ntbl
>
MAXSUBARRAYS
Ë(
FALSE
);

841 (
TRUE
);

842 
	}
}

848 
	$ˇlcuœã_time
(
ªsu…
,
∑ømëîs
)

849 
ªsu…_ty≥
 *
ªsu…
;

850 
∑ømëî_ty≥
 *
∑ømëîs
;

852 
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
,
rows
,
cﬁumns
,
èg_drivî_size1
,
èg_drivî_size2
;

853 
ac˚ss_time
;

854 
bef‹e_mux
,
a·î_mux
;

855 
decodî_d©a_drivî
,
decodî_d©a_3to8
,
decodî_d©a_öv
;

856 
decodî_d©a
,
decodî_èg
,
w‹dlöe_d©a
,
w‹dlöe_èg
;

857 
decodî_èg_drivî
,
decodî_èg_3to8
,
decodî_èg_öv
;

858 
bôlöe_d©a
,
bôlöe_èg
,
£n£_amp_d©a
,
£n£_amp_èg
;

859 
com∑ª_èg
,
mux_drivî
,
d©a_ouçut
,
£lb
;

860 
time_tûl_com∑ª
,
time_tûl_£À˘
,
drivî_ˇp
,
vÆid_drivî
;

861 
cy˛e_time
, 
¥ech¨ge_dñ
;

862 
ouåi£time
,
öri£time
;

864 
rows
 = 
∑ømëîs
->
numbî_of_£ts
;

865 
cﬁumns
 = 8*
∑ømëîs
->
block_size
*∑ømëîs->
assocütivôy
;

871 
ªsu…
->
cy˛e_time
 = 
BIGNUM
;

872 
ªsu…
->
ac˚ss_time
 = 
BIGNUM
;

873 
N•d
=1;N•d<=
MAXSPD
;Nspd=Nspd*2) {

874 
Ndwl
=1;Ndwl<=
MAXN
;Ndwl=Ndwl*2) {

875 
Ndbl
=1;Ndbl<=
MAXN
;Ndbl=Ndbl*2) {

876 
Nt•d
=1;Nt•d<=
MAXSPD
;Ntspd=Ntspd*2) {

877 
Ntwl
=1;Ntwl<=1;Ntwl=Ntwl*2) {

878 
Ntbl
=1;Ntbl<=
MAXN
;Ntbl=Ntbl*2) {

880 i‡(
‹g™iz©i⁄Æ_∑ømëîs_vÆid


881 (
rows
,
cﬁumns
,
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
)) {

887 
decodî_d©a
 = 
	`decodî_dñay
(
∑ømëîs
->
ˇche_size
,∑ømëîs->
block_size
,

888 
∑ømëîs
->
assocütivôy
,
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
,

889 &
decodî_d©a_drivî
,&
decodî_d©a_3to8
,

890 &
decodî_d©a_öv
,&
ouåi£time
);

892 
öri£time
 = 
ouåi£time
;

893 
w‹dlöe_d©a
 = 
	`w‹dlöe_dñay
(
∑ømëîs
->
block_size
,

894 
∑ømëîs
->
assocütivôy
,
Ndwl
,
N•d
,

895 
öri£time
,&
ouåi£time
);

896 
öri£time
 = 
ouåi£time
;

897 
bôlöe_d©a
 = 
	`bôlöe_dñay
(
∑ømëîs
->
ˇche_size
,∑ømëîs->
assocütivôy
,

898 
∑ømëîs
->
block_size
,
Ndwl
,
Ndbl
,
N•d
,

899 
öri£time
,&
ouåi£time
);

900 
öri£time
 = 
ouåi£time
;

901 
£n£_amp_d©a
 = 
	`£n£_amp_dñay
(
öri£time
,&
ouåi£time
);

902 
öri£time
 = 
ouåi£time
;

903 
d©a_ouçut
 = 
	`d©aouçut_dñay
(
∑ømëîs
->
ˇche_size
,∑ømëîs->
block_size
,

904 
∑ømëîs
->
assocütivôy
,
Ndbl
,
N•d
,
Ndwl
,

905 
öri£time
,&
ouåi£time
);

906 
öri£time
 = 
ouåi£time
;

913 i‡(
∑ømëîs
->
assocütivôy
==1) {

914 
bef‹e_mux
 = 
decodî_d©a
 + 
w‹dlöe_d©a
 + 
bôlöe_d©a
 +

915 
£n£_amp_d©a
 + 
d©a_ouçut
;

916 
a·î_mux
 = 0;

918 
bef‹e_mux
 = 
decodî_d©a
 + 
w‹dlöe_d©a
 + 
bôlöe_d©a
 +

919 
£n£_amp_d©a
;

920 
a·î_mux
 = 
d©a_ouçut
;

929 
decodî_èg
 = 
	`decodî_èg_dñay
(
∑ømëîs
->
ˇche_size
,

930 
∑ømëîs
->
block_size
,∑ømëîs->
assocütivôy
,

931 
Ndwl
,
Ndbl
,
N•d
,
Ntwl
,
Ntbl
,
Nt•d
,

932 &
decodî_èg_drivî
,&
decodî_èg_3to8
,

933 &
decodî_èg_öv
,&
ouåi£time
);

934 
öri£time
 = 
ouåi£time
;

936 
w‹dlöe_èg
 = 
	`w‹dlöe_èg_dñay
(
∑ømëîs
->
ˇche_size
,

937 
∑ømëîs
->
assocütivôy
,
Nt•d
,
Ntwl
,

938 
öri£time
,&
ouåi£time
);

939 
öri£time
 = 
ouåi£time
;

941 
bôlöe_èg
 = 
	`bôlöe_èg_dñay
(
∑ømëîs
->
ˇche_size
,∑ømëîs->
assocütivôy
,

942 
∑ømëîs
->
block_size
,
Ntwl
,
Ntbl
,
Nt•d
,

943 
öri£time
,&
ouåi£time
);

944 
öri£time
 = 
ouåi£time
;

946 
£n£_amp_èg
 = 
	`£n£_amp_èg_dñay
(
öri£time
,&
ouåi£time
);

947 
öri£time
 = 
ouåi£time
;

949 
com∑ª_èg
 = 
	`com∑ª_time
(
∑ømëîs
->
ˇche_size
,∑ømëîs->
assocütivôy
,

950 
Ntbl
,
Nt•d
,

951 
öri£time
,&
ouåi£time
);

952 
öri£time
 = 
ouåi£time
;

954 i‡(
∑ømëîs
->
assocütivôy
 == 1) {

955 
mux_drivî
 = 0;

956 
vÆid_drivî
 = 
	`vÆid_drivî_dñay
(
∑ømëîs
->
ˇche_size
,

957 
∑ømëîs
->
assocütivôy
,
Ntbl
,
Nt•d
,
öri£time
);

958 
time_tûl_com∑ª
 = 
decodî_èg
 + 
w‹dlöe_èg
 + 
bôlöe_èg
 +

959 
£n£_amp_èg
;

961 
time_tûl_£À˘
 = 
time_tûl_com∑ª
+ 
com∑ª_èg
 + 
vÆid_drivî
;

968 
ac˚ss_time
 = 
	`MAX
(
bef‹e_mux
+
a·î_mux
,
time_tûl_£À˘
);

972 
mux_drivî
 = 
	`mux_drivî_dñay
(
∑ømëîs
->
ˇche_size
,∑ømëîs->
block_size
,

973 
∑ømëîs
->
assocütivôy
,
Ndbl
,
N•d
,
Ndwl
,
Ntbl
,
Nt•d
,

974 
öri£time
,&
ouåi£time
);

976 
£lb
 = 
	`£lb_dñay_èg_∑th
(
öri£time
,&
ouåi£time
);

978 
vÆid_drivî
 = 0;

980 
time_tûl_com∑ª
 = 
decodî_èg
 + 
w‹dlöe_èg
 + 
bôlöe_èg
 +

981 
£n£_amp_èg
;

983 
time_tûl_£À˘
 = 
time_tûl_com∑ª
+ 
com∑ª_èg
 + 
mux_drivî


984 + 
£lb
;

986 
ac˚ss_time
 = 
	`MAX
(
bef‹e_mux
,
time_tûl_£À˘
Ë+
a·î_mux
;

993 
¥ech¨ge_dñ
 = 
	`¥ech¨ge_dñay
(
w‹dlöe_d©a
);

995 
cy˛e_time
 = 
ac˚ss_time
 + 
¥ech¨ge_dñ
;

1003 i‡(
ªsu…
->
cy˛e_time
+1e-11*‘esu…->
be°_Ndwl
+ªsu…->
be°_Ndbl
+ªsu…->
be°_N•d
+ªsu…->
be°_Ntwl
+ªsu…->
be°_Ntbl
+ªsu…->
be°_Nt•d
Ë> cy˛e_time/
FUDGEFACTOR
+1e-11*(
Ndwl
+
Ndbl
+
N•d
+
Ntwl
+
Ntbl
+
Nt•d
)) {

1004 
ªsu…
->
cy˛e_time
 = cy˛e_time/
FUDGEFACTOR
;

1005 
ªsu…
->
ac˚ss_time
 =ác˚ss_time/
FUDGEFACTOR
;

1006 
ªsu…
->
be°_Ndwl
 = 
Ndwl
;

1007 
ªsu…
->
be°_Ndbl
 = 
Ndbl
;

1008 
ªsu…
->
be°_N•d
 = 
N•d
;

1009 
ªsu…
->
be°_Ntwl
 = 
Ntwl
;

1010 
ªsu…
->
be°_Ntbl
 = 
Ntbl
;

1011 
ªsu…
->
be°_Nt•d
 = 
Nt•d
;

1012 
ªsu…
->
decodî_dñay_d©a
 = 
decodî_d©a
/
FUDGEFACTOR
;

1013 
ªsu…
->
decodî_dñay_èg
 = 
decodî_èg
/
FUDGEFACTOR
;

1014 
ªsu…
->
dec_èg_drivî
 = 
decodî_èg_drivî
/
FUDGEFACTOR
;

1015 
ªsu…
->
dec_èg_3to8
 = 
decodî_èg_3to8
/
FUDGEFACTOR
;

1016 
ªsu…
->
dec_èg_öv
 = 
decodî_èg_öv
/
FUDGEFACTOR
;

1017 
ªsu…
->
dec_d©a_drivî
 = 
decodî_d©a_drivî
/
FUDGEFACTOR
;

1018 
ªsu…
->
dec_d©a_3to8
 = 
decodî_d©a_3to8
/
FUDGEFACTOR
;

1019 
ªsu…
->
dec_d©a_öv
 = 
decodî_d©a_öv
/
FUDGEFACTOR
;

1020 
ªsu…
->
w‹dlöe_dñay_d©a
 = 
w‹dlöe_d©a
/
FUDGEFACTOR
;

1021 
ªsu…
->
w‹dlöe_dñay_èg
 = 
w‹dlöe_èg
/
FUDGEFACTOR
;

1022 
ªsu…
->
bôlöe_dñay_d©a
 = 
bôlöe_d©a
/
FUDGEFACTOR
;

1023 
ªsu…
->
bôlöe_dñay_èg
 = 
bôlöe_èg
/
FUDGEFACTOR
;

1024 
ªsu…
->
£n£_amp_dñay_d©a
 = 
£n£_amp_d©a
/
FUDGEFACTOR
;

1025 
ªsu…
->
£n£_amp_dñay_èg
 = 
£n£_amp_èg
/
FUDGEFACTOR
;

1026 
ªsu…
->
com∑ª_∑π_dñay
 = 
com∑ª_èg
/
FUDGEFACTOR
;

1027 
ªsu…
->
drive_mux_dñay
 = 
mux_drivî
/
FUDGEFACTOR
;

1028 
ªsu…
->
£lb_dñay
 = 
£lb
/
FUDGEFACTOR
;

1029 
ªsu…
->
drive_vÆid_dñay
 = 
vÆid_drivî
/
FUDGEFACTOR
;

1030 
ªsu…
->
d©a_ouçut_dñay
 = 
d©a_ouçut
/
FUDGEFACTOR
;

1031 
ªsu…
->
¥ech¨ge_dñay
 = 
¥ech¨ge_dñ
/
FUDGEFACTOR
;

1041 
	}
}

	@tokencoherence.c

53 
	~"hódîs.h
"

55 
	#COMMITPREDBIAS
 230

	)

57 
	#CANREAD
(
blocköfo
Ë(blocköfÿ&& \

	)

58 
	gblocköfo
->
	gvÆid
 && \

59 (
	gblocköfo
->
	gi_am_ow√r
 || blocköfo->
	gn⁄ow√r_tokí_cou¡
))

60 
	#CANWRITE
(
blocköfo
Ë(blocköfÿ&& \

	)

61 
	gblocköfo
->
	gvÆid
 && \

62 
	gblocköfo
->
	gi_am_ow√r
 && \

63 (
	gblocköfo
->
	gn⁄ow√r_tokí_cou¡
 =
TC_TOTAL_NONOWNER_TOKEN_COUNT
))

65 
	#CHECK_CACHE_NUM
(
n
Ëif((“)<0Ë|| (“)>7)Ë
	`Áèl
("ˇchênumbî %d i†outsidêønge",n)

	)

67 
	#CHECK_CACHE_NUM2
(
n
Ëif((“)<0Ë|| (“)>7)Ë
	`Áèl
("ˇchênumbî %d i†outsidêønge",n)

	)

74 
tc_¨bôî
 
	gsh¨edmem‹y¨bôî
[
TIMEWINDOW
];

79 
cou¡î_t
 
	gÁπhe°_¥edi˘i⁄
 = 0;

80 
cou¡î_t
 
	gﬁde°_¥edi˘i⁄
 = 0;

84 
tc_blocköfo
 * 
block_¥edi˘_Æloc
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
t
);

85 
adju°_pùñöe_ußge
(
md_addr_t
 
addr
,
ˇche_num
, 
is_wrôe
, 
adju°
, 
cou¡î_t
 
cy˛e
, 
ˇ£futuª
, 
ˇ£missög
);

89 
	#CORNER_CASES
 51

	)

90 
cou¡î_t
 
	gc‹√r_ˇ£_cou¡
[
CORNER_CASES
];

91 
cou¡î_t
 
	gtŸÆ_dñays_added
 = 0;

92 
cou¡î_t
 
	gcommô¥edi˘_îr‹
 = 0;

93 
cou¡î_t
 
	gcommô¥edi˘_abs_îr‹
 = 0;

94 
cou¡î_t
 
	gyõld_f‹_ex˛
 = 0;

95 
cou¡î_t
 
	gblock_Æloc_cou¡
 = 0;

96 
cou¡î_t
 
	gblock_‰ì_cou¡
 = 0;

97 
cou¡î_t
 
	gblock_ªad_cou¡
 = 0;

98 
cou¡î_t
 
	gblock_wrôe_cou¡
 = 0;

99 
cou¡î_t
 
	gblock_ªady_cou¡
 = 0;

100 
cou¡î_t
 
	gcommô_cou¡
 = 0;

101 
°©_°©_t
 *
	gtc_dñay_di°
 = 
NULL
;

102 
°©_°©_t
 *
	gtc_tw¥ox_di°
 = 
NULL
;

103 
°©_°©_t
 *
	gtc_futuªc⁄Êi˘_di°
 = 
NULL
;

104 
°©_°©_t
 *
	gtc_c‹√rˇ£_di°
 = 
NULL
;

106 
	gtc_futuªc⁄Êi˘_max
 = 0;

109 
	$tc_ªg_°©s
(
°©_sdb_t
 *
sdb
) {

110 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count0",

112 &
c‹√r_ˇ£_cou¡
[0], 0, 
NULL
);

113 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count1",

115 &
c‹√r_ˇ£_cou¡
[1], 0, 
NULL
);

116 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count2",

118 &
c‹√r_ˇ£_cou¡
[2], 0, 
NULL
);

119 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count3",

121 &
c‹√r_ˇ£_cou¡
[3], 0, 
NULL
);

122 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count4",

124 &
c‹√r_ˇ£_cou¡
[4], 0, 
NULL
);

131 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count7",

133 &
c‹√r_ˇ£_cou¡
[7], 0, 
NULL
);

134 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count8",

136 &
c‹√r_ˇ£_cou¡
[8], 0, 
NULL
);

137 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count9",

139 &
c‹√r_ˇ£_cou¡
[9], 0, 
NULL
);

140 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count10",

142 &
c‹√r_ˇ£_cou¡
[10], 0, 
NULL
);

143 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count11",

145 &
c‹√r_ˇ£_cou¡
[11], 0, 
NULL
);

146 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count12",

148 &
c‹√r_ˇ£_cou¡
[12], 0, 
NULL
);

149 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count13",

151 &
c‹√r_ˇ£_cou¡
[13], 0, 
NULL
);

152 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count14",

154 &
c‹√r_ˇ£_cou¡
[14], 0, 
NULL
);

155 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count15",

157 &
c‹√r_ˇ£_cou¡
[15], 0, 
NULL
);

158 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count16",

160 &
c‹√r_ˇ£_cou¡
[16], 0, 
NULL
);

164 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count18",

166 &
c‹√r_ˇ£_cou¡
[18], 0, 
NULL
);

167 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count19",

169 &
c‹√r_ˇ£_cou¡
[19], 0, 
NULL
);

170 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count20",

172 &
c‹√r_ˇ£_cou¡
[20], 0, 
NULL
);

173 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count21",

175 &
c‹√r_ˇ£_cou¡
[21], 0, 
NULL
);

176 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count22",

178 &
c‹√r_ˇ£_cou¡
[22], 0, 
NULL
);

179 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count23",

181 &
c‹√r_ˇ£_cou¡
[23], 0, 
NULL
);

182 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count24",

184 &
c‹√r_ˇ£_cou¡
[24], 0, 
NULL
);

185 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count25",

187 &
c‹√r_ˇ£_cou¡
[25], 0, 
NULL
);

191 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count27",

193 &
c‹√r_ˇ£_cou¡
[27], 0, 
NULL
);

194 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count28",

196 &
c‹√r_ˇ£_cou¡
[28], 0, 
NULL
);

197 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count29",

199 &
c‹√r_ˇ£_cou¡
[29], 0, 
NULL
);

200 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count30",

202 &
c‹√r_ˇ£_cou¡
[30], 0, 
NULL
);

203 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count31",

205 &
c‹√r_ˇ£_cou¡
[31], 0, 
NULL
);

206 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count32",

208 &
c‹√r_ˇ£_cou¡
[32], 0, 
NULL
);

209 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count33",

211 &
c‹√r_ˇ£_cou¡
[33], 0, 
NULL
);

212 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count34",

214 &
c‹√r_ˇ£_cou¡
[34], 0, 
NULL
);

215 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count35",

217 &
c‹√r_ˇ£_cou¡
[35], 0, 
NULL
);

218 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count36",

220 &
c‹√r_ˇ£_cou¡
[36], 0, 
NULL
);

221 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count37",

223 &
c‹√r_ˇ£_cou¡
[37], 0, 
NULL
);

224 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count38",

226 &
c‹√r_ˇ£_cou¡
[38], 0, 
NULL
);

227 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count39",

229 &
c‹√r_ˇ£_cou¡
[39], 0, 
NULL
);

230 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count40",

232 &
c‹√r_ˇ£_cou¡
[40], 0, 
NULL
);

233 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count41",

235 &
c‹√r_ˇ£_cou¡
[41], 0, 
NULL
);

236 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count42",

238 &
c‹√r_ˇ£_cou¡
[42], 0, 
NULL
);

239 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count43",

241 &
c‹√r_ˇ£_cou¡
[43], 0, 
NULL
);

242 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count44",

244 &
c‹√r_ˇ£_cou¡
[44], 0, 
NULL
);

245 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count45",

247 &
c‹√r_ˇ£_cou¡
[45], 0, 
NULL
);

248 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count46",

250 &
c‹√r_ˇ£_cou¡
[46], 0, 
NULL
);

251 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count47",

253 &
c‹√r_ˇ£_cou¡
[47], 0, 
NULL
);

254 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count48",

256 &
c‹√r_ˇ£_cou¡
[48], 0, 
NULL
);

257 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count49",

259 &
c‹√r_ˇ£_cou¡
[49], 0, 
NULL
);

260 
	`°©_ªg_cou¡î
(
sdb
, "tc_corner_case_count50",

262 &
c‹√r_ˇ£_cou¡
[50], 0, 
NULL
);

265 
tc_c‹√rˇ£_di°
 = 
	`°©_ªg_sdi°
(
sdb
, "tc_cornercase_dist",

268  
PF_ALL
,

269  
NULL
,

270  
NULL
);

272 
	`°©_ªg_cou¡î
(
sdb
, "tc_total_delays_added",

274 &
tŸÆ_dñays_added
, 0, 
NULL
);

275 
	`°©_ªg_cou¡î
(
sdb
, "tc_yield_for_excl",

277 &
yõld_f‹_ex˛
, 0, 
NULL
);

279 
	`°©_ªg_cou¡î
(
sdb
, "tc_block_alloc_count",

281 &
block_Æloc_cou¡
, 0, 
NULL
);

283 
	`°©_ªg_cou¡î
(
sdb
, "tc_block_free_count",

285 &
block_‰ì_cou¡
, 0, 
NULL
);

287 
	`°©_ªg_cou¡î
(
sdb
, "tc_block_read_count",

289 &
block_ªad_cou¡
, 0, 
NULL
);

291 
	`°©_ªg_cou¡î
(
sdb
, "tc_block_write_count",

293 &
block_wrôe_cou¡
, 0, 
NULL
);

295 
	`°©_ªg_cou¡î
(
sdb
, "tc_block_ready_count",

297 &
block_ªady_cou¡
, 0, 
NULL
);

299 
	`°©_ªg_cou¡î
(
sdb
, "tc_commit_count",

301 &
commô_cou¡
, 0, 
NULL
);

304 
	`°©_ªg_cou¡î
(
sdb
, "tc_commitpredict_abs_error",

306 &
commô¥edi˘_abs_îr‹
, 0, 
NULL
);

307 
	`°©_ªg_f‹muœ
(
sdb
, "avg_tc_commitpredict_abs_error",

309 "tc_commô¥edi˘_abs_îr‹ /Åc_commô_cou¡", 
NULL
);

311 
	`°©_ªg_cou¡î
(
sdb
, "tc_commitpredict_error",

313 &
commô¥edi˘_îr‹
, 0, 
NULL
);

314 
	`°©_ªg_f‹muœ
(
sdb
, "avg_tc_commitpredict_error",

316 "tc_commô¥edi˘_îr‹ /Åc_commô_cou¡", 
NULL
);

318 
tc_dñay_di°
 = 
	`°©_ªg_di°
(
sdb
, "tc_delays_added",

323  
PF_ALL
,

324  
NULL
,

325  
NULL
,

326  
NULL
);

329 
tc_tw¥ox_di°
 = 
	`°©_ªg_di°
(
sdb
, "tc_twprox_dist",

334  
PF_ALL
,

335  
NULL
,

336  
NULL
,

337  
NULL
);

339 
tc_futuªc⁄Êi˘_di°
 = 
	`°©_ªg_di°
(
sdb
, "tc_futureconflict_dist",

344  
PF_ALL
,

345  
NULL
,

346  
NULL
,

347  
NULL
);

349 
tc_futuªc⁄Êi˘_di°
 = 
	`°©_ªg_sdi°
(
sdb
, "tc_futureconflict_dist",

352  
PF_ALL
,

353  
NULL
,

354  
NULL
);

357 
	`°©_ªg_öt
(
sdb
, "tc_futureconflict_max",

359 &
tc_futuªc⁄Êi˘_max
, 0, 
NULL
);

360 
	}
}

363 
hashèbÀ_íåy
 ** 
	ghashèbÀ
;

364 
	ghashèbÀ_size
;

365 
md_addr_t
 
	gtc_blockaddr_mask
;

366 
	gˇche_block_size
;

367 
	#SHAREDMEM_NUMBER
 (-1)

	)

368 
	#HASHFN
(
key
Ë\

	)

369 (((
	gkey
 >> 24Ë^ (key >> 16Ë^ (key >> 8Ë^ keyË& (
	ghashèbÀ_size
-1))

371 
	$put_blocköfo
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
tc_blocköfo
 * 
blocköfo
, 
cou¡î_t
 
cy˛e
) {

372 
pos
 = 
	`HASHFN
(
addr
);

373 
hashèbÀ_íåy
 * 
hã
;

374 i‡((
pos
>=
hashèbÀ_size
Ë|| (pos<0)Ë
	`Áèl
("bad hash function");

375 
hã
 = 
hashèbÀ
[
pos
];

378 
hã
 && !(hã->
addr
 =add∏&& hã->
ˇche_numbî
 == cache_number))

379 
hã
=hã->
√xt
;

381 i‡(!
hã
) {

383 
hã
 = (
hashèbÀ_íåy
 *Ë
	`mÆloc
((hashtable_entry));

384 i‡(!
hã
Ë
	`Áèl
("out of memory");

385 
hã
->
addr
 =áddr;

386 
hã
->
ˇche_numbî
 = cache_number;

387 
hã
->
blocköfo_hód
 = 
NULL
;

388 
hã
->
√xt
 = 
hashèbÀ
[
pos
];

389 
hashèbÀ
[
pos
] = 
hã
;

395 i‡(
blocköfo
->
°©e_as_of
 == -1)

396 
blocköfo
->
°©e_as_of
 = 
cy˛e
;

397 i‡(
blocköfo
->
°©e_as_of
 !
cy˛e
)

398 
	`Áèl
("block has oldÅimestamp");

400 i‡(!
hã
->
blocköfo_hód
) {

402 
hã
->
blocköfo_hód
 = 
blocköfo
;

403 
blocköfo
->
√xt
 = 
NULL
;

404 } i‡(
hã
->
blocköfo_hód
->
°©e_as_of
 > 
cy˛e
) {

406 i‡(
blocköfo
 =
hã
->
blocköfo_hód
Ë
	`Áèl
("infiniteÜoop");

407 
blocköfo
->
√xt
 = 
hã
->
blocköfo_hód
;

408 
hã
->
blocköfo_hód
 = 
blocköfo
;

411 
tc_blocköfo
 * 
¥ev
 = 
hã
->
blocköfo_hód
;

412 
¥ev
->
√xt
 &&Öªv->√xt->
°©e_as_of
 < 
cy˛e
) {

413 
¥ev
 =Öªv->
√xt
;

415 i‡(
hã
->
blocköfo_hód
->
°©e_as_of
 =
cy˛e
Ë
c‹√r_ˇ£_cou¡
[0]++;

416 i‡(
¥ev
->
°©e_as_of
 =
cy˛e
Ë
c‹√r_ˇ£_cou¡
[21]++;

419 
blocköfo
->
√xt
 = 
¥ev
->next;

420 
¥ev
->
√xt
 = 
blocköfo
;

423 
	}
}

425 
cou¡î_t
 
	$gë_blocköfo_futuªexi°™˚
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
cy˛e
) {

426 
pos
 = 
	`HASHFN
(
addr
);

427 
hashèbÀ_íåy
 * 
hã
;

428 i‡((
pos
>=
hashèbÀ_size
Ë|| (pos<0)Ë
	`Áèl
("bad hash function");

429 
hã
 = 
hashèbÀ
[
pos
];

432 
hã
 && !(hã->
addr
 =add∏&& hã->
ˇche_numbî
 == cache_number))

433 
hã
=hã->
√xt
;

435 i‡(!
hã
 || !hã->
blocköfo_hód
) {

439 i‡(
hã
->
blocköfo_hód
->
°©e_as_of
 > 
cy˛e
) {

440  
hã
->
blocköfo_hód
->
°©e_as_of
;

442 
	`Áèl
("this function only willÅell youáboutÅhe future");

444 
	}
}

446 
tc_blocköfo
 * 
	$gë_blocköfo
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
cy˛e
, 
futuª_c⁄Êi˘_c‹√r_ˇ£
, 
futuª_⁄ly_ˇ£
) {

447 
pos
 = 
	`HASHFN
(
addr
);

448 
hashèbÀ_íåy
 * 
hã
;

449 i‡((
pos
>=
hashèbÀ_size
Ë|| (pos<0)Ë
	`Áèl
("bad hash function");

450 
hã
 = 
hashèbÀ
[
pos
];

453 i‡(
cy˛e
 < 
sim_cy˛e
)

454 
	`Áèl
("ˇ¬Ÿác˚s†thê∑°; iàwa†îa£d (cy˛e=%Œd, sim_cy˛e=%Œd).",
cy˛e
,
sim_cy˛e
);

457 
hã
 && !(hã->
addr
 =add∏&& hã->
ˇche_numbî
 == cache_number))

458 
hã
=hã->
√xt
;

460 i‡(!
hã
 || !hã->
blocköfo_hód
) {

461  
NULL
;

464 i‡(
hã
->
blocköfo_hód
->
°©e_as_of
 > 
cy˛e
) {

466 i‡(
futuª_⁄ly_ˇ£
)

467 
c‹√r_ˇ£_cou¡
[
futuª_⁄ly_ˇ£
]++;

468  
NULL
;

471 
tc_blocköfo
 * 
¥ev
;

477  
hã
->
blocköfo_hód
->
√xt
 &&

478 
hã
->
blocköfo_hód
->
°©e_as_of
 < 
sim_cy˛e
 &&

479 
hã
->
blocköfo_hód
->
√xt
->
°©e_as_of
 < 
sim_cy˛e
) {

480 
¥ev
 = 
hã
->
blocköfo_hód
;

481 
hã
->
blocköfo_hód
 = 
¥ev
->
√xt
;

482 
	`‰ì
(
¥ev
);

485 
¥ev
 = 
hã
->
blocköfo_hód
;

486 
¥ev
->
√xt
 &&Öªv->√xt->
°©e_as_of
 < 
cy˛e
) {

487 
¥ev
 =Öªv->
√xt
;

490 i‡(
¥ev
->
√xt
 && 
futuª_c⁄Êi˘_c‹√r_ˇ£
) {

491 
tc_blocköfo
 * 
futuª
 = 
¥ev
;

492 
imp‹è¡_öfo_ign‹ed
 = 0;

493 
cou¡î_t
 
futuª_cy˛e
 = 0;

496 
futuª
->
√xt
) {

497 i‡(
futuª_c⁄Êi˘_c‹√r_ˇ£
 == 2 ) {

498 i‡(
	`CANREAD
(
futuª
Ë!CANREAD(futuª->
√xt
)) {

499 
imp‹è¡_öfo_ign‹ed
++;

500 i‡(!
futuª_cy˛e
Ëfutuª_cy˛ê
futuª
->
°©e_as_of
;

502 } i‡(
futuª_c⁄Êi˘_c‹√r_ˇ£
 == 32 ) {

503 i‡(
	`CANWRITE
(
futuª
Ë!CANWRITE(futuª->
√xt
)) {

504 
imp‹è¡_öfo_ign‹ed
++;

505 i‡(!
futuª_cy˛e
Ëfutuª_cy˛ê
futuª
->
°©e_as_of
;

508 i‡–(
	`CANREAD
(
futuª
Ë!CANREAD(futuª->
√xt
)) ||

509 (
	`CANWRITE
(
futuª
Ë!CANWRITE(futuª->
√xt
))) {

510 
imp‹è¡_öfo_ign‹ed
++;

511 i‡(!
futuª_cy˛e
Ëfutuª_cy˛ê
futuª
->
°©e_as_of
;

514 
futuª
=futuª->
√xt
;

517 i‡(
imp‹è¡_öfo_ign‹ed
) {

518 
c‹√r_ˇ£_cou¡
[
futuª_c⁄Êi˘_c‹√r_ˇ£
]++;

519 
	`°©_add_ßm∂e
(
tc_futuªc⁄Êi˘_di°
, 
futuª_cy˛e
 - 
¥ev
->
°©e_as_of
);

520 i‡(
futuª_cy˛e
 - 
¥ev
->
°©e_as_of
 > 
tc_futuªc⁄Êi˘_max
)

521 
tc_futuªc⁄Êi˘_max
 = 
futuª_cy˛e
 - 
¥ev
->
°©e_as_of
;

525  
¥ev
;

528 
	}
}

531 
tc_blocköfo
 * 
	$gë_blocköfo_modifynow
(
tc_blocköfo
 * 
blocköfo
, 
cou¡î_t
 
cy˛e
) {

532 
tc_blocköfo
 * 
√wblock
;

534 i‡(
blocköfo
->
°©e_as_of
 > 
cy˛e
) {

536 
c‹√r_ˇ£_cou¡
[24]++;

537  
blocköfo
;

541 
blocköfo
->
√xt
 && (blocköfo->√xt->
°©e_as_of
 < 
cy˛e
))

542 
blocköfo
 = blocköfo->
√xt
;

545 i‡(
blocköfo
->
°©e_as_of
 =
cy˛e
) {

547  
blocköfo
;

550 
√wblock
 = 
	`mÆloc
((
tc_blocköfo
));

551 i‡(!
√wblock
Ë
	`Áèl
("out of memory");

553 
√wblock
->
vÆid
 = 
blocköfo
->valid;

554 
√wblock
->
i_am_ow√r
 = 
blocköfo
->i_am_owner;

555 
√wblock
->
n⁄ow√r_tokí_cou¡
 = 
blocköfo
->nonowner_token_count;

556 
√wblock
->
addr
 = 
blocköfo
->addr;

557 
√wblock
->
ªad_ö_pùñöe
 = 
blocköfo
->read_in_pipeline;

558 
√wblock
->
wrôe_ö_pùñöe
 = 
blocköfo
->write_in_pipeline;

559 
√wblock
->
modifõd
 = 
blocköfo
->modified;

560 
√wblock
->
exi°s
 = 
blocköfo
->exists;

562 
√wblock
->
°©e_as_of
 = 
cy˛e
;

563 
√wblock
->
√xt
=
blocköfo
->next;

564 
blocköfo
->
√xt
=
√wblock
;

565 i‡(
blocköfo
->
√xt
->
°©e_as_of
 < blockinfo->state_as_of)

566 
	`Áèl
("mistakenlyáttachedÇew block inÅhe wrongÖlace");

567  
√wblock
;

568 
	}
}

571 
	$give_tokís
(
n⁄ow√r_tokís
,
ow√r_tokí
,
has_d©a
,
md_addr_t
 
addr
, 
ˇche_num
,
cou¡î_t
 
ª•_time
, 
cc
) {

572 
tc_blocköfo
 * 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_num
,
ª•_time
,0,0);

575 
max_Áûed
 = 0;

576 
ˇ£3
=0;

577 
ˇ£4
=0;

579 i‡(!
blocköfo
) {

582 
cou¡î_t
 
futuª_cy˛e
 = 
	`gë_blocköfo_futuªexi°™˚
(
addr
,
ˇche_num
,
ª•_time
);

584 i‡(
futuª_cy˛e
) {

585 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_num
,
futuª_cy˛e
,0,0);

586 i‡(
blocköfo
Ë
c‹√r_ˇ£_cou¡
[50]++;

588 i‡(!
blocköfo
) {

589 
c‹√r_ˇ£_cou¡
[19]++;

609 i‡(
blocköfo
->
°©e_as_of
 !
ª•_time
)

610 
blocköfo
 = 
	`gë_blocköfo_modifynow
(blocköfo,
ª•_time
);

612 
blocköfo
) {

613 
blocköfo
->
n⁄ow√r_tokí_cou¡
 +
n⁄ow√r_tokís
;

614 i‡(
blocköfo
->
n⁄ow√r_tokí_cou¡
 < 0) {

615 
c‹√r_ˇ£_cou¡
[13]++;

617 
blocköfo
->
n⁄ow√r_tokí_cou¡
 = 0;

619 i‡(
blocköfo
->
n⁄ow√r_tokí_cou¡
 > 
TC_TOTAL_NONOWNER_TOKEN_COUNT
) {

621 
exåa
 = (
blocköfo
->
n⁄ow√r_tokí_cou¡
 - 
TC_TOTAL_NONOWNER_TOKEN_COUNT
);

622 i‡(
exåa
 > 
max_Áûed
) max_failed=extra;

623 
blocköfo
->
n⁄ow√r_tokí_cou¡
 = 
TC_TOTAL_NONOWNER_TOKEN_COUNT
;

625 
c‹√r_ˇ£_cou¡
[8]++;

628 i‡(
ow√r_tokí
==1) {

629 i‡(
blocköfo
->
i_am_ow√r
Ë
c‹√r_ˇ£_cou¡
[14]++;

630 
blocköfo
->
i_am_ow√r
 = 1;

631 } i‡(
ow√r_tokí
==-1) {

632 i‡(!
blocköfo
->
i_am_ow√r
Ë
c‹√r_ˇ£_cou¡
[15]++;

633 i‡(
blocköfo
->
wrôe_ö_pùñöe
) {

634 
c‹√r_ˇ£_cou¡
[3]++;

635 
	`°©_add_ßm∂e
(
tc_c‹√rˇ£_di°
, 
cc
);

636 
ˇ£3
++;

638 
blocköfo
->
i_am_ow√r
 = 0;

641 i‡(
has_d©a
 && ((
n⁄ow√r_tokís
>0)||(
ow√r_tokí
==1))) {

642 
blocköfo
->
vÆid
=1;

643 } i‡(!
blocköfo
->
n⁄ow√r_tokí_cou¡
 && !blocköfo->
i_am_ow√r
) {

644 
blocköfo
->
vÆid
=0;

647 i‡(
blocköfo
->
ªad_ö_pùñöe
 && !(blocköfo->
i_am_ow√r
 || blocköfo->
n⁄ow√r_tokí_cou¡
)) {

648 
c‹√r_ˇ£_cou¡
[4]++;

649 
	`°©_add_ßm∂e
(
tc_c‹√rˇ£_di°
, 
cc
+1);

650 
ˇ£4
++;

653 
blocköfo
=blocköfo->
√xt
;

656 if(
max_Áûed
Ë
c‹√r_ˇ£_cou¡
[7]++;

657 if(
ˇ£3
) {

658 
c‹√r_ˇ£_cou¡
[39]++;

659 } if(
ˇ£4
) {

660 
c‹√r_ˇ£_cou¡
[40]++;

662  
max_Áûed
;

663 
	}
}

665 
•ec_bíchm¨ks
;

666 
	$tc_commô_¥edi˘
(
md_addr_t
 
addr
,
ˇche_num
, 
is_wrôe
, 
cou¡î_t
 
cy˛e
, cou¡î_à
issue_cy˛e
) {

668 i‡(
cy˛e
 < 
sim_cy˛e
)

669 
	`Áèl
("can't commit_predict inÅheÖast");

670 i‡(
issue_cy˛e
 < 
sim_cy˛e
)

671 
	`Áèl
("whyáre we issuing inÅheÖast??");

672 i‡(
issue_cy˛e
 > 
cy˛e
)

673 
	`Áèl
("can't commit before issue");

675 #ifde‡
TC_DEBUG


676 
	`¥ötf
("commôÖªdi˘ cy˛e=%Œd, cache=%d,addr=%Œx\n",
cy˛e
,
ˇche_num
,
addr
);

679 
cy˛e
 +
COMMITPREDBIAS
;

680 
	`adju°_pùñöe_ußge
(
addr
,
ˇche_num
, 
is_wrôe
, 1, 
issue_cy˛e
, 41, 42);

681 
	`adju°_pùñöe_ußge
(
addr
,
ˇche_num
, 
is_wrôe
, -1, 
cy˛e
, 25, 20);

682 
	}
}

684 
	$adju°_pùñöe_ußge
(
md_addr_t
 
addr
,
ˇche_num
, 
is_wrôe
, 
adju°
, 
cou¡î_t
 
cy˛e
, 
ˇ£futuª
, 
ˇ£missög
) {

685 
tc_blocköfo
 * 
blocköfo
;

686 
	`CHECK_CACHE_NUM
(
ˇche_num
);

688 
addr
 &
tc_blockaddr_mask
;

689 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_num
,
cy˛e
,0,0);

692 i‡(!
blocköfo
) {

694 
cou¡î_t
 
futuª_cy˛e
 = 
	`gë_blocköfo_futuªexi°™˚
(
addr
,
ˇche_num
,
cy˛e
);

696 i‡(
futuª_cy˛e
) {

697 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_num
,
futuª_cy˛e
,0,0);

698 
c‹√r_ˇ£_cou¡
[
ˇ£futuª
]++;

701 i‡(!
blocköfo
) {

703 
c‹√r_ˇ£_cou¡
[
ˇ£missög
]++;

705 
blocköfo
 = 
	`block_¥edi˘_Æloc
(
addr
,
ˇche_num
,
cy˛e
);

709 i‡(
blocköfo
->
°©e_as_of
 !
cy˛e
)

710 
blocköfo
 = 
	`gë_blocköfo_modifynow
(blocköfo,
cy˛e
);

712 
blocköfo
) {

714 i‡(
is_wrôe
)

715 
blocköfo
->
wrôe_ö_pùñöe
+=
adju°
;

717 
blocköfo
->
ªad_ö_pùñöe
+=
adju°
;

719 
blocköfo
=blocköfo->
√xt
;

722 
	}
}

724 
	$tc_commô_ªÆ
(
md_addr_t
 
addr
,
ˇche_num
, 
is_wrôe
, 
cou¡î_t
 
¥edi˘ed_cy˛e
, cou¡î_à
ªÆ_cy˛e
) {

725 
addr
 &
tc_blockaddr_mask
;

726 
	`CHECK_CACHE_NUM
(
ˇche_num
);

727 
¥edi˘ed_cy˛e
 +
COMMITPREDBIAS
;

731 i‡(
ªÆ_cy˛e
 < 
sim_cy˛e
)

732 
	`Áèl
("can't commit_real inÅheÖast");

739 
	`adju°_pùñöe_ußge
(
addr
,
ˇche_num
, 
is_wrôe
, 1, 
¥edi˘ed_cy˛e
<
sim_cy˛e
?sim_cycle:predicted_cycle, 35, 36);

740 
	`adju°_pùñöe_ußge
(
addr
,
ˇche_num
, 
is_wrôe
, -1, 
ªÆ_cy˛e
, 37, 38);

744 
commô¥edi˘_îr‹
 +(
¥edi˘ed_cy˛e
-
ªÆ_cy˛e
);

745 
commô¥edi˘_abs_îr‹
 +(
¥edi˘ed_cy˛e
>
ªÆ_cy˛e
?predicted_cycle-real_cycle:real_cycle-predicted_cycle);

746 
commô_cou¡
++;

747 
	}
}

749 
	$tc_öô
(
num_ˇches
, 
num_blocks
, 
block_size
) {

750 
i
;

752 
i
=0;i<
CORNER_CASES
;i++)

753 
c‹√r_ˇ£_cou¡
[
i
]=0;

755 
hashèbÀ_size
 = 
num_ˇches
*
num_blocks
;

756 
hashèbÀ
 = (
hashèbÀ_íåy
 **Ë
	`ˇŒoc
(
hashèbÀ_size
,(hashtable_entry *));

757 i‡(!
hashèbÀ
)

758 
	`Áèl
("CouldÇŸáŒoˇã %d byã†f‹ hashÅabÀ.",
hashèbÀ_size
*(
hashèbÀ_íåy
 *));

759 
i
=0;i<
hashèbÀ_size
;i++)

760 
hashèbÀ
[
i
]=
NULL
;

762 
tc_blockaddr_mask
 = ~((
md_addr_t
Ë
block_size
 - 1);

763 
ˇche_block_size
 = 
block_size
;

764 
	}
}

766 
tc_blocköfo
 * 
	$block_mÆloc
(
md_addr_t
 
addr
) {

767 
tc_blocköfo
 * 
√wblock
;

768 
√wblock
 = 
	`mÆloc
((
tc_blocköfo
));

769 i‡(!
√wblock
Ë
	`Áèl
 ("out of memory");

770 
√wblock
->
√xt
 = 
NULL
;

771 
√wblock
->
vÆid
 = 0;

772 
√wblock
->
i_am_ow√r
 = 0;

773 
√wblock
->
n⁄ow√r_tokí_cou¡
 = 0;

774 
√wblock
->
addr
 =áddr;

776 
√wblock
->
ªad_°¨ve_cy˛e
 = -1;

777 
√wblock
->
wrôe_°¨ve_cy˛e
 = -1;

779 
√wblock
->
ªad_ö_pùñöe
 = 0;

780 
√wblock
->
wrôe_ö_pùñöe
 = 0;

781 
√wblock
->
modifõd
 = 0;

782 
√wblock
->
exi°s
 = 1;

784 
√wblock
->
°©e_as_of
 = -1;

786  
√wblock
;

787 
	}
}

796 
	$tc_block_Æloc
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
t
) {

797 
tc_blocköfo
 * 
sm_block
;

798 
tc_blocköfo
 * 
blocköfo
;

799 
	`CHECK_CACHE_NUM
(
ˇche_numbî
);

807 i‡(!
addr
Ë
	`Áèl
("addr == 0");

809 
addr
 &
tc_blockaddr_mask
;

813 #ifde‡
TC_DEBUG


814 
	`¥ötf
("blockáŒo¯cy˛e=%Œd, cache=%d,addr=%Œx\n",
t
,
ˇche_numbî
,
addr
);

817 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
t
,27,1);

818 i‡(
blocköfo
 && !blocköfo->
exi°s
) {

819 
blocköfo
->
exi°s
 = 1;

820 } i‡(
blocköfo
 && blocköfo->
exi°s
) {

822 
blocköfo
->
exi°s
++;

823 
c‹√r_ˇ£_cou¡
[33]++;

825 
blocköfo
 = 
	`block_mÆloc
(
addr
);

826 
	`put_blocköfo
(
addr
,
ˇche_numbî
,
blocköfo
,
t
);

829 
sm_block
 = 
	`gë_blocköfo
(
addr
,
SHAREDMEM_NUMBER
,
t
,28,43);

830 i‡(!
sm_block
) {

831 
sm_block
 = 
	`block_mÆloc
(
addr
);

832 
sm_block
->
vÆid
 = 1;

833 
sm_block
->
i_am_ow√r
 = 1;

834 
sm_block
->
n⁄ow√r_tokí_cou¡
 = 
TC_TOTAL_NONOWNER_TOKEN_COUNT
;

835 
sm_block
->
addr
 =áddr;

836 
	`put_blocköfo
(
addr
,
SHAREDMEM_NUMBER
,
sm_block
,
t
);

839 
block_Æloc_cou¡
++;

840 
	}
}

842 
tc_blocköfo
 * 
	$block_¥edi˘_Æloc
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
t
) {

843 
tc_blocköfo
 * 
blocköfo
;

844 
	`CHECK_CACHE_NUM
(
ˇche_numbî
);

845 
addr
 &
tc_blockaddr_mask
;

847 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
t
,29,44);

848 i‡(
blocköfo
) {

849 
	`Áèl
("block_predict_alloc shouldÇot have been called,állocálready done");

851 
blocköfo
 = 
	`block_mÆloc
(
addr
);

852 
blocköfo
->
exi°s
=0;

853 
	`put_blocköfo
(
addr
,
ˇche_numbî
,
blocköfo
,
t
);

855  
blocköfo
;

856 
	}
}

861 
	$tc_block_‰ì
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
cy˛e
)

863 
tc_blocköfo
 * 
block
;

864 
tc_blocköfo
 * 
sm_block
;

865 
	`CHECK_CACHE_NUM
(
ˇche_numbî
);

872 i‡(!
addr
Ë
	`Áèl
("addr == 0");

874 
addr
 &
tc_blockaddr_mask
;

876 #ifde‡
TC_DEBUG


877 
	`¥ötf
("block fªêcy˛e=%Œd, cache=%d,áddr=%Œx\n",
cy˛e
,
ˇche_numbî
,
addr
);

879 
block_‰ì_cou¡
++;

881 
block
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
cy˛e
,30,45);

882 i‡(!
block
) {

883 
c‹√r_ˇ£_cou¡
[23]++;

887 
sm_block
 = 
	`gë_blocköfo
(
addr
,
SHAREDMEM_NUMBER
,
cy˛e
,31,46);

888 i‡(!
sm_block
) {

889 
	`Áèl
("ˇn'àfödÅhêmem‹yÇodêblock info; cy˛e=%Œd, cache=%d,áddr=%Œx",
cy˛e
,
ˇche_numbî
,
addr
);

890 } i‡(
block
->
addr
 !
sm_block
->addr) {

891 
	`Áèl
("address mismatch");

893 
cou¡î_t
 
ª•_time
;

895 
sm_block
=
	`gë_blocköfo_modifynow
(sm_block,
cy˛e
);

896 i‡(
block
->
i_am_ow√r
) {

897 
sm_block
->
i_am_ow√r
 = 1;

898 
sm_block
->
vÆid
 = 1;

900 
sm_block
->
n⁄ow√r_tokí_cou¡
 +
block
->nonowner_token_count;

906 if(
block
->
exi°s
) {

907 
block
->
exi°s
--;

909 
c‹√r_ˇ£_cou¡
[34]++;

914 
ª•_time
 = 
cy˛e
 + 
	`rög_œt
(
ˇche_numbî
*2, 0, 0, cy˛ê- 
sim_cy˛e
);

916 
	`give_tokís
(-
block
->
n⁄ow√r_tokí_cou¡
,

917 
block
->
i_am_ow√r
?-1:0,0,
addr
,
ˇche_numbî
,
cy˛e
,0);

918 
	`give_tokís
(
block
->
n⁄ow√r_tokí_cou¡
,

919 
block
->
i_am_ow√r
?1:0,block->
vÆid
,
addr
,
SHAREDMEM_NUMBER
,
ª•_time
,2);

922 
	}
}

928 
	$tc_ac˚ss
(
md_addr_t
 
addr
, 
ˇche_numbî
,
˛u°î
, 
is_wrôe
, 
is_höt
, 
cou¡î_t
 
cy˛e
) {

929 
tc_blocköfo
 *
blocköfo
;

930 
dñay
;

931 
ﬁd_ccc_2
 = 
c‹√r_ˇ£_cou¡
[2];

932 
ﬁd_ccc_32
 = 
c‹√r_ˇ£_cou¡
[32];

933 
	`CHECK_CACHE_NUM
(
ˇche_numbî
);

935 i‡(!
addr
Ë
	`Áèl
("addr == 0");

942 
addr
 &
tc_blockaddr_mask
;

943 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
cy˛e
,
is_wrôe
?32:2,47);

945 #ifde‡
TC_DEBUG


946 
	`¥ötf
("%†ac˚s†cy˛e=%Œd, cache=%d,addr=%Œx\n",
is_wrôe
?"wrôe":"ªad",
cy˛e
,
ˇche_numbî
,
addr
);

949 if(
is_wrôe
) {

950 ++
block_wrôe_cou¡
;

952 ++
block_ªad_cou¡
;

955 i‡(!
blocköfo
) {

957 
cou¡î_t
 
futuª_cy˛e
 = 
	`gë_blocköfo_futuªexi°™˚
(
addr
,
ˇche_numbî
,
cy˛e
);

959 i‡(
futuª_cy˛e
) {

960 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
futuª_cy˛e
,
is_wrôe
?32:2,48);

961 
c‹√r_ˇ£_cou¡
[12]++;

965 i‡(!
blocköfo
) {

967 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
cy˛e
+200);

968 
c‹√r_ˇ£_cou¡
[12]++;

970 i‡(!
blocköfo
) {

972 
blocköfo
 = 
	`gë_blocköfo
(
addr
,
ˇche_numbî
,
cy˛e
+5001);

973 
c‹√r_ˇ£_cou¡
[12]++;

976 i‡(!
blocköfo
) {

978 
c‹√r_ˇ£_cou¡
[22]++;

979 
dñay
 = 0;

980 } i‡(
addr
 !
blocköfo
->addr) {

981 
	`Áèl
("address mismatch");

982 } i‡(!
is_wrôe
 && 
	`CANREAD
(
blocköfo
))

995 
dñay
 = 0;

998 
c‹√r_ˇ£_cou¡
[2] = 
ﬁd_ccc_2
;

1000 } i‡(
is_wrôe
 && 
	`CANWRITE
(
blocköfo
))

1013 
dñay
 = 0;

1016 
c‹√r_ˇ£_cou¡
[32] = 
ﬁd_ccc_32
;

1022 i‡(
is_wrôe
) {

1023 i‡(
blocköfo
->
wrôe_°¨ve_cy˛e
 == -1) {

1024 
blocköfo
->
wrôe_°¨ve_cy˛e
 = 
sim_cy˛e
 + 
STARVE_CYCLES
;

1027 i‡(
blocköfo
->
ªad_°¨ve_cy˛e
 == -1) {

1028 
blocköfo
->
ªad_°¨ve_cy˛e
 = 
sim_cy˛e
 + 
STARVE_CYCLES
;

1034 
i
;

1035 
cou¡î_t
 
¨rivÆs
[
CLUSTERS
];

1036 
	`Êood_œt
(
¨rivÆs
,
˛u°î
,
cy˛e
);

1038 
i
=-1;i<
CLUSTERS
/2;i++) {

1039 
ˇn˚Œed_tokís
=0;

1040 
cou¡î_t
 
¨rivÆ
;

1041 
tc_blocköfo
 * 
ª•⁄dî
;

1042 
¨rivÆ
 = (
i
==-1?
	`COMM_CL_TO_FE_LAT
(
˛u°î
)+
cy˛e
:
	`MIN
(
¨rivÆs
[i*2],arrivals[i*2+1]));

1043 
ª•⁄dî
 = 
	`gë_blocköfo
(
addr
,
i
,
¨rivÆ
,0,49);

1047 i‡(
i
==-1 && !
ª•⁄dî
) {

1048 
c‹√r_ˇ£_cou¡
[18]++;

1052 i‡(
ª•⁄dî
 && 
i
 !=
ˇche_numbî
) {

1053 
has_d©a
;

1056 
	#STATE_S
 (
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
 && !ª•⁄dî->
i_am_ow√r
)

	)

1057 
	#STATE_O
 ((
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
 < 
TC_TOTAL_NONOWNER_TOKEN_COUNT
Ë&&Ñe•⁄dî->
i_am_ow√r
)

	)

1058 
	#STATE_M
 ((
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
 =
TC_TOTAL_NONOWNER_TOKEN_COUNT
Ë&&Ñe•⁄dî->
i_am_ow√r
)

	)

1061 i‡(
is_wrôe
) {

1063 i‡(
STATE_S
 || 
STATE_O
 || 
STATE_M
) {

1066 
cou¡î_t
 
ª•_time
;

1068 
has_d©a
 = !
STATE_S
;

1070 
ª•⁄dî
->
wrôe_ö_pùñöe
 ||Ñe•⁄dî->
ªad_ö_pùñöe
) {

1071 i‡(!
ª•⁄dî
->
√xt
) {

1073 
c‹√r_ˇ£_cou¡
[16]++;

1076 
ª•⁄dî
 =Ñe•⁄dî->
√xt
;

1078 
¨rivÆ
 = 
ª•⁄dî
->
°©e_as_of
;

1081 i‡(
i
 == -1)

1082 
ª•_time
 = 
¨rivÆ
 + 
	`COMM_FE_TO_CL_LAT_DELAYED
(
˛u°î
,¨rivÆ-
sim_cy˛e
);

1083 i‡(
has_d©a
)

1084 
ª•_time
 = 
¨rivÆ
 +

1085 
	`˛_comm_œt
(
i
*2, 
˛u°î
, 
¨rivÆ
 - 
sim_cy˛e
, 
ˇche_block_size
+8, 
d©a_tokí
);

1087 
ª•_time
 = 
¨rivÆ
 +

1088 
	`˛_comm_œt
(
i
*2, 
˛u°î
, 
¨rivÆ
 - 
sim_cy˛e
, 8, 
b¨e_tokí
);

1090 
	`give_tokís
(-
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
,

1091 
ª•⁄dî
->
i_am_ow√r
?-1:0,0,
addr
,
i
,
¨rivÆ
,4);

1092 
ˇn˚Œed_tokís
 = 
	`give_tokís
(
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
,

1093 
ª•⁄dî
->
i_am_ow√r
?1:0,
has_d©a
,
addr
,
ˇche_numbî
,
ª•_time
,6);

1094 i‡(
ˇn˚Œed_tokís
Ë
	`give_tokís
(ˇn˚Œed_tokís,0,0,
addr
,
i
,
¨rivÆ
,8);

1095 
yõld_f‹_ex˛
++;

1103 i‡(
STATE_S
) {

1105 } i‡(
STATE_O
 || (
STATE_M
 && !
ª•⁄dî
->
modifõd
)) {

1106 
cou¡î_t
 
ª•_time
;

1109 
ª•⁄dî
->
wrôe_ö_pùñöe
 ||

1110 (
ª•⁄dî
->
ªad_ö_pùñöe
 &&

1111 !((
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
 >= 2)

1112 ||(
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
 &&Ñe•⁄dî->
i_am_ow√r
)))) {

1115 i‡(!
ª•⁄dî
->
√xt
) {

1117 
c‹√r_ˇ£_cou¡
[16]++;

1120 
ª•⁄dî
 =Ñe•⁄dî->
√xt
;

1122 
¨rivÆ
 = 
ª•⁄dî
->
°©e_as_of
;

1125 i‡(
i
 == -1)

1126 
ª•_time
 = 
¨rivÆ
 + 
	`COMM_FE_TO_CL_LAT_DELAYED
(
˛u°î
,¨rivÆ-
sim_cy˛e
);

1127 
ª•_time
 = 
¨rivÆ
 +

1128 
	`˛_comm_œt
(
i
*2, 
˛u°î
, 
¨rivÆ
 - 
sim_cy˛e
,
ˇche_block_size
+8,
d©a_tokí
 );

1130 if(
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
) {

1131 
	`give_tokís
(-1,0,0,
addr
,
i
,
¨rivÆ
,10);

1132 
ˇn˚Œed_tokís
 = 
	`give_tokís
(1,0,1,
addr
,
ˇche_numbî
,
ª•_time
,12);

1133 i‡(
ˇn˚Œed_tokís
Ë
	`give_tokís
(ˇn˚Œed_tokís,0,0,
addr
,
i
,
¨rivÆ
,14);

1134 } i‡(
ª•⁄dî
->
i_am_ow√r
) {

1135 
	`give_tokís
(0,-1,0,
addr
,
i
,
¨rivÆ
,16);

1136 
	`give_tokís
(0,1,1,
addr
,
ˇche_numbî
,
ª•_time
,18);

1138 } i‡(
STATE_M
 && 
ª•⁄dî
->
modifõd
) {

1139 
cou¡î_t
 
ª•_time
;

1141 
ª•⁄dî
->
wrôe_ö_pùñöe
 ||Ñe•⁄dî->
ªad_ö_pùñöe
) {

1142 i‡(!
ª•⁄dî
->
√xt
) {

1144 
c‹√r_ˇ£_cou¡
[16]++;

1147 
ª•⁄dî
 =Ñe•⁄dî->
√xt
;

1149 
¨rivÆ
 = 
ª•⁄dî
->
°©e_as_of
;

1152 i‡(
i
 == -1)

1153 
ª•_time
 = 
¨rivÆ
 + 
	`COMM_FE_TO_CL_LAT_DELAYED
(
˛u°î
,¨rivÆ-
sim_cy˛e
);

1154 
ª•_time
 = 
¨rivÆ
 +

1155 
	`˛_comm_œt
(
i
*2, 
˛u°î
, 
¨rivÆ
 - 
sim_cy˛e
,
ˇche_block_size
+8,
d©a_tokí
);

1157 
	`give_tokís
(-
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
,

1158 -1,0,
addr
,
i
,
¨rivÆ
,20);

1159 
ˇn˚Œed_tokís
 = 
	`give_tokís
(
ª•⁄dî
->
n⁄ow√r_tokí_cou¡
,

1160 1,1,
addr
,
ˇche_numbî
,
ª•_time
,22);

1161 i‡(
ˇn˚Œed_tokís
Ë
	`give_tokís
(ˇn˚Œed_tokís,0,0,
addr
,
i
,
¨rivÆ
,24);

1173 
cou¡î_t
 
¥e_sˇn_cy˛e
 = 
blocköfo
->
°©e_as_of
;

1176 !(
is_wrôe
?
	`CANWRITE
(
blocköfo
):
	`CANREAD
(blockinfo))){

1177 i‡(!
blocköfo
->
√xt
) {

1182 i‡(
blocköfo
->
°©e_as_of
 - 
cy˛e
 < 100) {

1183 
blocköfo
 = 
	`gë_blocköfo_modifynow
(blocköfo,
cy˛e
 + 100);

1186 i‡(
is_wrôe
) {

1187 
blocköfo
->
i_am_ow√r
 = 1;

1188 
blocköfo
->
n⁄ow√r_tokí_cou¡
 = 
TC_TOTAL_NONOWNER_TOKEN_COUNT
;

1189 
blocköfo
->
vÆid
=1;

1190 
c‹√r_ˇ£_cou¡
[9]++;

1192 i‡(!
blocköfo
->
vÆid
) {

1193 
blocköfo
->
vÆid
 = 1;

1194 
c‹√r_ˇ£_cou¡
[10]++;

1196 
blocköfo
->
n⁄ow√r_tokí_cou¡
 = 1;

1197 
c‹√r_ˇ£_cou¡
[11]++;

1201 
blocköfo
=blocköfo->
√xt
;

1205 
dñay
 = 
blocköfo
->
°©e_as_of
 - 
cy˛e
;

1207 i‡(
dñay
 < 0) {

1208 
	`Áèl
("attemptedÅoÑeturnáÇegative delay. "

1210 
blocköfo
->
°©e_as_of
,
cy˛e
,
¥e_sˇn_cy˛e
);

1214 i‡(
is_wrôe
) {

1216 i‡(!
is_höt
)

1217 
blocköfo
->
modifõd
 = 1;

1223 
tŸÆ_dñays_added
 +
dñay
;

1224 
	`°©_add_ßm∂e
(
tc_dñay_di°
, 
dñay
);

1225 
	`°©_add_ßm∂e
(
tc_tw¥ox_di°
, 
cy˛e
-
sim_cy˛e
);

1227 i‡(
dñay
 == 0)

1228 
block_ªady_cou¡
++;

1230  
dñay
;

1231 
	}
}

1234 
	$¨bôî_h™dÀ_a˘iv©i⁄_ªque°
(
‰om_˛u°î
, 
md_addr_t
 
addr
, 
tc_¨bôî
 * 
¨bôî
) {

1235 i‡(!
¨bôî
->
hód
) {

1236 
¨bôî
->
hód
 = 
	`mÆloc
((
tc_¨bôî_íåy
));

1237 i‡(!
¨bôî
->
hód
Ë
	`Áèl
("out of memory");

1238 
¨bôî
->
hód
->
addr
 =áddr;

1239 
¨bôî
->
hód
->
√xt
 = 
NULL
;

1243 
tc_¨bôî_íåy
 * 
¨bôî_li°_pos
 = 
¨bôî
->
hód
;

1244 
tc_¨bôî_íåy
 * 
¨bôî_íåy
 = 
	`mÆloc
((tc_arbiter_entry));

1245 i‡(!
¨bôî_íåy
Ë
	`Áèl
("out of memory");

1246 
¨bôî_íåy
->
addr
 =áddr;

1247 
¨bôî_íåy
->
√xt
 = 
NULL
;

1248 
¨bôî_li°_pos
->
√xt
)

1249 
¨bôî_li°_pos
 =árbôî_li°_pos->
√xt
;

1250 
¨bôî_li°_pos
->
√xt
 = 
¨bôî_íåy
;

1252 
	}
}

1254 
	$¨bôî_h™dÀ_dó˘iv©i⁄
(
tc_¨bôî
 * 
¨bôî
) {

1255 i‡(!
¨bôî
->
hód
);

1256 
tc_¨bôî_íåy
 * 
ﬁd_hód
 = 
¨bôî
->
hód
;

1257 
¨bôî
->
hód
 =árbôî->hód->
√xt
;

1261 
	`‰ì
(
ﬁd_hód
);

1263 i‡(
¨bôî
->
hód
) {

1266 
	}
}

	@tokencoherence.h

39 
	#TC_TOTAL_NONOWNER_TOKEN_COUNT
 (
CLUSTERS
)

	)

42 
	#STARVE_CYCLES
 100

	)

44 íum {
	msh¨ed
,
	mex˛usive
,
	m≥rsi°ít
} 
	ttc_ªque°_ty≥
;

48 
	mhas_d©a
;

49 
	mhas_ow√r_tokí
;

50 
	mn⁄ow√r_tokí_cou¡
;

51 
md_addr_t
 
	maddr
;

52 } 
	ttc_mesßgëokí_ack
;

55 
	m‰om
;

56 
tc_ªque°_ty≥
 
	mty≥
;

57 } 
	ttc_mesßgëokí_ªq
;

61 
	stc_blocköfo_°ru˘


63 
tc_blocköfo_°ru˘
 * 
	m√xt
;

64 
	mexi°s
;

65 
	mvÆid
;

66 
	mi_am_ow√r
;

67 
	mn⁄ow√r_tokí_cou¡
;

68 
md_addr_t
 
	maddr
;

70 
cou¡î_t
 
	mªad_°¨ve_cy˛e
;

71 
cou¡î_t
 
	mwrôe_°¨ve_cy˛e
;

73 
	mªad_ö_pùñöe
;

74 
	mwrôe_ö_pùñöe
;

75 
	mmodifõd
;

76 
cou¡î_t
 
	m°©e_as_of
;

77 } 
	ttc_blocköfo
;

79 
	shashèbÀ_íåy_°ru˘


81 
hashèbÀ_íåy_°ru˘
 * 
	m√xt
;

82 
md_addr_t
 
	maddr
;

83 
	mˇche_numbî
;

84 
tc_blocköfo
 * 
	mblocköfo_hód
;

85 } 
	thashèbÀ_íåy
;

89 
	stc_¨bôî_íåy_°ru˘


91 
md_addr_t
 
	maddr
;

92 
tc_¨bôî_íåy_°ru˘
 * 
	m√xt
;

93 } 
	ttc_¨bôî_íåy
;

97 
tc_¨bôî_íåy
 * 
	mhód
;

98 } 
	ttc_¨bôî
;

106 
tc_öô
(
num_ˇches
, 
num_blocks
, 
block_size
);

108 
tc_ªg_°©s
(
°©_sdb_t
 *
sdb
);

111 
tc_ac˚ss
(
md_addr_t
 
addr
, 
ˇche_numbî
,
˛u°î
, 
is_wrôe
, 
is_höt
, 
cou¡î_t
 
cy˛e
);

114 
tc_commô_¥edi˘
(
md_addr_t
 
addr
,
ˇche_numbî
, 
is_wrôe
, 
cou¡î_t
 
cy˛e
, cou¡î_à
issue_cy˛e
);

115 
tc_commô_ªÆ
(
md_addr_t
 
addr
,
ˇche_numbî
, 
is_wrôe
, 
cou¡î_t
 
¥edi˘ed_cy˛e
, cou¡î_à
ªÆ_cy˛e
);

118 
tc_block_Æloc
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
cy˛e
);

121 
tc_block_‰ì
(
md_addr_t
 
addr
, 
ˇche_numbî
, 
cou¡î_t
 
cy˛e
);

	@trace.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
FILE
 *
Â
;

6 
i
, 
numñts
, 
∫oi£
, 
bnoi£
, 
˙oi£
, 
un°
, 
°
, 
ˇlib
, 
ªfc
, 
ª‰
, 
ªfb
;

7 
ötb
, 
ötc
, 
öå
, 
j
;

8 
öãrvÆ
;

9 
cyc
[200002],
ªf
[200002],
br
[200002];

11 
	`Ârötf
(
°dîr
,"Starting\n");

12 
Â
=
	`f›í
("tr1","r");

13 
	`fsˇnf
(
Â
,"%ld",&
numñts
);

14 
i
=0;i<
numñts
;i++) {

15 
	`fsˇnf
(
Â
,"%d %d %d",&
cyc
[
i
],&
ªf
[i],&
br
[i]);

17 
	`Ârötf
(
°dîr
,"Read values\n");

18 
öãrvÆ
=1; i¡îvÆ < 
numñts
; interval=interval*2) {

19 
∫oi£
 = 
öãrvÆ
*500;

20 
bnoi£
 = 
öãrvÆ
*200;

21 
˙oi£
 = 15;

22 
un°
=0;

23 
°
=0;

24 
ˇlib
=1;

25 
ªfc
=0;

26 
ª‰
=0;

27 
ªfb
=0;

28 
j
=0;j<
öãrvÆ
;j++) {

29 
ªfc
 +
cyc
[
j
];

30 
ª‰
 +
ªf
[
j
];

31 
ªfb
 +
br
[
j
];

33 
i
=
j
;

34 (
i
+2*
öãrvÆ
)<
numñts
) {

35 
ötc
=0;

36 
öå
=0;

37 
ötb
=0;

38 
j
=0;j<
öãrvÆ
;j++,
i
++) {

39 
ötc
 +
cyc
[
i
];

40 
öå
 +
ªf
[
i
];

41 
ötb
 +
br
[
i
];

43 i‡((
	`œbs
(
ötb
-
ªfb
Ë> 
bnoi£
Ë|| (œbs(
öå
-
ª‰
Ë> 
∫oi£
) ) {

44 
un°
++;

45 
ªfc
=0;

46 
ª‰
=0;

47 
ªfb
=0;

48 
ˇlib
++;

49 
j
=0;j<
öãrvÆ
;j++,
i
++) {

50 
ªfc
 +
cyc
[
i
];

51 
ª‰
 +
ªf
[
i
];

52 
ªfb
 +
br
[
i
];

56 
°
++;

59 
	`Ârötf
(
°dîr
,"I¡îvÆ size: %ldK, ",
öãrvÆ
*10);

60 
	`Ârötf
(
°dîr
,"CÆib %d Un°abÀ %d SèbÀ %d, SèbÀÖî¯%d\n",
ˇlib
, 
un°
, 
°
, (st*100)/(st+unst+calib));

62 
	}
}

	@util.c

1 
	~"utû.h
"

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	$eq
(
x
, 
y
)

7  (
	`Ábs
(
x
-
y
Ë< 
DELTA
);

8 
	}
}

10 
	$À
(
x
, 
y
)

12  ((
x
 < 
y
Ë|| 
	`eq
(x,y));

13 
	}
}

15 
	$ge
(
x
, 
y
)

17  ((
x
 > 
y
Ë|| 
	`eq
(x,y));

18 
	}
}

	@util.h

1 #i‚de‡
__UTIL_H


2 
	#__UTIL_H


	)

4 
	~<m©h.h
>

6 
	#MAX
(
x
,
y
Ë(((x)>(y))?(x):(y))

	)

7 
	#MIN
(
x
,
y
Ë(((x)<(y))?(x):(y))

	)

8 
	#DELTA
 1.0e-10

	)

10 
eq
(
x
, 
y
);

11 
À
(
x
, 
y
);

12 
ge
(
x
, 
y
);

13 
Áèl
 (*
s
);

	@version.h

94 #i‡
deföed
(
TARGET_PISA
)

95 
	#VER_TARGET
 "PISA"

	)

96 #ñi‡
deföed
(
TARGET_ALPHA
)

97 
	#VER_TARGET
 "AÕha"

	)

99 #îr‹ 
C™nŸ
 
decode
 
Sim∂eSˇœr
 
èrgë
...

102 
	#VER_MAJOR
 3

	)

103 
	#VER_MINOR
 0

	)

105 
	#VER_UPDATE
 "Novembî, 2000"

	)

	@wattch-interact.c

1 
	~<m©h.h
>

2 
	~<°dio.h
>

3 
	~"powî.h
"

9 
	gruu_decode_width
;

10 
	gruu_issue_width
;

11 
	gruu_commô_width
;

12 
	gRUU_size
;

13 
	gLSQ_size
;

14 
	gd©a_width
;

15 
	gªs_ülu
;

16 
	gªs_ÂÆu
;

17 
	gªs_memp‹t
;

18 
	gvîbo£
;

19 
	gª«me_ac˚ss
, 
	gwödow_ac˚ss
, 
	gb¥ed_ac˚ss
, 
	glsq_ac˚ss
, 
	gªgfûe_ac˚ss
;

20 
	giˇche_ac˚ss
, 
	gdˇche_ac˚ss
, 
	gdˇche2_ac˚ss
, 
	gÆu_ac˚ss
, 
	gªsu…bus_ac˚ss
;

21 
	gwödow_¥eg_ac˚ss
, 
	gwödow_£À˘i⁄_ac˚ss
;

22 
	glsq_wakeup_ac˚ss
, 
	glsq_¥eg_ac˚ss
, 
	gülu_ac˚ss
, 
	gÁlu_ac˚ss
;

23 
	gwödow_wakeup_ac˚ss
, 
	glsq_°‹e_d©a_ac˚ss
, 
	glsq_lﬂd_d©a_ac˚ss
;

24 
	gwödow_tŸÆ_p›_cou¡_cy˛e
, 
	gwödow_num_p›_cou¡_cy˛e
;

25 
	glsq_tŸÆ_p›_cou¡_cy˛e
, 
	glsq_num_p›_cou¡_cy˛e
;

26 
	gªgfûe_tŸÆ_p›_cou¡_cy˛e
, 
	gªgfûe_num_p›_cou¡_cy˛e
;

27 
	gªsu…bus_num_p›_cou¡_cy˛e
, 
	gªsu…bus_tŸÆ_p›_cou¡_cy˛e
;

29 
	gøs_size
;

31 
ˇche_t
 *
	gˇche_dl1
;

32 
ˇche_t
 *
	gˇche_û1
;

33 
ˇche_t
 *
	gˇche_dl2
;

34 
ˇche_t
 *
	gdéb
;

35 
ˇche_t
 *
	gôlb
;

37 
	gbtb_c⁄fig
[2] =

39 
	gtwﬁev_c⁄fig
[4] =

40 { 1, 1024, 8, 
FALSE
};

41 
	gbimod_c⁄fig
[1] =

43 
	gcomb_c⁄fig
[1] =

48 
	gnum_ªgs
;

50 
sim∂e_¨øy_decodî_powî
();

51 
sim∂e_¨øy_w‹dlöe_powî
();

52 
sim∂e_¨øy_bôlöe_powî
();

54 
¨øy_decodî_powî
();

55 
¨øy_w‹dlöe_powî
();

56 
¨øy_bôlöe_powî
();

58 
ˇm_¨øy
();

59 
ˇm_ègdrive
();

60 
ˇm_ègm©ch
();

62 
£n£amp_powî
();

64 
ˇlcuœã_time
(
time_ªsu…_ty≥
 *
ªsu…
,
time_∑ømëî_ty≥
 *
∑ømëîs
);

66 
ouçut_d©a
(
time_ªsu…_ty≥
 *
ªsu…
,
time_∑ømëî_ty≥
 *
∑ømëîs
);

69 
	$maö
()

71 
¥ede˛ígth
, 
w‹dlöñígth
, 
bôlöñígth
;

73 
ªgfûe_powî
, 
ªgfûe_decodî
, 
ªgfûe_w‹dlöe
, 
ªgfûe_w‹dlöe16
, 
ªgfûe_w‹dlöe33
, 
ªgfûe_bôlöe
;

75 
sˇÀ_Á˘‹
;

76 
d©a_width
;

77 
Ω‹ts
, 
wp‹ts
;

79 
swôch_¨g
;

81 
	`¥ötf
("1. Simple Register File\n");

82 
	`¥ötf
("2. Simple Cache Structure\n");

83 
	`¥ötf
("3. Simple CAM Structure\n");

84 
	`¥ötf
("4. Complex Cache (Auto-Sized)\n");

86 
	`sˇnf
("%d",&
swôch_¨g
);

88 
	`¥ötf
("noteÅheseáre MAXÖowers (assuming full switching)\n");

90 
swôch_¨g
){

93 
	`¥ötf
("Enter Reg File Params:\n");

94 
	`¥ötf
("Number of Registers: ");

95 
	`sˇnf
("%d",&
num_ªgs
);

96 
	`¥ötf
("Data Width: ");

97 
	`sˇnf
("%d",&
d©a_width
);

98 
	`¥ötf
("Number of Read Ports: ");

99 
	`sˇnf
("%d",&
Ω‹ts
);

100 
	`¥ötf
("Number of Write Ports: ");

101 
	`sˇnf
("%d",&
wp‹ts
);

103 
	`¥ötf
("%d-íåyx%d-width,%d-rdp‹t,%d-wΩ‹t: %‡(W)\n",
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,
	`sim∂e_¨øy_powî
(num_regs,data_width,rports,wports,0));

104 
	`¥ötf
(" decode_powî (W): %f\n",
	`sim∂e_¨øy_decodî_powî
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,0));

105 
	`¥ötf
(" w‹dlöe_powî (W): %f\n",
	`sim∂e_¨øy_w‹dlöe_powî
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,0));

106 
	`¥ötf
(" bôlöe_powî (W): %f\n",
	`sim∂e_¨øy_bôlöe_powî
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,0));

112 
	`¥ötf
("Enter Cache Params:\n");

113 
	`¥ötf
("Size of cache: ");

114 
	`sˇnf
("%d",&
num_ªgs
);

115 
	`¥ötf
("Data Width: ");

116 
	`sˇnf
("%d",&
d©a_width
);

117 
	`¥ötf
("Number of Read Ports: ");

118 
	`sˇnf
("%d",&
Ω‹ts
);

119 
	`¥ötf
("Number of Write Ports: ");

120 
	`sˇnf
("%d",&
wp‹ts
);

122 
	`¥ötf
("%d-íåyx%d-width,%d-rdp‹t,%d-wΩ‹t: %‡(W)\n",
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,
	`sim∂e_¨øy_powî
(num_regs,data_width,rports,wports,1));

123 
	`¥ötf
(" decode_powî (W): %f\n",
	`sim∂e_¨øy_decodî_powî
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,1));

124 
	`¥ötf
(" w‹dlöe_powî (W): %f\n",
	`sim∂e_¨øy_w‹dlöe_powî
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,1));

125 
	`¥ötf
(" bôlöe_powî (W): %f\n",
	`sim∂e_¨øy_bôlöe_powî
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,1));

131 
	`¥ötf
("Enter CAM Params:\n");

132 
	`¥ötf
("Entries in CAM: ");

133 
	`sˇnf
("%d",&
num_ªgs
);

134 
	`¥ötf
("Tag Width: ");

135 
	`sˇnf
("%d",&
d©a_width
);

136 
	`¥ötf
("Number of Read Ports: ");

137 
	`sˇnf
("%d",&
Ω‹ts
);

138 
	`¥ötf
("Number of Write Ports: ");

139 
	`sˇnf
("%d",&
wp‹ts
);

141 
	`¥ötf
("%d-íåyx%d-ègwidth,%d-rdp‹t,%d-wΩ‹t: %‡(W)\n",
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
,
	`ˇm_¨øy
(num_regs,data_width,rports,wports));

142 
	`¥ötf
("Åagdrive_powî (W): %f\n",
	`ˇm_ègdrive
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
));

143 
	`¥ötf
("Åagm©ch_powî (W): %f\n",
	`ˇm_ègm©ch
(
num_ªgs
,
d©a_width
,
Ω‹ts
,
wp‹ts
));

149 
n£ts
, 
bsize
, 
assoc
,
ªs_memp‹t
, 
ègsize
;

150 
ndwl
, 
ndbl
, 
n•d
, 
¡wl
, 
¡bl
, 
¡•d
, 
c
,
b
,
a
,
ˇche
, 
rowsb
, 
cﬁsb
, 
åowsb
, 
tcﬁsb
;

151 
ˇche_decodî
, 
ˇche_w‹dlöe
, 
ˇche_bôlöe
,

152 
ˇche_£n£amp
, 
ˇche_èg¨øy
, 
tŸÆ_ˇche_powî
;

153 
time_ªsu…_ty≥
 
time_ªsu…
;

154 
time_∑ømëî_ty≥
 
time_∑ømëîs
;

155 
va_size
 = 48;

157 
	`¥ötf
("Enter Cache Params:\n");

158 
	`¥ötf
("Number of Sets in cache: ");

159 
	`sˇnf
("%d",&
n£ts
);

160 
	`¥ötf
("Block Size (bytes): ");

161 
	`sˇnf
("%d",&
bsize
);

162 
	`¥ötf
("Associativity: ");

163 
	`sˇnf
("%d",&
assoc
);

164 
	`¥ötf
("Number of Memory Ports: ");

165 
	`sˇnf
("%d",&
ªs_memp‹t
);

167 
	`¥ötf
("noteÅagarray size isÉstimated based onássuming 48-bit virtualáddresses\n");

169 
ˇche
 = 1;

171 
time_∑ømëîs
.
ˇche_size
 = 
n£ts
 * 
bsize
 * 
assoc
;

172 
time_∑ømëîs
.
block_size
 = 
bsize
;

173 
time_∑ømëîs
.
assocütivôy
 = 
assoc
;

174 
time_∑ømëîs
.
numbî_of_£ts
 = 
n£ts
;

176 
	`ˇlcuœã_time
(&
time_ªsu…
,&
time_∑ømëîs
);

177 
	`ouçut_d©a
(&
time_ªsu…
,&
time_∑ømëîs
);

179 
ndwl
=
time_ªsu…
.
be°_Ndwl
;

180 
ndbl
=
time_ªsu…
.
be°_Ndbl
;

181 
n•d
=
time_ªsu…
.
be°_N•d
;

182 
¡wl
=
time_ªsu…
.
be°_Ntwl
;

183 
¡bl
=
time_ªsu…
.
be°_Ntbl
;

184 
¡•d
=
time_ªsu…
.
be°_Nt•d
;

185 
c
 = 
time_∑ømëîs
.
ˇche_size
;

186 
b
 = 
time_∑ømëîs
.
block_size
;

187 
a
 = 
time_∑ømëîs
.
assocütivôy
;

189 
rowsb
 = 
c
/(8*
b
*
a
*
ndbl
*
n•d
);

190 
cﬁsb
 = 8*
b
*
a
*
n•d
/
ndwl
;

192 
ègsize
 = 
va_size
 - (()
	`logtwo
(
n£ts
Ë+ (Óogtwo(
bsize
));

193 
åowsb
 = 
c
/(8*
b
*
a
*
¡bl
*
¡•d
);

194 
tcﬁsb
 = 
a
 * (
ègsize
 + 1 + 6Ë* 
¡•d
/
¡wl
;

196 
¥ede˛ígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

197 
w‹dlöñígth
 = 
cﬁsb
 * (
RegCñlWidth
 + 
BôlöeS∑cög
);

198 
bôlöñígth
 = 
rowsb
 * (
RegCñlHeight
 + 
W‹dlöeS∑cög
);

200 
ˇche_decodî
 = 
ªs_memp‹t
*
ndwl
*
ndbl
*
	`¨øy_decodî_powî
(
rowsb
,
cﬁsb
,
¥ede˛ígth
,1,1,
ˇche
);

201 
ˇche_w‹dlöe
 = 
ªs_memp‹t
*
ndwl
*
ndbl
*
	`¨øy_w‹dlöe_powî
(
rowsb
,
cﬁsb
,
w‹dlöñígth
,1,1,
ˇche
);

202 
ˇche_bôlöe
 = 
ªs_memp‹t
*
ndwl
*
ndbl
*
	`¨øy_bôlöe_powî
(
rowsb
,
cﬁsb
,
bôlöñígth
,1,1,
ˇche
);

203 
ˇche_£n£amp
 = 
ªs_memp‹t
*
ndwl
*
ndbl
*
	`£n£amp_powî
(
cﬁsb
);

204 
ˇche_èg¨øy
 = 
ªs_memp‹t
*
¡wl
*
¡bl
*(
	`sim∂e_¨øy_powî
(
åowsb
,
tcﬁsb
,1,1,
ˇche
));

206 
tŸÆ_ˇche_powî
 = 
ˇche_decodî
 + 
ˇche_w‹dlöe
 + 
ˇche_bôlöe
 + 
ˇche_£n£amp
 + 
ˇche_èg¨øy
;

208 
	`Ârötf
(
°dîr
,"%d KB %d-way cachê(%d-byã block size):\n",
c
,
a
,
b
);

209 
	`Ârötf
(
°dîr
,"ndw»=%d,Çdb»=%d,Ç•d =%d\n",
ndwl
,
ndbl
,
n•d
);

210 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
ndwl
*
ndbl
,
rowsb
,
cﬁsb
);

211 
	`Ârötf
(
°dîr
,"ègsizê=%d\n",
ègsize
);

212 
	`Ârötf
(
°dîr
,"\¬tw»=%d,Çtb»=%d,Çt•d =%d\n",
¡wl
,
¡bl
,
¡•d
);

213 
	`Ârötf
(
°dîr
,"%d së†o‡%dÑow†x %d cﬁs\n",
¡wl
*
¡bl
,
åowsb
,
tcﬁsb
);

215 
	`¥ötf
("TŸÆ Powî (W): %f\n",
tŸÆ_ˇche_powî
);

216 
	`¥ötf
(" decode_powî (W): %f\n",
ˇche_decodî
);

217 
	`¥ötf
(" w‹dlöe_powî (W): %f\n",
ˇche_w‹dlöe
);

218 
	`¥ötf
(" bôlöe_powî (W): %f\n",
ˇche_bôlöe
);

219 
	`¥ötf
(" sí£amp_powî (W): %f\n",
ˇche_£n£amp
);

220 
	`¥ötf
("Åag¨øy_powî (W): %f\n",
ˇche_èg¨øy
);

228 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_BSD


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

54 
	#TCP_COOKIE_TRANSACTIONS
 15

	)

55 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

56 
	#TCP_THIN_DUPACK
 17

	)

57 
	#TCP_USER_TIMEOUT
 18

	)

58 
	#TCP_REPAIR
 19

	)

59 
	#TCP_REPAIR_QUEUE
 20

	)

60 
	#TCP_QUEUE_SEQ
 21

	)

61 
	#TCP_REPAIR_OPTIONS
 22

	)

62 
	#TCP_FASTOPEN
 23

	)

63 
	#TCP_TIMESTAMP
 24

	)

65 #ifde‡
__USE_MISC


66 
	~<sys/ty≥s.h
>

67 
	~<sys/sockë.h
>

69 
u_öt32_t
 
	tt˝_£q
;

74 
	st˝hdr


76 
__exãnsi⁄__
 union

80 
u_öt16_t
 
	mth_•‹t
;

81 
u_öt16_t
 
	mth_dp‹t
;

82 
t˝_£q
 
	mth_£q
;

83 
t˝_£q
 
	mth_ack
;

84 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


85 
u_öt8_t
 
	mth_x2
:4;

86 
u_öt8_t
 
	mth_off
:4;

88 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


89 
u_öt8_t
 
	mth_off
:4;

90 
u_öt8_t
 
	mth_x2
:4;

92 
u_öt8_t
 
	mth_Êags
;

93 
	#TH_FIN
 0x01

	)

94 
	#TH_SYN
 0x02

	)

95 
	#TH_RST
 0x04

	)

96 
	#TH_PUSH
 0x08

	)

97 
	#TH_ACK
 0x10

	)

98 
	#TH_URG
 0x20

	)

99 
u_öt16_t
 
	mth_wö
;

100 
u_öt16_t
 
	mth_sum
;

101 
u_öt16_t
 
	mth_uΩ
;

105 
u_öt16_t
 
	msour˚
;

106 
u_öt16_t
 
	mde°
;

107 
u_öt32_t
 
	m£q
;

108 
u_öt32_t
 
	mack_£q
;

109 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mdoff
:4;

112 
u_öt16_t
 
	mfö
:1;

113 
u_öt16_t
 
	msyn
:1;

114 
u_öt16_t
 
	mr°
:1;

115 
u_öt16_t
 
	mpsh
:1;

116 
u_öt16_t
 
	mack
:1;

117 
u_öt16_t
 
	murg
:1;

118 
u_öt16_t
 
	mªs2
:2;

119 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


120 
u_öt16_t
 
	mdoff
:4;

121 
u_öt16_t
 
	mªs1
:4;

122 
u_öt16_t
 
	mªs2
:2;

123 
u_öt16_t
 
	murg
:1;

124 
u_öt16_t
 
	mack
:1;

125 
u_öt16_t
 
	mpsh
:1;

126 
u_öt16_t
 
	mr°
:1;

127 
u_öt16_t
 
	msyn
:1;

128 
u_öt16_t
 
	mfö
:1;

132 
u_öt16_t
 
	mwödow
;

133 
u_öt16_t
 
	mcheck
;

134 
u_öt16_t
 
	murg_±r
;

141 
	mTCP_ESTABLISHED
 = 1,

142 
	mTCP_SYN_SENT
,

143 
	mTCP_SYN_RECV
,

144 
	mTCP_FIN_WAIT1
,

145 
	mTCP_FIN_WAIT2
,

146 
	mTCP_TIME_WAIT
,

147 
	mTCP_CLOSE
,

148 
	mTCP_CLOSE_WAIT
,

149 
	mTCP_LAST_ACK
,

150 
	mTCP_LISTEN
,

151 
	mTCP_CLOSING


154 
	#TCPOPT_EOL
 0

	)

155 
	#TCPOPT_NOP
 1

	)

156 
	#TCPOPT_MAXSEG
 2

	)

157 
	#TCPOLEN_MAXSEG
 4

	)

158 
	#TCPOPT_WINDOW
 3

	)

159 
	#TCPOLEN_WINDOW
 3

	)

160 
	#TCPOPT_SACK_PERMITTED
 4

	)

161 
	#TCPOLEN_SACK_PERMITTED
 2

	)

162 
	#TCPOPT_SACK
 5

	)

163 
	#TCPOPT_TIMESTAMP
 8

	)

164 
	#TCPOLEN_TIMESTAMP
 10

	)

165 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

167 
	#TCPOPT_TSTAMP_HDR
 \

168 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

176 
	#TCP_MSS
 512

	)

178 
	#TCP_MAXWIN
 65535

	)

180 
	#TCP_MAX_WINSHIFT
 14

	)

182 
	#SOL_TCP
 6

	)

185 
	#TCPI_OPT_TIMESTAMPS
 1

	)

186 
	#TCPI_OPT_SACK
 2

	)

187 
	#TCPI_OPT_WSCALE
 4

	)

188 
	#TCPI_OPT_ECN
 8

	)

189 
	#TCPI_OPT_ECN_SEEN
 16

	)

190 
	#TCPI_OPT_SYN_DATA
 32

	)

193 
	et˝_ˇ_°©e


195 
	mTCP_CA_O≥n
 = 0,

196 
	mTCP_CA_Dis‹dî
 = 1,

197 
	mTCP_CA_CWR
 = 2,

198 
	mTCP_CA_Recovîy
 = 3,

199 
	mTCP_CA_Loss
 = 4

202 
	st˝_öfo


204 
u_öt8_t
 
	mt˝i_°©e
;

205 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

206 
u_öt8_t
 
	mt˝i_ªå™smôs
;

207 
u_öt8_t
 
	mt˝i_¥obes
;

208 
u_öt8_t
 
	mt˝i_backoff
;

209 
u_öt8_t
 
	mt˝i_›ti⁄s
;

210 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

212 
u_öt32_t
 
	mt˝i_πo
;

213 
u_öt32_t
 
	mt˝i_©o
;

214 
u_öt32_t
 
	mt˝i_¢d_mss
;

215 
u_öt32_t
 
	mt˝i_rcv_mss
;

217 
u_öt32_t
 
	mt˝i_u«cked
;

218 
u_öt32_t
 
	mt˝i_ßcked
;

219 
u_öt32_t
 
	mt˝i_lo°
;

220 
u_öt32_t
 
	mt˝i_ªå™s
;

221 
u_öt32_t
 
	mt˝i_Áckës
;

224 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

225 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

226 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

227 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

230 
u_öt32_t
 
	mt˝i_pmtu
;

231 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

232 
u_öt32_t
 
	mt˝i_πt
;

233 
u_öt32_t
 
	mt˝i_πtv¨
;

234 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

235 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

236 
u_öt32_t
 
	mt˝i_advmss
;

237 
u_öt32_t
 
	mt˝i_ª‹dîög
;

239 
u_öt32_t
 
	mt˝i_rcv_πt
;

240 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

242 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

247 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

249 
	st˝_md5sig


251 
sockaddr_°‹age
 
	mt˝m_addr
;

252 
u_öt16_t
 
	m__t˝m_∑d1
;

253 
u_öt16_t
 
	mt˝m_keyÀn
;

254 
u_öt32_t
 
	m__t˝m_∑d2
;

255 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

259 
	st˝_ª∑ú_›t


261 
u_öt32_t
 
	m›t_code
;

262 
u_öt32_t
 
	m›t_vÆ
;

268 
	mTCP_NO_QUEUE
,

269 
	mTCP_RECV_QUEUE
,

270 
	mTCP_SEND_QUEUE
,

271 
	mTCP_QUEUES_NR
,

275 
	#TCP_COOKIE_MIN
 8

	)

276 
	#TCP_COOKIE_MAX
 16

	)

277 
	#TCP_COOKIE_PAIR_SIZE
 (2*
TCP_COOKIE_MAX
)

	)

280 
	#TCP_COOKIE_IN_ALWAYS
 (1 << 0Ë

	)

281 
	#TCP_COOKIE_OUT_NEVER
 (1 << 1Ë

	)

285 
	#TCP_S_DATA_IN
 (1 << 2Ë

	)

286 
	#TCP_S_DATA_OUT
 (1 << 3Ë

	)

288 
	#TCP_MSS_DEFAULT
 536U

	)

289 
	#TCP_MSS_DESIRED
 1220U

	)

291 
	st˝_cookõ_å™ß˘i⁄s


293 
u_öt16_t
 
	mt˝˘_Êags
;

294 
u_öt8_t
 
	m__t˝˘_∑d1
;

295 
u_öt8_t
 
	mt˝˘_cookõ_desúed
;

296 
u_öt16_t
 
	mt˝˘_s_d©a_desúed
;

297 
u_öt16_t
 
	mt˝˘_u£d
;

298 
u_öt8_t
 
	mt˝˘_vÆue
[
TCP_MSS_DEFAULT
];

	@/usr/include/netinet/udp.h

47 #i‚de‡
__NETINET_UDP_H


48 
	#__NETINET_UDP_H
 1

	)

50 
	~<„©uªs.h
>

51 
	~<sys/ty≥s.h
>

56 
	sudphdr


58 
__exãnsi⁄__
 union

62 
u_öt16_t
 
	muh_•‹t
;

63 
u_öt16_t
 
	muh_dp‹t
;

64 
u_öt16_t
 
	muh_uÀn
;

65 
u_öt16_t
 
	muh_sum
;

69 
u_öt16_t
 
	msour˚
;

70 
u_öt16_t
 
	mde°
;

71 
u_öt16_t
 
	mÀn
;

72 
u_öt16_t
 
	mcheck
;

78 
	#UDP_CORK
 1

	)

79 
	#UDP_ENCAP
 100

	)

83 
	#UDP_ENCAP_ESPINUDP_NON_IKE
 1

	)

84 
	#UDP_ENCAP_ESPINUDP
 2

	)

85 
	#UDP_ENCAP_L2TPINUDP
 3

	)

87 
	#SOL_UDP
 17

	)

	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

46 
__BEGIN_NAMESPACE_STD


48 
__jmp_buf_èg
 
	tjmp_buf
[1];

52 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
__END_NAMESPACE_STD


59 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

63 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

67 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

70 
__BEGIN_NAMESPACE_STD


74 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

77 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


83 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

84 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 #ifdef 
__USE_POSIX


92 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

96 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

102 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

103 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

108 #i‡
__USE_FORTIFY_LEVEL
 > 0

109 
	~<bôs/£tjmp2.h
>

112 
__END_DECLS


	@/usr/include/sgtty.h

18 #i‚def 
_SGTTY_H


19 
	#_SGTTY_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/io˘l.h
>

27 
	gsgâyb
;

29 
__BEGIN_DECLS


32 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

35 
	$°ty
 (
__fd
, c⁄° 
sgâyb
 *
__∑øms
Ë
__THROW
;

38 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/sys/dir.h

18 #i‚def 
_SYS_DIR_H


19 
	#_SYS_DIR_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<dúít.h
>

25 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/file.h

18 #i‚def 
_SYS_FILE_H


19 
	#_SYS_FILE_H
 1

	)

21 
	~<„©uªs.h
>

23 #i‚def 
_FCNTL_H


24 
	~<f˙é.h
>

27 
	g__BEGIN_DECLS


32 #i‚de‡
L_SET


33 
	#L_SET
 0

	)

34 
	#L_INCR
 1

	)

35 
	#L_XTND
 2

	)

40 
	#LOCK_SH
 1

	)

41 
	#LOCK_EX
 2

	)

42 
	#LOCK_UN
 8

	)

45 
	#LOCK_NB
 4

	)

50 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

53 
__END_DECLS


	@/usr/include/sys/ioctl.h

18 #i‚def 
_SYS_IOCTL_H


19 
	#_SYS_IOCTL_H
 1

	)

21 
	~<„©uªs.h
>

23 
	g__BEGIN_DECLS


26 
	~<bôs/io˘ls.h
>

29 
	~<bôs/io˘l-ty≥s.h
>

36 
	~<sys/âydeÁu…s.h
>

41 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

43 
__END_DECLS


	@/usr/include/sys/mount.h

21 #i‚de‡
_SYS_MOUNT_H


22 
	#_SYS_MOUNT_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<sys/io˘l.h
>

27 
	#BLOCK_SIZE
 1024

	)

28 
	#BLOCK_SIZE_BITS
 10

	)

35 
	mMS_RDONLY
 = 1,

36 
	#MS_RDONLY
 
MS_RDONLY


	)

37 
	mMS_NOSUID
 = 2,

38 
	#MS_NOSUID
 
MS_NOSUID


	)

39 
	mMS_NODEV
 = 4,

40 
	#MS_NODEV
 
MS_NODEV


	)

41 
	mMS_NOEXEC
 = 8,

42 
	#MS_NOEXEC
 
MS_NOEXEC


	)

43 
	mMS_SYNCHRONOUS
 = 16,

44 
	#MS_SYNCHRONOUS
 
MS_SYNCHRONOUS


	)

45 
	mMS_REMOUNT
 = 32,

46 
	#MS_REMOUNT
 
MS_REMOUNT


	)

47 
	mMS_MANDLOCK
 = 64,

48 
	#MS_MANDLOCK
 
MS_MANDLOCK


	)

49 
	mMS_DIRSYNC
 = 128,

50 
	#MS_DIRSYNC
 
MS_DIRSYNC


	)

51 
	mMS_NOATIME
 = 1024,

52 
	#MS_NOATIME
 
MS_NOATIME


	)

53 
	mMS_NODIRATIME
 = 2048,

54 
	#MS_NODIRATIME
 
MS_NODIRATIME


	)

55 
	mMS_BIND
 = 4096,

56 
	#MS_BIND
 
MS_BIND


	)

57 
	mMS_MOVE
 = 8192,

58 
	#MS_MOVE
 
MS_MOVE


	)

59 
	mMS_REC
 = 16384,

60 
	#MS_REC
 
MS_REC


	)

61 
	mMS_SILENT
 = 32768,

62 
	#MS_SILENT
 
MS_SILENT


	)

63 
	mMS_POSIXACL
 = 1 << 16,

64 
	#MS_POSIXACL
 
MS_POSIXACL


	)

65 
	mMS_UNBINDABLE
 = 1 << 17,

66 
	#MS_UNBINDABLE
 
MS_UNBINDABLE


	)

67 
	mMS_PRIVATE
 = 1 << 18,

68 
	#MS_PRIVATE
 
MS_PRIVATE


	)

69 
	mMS_SLAVE
 = 1 << 19,

70 
	#MS_SLAVE
 
MS_SLAVE


	)

71 
	mMS_SHARED
 = 1 << 20,

72 
	#MS_SHARED
 
MS_SHARED


	)

73 
	mMS_RELATIME
 = 1 << 21,

74 
	#MS_RELATIME
 
MS_RELATIME


	)

75 
	mMS_KERNMOUNT
 = 1 << 22,

76 
	#MS_KERNMOUNT
 
MS_KERNMOUNT


	)

77 
	mMS_I_VERSION
 = 1 << 23,

78 
	#MS_I_VERSION
 
MS_I_VERSION


	)

79 
	mMS_STRICTATIME
 = 1 << 24,

80 
	#MS_STRICTATIME
 
MS_STRICTATIME


	)

81 
	mMS_ACTIVE
 = 1 << 30,

82 
	#MS_ACTIVE
 
MS_ACTIVE


	)

83 
	mMS_NOUSER
 = 1 << 31

84 
	#MS_NOUSER
 
MS_NOUSER


	)

88 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

93 
	#MS_MGC_VAL
 0xc0ed0000

	)

94 
	#MS_MGC_MSK
 0xffff0000

	)

101 
	#BLKROSET
 
	`_IO
(0x12, 93Ë

	)

102 
	#BLKROGET
 
	`_IO
(0x12, 94Ë

	)

103 
	#BLKRRPART
 
	`_IO
(0x12, 95Ë

	)

104 
	#BLKGETSIZE
 
	`_IO
(0x12, 96Ë

	)

105 
	#BLKFLSBUF
 
	`_IO
(0x12, 97Ë

	)

106 
	#BLKRASET
 
	`_IO
(0x12, 98Ë

	)

107 
	#BLKRAGET
 
	`_IO
(0x12, 99Ë

	)

108 
	#BLKFRASET
 
	`_IO
(0x12,100Ë

	)

109 
	#BLKFRAGET
 
	`_IO
(0x12,101Ë

	)

110 
	#BLKSECTSET
 
	`_IO
(0x12,102Ë

	)

111 
	#BLKSECTGET
 
	`_IO
(0x12,103Ë

	)

112 
	#BLKSSZGET
 
	`_IO
(0x12,104Ë

	)

113 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

114 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

115 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

121 
	mMNT_FORCE
 = 1,

122 
	#MNT_FORCE
 
MNT_FORCE


	)

123 
	mMNT_DETACH
 = 2,

124 
	#MNT_DETACH
 
MNT_DETACH


	)

125 
	mMNT_EXPIRE
 = 4,

126 
	#MNT_EXPIRE
 
MNT_EXPIRE


	)

127 
	mUMOUNT_NOFOLLOW
 = 8

128 
	#UMOUNT_NOFOLLOW
 
UMOUNT_NOFOLLOW


	)

132 
__BEGIN_DECLS


135 
	$mou¡
 (c⁄° *
__•ecül_fûe
, c⁄° *
__dú
,

136 c⁄° *
__f°y≥
, 
__rwÊag
,

137 c⁄° *
__d©a
Ë
__THROW
;

140 
	$umou¡
 (c⁄° *
__•ecül_fûe
Ë
__THROW
;

143 
	$umou¡2
 (c⁄° *
__•ecül_fûe
, 
__Êags
Ë
__THROW
;

145 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‚de‡
NCARGS


54 #ifde‡
ARG_MAX


55 
	#NCARGS
 
ARG_MAX


	)

59 
	#NCARGS
 
INT_MAX


	)

65 #i‚de‡
NOGROUP


66 
	#NOGROUP
 65535

	)

68 #i‚de‡
NODEV


69 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

74 #i‚de‡
DEV_BSIZE


75 
	#DEV_BSIZE
 512

	)

80 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

81 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

82 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

83 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

86 #i‚de‡
howm™y


87 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

89 #ifde‡
__GNUC__


90 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

91 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

92 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

94 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

96 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

99 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

100 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/poll.h

19 #i‚def 
_SYS_POLL_H


20 
	#_SYS_POLL_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/pﬁl.h
>

26 #ifde‡
__USE_GNU


28 
	~<bôs/sig£t.h
>

30 
	#__√ed_time•ec


	)

31 
	~<time.h
>

36 
	tnfds_t
;

39 
	spﬁlfd


41 
	mfd
;

42 
	mevíts
;

43 
	mªvíts
;

47 
__BEGIN_DECLS


57 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

59 #ifde‡
__USE_GNU


66 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

67 c⁄° 
time•ec
 *
__timeout
,

68 c⁄° 
__sig£t_t
 *
__ss
);

71 
	g__END_DECLS


75 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


76 
	~<bôs/pﬁl2.h
>

	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<sys/uio.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

29 #ifde‡
__USE_GNU


31 
	~<bôs/sig£t.h
>

38 
	~<bôs/sockë.h
>

40 #ifde‡
__USE_BSD


43 
	sosockaddr


45 
	mß_Ámûy
;

46 
	mß_d©a
[14];

54 
	mSHUT_RD
 = 0,

55 
	#SHUT_RD
 
SHUT_RD


	)

56 
	mSHUT_WR
,

57 
	#SHUT_WR
 
SHUT_WR


	)

58 
	mSHUT_RDWR


59 
	#SHUT_RDWR
 
SHUT_RDWR


	)

68 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


69 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

70 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

74 
	#__SOCKADDR_ALLTYPES
 \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

89 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

90 uni⁄ { 
	m__SOCKADDR_ALLTYPES


91 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

92 #unde‡
__SOCKADDR_ONETYPE


93 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

94 uni⁄ { 
	m__SOCKADDR_ALLTYPES


95 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

96 #unde‡
__SOCKADDR_ONETYPE


99 #ifde‡
__USE_GNU


101 
	smmsghdr


103 
msghdr
 
	mmsg_hdr
;

104 
	mmsg_Àn
;

113 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

119 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

120 
__fds
[2]Ë
__THROW
;

123 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

124 
__THROW
;

127 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

128 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

141 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

142 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

149 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

156 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

163 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 
__addr_Àn
);

174 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

175 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

176 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

184 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

185 
__Êags
);

187 #ifde‡
__USE_GNU


193 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

194 
__vÀn
, 
__Êags
);

202 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

204 #ifde‡
__USE_GNU


210 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

211 
__vÀn
, 
__Êags
,

212 c⁄° 
time•ec
 *
__tmo
);

219 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

220 *
__ª°ri˘
 
__›tvÆ
,

221 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

226 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

227 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

233 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

243 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

244 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

246 #ifde‡
__USE_GNU


251 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

252 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

261 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

264 #ifde‡
__USE_XOPEN2K


266 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

270 #ifde‡
__USE_MISC


274 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

279 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


280 
	~<bôs/sockë2.h
>

283 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

30 || 
deföed
 
	g__USE_ATFILE


31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


35 
	#__√ed_time•ec


	)

37 
	~<time.h
>

40 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


43 #i‚de‡
__dev_t_deföed


44 
__dev_t
 
	tdev_t
;

45 
	#__dev_t_deföed


	)

48 #i‚de‡
__gid_t_deföed


49 
__gid_t
 
	tgid_t
;

50 
	#__gid_t_deföed


	)

53 #i‚de‡
__öo_t_deföed


54 #i‚de‡
__USE_FILE_OFFSET64


55 
__öo_t
 
	töo_t
;

57 
__öo64_t
 
	töo_t
;

59 
	#__öo_t_deföed


	)

62 #i‚de‡
__mode_t_deföed


63 
__mode_t
 
	tmode_t
;

64 
	#__mode_t_deföed


	)

67 #i‚de‡
__∆ök_t_deföed


68 
__∆ök_t
 
	t∆ök_t
;

69 
	#__∆ök_t_deföed


	)

72 #i‚de‡
__off_t_deföed


73 #i‚de‡
__USE_FILE_OFFSET64


74 
__off_t
 
	toff_t
;

76 
__off64_t
 
	toff_t
;

78 
	#__off_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

87 #ifde‡
__USE_UNIX98


88 #i‚de‡
__blk˙t_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__blk˙t_t
 
	tblk˙t_t
;

92 
__blk˙t64_t
 
	tblk˙t_t
;

94 
	#__blk˙t_t_deföed


	)

97 #i‚de‡
__blksize_t_deföed


98 
__blksize_t
 
	tblksize_t
;

99 
	#__blksize_t_deföed


	)

103 
	g__BEGIN_DECLS


105 
	~<bôs/°©.h
>

107 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


108 
	#S_IFMT
 
__S_IFMT


	)

109 
	#S_IFDIR
 
__S_IFDIR


	)

110 
	#S_IFCHR
 
__S_IFCHR


	)

111 
	#S_IFBLK
 
__S_IFBLK


	)

112 
	#S_IFREG
 
__S_IFREG


	)

113 #ifde‡
__S_IFIFO


114 
	#S_IFIFO
 
__S_IFIFO


	)

116 #ifde‡
__S_IFLNK


117 
	#S_IFLNK
 
__S_IFLNK


	)

119 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

120 && 
deföed
 
	g__S_IFSOCK


121 
	#S_IFSOCK
 
__S_IFSOCK


	)

127 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

129 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

130 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

131 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

132 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

133 #ifde‡
__S_IFIFO


134 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

136 #ifde‡
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

140 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


141 
	#S_ISLNK
(
mode
Ë0

	)

144 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

145 && 
deföed
 
	g__S_IFSOCK


146 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

147 #ñi‡
deföed
 
__USE_XOPEN2K


148 
	#S_ISSOCK
(
mode
Ë0

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (c⁄° *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

365 c⁄° 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 c⁄° *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #ifde‡
__USE_EXTERN_INLINES


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/statfs.h

19 #i‚def 
_SYS_STATFS_H


20 
	#_SYS_STATFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©fs.h
>

27 
	g__BEGIN_DECLS


30 #i‚de‡
__USE_FILE_OFFSET64


31 
	$°©fs
 (c⁄° *
__fûe
, 
°©fs
 *
__buf
)

32 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

34 #ifde‡
__REDIRECT_NTH


35 
	`__REDIRECT_NTH
 (
°©fs
,

36 (c⁄° *
__fûe
, 
°©fs
 *
__buf
),

37 
°©fs64
Ë
	`__n⁄nuŒ
 ((1, 2));

39 
	#°©fs
 
°©fs64


	)

42 #ifde‡
__USE_LARGEFILE64


43 
	$°©fs64
 (c⁄° *
__fûe
, 
°©fs64
 *
__buf
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$f°©fs
 (
__fûdes
, 
°©fs
 *
__buf
)

51 
__THROW
 
	`__n⁄nuŒ
 ((2));

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
f°©fs
, (
__fûdes
, 
°©fs
 *
__buf
),

55 
f°©fs64
Ë
	`__n⁄nuŒ
 ((2));

57 
	#f°©fs
 
f°©fs64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$f°©fs64
 (
__fûdes
, 
°©fs64
 *
__buf
)

62 
__THROW
 
	`__n⁄nuŒ
 ((2));

65 
__END_DECLS


	@/usr/include/sys/statvfs.h

19 #i‚def 
_SYS_STATVFS_H


20 
	#_SYS_STATVFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©vfs.h
>

27 #i‚de‡
__USE_FILE_OFFSET64


28 #i‚de‡
__fsblk˙t_t_deföed


29 
__fsblk˙t_t
 
	tfsblk˙t_t
;

30 
	#__fsblk˙t_t_deföed


	)

32 #i‚de‡
__fsfû˙t_t_deföed


33 
__fsfû˙t_t
 
	tfsfû˙t_t
;

34 
	#__fsfû˙t_t_deföed


	)

37 #i‚de‡
__fsblk˙t_t_deföed


38 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

39 
	#__fsblk˙t_t_deföed


	)

41 #i‚de‡
__fsfû˙t_t_deföed


42 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

43 
	#__fsfû˙t_t_deföed


	)

47 
	g__BEGIN_DECLS


50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$°©vfs
 (c⁄° *
__ª°ri˘
 
__fûe
,

52 
°©vfs
 *
__ª°ri˘
 
__buf
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

55 #ifde‡
__REDIRECT_NTH


56 
	`__REDIRECT_NTH
 (
°©vfs
,

57 (c⁄° *
__ª°ri˘
 
__fûe
,

58 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

59 
	`__n⁄nuŒ
 ((1, 2));

61 
	#°©vfs
 
°©vfs64


	)

64 #ifde‡
__USE_LARGEFILE64


65 
	$°©vfs64
 (c⁄° *
__ª°ri˘
 
__fûe
,

66 
°©vfs64
 *
__ª°ri˘
 
__buf
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

74 
__THROW
 
	`__n⁄nuŒ
 ((2));

76 #ifde‡
__REDIRECT_NTH


77 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

78 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

80 
	#f°©vfs
 
f°©vfs64


	)

83 #ifde‡
__USE_LARGEFILE64


84 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

85 
__THROW
 
	`__n⁄nuŒ
 ((2));

88 
__END_DECLS


	@/usr/include/sys/sysinfo.h

18 #i‚de‡
_SYS_SYSINFO_H


19 
	#_SYS_SYSINFO_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<löux/kî√l.h
>

26 
__BEGIN_DECLS


29 
	$sysöfo
 (
sysöfo
 *
__öfo
Ë
__THROW
;

33 
	$gë_≈rocs_c⁄f
 (Ë
__THROW
;

36 
	$gë_≈rocs
 (Ë
__THROW
;

40 
	$gë_phys_∑ges
 (Ë
__THROW
;

43 
	$gë_avphys_∑ges
 (Ë
__THROW
;

45 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_time_t


	)

25 
	~<time.h
>

26 
	#__√ed_timevÆ


	)

27 
	~<bôs/time.h
>

29 
	~<sys/£À˘.h
>

31 #i‚de‡
__su£c⁄ds_t_deföed


32 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

33 
	#__su£c⁄ds_t_deföed


	)

37 
	g__BEGIN_DECLS


39 #ifde‡
__USE_GNU


41 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

42 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

43 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

44 }

	)

45 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

46 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

47 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

48 }

	)

52 #ifde‡
__USE_BSD


55 
	stimez⁄e


57 
	mtz_möuãswe°
;

58 
	mtz_d°time
;

61 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

63 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

71 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

72 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

74 #ifde‡
__USE_BSD


77 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

78 c⁄° 
timez⁄e
 *
__tz
)

79 
__THROW
;

85 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

138 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

139 
__THROW
 
	`__n⁄nuŒ
 ((1));

141 #ifde‡
__USE_BSD


143 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

144 
__THROW
 
	`__n⁄nuŒ
 ((1));

147 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

150 #ifde‡
__USE_GNU


154 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

155 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

159 #ifde‡
__USE_BSD


162 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

163 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

164 
	#timîcmp
(
a
, 
b
, 
CMP
) \

165 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

166 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

167 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

168 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

170 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

171 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

172 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

174 ++(
ªsu…
)->
tv_£c
; \

175 (
ªsu…
)->
tv_u£c
 -= 1000000; \

177 
	}
} 0)

	)

178 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

180 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

181 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

182 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

183 --(
ªsu…
)->
tv_£c
; \

184 (
ªsu…
)->
tv_u£c
 += 1000000; \

186 } 0)

	)

189 
	g__END_DECLS


	@/usr/include/sys/times.h

22 #i‚def 
_SYS_TIMES_H


23 
	#_SYS_TIMES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_˛ock_t


	)

28 
	~<time.h
>

31 
__BEGIN_DECLS


34 
	stms


36 
˛ock_t
 
	mtms_utime
;

37 
˛ock_t
 
	mtms_°ime
;

39 
˛ock_t
 
	mtms_cutime
;

40 
˛ock_t
 
	mtms_c°ime
;

48 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

50 
__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

18 #i‚de‡
_SYS_UIO_H


19 
	#_SYS_UIO_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	g__BEGIN_DECLS


28 
	~<bôs/uio.h
>

39 
ssize_t
 
	$ªadv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

40 
__wur
;

50 
ssize_t
 
	$wrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
)

51 
__wur
;

54 #ifde‡
__USE_BSD


55 #i‚de‡
__USE_FILE_OFFSET64


65 
ssize_t
 
	$¥ódv
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

66 
__off_t
 
__off£t
Ë
__wur
;

77 
ssize_t
 
	$pwrôev
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

78 
__off_t
 
__off£t
Ë
__wur
;

80 #ifde‡
__REDIRECT


81 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

82 
__cou¡
, 
__off64_t
 
__off£t
),

83 
¥ódv64
Ë
__wur
;

84 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, c⁄° 
iovec
 *
__iovec
,

85 
__cou¡
, 
__off64_t
 
__off£t
),

86 
pwrôev64
Ë
__wur
;

88 
	#¥ódv
 
¥ódv64


	)

89 
	#pwrôev
 
pwrôev64


	)

93 #ifde‡
__USE_LARGEFILE64


103 
ssize_t
 
	$¥ódv64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

104 
__off64_t
 
__off£t
Ë
__wur
;

115 
ssize_t
 
	$pwrôev64
 (
__fd
, c⁄° 
iovec
 *
__iovec
, 
__cou¡
,

116 
__off64_t
 
__off£t
Ë
__wur
;

120 
__END_DECLS


	@/usr/include/sys/unistd.h

1 
	~<uni°d.h
>

	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_SVID


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/sys/vfs.h

4 
	~<sys/°©fs.h
>

	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/utime.h

22 #i‚def 
_UTIME_H


23 
	#_UTIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

33 
	~<time.h
>

37 
	sutimbuf


39 
__time_t
 
	ma˘ime
;

40 
__time_t
 
	mmodtime
;

45 
	$utime
 (c⁄° *
__fûe
,

46 c⁄° 
utimbuf
 *
__fûe_times
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1));

49 
__END_DECLS


	@/usr/include/wait.h

1 
	~<sys/waô.h
>

	@libcheetah/libcheetah.h

2 #i‚de‡
LIBCHEETAH_H


3 
	#LIBCHEETAH_H


	)

5 
	~<°dio.h
>

9 
chìèh_öô
(
¨gc
, **
¨gv
);

13 
chìèh_c⁄fig
(
FILE
 *
fd
);

17 
chìèh_ac˚ss
(
md_addr_t
 
addr
);

21 
chìèh_°©s
(
FILE
 *
fd
,

22 
mid
);

29 **
ßc_hôs
;

32 
öô_ß˛ru
();

33 
ß˙mul_wﬂº
(
md_addr_t
 
addr
);

34 
ouçr_ß˛ru
(
FILE
 *
fd
);

36 
öô_ßc›t
();

38 
°ack_¥oc_ß
(
°¨t
,

39 
íd
);

40 
öf_h™dÀr_ß
(
md_addr_t
 
addr
, 
cur_time
);

41 
ouçr_ßc›t
(
FILE
 *
fd
);

43 
öô_dmvl
();

44 
dmvl
(
md_addr_t
 
addr
);

45 
ouçr_dmvl
(
FILE
 *
fd
);

47 
öô_Á˛ru
();

48 
±c
(
md_addr_t
 
addr
);

49 
ouçr_Á˛ru
(
FILE
 *
fd
);

51 
öô_Ác›t
();

53 
°ack_¥oc_Á
(
°¨t
,

54 
íd
);

55 
öf_h™dÀr_Á
(
md_addr_t
 
addr
, 
cur_time
);

56 
ouçr_Ác›t
(
FILE
 *
fd
);

58 
öô_›çp
();

59 
›çp
(
md_addr_t
 
addr
, 
L
,

60 (*
°ack_¥oc
)(
°¨t
, 
íd
),

61 (*
öf_h™dÀr
)(
md_addr_t
 
addr
, 
cur_time
));

62 
	`·_hash_dñ
(
md_addr_t
 
addr
);

63 
	`ãrm_›çp
((*
°ack_¥oc
)());

	@libexo/libexo.h

88 #i‚de‡
EXO_H


89 
	#EXO_H


	)

91 
	~"../ho°.h
"

92 
	~"../misc.h
"

93 
	~"../machöe.h
"

96 
	#EXO_FMT_MAJOR
 1

	)

97 
	#EXO_FMT_MINOR
 0

	)

100 
	eexo_˛ass_t
 {

101 
	mec_öãgî
,

102 
	mec_addªss
,

103 
	mec_Êﬂt
,

104 
	mec_ch¨
,

105 
	mec_°rög
,

106 
	mec_li°
,

107 
	mec_¨øy
,

108 
	mec_tokí
,

109 
	mec_blob
,

110 
	mec_nuŒ
,

111 
	mec_NUM


115 *
exo_˛ass_°r
[
ec_NUM
];

118 
	sexo_tokí_t
 {

119 
exo_tokí_t
 *
	m√xt
;

120 *
	m°r
;

121 
	mtokí
;

124 
	sexo_ãrm_t
 {

125 
exo_ãrm_t
 *
	m√xt
;

126 
exo_˛ass_t
 
	mec
;

128 
	sas_öãgî_t
 {

129 
exo_öãgî_t
 
	mvÆ
;

130 } 
	mas_öãgî
;

131 
	sas_addªss_t
 {

132 
exo_addªss_t
 
	mvÆ
;

133 } 
	mas_addªss
;

134 
	sas_Êﬂt_t
 {

135 
exo_Êﬂt_t
 
	mvÆ
;

136 } 
	mas_Êﬂt
;

137 
	sas_ch¨_t
 {

138 
	mvÆ
;

139 } 
	mas_ch¨
;

140 
	sas_°rög_t
 {

141 *
	m°r
;

142 } 
	mas_°rög
;

143 
	sas_li°_t
 {

144 
exo_ãrm_t
 *
	mhód
;

145 } 
	mas_li°
;

146 
	sas_¨øy_t
 {

147 
	msize
;

148 
exo_ãrm_t
 **
	m¨øy
;

149 } 
	mas_¨øy
;

150 
	sas_tokí_t
 {

151 
exo_tokí_t
 *
	mít
;

152 } 
	mas_tokí
;

153 
	sas_blob_t
 {

154 
	msize
;

155 *
	md©a
;

156 } 
	mas_blob
;

157 } 
	mv¨ü¡
;

160 
	#as_öãgî
 
v¨ü¡
.
as_öãgî


	)

161 
	#as_addªss
 
v¨ü¡
.
as_addªss


	)

162 
	#as_Êﬂt
 
v¨ü¡
.
as_Êﬂt


	)

163 
	#as_ch¨
 
v¨ü¡
.
as_ch¨


	)

164 
	#as_°rög
 
v¨ü¡
.
as_°rög


	)

165 
	#as_li°
 
v¨ü¡
.
as_li°


	)

166 
	#as_¨øy
 
v¨ü¡
.
as_¨øy


	)

167 
	#as_tokí
 
v¨ü¡
.
as_tokí


	)

168 
	#as_blob
 
v¨ü¡
.
as_blob


	)

172 
	#EXO_ARR
(
E
,
N
Ë\

	)

173 ((
	gE
)->
	gec
 !
ec_¨øy
 \

174 ? (
Áèl
("nŸá¿¨øy"), *(
	gexo_ãrm_t
 **)(
	gNULL
)) \

175 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

176 ? (
Áèl
("¨øy bound†îr‹"), *(
	gexo_ãrm_t
 **)(
	gNULL
)) \

177 : (
E
)->
as_¨øy
.
¨øy
[(
N
)]))

178 
	#SET_EXO_ARR
(
E
,
N
,
V
Ë\

	)

179 ((
	gE
)->
	gec
 !
ec_¨øy
 \

180 ? ()
Áèl
("notánárray") \

181 : ((
N
Ë>(
E
)->
as_¨øy
.
size
 \

182 ? ()
Áèl
("array boundsÉrror") \

183 : ()((
E
)->
as_¨øy
.
¨øy
[(
N
)] = (
V
))))

186 
exo_tokí_t
 *

187 
exo_öã∫
(*
tokí_°r
);

190 
exo_tokí_t
 *

191 
exo_öã∫_as
(*
tokí_°r
,

192 
tokí
);

207 
exo_ãrm_t
 *

208 
exo_√w
(
exo_˛ass_t
 
ec
, ...);

212 
exo_dñëe
(
exo_ãrm_t
 *
exo
);

215 
exo_ãrm_t
 *

216 
exo_chaö
(
exo_ãrm_t
 *
f‹e
, exo_ãrm_à*
a·
);

219 
exo_ãrm_t
 *

220 
exo_c›y
(
exo_ãrm_t
 *
exo
);

223 
exo_ãrm_t
 *

224 
exo_dìpc›y
(
exo_ãrm_t
 *
exo
);

228 
exo_¥öt
(
exo_ãrm_t
 *
exo
, 
FILE
 *
°ªam
);

231 
exo_ãrm_t
 *

232 
exo_ªad
(
FILE
 *
°ªam
);

235 
	eÀx_t
 {

236 
	mÀx_öãgî
 = 256,

237 
	mÀx_addªss
,

238 
	mÀx_Êﬂt
,

239 
	mÀx_ch¨
,

240 
	mÀx_°rög
,

241 
	mÀx_tokí
,

242 
	mÀx_byã
,

243 
	mÀx_eof


	@machine.def

241 
DEFLINK
(
TOPLEV
, 0x00, "toplev", 26, 0x3f)

242 
	$CONNECT
(
TOPLEV
)

245 
	`DEFLINK
(
CALL_PAL
, 0x00, "call_pal", 0, 0xff)

247 
	#LDA_IMPL
 \

249 
	`SET_GPR
(
RA
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
)); \

250 
	}

	)
}

251 
DEFINST
(
LDA
, 0x08,

253 
I¡ALU
, 
F_ICOMP
,

254 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

256 
	#LDAH_IMPL
 \

258 
	`SET_GPR
(
RA
, 
	`GPR
(
RB
Ë+ 
	`SEXT32
(65536 * 
OFS
)); \

259 }

	)

260 
DEFINST
(
LDAH
, 0x09,

262 
I¡ALU
, 
F_ICOMP
,

263 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

266 
	#LDBU_IMPL
 \

268 
byã_t
 
_ªsu…
; \

269 
md_Áu…_ty≥
 
_Áu…
; \

271 
_ªsu…
 = 
	`READ_BYTE
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

272 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

273 
	`DECLARE_FAULT
(
_Áu…
); \

275 
	`SET_GPR
(
RA
, (
qw‹d_t
)
_ªsu…
); \

276 }

	)

277 
DEFINST
(
LDBU
, 0x0a,

279 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

280 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

282 
	#LDQ_U_IMPL
 \

284 
qw‹d_t
 
_ªsu…
; \

285 
md_Áu…_ty≥
 
_Áu…
; \

287 
_ªsu…
 = 
	`READ_QWORD
((
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
)Ë& ~7, 
_Áu…
); \

288 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

289 
	`DECLARE_FAULT
(
_Áu…
); \

291 
	`SET_GPR
(
RA
, 
_ªsu…
); \

292 }

	)

293 
DEFINST
(
LDQ_U
, 0x0b,

295 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

296 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

299 
	#LDWU_IMPL
 \

301 
hÆf_t
 
_ªsu…
; \

302 
md_Áu…_ty≥
 
_Áu…
; \

304 
_ªsu…
 = 
	`READ_HALF
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

305 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

306 
	`DECLARE_FAULT
(
_Áu…
); \

308 
	`SET_GPR
(
RA
, (
qw‹d_t
)
_ªsu…
); \

309 }

	)

310 
DEFINST
(
LDWU
, 0x0c,

312 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

313 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

316 
	#STW_IMPL
 \

318 
md_Áu…_ty≥
 
_Áu…
; \

320 
	`WRITE_HALF
((
hÆf_t
)
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

321 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

322 
	`DECLARE_FAULT
(
_Áu…
); \

323 }

	)

324 
DEFINST
(
STW
, 0x0d,

326 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

327 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

330 
	#STB_IMPL
 \

332 
md_Áu…_ty≥
 
_Áu…
; \

334 
	`WRITE_BYTE
((
byã_t
)
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

335 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

336 
	`DECLARE_FAULT
(
_Áu…
); \

337 }

	)

338 
DEFINST
(
STB
, 0x0e,

340 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

341 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

343 
	#STQ_U_IMPL
 \

345 
md_Áu…_ty≥
 
_Áu…
; \

347 
	`WRITE_QWORD
(
	`GPR
(
RA
), (GPR(
RB
Ë+ 
	`SEXT
(
OFS
)Ë& ~7, 
_Áu…
); \

348 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

349 
	`DECLARE_FAULT
(
_Áu…
); \

350 }

	)

351 
DEFINST
(
STQ_U
, 0x0f,

353 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

354 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

356 
DEFLINK
(
INTA
, 0x10, "inta", 5, 0x7f)

358 
DEFLINK
(
INTL
, 0x11, "intl", 5, 0x7f)

360 
DEFLINK
(
INTS
, 0x12, "ints", 5, 0x7f)

363 
DEFLINK
(
INTM
, 0x13, "intm", 5, 0x3f)

368 
DEFLINK
(
ITFP
, 0x14, "itfp", 5, 0x3f)

371 
	#FLTV_IMPL
 \

374 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

375 }

	)

376 
DEFINST
(
FLTV
, 0x15,

378 
NA
, NA,

379 
DNA
, DNA, DNA, DNA, DNA)

381 
DEFLINK
(
FLTI
, 0x16, "flti", 5, 0x3f)

383 
DEFLINK
(
FLTL
, 0x17, "fltl", 5, 0x7f)

386 
DEFLINK
(
MISC
, 0x18, "misc", 8, 0xff)

388 
DEFLINK
(
JMPJSR
, 0x1a, "jmpjsr", 14, 0x03)

391 
DEFLINK
(
FPTI
, 0x1c, "fpti", 5, 0x7f)

393 
	#LDF_IMPL
 \

396 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

397 }

	)

398 
DEFINST
(
LDF
, 0x20,

400 
NA
, NA,

401 
DNA
, DNA, DNA, DNA, DNA)

403 
	#LDG_IMPL
 \

406 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

407 }

	)

408 
DEFINST
(
LDG
, 0x21,

410 
NA
, NA,

411 
DNA
, DNA, DNA, DNA, DNA)

413 
	#LDS_IMPL
 \

415 
sqw‹d_t
 
_l⁄ghﬁd
, 
_e1
, 
_e2
; \

416 
md_Áu…_ty≥
 
_Áu…
; \

418 
_l⁄ghﬁd
 = 
	`READ_WORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

419 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

420 
	`DECLARE_FAULT
(
_Áu…
); \

422 
_e1
 = 
_l⁄ghﬁd
 & 0x40000000; \

423 
_e2
 = (
_l⁄ghﬁd
 >> 23Ë& 
	`ULL
(0x7f); \

424 i‡(
_e1
) \

426 i‡(
_e2
 =
	`ULL
(0x3f800000)) \

427 
_e2
 = 
	`ULL
(0x7ff); \

429 
_e2
 |
	`ULL
(0x400); \

433 i‡(
_e2
 == 0) \

434 
_e2
 = 0; \

436 
_e2
 |
	`ULL
(0x380); \

438 
	`SET_FPR_Q
(
RA
, ((
_l⁄ghﬁd
 & 
	`ULL
(0x80000000)) << 32 \

439 | 
_e2
 << 52 | (
_l⁄ghﬁd
 & 
	`ULL
(0x7fffff)) << 29)); \

440 }

	)

441 
DEFINST
(
LDS
, 0x22,

443 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

444 
DFPR
(
RA
), 
DNA
, DNA, 
DGPR
(
RB
), DNA)

446 
	#LDT_IMPL
 \

448 
qw‹d_t
 
_ªsu…
; \

449 
md_Áu…_ty≥
 
_Áu…
; \

451 
_ªsu…
 = 
	`READ_QWORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

452 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

453 
	`DECLARE_FAULT
(
_Áu…
); \

455 
	`SET_FPR_Q
(
RA
, 
_ªsu…
); \

456 }

	)

457 
DEFINST
(
LDT
, 0x23,

459 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

460 
DFPR
(
RA
), 
DNA
, DNA, 
DGPR
(
RB
), DNA)

462 
	#STF_IMPL
 \

465 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

466 }

	)

467 
DEFINST
(
STF
, 0x24,

469 
NA
, NA,

470 
DNA
, DNA, DNA, DNA, DNA)

472 
	#STG_IMPL
 \

475 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

476 }

	)

477 
DEFINST
(
STG
, 0x25,

479 
NA
, NA,

480 
DNA
, DNA, DNA, DNA, DNA)

482 
	#STS_IMPL
 \

484 
sqw‹d_t
 
_l⁄ghﬁd
; \

485 
sw‹d_t
 
_öthﬁd
; \

486 
md_Áu…_ty≥
 
_Áu…
; \

488 
_l⁄ghﬁd
 = 
	`FPR_Q
(
RA
); \

489 
_öthﬁd
 = (((
_l⁄ghﬁd
 >> 32Ë& 
	`ULL
(0xc0000000)) \

490 | ((
_l⁄ghﬁd
 >> 29Ë& 
	`ULL
(0x3fffffff))); \

491 
	`WRITE_WORD
(
_öthﬁd
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

492 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

493 
	`DECLARE_FAULT
(
_Áu…
); \

494 }

	)

495 
DEFINST
(
STS
, 0x26,

497 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

498 
DNA
, DNA, 
DFPR
(
RA
), 
DGPR
(
RB
), DNA)

500 
	#STT_IMPL
 \

502 
md_Áu…_ty≥
 
_Áu…
; \

504 
	`WRITE_QWORD
(
	`FPR_Q
(
RA
), 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

505 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

506 
	`DECLARE_FAULT
(
_Áu…
); \

507 }

	)

508 
DEFINST
(
STT
, 0x27,

510 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

511 
DNA
, DNA, 
DFPR
(
RA
), 
DGPR
(
RB
), DNA)

513 
	#LDL_IMPL
 \

515 
w‹d_t
 
_ªsu…
; \

516 
md_Áu…_ty≥
 
_Áu…
; \

518 
_ªsu…
 = 
	`READ_WORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

519 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

520 
	`DECLARE_FAULT
(
_Áu…
); \

522 
	`SET_GPR
(
RA
, (
sqw‹d_t
)((
sw‹d_t
)
_ªsu…
)); \

523 }

	)

524 
DEFINST
(
LDL
, 0x28,

526 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

527 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

529 
	#LDQ_IMPL
 \

531 
qw‹d_t
 
_ªsu…
; \

532 
md_Áu…_ty≥
 
_Áu…
; \

533 
_ªsu…
 = 
	`READ_QWORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

534 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

535 
	`DECLARE_FAULT
(
_Áu…
); \

536 
	`SET_GPR
(
RA
, 
_ªsu…
); \

537 }

	)

538 
DEFINST
(
LDQ
, 0x29,

540 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

541 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

543 
	#LDL_L_IMPL
 \

545 
w‹d_t
 
_ªsu…
; \

546 
md_Áu…_ty≥
 
_Áu…
; \

547 
_ªsu…
 = 
	`READ_WORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

548 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

549 
	`DECLARE_FAULT
(
_Áu…
); \

550 if(!
cuºít
->
•ec_mode
 && 
_ªsu…
 == 0) \

552 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 = 1; \

553 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
addªss
 = 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
); \

555 
	`SET_GPR
(
RA
, 
_ªsu…
); \

556 }

	)

557 
DEFINST
(
LDL_L
, 0x2a,

559 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

560 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

563 
	#LDQ_L_IMPL
 \

565 
qw‹d_t
 
_ªsu…
; \

566 
md_Áu…_ty≥
 
_Áu…
; \

567 
ii
 = 0, 
Êag1
 = 0; \

568 
_ªsu…
 = 
	`READ_QWORD
(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

569 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

570 
	`DECLARE_FAULT
(
_Áu…
); \

571 if(!
cuºít
->
•ec_mode
 && 
_ªsu…
 == 0) \

573 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 = 1; \

574 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
addªss
 = 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
); \

576 
	`SET_GPR
(
RA
, (
sqw‹d_t
)((
sw‹d_t
)
_ªsu…
)); \

577 }

	)

578 
DEFINST
(
LDQ_L
, 0x2b,

580 
RdP‹t
, 
F_MEM
|
F_LOAD
|
F_DISP
,

581 
DGPR
(
RA
), 
DNA
, DNA, DGPR(
RB
), DNA)

583 
	#STL_IMPL
 \

585 
w‹d_t
 
_§c
; \

586 
md_Áu…_ty≥
 
_Áu…
; \

587 
_§c
 = (
w‹d_t
)(
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff)); \

588 
	`WRITE_WORD
(
_§c
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

589 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

590 
	`DECLARE_FAULT
(
_Áu…
); \

591 }

	)

592 
DEFINST
(
STL
, 0x2c,

594 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

595 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

597 
	#STQ_IMPL
 \

599 
md_Áu…_ty≥
 
_Áu…
; \

600 
	`WRITE_QWORD
(
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

601 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

602 
	`DECLARE_FAULT
(
_Áu…
); \

603 }

	)

604 
DEFINST
(
STQ
, 0x2d,

606 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

607 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

610 
	#STL_C_IMPL
 \

612 
w‹d_t
 
_§c
; \

613 
md_Áu…_ty≥
 
_Áu…
; \

614 
ii
 = 0; \

615 
_§c
 = (
w‹d_t
)(
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff)); \

616 if(
COHERENT_CACHE
 && 
ÆlF‹ked
 && 
cﬁÀ˘_°©s
) \

618 
	`WRITE_WORD
(
_§c
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

619 if(
_Áu…
 !
md_Áu…_n⁄e
) \

621 
	`DECLARE_FAULT
(
_Áu…
); \

626 if(!
cuºít
->
•ec_mode
) \

628 if((
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][cuºít->
a˘uÆid
].
ªgs_lock
 =1Ë&& (comm⁄_ªgs_s[cuºít->ma°îid][cuºít->a˘uÆid].
addªss
 =
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
))) \

630 
	`WRITE_WORD
(
_§c
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

631 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

633 
	`DECLARE_FAULT
(
_Áu…
); \

635 
ii
 = 0; iò< 
MAXTHREADS
; ii++) \

637 if(
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
ii
].
addªss
 =(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
))) \

639 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
ii
].
ªgs_lock
 = 0; \

640 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
ii
].
addªss
 = 0; \

645 
	`SET_GPR
(
RA
, 0); \

649 
cuºít
->
waôF‹BønchResﬁve
 = 1; \

652 }

	)

654 
DEFINST
(
STL_C
, 0x2e,

656 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

657 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

660 
	#STQ_C_IMPL
 \

662 
w‹d_t
 
_§c
; \

663 
md_Áu…_ty≥
 
_Áu…
; \

664 
ii
 = 0, 
addªssLocked
 = 0; \

665 
_§c
 = (
w‹d_t
)(
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff)); \

666 if(
COHERENT_CACHE
 && 
ÆlF‹ked
 && 
cﬁÀ˘_°©s
) \

668 
	`WRITE_QWORD
(
_§c
, 
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

669 if(
_Áu…
 !
md_Áu…_n⁄e
) \

671 
	`DECLARE_FAULT
(
_Áu…
); \

676 if(!
cuºít
->
•ec_mode
) \

678 if((
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][0].
ªgs_lock
 !0Ë&& (comm⁄_ªgs_s[cuºít->ma°îid][0].
addªss
 =
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
))) \

680 
	`WRITE_QWORD
(
	`GPR
(
RA
), GPR(
RB
Ë+ 
	`SEXT
(
OFS
), 
_Áu…
); \

681 i‡(
_Áu…
 !
md_Áu…_n⁄e
) \

682 
	`DECLARE_FAULT
(
_Áu…
); \

683 
ii
 = 0; iò< 
MAXTHREADS
; ii++) \

685 if(
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][
ii
].
addªss
 =(
	`GPR
(
RB
Ë+ 
	`SEXT
(
OFS
))) \

687 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][0].
ªgs_lock
 = 0; \

688 
comm⁄_ªgs_s
[
cuºít
->
ma°îid
][0].
addªss
 = 0; \

693 
	`SET_GPR
(
RA
, 0); \

696 
cuºít
->
waôF‹BønchResﬁve
 = 1; \

698 }

	)

699 
DEFINST
(
STQ_C
, 0x2f,

701 
WrP‹t
, 
F_MEM
|
F_STORE
|
F_DISP
,

702 
DNA
, DNA, 
DGPR
(
RA
), DGPR(
RB
), DNA)

703 
	#BR_IMPL
 \

705 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

706 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

707 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

708 }

	)

709 
DEFINST
(
BR
, 0x30,

711 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_DIRJMP
,

712 
DGPR
(
RA
), 
DNA
, DNA, DNA, DNA)

714 
	#FBEQ_IMPL
 \

716 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

717 i‡(
	`FPR
(
RA
) == 0.0) \

718 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

719 }

	)

720 
DEFINST
(
FBEQ
, 0x31,

722 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

723 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

725 
	#FBLT_IMPL
 \

727 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

728 i‡(
	`FPR
(
RA
) < 0.0) \

729 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

730 }

	)

731 
DEFINST
(
FBLT
, 0x32,

733 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

734 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

736 
	#FBLE_IMPL
 \

738 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

739 i‡(
	`FPR
(
RA
) <= 0.0) \

740 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

741 }

	)

742 
DEFINST
(
FBLE
, 0x33,

744 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

745 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

749 
	#BSR_IMPL
 \

751 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

752 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

753 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

754 }

	)

755 
DEFINST
(
BSR
, 0x34,

757 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_DIRJMP
,

758 
DGPR
(
RA
), 
DNA
, DNA, DNA, DNA)

760 
	#FBNE_IMPL
 \

762 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

763 i‡(
	`FPR
(
RA
) != 0.0) \

764 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

765 }

	)

766 
DEFINST
(
FBNE
, 0x35,

768 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

769 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

771 
	#FBGE_IMPL
 \

773 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

774 i‡(
	`FPR
(
RA
) >= 0.0) \

775 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

776 }

	)

777 
DEFINST
(
FBGE
, 0x36,

779 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

780 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

782 
	#FBGT_IMPL
 \

784 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

785 i‡(
	`FPR
(
RA
) > 0.0) \

786 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

787 }

	)

788 
DEFINST
(
FBGT
, 0x37,

790 
FlﬂtADD
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

791 
DNA
, DNA, 
DFPR
(
RA
), DNA, DNA)

793 
	#BLBC_IMPL
 \

795 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

796 i‡(!(
	`GPR
(
RA
) & 1)) \

797 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

798 }

	)

799 
DEFINST
(
BLBC
, 0x38,

801 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

802 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

804 
	#BEQ_IMPL
 \

806 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

807 i‡(
	`GPR
(
RA
Ë=
	`ULL
(0)) \

808 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

809 }

	)

810 
DEFINST
(
BEQ
, 0x39,

812 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

813 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

815 
	#BLT_IMPL
 \

817 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

818 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë< 
	`LL
(0)) \

819 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

820 }

	)

821 
DEFINST
(
BLT
, 0x3a,

823 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

824 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

826 
	#BLE_IMPL
 \

828 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

829 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë<
	`LL
(0)) \

830 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

831 }

	)

832 
DEFINST
(
BLE
, 0x3b,

834 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

835 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

837 
	#BLBS_IMPL
 \

839 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

840 i‡(
	`GPR
(
RA
) & 1) \

841 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

842 }

	)

843 
DEFINST
(
BLBS
, 0x3c,

845 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

846 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

848 
	#BNE_IMPL
 \

850 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

851 i‡(
	`GPR
(
RA
Ë!
	`ULL
(0)) \

852 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

853 }

	)

854 
DEFINST
(
BNE
, 0x3d,

856 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

857 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

859 
	#BGE_IMPL
 \

861 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

862 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë>
	`LL
(0)) \

863 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

864 }

	)

865 
DEFINST
(
BGE
, 0x3e,

867 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

868 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

870 
	#BGT_IMPL
 \

872 
	`SET_TPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

873 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë> 
	`LL
(0)) \

874 
	`SET_NPC
(
CPC
 + (
	`SEXT21
(
TARG
) << 2) + 4); \

875 }

	)

876 
DEFINST
(
BGT
, 0x3f,

878 
I¡ALU
, 
F_CTRL
|
F_COND
|
F_DIRJMP
,

879 
DNA
, DNA, 
DGPR
(
RA
), DNA, DNA)

882 
	$CONNECT
(
CALL_PAL
)

884 
	#PAL_CALLSYS_IMPL
 \

886 
	`SYSCALL
(
ö°
); \

887 
	}

	)
}

888 
DEFINST
(
PAL_CALLSYS
, 0x83,

890 
NA
, 
F_TRAP
,

891 
DNA
, DNA, DNA, DNA, DNA)

893 
	#PAL_RDUNIQ_IMPL
 \

895 
	`SET_GPR
–0, 
UNIQ
); \

896 }

	)

897 
DEFINST
(
PAL_RDUNIQ
, 0x9e,

899 
NA
, 
F_TRAP
,

900 
DGPR
–0), 
DNA
, 
DUNIQ
, DNA, DNA)

902 
	#PAL_WRUNIQ_IMPL
 \

904 
	`SET_UNIQ
(
	`GPR
( 16)); \

905 }

	)

906 
DEFINST
(
PAL_WRUNIQ
, 0x9f,

908 
NA
, 
F_TRAP
,

909 
DUNIQ
, 
DNA
, 
DGPR
( 16), DNA, DNA)

912 
	$CONNECT
(
INTA
)

914 
	`DEFLINK
(
ADDL_LINK
, 0x00, "addl_link", 12, 1)

916 
	`DEFLINK
(
S4ADDL_LINK
, 0x02, "s4addl_link", 12, 1)

918 
	`DEFLINK
(
SUBL_LINK
, 0x09, "subl_link", 12, 1)

920 
	`DEFLINK
(
S4SUBL_LINK
, 0x0b, "s4subl_link", 12, 1)

922 
	`DEFLINK
(
CMPBGE_LINK
, 0x0f, "cmpbge_link", 12, 1)

924 
	`DEFLINK
(
S8ADDL_LINK
, 0x12, "s8addl_link", 12, 1)

926 
	`DEFLINK
(
S8SUBL_LINK
, 0x1b, "s8subl_link", 12, 1)

928 
	`DEFLINK
(
CMPULT_LINK
, 0x1d, "cmpult_link", 12, 1)

930 
	`DEFLINK
(
ADDQ_LINK
, 0x20, "addq_link", 12, 1)

932 
	`DEFLINK
(
S4ADDQ_LINK
, 0x22, "s4addq_link", 12, 1)

934 
	`DEFLINK
(
SUBQ_LINK
, 0x29, "subq_link", 12, 1)

936 
	`DEFLINK
(
S4SUBQ_LINK
, 0x2b, "s4subq_link", 12, 1)

938 
	`DEFLINK
(
CMPEQ_LINK
, 0x2d, "cmpeq_link", 12, 1)

940 
	`DEFLINK
(
S8ADDQ_LINK
, 0x32, "s8addq_link", 12, 1)

942 
	`DEFLINK
(
S8SUBQ_LINK
, 0x3b, "s8subq_link", 12, 1)

944 
	`DEFLINK
(
CMPULE_LINK
, 0x3d, "cmpule_link", 12, 1)

946 
	`DEFLINK
(
ADDLV_LINK
, 0x40, "addlv_link", 12, 1)

948 
	`DEFLINK
(
SUBLV_LINK
, 0x49, "sublv_link", 12, 1)

950 
	`DEFLINK
(
CMPLT_LINK
, 0x4d, "cmplt_link", 12, 1)

952 
	`DEFLINK
(
ADDQV_LINK
, 0x60, "addqv_link", 12, 1)

954 
	`DEFLINK
(
SUBQV_LINK
, 0x69, "subqv_link", 12, 1)

956 
	`DEFLINK
(
CMPLE_LINK
, 0x6d, "cmple_link", 12, 1)

959 
	$CONNECT
(
ADDL_LINK
)

961 
	#ADDL_IMPL
 \

963 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

964 
	}

	)
}

965 
DEFINST
(
ADDL
, 0x00,

967 
I¡ALU
, 
F_ICOMP
,

968 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

970 
	#ADDLI_IMPL
 \

972 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

973 }

	)

974 
DEFINST
(
ADDLI
, 0x01,

976 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

977 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

980 
	$CONNECT
(
S4ADDL_LINK
)

982 
	#S4ADDL_IMPL
 \

984 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

985 
	}

	)
}

986 
DEFINST
(
S4ADDL
, 0x00,

988 
I¡ALU
, 
F_ICOMP
,

989 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

991 
	#S4ADDLI_IMPL
 \

993 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

994 }

	)

995 
DEFINST
(
S4ADDLI
, 0x01,

997 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

998 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1001 
	$CONNECT
(
SUBL_LINK
)

1003 
	#SUBL_IMPL
 \

1005 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1006 
	}

	)
}

1007 
DEFINST
(
SUBL
, 0x00,

1009 
I¡ALU
, 
F_ICOMP
,

1010 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1012 
	#SUBLI_IMPL
 \

1014 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1015 }

	)

1016 
DEFINST
(
SUBLI
, 0x01,

1018 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1019 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1022 
	$CONNECT
(
S4SUBL_LINK
)

1024 
	#S4SUBL_IMPL
 \

1026 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1027 
	}

	)
}

1028 
DEFINST
(
S4SUBL
, 0x00,

1030 
I¡ALU
, 
F_ICOMP
,

1031 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1033 
	#S4SUBLI_IMPL
 \

1035 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 2Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1036 }

	)

1037 
DEFINST
(
S4SUBLI
, 0x01,

1039 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1040 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1043 
	$CONNECT
(
CMPBGE_LINK
)

1045 
	#CMPBGE_IMPL
 \

1047 
_i
; \

1048 
qw‹d_t
 
_øv
, 
_rbv
; \

1050 
_øv
 = 
	`GPR
(
RA
); \

1051 
_rbv
 = 
	`GPR
(
RB
); \

1052 
	`SET_GPR
(
RC
, 0); \

1054 
_i
 = 56; _i >= 0; _i -= 8) \

1056 
	`SET_GPR
(
RC
, 
	`GPR
(RC) << 1); \

1057 
	`SET_GPR
(
RC
, (
	`GPR
(RC) \

1058 | ((
_øv
 >> 
_i
 & (
sqw‹d_t
)0xff) >= \

1059 (
_rbv
 >> 
_i
 & (
sqw‹d_t
)0xff)))); \

1061 
	}

	)
}

1062 
DEFINST
(
CMPBGE
, 0x00,

1064 
I¡ALU
, 
F_ICOMP
,

1065 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1067 
	#CMPBGEI_IMPL
 \

1069 
_i
; \

1070 
qw‹d_t
 
_øv
, 
_rbv
; \

1072 
_øv
 = 
	`GPR
(
RA
); \

1073 
_rbv
 = 
IMM
; \

1074 
	`SET_GPR
(
RC
, 0); \

1076 
_i
 = 56; _i >= 0; _i -= 8) \

1078 
	`SET_GPR
(
RC
, 
	`GPR
(RC) << 1); \

1079 
	`SET_GPR
(
RC
, (
	`GPR
(RC) \

1080 | ((
_øv
 >> 
_i
 & (
sqw‹d_t
)0xff) >= \

1081 (
_rbv
 >> 
_i
 & (
sqw‹d_t
)0xff)))); \

1083 }

	)

1084 
DEFINST
(
CMPBGEI
, 0x01,

1086 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1087 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1090 
	$CONNECT
(
S8ADDL_LINK
)

1092 
	#S8ADDL_IMPL
 \

1094 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1095 
	}

	)
}

1096 
DEFINST
(
S8ADDL
, 0x00,

1098 
I¡ALU
, 
F_ICOMP
,

1099 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1101 
	#S8ADDLI_IMPL
 \

1103 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1104 }

	)

1105 
DEFINST
(
S8ADDLI
, 0x01,

1107 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1108 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1111 
	$CONNECT
(
S8SUBL_LINK
)

1113 
	#S8SUBL_IMPL
 \

1115 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1116 
	}

	)
}

1117 
DEFINST
(
S8SUBL
, 0x00,

1119 
I¡ALU
, 
F_ICOMP
,

1120 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1122 
	#S8SUBLI_IMPL
 \

1124 
	`SET_GPR
(
RC
, 
	`SEXT32
(((
	`GPR
(
RA
Ë<< 3Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1125 }

	)

1126 
DEFINST
(
S8SUBLI
, 0x01,

1128 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1129 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1132 
	$CONNECT
(
CMPULT_LINK
)

1134 
	#CMPULT_IMPL
 \

1136 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë< (qw‹d_t)GPR(
RB
)); \

1137 
	}

	)
}

1138 
DEFINST
(
CMPULT
, 0x00,

1140 
I¡ALU
, 
F_ICOMP
,

1141 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1143 
	#CMPULTI_IMPL
 \

1145 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë< (qw‹d_t)
IMM
); \

1146 }

	)

1147 
DEFINST
(
CMPULTI
, 0x01,

1149 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1150 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1153 
	$CONNECT
(
ADDQ_LINK
)

1155 
	#ADDQ_IMPL
 \

1157 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ GPR(
RB
)); \

1158 
	}

	)
}

1159 
DEFINST
(
ADDQ
, 0x00,

1161 
I¡ALU
, 
F_ICOMP
,

1162 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1164 
	#ADDQI_IMPL
 \

1166 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ 
IMM
); \

1167 }

	)

1168 
DEFINST
(
ADDQI
, 0x01,

1170 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1171 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1174 
	$CONNECT
(
S4ADDQ_LINK
)

1176 
	#S4ADDQ_IMPL
 \

1178 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë+ GPR(
RB
)); \

1179 
	}

	)
}

1180 
DEFINST
(
S4ADDQ
, 0x00,

1182 
I¡ALU
, 
F_ICOMP
,

1183 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1185 
	#S4ADDQI_IMPL
 \

1187 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë+ 
IMM
); \

1188 }

	)

1189 
DEFINST
(
S4ADDQI
, 0x01,

1191 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1192 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1195 
	$CONNECT
(
SUBQ_LINK
)

1197 
	#SUBQ_IMPL
 \

1199 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- GPR(
RB
)); \

1200 
	}

	)
}

1201 
DEFINST
(
SUBQ
, 0x00,

1203 
I¡ALU
, 
F_ICOMP
,

1204 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1206 
	#SUBQI_IMPL
 \

1208 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- 
IMM
); \

1209 }

	)

1210 
DEFINST
(
SUBQI
, 0x01,

1212 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1213 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1216 
	$CONNECT
(
S4SUBQ_LINK
)

1218 
	#S4SUBQ_IMPL
 \

1220 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë- GPR(
RB
)); \

1221 
	}

	)
}

1222 
DEFINST
(
S4SUBQ
, 0x00,

1224 
I¡ALU
, 
F_ICOMP
,

1225 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1227 
	#S4SUBQI_IMPL
 \

1229 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 2Ë- 
IMM
); \

1230 }

	)

1231 
DEFINST
(
S4SUBQI
, 0x01,

1233 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1234 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1237 
	$CONNECT
(
CMPEQ_LINK
)

1239 
	#CMPEQ_IMPL
 \

1241 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë=GPR(
RB
)); \

1242 
	}

	)
}

1243 
DEFINST
(
CMPEQ
, 0x00,

1245 
I¡ALU
, 
F_ICOMP
,

1246 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1248 
	#CMPEQI_IMPL
 \

1250 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë=(
qw‹d_t
)
IMM
); \

1251 }

	)

1252 
DEFINST
(
CMPEQI
, 0x01,

1254 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1255 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1258 
	$CONNECT
(
S8ADDQ_LINK
)

1260 
	#S8ADDQ_IMPL
 \

1262 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë+ GPR(
RB
)); \

1263 
	}

	)
}

1264 
DEFINST
(
S8ADDQ
, 0x00,

1266 
I¡ALU
, 
F_ICOMP
,

1267 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1269 
	#S8ADDQI_IMPL
 \

1271 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë+ 
IMM
); \

1272 }

	)

1273 
DEFINST
(
S8ADDQI
, 0x01,

1275 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1276 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1279 
	$CONNECT
(
S8SUBQ_LINK
)

1281 
	#S8SUBQ_IMPL
 \

1283 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë- GPR(
RB
)); \

1284 
	}

	)
}

1285 
DEFINST
(
S8SUBQ
, 0x00,

1287 
I¡ALU
, 
F_ICOMP
,

1288 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1290 
	#S8SUBQI_IMPL
 \

1292 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< 3Ë- 
IMM
); \

1293 }

	)

1294 
DEFINST
(
S8SUBQI
, 0x01,

1296 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1297 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1300 
	$CONNECT
(
CMPULE_LINK
)

1302 
	#CMPULE_IMPL
 \

1304 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë<(qw‹d_t)GPR(
RB
)); \

1305 
	}

	)
}

1306 
DEFINST
(
CMPULE
, 0x00,

1308 
I¡ALU
, 
F_ICOMP
,

1309 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1311 
	#CMPULEI_IMPL
 \

1313 
	`SET_GPR
(
RC
, (
qw‹d_t
)
	`GPR
(
RA
Ë<(qw‹d_t)
IMM
); \

1314 }

	)

1315 
DEFINST
(
CMPULEI
, 0x01,

1317 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1318 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1321 
	$CONNECT
(
ADDLV_LINK
)

1323 
	#ADDLV_IMPL
 \

1326 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1327 
	}

	)
}

1328 
DEFINST
(
ADDLV
, 0x00,

1330 
I¡ALU
, 
F_ICOMP
,

1331 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1333 
	#ADDLVI_IMPL
 \

1336 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë+ 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1337 }

	)

1338 
DEFINST
(
ADDLVI
, 0x01,

1340 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1341 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1344 
	$CONNECT
(
SUBLV_LINK
)

1346 
	#SUBLV_IMPL
 \

1348 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

1349 
	}

	)
}

1350 
DEFINST
(
SUBLV
, 0x00,

1352 
I¡ALU
, 
F_ICOMP
,

1353 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1355 
	#SUBLVI_IMPL
 \

1357 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë- 
IMM
Ë& 
	`ULL
(0xffffffff))); \

1358 }

	)

1359 
DEFINST
(
SUBLVI
, 0x01,

1361 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1362 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1365 
	$CONNECT
(
CMPLT_LINK
)

1367 
	#CMPLT_IMPL
 \

1369 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë< (sqw‹d_t)GPR(
RB
)); \

1370 
	}

	)
}

1371 
DEFINST
(
CMPLT
, 0x00,

1373 
I¡ALU
, 
F_ICOMP
,

1374 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1376 
	#CMPLTI_IMPL
 \

1378 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë< (sqw‹d_t)
IMM
); \

1379 }

	)

1380 
DEFINST
(
CMPLTI
, 0x01,

1382 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1383 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1386 
	$CONNECT
(
ADDQV_LINK
)

1388 
	#ADDQV_IMPL
 \

1391 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ GPR(
RB
)); \

1392 
	}

	)
}

1393 
DEFINST
(
ADDQV
, 0x00,

1395 
I¡ALU
, 
F_ICOMP
,

1396 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1398 
	#ADDQVI_IMPL
 \

1401 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë+ 
IMM
); \

1402 }

	)

1403 
DEFINST
(
ADDQVI
, 0x01,

1405 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1406 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1409 
	$CONNECT
(
SUBQV_LINK
)

1411 
	#SUBQV_IMPL
 \

1414 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- GPR(
RB
)); \

1415 
	}

	)
}

1416 
DEFINST
(
SUBQV
, 0x00,

1418 
I¡ALU
, 
F_ICOMP
,

1419 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1421 
	#SUBQVI_IMPL
 \

1424 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë- 
IMM
); \

1425 }

	)

1426 
DEFINST
(
SUBQVI
, 0x01,

1428 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1429 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1432 
	$CONNECT
(
CMPLE_LINK
)

1434 
	#CMPLE_IMPL
 \

1436 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë<(sqw‹d_t)GPR(
RB
)); \

1437 
	}

	)
}

1438 
DEFINST
(
CMPLE
, 0x00,

1440 
I¡ALU
, 
F_ICOMP
,

1441 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1443 
	#CMPLEI_IMPL
 \

1445 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë<(sqw‹d_t)
IMM
); \

1446 }

	)

1447 
DEFINST
(
CMPLEI
, 0x01,

1449 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1450 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1453 
	$CONNECT
(
INTL
)

1455 
	`DEFLINK
(
AND_LINK
, 0x00, "and_link", 12, 1)

1457 
	`DEFLINK
(
BIC_LINK
, 0x08, "bic_link", 12, 1)

1459 
	`DEFLINK
(
CMOVLBS_LINK
, 0x14, "cmovlbs_link", 12, 1)

1461 
	`DEFLINK
(
CMOVLBC_LINK
, 0x16, "cmovlbc_link", 12, 1)

1464 
	`DEFLINK
(
BIS_LINK
, 0x20, "bis_link", 12, 1)

1466 
	`DEFLINK
(
CMOVEQ_LINK
, 0x24, "cmoveq_link", 12, 1)

1468 
	`DEFLINK
(
CMOVNE_LINK
, 0x26, "cmovne_link", 12, 1)

1470 
	`DEFLINK
(
ORNOT_LINK
, 0x28, "ornot_link", 12, 1)

1472 
	`DEFLINK
(
XOR_LINK
, 0x40, "xor_link", 12, 1)

1474 
	`DEFLINK
(
CMOVLT_LINK
, 0x44, "cmovlt_link", 12, 1)

1476 
	`DEFLINK
(
CMOVGE_LINK
, 0x46, "cmovge_link", 12, 1)

1478 
	`DEFLINK
(
EQV_LINK
, 0x48, "eqv_link", 12, 1)

1481 
	`DEFLINK
(
AMASK_LINK
, 0x61, "amask_link", 12, 1)

1483 
	`DEFLINK
(
CMOVLE_LINK
, 0x64, "cmovle_link", 12, 1)

1485 
	`DEFLINK
(
CMOVGT_LINK
, 0x66, "cmovgt_link", 12, 1)

1492 
	#IMPLVER_IMPL
 \

1494 
	`SET_GPR
(
RC
, 
	`ULL
(2)); \

1495 
	}

	)
}

1496 
DEFINST
(
IMPLVER
, 0x6c,

1498 
NA
, NA,

1499 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

1502 
	$CONNECT
(
AND_LINK
)

1504 
	#AND_IMPL
 \

1506 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& GPR(
RB
)); \

1507 
	}

	)
}

1508 
DEFINST
(
AND
, 0x00,

1510 
I¡ALU
, 
F_ICOMP
,

1511 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1513 
	#ANDI_IMPL
 \

1515 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& 
IMM
); \

1516 }

	)

1517 
DEFINST
(
ANDI
, 0x01,

1519 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1520 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1523 
	$CONNECT
(
BIC_LINK
)

1525 
	#BIC_IMPL
 \

1527 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~GPR(
RB
)); \

1528 
	}

	)
}

1529 
DEFINST
(
BIC
, 0x00,

1531 
I¡ALU
, 
F_ICOMP
,

1532 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1534 
	#BICI_IMPL
 \

1536 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~
IMM
); \

1537 }

	)

1538 
DEFINST
(
BICI
, 0x01,

1540 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1541 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1544 
	$CONNECT
(
CMOVLBS_LINK
)

1546 
	#CMOVLBS_IMPL
 \

1548 i‡(
	`GPR
(
RA
) & 1) \

1549 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1550 
	}

	)
}

1551 
DEFINST
(
CMOVLBS
, 0x00,

1553 
I¡ALU
, 
F_ICOMP
,

1554 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1556 
	#CMOVLBSI_IMPL
 \

1558 i‡(
	`GPR
(
RA
) & 1) \

1559 
	`SET_GPR
(
RC
, 
IMM
); \

1560 }

	)

1561 
DEFINST
(
CMOVLBSI
, 0x01,

1563 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1564 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1567 
	$CONNECT
(
CMOVLBC_LINK
)

1569 
	#CMOVLBC_IMPL
 \

1571 i‡((
	`GPR
(
RA
) & 1) == 0) \

1572 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1573 
	}

	)
}

1574 
DEFINST
(
CMOVLBC
, 0x00,

1576 
I¡ALU
, 
F_ICOMP
,

1577 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1579 
	#CMOVLBCI_IMPL
 \

1581 i‡((
	`GPR
(
RA
) & 1) == 0) \

1582 
	`SET_GPR
(
RC
, 
IMM
); \

1583 }

	)

1584 
DEFINST
(
CMOVLBCI
, 0x01,

1586 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1587 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1590 
	$CONNECT
(
BIS_LINK
)

1592 
	#BIS_IMPL
 \

1594 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| GPR(
RB
)); \

1595 
	}

	)
}

1596 
DEFINST
(
BIS
, 0x00,

1598 
I¡ALU
, 
F_ICOMP
,

1599 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1601 
	#BISI_IMPL
 \

1603 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| 
IMM
); \

1604 }

	)

1605 
DEFINST
(
BISI
, 0x01,

1607 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1608 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1611 
	$CONNECT
(
CMOVEQ_LINK
)

1613 
	#CMOVEQ_IMPL
 \

1615 i‡(
	`GPR
(
RA
) == 0) \

1616 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1617 
	}

	)
}

1618 
DEFINST
(
CMOVEQ
, 0x00,

1620 
I¡ALU
, 
F_ICOMP
,

1621 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1623 
	#CMOVEQI_IMPL
 \

1625 i‡(
	`GPR
(
RA
) == 0) \

1626 
	`SET_GPR
(
RC
, 
IMM
); \

1627 }

	)

1628 
DEFINST
(
CMOVEQI
, 0x01,

1630 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1631 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1634 
	$CONNECT
(
CMOVNE_LINK
)

1636 
	#CMOVNE_IMPL
 \

1638 i‡(
	`GPR
(
RA
) != 0) \

1639 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1640 
	}

	)
}

1641 
DEFINST
(
CMOVNE
, 0x00,

1643 
I¡ALU
, 
F_ICOMP
,

1644 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1646 
	#CMOVNEI_IMPL
 \

1648 i‡(
	`GPR
(
RA
) != 0) \

1649 
	`SET_GPR
(
RC
, 
IMM
); \

1650 }

	)

1651 
DEFINST
(
CMOVNEI
, 0x01,

1653 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1654 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1657 
	$CONNECT
(
ORNOT_LINK
)

1659 
	#ORNOT_IMPL
 \

1661 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| ~GPR(
RB
)); \

1662 
	}

	)
}

1663 
DEFINST
(
ORNOT
, 0x00,

1665 
I¡ALU
, 
F_ICOMP
,

1666 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1668 
	#ORNOTI_IMPL
 \

1670 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë| ~
IMM
); \

1671 }

	)

1672 
DEFINST
(
ORNOTI
, 0x01,

1674 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1675 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1678 
	$CONNECT
(
XOR_LINK
)

1680 
	#XOR_IMPL
 \

1682 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ GPR(
RB
)); \

1683 
	}

	)
}

1684 
DEFINST
(
XOR
, 0x00,

1686 
I¡ALU
, 
F_ICOMP
,

1687 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1689 
	#XORI_IMPL
 \

1691 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ 
IMM
); \

1692 }

	)

1693 
DEFINST
(
XORI
, 0x01,

1695 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1696 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1699 
	$CONNECT
(
CMOVLT_LINK
)

1701 
	#CMOVLT_IMPL
 \

1703 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë< 
	`LL
(0)) \

1704 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1705 
	}

	)
}

1706 
DEFINST
(
CMOVLT
, 0x00,

1708 
I¡ALU
, 
F_ICOMP
,

1709 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1711 
	#CMOVLTI_IMPL
 \

1713 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë< 
	`LL
(0)) \

1714 
	`SET_GPR
(
RC
, 
IMM
); \

1715 }

	)

1716 
DEFINST
(
CMOVLTI
, 0x01,

1718 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1719 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1722 
	$CONNECT
(
CMOVGE_LINK
)

1724 
	#CMOVGE_IMPL
 \

1726 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë>
	`LL
(0)) \

1727 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1728 
	}

	)
}

1729 
DEFINST
(
CMOVGE
, 0x00,

1731 
I¡ALU
, 
F_ICOMP
,

1732 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1734 
	#CMOVGEI_IMPL
 \

1736 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë>
	`LL
(0)) \

1737 
	`SET_GPR
(
RC
, 
IMM
); \

1738 }

	)

1739 
DEFINST
(
CMOVGEI
, 0x01,

1741 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1742 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1745 
	$CONNECT
(
EQV_LINK
)

1747 
	#EQV_IMPL
 \

1749 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ ~GPR(
RB
)); \

1750 
	}

	)
}

1751 
DEFINST
(
EQV
, 0x00,

1753 
I¡ALU
, 
F_ICOMP
,

1754 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1756 
	#EQVI_IMPL
 \

1758 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë^ ~
IMM
); \

1759 }

	)

1760 
DEFINST
(
EQVI
, 0x01,

1762 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1763 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1767 
	$CONNECT
(
AMASK_LINK
)

1775 
	#AMASK_IMPL
 \

1777 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
Ë& 
	`ULL
(0xfffffffffffffef8)); \

1778 
	}

	)
}

1779 
DEFINST
(
AMASK
, 0x00,

1781 
NA
, NA,

1782 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

1784 
	#AMASKI_IMPL
 \

1786 
	`SET_GPR
(
RC
, 
IMM
 & 
	`ULL
(0xfffffffffffffef8)); \

1787 }

	)

1788 
DEFINST
(
AMASKI
, 0x01,

1790 
NA
, 
F_IMM
,

1791 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

1794 
	$CONNECT
(
CMOVLE_LINK
)

1796 
	#CMOVLE_IMPL
 \

1798 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë<
	`LL
(0)) \

1799 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1800 
	}

	)
}

1801 
DEFINST
(
CMOVLE
, 0x00,

1803 
I¡ALU
, 
F_ICOMP
,

1804 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1806 
	#CMOVLEI_IMPL
 \

1808 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë<
	`LL
(0)) \

1809 
	`SET_GPR
(
RC
, 
IMM
); \

1810 }

	)

1811 
DEFINST
(
CMOVLEI
, 0x01,

1813 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1814 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1817 
	$CONNECT
(
CMOVGT_LINK
)

1819 
	#CMOVGT_IMPL
 \

1821 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë> 
	`LL
(0)) \

1822 
	`SET_GPR
(
RC
, 
	`GPR
(
RB
)); \

1823 
	}

	)
}

1824 
DEFINST
(
CMOVGT
, 0x00,

1826 
I¡ALU
, 
F_ICOMP
,

1827 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1829 
	#CMOVGTI_IMPL
 \

1831 i‡((
sqw‹d_t
)
	`GPR
(
RA
Ë> 
	`LL
(0)) \

1832 
	`SET_GPR
(
RC
, 
IMM
); \

1833 }

	)

1834 
DEFINST
(
CMOVGTI
, 0x01,

1836 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1837 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1840 
	$CONNECT
(
INTS
)

1842 
	`DEFLINK
(
MSKBL_LINK
, 0x02, "mskbl_link", 12, 1)

1844 
	`DEFLINK
(
EXTBL_LINK
, 0x06, "extbl_link", 12, 1)

1846 
	`DEFLINK
(
INSBL_LINK
, 0x0b, "insbl_link", 12, 1)

1848 
	`DEFLINK
(
MSKWL_LINK
, 0x12, "mskwl_link", 12, 1)

1850 
	`DEFLINK
(
EXTWL_LINK
, 0x16, "extwl_link", 12, 1)

1852 
	`DEFLINK
(
INSWL_LINK
, 0x1b, "inswl_link", 12, 1)

1854 
	`DEFLINK
(
MSKLL_LINK
, 0x22, "mskll_link", 12, 1)

1856 
	`DEFLINK
(
EXTLL_LINK
, 0x26, "extll_link", 12, 1)

1858 
	`DEFLINK
(
INSLL_LINK
, 0x2b, "insll_link", 12, 1)

1860 
	`DEFLINK
(
ZAP_LINK
, 0x30, "zap_link", 12, 1)

1862 
	`DEFLINK
(
ZAPNOT_LINK
, 0x31, "zapnot_link", 12, 1)

1864 
	`DEFLINK
(
MSKQL_LINK
, 0x32, "mskql_link", 12, 1)

1866 
	`DEFLINK
(
SRL_LINK
, 0x34, "srl_link", 12, 1)

1868 
	`DEFLINK
(
EXTQL_LINK
, 0x36, "extql_link", 12, 1)

1870 
	`DEFLINK
(
SLL_LINK
, 0x39, "sll_link", 12, 1)

1872 
	`DEFLINK
(
INSQL_LINK
, 0x3b, "insql_link", 12, 1)

1874 
	`DEFLINK
(
SRA_LINK
, 0x3c, "sra_link", 12, 1)

1876 
	`DEFLINK
(
MSKWH_LINK
, 0x52, "mskwh_link", 12, 1)

1878 
	`DEFLINK
(
INSWH_LINK
, 0x57, "inswh_link", 12, 1)

1880 
	`DEFLINK
(
EXTWH_LINK
, 0x5a, "extwh_link", 12, 1)

1882 
	`DEFLINK
(
MSKLH_LINK
, 0x62, "msklh_link", 12, 1)

1884 
	`DEFLINK
(
INSLH_LINK
, 0x67, "inslh_link", 12, 1)

1886 
	`DEFLINK
(
EXTLH_LINK
, 0x6a, "extlh_link", 12, 1)

1888 
	`DEFLINK
(
MSKQH_LINK
, 0x72, "mskqh_link", 12, 1)

1890 
	`DEFLINK
(
INSQH_LINK
, 0x77, "insqh_link", 12, 1)

1892 
	`DEFLINK
(
EXTQH_LINK
, 0x7a, "extqh_link", 12, 1)

1895 
	$CONNECT
(
MSKBL_LINK
)

1897 
	#MSKBL_IMPL
 \

1899 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffË<< ((GPR(
RB
) & 0x7) * 8))); \

1900 
	}

	)
}

1901 
DEFINST
(
MSKBL
, 0x00,

1903 
I¡ALU
, 
F_ICOMP
,

1904 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1906 
	#MSKBLI_IMPL
 \

1908 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffË<< ((
IMM
 & 0x7) * 8))); \

1909 }

	)

1910 
DEFINST
(
MSKBLI
, 0x01,

1912 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1913 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1916 
	$CONNECT
(
EXTBL_LINK
)

1918 
	#EXTBL_IMPL
 \

1920 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((GPR(
RB
Ë& 0x7Ë* 8)Ë& 
	`LL
(0xff)); \

1921 
	}

	)
}

1922 
DEFINST
(
EXTBL
, 0x00,

1924 
I¡ALU
, 
F_ICOMP
,

1925 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1927 
	#EXTBLI_IMPL
 \

1929 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7Ë* 8)Ë& 
	`LL
(0xff)); \

1930 }

	)

1931 
DEFINST
(
EXTBLI
, 0x01,

1933 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1934 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1937 
	$CONNECT
(
INSBL_LINK
)

1939 
	#INSBL_IMPL
 \

1941 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

1942 & (
	`ULL
(0xffË<< ((
	`GPR
(
RB
) & 0x7) * 8)))); \

1943 
	}

	)
}

1944 
DEFINST
(
INSBL
, 0x00,

1946 
I¡ALU
, 
F_ICOMP
,

1947 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1949 
	#INSBLI_IMPL
 \

1951 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

1952 & (
	`ULL
(0xffË<< ((
IMM
 & 0x7) * 8)))); \

1953 }

	)

1954 
DEFINST
(
INSBLI
, 0x01,

1956 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1957 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1960 
	$CONNECT
(
MSKWL_LINK
)

1962 
	#MSKWL_IMPL
 \

1964 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË<< ((GPR(
RB
) & 0x7) * 8))); \

1965 
	}

	)
}

1966 
DEFINST
(
MSKWL
, 0x00,

1968 
I¡ALU
, 
F_ICOMP
,

1969 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1971 
	#MSKWLI_IMPL
 \

1973 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË<< ((
IMM
 & 0x7) * 8))); \

1974 }

	)

1975 
DEFINST
(
MSKWLI
, 0x01,

1977 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1978 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

1981 
	$CONNECT
(
EXTWL_LINK
)

1983 
	#EXTWL_IMPL
 \

1985 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((GPR(
RB
Ë& 0x7Ë* 8)Ë& 
	`LL
(0xffff)); \

1986 
	}

	)
}

1987 
DEFINST
(
EXTWL
, 0x00,

1989 
I¡ALU
, 
F_ICOMP
,

1990 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

1992 
	#EXTWLI_IMPL
 \

1994 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7Ë* 8)Ë& 
	`LL
(0xffff)); \

1995 }

	)

1996 
DEFINST
(
EXTWLI
, 0x01,

1998 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

1999 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2002 
	$CONNECT
(
INSWL_LINK
)

2004 
	#INSWL_IMPL
 \

2006 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

2007 & (
	`ULL
(0xffffË<< ((
	`GPR
(
RB
) & 0x7) * 8)))); \

2008 
	}

	)
}

2009 
DEFINST
(
INSWL
, 0x00,

2011 
I¡ALU
, 
F_ICOMP
,

2012 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2014 
	#INSWLI_IMPL
 \

2016 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

2017 & (
	`ULL
(0xffffË<< ((
IMM
 & 0x7) * 8)))); \

2018 }

	)

2019 
DEFINST
(
INSWLI
, 0x01,

2021 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2022 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2025 
	$CONNECT
(
MSKLL_LINK
)

2027 
	#MSKLL_IMPL
 \

2029 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffË<< ((GPR(
RB
) & 0x7) * 8))); \

2030 
	}

	)
}

2031 
DEFINST
(
MSKLL
, 0x00,

2033 
I¡ALU
, 
F_ICOMP
,

2034 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2036 
	#MSKLLI_IMPL
 \

2038 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffË<< ((
IMM
 & 0x7) * 8))); \

2039 }

	)

2040 
DEFINST
(
MSKLLI
, 0x01,

2042 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2043 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2046 
	$CONNECT
(
EXTLL_LINK
)

2048 
	#EXTLL_IMPL
 \

2050 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((GPR(
RB
Ë& 0x7Ë* 8)Ë& 
	`LL
(0xffffffff)); \

2051 
	}

	)
}

2052 
DEFINST
(
EXTLL
, 0x00,

2054 
I¡ALU
, 
F_ICOMP
,

2055 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2057 
	#EXTLLI_IMPL
 \

2059 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7Ë* 8)Ë& 
	`LL
(0xffffffff)); \

2060 }

	)

2061 
DEFINST
(
EXTLLI
, 0x01,

2063 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2064 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2067 
	$CONNECT
(
INSLL_LINK
)

2069 
	#INSLL_IMPL
 \

2071 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

2072 & (
	`ULL
(0xffffffffË<< ((
	`GPR
(
RB
) & 0x7) * 8)))); \

2073 
	}

	)
}

2074 
DEFINST
(
INSLL
, 0x00,

2076 
I¡ALU
, 
F_ICOMP
,

2077 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2079 
	#INSLLI_IMPL
 \

2081 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

2082 & (
	`ULL
(0xffffffffË<< ((
IMM
 & 0x7) * 8)))); \

2083 }

	)

2084 
DEFINST
(
INSLLI
, 0x01,

2086 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2087 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2090 
	$CONNECT
(
ZAP_LINK
)

2092 
	#ZAP_IMPL
 \

2094 
_i
; \

2095 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2096 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2097 
qw‹d_t
 
_rbv
 = 
	`GPR
(
RB
); \

2099 
	`SET_GPR
(
RC
, 0); \

2100 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2102 i‡(
_i
 & ~
_rbv
) \

2103 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2104 
_ãmp
 = _temp << 8; \

2106 
	}

	)
}

2107 
DEFINST
(
ZAP
, 0x00,

2109 
I¡ALU
, 
F_ICOMP
,

2110 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2112 
	#ZAPI_IMPL
 \

2114 
_i
; \

2115 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2116 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2117 
qw‹d_t
 
_rbv
 = 
IMM
; \

2119 
	`SET_GPR
(
RC
, 0); \

2120 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2122 i‡(
_i
 & ~
_rbv
) \

2123 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2124 
_ãmp
 = _temp << 8; \

2126 }

	)

2127 
DEFINST
(
ZAPI
, 0x01,

2129 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2130 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2133 
	$CONNECT
(
ZAPNOT_LINK
)

2135 
	#ZAPNOT_IMPL
 \

2137 
_i
; \

2138 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2139 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2140 
qw‹d_t
 
_rbv
 = 
	`GPR
(
RB
); \

2142 
	`SET_GPR
(
RC
, 0); \

2143 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2145 i‡(
_i
 & 
_rbv
) \

2146 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2147 
_ãmp
 = _temp << 8; \

2149 
	}

	)
}

2150 
DEFINST
(
ZAPNOT
, 0x00,

2152 
I¡ALU
, 
F_ICOMP
,

2153 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2155 
	#ZAPNOTI_IMPL
 \

2157 
_i
; \

2158 
qw‹d_t
 
_ãmp
 = 
	`LL
(0xff); \

2159 
qw‹d_t
 
_øv
 = 
	`GPR
(
RA
); \

2160 
qw‹d_t
 
_rbv
 = 
IMM
; \

2162 
	`SET_GPR
(
RC
, 0); \

2163 
_i
 = 1; _i < 0x100; _i = _i << 1) \

2165 i‡(
_i
 & 
_rbv
) \

2166 
	`SET_GPR
(
RC
, 
	`GPR
(RCË| (
_øv
 & 
_ãmp
)); \

2167 
_ãmp
 = _temp << 8; \

2169 }

	)

2170 
DEFINST
(
ZAPNOTI
, 0x01,

2172 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2173 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2176 
	$CONNECT
(
MSKQL_LINK
)

2178 
	#MSKQL_IMPL
 \

2180 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
) \

2181 & ~(
	`ULL
(0xffffffffffffffff) \

2182 << ((
	`GPR
(
RB
) & 0x7) * 8)))); \

2183 
	}

	)
}

2184 
DEFINST
(
MSKQL
, 0x00,

2186 
I¡ALU
, 
F_ICOMP
,

2187 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2189 
	#MSKQLI_IMPL
 \

2191 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
) \

2192 & ~(
	`ULL
(0xffffffffffffffffË<< ((
IMM
 & 0x7) * 8)))); \

2193 }

	)

2194 
DEFINST
(
MSKQLI
, 0x01,

2196 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2197 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2200 
	$CONNECT
(
SRL_LINK
)

2202 
	#SRL_IMPL
 \

2204 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> (GPR(
RB
) & 0x3f)); \

2205 
	}

	)
}

2206 
DEFINST
(
SRL
, 0x00,

2208 
I¡ALU
, 
F_ICOMP
,

2209 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2211 
	#SRLI_IMPL
 \

2213 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> (
IMM
 & 0x3f)); \

2214 }

	)

2215 
DEFINST
(
SRLI
, 0x01,

2217 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2218 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2221 
	$CONNECT
(
EXTQL_LINK
)

2223 
	#EXTQL_IMPL
 \

2225 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> ((GPR(
RB
) & 0x7) * 8)); \

2226 
	}

	)
}

2227 
DEFINST
(
EXTQL
, 0x00,

2229 
I¡ALU
, 
F_ICOMP
,

2230 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2232 
	#EXTQLI_IMPL
 \

2234 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë>> ((
IMM
 & 0x7) * 8)); \

2235 }

	)

2236 
DEFINST
(
EXTQLI
, 0x01,

2238 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2239 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2242 
	$CONNECT
(
SLL_LINK
)

2244 
	#SLL_IMPL
 \

2246 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë<< (GPR(
RB
) & 0x3f)); \

2247 
	}

	)
}

2248 
DEFINST
(
SLL
, 0x00,

2250 
I¡ALU
, 
F_ICOMP
,

2251 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2253 
	#SLLI_IMPL
 \

2255 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë<< (
IMM
 & 0x3f)); \

2256 }

	)

2257 
DEFINST
(
SLLI
, 0x01,

2259 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2260 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2263 
	$CONNECT
(
INSQL_LINK
)

2265 
	#INSQL_IMPL
 \

2267 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((GPR(
RB
) & 0x7) * 8)) \

2268 & (
	`ULL
(0xffffffffffffffffË<< ((
	`GPR
(
RB
) & 0x7) * 8))));\

2269 
	}

	)
}

2270 
DEFINST
(
INSQL
, 0x00,

2272 
I¡ALU
, 
F_ICOMP
,

2273 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2275 
	#INSQLI_IMPL
 \

2277 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë<< ((
IMM
 & 0x7) * 8)) \

2278 & (
	`ULL
(0xffffffffffffffffË<< ((
IMM
 & 0x7) * 8)))); \

2279 }

	)

2280 
DEFINST
(
INSQLI
, 0x01,

2282 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2283 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2285 
	$CONNECT
(
SRA_LINK
)

2287 
	#SRA_IMPL
 \

2289 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë>> (GPR(
RB
) & 0x3f)); \

2290 
	}

	)
}

2291 
DEFINST
(
SRA
, 0x00,

2293 
I¡ALU
, 
F_ICOMP
,

2294 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2296 
	#SRAI_IMPL
 \

2298 
	`SET_GPR
(
RC
, (
sqw‹d_t
)
	`GPR
(
RA
Ë>> (
IMM
 & 0x3f)); \

2299 }

	)

2300 
DEFINST
(
SRAI
, 0x01,

2302 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2303 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2306 
	$CONNECT
(
MSKWH_LINK
)

2308 
	#MSKWH_IMPL
 \

2310 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2311 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË>> ((8 - (GPR(
RB
) & 0x7)) * 8)));\

2313 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2314 
	}

	)
}

2315 
DEFINST
(
MSKWH
, 0x00,

2317 
I¡ALU
, 
F_ICOMP
,

2318 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2320 
	#MSKWHI_IMPL
 \

2322 i‡((
IMM
 & 0x7) != 0) \

2323 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffË>> ((8 - (
IMM
 & 0x7)) * 8))); \

2325 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2326 }

	)

2327 
DEFINST
(
MSKWHI
, 0x01,

2329 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2330 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2333 
	$CONNECT
(
INSWH_LINK
)

2335 
	#INSWH_IMPL
 \

2337 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2338 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (GPR(
RB
) & 0x7) * 8)) >> 1 \

2339 & (
	`ULL
(0xffffË>> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8)))); \

2341 
	`SET_GPR
(
RC
, 0); \

2342 
	}

	)
}

2343 
DEFINST
(
INSWH
, 0x00,

2345 
I¡ALU
, 
F_ICOMP
,

2346 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2348 
	#INSWHI_IMPL
 \

2350 i‡((
IMM
 & 0x7) != 0) \

2351 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (
IMM
 & 0x7) * 8)) >> 1 \

2352 & (
	`ULL
(0xffffË>> ((8 - (
IMM
 & 0x7)) * 8)))); \

2354 
	`SET_GPR
(
RC
, 0); \

2355 }

	)

2356 
DEFINST
(
INSWHI
, 0x01,

2358 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2359 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2362 
	$CONNECT
(
EXTWH_LINK
)

2364 
	#EXTWH_IMPL
 \

2366 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (GPR(
RB
)&0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffff));\

2367 
	}

	)
}

2368 
DEFINST
(
EXTWH
, 0x00,

2370 
I¡ALU
, 
F_ICOMP
,

2371 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2373 
	#EXTWHI_IMPL
 \

2375 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (
IMM
 & 0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffff));\

2376 }

	)

2377 
DEFINST
(
EXTWHI
, 0x01,

2379 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2380 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2383 
	$CONNECT
(
MSKLH_LINK
)

2385 
	#MSKLH_IMPL
 \

2387 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2388 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffff) >> \

2389 ((8 - (
	`GPR
(
RB
) & 0x7)) * 8))); \

2391 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2392 
	}

	)
}

2393 
DEFINST
(
MSKLH
, 0x00,

2395 
I¡ALU
, 
F_ICOMP
,

2396 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2398 
	#MSKLHI_IMPL
 \

2400 i‡((
IMM
 & 0x7) != 0) \

2401 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffff) >> \

2402 ((8 - (
IMM
 & 0x7)) * 8))); \

2404 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2405 }

	)

2406 
DEFINST
(
MSKLHI
, 0x01,

2408 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2409 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2412 
	$CONNECT
(
INSLH_LINK
)

2414 
	#INSLH_IMPL
 \

2416 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2417 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (GPR(
RB
) & 0x7) * 8)) >> 1 \

2418 & (
	`ULL
(0xffffffffË>> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8))));\

2420 
	`SET_GPR
(
RC
, 0); \

2421 
	}

	)
}

2422 
DEFINST
(
INSLH
, 0x00,

2424 
I¡ALU
, 
F_ICOMP
,

2425 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2427 
	#INSLHI_IMPL
 \

2429 i‡((
IMM
 & 0x7) != 0) \

2430 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (
IMM
 & 0x7) * 8)) >> 1 \

2431 & (
	`ULL
(0xffffffffË>> ((8 - (
IMM
 & 0x7)) * 8)))); \

2432 
	`SET_GPR
(
RC
, 0); \

2433 }

	)

2434 
DEFINST
(
INSLHI
, 0x01,

2436 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2437 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2440 
	$CONNECT
(
EXTLH_LINK
)

2442 
	#EXTLH_IMPL
 \

2444 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
) << \

2445 ((64 - (
	`GPR
(
RB
Ë& 0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffffffff));\

2446 
	}

	)
}

2447 
DEFINST
(
EXTLH
, 0x00,

2449 
I¡ALU
, 
F_ICOMP
,

2450 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2452 
	#EXTLHI_IMPL
 \

2454 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (
IMM
&0x7Ë* 8Ë& 0x3f)Ë& 
	`LL
(0xffffffff));\

2455 }

	)

2456 
DEFINST
(
EXTLHI
, 0x01,

2458 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2459 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2462 
	$CONNECT
(
MSKQH_LINK
)

2464 
	#MSKQH_IMPL
 \

2466 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2467 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffffffffff) \

2468 >> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8)))); \

2470 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2471 
	}

	)
}

2472 
DEFINST
(
MSKQH
, 0x00,

2474 
I¡ALU
, 
F_ICOMP
,

2475 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2477 
	#MSKQHI_IMPL
 \

2479 i‡((
IMM
 & 0x7) != 0) \

2480 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë& ~(
	`ULL
(0xffffffffffffffff) \

2481 >> ((8 - (
IMM
 & 0x7)) * 8)))); \

2483 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
)); \

2484 }

	)

2485 
DEFINST
(
MSKQHI
, 0x01,

2487 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2488 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2491 
	$CONNECT
(
INSQH_LINK
)

2493 
	#INSQH_IMPL
 \

2495 i‡((
	`GPR
(
RB
) & 0x7) != 0) \

2496 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (GPR(
RB
) & 0x7) * 8)) >> 1 \

2497 & (
	`ULL
(0xffffffffffffffff) \

2498 >> ((8 - (
	`GPR
(
RB
) & 0x7)) * 8)))); \

2500 
	`SET_GPR
(
RC
, 0); \

2501 
	}

	)
}

2502 
DEFINST
(
INSQH
, 0x00,

2504 
I¡ALU
, 
F_ICOMP
,

2505 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2507 
	#INSQHI_IMPL
 \

2509 i‡((
IMM
 & 0x7) != 0) \

2510 
	`SET_GPR
(
RC
, ((
	`GPR
(
RA
Ë>> (63 - (
IMM
 & 0x7) * 8)) >> 1 \

2511 & (
	`ULL
(0xffffffffffffffff) \

2512 >> ((8 - (
IMM
 & 0x7)) * 8)))); \

2514 
	`SET_GPR
(
RC
, 0); \

2515 }

	)

2516 
DEFINST
(
INSQHI
, 0x01,

2518 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2519 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2522 
	$CONNECT
(
EXTQH_LINK
)

2524 
	#EXTQH_IMPL
 \

2526 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (GPR(
RB
) & 0x7) * 8) & 0x3f))); \

2527 
	}

	)
}

2528 
DEFINST
(
EXTQH
, 0x00,

2530 
I¡ALU
, 
F_ICOMP
,

2531 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2533 
	#EXTQHI_IMPL
 \

2535 
	`SET_GPR
(
RC
, (
	`GPR
(
RA
Ë<< ((64 - (
IMM
 & 0x7) * 8) & 0x3f))); \

2536 }

	)

2537 
DEFINST
(
EXTQHI
, 0x01,

2539 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

2540 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2543 
	$CONNECT
(
INTM
)

2550 
	`DEFLINK
(
MULL_LINK
, 0x00, "mull_link", 12, 1)

2552 
	`DEFLINK
(
MULQ_LINK
, 0x20, "mulq_link", 12, 1)

2554 
	`DEFLINK
(
UMULH_LINK
, 0x30, "umulh_link", 12, 1)

2557 
	$CONNECT
(
MULL_LINK
)

2559 
	#MULL_IMPL
 \

2561 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë* GPR(
RB
)Ë& 
	`ULL
(0xffffffff))); \

2562 
	}

	)
}

2563 
DEFINST
(
MULL
, 0x00,

2565 
I¡MULT
, 
F_ICOMP
,

2566 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2568 
	#MULLI_IMPL
 \

2570 
	`SET_GPR
(
RC
, 
	`SEXT32
((
	`GPR
(
RA
Ë* 
IMM
Ë& 
	`ULL
(0xffffffff))); \

2571 }

	)

2572 
DEFINST
(
MULLI
, 0x01,

2574 
I¡MULT
, 
F_ICOMP
|
F_IMM
,

2575 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2578 
	$CONNECT
(
MULQ_LINK
)

2580 
	#MULQ_IMPL
 \

2582 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë* GPR(
RB
)); \

2583 
	}

	)
}

2584 
DEFINST
(
MULQ
, 0x00,

2586 
I¡MULT
, 
F_ICOMP
,

2587 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2589 
	#MULQI_IMPL
 \

2591 
	`SET_GPR
(
RC
, 
	`GPR
(
RA
Ë* 
IMM
); \

2592 }

	)

2593 
DEFINST
(
MULQI
, 0x01,

2595 
I¡MULT
, 
F_ICOMP
|
F_IMM
,

2596 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2599 
	$CONNECT
(
UMULH_LINK
)

2601 
	#UMULH_IMPL
 \

2603 
sqw‹d_t
 
_v1
 = 
	`GPR
(
RA
); \

2604 
sqw‹d_t
 
_v2
 = 
	`GPR
(
RB
); \

2605 
qw‹d_t
 
_ªsu…
; \

2606 
qw‹d_t
 
_a
, 
_b
, 
_c
, 
_d
; \

2607 
qw‹d_t
 
_bd
, 
_ad
, 
_cb
, 
_ac
; \

2608 
qw‹d_t
 
_mid
, 
_mid2
, 
_ˇºy_mid
 = 0; \

2610 
_a
 = (
_v1
 >> 32Ë& 
	`LL
(0xffffffff); \

2611 
_b
 = 
_v1
 & 
	`LL
(0xffffffff); \

2612 
_c
 = (
_v2
 >> 32Ë& 
	`LL
(0xffffffff); \

2613 
_d
 = 
_v2
 & 
	`LL
(0xffffffff); \

2616 
_bd
 = 
_b
 * 
_d
; \

2617 
_ad
 = 
_a
 * 
_d
; \

2618 
_cb
 = 
_c
 * 
_b
; \

2619 
_ac
 = 
_a
 * 
_c
; \

2622 
_mid
 = 
_ad
 + 
_cb
; \

2623 i‡(
	`ARITH_OVFL
(
_mid
, 
_ad
, 
_cb
)) \

2624 
_ˇºy_mid
 = 1; \

2626 
_mid2
 = 
_mid
 + ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)); \

2627 i‡(
	`ARITH_OVFL
(
_mid2
, 
_mid
, ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)))) \

2628 
_ˇºy_mid
 += 1; \

2629 
_ªsu…
 = \

2630 
_ac
 + (
_ˇºy_mid
 << 32Ë+ ((
_mid2
 >> 32Ë& 
	`LL
(0xffffffff)); \

2633 
	`SET_GPR
(
RC
, 
_ªsu…
); \

2634 
	}

	)
}

2635 
DEFINST
(
UMULH
, 0x00,

2637 
I¡MULT
, 
F_ICOMP
,

2638 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

2640 
	#UMULHI_IMPL
 \

2642 
sqw‹d_t
 
_v1
 = 
	`GPR
(
RA
); \

2643 
sqw‹d_t
 
_v2
 = 
IMM
; \

2644 
qw‹d_t
 
_ªsu…
; \

2645 
qw‹d_t
 
_a
, 
_b
, 
_c
, 
_d
; \

2646 
qw‹d_t
 
_bd
, 
_ad
, 
_cb
, 
_ac
; \

2647 
qw‹d_t
 
_mid
, 
_mid2
, 
_ˇºy_mid
 = 0; \

2649 
_a
 = (
_v1
 >> 32Ë& 
	`LL
(0xffffffff); \

2650 
_b
 = 
_v1
 & 
	`LL
(0xffffffff); \

2651 
_c
 = (
_v2
 >> 32Ë& 
	`LL
(0xffffffff); \

2652 
_d
 = 
_v2
 & 
	`LL
(0xffffffff); \

2654 
_bd
 = 
_b
 * 
_d
; \

2655 
_ad
 = 
_a
 * 
_d
; \

2656 
_cb
 = 
_c
 * 
_b
; \

2657 
_ac
 = 
_a
 * 
_c
; \

2659 
_mid
 = 
_ad
 + 
_cb
; \

2660 i‡(
	`ARITH_OVFL
(
_mid
, 
_ad
, 
_cb
)) \

2661 
_ˇºy_mid
 = 1; \

2663 
_mid2
 = 
_mid
 + ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)); \

2664 i‡(
	`ARITH_OVFL
(
_mid2
, 
_mid
, ((
_bd
 >> 32Ë& 
	`LL
(0xffffffff)))) \

2665 
_ˇºy_mid
 += 1; \

2666 
_ªsu…
 = \

2667 
_ac
 + (
_ˇºy_mid
 << 32Ë+ ((
_mid2
 >> 32Ë& 
	`LL
(0xffffffff)); \

2669 
	`SET_GPR
(
RC
, 
_ªsu…
); \

2670 }

	)

2671 
DEFINST
(
UMULHI
, 0x01,

2673 
I¡MULT
, 
F_ICOMP
|
F_IMM
,

2674 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

2679 
	$CONNECT
(
ITFP
)

2681 
	#ITOFS_IMPL
 \

2683 
sqw‹d_t
 
_l⁄ghﬁd
, 
_e1
, 
_e2
; \

2685 
_l⁄ghﬁd
 = 
	`GPR
(
RA
Ë& 
	`ULL
(0xffffffff); \

2687 
_e1
 = 
_l⁄ghﬁd
 & 0x40000000; \

2688 
_e2
 = (
_l⁄ghﬁd
 >> 23Ë& 
	`ULL
(0x7f); \

2689 i‡(
_e1
) \

2691 i‡(
_e2
 =
	`ULL
(0x3f800000)) \

2692 
_e2
 = 
	`ULL
(0x7ff); \

2694 
_e2
 |
	`ULL
(0x400); \

2698 i‡(
_e2
 == 0) \

2699 
_e2
 = 0; \

2701 
_e2
 |
	`ULL
(0x380); \

2703 
	`SET_FPR_Q
(
RC
, (((
_l⁄ghﬁd
 & 
	`ULL
(0x80000000)) << 32) \

2704 | (
_e2
 << 52Ë| ((
_l⁄ghﬁd
 & 
	`ULL
(0x7fffff)) << 29)));\

2705 
	}

	)
}

2706 
DEFINST
(
ITOFS
, 0x04,

2708 
FlﬂtCVT
, 
F_FCOMP
,

2709 
DFPR
(
RC
), 
DNA
, 
DGPR
(
RA
), DNA, DNA)

2711 
	#SQRTF_IMPL
 \

2714 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

2715 }

	)

2716 
DEFINST
(
SQRTF
, 0x0a,

2718 
NA
, NA,

2719 
DNA
, DNA, DNA, DNA, DNA)

2722 
	#SQRTS_IMPL
 \

2724 i‡(
	`FPR
(
RB
) < 0.0) \

2725 
	`DECLARE_FAULT
(
md_Áu…_övÆid
); \

2728 
	`SET_FPR
(
RC
, (
dÊﬂt_t
)
	`sqπ
(()
	`FPR
(
RB
))); \

2729 }

	)

2730 
DEFINST
(
SQRTS
, 0x0b,

2732 
FlﬂtSQRT
, 
F_FCOMP
,

2733 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2735 
	#ITOFF_IMPL
 \

2738 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

2739 }

	)

2740 
DEFINST
(
ITOFF
, 0x14,

2742 
NA
, NA,

2743 
DNA
, DNA, DNA, DNA, DNA)

2745 
	#ITOFT_IMPL
 \

2747 
	`SET_FPR_Q
(
RC
, 
	`GPR
(
RA
)); \

2748 }

	)

2749 
DEFINST
(
ITOFT
, 0x24,

2751 
FlﬂtCVT
, 
F_FCOMP
,

2752 
DFPR
(
RC
), 
DNA
, 
DGPR
(
RA
), DNA, DNA)

2754 
	#SQRTG_IMPL
 \

2757 
	`DECLARE_FAULT
(
md_Áu…_unim∂
); \

2758 }

	)

2759 
DEFINST
(
SQRTG
, 0x2a,

2761 
NA
, NA,

2762 
DNA
, DNA, DNA, DNA, DNA)

2764 
	#SQRTT_IMPL
 \

2766 i‡(
	`FPR
(
RB
) < 0.0) \

2767 
	`DECLARE_FAULT
(
md_Áu…_övÆid
); \

2769 
	`SET_FPR
(
RC
, (
dÊﬂt_t
)
	`sqπ
(()
	`FPR
(
RB
))); \

2770 }

	)

2771 
DEFINST
(
SQRTT
, 0x2b,

2773 
NA
, NA,

2774 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2777 
	$CONNECT
(
FLTI
)

2779 
	#ADDS_IMPL
 \

2782 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë+ FPR(
RB
)); \

2783 
	}

	)
}

2784 
DEFINST
(
ADDS
, 0x00,

2786 
FlﬂtADD
, 
F_FCOMP
,

2787 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2789 
	#SUBS_IMPL
 \

2792 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë- FPR(
RB
)); \

2793 }

	)

2794 
DEFINST
(
SUBS
, 0x01,

2796 
FlﬂtADD
, 
F_FCOMP
,

2797 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2799 
	#MULS_IMPL
 \

2802 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë* FPR(
RB
)); \

2803 }

	)

2804 
DEFINST
(
MULS
, 0x02,

2806 
FlﬂtMULT
, 
F_FCOMP
,

2807 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2809 
	#DIVS_IMPL
 \

2812 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë/ FPR(
RB
)); \

2813 }

	)

2814 
DEFINST
(
DIVS
, 0x03,

2816 
FlﬂtDIV
, 
F_FCOMP
,

2817 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2819 
	#ADDT_IMPL
 \

2821 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë+ FPR(
RB
)); \

2822 }

	)

2823 
DEFINST
(
ADDT
, 0x20,

2825 
FlﬂtADD
, 
F_FCOMP
,

2826 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2828 
	#SUBT_IMPL
 \

2830 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë- FPR(
RB
)); \

2831 }

	)

2832 
DEFINST
(
SUBT
, 0x21,

2834 
FlﬂtADD
, 
F_FCOMP
,

2835 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2837 
	#MULT_IMPL
 \

2839 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë* FPR(
RB
)); \

2840 }

	)

2841 
DEFINST
(
MULT
, 0x22,

2843 
FlﬂtMULT
, 
F_FCOMP
,

2844 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2846 
	#DIVT_IMPL
 \

2848 
	`SET_FPR
(
RC
, 
	`FPR
(
RA
Ë/ FPR(
RB
)); \

2849 }

	)

2850 
DEFINST
(
DIVT
, 0x23,

2852 
FlﬂtDIV
, 
F_FCOMP
,

2853 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2855 
	#CMPTUN_IMPL
 \

2857 
	`SET_FPR
(
RC
, (
	`IS_IEEEFP_DBL_NAN
(
	`FPR_Q
(
RA
)Ë|| IS_IEEEFP_DBL_NAN(FPR_Q(
RB
)))\

2860 }

	)

2861 
DEFINST
(
CMPTUN
, 0x24,

2863 
FlﬂtCMP
, 
F_FCOMP
,

2864 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2866 
	#CMPTEQ_IMPL
 \

2868 
	`SET_FPR
(
RC
, (((
	`FPR_Q
(
RA
Ë=FPR_Q(
RB
)) \

2869 || (
	`FPR_Q
(
RA
Ë<< 1 =
	`ULL
(0) \

2870 && 
	`FPR_Q
(
RB
Ë<< 1 =
	`ULL
(0))) \

2873 }

	)

2874 
DEFINST
(
CMPTEQ
, 0x25,

2876 
FlﬂtADD
, 
F_FCOMP
,

2877 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2879 
	#CMPTLT_IMPL
 \

2881 
	`SET_FPR
(
RC
, (
	`FPR
(
RA
Ë< FPR(
RB
)) ? 2.0 : 0.0); \

2882 }

	)

2883 
DEFINST
(
CMPTLT
, 0x26,

2885 
FlﬂtADD
, 
F_FCOMP
,

2886 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2888 
	#CMPTLE_IMPL
 \

2890 
	`SET_FPR
(
RC
, (
	`FPR
(
RA
Ë<FPR(
RB
)) ? 2.0 : 0.0); \

2891 }

	)

2892 
DEFINST
(
CMPTLE
, 0x27,

2894 
FlﬂtADD
, 
F_FCOMP
,

2895 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2897 
	#CVTTS_IMPL
 \

2899 
	`SET_FPR
(
RC
, ()
	`FPR
(
RB
)); \

2900 }

	)

2901 
DEFINST
(
CVTTS
, 0x2c,

2903 
FlﬂtADD
, 
F_FCOMP
,

2904 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2906 
	#CVTTQ_IMPL
 \

2908 
	`SET_FPR_Q
(
RC
, (
sqw‹d_t
)
	`FPR
(
RB
)); \

2909 }

	)

2910 
DEFINST
(
CVTTQ
, 0x2f,

2912 
FlﬂtADD
, 
F_FCOMP
,

2913 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2915 
	#CVTQS_IMPL
 \

2918 
	`SET_FPR
(
RC
, (
sqw‹d_t
)
	`FPR_Q
(
RB
)); \

2919 }

	)

2920 
DEFINST
(
CVTQS
, 0x3c,

2922 
FlﬂtADD
, 
F_FCOMP
,

2923 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2925 
	#CVTQT_IMPL
 \

2927 
	`SET_FPR
(
RC
, (
sqw‹d_t
)
	`FPR_Q
(
RB
)); \

2928 }

	)

2929 
DEFINST
(
CVTQT
, 0x3e,

2931 
FlﬂtADD
, 
F_FCOMP
,

2932 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2935 
	$CONNECT
(
FLTL
)

2937 
	#CVTLQ_IMPL
 \

2939 
sqw‹d_t
 
_l⁄ghﬁd
; \

2940 
sw‹d_t
 
_öthﬁd
; \

2942 
_l⁄ghﬁd
 = 
	`FPR_Q
(
RB
); \

2943 
_öthﬁd
 = (((
_l⁄ghﬁd
 >> 32) & 0xc0000000) \

2944 | ((
_l⁄ghﬁd
 >> 29) & 0x3fffffff)); \

2945 
	`SET_FPR_Q
(
RC
, (
sqw‹d_t
)
_öthﬁd
); \

2946 
	}

	)
}

2948 
DEFINST
(
CVTLQ
, 0x10,

2950 
FlﬂtADD
, 
F_FCOMP
,

2951 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

2953 
	#CPYS_IMPL
 \

2955 
	`SET_FPR_Q
(
RC
, ((
	`FPR_Q
(
RA
Ë& 
	`ULL
(1) << 63) \

2956 | (
	`FPR_Q
(
RB
Ë& 
	`LL
(0x7fffffffffffffff)))); \

2957 }

	)

2958 
DEFINST
(
CPYS
, 0x20,

2960 
FlﬂtADD
, 
F_FCOMP
,

2961 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2963 
	#CPYSN_IMPL
 \

2965 
	`SET_FPR_Q
(
RC
, ((
	`FPR_Q
(
RA
) >> 63 ^ 1) << 63 \

2966 | (
	`FPR_Q
(
RB
Ë& 
	`LL
(0x7fffffffffffffff)))); \

2967 }

	)

2968 
DEFINST
(
CPYSN
, 0x21,

2970 
FlﬂtADD
, 
F_FCOMP
,

2971 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2973 
	#CPYSE_IMPL
 \

2975 
	`SET_FPR_Q
(
RC
, ((
	`FPR_Q
(
RA
Ë& 
	`ULL
(0xfff) << 52) \

2976 | (
	`FPR_Q
(
RB
Ë& 
	`ULL
(0xfffffffffffff)))); \

2977 }

	)

2978 
DEFINST
(
CPYSE
, 0x22,

2980 
FlﬂtADD
, 
F_FCOMP
,

2981 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

2983 
	#MT_FPCR_IMPL
 \

2986 
	`SET_FPCR
(
	`FPR_Q
(
RA
)); \

2987 }

	)

2988 
DEFINST
(
MT_FPCR
, 0x24,

2990 
FlﬂtADD
, 
F_FCOMP
,

2991 
DFPCR
, 
DNA
, 
DFPR
(
RA
), DNA, DNA)

2993 #ifde‡
_MSC_VER


2994 
	#MF_FPCR_IMPL
 \

2998 
	`SET_FPR_Q
(
RA
, 
FPCR
); \

2999 }

	)

3001 
	#MF_FPCR_IMPL
 \

3004 
	`SET_FPR_Q
(
RA
, 
FPCR
); \

3005 }

	)

3007 
DEFINST
(
MF_FPCR
, 0x25,

3009 
FlﬂtADD
, 
F_FCOMP
,

3010 
DFPR
(
RA
), 
DNA
, 
DFPCR
, DNA, DNA)

3012 
	#FCMOVEQ_IMPL
 \

3014 i‡((
	`FPR_Q
(
RA
Ë<< 1Ë=
	`ULL
(0)) \

3015 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

3016 }

	)

3017 
DEFINST
(
FCMOVEQ
, 0x2a,

3019 
FlﬂtADD
, 
F_FCOMP
,

3020 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

3022 
	#FCMOVNE_IMPL
 \

3024 i‡((
	`FPR_Q
(
RA
Ë<< 1Ë!
	`ULL
(0)) \

3025 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

3026 }

	)

3027 
DEFINST
(
FCMOVNE
, 0x2b,

3029 
FlﬂtADD
, 
F_FCOMP
,

3030 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

3032 
	#FCMOVLT_IMPL
 \

3034 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë!
	`ULL
(0)) && (FPR_Q(RA) >> 63)) \

3035 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

3036 }

	)

3037 
DEFINST
(
FCMOVLT
, 0x2c,

3039 
FlﬂtADD
, 
F_FCOMP
,

3040 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

3042 
	#FCMOVGE_IMPL
 \

3044 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë=
	`ULL
(0)) || (FPR_Q(RA) >> 63 == ULL(0))) \

3045 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

3046 }

	)

3047 
DEFINST
(
FCMOVGE
, 0x2d,

3049 
FlﬂtADD
, 
F_FCOMP
,

3050 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

3052 
	#FCMOVLE_IMPL
 \

3054 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë=
	`ULL
(0)) || (FPR_Q(RA) >> 63)) \

3055 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

3056 }

	)

3057 
DEFINST
(
FCMOVLE
, 0x2e,

3059 
FlﬂtADD
, 
F_FCOMP
,

3060 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

3062 
	#FCMOVGT_IMPL
 \

3064 i‡(((
	`FPR_Q
(
RA
Ë<< 1Ë!
	`ULL
(0)) && (FPR_Q(RA) >> 63 == ULL(0))) \

3065 
	`SET_FPR
(
RC
, 
	`FPR
(
RB
)); \

3066 }

	)

3067 
DEFINST
(
FCMOVGT
, 0x2f,

3069 
FlﬂtADD
, 
F_FCOMP
,

3070 
DFPR
(
RC
), 
DNA
, DFPR(
RA
), DFPR(
RB
), DNA)

3073 
	#CVTQL_IMPL
 \

3075 
sqw‹d_t
 
l⁄ghﬁd
 = 
	`FPR_Q
(
RB
); \

3077 
	`SET_FPR_Q
(
RC
, (((
l⁄ghﬁd
 >> 32Ë& 
	`LL
(0xc000000000000000)) \

3078 | (
l⁄ghﬁd
 & 
	`LL
(0x3fffffff)) << 29)); \

3079 }

	)

3080 
DEFINST
(
CVTQL
, 0x30,

3082 
FlﬂtADD
, 
F_FCOMP
,

3083 
DFPR
(
RC
), 
DNA
, DFPR(
RB
), DNA, DNA)

3086 
	$CONNECT
(
MISC
)

3091 
	#TRAPB_IMPL
 \

3094 
	}

	)
}

3095 
DEFINST
(
TRAPB
, 0x00,

3097 
NA
, 
F_TRAP
,

3098 
DNA
, DNA, DNA, DNA, DNA)

3101 
	#EXCB_IMPL
 \

3103 }

	)

3104 
DEFINST
(
EXCB
, 0x04,

3106 
NA
, 
F_TRAP
,

3107 
DNA
, DNA, DNA, DNA, DNA)

3109 
	#MB_IMPL
 \

3112 }

	)

3113 
DEFINST
(
MB
, 0x40,

3115 
NA
, 
F_FENCE
,

3116 
DNA
, DNA, DNA, DNA, DNA)

3120 
	#WMB_IMPL
 \

3123 }

	)

3124 
DEFINST
(
WMB
, 0x44,

3126 
NA
, 
F_FENCE
,

3127 
DNA
, DNA, DNA, DNA, DNA)

3130 
	#FETCH_IMPL
 \

3133 }

	)

3134 
DEFINST
(
FETCH
, 0x80,

3136 
NA
, NA,

3137 
DNA
, DNA, DNA, DNA, DNA)

3140 
	#FETCH_M_IMPL
 \

3143 }

	)

3144 
DEFINST
(
FETCH_M
, 0xa0,

3146 
NA
, NA,

3147 
DNA
, DNA, DNA, DNA, DNA)

3150 
	#RPCC_IMPL
 \

3153 
	`SET_GPR
(
RA
, 
	`ULL
(0)); \

3154 }

	)

3155 
DEFINST
(
RPCC
, 0xc0,

3157 
NA
, NA,

3158 
DGPR
(
RA
), 
DNA
, DNA, DNA, DNA)

3161 
	#_RC_IMPL
 \

3164 }

	)

3165 
DEFINST
(
_RC
, 0xe0,

3167 
NA
, NA,

3168 
DNA
, DNA, DNA, DNA, DNA)

3171 
	#ECB_IMPL
 \

3174 }

	)

3175 
DEFINST
(
ECB
, 0xe8,

3177 
NA
, NA,

3178 
DNA
, DNA, DNA, DNA, DNA)

3181 
	#_RS_IMPL
 \

3184 }

	)

3185 
DEFINST
(
_RS
, 0xf0,

3187 
NA
, NA,

3188 
DNA
, DNA, DNA, DNA, DNA)

3191 
	#WH64_IMPL
 \

3194 }

	)

3195 
DEFINST
(
WH64
, 0xf8,

3197 
NA
, NA,

3198 
DNA
, DNA, DNA, DNA, DNA)

3202 
	$CONNECT
(
JMPJSR
)

3204 
	#JMP_IMPL
 \

3206 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3207 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3208 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3209 
	}

	)
}

3210 
DEFINST
(
JMP
, 0x00,

3212 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3213 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3215 
	#JSR_IMPL
 \

3217 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3218 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3219 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3220 }

	)

3221 
DEFINST
(
JSR
, 0x01,

3223 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3224 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3226 
	#RETN_IMPL
 \

3228 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3229 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3230 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3231 }

	)

3232 
DEFINST
(
RETN
, 0x02,

3234 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3235 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3237 
	#JSR_COROUTINE_IMPL
 \

3239 
	`SET_TPC
(
	`GPR
(
RB
) & ~3); \

3240 
	`SET_NPC
(
	`GPR
(
RB
) & ~3); \

3241 
	`SET_GPR
(
RA
, 
CPC
 + 4); \

3242 }

	)

3243 
DEFINST
(
JSR_COROUTINE
, 0x03,

3245 
I¡ALU
, 
F_CTRL
|
F_UNCOND
|
F_INDIRJMP
,

3246 
DGPR
(
RA
), 
DNA
, DGPR(
RB
), DNA, DNA)

3250 
	$CONNECT
(
FPTI
)

3253 
	`DEFLINK
(
SEXTB_LINK
, 0x00, "sextb_link", 12, 1)

3256 
	`DEFLINK
(
SEXTW_LINK
, 0x01, "sextw_link", 12, 1)

3264 
	#CTPOP_IMPL
 \

3266 
_ãmp
, 
_i
; \

3267 
qw‹d_t
 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3269 
_ãmp
 = 0; \

3270 
_i
 = 0; _i <= 63; _i++) \

3271 i‡(
_qw‹dhﬁd
 & (
	`ULL
(1Ë<< 
_i
)) \

3272 
_ãmp
++; \

3274 
	`SET_GPR
(
RC
, (
qw‹d_t
)
_ãmp
); \

3275 
	}

	)
}

3276 
DEFINST
(
CTPOP
, 0x30,

3278 
I¡ALU
, 
F_ICOMP
,

3279 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3282 
	#PERR_IMPL
 \

3284 
_i
; \

3285 
qw‹d_t
 
_sum_diffs
, 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
; \

3287 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3288 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3289 
_sum_diffs
 = 0; \

3291 
_i
 = 0; _i <= 7; _i++) \

3293 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
; \

3295 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
*8)) & 0xff; \

3296 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
*8)) & 0xff; \

3297 i‡(
_byãhﬁd_a
 >
_byãhﬁd_b
) \

3298 
_sum_diffs
 +(
_byãhﬁd_a
 - 
_byãhﬁd_b
); \

3300 
_sum_diffs
 +(
_byãhﬁd_b
 - 
_byãhﬁd_a
); \

3303 
	`SET_GPR
(
RC
, 
_sum_diffs
); \

3304 }

	)

3305 
DEFINST
(
PERR
, 0x31,

3307 
I¡ALU
, 
F_ICOMP
,

3308 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3312 
	#CTLZ_IMPL
 \

3314 
_ãmp
, 
_i
; \

3315 
qw‹d_t
 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3317 
_ãmp
 = 0; \

3318 
_i
 = 63; _i >= 0; _i--) \

3320 i‡(
_qw‹dhﬁd
 & (
	`ULL
(1Ë<< 
_i
)) \

3323 
_ãmp
++; \

3326 
	`SET_GPR
(
RC
, (
qw‹d_t
)
_ãmp
); \

3327 }

	)

3328 
DEFINST
(
CTLZ
, 0x32,

3330 
I¡ALU
, 
F_ICOMP
,

3331 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3333 
	#CTTZ_IMPL
 \

3335 
_ãmp
, 
_i
; \

3336 
qw‹d_t
 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3338 
_ãmp
 = 0; \

3339 
_i
 = 0; _i <= 63; _i++) \

3341 i‡(
_qw‹dhﬁd
 & (
	`ULL
(1Ë<< 
_i
)) \

3344 
_ãmp
++; \

3347 
	`SET_GPR
(
RC
, (
qw‹d_t
)
_ãmp
); \

3348 }

	)

3349 
DEFINST
(
CTTZ
, 0x33,

3351 
I¡ALU
, 
F_ICOMP
,

3352 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3356 
	#UNPKBW_IMPL
 \

3358 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3360 
_ãmp
 = 0; \

3361 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3363 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3364 
_ãmp
 |(((
_qw‹dhﬁd
 >> 8) & 0xff) << 16); \

3365 
_ãmp
 |(((
_qw‹dhﬁd
 >> 16) & 0xff) << 32); \

3366 
_ãmp
 |(((
_qw‹dhﬁd
 >> 24) & 0xff) << 48); \

3368 
	`SET_GPR
(
RC
, 
_ãmp
); \

3369 }

	)

3370 
DEFINST
(
UNPKBW
, 0x34,

3372 
I¡ALU
, 
F_ICOMP
,

3373 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3375 
	#UNPKBL_IMPL
 \

3377 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3379 
_ãmp
 = 0; \

3380 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3382 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3383 
_ãmp
 |(((
_qw‹dhﬁd
 >> 8) & 0xff) << 32); \

3385 
	`SET_GPR
(
RC
, 
_ãmp
); \

3386 }

	)

3387 
DEFINST
(
UNPKBL
, 0x35,

3389 
I¡ALU
, 
F_ICOMP
,

3390 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3392 
	#PKWB_IMPL
 \

3394 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3396 
_ãmp
 = 0; \

3397 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3399 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3400 
_ãmp
 |(((
_qw‹dhﬁd
 >> 16) & 0xff) << 8); \

3401 
_ãmp
 |(((
_qw‹dhﬁd
 >> 32) & 0xff) << 16); \

3402 
_ãmp
 |(((
_qw‹dhﬁd
 >> 48) & 0xff) << 24); \

3404 
	`SET_GPR
(
RC
, 
_ãmp
); \

3405 }

	)

3406 
DEFINST
(
PKWB
, 0x36,

3408 
I¡ALU
, 
F_ICOMP
,

3409 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3411 
	#PKLB_IMPL
 \

3413 
qw‹d_t
 
_ãmp
, 
_qw‹dhﬁd
; \

3415 
_ãmp
 = 0; \

3416 
_qw‹dhﬁd
 = 
	`GPR
(
RB
); \

3418 
_ãmp
 |(
_qw‹dhﬁd
 & 0xff); \

3419 
_ãmp
 |(((
_qw‹dhﬁd
 >> 32) & 0xff) << 8); \

3421 
	`SET_GPR
(
RC
, 
_ãmp
); \

3422 }

	)

3423 
DEFINST
(
PKLB
, 0x37,

3425 
I¡ALU
, 
F_ICOMP
,

3426 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3430 
DEFLINK
(
MINSB8_LINK
, 0x38, "minsb8_link", 12, 1)

3432 
DEFLINK
(
MINSW4_LINK
, 0x39, "minsw4_link", 12, 1)

3434 
DEFLINK
(
MINUB8_LINK
, 0x3a, "minub8_link", 12, 1)

3436 
DEFLINK
(
MINUW4_LINK
, 0x3b, "minuw4_link", 12, 1)

3438 
DEFLINK
(
MAXUB8_LINK
, 0x3c, "maxub8_link", 12, 1)

3440 
DEFLINK
(
MAXUW4_LINK
, 0x3d, "maxuw4_link", 12, 1)

3442 
DEFLINK
(
MAXSB8_LINK
, 0x3e, "maxsb8_link", 12, 1)

3444 
DEFLINK
(
MAXSW4_LINK
, 0x3f, "maxsw4_link", 12, 1)

3447 
	#FTOIT_IMPL
 \

3449 
	`SET_GPR
(
RC
, 
	`FPR_Q
(
RA
)); \

3450 }

	)

3451 
DEFINST
(
FTOIT
, 0x70,

3453 
FlﬂtCVT
, 
F_FCOMP
,

3454 
DGPR
(
RC
), 
DNA
, 
DFPR
(
RA
), DNA, DNA)

3456 
	#FTOIS_IMPL
 \

3458 
sqw‹d_t
 
_l⁄ghﬁd
; \

3459 
sw‹d_t
 
_öthﬁd
; \

3461 
_l⁄ghﬁd
 = 
	`FPR_Q
(
RA
); \

3462 
_öthﬁd
 = (((
_l⁄ghﬁd
 >> 32Ë& 
	`ULL
(0xc0000000)) \

3463 | ((
_l⁄ghﬁd
 >> 29Ë& 
	`ULL
(0x3fffffff))); \

3465 
	`SET_GPR
(
RC
, (
	`SEXT32
(
_l⁄ghﬁd
 >> 63Ë<< 32Ë| 
_öthﬁd
); \

3466 }

	)

3467 
DEFINST
(
FTOIS
, 0x78,

3469 
FlﬂtCVT
, 
F_FCOMP
,

3470 
DGPR
(
RC
), 
DNA
, 
DFPR
(
RA
), DNA, DNA)

3474 
	$CONNECT
(
MINSB8_LINK
)

3476 
	#MINSB8_IMPL
 \

3478 
_i
; \

3479 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3481 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3482 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3483 
_qw‹dhﬁd_c
 = 0; \

3485 
_i
 = 0; _i <= 7; _i++) \

3487 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3489 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3490 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3491 
_byãhﬁd_c
 = 
	`mö2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3493 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3496 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3497 
	}

	)
}

3498 
DEFINST
(
MINSB8
, 0x00,

3500 
I¡ALU
, 
F_ICOMP
,

3501 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3503 
	#MINSB8I_IMPL
 \

3505 
_i
; \

3506 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3508 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3509 
_qw‹dhﬁd_b
 = 
IMM
; \

3510 
_qw‹dhﬁd_c
 = 0; \

3512 
_i
 = 0; _i <= 7; _i++) \

3514 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3516 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3517 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3518 
_byãhﬁd_c
 = 
	`mö2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3520 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3523 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3524 }

	)

3525 
DEFINST
(
MINSB8I
, 0x01,

3527 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3528 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3531 
	$CONNECT
(
MINSW4_LINK
)

3533 
	#MINSW4_IMPL
 \

3535 
_i
; \

3536 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3538 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3539 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3540 
_qw‹dhﬁd_c
 = 0; \

3542 
_i
 = 0; _i <= 3; _i++) \

3544 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3546 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3547 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3548 
_hÆfhﬁd_c
 = 
	`mö2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3550 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3553 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3554 
	}

	)
}

3555 
DEFINST
(
MINSW4
, 0x00,

3557 
I¡ALU
, 
F_ICOMP
,

3558 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3560 
	#MINSW4I_IMPL
 \

3562 
_i
; \

3563 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3565 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3566 
_qw‹dhﬁd_b
 = 
IMM
; \

3567 
_qw‹dhﬁd_c
 = 0; \

3569 
_i
 = 0; _i <= 3; _i++) \

3571 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3573 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3574 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3575 
_hÆfhﬁd_c
 = 
	`mö2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3577 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3580 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3581 }

	)

3582 
DEFINST
(
MINSW4I
, 0x01,

3584 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3585 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3588 
	$CONNECT
(
MINUB8_LINK
)

3590 
	#MINUB8_IMPL
 \

3592 
_i
; \

3593 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3595 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3596 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3597 
_qw‹dhﬁd_c
 = 0; \

3599 
_i
 = 0; _i <= 7; _i++) \

3601 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3603 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3604 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3605 
_byãhﬁd_c
 = 
	`mö2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3607 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3610 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3611 
	}

	)
}

3612 
DEFINST
(
MINUB8
, 0x00,

3614 
I¡ALU
, 
F_ICOMP
,

3615 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3617 
	#MINUB8I_IMPL
 \

3619 
_i
; \

3620 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3622 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3623 
_qw‹dhﬁd_b
 = 
IMM
; \

3624 
_qw‹dhﬁd_c
 = 0; \

3626 
_i
 = 0; _i <= 7; _i++) \

3628 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3630 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3631 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3632 
_byãhﬁd_c
 = 
	`mö2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3634 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3637 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3638 }

	)

3639 
DEFINST
(
MINUB8I
, 0x01,

3641 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3642 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3645 
	$CONNECT
(
MINUW4_LINK
)

3647 
	#MINUW4_IMPL
 \

3649 
_i
; \

3650 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3652 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3653 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3654 
_qw‹dhﬁd_c
 = 0; \

3656 
_i
 = 0; _i <= 3; _i++) \

3658 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3660 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3661 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3662 
_hÆfhﬁd_c
 = 
	`mö2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3664 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3667 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3668 
	}

	)
}

3669 
DEFINST
(
MINUW4
, 0x00,

3671 
I¡ALU
, 
F_ICOMP
,

3672 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3674 
	#MINUW4I_IMPL
 \

3676 
_i
; \

3677 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3679 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3680 
_qw‹dhﬁd_b
 = 
IMM
; \

3681 
_qw‹dhﬁd_c
 = 0; \

3683 
_i
 = 0; _i <= 3; _i++) \

3685 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3687 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3688 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3689 
_hÆfhﬁd_c
 = 
	`mö2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3691 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3694 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3695 }

	)

3696 
DEFINST
(
MINUW4I
, 0x01,

3698 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3699 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3702 
	$CONNECT
(
MAXUB8_LINK
)

3704 
	#MAXUB8_IMPL
 \

3706 
_i
; \

3707 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3709 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3710 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3711 
_qw‹dhﬁd_c
 = 0; \

3713 
_i
 = 0; _i <= 7; _i++) \

3715 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3717 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3718 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3719 
_byãhﬁd_c
 = 
	`max2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3721 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3724 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3725 
	}

	)
}

3726 
DEFINST
(
MAXUB8
, 0x00,

3728 
I¡ALU
, 
F_ICOMP
,

3729 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3731 
	#MAXUB8I_IMPL
 \

3733 
_i
; \

3734 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3736 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3737 
_qw‹dhﬁd_b
 = 
IMM
; \

3738 
_qw‹dhﬁd_c
 = 0; \

3740 
_i
 = 0; _i <= 7; _i++) \

3742 
byã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3744 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3745 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3746 
_byãhﬁd_c
 = 
	`max2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3748 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3751 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3752 }

	)

3753 
DEFINST
(
MAXUB8I
, 0x01,

3755 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3756 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3759 
	$CONNECT
(
MAXUW4_LINK
)

3761 
	#MAXUW4_IMPL
 \

3763 
_i
; \

3764 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3766 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3767 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3768 
_qw‹dhﬁd_c
 = 0; \

3770 
_i
 = 0; _i <= 3; _i++) \

3772 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3774 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3775 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3776 
_hÆfhﬁd_c
 = 
	`max2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3778 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3781 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3782 
	}

	)
}

3783 
DEFINST
(
MAXUW4
, 0x00,

3785 
I¡ALU
, 
F_ICOMP
,

3786 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3788 
	#MAXUW4I_IMPL
 \

3790 
_i
; \

3791 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3793 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3794 
_qw‹dhﬁd_b
 = 
IMM
; \

3795 
_qw‹dhﬁd_c
 = 0; \

3797 
_i
 = 0; _i <= 3; _i++) \

3799 
hÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3801 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3802 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3803 
_hÆfhﬁd_c
 = 
	`max2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3805 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3808 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3809 }

	)

3810 
DEFINST
(
MAXUW4I
, 0x01,

3812 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3813 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3816 
	$CONNECT
(
MAXSB8_LINK
)

3818 
	#MAXSB8_IMPL
 \

3820 
_i
; \

3821 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3823 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3824 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3825 
_qw‹dhﬁd_c
 = 0; \

3827 
_i
 = 0; _i <= 7; _i++) \

3829 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3831 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3832 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3833 
_byãhﬁd_c
 = 
	`max2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3835 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3838 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3839 
	}

	)
}

3840 
DEFINST
(
MAXSB8
, 0x00,

3842 
I¡ALU
, 
F_ICOMP
,

3843 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3845 
	#MAXSB8I_IMPL
 \

3847 
_i
; \

3848 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3850 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3851 
_qw‹dhﬁd_b
 = 
IMM
; \

3852 
_qw‹dhﬁd_c
 = 0; \

3854 
_i
 = 0; _i <= 7; _i++) \

3856 
sbyã_t
 
_byãhﬁd_a
, 
_byãhﬁd_b
, 
_byãhﬁd_c
; \

3858 
_byãhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 8)) & 0xff; \

3859 
_byãhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 8)) & 0xff; \

3860 
_byãhﬁd_c
 = 
	`max2
(
_byãhﬁd_a
, 
_byãhﬁd_b
); \

3862 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
byã_t
)
_byãhﬁd_c
 & 0xffË<< (
_i
*8)); \

3865 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3866 }

	)

3867 
DEFINST
(
MAXSB8I
, 0x01,

3869 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3870 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3873 
	$CONNECT
(
MAXSW4_LINK
)

3875 
	#MAXSW4_IMPL
 \

3877 
_i
; \

3878 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3880 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3881 
_qw‹dhﬁd_b
 = 
	`GPR
(
RB
); \

3882 
_qw‹dhﬁd_c
 = 0; \

3884 
_i
 = 0; _i <= 3; _i++) \

3886 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3888 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3889 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3890 
_hÆfhﬁd_c
 = 
	`max2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3892 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3895 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3896 
	}

	)
}

3897 
DEFINST
(
MAXSW4
, 0x00,

3899 
I¡ALU
, 
F_ICOMP
,

3900 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DGPR(
RB
), DNA)

3902 
	#MAXSW4I_IMPL
 \

3904 
_i
; \

3905 
qw‹d_t
 
_qw‹dhﬁd_a
, 
_qw‹dhﬁd_b
, 
_qw‹dhﬁd_c
; \

3907 
_qw‹dhﬁd_a
 = 
	`GPR
(
RA
); \

3908 
_qw‹dhﬁd_b
 = 
IMM
; \

3909 
_qw‹dhﬁd_c
 = 0; \

3911 
_i
 = 0; _i <= 3; _i++) \

3913 
shÆf_t
 
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
, 
_hÆfhﬁd_c
; \

3915 
_hÆfhﬁd_a
 = (
_qw‹dhﬁd_a
 >> (
_i
 * 16)) & 0xffff; \

3916 
_hÆfhﬁd_b
 = (
_qw‹dhﬁd_b
 >> (
_i
 * 16)) & 0xffff; \

3917 
_hÆfhﬁd_c
 = 
	`max2
(
_hÆfhﬁd_a
, 
_hÆfhﬁd_b
); \

3919 
_qw‹dhﬁd_c
 |(((
qw‹d_t
)(
hÆf_t
)
_hÆfhﬁd_c
 & 0xffffË<< (
_i
*16));\

3922 
	`SET_GPR
(
RC
, 
_qw‹dhﬁd_c
); \

3923 }

	)

3924 
DEFINST
(
MAXSW4I
, 0x01,

3926 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3927 
DGPR
(
RC
), 
DNA
, DGPR(
RA
), DNA, DNA)

3931 
	$CONNECT
(
SEXTB_LINK
)

3934 
	#SEXTB_IMPL
 \

3936 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
sbyã_t
)(
	`GPR
(
RB
) & 0xff)); \

3937 
	}

	)
}

3938 
DEFINST
(
SEXTB
, 0x00,

3940 
I¡ALU
, 
F_ICOMP
,

3941 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3944 
	#SEXTBI_IMPL
 \

3946 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
sbyã_t
)(
IMM
 & 0xff)); \

3947 }

	)

3948 
DEFINST
(
SEXTBI
, 0x01,

3950 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3951 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

3955 
	$CONNECT
(
SEXTW_LINK
)

3958 
	#SEXTW_IMPL
 \

3960 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
shÆf_t
)(
	`GPR
(
RB
) & 0xffff)); \

3961 
	}

	)
}

3962 
DEFINST
(
SEXTW
, 0x00,

3964 
I¡ALU
, 
F_ICOMP
,

3965 
DGPR
(
RC
), 
DNA
, DGPR(
RB
), DNA, DNA)

3968 
	#SEXTWI_IMPL
 \

3970 
	`SET_GPR
(
RC
, (
qw‹d_t
)(
sqw‹d_t
)(
shÆf_t
)(
IMM
 & 0xffff)); \

3971 }

	)

3972 
DEFINST
(
SEXTWI
, 0x01,

3974 
I¡ALU
, 
F_ICOMP
|
F_IMM
,

3975 
DGPR
(
RC
), 
DNA
, DNA, DNA, DNA)

3980 #unde‡
LDA_IMPL


3981 #unde‡
LDAH_IMPL


3982 #unde‡
LDBU_IMPL


3983 #unde‡
LDQ_U_IMPL


3984 #unde‡
LDWU_IMPL


3985 #unde‡
STW_IMPL


3986 #unde‡
STB_IMPL


3987 #unde‡
STQ_U_IMPL


3988 #unde‡
FLTV_IMPL


3989 #unde‡
LDF_IMPL


3990 #unde‡
LDG_IMPL


3991 #unde‡
LDS_IMPL


3992 #unde‡
LDT_IMPL


3993 #unde‡
STF_IMPL


3994 #unde‡
STG_IMPL


3995 #unde‡
STS_IMPL


3996 #unde‡
STT_IMPL


3997 #unde‡
LDL_IMPL


3998 #unde‡
LDQ_IMPL


3999 #unde‡
LDL_L_IMPL


4000 #unde‡
LDQ_L_IMPL


4001 #unde‡
STL_IMPL


4002 #unde‡
STQ_IMPL


4003 #unde‡
STL_C_IMPL


4004 #unde‡
STQ_C_IMPL


4005 #unde‡
BR_IMPL


4006 #unde‡
FBEQ_IMPL


4007 #unde‡
FBLT_IMPL


4008 #unde‡
FBLE_IMPL


4009 #unde‡
BSR_IMPL


4010 #unde‡
FBNE_IMPL


4011 #unde‡
FBGE_IMPL


4012 #unde‡
FBGT_IMPL


4013 #unde‡
BLBC_IMPL


4014 #unde‡
BEQ_IMPL


4015 #unde‡
BLT_IMPL


4016 #unde‡
BLE_IMPL


4017 #unde‡
BLBS_IMPL


4018 #unde‡
BNE_IMPL


4019 #unde‡
BGE_IMPL


4020 #unde‡
BGT_IMPL


4021 #unde‡
PAL_CALLSYS_IMPL


4022 #unde‡
PAL_RDUNIQ_IMPL


4023 #unde‡
PAL_WRUNIQ_IMPL


4024 #unde‡
ADDL_IMPL


4025 #unde‡
ADDLI_IMPL


4026 #unde‡
S4ADDL_IMPL


4027 #unde‡
S4ADDLI_IMPL


4028 #unde‡
SUBL_IMPL


4029 #unde‡
SUBLI_IMPL


4030 #unde‡
S4SUBL_IMPL


4031 #unde‡
S4SUBLI_IMPL


4032 #unde‡
CMPBGE_IMPL


4033 #unde‡
CMPBGEI_IMPL


4034 #unde‡
S8ADDL_IMPL


4035 #unde‡
S8ADDLI_IMPL


4036 #unde‡
S8SUBL_IMPL


4037 #unde‡
S8SUBLI_IMPL


4038 #unde‡
CMPULT_IMPL


4039 #unde‡
CMPULTI_IMPL


4040 #unde‡
ADDQ_IMPL


4041 #unde‡
ADDQI_IMPL


4042 #unde‡
S4ADDQ_IMPL


4043 #unde‡
S4ADDQI_IMPL


4044 #unde‡
SUBQ_IMPL


4045 #unde‡
SUBQI_IMPL


4046 #unde‡
S4SUBQ_IMPL


4047 #unde‡
S4SUBQI_IMPL


4048 #unde‡
CMPEQ_IMPL


4049 #unde‡
CMPEQI_IMPL


4050 #unde‡
S8ADDQ_IMPL


4051 #unde‡
S8ADDQI_IMPL


4052 #unde‡
S8SUBQ_IMPL


4053 #unde‡
S8SUBQI_IMPL


4054 #unde‡
CMPULE_IMPL


4055 #unde‡
CMPULEI_IMPL


4056 #unde‡
ADDLV_IMPL


4057 #unde‡
ADDLVI_IMPL


4058 #unde‡
SUBLV_IMPL


4059 #unde‡
SUBLVI_IMPL


4060 #unde‡
CMPLT_IMPL


4061 #unde‡
CMPLTI_IMPL


4062 #unde‡
ADDQV_IMPL


4063 #unde‡
ADDQVI_IMPL


4064 #unde‡
SUBQV_IMPL


4065 #unde‡
SUBQVI_IMPL


4066 #unde‡
CMPLE_IMPL


4067 #unde‡
CMPLEI_IMPL


4068 #unde‡
AND_IMPL


4069 #unde‡
ANDI_IMPL


4070 #unde‡
BIC_IMPL


4071 #unde‡
BICI_IMPL


4072 #unde‡
CMOVLBS_IMPL


4073 #unde‡
CMOVLBSI_IMPL


4074 #unde‡
CMOVLBC_IMPL


4075 #unde‡
CMOVLBCI_IMPL


4076 #unde‡
BIS_IMPL


4077 #unde‡
BISI_IMPL


4078 #unde‡
CMOVEQ_IMPL


4079 #unde‡
CMOVEQI_IMPL


4080 #unde‡
CMOVNE_IMPL


4081 #unde‡
CMOVNEI_IMPL


4082 #unde‡
ORNOT_IMPL


4083 #unde‡
ORNOTI_IMPL


4084 #unde‡
XOR_IMPL


4085 #unde‡
XORI_IMPL


4086 #unde‡
CMOVLT_IMPL


4087 #unde‡
CMOVLTI_IMPL


4088 #unde‡
CMOVGE_IMPL


4089 #unde‡
CMOVGEI_IMPL


4090 #unde‡
EQV_IMPL


4091 #unde‡
EQVI_IMPL


4092 #unde‡
AMASK_IMPL


4093 #unde‡
AMASKI_IMPL


4094 #unde‡
CMOVLE_IMPL


4095 #unde‡
CMOVLEI_IMPL


4096 #unde‡
CMOVGT_IMPL


4097 #unde‡
CMOVGTI_IMPL


4098 #unde‡
IMPLVER_IMPL


4099 #unde‡
MSKBL_IMPL


4100 #unde‡
MSKBLI_IMPL


4101 #unde‡
EXTBL_IMPL


4102 #unde‡
EXTBLI_IMPL


4103 #unde‡
INSBL_IMPL


4104 #unde‡
INSBLI_IMPL


4105 #unde‡
MSKWL_IMPL


4106 #unde‡
MSKWLI_IMPL


4107 #unde‡
EXTWL_IMPL


4108 #unde‡
EXTWLI_IMPL


4109 #unde‡
INSWL_IMPL


4110 #unde‡
INSWLI_IMPL


4111 #unde‡
MSKLL_IMPL


4112 #unde‡
MSKLLI_IMPL


4113 #unde‡
EXTLL_IMPL


4114 #unde‡
EXTLLI_IMPL


4115 #unde‡
INSLL_IMPL


4116 #unde‡
INSLLI_IMPL


4117 #unde‡
ZAP_IMPL


4118 #unde‡
ZAPI_IMPL


4119 #unde‡
ZAPNOT_IMPL


4120 #unde‡
ZAPNOTI_IMPL


4121 #unde‡
MSKQL_IMPL


4122 #unde‡
MSKQLI_IMPL


4123 #unde‡
SRL_IMPL


4124 #unde‡
SRLI_IMPL


4125 #unde‡
EXTQL_IMPL


4126 #unde‡
EXTQLI_IMPL


4127 #unde‡
SLL_IMPL


4128 #unde‡
SLLI_IMPL


4129 #unde‡
INSQL_IMPL


4130 #unde‡
INSQLI_IMPL


4131 #unde‡
SRA_IMPL


4132 #unde‡
SRAI_IMPL


4133 #unde‡
MSKWH_IMPL


4134 #unde‡
MSKWHI_IMPL


4135 #unde‡
INSWH_IMPL


4136 #unde‡
INSWHI_IMPL


4137 #unde‡
EXTWH_IMPL


4138 #unde‡
EXTWHI_IMPL


4139 #unde‡
MSKLH_IMPL


4140 #unde‡
MSKLHI_IMPL


4141 #unde‡
INSLH_IMPL


4142 #unde‡
INSLHI_IMPL


4143 #unde‡
EXTLH_IMPL


4144 #unde‡
EXTLHI_IMPL


4145 #unde‡
MSKQH_IMPL


4146 #unde‡
MSKQHI_IMPL


4147 #unde‡
INSQH_IMPL


4148 #unde‡
INSQHI_IMPL


4149 #unde‡
EXTQH_IMPL


4150 #unde‡
EXTQHI_IMPL


4151 #unde‡
MULL_IMPL


4152 #unde‡
MULLI_IMPL


4153 #unde‡
MULQ_IMPL


4154 #unde‡
MULQI_IMPL


4155 #unde‡
UMULH_IMPL


4156 #unde‡
UMULHI_IMPL


4157 #unde‡
ITOFS_IMPL


4158 #unde‡
SQRTF_IMPL


4159 #unde‡
SQRTS_IMPL


4160 #unde‡
ITOFF_IMPL


4161 #unde‡
ITOFT_IMPL


4162 #unde‡
SQRTG_IMPL


4163 #unde‡
SQRTT_IMPL


4164 #unde‡
ADDS_IMPL


4165 #unde‡
SUBS_IMPL


4166 #unde‡
MULS_IMPL


4167 #unde‡
DIVS_IMPL


4168 #unde‡
ADDT_IMPL


4169 #unde‡
SUBT_IMPL


4170 #unde‡
MULT_IMPL


4171 #unde‡
DIVT_IMPL


4172 #unde‡
CMPTUN_IMPL


4173 #unde‡
CMPTEQ_IMPL


4174 #unde‡
CMPTLT_IMPL


4175 #unde‡
CMPTLE_IMPL


4176 #unde‡
CVTTS_IMPL


4177 #unde‡
CVTTQ_IMPL


4178 #unde‡
CVTQS_IMPL


4179 #unde‡
CVTQT_IMPL


4180 #unde‡
CVTLQ_IMPL


4181 #unde‡
CPYS_IMPL


4182 #unde‡
CPYSN_IMPL


4183 #unde‡
CPYSE_IMPL


4184 #unde‡
MT_FPCR_IMPL


4185 #unde‡
MF_FPCR_IMPL


4186 #unde‡
FCMOVEQ_IMPL


4187 #unde‡
FCMOVNE_IMPL


4188 #unde‡
FCMOVLT_IMPL


4189 #unde‡
FCMOVGE_IMPL


4190 #unde‡
FCMOVLE_IMPL


4191 #unde‡
FCMOVGT_IMPL


4192 #unde‡
CVTQL_IMPL


4193 #unde‡
TRAPB_IMPL


4194 #unde‡
EXCB_IMPL


4195 #unde‡
MB_IMPL


4196 #unde‡
WMB_IMPL


4197 #unde‡
FETCH_IMPL


4198 #unde‡
FETCH_M_IMPL


4199 #unde‡
RPCC_IMPL


4200 #unde‡
_RC_IMPL


4201 #unde‡
ECB_IMPL


4202 #unde‡
_RS_IMPL


4203 #unde‡
WH64_IMPL


4204 #unde‡
JMP_IMPL


4205 #unde‡
JSR_IMPL


4206 #unde‡
RETN_IMPL


4207 #unde‡
JSR_COROUTINE_IMPL


4208 #unde‡
SEXTB_IMPL


4209 #unde‡
SEXTBI_IMPL


4210 #unde‡
SEXTW_IMPL


4211 #unde‡
SEXTWI_IMPL


4212 #unde‡
CTPOP_IMPL


4213 #unde‡
PERR_IMPL


4214 #unde‡
CTLZ_IMPL


4215 #unde‡
CTTZ_IMPL


4216 #unde‡
UNPKBW_IMPL


4217 #unde‡
UNPKBL_IMPL


4218 #unde‡
PKWB_IMPL


4219 #unde‡
PKLB_IMPL


4220 #unde‡
MINSB8_IMPL


4221 #unde‡
MINSW4_IMPL


4222 #unde‡
MINUB8_IMPL


4223 #unde‡
MINUW4_IMPL


4224 #unde‡
MAXUB8_IMPL


4225 #unde‡
MAXUW4_IMPL


4226 #unde‡
MAXSB8_IMPL


4227 #unde‡
MAXSW4_IMPL


4228 #unde‡
FTOIT_IMPL


4229 #unde‡
FTOIS_IMPL


4231 #unde‡
DEFINST


4232 #unde‡
DEFLINK


4233 #unde‡
CONNECT


	@opticalForSimplescalar/point-point.h

10 #i‚de‡
_POINT_POINT_H_


12 
	#_POINT_POINT_H_


	)

14 
	~"../ho°.h
"

15 
	~"../smt.h
"

16 
	~"../machöe.h
"

17 
	~"../›ti⁄s.h
"

18 
	~"../ˇche.h
"

19 
	~"../sysˇŒ.h
"

20 
	~"../c⁄ãxt.h
"

21 
	~<°dlib.h
>

22 
	~<time.h
>

23 
mesh_size
;

24 
	#MEM_MOD


	)

26 
	#MESHNUM
 (
MESH_SIZE
+2)

27 #ifde‡
MEM_MOD


	)

28 
	#PROCESSOR
 (
MESHNUM
*MESHNUM)

	)

30 
	#PROCESSOR
 
MAXTHREADS


32 

	)

40 #ifde‡
BASELINE_OPTICAL_NETWORK


41 #i‚de‡
IDEALCASE


42 
	#CONF_RES_ACK


	)

47 
	#ORDER_ADDR


48 
	#PREORITY_PACKETS


50 

	)

52 #ifde‡
OPTIMIZED_OPTICAL_NETWORK


53 
	#CONF_RES_ACK


	)

54 
	#EMC


	)

55 
	#CONF_PREDICTOR


56 
	#PSEUDO_SCHEDULE


57 

	)

64 
	#ORDER_ADDR


66 

	)

70 
	#PREORITY_PACKETS


72 

	)

77 #ifde‡
CORONA


78 
	g¨bi_dñay
[
PROCESSOR
];

82 #ifde‡
CONF_PREDICTOR


85 
	#FULL_CHECK


	)

86 
	#WB_PENDING


	)

87 
	#ACK_PENDING


	)

88 
	#CONF_PRED_TABLE


	)

89 
	gC⁄fRec‹d
[64];

92 
cou¡î_t
 
	gœrge_ªåy
;

93 
cou¡î_t
 
	gsmÆl_ªåy
;

94 
cou¡î_t
 
	ga¸ossU£d
;

95 
	#CONF_WIDTH
 4

	)

96 
	gc⁄fúm©i⁄_bô_öf
[
PROCESSOR
];

97 
cou¡î_t
 
	gbô_ovîÊow
;

98 
cou¡î_t
 
	gbô_u£d
;

99 
cou¡î_t
 
	gå™smôãr_busy
;

100 
cou¡î_t
 
	gwb_˛o£
;

101 
mëa_tŸÆ_num
;

102 
mëa_cﬁlisi⁄_tŸÆ
;

103 
d©a_tŸÆ_num
;

104 
d©a_cﬁlisi⁄_tŸÆ
;

110 
	#HEADER
 1

111 
	#TAIL
 2

112 
	#BODY
 3

113 
	#CONF_TYPE
 4

	)

116 
	#META
 0

117 
	#DATA
 1

118 

	)

119 
	#FIXED
 0

	)

120 
	#RANDOM
 1

	)

123 
	#EVG_MSG
 0

124 
	#META_MSG
 1

125 
	#DATA_MSG
 2

126 
	#WIRE_MSG
 3

	)

127 
	#ACK_MSG
 4

	)

128 
	#MSG_BACKUP
 5

	)

129 
	#WB_MSG
 6

	)

130 
	#WB_REQ_MSG
 7

	)

131 #ifde‡
CONF_PREDICTOR


132 
	#CONF_HINT
 8

	)

133 
	#EARLY_ACK_MSG
 9

	)

135 #ifde‡
EMC


136 
	#EMC_ACK_MSG
 10

	)

139 
	#LASER_ON
 1

	)

140 
	#LASER_OFF
 0

	)

142 
	#BUFFER_SIZE
 256

143 
	#WAIT_TIME
 800000000

	)

144 
	#PENDING_SIZE
 64

145 

	)

146 
	#maxFlôs
 300000

	)

147 
	gcuºítFlôs
;

149 
	göput_exåa_ovîÊow
;

150 
ˇche_dl1_£t_shi·
;

152 
FILE
 *
Â_åa˚
;

153 
DIRECTORY_EVENT
 *
dú_evít_queue
;

154 
cou¡î_t
 
Ouçut_queue_fuŒ
;

155 
cou¡î_t
 
	gœ°_Ouçut_queue_fuŒ
[
PROCESSOR
];

156 
cou¡î_t
 
	gm‹e_th™_two_c⁄Êi˘
;

157 
cou¡î_t
 
	gmëa_m‹e_th™_two_c⁄Êi˘
;

158 
cou¡î_t
 
	gmëa_sync_c⁄f_evít
;

159 
cou¡î_t
 
	gmëa_sync_c⁄f_∑ckës
;

160 
cou¡î_t
 
	gmëa_ldl_m‹e_th™_two_c⁄Êi˘
;

161 
cou¡î_t
 
	gmëa_ldl_c⁄f_evít
;

162 
cou¡î_t
 
	gmëa_ldl_c⁄f_∑ckës
;

163 
cou¡î_t
 
	gsync_c⁄f_∑ckës
;

164 
cou¡î_t
 
	gsync_c⁄f_evít
;

165 
cou¡î_t
 
SèŒ_ouçut_queue
;

166 
	#R_R_STATISTIC


	)

167 #ifde‡
R_R_STATISTIC


168 
cou¡î_t
 
	gª∂y_time_di°ributi⁄
[250];

169 
cou¡î_t
 
	gª∂y_L1_time_di°ributi⁄
[50];

171 
cou¡î_t
 
	gqueue_di°r
[24];

173 
	gmëa_c⁄f_evít
;

174 
	gd©a_c⁄f_evít
;

175 
cou¡î_t
 
	gd©a_c⁄Êi˘_¥o
;

176 
cou¡î_t
 
	gmëa_c⁄Êi˘_¥o
;

178 
cou¡î_t
 
	göput_buf_ac˚ss
;

179 
cou¡î_t
 
	gouçut_buf_ac˚ss
;

180 
cou¡î_t
 
	gouçut_buf„r_Êôs
[
PROCESSOR
];

182 
	gœ£r_w¨mup_time
;

184 
	gœ£r_£tup_time
;

186 
	gœ£r_swôchoff_timeout
;

188 
	gÊô_å™„r_time
;

189 
	gd©a_Êô_å™„r_time
;

191 
	gœ£r_cy˛e
;

193 
	gmëa_å™smôãr_size
;

194 
	gd©a_å™smôãr_size
;

196 
	gÊô_size
;

197 #i‚de‡
POPNET


198 
	gd©a_∑ckë_size
;

200 
	gmëa_∑ckë_size
;

203 
	gc⁄fúm©i⁄_bô
;

205 
	göput_buf„r_size
;

207 
	gouçut_buf„r_size
;

208 
	gouçut_p‹ts
;

210 
	g∑ckë_queue_size
;

212 
	gmëa_ª˚ivîs
;

214 
	gd©a_ª˚ivîs
;

216 
	gå™smôãrs
;

218 
	gc⁄fúm©i⁄_å™s
;

220 
	gc⁄fúm©i⁄_ª˚ivî
;

222 
	gtime_¶Ÿ_d©a
;

224 
	gd©a_ch™_time¶Ÿ
;

225 
	gmëa_ch™_time¶Ÿ
;

227 
	gexp_backoff
;

229 
	gfú°_¶Ÿ_num
;

231 
	gªåy_Ægr
;

233 
	gTBEB_Ægr
;

235 
	gc⁄fúm©i⁄_time
;

237 
	gc⁄f_ack_∑ckës
;

238 
cou¡î_t
 
	gc⁄f_ack_∑ckës_ªad
;

239 
	gc⁄f_upgødes
;

240 
	gc⁄f_ªadupgødes
;

241 
	gc⁄f_sync_lock
;

242 
	gacknowÀdge_∑ckës
;

245 
	sFlô
{

246 
	mÊô_ty≥
;

247 
Flô
 *
	m√xt
;

248 
	mNum
;

249 
	mPID
;

250 }
	tFlô
;

253 
	sFlô_li°
{

254 
Flô
 *
	mhód
;

255 
Flô
 *
	mèû
;

256 
	mÊôs_ö_li°
;

257 }
	tFlô_li°
;

259 
Flô_li°
 
	g‰ì_Êô_li°
;

260 
Æloˇã_‰ì_Êô_li°
();

261 
Flô
 * 
Æloˇã_Êô
();

264 
	sPackë
{

265 #ifde‡
EXCLUSIVE_OPT


266 
	mex˛usive_a·î_wb
;

268 
cou¡î_t
 
	m°¨t_time
;

269 
cou¡î_t
 
	må™s„r_time
;

270 
cou¡î_t
 
	må™smôãr_time
;

271 
md_addr_t
 
	maddr
;

272 
	m∑ckë_ty≥
;

273 
	m∑ckë_size
;

274 
	m§c
;

275 
	mdes
;

276 
	mÊônum
;

277 
	mmsgno
;

278 
	mmëa_id
;

279 
	md©a_id
;

280 
	mªåy
;

281 
	m≥ndög
[
PENDING_SIZE
];

282 
	mc⁄_Êag
[4];

283 
	mªåy_num
;

284 
	m›î©i⁄
;

285 
	mch™√l
;

286 
	mmëa_dñay
;

287 
	md©a_dñay
;

288 
	m¥e„tch
;

290 
cou¡î_t
 
	m¨rivÆ_time
;

291 
	mqueue_time
;

292 
	m°ìrög_time
;

293 
	mmiss_Êag
;

294 
	mdúty_Êag
;

295 
	mts_dñay
;

296 
	md©a_ª∂y
;

297 
	mc⁄f_bô
;

298 
	mc⁄f_höt
;

299 
	móæy_c⁄f
;

300 
	mscheduÀ
;

301 
	mesˇ≥_ch™√l
;

302 
	misSyncAc˚ss
;

303 
	mldl
;

304 
	mSyncLock
;

305 }
	tPackë
;

308 
	sMsg
{

309 
	mmsg_ty≥
;

310 
cou¡î_t
 
	mwhí
;

311 
Msg
 *
	m√xt
;

312 
Msg
 *
	m¥e
;

313 
Packë
 
	m∑ckë
;

314 }
	tMsg
;

317 
	sMsg_li°
{

318 
Msg
 *
	mhód
;

319 
Msg
 *
	mèû
;

320 }
	tMsg_li°
;

323 
	gM≠_Ægr
;

324 
	g√tw‹k_Ægr
;

326 
	sI≈ut_íåy_t
{

327 
	misVÆid
;

328 
Packë
 
	m∑ckë
;

329 
cou¡î_t
 
	mtime_°amp
;

332 
	sI≈ut_buf„r
{

333 
	mÊôs_ö_buf„r
;

334 
	m∑ckës_ö_buf„r
;

335 
I≈ut_íåy_t
 
	mI≈utE¡ry
[
BUFFER_SIZE
];

339 
cou¡î_t
 
	gœ°_∑ckë_cy˛e
[
PROCESSOR
][2];

340 
cou¡î_t
 
	gdi°_bö
[20];

341 
cou¡î_t
 
	gch™√l_occu∑ncy
;

342 
cou¡î_t
 
	gmëa_∑ckës
;

343 
cou¡î_t
 
	gd©a_∑ckës
;

344 
cou¡î_t
 
	gmëa_∑ckë_å™s„r
;

345 
cou¡î_t
 
	gd©a_∑ckë_å™s„r
;

346 
cou¡î_t
 
	gch™√l_busy_d©a
[
PROCESSOR
];

347 
cou¡î_t
 
	gch™√l_busy_mëa
[
PROCESSOR
];

349 
cou¡î_t
 
	gªq_c⁄f
[
PROCESSOR
];

350 
cou¡î_t
 
	gd©a_c⁄f
[
PROCESSOR
];

351 
cou¡î_t
 
	gd©a_c⁄f_övﬁves
[
PROCESSOR
][PROCESSOR];

352 
cou¡î_t
 
	gwrôe_back_övﬁves
[
PROCESSOR
][PROCESSOR];

353 
cou¡î_t
 
	gwrôe_back_öv_böcou¡
[3];

354 
cou¡î_t
 
	gd©a_c⁄f_öv_böcou¡
[7];

355 
cou¡î_t
 
	gd©a_way_c⁄f
[
PROCESSOR
];

356 
cou¡î_t
 
	gmëa_way_c⁄f
[
PROCESSOR
];

357 
cou¡î_t
 
	gbö_cou¡_íd
[
PROCESSOR
][PROCESSOR];

358 
cou¡î_t
 
	gbö_cou¡_°¨t
[
PROCESSOR
][PROCESSOR];

359 
cou¡î_t
 
	gªq_cy˛e_c⁄Êi˘s
[
PROCESSOR
];

360 
cou¡î_t
 
	gd©a_cy˛e_c⁄Êi˘s
[
PROCESSOR
];

361 
cou¡î_t
 
	gœ°_cy˛e
[
PROCESSOR
][4];

362 
Msg
 *
	gc⁄f_li°
[
PROCESSOR
][4];

363 
cou¡î_t
 
	gno_wrôe_back
;

364 
cou¡î_t
 
	gÆl_wrôe_back
;

365 
cou¡î_t
 
	g∑πül_wrôe_back
;

366 
cou¡î_t
 
	gno_sﬁuti⁄_pwb
;

369 
cou¡î_t
 
	gtŸÆ_wb_msg
;

370 
cou¡î_t
 
	gwb_•lô_c⁄f_evít
;

371 
cou¡î_t
 
	gWbS∂ôC⁄f
;

372 
cou¡î_t
 
	gWbS∂ôFaûC⁄f
;

373 
cou¡î_t
 
	gtŸÆ_wbhód_msg
;

374 
cou¡î_t
 
	gtŸÆ_wb_hód_suc˚ss
;

375 
cou¡î_t
 
	gtŸÆ_wb_hód_Áû
;

376 
cou¡î_t
 
	gtŸÆ_wbªq_c⁄fúm©i⁄
;

377 
cou¡î_t
 
	gtŸÆ_wbªq_c⁄víti⁄
;

378 
cou¡î_t
 
	gtŸÆ_wb_ªq_c⁄víti⁄_suc˚ss
;

379 
cou¡î_t
 
	gtŸÆ_wb_ªq_c⁄víti⁄_Áû_evít
;

380 
cou¡î_t
 
	gtŸÆ_wb_ªq_c⁄víti⁄_Áû_time
;

382 
cou¡î_t
 
	gtŸÆ_mem_msg
;

383 
cou¡î_t
 
	gmem_•lô_c⁄f_evít
;

384 
cou¡î_t
 
	gMemS∂ôC⁄f
;

385 
cou¡î_t
 
	gMemS∂ôFaûC⁄f
;

386 
cou¡î_t
 
	gtŸÆ_memhód_msg
;

387 
cou¡î_t
 
	gtŸÆ_mem_hód_suc˚ss
;

388 
cou¡î_t
 
	gtŸÆ_mem_hód_Áû
;

389 
cou¡î_t
 
	gtŸÆ_memªq_c⁄fúm©i⁄
;

390 
cou¡î_t
 
	gtŸÆ_memªq_c⁄víti⁄
;

391 
cou¡î_t
 
	gtŸÆ_mem_ªq_c⁄víti⁄_suc˚ss
;

392 
cou¡î_t
 
	gtŸÆ_mem_ªq_c⁄víti⁄_Áû_evít
;

393 
cou¡î_t
 
	gtŸÆ_mem_ªq_c⁄víti⁄_Áû_time
;

396 
	gmax_c⁄f
;

397 
	gmax_∑ckë_ªåy
;

398 
	gmax_∑ckës_öbuf„r
;

399 
	gmax_Êôs_öbuf„r
;

401 
cou¡î_t
 
	gMemPckC⁄fEvít
;

402 
cou¡î_t
 
	gMemSecPckC⁄fEvít
;

403 
cou¡î_t
 
	gWrôeBackC⁄fEvít
;

404 
cou¡î_t
 
	gRëønsmissi⁄C⁄fEvít
;

405 
cou¡î_t
 
	gRïlyC⁄fEvít
;

407 
cou¡î_t
 
	gªåy_c⁄Êi˘
;

408 
cou¡î_t
 
	gL1_L2_c⁄Êi˘
;

409 
cou¡î_t
 
	gÆl_L2_miss_c⁄Êi˘
;

410 
cou¡î_t
 
	gL2_miss_c⁄Êi˘
;

411 
cou¡î_t
 
	gL2_dúty_c⁄Êi˘
;

412 
cou¡î_t
 
	gqueue_dñay_c⁄Êi˘
;

413 
cou¡î_t
 
	gl2_fifo_c⁄Êi˘
;

414 
cou¡î_t
 
	gfifo_queue_°ìrög_c⁄Êi˘
;

415 
cou¡î_t
 
	g°ìrög_queue_c⁄Êi˘
;

416 
cou¡î_t
 
	gqueue_c⁄Êi˘
;

417 
cou¡î_t
 
	gwr⁄g_c⁄Êi˘
;

418 
cou¡î_t
 
	gªque°_˛o£_c⁄Êi˘
;

419 
cou¡î_t
 
	gmax_queue_dñay
;

421 
	s∑ckë_c⁄Êi˘_li°
{

422 
Packë
 
	m∑ckë
[
PROCESSOR
];

423 
	m∑ckë_num
;

424 }
	g∑ckë_c⁄Êi˘
[
PROCESSOR
][5];

426 
cou¡î_t
 
	gœ°_d©a_time
[
PROCESSOR
];

427 
cou¡î_t
 
	gœ°_time
[
PROCESSOR
];

428 
cou¡î_t
 
	gRT_time
[
PROCESSOR
][PROCESSOR];

429 
cou¡î_t
 
	gRTCC
;

430 
cou¡î_t
 
	gRTCC_Áû
;

431 
cou¡î_t
 
	gRTCC_hÆf
;

432 
cou¡î_t
 
	gRTCC_miss
;

433 
cou¡î_t
 
	gRTCC_ªdu˚d
;

434 
cou¡î_t
 
	gRTCC_Êag
[
PROCESSOR
];

435 
cou¡î_t
 
	gmëa_˛o£_∑ckës
;

436 
cou¡î_t
 
	gmëa_ªdu˚d_∑ckës
;

437 
cou¡î_t
 
	gd©a_∑ckë_gíî©e
;

438 
cou¡î_t
 
globÆ_d©a_∑ckës_gíî©i⁄
;

439 
cou¡î_t
 
	gd©a_∑ckë_gíî©e_max
;

442 
cou¡î_t
 
	g√tw‹k_queue_dñay
;

443 
cou¡î_t
 
	gouçut_queue_dñay
;

444 
cou¡î_t
 
	gd©a_√tw‹k_queue_dñay
;

445 
cou¡î_t
 
	gmëa_√tw‹k_queue_dñay
;

446 
cou¡î_t
 
	g≥ndög_dñay
;

447 
cou¡î_t
 
	g°ìrög_dñay
;

448 
cou¡î_t
 
	gd©a_c⁄Êi˘i⁄_dñay
;

449 
cou¡î_t
 
	gmëa_c⁄Êi˘i⁄_dñay
;

450 
cou¡î_t
 
	gœ£r_swôch_⁄_dñay
;

451 
cou¡î_t
 
	gtime¶Ÿ_waô_time
;

452 
cou¡î_t
 
	gmëa_time¶Ÿ_waô_time
;

454 
cou¡î_t
 
	g√tw‹k_queue_Dñay
[
PROCESSOR
];

455 
cou¡î_t
 
	gouçut_queue_Dñay
[
PROCESSOR
];

456 
cou¡î_t
 
	gd©a_√tw‹k_queue_Dñay
[
PROCESSOR
];

457 
cou¡î_t
 
	gmëa_√tw‹k_queue_Dñay
[
PROCESSOR
];

458 
cou¡î_t
 
	g≥ndög_Dñay
[
PROCESSOR
];

459 
cou¡î_t
 
	g°ìrög_Dñay
[
PROCESSOR
];

460 
cou¡î_t
 
	gd©a_c⁄Êi˘i⁄_Dñay
[
PROCESSOR
];

461 
cou¡î_t
 
	gmëa_c⁄Êi˘i⁄_Dñay
[
PROCESSOR
];

462 
cou¡î_t
 
	gœ£r_swôch_⁄_Dñay
[
PROCESSOR
];

463 
cou¡î_t
 
	gtime¶Ÿ_waô_Dñay
[
PROCESSOR
];

464 
cou¡î_t
 
	gmëa_time¶Ÿ_waô_Dñay
[
PROCESSOR
];

466 
cou¡î_t
 
	gno_queue_dñay
;

467 
cou¡î_t
 
	g√tw‹k_dñay_ö_fibî
;

468 
cou¡î_t
 
	gc⁄Êi˘i⁄_dñay
;

469 
cou¡î_t
 
	gd©a_c⁄Êi˘_∑ckë_num
;

470 
cou¡î_t
 
	gmëa_c⁄Êi˘_∑ckë_num
;

471 
cou¡î_t
 
	gmem_d©a_c⁄Êi˘
;

472 
cou¡î_t
 
	gmem_ªq_c⁄Êi˘
;

473 
cou¡î_t
 
	gmem_d©a_ªåy
;

474 
cou¡î_t
 
	gmem_ªq_ªåy
;

475 
cou¡î_t
 
	gª∂y_d©a_∑ckës
;

476 
cou¡î_t
 
	g‹igöÆ_ª∂y_d©a_∑ckës
;

477 
cou¡î_t
 
	gwrôe_back_∑ckës
;

478 
cou¡î_t
 
	g‹igöÆ_wrôe_back_∑ckës
;

479 
cou¡î_t
 
	gd©a_ªåy_∑ckë_num
;

480 
cou¡î_t
 
	gmëa_ªåy_∑ckë_num
;

481 
cou¡î_t
 
	g≥ndög_∑ckë_num
;

482 
cou¡î_t
 
	gwbªq_time¶Ÿ_waô_time
;

483 
cou¡î_t
 
	g∑ckës_£ndög
[
PROCESSOR
];

484 
cou¡î_t
 
	g∑ckës_£ndög_bö_cou¡
[5];

485 
cou¡î_t
 
	gœ°_∑ckë_time
[
PROCESSOR
];

486 
cou¡î_t
 
	gœ°_˛o£_time
[
PROCESSOR
];

487 
cou¡î_t
 
	gœ°_mëa_∑ckë
[3][
PROCESSOR
];

488 
cou¡î_t
 
	g√xt_mëa_∑ckë
[3][
PROCESSOR
];

489 
cou¡î_t
 
	gœ°_mëa_∑ckë_Áke
[
PROCESSOR
];

490 
cou¡î_t
 
	gmëa_waô_time
[
PROCESSOR
];

491 
cou¡î_t
 
	gbackup_å™s„r_waôtime
[
PROCESSOR
];

492 
cou¡î_t
 
	gœ°_dñay_f‹_d©a
[
PROCESSOR
];

493 
cou¡î_t
 
	gå™smôãr_backup_scheduÀ
[
PROCESSOR
];

494 
cou¡î_t
 
	gfú°_∑ckë_time
[
PROCESSOR
];

495 
cou¡î_t
 
	gªåy_d©a_queue
;

496 
cou¡î_t
 
	gªåy_mëa_queue
;

497 
cou¡î_t
 
	gª˚ivî_occ_time
[
PROCESSOR
][PROCESSOR];

498 
cou¡î_t
 
	gmëa_dñay_∑ckës
;

499 
cou¡î_t
 
	gwbªq_dñay_∑ckës
;

500 
cou¡î_t
 
	gmëa_l1_dñay_∑ckës
;

501 
cou¡î_t
 
	gmëa_∑ckës_f‹w¨d
;

502 
cou¡î_t
 
	gd©a_∑ckës_f‹w¨d
;

505 
cou¡î_t
 
	gtŸÆ_cy˛e_œ£r_powî_⁄
;

506 
cou¡î_t
 
	gœ£r_powî_swôch⁄_cou¡î
;

507 
cou¡î_t
 
	gœ£r_powî_swôchoff_cou¡î
;

508 
cou¡î_t
 
	gœ£r_dúe˘i⁄_swôch_cou¡î
;

509 
cou¡î_t
 
	gÊôs_å™smô_cou¡î
;

510 
cou¡î_t
 
	gÊôs_ª˚ivög_cou¡î
;

511 
cou¡î_t
 
	gd©a_∑ckës_dñay
;

512 
cou¡î_t
 
	gd©a_∑ckës_no_dñay
;

513 
cou¡î_t
 
	gd©a_dñay
;

514 
cou¡î_t
 
	gtŸÆ_cy˛e_c⁄f_œ£r_powî_⁄
;

515 
cou¡î_t
 
	gc⁄f_œ£r_powî_swôch⁄_cou¡î
;

516 
cou¡î_t
 
	gc⁄f_œ£r_powî_swôchoff_cou¡î
;

519 
Msg_li°
 *
	gmsg_li°
;

522 
Flô_li°
 
	gå™smôãr_mëa
[
PROCESSOR
];

523 
Flô_li°
 
	gå™smôãr_d©a
[
PROCESSOR
];

524 
Flô_li°
 
	gå™smôãr_backup
[
PROCESSOR
];

525 
I≈ut_buf„r
 
	göput_buf„r
[
PROCESSOR
];

526 
	gœ°_∑ckë_des
[
PROCESSOR
];

527 
	gœ°_mëa_∑ckë_des
[3][
PROCESSOR
];

528 
	gœ°_mëa_∑ckë_des_Áke
[
PROCESSOR
];

529 
	gœ°_∑ckë_des_backup
[
PROCESSOR
];

530 
cou¡î_t
 
	gdñay_cou¡î
[2][
PROCESSOR
];

531 
cou¡î_t
 
	gdñay_cou¡
[2][
PROCESSOR
][PROCESSOR];

532 
cou¡î_t
 
	gdñay_cou¡î_backup
[
PROCESSOR
];

535 
Flô_li°
 
	gout_buf„r
[
PROCESSOR
];

536 
Packë
 
	g∑ckë_queue
[
PROCESSOR
][256];

537 
	g∑ckë_queue_èû
[
PROCESSOR
];

538 
	g∑ckë_queue_hód
[
PROCESSOR
];

539 
	g∑ckë_queue_num
[
PROCESSOR
];

540 
	göput_buf„r_num
[
PROCESSOR
][2];

542 #ifde‡
CONF_PREDICTOR


544 
	#MAXRECEIVERS
 
PROCESSOR
*3

	)

545 
	#REQ_QUEUE_SIZE
 256

	)

546 
	sReqPídög
 {

547 
	mvÆid
;

548 
	mdes
;

549 
md_addr_t
 
	maddr
;

550 
cou¡î_t
 
	mtime
;

551 
	m›_code
;

554 
cou¡î_t
 
	gc⁄Êi˘_èbÀ
[
MAXRECEIVERS
][
PROCESSOR
][PROCESSOR];

555 
cou¡î_t
 
	gmëa_c⁄Êi˘_èbÀ
[
MAXRECEIVERS
][
PROCESSOR
][PROCESSOR];

556 
cou¡î_t
 
	gmëa_ldl_c⁄Êi˘_èbÀ
[
MAXRECEIVERS
][
PROCESSOR
][PROCESSOR];

559 #ifde‡
CONF_PRED_TABLE


560 
	sC⁄fPªdTabÀ
 {

561 
	mLa°Pªd
;

562 
	mLLa°Pªd
;

563 
	mcou¡î
;

564 
	mLcou¡î
;

567 
C⁄fPªdTabÀ
 
	gc⁄Âªd
[
MAXRECEIVERS
];

569 
cou¡î_t
 
	gãnˇ£
;

570 
cou¡î_t
 
	gMu…iCa£
[
PROCESSOR
];

572 
ReqPídög
 
	gReqPídögQueue
[
PROCESSOR
][
REQ_QUEUE_SIZE
];

573 
	gReqPídögQueue_num
[
PROCESSOR
];

574 
	gMaxReqPídög
;

576 
	gc⁄f_∑ckë_li°
[
MAXRECEIVERS
][
PROCESSOR
];

577 
Packë
 
	gc⁄f_∑ckë
[
MAXRECEIVERS
][
PROCESSOR
];

578 
	gc⁄f_∑ckë_num
[
MAXRECEIVERS
];

579 
	gc⁄f_PID
[
MAXRECEIVERS
];

580 
	gC⁄fWaô
[
MAXRECEIVERS
];

581 
cou¡î_t
 
	gwb_ªåy_c⁄f
;

582 
cou¡î_t
 
	g¥edi˘_c‹ª˘
;

583 
cou¡î_t
 
	g¥edi˘_Áû
;

584 
cou¡î_t
 
	g¥edi˘C‹ª˘_two
;

585 
cou¡î_t
 
	g¥edi˘C‹ª˘_m‹e
;

586 
cou¡î_t
 
	g¥edi˘Faû_two
;

587 
cou¡î_t
 
	g¥edi˘Faû_m‹e
;

588 
cou¡î_t
 
	g¥edi˘_èbÀ_c‹ª˘
;

589 
cou¡î_t
 
	g¥edi˘_ªq_c‹ª˘
;

590 
cou¡î_t
 
	ghöt_ª˚ived
;

591 
cou¡î_t
 
	ghöt_ª˚ived_wr⁄g
;

592 
cou¡î_t
 
	g∑ckë_c⁄f_höt_c⁄f
;

593 
cou¡î_t
 
	g∑ckë_c⁄f_höt_suc
;

594 
cou¡î_t
 
	gMu…iPídögEº‹
;

595 
cou¡î_t
 
	gWbPídögEº‹
;

596 
cou¡î_t
 
	gReqPídögEº‹
;

597 
cou¡î_t
 
	gReqPídögEº‹2
;

598 
cou¡î_t
 
	gTŸÆReqPídögNum
;

599 
cou¡î_t
 
	gReqPídögBö
[12];

600 
C⁄fPackëLi°In£π
(
Packë
 
∑ckë
, 
PID
);

601 
C⁄fPackëLi°CÀ™
(
cou¡î_t
 
sim_cy˛e
);

602 
C⁄fPªdi˘‹
(
cou¡î_t
 
sim_cy˛e
);

603 
Pªdi˘TabÀ
(
pid
, 
pid_b¨
, 
£ed
, 
m
);

604 
PidTabÀCheck
(
PID
, 
§c
, 
j
, 
cou¡î_t
 
sim_cy˛e
);

605 
öput_buf„r_check
(
Packë
 
∑ckë
, 
cou¡î_t
 
sim_cy˛e
);

606 
c⁄f_höt
(
Packë
 
∑ckë
, 
cou¡î_t
 
sim_cy˛e
);

608 #ifde‡
EMC


609 
	gmëa_c⁄f_∑ckë_li°
[
MAXRECEIVERS
][
PROCESSOR
];

610 
Packë
 
	gmëa_c⁄f_∑ckë
[
MAXRECEIVERS
][
PROCESSOR
];

611 
	gmëa_c⁄f_∑ckë_num
[
MAXRECEIVERS
];

612 
MëaC⁄fPackëLi°In£π
(
Packë
 
∑ckë
, 
PID
);

613 
MëaC⁄fPackëLi°CÀ™
(
cou¡î_t
 
sim_cy˛e
);

614 
MëaE¨lyC⁄f
(
cou¡î_t
 
sim_cy˛e
);

617 #i‡(
MAXTHREADS
 == 1)

618 
	#PID_SIZE
 0

	)

619 
	#PID_MASK
 2

	)

621 #i‡(
MAXTHREADS
 == 2)

622 
	#PID_SIZE
 1

	)

623 
	#PID_MASK
 4

	)

625 #i‡(
MAXTHREADS
 == 4)

626 
	#PID_SIZE
 3

	)

627 
	#PID_MASK
 8

	)

629 #i‡(
MAXTHREADS
 == 8)

630 
	#PID_SIZE
 4

	)

631 
	#PID_MASK
 16

	)

633 #i‡(
MAXTHREADS
 == 16)

634 
	#PID_SIZE
 5

	)

635 
	#PID_MASK
 32

	)

637 #i‡(
MAXTHREADS
 == 32)

638 
	#PID_SIZE
 6

	)

639 
	#PID_MASK
 64

	)

641 #i‡(
MAXTHREADS
 == 64)

642 
	#PID_SIZE
 7

	)

643 
	#PID_MASK
 128

	)

645 #i‡(
MAXTHREADS
 == 80)

646 
	#PID_SIZE
 8

	)

647 
	#PID_MASK
 256

	)

649 #i‡(
MAXTHREADS
 == 128)

650 
	#PID_SIZE
 8

	)

651 
	#PID_MASK
 256

	)

653 #i‡(
MAXTHREADS
 == 256)

654 
	#PID_SIZE
 9

	)

655 
	#PID_MASK
 512

	)

657 
	#PID_shi·
 
PID_SIZE


	)

658 
	#PID_b¨_mask
 (
PID_MASK
 - 1)

	)

659 
PID_f‹m
(
PID
);

662 
Flô_li°
 *
	gd©a_ª˚ivî
[
PROCESSOR
], *
	gmëa_ª˚ivî
[PROCESSOR];

664 
	gœ£r_powî
[2][
PROCESSOR
];

665 
cou¡î_t
 
	gœ£r_powî_⁄_cy˛e
[2][
PROCESSOR
];

666 
cou¡î_t
 
	gœ£r_powî_°¨t_cy˛e
[2][
PROCESSOR
];

667 
	gc⁄f_œ£r_powî
[2][
PROCESSOR
];

668 
cou¡î_t
 
	gc⁄f_œ£r_powî_⁄_cy˛e
[2][
PROCESSOR
];

669 
cou¡î_t
 
	gc⁄f_œ£r_powî_°¨t_cy˛e
[2][
PROCESSOR
];

672 
›tiˇl_›ti⁄s
(
›t_odb_t
 *
odb
);

674 
›tiˇl_ªg_°©s
 (
›t_odb_t
 *
sdb
);

675 
∑ckë_ªåy_Ægr
(
Packë
 
∑ckë
);

678 
add_Êô
(
Flô
 *
Êô
, 
Flô_li°
 *
Êô_li°
);

679 
‰ì_Êô
(
Flô
 *
Êô
, 
Flô_li°
 *
Êô_li°
);

683 
add_mesßge
(
cou¡î_t
 
°¨t_time
, 
msg_ty≥
, 
Packë
 
∑ckë
);

685 
‰ì_mesßge
(
Msg
 *
ﬁdmsg
);

687 
add_∑ckë
(
Packë
 
∑ckë
, 
des
);

688 
‰ì_∑ckë
(
des
);

691 
maödúe˘sim
(
m≠_Ægr
, 
√t_Ægr
);

692 
Msg_li°_öô
(
Msg_li°
 *
msg_li°
);

693 
Êô_li°_öô
(
Flô_li°
 
Êô_Æi°
);

696 
c⁄Êi˘_check
(
Packë
 *
∑ckë
, 
cou¡î_t
 
whí
);

697 
c⁄Êi˘_ty≥_ch™ge
(
Flô_li°
 *
Êô_li°
, 
Êô_id
);

698 
cy˛e_c⁄Êi˘_check
(
Packë
 
∑ckë
, 
cou¡î_t
 
whí
, 
ª˚ivîs
);

700 
c⁄li˘_böcou¡_cﬁÀ˘
(
cou¡î_t
 
sim_cy˛e
);

702 
öput_buf„r_add
(
Packë
 
∑ckë
, 
cou¡î_t
 
time_°amp
);

704 
öput_buf„r_‰ì
(
Packë
 
∑ckë
, 
cou¡î_t
 
sim_cy˛e
);

705 
is_≠≥ndög_addr
(
Packë
 
∑ckë
);

706 
öput_buf„r_lookup
(
§c
, 
cou¡î_t
 
sim_cy˛e
);

707 
ªåy_∑ckë
(
msgno
, 
cou¡î_t
 
sim_cy˛e
, 
§c
);

710 
ª˚ive_msg
(
Packë
 
∑ckë
, 
cou¡î_t
 
sim_cy˛e
);

712 
£tup_dñay
(
§c
, 
des
, 
cou¡î_t
 
sim_cy˛e
, 
p_ty≥
);

714 
ch™√l_busy_check
(
§c
, 
des
, 
ty≥
, 
cou¡î_t
 
sim_cy˛e
);

717 
ª˚ive_msg_d©a
(
Packë
 
pck
, 
cou¡î_t
 
sim_cy˛e
);

719 
ª˚ive_msg_mëa
(
Packë
 
pck
, 
cou¡î_t
 
sim_cy˛e
);

721 
ª˚ive_Êô_msg
(
Packë
 
pck
, 
cou¡î_t
 
sim_cy˛e
);

722 #ifde‡
CONF_RES_ACK


724 
ª˚ive_ack_msg
(
Packë
 
pck
, 
cou¡î_t
 
sim_cy˛e
);

728 
dúe˘MsgIn£π
(
s1
, 
s2
, 
d1
, 
d2
, 
cou¡î_t
 
sim_cy˛e
, 
size
, 
msgNo
, 
md_addr_t
 
addr
, 
›î©i⁄
, 
dñay
, 
L2miss_Êag
, 
¥e„tch
, 
dúty_Êag
, cou¡î_à
¨rivÆ_time
, 
d©a_ª∂y
, 
c⁄f_bô
, 
esˇ≥_ch™√l
, 
eví_Êag
, 
isSyncAc˚ss
, 
SyncLock


729 #ifde‡
EXCLUSIVE_OPT


730 ,
ex˛usive_a·î_wb


734 
dúe˘RunSim
(
cou¡î_t
 
sim_cy˛e
);

735 
›tiˇlBuf„rS∑˚
(
des1
, 
des2
, 
›t
);

737 
föishMsg
(
§c
, 
des
, 
cou¡î_t
 
°¨t_time
, cou¡î_à
p›√tmsgno
, 
∑ckë_ty≥
, cou¡î_à
å™s„r_time
, 
mëa_dñay
, cou¡î_à
ªq_time
, 
›î©i⁄
, 
out_buf„r_dec
);

738 #ifde‡
OPTICAL_INTERCONNECT


739 
‰ì_out_buf„r_Êô
(
ôî©i⁄
, 
des
);

743 
£ndög_Êô
(
Packë
 
∑ckë
, 
cou¡î_t
 
sim_cy˛e
);

745 
ª˚ive_Êô
(
Packë
 
∑ckë
, 
cou¡î_t
 
sim_cy˛e
);

748 
ª˚ivî_m≠
(
§c
, 
des
, 
ª˚ivî
, 
md_addr_t
 
addr
);

	@target-alpha-linux/ecoff.h

54 #i‚de‡
ECOFF_H


55 
	#ECOFF_H


	)

57 
	~"Æpha.h
"

59 
	#ECOFF_EB_MAGIC
 0x0160

	)

60 
	#ECOFF_EB_OTHER
 0x6001

	)

61 
	#ECOFF_EL_MAGIC
 0x0162

	)

62 
	#ECOFF_EL_OTHER
 0x6201

	)

63 
	#ECOFF_ALPHAMAGIC
 0603

	)

64 
	#ELPH_ALPHAMAGIC
 17791

	)

66 
	secoff_fûehdr
 {

67 
hÆf_t
 
	mf_magic
;

68 
hÆf_t
 
	mf_ns˙s
;

69 
sw‹d_t
 
	mf_timd©
;

70 
qw‹d_t
 
	mf_sym±r
;

71 
sw‹d_t
 
	mf_nsyms
;

72 
hÆf_t
 
	mf_›thdr
;

73 
hÆf_t
 
	mf_Êags
;

76 
	secoff_aouthdr
 {

77 
hÆf_t
 
	mmagic
;

78 
hÆf_t
 
	mv°amp
;

79 
hÆf_t
 
	mbldªv
;

80 
hÆf_t
 
	m∑d˚Œ
;

81 
qw‹d_t
 
	mtsize
;

82 
qw‹d_t
 
	mdsize
;

83 
qw‹d_t
 
	mbsize
;

84 
qw‹d_t
 
	míåy
;

85 
qw‹d_t
 
	mãxt_°¨t
;

86 
qw‹d_t
 
	md©a_°¨t
;

87 
qw‹d_t
 
	mbss_°¨t
;

88 
sw‹d_t
 
	mg¥mask
;

89 
sw‹d_t
 
	mÂrmask
;

90 
qw‹d_t
 
	mgp_vÆue
;

93 
	secoff_s˙hdr
 {

94 
	ms_«me
[8];

95 
qw‹d_t
 
	ms_∑ddr
;

96 
qw‹d_t
 
	ms_vaddr
;

97 
qw‹d_t
 
	ms_size
;

98 
qw‹d_t
 
	ms_s˙±r
;

99 
qw‹d_t
 
	ms_ªÕå
;

100 
qw‹d_t
 
	ms_ n›å
;

101 
hÆf_t
 
	ms_ƒñoc
;

102 
hÆf_t
 
	ms_∆¬o
;

103 
sw‹d_t
 
	ms_Êags
;

106 
	secoff_symhdr_t
 {

107 
hÆf_t
 
	mmagic
;

108 
hÆf_t
 
	mv°amp
;

110 
sw‹d_t
 
	mûöeMax
;

111 
sw‹d_t
 
	midnMax
;

112 
sw‹d_t
 
	mùdMax
;

113 
sw‹d_t
 
	misymMax
;

114 
sw‹d_t
 
	mi›tMax
;

115 
sw‹d_t
 
	müuxMax
;

116 
sw‹d_t
 
	missMax
;

117 
sw‹d_t
 
	missExtMax
;

118 
sw‹d_t
 
	mifdMax
;

119 
sw‹d_t
 
	m¸fd
;

120 
sw‹d_t
 
	mõxtMax
;

121 
qw‹d_t
 
	mcbLöe
;

122 
qw‹d_t
 
	mcbLöeOff£t
;

123 
qw‹d_t
 
	mcbDnOff£t
;

124 
qw‹d_t
 
	mcbPdOff£t
;

125 
qw‹d_t
 
	mcbSymOff£t
;

126 
qw‹d_t
 
	mcbO±Off£t
;

127 
qw‹d_t
 
	mcbAuxOff£t
;

128 
qw‹d_t
 
	mcbSsOff£t
;

129 
qw‹d_t
 
	mcbSsExtOff£t
;

130 
qw‹d_t
 
	mcbFdOff£t
;

131 
qw‹d_t
 
	mcbRfdOff£t
;

132 
qw‹d_t
 
	mcbExtOff£t
;

133 } 
	tecoff_HDRR
;

135 
	#ECOFF_magicSym
 0x1992

	)

137 
	secoff_fdr
 {

138 
w‹d_t
 
	madr
;

139 
sw‹d_t
 
	mrss
;

140 
sw‹d_t
 
	missBa£
;

141 
sw‹d_t
 
	mcbSs
;

142 
sw‹d_t
 
	misymBa£
;

143 
sw‹d_t
 
	mcsym
;

144 
sw‹d_t
 
	mûöeBa£
;

145 
sw‹d_t
 
	m˛öe
;

146 
sw‹d_t
 
	mi›tBa£
;

147 
sw‹d_t
 
	mc›t
;

148 
hÆf_t
 
	mùdFú°
;

149 
hÆf_t
 
	m˝d
;

150 
sw‹d_t
 
	müuxBa£
;

151 
sw‹d_t
 
	mˇux
;

152 
sw‹d_t
 
	mrfdBa£
;

153 
sw‹d_t
 
	m¸fd
;

154 
	mœng
 :5;

155 
	mfMîge
 :1;

156 
	mfRódö
 :1;

157 
	mfBigídün
 :1;

158 
	mª£rved
 :24;

159 
sw‹d_t
 
	mcbLöeOff£t
;

160 
sw‹d_t
 
	mcbLöe
;

161 } 
	tecoff_FDR
;

163 
	secoff_pdr
 {

164 
w‹d_t
 
	madr
;

165 
sw‹d_t
 
	misym
;

166 
sw‹d_t
 
	mûöe
;

167 
sw‹d_t
 
	mªgmask
;

168 
sw‹d_t
 
	mªgoff£t
;

169 
sw‹d_t
 
	mi›t
;

170 
sw‹d_t
 
	m‰egmask
;

171 
sw‹d_t
 
	m‰egoff£t
;

172 
sw‹d_t
 
	m‰ameoff£t
;

173 
hÆf_t
 
	m‰amîeg
;

174 
hÆf_t
 
	mp¸eg
;

175 
sw‹d_t
 
	m Low
;

176 
sw‹d_t
 
	m High
;

177 
sw‹d_t
 
	mcbLöeOff£t
;

178 } 
	tecoff_PDR
;

180 
	secoff_SYMR
 {

181 
qw‹d_t
 
	mvÆue
;

182 
sw‹d_t
 
	miss
;

183 
	m°
 :6;

184 
	msc
 :5;

185 
	mª£rved
 :1;

186 
	mödex
 :20;

187 } 
	tecoff_SYMR
;

189 
	secoff_EXTR
 {

190 
ecoff_SYMR
 
	masym
;

191 
sw‹d_t
 
	mifd
;

192 
sw‹d_t
 
	mª£rved
;

193 } 
	tecoff_EXTR
;

195 
	#ECOFF_R_SN_TEXT
 1

	)

196 
	#ECOFF_R_SN_RDATA
 2

	)

197 
	#ECOFF_R_SN_DATA
 3

	)

198 
	#ECOFF_R_SN_SDATA
 4

	)

199 
	#ECOFF_R_SN_SBSS
 5

	)

200 
	#ECOFF_R_SN_BSS
 6

	)

202 
	#ECOFF_STYP_TEXT
 0x0020

	)

203 
	#ECOFF_STYP_RTEXT
 0x20000020

	)

204 
	#ECOFF_STYP_RDATA
 0x0100

	)

205 
	#ECOFF_STYP_DATA
 0x0040

	)

206 
	#ECOFF_STYP_SDATA
 0x0200

	)

207 
	#ECOFF_STYP_SBSS
 0x0400

	)

208 
	#ECOFF_STYP_BSS
 0x0080

	)

209 
	#ECOFF_STYP_INIT
 0x80000000

	)

211 
	#ECOFF_STYP_FINI
 0x01000000

	)

212 
	#ECOFF_STYP_RCONST
 0x02200000

	)

213 
	#ECOFF_STYP_LITA
 0x04000000

	)

214 
	#ECOFF_STYP_LIT8
 0x08000000

	)

215 
	#ECOFF_STYP_LIT4
 0x10000000

	)

216 
	#ECOFF_STYP_XDATA
 0x02400000

	)

217 
	#ECOFF_STYP_PDATA
 0x02800000

	)

219 
	#ECOFF_°Nû
 0

	)

220 
	#ECOFF_°GlobÆ
 1

	)

221 
	#ECOFF_°Sètic
 2

	)

222 
	#ECOFF_°P¨am
 3

	)

223 
	#ECOFF_°Loˇl
 4

	)

224 
	#ECOFF_°Labñ
 5

	)

225 
	#ECOFF_°Proc
 6

	)

226 
	#ECOFF_°Block
 7

	)

227 
	#ECOFF_°End
 8

	)

228 
	#ECOFF_°Membî
 9

	)

229 
	#ECOFF_°Ty≥def
 10

	)

230 
	#ECOFF_°Fûe
 11

	)

231 
	#ECOFF_°RegRñoc
 12

	)

232 
	#ECOFF_°F‹w¨d
 13

	)

233 
	#ECOFF_°SèticProc
 14

	)

234 
	#ECOFF_°C⁄°™t
 15

	)

	@target-alpha-linux/elf64.h

1 
	~"°döt.h
"

3 
	#Elf64_Addr
 
uöt64_t


	)

4 
	#Elf64_Off
 
uöt64_t


	)

5 
	#Elf64_HÆf
 
uöt16_t


	)

6 
	#Elf64_W‹d
 
uöt32_t


	)

7 
	#Elf64_Sw‹d
 
uöt32_t


	)

8 
	#Elf64_Xw‹d
 
uöt64_t


	)

9 
	#Elf64_Sxw‹d
 
uöt64_t


	)

12 
	#ELFCLASS32
 1

13 
	#ELFCLASS64
 2

14 

	)

16 
	#ELFDATA2LSB
 1

17 
	#ELFDATA2MSB
 2

18 

	)

20 
	#ET_NONE
 0

21 
	#ET_REL
 1

22 
	#ET_EXEC
 2

23 
	#ET_DYN
 3

24 
	#ET_CORE
 4

25 
	#ET_LOOS
 0xFE00

26 
	#ET_HIOS
 0xFEFF

27 
	#ET_LOPROC
 0xFF00

28 
	#ET_HIPROC
 0xFFFF

29 

	)

31 
	#PT_NULL
 0

32 
	#PT_LOAD
 1

33 
	#PT_DYNAMIC
 2

34 
	#PT_INTERP
 3

35 
	#PT_NOTE
 4

36 
	#PT_SHLIB
 5

37 
	#PT_PHDR
 6

38 
	#PT_LOOS
 0x60000000

39 
	#PT_HIOS
 0x6FFFFFFF

40 
	#PT_LOPROC
 0x70000000

41 
	#PT_HIPROC
 0x7FFFFFFF

42 

	)

44 
	#F_X
 0x1

45 
	#PF_W
 0x2

46 
	#PF_R
 0x4

47 
	#PF_MASKOS
 0x00FF0000

48 
	#PF_MASKPROC
 0xFF000000

49 

	)

51 
	#SHT_NULL
 0

52 
	#SHT_PROGBITS
 1

53 
	#SHT_SYMTAB
 2

54 
	#SHT_STRTAB
 3

55 
	#SHT_RELA
 4

56 
	#SHT_HASH
 5

57 
	#SHT_DYNAMIC
 6

58 
	#SHT_NOTE
 7

59 
	#SHT_NOBITS
 8

60 
	#SHT_REL
 9

61 
	#SHT_SHLIB
 10

62 
	#SHT_DYNSYM
 11

63 
	#SHT_LOOS
 0x60000000

64 
	#SHT_HIOS
 0x6FFFFFFF

65 
	#SHT_LOPROC
 0x70000000

66 
	#SHT_HIPROC
 0x7FFFFFFF

67 

	)

70 
	me_idít
[16];

71 
Elf64_HÆf
 
	me_ty≥
;

72 
Elf64_HÆf
 
	me_machöe
;

73 
Elf64_W‹d
 
	me_vîsi⁄
;

74 
Elf64_Addr
 
	me_íåy
;

75 
Elf64_Off
 
	me_phoff
;

76 
Elf64_Off
 
	me_shoff
;

77 
Elf64_W‹d
 
	me_Êags
;

78 
Elf64_HÆf
 
	me_ehsize
;

79 
Elf64_HÆf
 
	me_phítsize
;

80 
Elf64_HÆf
 
	me_phnum
;

81 
Elf64_HÆf
 
	me_shítsize
;

82 
Elf64_HÆf
 
	me_shnum
;

83 
Elf64_HÆf
 
	me_sh°∫dx
;

84 } 
	tElf64_Ehdr
;

88 
Elf64_W‹d
 
	msh_«me
;

89 
Elf64_W‹d
 
	msh_ty≥
;

90 
Elf64_Xw‹d
 
	msh_Êags
;

91 
Elf64_Addr
 
	msh_addr
;

92 
Elf64_Off
 
	msh_off£t
;

93 
Elf64_Xw‹d
 
	msh_size
;

94 
Elf64_W‹d
 
	msh_lök
;

95 
Elf64_W‹d
 
	msh_öfo
;

96 
Elf64_Xw‹d
 
	msh_addølign
;

97 
Elf64_Xw‹d
 
	msh_ítsize
;

98 } 
	tElf64_Shdr
;

102 
Elf64_W‹d
 
	m°_«me
;

103 
	m°_öfo
;

104 
	m°_Ÿhî
;

105 
Elf64_HÆf
 
	m°_shndx
;

106 
Elf64_Addr
 
	m°_vÆue
;

107 
Elf64_Xw‹d
 
	m°_size
;

108 } 
	tElf64_Sym
;

112 
Elf64_Addr
 
	mr_off£t
;

113 
Elf64_Xw‹d
 
	mr_öfo
;

114 } 
	tElf64_Rñ
;

118 
Elf64_Addr
 
	mr_off£t
;

119 
Elf64_Xw‹d
 
	mr_öfo
;

120 
Elf64_Sxw‹d
 
	mr_addíd
;

121 } 
	tElf64_Rña
;

125 
Elf64_W‹d
 
	mp_ty≥
;

126 
Elf64_W‹d
 
	mp_Êags
;

127 
Elf64_Off
 
	mp_off£t
;

128 
Elf64_Addr
 
	mp_vaddr
;

129 
Elf64_Addr
 
	mp_∑ddr
;

130 
Elf64_Xw‹d
 
	mp_fûesz
;

131 
Elf64_Xw‹d
 
	mp_memsz
;

132 
Elf64_Xw‹d
 
	mp_Æign
;

133 } 
	tElf64_Phdr
;

	@target-alpha/ecoff.h

85 #i‚de‡
ECOFF_H


86 
	#ECOFF_H


	)

88 
	~"Æpha.h
"

90 
	#ECOFF_EB_MAGIC
 0x0160

	)

91 
	#ECOFF_EB_OTHER
 0x6001

	)

92 
	#ECOFF_EL_MAGIC
 0x0162

	)

93 
	#ECOFF_EL_OTHER
 0x6201

	)

94 
	#ECOFF_ALPHAMAGIC
 0603

	)

96 
	secoff_fûehdr
 {

97 
hÆf_t
 
	mf_magic
;

98 
hÆf_t
 
	mf_ns˙s
;

99 
sw‹d_t
 
	mf_timd©
;

100 
qw‹d_t
 
	mf_sym±r
;

101 
sw‹d_t
 
	mf_nsyms
;

102 
hÆf_t
 
	mf_›thdr
;

103 
hÆf_t
 
	mf_Êags
;

106 
	secoff_aouthdr
 {

107 
hÆf_t
 
	mmagic
;

108 
hÆf_t
 
	mv°amp
;

109 
hÆf_t
 
	mbldªv
;

110 
hÆf_t
 
	m∑d˚Œ
;

111 
qw‹d_t
 
	mtsize
;

112 
qw‹d_t
 
	mdsize
;

113 
qw‹d_t
 
	mbsize
;

114 
qw‹d_t
 
	míåy
;

115 
qw‹d_t
 
	mãxt_°¨t
;

116 
qw‹d_t
 
	md©a_°¨t
;

117 
qw‹d_t
 
	mbss_°¨t
;

118 
sw‹d_t
 
	mg¥mask
;

119 
sw‹d_t
 
	mÂrmask
;

120 
qw‹d_t
 
	mgp_vÆue
;

123 
	secoff_s˙hdr
 {

124 
	ms_«me
[8];

125 
qw‹d_t
 
	ms_∑ddr
;

126 
qw‹d_t
 
	ms_vaddr
;

127 
qw‹d_t
 
	ms_size
;

128 
qw‹d_t
 
	ms_s˙±r
;

129 
qw‹d_t
 
	ms_ªÕå
;

130 
qw‹d_t
 
	ms_ n›å
;

131 
hÆf_t
 
	ms_ƒñoc
;

132 
hÆf_t
 
	ms_∆¬o
;

133 
sw‹d_t
 
	ms_Êags
;

136 
	secoff_symhdr_t
 {

137 
hÆf_t
 
	mmagic
;

138 
hÆf_t
 
	mv°amp
;

140 
sw‹d_t
 
	mûöeMax
;

141 
sw‹d_t
 
	midnMax
;

142 
sw‹d_t
 
	mùdMax
;

143 
sw‹d_t
 
	misymMax
;

144 
sw‹d_t
 
	mi›tMax
;

145 
sw‹d_t
 
	müuxMax
;

146 
sw‹d_t
 
	missMax
;

147 
sw‹d_t
 
	missExtMax
;

148 
sw‹d_t
 
	mifdMax
;

149 
sw‹d_t
 
	m¸fd
;

150 
sw‹d_t
 
	mõxtMax
;

151 
qw‹d_t
 
	mcbLöe
;

152 
qw‹d_t
 
	mcbLöeOff£t
;

153 
qw‹d_t
 
	mcbDnOff£t
;

154 
qw‹d_t
 
	mcbPdOff£t
;

155 
qw‹d_t
 
	mcbSymOff£t
;

156 
qw‹d_t
 
	mcbO±Off£t
;

157 
qw‹d_t
 
	mcbAuxOff£t
;

158 
qw‹d_t
 
	mcbSsOff£t
;

159 
qw‹d_t
 
	mcbSsExtOff£t
;

160 
qw‹d_t
 
	mcbFdOff£t
;

161 
qw‹d_t
 
	mcbRfdOff£t
;

162 
qw‹d_t
 
	mcbExtOff£t
;

163 } 
	tecoff_HDRR
;

165 
	#ECOFF_magicSym
 0x1992

	)

167 
	secoff_fdr
 {

168 
w‹d_t
 
	madr
;

169 
sw‹d_t
 
	mrss
;

170 
sw‹d_t
 
	missBa£
;

171 
sw‹d_t
 
	mcbSs
;

172 
sw‹d_t
 
	misymBa£
;

173 
sw‹d_t
 
	mcsym
;

174 
sw‹d_t
 
	mûöeBa£
;

175 
sw‹d_t
 
	m˛öe
;

176 
sw‹d_t
 
	mi›tBa£
;

177 
sw‹d_t
 
	mc›t
;

178 
hÆf_t
 
	mùdFú°
;

179 
hÆf_t
 
	m˝d
;

180 
sw‹d_t
 
	müuxBa£
;

181 
sw‹d_t
 
	mˇux
;

182 
sw‹d_t
 
	mrfdBa£
;

183 
sw‹d_t
 
	m¸fd
;

184 
	mœng
 :5;

185 
	mfMîge
 :1;

186 
	mfRódö
 :1;

187 
	mfBigídün
 :1;

188 
	mª£rved
 :24;

189 
sw‹d_t
 
	mcbLöeOff£t
;

190 
sw‹d_t
 
	mcbLöe
;

191 } 
	tecoff_FDR
;

193 
	secoff_pdr
 {

194 
w‹d_t
 
	madr
;

195 
sw‹d_t
 
	misym
;

196 
sw‹d_t
 
	mûöe
;

197 
sw‹d_t
 
	mªgmask
;

198 
sw‹d_t
 
	mªgoff£t
;

199 
sw‹d_t
 
	mi›t
;

200 
sw‹d_t
 
	m‰egmask
;

201 
sw‹d_t
 
	m‰egoff£t
;

202 
sw‹d_t
 
	m‰ameoff£t
;

203 
hÆf_t
 
	m‰amîeg
;

204 
hÆf_t
 
	mp¸eg
;

205 
sw‹d_t
 
	m Low
;

206 
sw‹d_t
 
	m High
;

207 
sw‹d_t
 
	mcbLöeOff£t
;

208 } 
	tecoff_PDR
;

210 
	secoff_SYMR
 {

211 
qw‹d_t
 
	mvÆue
;

212 
sw‹d_t
 
	miss
;

213 
	m°
 :6;

214 
	msc
 :5;

215 
	mª£rved
 :1;

216 
	mödex
 :20;

217 } 
	tecoff_SYMR
;

219 
	secoff_EXTR
 {

220 
ecoff_SYMR
 
	masym
;

221 
sw‹d_t
 
	mifd
;

222 
sw‹d_t
 
	mª£rved
;

223 } 
	tecoff_EXTR
;

225 
	#ECOFF_R_SN_TEXT
 1

	)

226 
	#ECOFF_R_SN_RDATA
 2

	)

227 
	#ECOFF_R_SN_DATA
 3

	)

228 
	#ECOFF_R_SN_SDATA
 4

	)

229 
	#ECOFF_R_SN_SBSS
 5

	)

230 
	#ECOFF_R_SN_BSS
 6

	)

232 
	#ECOFF_STYP_TEXT
 0x0020

	)

233 
	#ECOFF_STYP_RDATA
 0x0100

	)

234 
	#ECOFF_STYP_DATA
 0x0040

	)

235 
	#ECOFF_STYP_SDATA
 0x0200

	)

236 
	#ECOFF_STYP_SBSS
 0x0400

	)

237 
	#ECOFF_STYP_BSS
 0x0080

	)

238 
	#ECOFF_STYP_INIT
 0x80000000

	)

240 
	#ECOFF_STYP_FINI
 0x01000000

	)

241 
	#ECOFF_STYP_RCONST
 0x02200000

	)

242 
	#ECOFF_STYP_LITA
 0x04000000

	)

243 
	#ECOFF_STYP_LIT8
 0x08000000

	)

244 
	#ECOFF_STYP_LIT4
 0x10000000

	)

245 
	#ECOFF_STYP_XDATA
 0x02400000

	)

246 
	#ECOFF_STYP_PDATA
 0x02800000

	)

248 
	#ECOFF_°Nû
 0

	)

249 
	#ECOFF_°GlobÆ
 1

	)

250 
	#ECOFF_°Sètic
 2

	)

251 
	#ECOFF_°P¨am
 3

	)

252 
	#ECOFF_°Loˇl
 4

	)

253 
	#ECOFF_°Labñ
 5

	)

254 
	#ECOFF_°Proc
 6

	)

255 
	#ECOFF_°Block
 7

	)

256 
	#ECOFF_°End
 8

	)

257 
	#ECOFF_°Membî
 9

	)

258 
	#ECOFF_°Ty≥def
 10

	)

259 
	#ECOFF_°Fûe
 11

	)

260 
	#ECOFF_°RegRñoc
 12

	)

261 
	#ECOFF_°F‹w¨d
 13

	)

262 
	#ECOFF_°SèticProc
 14

	)

263 
	#ECOFF_°C⁄°™t
 15

	)

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


29 #ifde‡
_UAPI_LINUX_IN6_H


33 
	#__USE_KERNEL_IPV6_DEFS


	)

39 
	#IP_OPTIONS
 4

	)

40 
	#IP_HDRINCL
 3

	)

41 
	#IP_TOS
 1

	)

42 
	#IP_TTL
 2

	)

43 
	#IP_RECVOPTS
 6

	)

45 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

46 
	#IP_RETOPTS
 7

	)

47 
	#IP_MULTICAST_IF
 32

	)

48 
	#IP_MULTICAST_TTL
 33

	)

49 
	#IP_MULTICAST_LOOP
 34

	)

50 
	#IP_ADD_MEMBERSHIP
 35

	)

51 
	#IP_DROP_MEMBERSHIP
 36

	)

52 
	#IP_UNBLOCK_SOURCE
 37

	)

53 
	#IP_BLOCK_SOURCE
 38

	)

54 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

55 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

56 
	#IP_MSFILTER
 41

	)

57 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


58 
	#MCAST_JOIN_GROUP
 42

	)

59 
	#MCAST_BLOCK_SOURCE
 43

	)

60 
	#MCAST_UNBLOCK_SOURCE
 44

	)

61 
	#MCAST_LEAVE_GROUP
 45

	)

62 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

63 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

64 
	#MCAST_MSFILTER
 48

	)

65 
	#IP_MULTICAST_ALL
 49

	)

66 
	#IP_UNICAST_IF
 50

	)

68 
	#MCAST_EXCLUDE
 0

	)

69 
	#MCAST_INCLUDE
 1

	)

72 
	#IP_ROUTER_ALERT
 5

	)

73 
	#IP_PKTINFO
 8

	)

74 
	#IP_PKTOPTIONS
 9

	)

75 
	#IP_PMTUDISC
 10

	)

76 
	#IP_MTU_DISCOVER
 10

	)

77 
	#IP_RECVERR
 11

	)

78 
	#IP_RECVTTL
 12

	)

79 
	#IP_RECVTOS
 13

	)

80 
	#IP_MTU
 14

	)

81 
	#IP_FREEBIND
 15

	)

82 
	#IP_IPSEC_POLICY
 16

	)

83 
	#IP_XFRM_POLICY
 17

	)

84 
	#IP_PASSSEC
 18

	)

85 
	#IP_TRANSPARENT
 19

	)

86 
	#IP_MULTICAST_ALL
 49

	)

89 
	#IP_ORIGDSTADDR
 20

	)

90 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

92 
	#IP_MINTTL
 21

	)

96 
	#IP_PMTUDISC_DONT
 0

	)

97 
	#IP_PMTUDISC_WANT
 1

	)

98 
	#IP_PMTUDISC_DO
 2

	)

99 
	#IP_PMTUDISC_PROBE
 3

	)

102 
	#SOL_IP
 0

	)

104 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

105 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

106 
	#IP_MAX_MEMBERSHIPS
 20

	)

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


112 
	sù_›ts


114 
ö_addr
 
	mù_d°
;

115 
	mù_›ts
[40];

119 
	sù_mªqn


121 
ö_addr
 
	mimr_mu…üddr
;

122 
ö_addr
 
	mimr_addªss
;

123 
	mimr_ifödex
;

127 
	sö_pktöfo


129 
	mùi_ifödex
;

130 
ö_addr
 
	mùi_•ec_d°
;

131 
ö_addr
 
	mùi_addr
;

138 
	#IPV6_ADDRFORM
 1

	)

139 
	#IPV6_2292PKTINFO
 2

	)

140 
	#IPV6_2292HOPOPTS
 3

	)

141 
	#IPV6_2292DSTOPTS
 4

	)

142 
	#IPV6_2292RTHDR
 5

	)

143 
	#IPV6_2292PKTOPTIONS
 6

	)

144 
	#IPV6_CHECKSUM
 7

	)

145 
	#IPV6_2292HOPLIMIT
 8

	)

147 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

149 
	#IPV6_NEXTHOP
 9

	)

150 
	#IPV6_AUTHHDR
 10

	)

151 
	#IPV6_UNICAST_HOPS
 16

	)

152 
	#IPV6_MULTICAST_IF
 17

	)

153 
	#IPV6_MULTICAST_HOPS
 18

	)

154 
	#IPV6_MULTICAST_LOOP
 19

	)

155 
	#IPV6_JOIN_GROUP
 20

	)

156 
	#IPV6_LEAVE_GROUP
 21

	)

157 
	#IPV6_ROUTER_ALERT
 22

	)

158 
	#IPV6_MTU_DISCOVER
 23

	)

159 
	#IPV6_MTU
 24

	)

160 
	#IPV6_RECVERR
 25

	)

161 
	#IPV6_V6ONLY
 26

	)

162 
	#IPV6_JOIN_ANYCAST
 27

	)

163 
	#IPV6_LEAVE_ANYCAST
 28

	)

164 
	#IPV6_IPSEC_POLICY
 34

	)

165 
	#IPV6_XFRM_POLICY
 35

	)

167 
	#IPV6_RECVPKTINFO
 49

	)

168 
	#IPV6_PKTINFO
 50

	)

169 
	#IPV6_RECVHOPLIMIT
 51

	)

170 
	#IPV6_HOPLIMIT
 52

	)

171 
	#IPV6_RECVHOPOPTS
 53

	)

172 
	#IPV6_HOPOPTS
 54

	)

173 
	#IPV6_RTHDRDSTOPTS
 55

	)

174 
	#IPV6_RECVRTHDR
 56

	)

175 
	#IPV6_RTHDR
 57

	)

176 
	#IPV6_RECVDSTOPTS
 58

	)

177 
	#IPV6_DSTOPTS
 59

	)

179 
	#IPV6_RECVTCLASS
 66

	)

180 
	#IPV6_TCLASS
 67

	)

183 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

184 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

185 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

186 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

189 
	#IPV6_PMTUDISC_DONT
 0

	)

190 
	#IPV6_PMTUDISC_WANT
 1

	)

191 
	#IPV6_PMTUDISC_DO
 2

	)

192 
	#IPV6_PMTUDISC_PROBE
 3

	)

195 
	#SOL_IPV6
 41

	)

196 
	#SOL_ICMPV6
 58

	)

199 
	#IPV6_RTHDR_LOOSE
 0

	)

200 
	#IPV6_RTHDR_STRICT
 1

	)

202 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	swösize


29 
	mws_row
;

30 
	mws_cﬁ
;

31 
	mws_xpixñ
;

32 
	mws_ypixñ
;

35 
	#NCC
 8

	)

36 
	sãrmio


38 
	mc_iÊag
;

39 
	mc_oÊag
;

40 
	mc_cÊag
;

41 
	mc_lÊag
;

42 
	mc_löe
;

43 
	mc_cc
[
NCC
];

47 
	#TIOCM_LE
 0x001

	)

48 
	#TIOCM_DTR
 0x002

	)

49 
	#TIOCM_RTS
 0x004

	)

50 
	#TIOCM_ST
 0x008

	)

51 
	#TIOCM_SR
 0x010

	)

52 
	#TIOCM_CTS
 0x020

	)

53 
	#TIOCM_CAR
 0x040

	)

54 
	#TIOCM_RNG
 0x080

	)

55 
	#TIOCM_DSR
 0x100

	)

56 
	#TIOCM_CD
 
TIOCM_CAR


	)

57 
	#TIOCM_RI
 
TIOCM_RNG


	)

62 
	#N_TTY
 0

	)

63 
	#N_SLIP
 1

	)

64 
	#N_MOUSE
 2

	)

65 
	#N_PPP
 3

	)

66 
	#N_STRIP
 4

	)

67 
	#N_AX25
 5

	)

68 
	#N_X25
 6

	)

69 
	#N_6PACK
 7

	)

70 
	#N_MASC
 8

	)

71 
	#N_R3964
 9

	)

72 
	#N_PROFIBUS_FDL
 10

	)

73 
	#N_IRDA
 11

	)

74 
	#N_SMSBLOCK
 12

	)

75 
	#N_HDLC
 13

	)

76 
	#N_SYNC_PPP
 14

	)

77 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

18 #i‚de‡
_SYS_IOCTL_H


23 
	~<asm/io˘ls.h
>

26 
	#SIOCADDRT
 0x890B

	)

27 
	#SIOCDELRT
 0x890C

	)

28 
	#SIOCRTMSG
 0x890D

	)

31 
	#SIOCGIFNAME
 0x8910

	)

32 
	#SIOCSIFLINK
 0x8911

	)

33 
	#SIOCGIFCONF
 0x8912

	)

34 
	#SIOCGIFFLAGS
 0x8913

	)

35 
	#SIOCSIFFLAGS
 0x8914

	)

36 
	#SIOCGIFADDR
 0x8915

	)

37 
	#SIOCSIFADDR
 0x8916

	)

38 
	#SIOCGIFDSTADDR
 0x8917

	)

39 
	#SIOCSIFDSTADDR
 0x8918

	)

40 
	#SIOCGIFBRDADDR
 0x8919

	)

41 
	#SIOCSIFBRDADDR
 0x891®

	)

42 
	#SIOCGIFNETMASK
 0x891b

	)

43 
	#SIOCSIFNETMASK
 0x891¯

	)

44 
	#SIOCGIFMETRIC
 0x891d

	)

45 
	#SIOCSIFMETRIC
 0x891ê

	)

46 
	#SIOCGIFMEM
 0x891‡

	)

47 
	#SIOCSIFMEM
 0x8920

	)

48 
	#SIOCGIFMTU
 0x8921

	)

49 
	#SIOCSIFMTU
 0x8922

	)

50 
	#SIOCSIFNAME
 0x8923

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


256 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

258 #ifde‡
__USE_ISOC99


259 
__loˇl_signgam
 = 0;

260  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

262  
	`lgamma_r
 (
__d
, &
signgam
);

264 
	}
}

265 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

267 #ifde‡
__USE_ISOC99


268 
__loˇl_signgam
 = 0;

269  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

271  
	`lgammaf_r
 (
__d
, &
signgam
);

273 
	}
}

274 #ifde‡
__MATH_DECLARE_LDOUBLE


275 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

277 #ifde‡
__USE_ISOC99


278 
__loˇl_signgam
 = 0;

279  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

281  
	`lgammÆ_r
 (
__d
, &
signgam
);

283 
	}
}

287 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


289 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

291 #ifde‡
__USE_ISOC99


292 
__loˇl_signgam
 = 0;

293  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

295  
	`lgamma_r
 (
__d
, &
signgam
);

297 
	}
}

298 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

300 #ifde‡
__USE_ISOC99


301 
__loˇl_signgam
 = 0;

302  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

304  
	`lgammaf_r
 (
__d
, &
signgam
);

306 
	}
}

307 #ifde‡
__MATH_DECLARE_LDOUBLE


308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

310 #ifde‡
__USE_ISOC99


311 
__loˇl_signgam
 = 0;

312  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

314  
	`lgammÆ_r
 (
__d
, &
signgam
);

316 
	}
}

321 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

322 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

323 #ifde‡
__MATH_DECLARE_LDOUBLE


324 #ifde‡
__NO_LONG_DOUBLE_MATH


325 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

327 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

332 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

333 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

334 #ifde‡
__MATH_DECLARE_LDOUBLE


335 #ifde‡
__NO_LONG_DOUBLE_MATH


336 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

342 #ifde‡
__USE_ISOC99


344 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

345 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

346 #ifde‡
__MATH_DECLARE_LDOUBLE


347 #ifde‡
__NO_LONG_DOUBLE_MATH


348 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

356 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

357 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

358 #ifde‡
__MATH_DECLARE_LDOUBLE


359 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

363 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

364 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

365 #ifde‡
__MATH_DECLARE_LDOUBLE


366 #ifde‡
__NO_LONG_DOUBLE_MATH


367 
__REDIRECT_NTH
 (
powl
, (, ),

368 
__pow_föôe
);

370 
__REDIRECT_NTH
 (
powl
, (, ),

371 
__powl_föôe
);

376 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

377 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

378 #ifde‡
__MATH_DECLARE_LDOUBLE


379 #ifde‡
__NO_LONG_DOUBLE_MATH


380 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

381 
__ªmaödî_föôe
);

383 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

384 
__ªmaödîl_föôe
);

388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


390 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

391 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

395 
__sˇlb_föôe
);

397 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

398 
__sˇlbl_föôe
);

404 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

405 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

406 #ifde‡
__MATH_DECLARE_LDOUBLE


407 #ifde‡
__NO_LONG_DOUBLE_MATH


408 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

410 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

415 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

416 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

417 #ifde‡
__MATH_DECLARE_LDOUBLE


418 #ifde‡
__NO_LONG_DOUBLE_MATH


419 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

425 #ifde‡
__USE_ISOC99


427 
__gamma_r_föôe
 (, *);

428 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

430 
__loˇl_signgam
 = 0;

431 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

432  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

433 
	}
}

434 
__gammaf_r_föôe
 (, *);

435 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

437 
__loˇl_signgam
 = 0;

438 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

439  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

440 
	}
}

441 #ifde‡
__MATH_DECLARE_LDOUBLE


442 
__gammÆ_r_föôe
 (, *);

443 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

445 
__loˇl_signgam
 = 0;

446 #ifde‡
__NO_LONG_DOUBLE_MATH


447 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

449 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

451  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

452 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


201 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

204 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

207 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

211 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
__BEGIN_NAMESPACE_C99


217 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

218 
	g__END_NAMESPACE_C99


221 #ifde‡
__USE_ISOC99


222 
__BEGIN_NAMESPACE_C99


224 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

225 
	g__END_NAMESPACE_C99


230 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

237 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

238 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

240 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

246 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


247 
__BEGIN_NAMESPACE_C99


249 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

250 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

252 
	g__END_NAMESPACE_C99


255 #ifde‡
__USE_ISOC99


256 
__BEGIN_NAMESPACE_C99


258 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

259 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


264 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

267 #ifde‡
__USE_MISC


271 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


276 
__BEGIN_NAMESPACE_C99


279 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

282 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

283 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


284 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

288 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


292 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

296 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

299 #ifde‡
__USE_ISOC99


301 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

305 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

309 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

313 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

318 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

325 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

326 
__exãnsi⁄__


327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__exãnsi⁄__


333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

343 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #ifde‡
__USE_GNU


365 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

366 
__©åibuã__
 ((
__c⁄°__
));

369 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


371 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


387 #i‚de‡
__SSE2_MATH__


388 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

389 && 
deföed
 
	g__OPTIMIZE__
)

393 #unde‡
m©h_îrh™dlög


402 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


403 
	#__ölöe_m©h›
(
func
, 
›
) \

404 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

405 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

406 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

407 
	#__ölöe_m©h›NP
(
func
, 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

409 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

410 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

412 
	#__ölöe_m©h›
(
func
, 
›
) \

413 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

414 
	#__ölöe_m©h›NP
(
func
, 
›
) \

415 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

418 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

420 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

421 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

424 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


425 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

426 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

427 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

428 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

429 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

432 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

436 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

437 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

440 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

441 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

442 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

444 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

445 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

447 
Êﬂt_ty≥
 
__ªsu…
; \

448 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

449  
__ªsu…
; \

450 }

	)

453 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


454 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

456 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

457 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

458 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

460 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

461 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

462 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

464 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

466 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

469 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

470 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

472 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

474 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

477 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

479 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

482 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

483 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

486 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

487 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

489 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

490 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

493 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

494 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

495 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

497 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

498 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

500 
code
; \

501 }

	)

504 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

505 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

506 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

508 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

509 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

511 
code
; \

512 }

	)

514 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

515 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

516 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

518 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

519 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

520 
Êﬂt_ty≥
 
¨g3
)) \

522 
code
; \

523 }

	)

527 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


531 #ifde‡
__FAST_MATH__


532 #ifde‡
__USE_GNU


533 
	#__söcos_code
 \

534 
__co§
; \

535 
__sör
; \

536 
__swtmp
; \

537 
__asm
 
__vﬁ©ûe__
 \

552 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

553 *
__söx
 = 
__sör
; \

554 *
__cosx
 = 
__co§


	)

556 
__MATH_INLINE
 

557 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

559 
__söcos_code
;

560 
	}
}

562 
__MATH_INLINE
 

563 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

565 
__söcos_code
;

566 
	}
}

568 
__MATH_INLINE
 

569 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

571 
__söcos_code
;

572 
	}
}

579 #i‡
__GNUC_PREREQ
 (3, 5)

580 
	#__expm1_code
 \

581 
__ãmp
; \

582 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

583  
__ãmp
 ? __ãm∞: 
__x


	)

585 
	#__expm1_code
 \

586 
__vÆue
; \

587 
__exp⁄ít
; \

588 
__ãmp
; \

589 
__asm
 
__vﬁ©ûe__
 \

598 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

599 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

602 
__ãmp
 -= 1.0; \

603 
__ãmp
 +
__vÆue
; \

604  
__ãmp
 ? __ãm∞: 
__x


	)

606 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

608 #i‡
	`__GNUC_PREREQ
 (3, 4)

609 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

611 
	#__exp_code
 \

612 
__vÆue
; \

613 
__exp⁄ít
; \

614 
__asm
 
__vﬁ©ûe__
 \

622 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

623 
__vÆue
 += 1.0; \

624 
__asm
 
__vﬁ©ûe__
 \

626 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

627  
__vÆue


	)

628 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

629 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

633 #i‡!
	`__GNUC_PREREQ
 (3, 5)

634 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

635 
__vÆue
; \

636 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

637 
__asm
 
__vﬁ©ûe__
 \

639 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

640  
__vÆue
)

645 #i‡
	`__GNUC_PREREQ
 (3, 4)

646 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

647  
	$__buûtö_©™2l
 (
__y
, 
__x
))

649 
	#__©™2_code
 \

650 
__vÆue
; \

651 
__asm
 
__vﬁ©ûe__
 \

653 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

654  
__vÆue


	)

655 #ifde‡
__FAST_MATH__


656 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

658 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

662 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

663 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

664 
__vÆue
; \

665 
__asm
 
__vﬁ©ûe__
 \

670 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

671  
__vÆue
)

675 #ifde‡
__FAST_MATH__


676 #i‡!
	`__GNUC_PREREQ
 (3,3)

677 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

678 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

679 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

681 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

685 #i‡
	`__GNUC_PREREQ
 (2, 8)

686 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

687 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


688 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

693 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

694 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

697 #ifde‡
__FAST_MATH__


698 #i‡!
	`__GNUC_PREREQ
 (3, 4)

700 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

702 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

704 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

707 #i‡!
	`__GNUC_PREREQ
 (3, 5)

708 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

711 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

714 #i‡!
	`__GNUC_PREREQ
 (3, 4)

715 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

719 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

720 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

721 { 
__xld
: 
__x
 
	}
}; \

722 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

723 
	g__n
.
	g__xi
[1] = 0x80000000; \

724 
	g__n
.
	g__xi
[0] = 0; \

725  
	g__n
.
	g__xld
)

728 #ifde‡
__FAST_MATH__


730 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

731 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

732  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

734 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

735 
__ex
 = 
	`__ex∂
 (
__x
); \

736  0.5 * (
__ex
 + 1.0 / __ex))

738 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

739 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

740  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

743 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

744 
__vÆue
; \

745 
__ign‹e
; \

746 
__cw
; \

747 
__cwtmp
; \

748 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

756 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

757 "=m" (
__cw
) \

758 : "0" (
__x
)); \

759  
__vÆue
)

761 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

762 
__vÆue
; \

763 
__ign‹e
; \

764 
__cw
; \

765 
__cwtmp
; \

766 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

774 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

775 "=m" (
__cw
) \

776 : "0" (
__x
)); \

777  
__vÆue
)

779 #ifde‡
__FAST_MATH__


780 
	#__ldexp_code
 \

781 
__vÆue
; \

782 
__asm
 
__vﬁ©ûe__
 \

784 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

785  
__vÆue


	)

787 
__MATH_INLINE
 

788 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

790 
__ldexp_code
;

791 
	}
}

796 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


798 #ifde‡
__FAST_MATH__


799 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

803 
	#__M_SQRT2
 1.41421356237309504880L

	)

805 #i‡!
	`__GNUC_PREREQ
 (3, 5)

806 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

807 
__vÆue
; \

808 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

809 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

811 
__asm
 
__vﬁ©ûe__
 \

815 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

816  
__vÆue
)

821 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

822 
__y
 = 
	`__Áb¶
 (
__x
); \

823  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

824 * 
	$__sgn1l
 (
__x
)))

826 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

827  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

829 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

830 
__y
 = 
	`__Áb¶
 (
__x
); \

831  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

834 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

835  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

837 #i‡!
	`__GNUC_PREREQ
 (3, 5)

838 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

839 
__vÆue
; \

840 
__junk
; \

841 
__asm
 
__vﬁ©ûe__
 \

843 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

844  
__vÆue
)

850 #ifde‡
__USE_ISOC99


851 #ifde‡
__FAST_MATH__


853 #i‡!
	`__GNUC_PREREQ
 (3, 5)

854 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

857 
__MATH_INLINE
 

858 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

860 
__ldexp_code
;

861 
	}
}

863 
__MATH_INLINE
 

864 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

866 
__ldexp_code
;

867 
	}
}

869 
__ölöe_m©h›NP
 (
röt
, "frndint")

872 
	#__Ãöt_code
 \

873 
__Ãöåes
; \

874 
__asm__
 
__vﬁ©ûe__
 \

876 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

877  
__Ãöåes


	)

878 
__MATH_INLINE
 

879 
__NTH
 (
	$Ãötf
 (
__x
))

881 
__Ãöt_code
;

882 
	}
}

883 
__MATH_INLINE
 

884 
__NTH
 (
	$Ãöt
 (
__x
))

886 
__Ãöt_code
;

887 
	}
}

888 
__MATH_INLINE
 

889 
__NTH
 (
	$Ãöé
 (
__x
))

891 
__Ãöt_code
;

892 
	}
}

893 #unde‡
__Ãöt_code


895 
	#__Œröt_code
 \

896 
__Œröåes
; \

897 
__asm__
 
__vﬁ©ûe__
 \

899 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

900  
__Œröåes


	)

901 
__exãnsi⁄__


902 
__MATH_INLINE
 

903 
__NTH
 (
	$Œrötf
 (
__x
))

905 
__Œröt_code
;

906 
	}
}

907 
__exãnsi⁄__


908 
__MATH_INLINE
 

909 
__NTH
 (
	$Œröt
 (
__x
))

911 
__Œröt_code
;

912 
	}
}

913 
__exãnsi⁄__


914 
__MATH_INLINE
 

915 
__NTH
 (
	$Œröé
 (
__x
))

917 
__Œröt_code
;

918 
	}
}

919 #unde‡
__Œröt_code


924 #ifde‡
__USE_MISC


926 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

927 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

928 
__vÆue
; \

929 
__˛obbîed
; \

930 
__asm
 
__vﬁ©ûe__
 \

935 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

936  
__vÆue
)

941 
__MATH_INLINE
 

942 
__NTH
 (
	$__föôe
 (
__x
))

944  (
__exãnsi⁄__


945 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

947 
	}
}

952 #unde‡
__©™2_code


953 #ifde‡
__FAST_MATH__


954 #unde‡
__expm1_code


955 #unde‡
__exp_code


956 #unde‡
__söcos_code


963 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


964 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

965 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

966 
__vÆue
;

967 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

968 : "Ò" (
__vÆue
)

969 : "0" (
__x
), "u" (
__y
) : "st(1)");

970  
__vÆue
;)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/poll.h

18 #i‚de‡
_SYS_POLL_H


25 
	#POLLIN
 0x001

	)

26 
	#POLLPRI
 0x002

	)

27 
	#POLLOUT
 0x004

	)

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


31 
	#POLLRDNORM
 0x040

	)

32 
	#POLLRDBAND
 0x080

	)

33 
	#POLLWRNORM
 0x100

	)

34 
	#POLLWRBAND
 0x200

	)

37 #ifde‡
__USE_GNU


39 
	#POLLMSG
 0x400

	)

40 
	#POLLREMOVE
 0x1000

	)

41 
	#POLLRDHUP
 0x2000

	)

47 
	#POLLERR
 0x008

	)

48 
	#POLLHUP
 0x010

	)

49 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/poll2.h

19 #i‚de‡
_SYS_POLL_H


24 
__BEGIN_DECLS


26 
__REDIRECT
 (
__pﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

27 
__timeout
), 
pﬁl
);

28 
__pﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
,

29 
__SIZE_TYPE__
 
__fd¶í
);

30 
__REDIRECT
 (
__pﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

31 
__timeout
, 
__SIZE_TYPE__
 
__fd¶í
),

32 
__pﬁl_chk
)

33 
__w¨«âr
 ("poll called with fds bufferÅoo small fileÇfdsÉntries");

35 
__f‹tify_fun˘i⁄
 

36 
	$pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
)

38 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

40 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

41  
	`__pﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

42 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

43  
	`__pﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

46  
	`__pﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
);

47 
	}
}

50 #ifde‡
__USE_GNU


51 
__REDIRECT
 (
__µﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

52 c⁄° 
time•ec
 *
__timeout
,

53 c⁄° 
__sig£t_t
 *
__ss
), 
µﬁl
);

54 
__µﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

55 c⁄° 
time•ec
 *
__timeout
,

56 c⁄° 
__sig£t_t
 *
__ss
, 
__SIZE_TYPE__
 
__fd¶í
);

57 
__REDIRECT
 (
__µﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

58 c⁄° 
time•ec
 *
__timeout
,

59 c⁄° 
__sig£t_t
 *
__ss
,

60 
__SIZE_TYPE__
 
__fd¶í
),

61 
__µﬁl_chk
)

62 
__w¨«âr
 ("ppoll called with fds bufferÅoo small fileÇfdsÉntries");

64 
__f‹tify_fun˘i⁄
 

65 
	$µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, c⁄° 
time•ec
 *
__timeout
,

66 c⁄° 
__sig£t_t
 *
__ss
)

68 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

70 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

71  
	`__µﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
, 
	`__bos
 (__fds));

72 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

73  
	`__µﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
,

74 
	`__bos
 (
__fds
));

77  
	`__µﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
);

78 
	}
}

81 
	g__END_DECLS


	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #ifde‡
__USE_POSIX199309


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

26 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

27 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

29 
	s_Âx_sw_byãs


31 
__uöt32_t
 
	mmagic1
;

32 
__uöt32_t
 
	mexãnded_size
;

33 
__uöt64_t
 
	mx°©e_bv
;

34 
__uöt32_t
 
	mx°©e_size
;

35 
__uöt32_t
 
	m∑ddög
[7];

38 
	s_Âªg


40 
	msignifiˇnd
[4];

41 
	mexp⁄ít
;

44 
	s_Âxªg


46 
	msignifiˇnd
[4];

47 
	mexp⁄ít
;

48 
	m∑ddög
[3];

51 
	s_xmmªg


53 
__uöt32_t
 
	mñemít
[4];

58 #i‚de‡
__x86_64__


60 
	s_Â°©e


63 
__uöt32_t
 
	mcw
;

64 
__uöt32_t
 
	msw
;

65 
__uöt32_t
 
	mèg
;

66 
__uöt32_t
 
	mùoff
;

67 
__uöt32_t
 
	mcs£l
;

68 
__uöt32_t
 
	md©aoff
;

69 
__uöt32_t
 
	md©a£l
;

70 
_Âªg
 
	m_°
[8];

71 
	m°©us
;

72 
	mmagic
;

75 
__uöt32_t
 
	m_fx§_ív
[6];

76 
__uöt32_t
 
	mmxc§
;

77 
__uöt32_t
 
	mª£rved
;

78 
_Âxªg
 
	m_fx§_°
[8];

79 
_xmmªg
 
	m_xmm
[8];

80 
__uöt32_t
 
	m∑ddög
[56];

83 #i‚de‡
sigc⁄ãxt_°ru˘


88 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

91 
	#X86_FXSR_MAGIC
 0x0000

	)

93 
	ssigc⁄ãxt


95 
	mgs
, 
	m__gsh
;

96 
	mfs
, 
	m__fsh
;

97 
	mes
, 
	m__esh
;

98 
	mds
, 
	m__dsh
;

99 
	medi
;

100 
	mesi
;

101 
	mebp
;

102 
	me•
;

103 
	mebx
;

104 
	medx
;

105 
	mecx
;

106 
	móx
;

107 
	må≠no
;

108 
	mîr
;

109 
	meù
;

110 
	mcs
, 
	m__csh
;

111 
	meÊags
;

112 
	me•_©_sig«l
;

113 
	mss
, 
	m__ssh
;

114 
_Â°©e
 * 
	mÂ°©e
;

115 
	mﬁdmask
;

116 
	m¸2
;

121 
	s_Â°©e


124 
__uöt16_t
 
	mcwd
;

125 
__uöt16_t
 
	mswd
;

126 
__uöt16_t
 
	m·w
;

127 
__uöt16_t
 
	mf›
;

128 
__uöt64_t
 
	mrù
;

129 
__uöt64_t
 
	mrdp
;

130 
__uöt32_t
 
	mmxc§
;

131 
__uöt32_t
 
	mmx¸_mask
;

132 
_Âxªg
 
	m_°
[8];

133 
_xmmªg
 
	m_xmm
[16];

134 
__uöt32_t
 
	m∑ddög
[24];

137 
	ssigc⁄ãxt


139 
__uöt64_t
 
	mr8
;

140 
__uöt64_t
 
	mr9
;

141 
__uöt64_t
 
	mr10
;

142 
__uöt64_t
 
	mr11
;

143 
__uöt64_t
 
	mr12
;

144 
__uöt64_t
 
	mr13
;

145 
__uöt64_t
 
	mr14
;

146 
__uöt64_t
 
	mr15
;

147 
__uöt64_t
 
	mrdi
;

148 
__uöt64_t
 
	mrsi
;

149 
__uöt64_t
 
	mrbp
;

150 
__uöt64_t
 
	mrbx
;

151 
__uöt64_t
 
	mrdx
;

152 
__uöt64_t
 
	møx
;

153 
__uöt64_t
 
	mrcx
;

154 
__uöt64_t
 
	mr•
;

155 
__uöt64_t
 
	mrù
;

156 
__uöt64_t
 
	meÊags
;

157 
	mcs
;

158 
	mgs
;

159 
	mfs
;

160 
	m__∑d0
;

161 
__uöt64_t
 
	mîr
;

162 
__uöt64_t
 
	må≠no
;

163 
__uöt64_t
 
	mﬁdmask
;

164 
__uöt64_t
 
	m¸2
;

165 
__exãnsi⁄__
 union

167 
_Â°©e
 * 
	mÂ°©e
;

168 
__uöt64_t
 
	m__Â°©e_w‹d
;

170 
__uöt64_t
 
	m__ª£rved1
 [8];

175 
	s_xßve_hdr


177 
__uöt64_t
 
	mx°©e_bv
;

178 
__uöt64_t
 
	mª£rved1
[2];

179 
__uöt64_t
 
	mª£rved2
[5];

182 
	s_ymmh_°©e


184 
__uöt32_t
 
	mymmh_•a˚
[64];

187 
	s_x°©e


189 
_Â°©e
 
	mÂ°©e
;

190 
_xßve_hdr
 
	mx°©e_hdr
;

191 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/siginfo.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

20 && !
deföed
 
	g__√ed_sigevít_t


24 
	~<bôs/w‹dsize.h
>

26 #i‡(!
deföed
 
__have_sigvÆ_t
 \

27 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

28 || 
deföed
 
	g__√ed_sigevít_t
))

29 
	#__have_sigvÆ_t
 1

	)

32 
	usigvÆ


34 
	msivÆ_öt
;

35 *
	msivÆ_±r
;

36 } 
	tsigvÆ_t
;

39 #i‡(!
deföed
 
__have_sigöfo_t
 \

40 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

41 
	#__have_sigöfo_t
 1

	)

43 
	#__SI_MAX_SIZE
 128

	)

44 #i‡
__WORDSIZE
 == 64

45 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

47 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

50 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

55 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

56 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

58 
__˛ock_t
 
	t__sigchld_˛ock_t
;

59 
	#__SI_ALIGNMENT


	)

64 
si_signo
;

65 
si_î∫o
;

67 
si_code
;

71 
_∑d
[
__SI_PAD_SIZE
];

76 
__pid_t
 
si_pid
;

77 
__uid_t
 
si_uid
;

78 } 
_kûl
;

83 
si_tid
;

84 
si_ovîrun
;

85 
sigvÆ_t
 
si_sigvÆ
;

86 } 
_timî
;

91 
__pid_t
 
si_pid
;

92 
__uid_t
 
si_uid
;

93 
sigvÆ_t
 
si_sigvÆ
;

94 } 
_π
;

99 
__pid_t
 
si_pid
;

100 
__uid_t
 
si_uid
;

101 
si_°©us
;

102 
__sigchld_˛ock_t
 
si_utime
;

103 
__sigchld_˛ock_t
 
si_°ime
;

104 } 
_sigchld
;

109 *
si_addr
;

110 
si_addr_lsb
;

111 } 
_sigÁu…
;

116 
si_b™d
;

117 
si_fd
;

118 } 
_sigpﬁl
;

123 *
_ˇŒ_addr
;

124 
_sysˇŒ
;

125 
_¨ch
;

126 } 
_sigsys
;

127 } 
_sifõlds
;

128 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

132 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

133 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

134 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

135 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

136 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

137 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

138 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

139 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

140 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

141 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

142 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

143 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

144 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

145 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

155 
SI_ASYNCNL
 = -60,

156 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

157 
SI_TKILL
 = -6,

158 
	#SI_TKILL
 
SI_TKILL


	)

159 
SI_SIGIO
,

160 
	#SI_SIGIO
 
SI_SIGIO


	)

161 
SI_ASYNCIO
,

162 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

163 
SI_MESGQ
,

164 
	#SI_MESGQ
 
SI_MESGQ


	)

165 
SI_TIMER
,

166 
	#SI_TIMER
 
SI_TIMER


	)

167 
SI_QUEUE
,

168 
	#SI_QUEUE
 
SI_QUEUE


	)

169 
SI_USER
,

170 
	#SI_USER
 
SI_USER


	)

171 
SI_KERNEL
 = 0x80

172 
	#SI_KERNEL
 
SI_KERNEL


	)

179 
ILL_ILLOPC
 = 1,

180 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

181 
ILL_ILLOPN
,

182 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

183 
ILL_ILLADR
,

184 
	#ILL_ILLADR
 
ILL_ILLADR


	)

185 
ILL_ILLTRP
,

186 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

187 
ILL_PRVOPC
,

188 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

189 
ILL_PRVREG
,

190 
	#ILL_PRVREG
 
ILL_PRVREG


	)

191 
ILL_COPROC
,

192 
	#ILL_COPROC
 
ILL_COPROC


	)

193 
ILL_BADSTK


194 
	#ILL_BADSTK
 
ILL_BADSTK


	)

200 
FPE_INTDIV
 = 1,

201 
	#FPE_INTDIV
 
FPE_INTDIV


	)

202 
FPE_INTOVF
,

203 
	#FPE_INTOVF
 
FPE_INTOVF


	)

204 
FPE_FLTDIV
,

205 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

206 
FPE_FLTOVF
,

207 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

208 
FPE_FLTUND
,

209 
	#FPE_FLTUND
 
FPE_FLTUND


	)

210 
FPE_FLTRES
,

211 
	#FPE_FLTRES
 
FPE_FLTRES


	)

212 
FPE_FLTINV
,

213 
	#FPE_FLTINV
 
FPE_FLTINV


	)

214 
FPE_FLTSUB


215 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

221 
SEGV_MAPERR
 = 1,

222 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

223 
SEGV_ACCERR


224 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

230 
BUS_ADRALN
 = 1,

231 
	#BUS_ADRALN
 
BUS_ADRALN


	)

232 
BUS_ADRERR
,

233 
	#BUS_ADRERR
 
BUS_ADRERR


	)

234 
BUS_OBJERR
,

235 
	#BUS_OBJERR
 
BUS_OBJERR


	)

236 
BUS_MCEERR_AR
,

237 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

238 
BUS_MCEERR_AO


239 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

245 
TRAP_BRKPT
 = 1,

246 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

247 
TRAP_TRACE


248 
	#TRAP_TRACE
 
TRAP_TRACE


	)

254 
CLD_EXITED
 = 1,

255 
	#CLD_EXITED
 
CLD_EXITED


	)

256 
CLD_KILLED
,

257 
	#CLD_KILLED
 
CLD_KILLED


	)

258 
CLD_DUMPED
,

259 
	#CLD_DUMPED
 
CLD_DUMPED


	)

260 
CLD_TRAPPED
,

261 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

262 
CLD_STOPPED
,

263 
	#CLD_STOPPED
 
CLD_STOPPED


	)

264 
CLD_CONTINUED


265 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

271 
POLL_IN
 = 1,

272 
	#POLL_IN
 
POLL_IN


	)

273 
POLL_OUT
,

274 
	#POLL_OUT
 
POLL_OUT


	)

275 
POLL_MSG
,

276 
	#POLL_MSG
 
POLL_MSG


	)

277 
POLL_ERR
,

278 
	#POLL_ERR
 
POLL_ERR


	)

279 
POLL_PRI
,

280 
	#POLL_PRI
 
POLL_PRI


	)

281 
POLL_HUP


282 
	#POLL_HUP
 
POLL_HUP


	)

285 #unde‡
__√ed_sigöfo_t


289 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

290 && !
deföed
 
__have_sigevít_t


291 
	#__have_sigevít_t
 1

	)

294 
	#__SIGEV_MAX_SIZE
 64

	)

295 #i‡
__WORDSIZE
 == 64

296 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

298 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

302 #i‚de‡
__have_±hªad_©å_t


303 
±hªad_©å_t
 
	t±hªad_©å_t
;

304 
	#__have_±hªad_©å_t
 1

	)

307 
	ssigevít


309 
sigvÆ_t
 
sigev_vÆue
;

310 
sigev_signo
;

311 
sigev_nŸify
;

315 
_∑d
[
__SIGEV_PAD_SIZE
];

319 
__pid_t
 
_tid
;

323 (*
_fun˘i⁄
Ë(
sigvÆ_t
);

324 
±hªad_©å_t
 *
_©åibuã
;

325 } 
_sigev_thªad
;

326 } 
_sigev_un
;

327 } 
	tsigevít_t
;

330 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

331 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

336 
SIGEV_SIGNAL
 = 0,

337 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

338 
SIGEV_NONE
,

339 
	#SIGEV_NONE
 
SIGEV_NONE


	)

340 
SIGEV_THREAD
,

341 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

343 
SIGEV_THREAD_ID
 = 4

344 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

19 #ifdef 
_SIGNAL_H


22 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

23 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

24 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

26 #ifde‡
__USE_UNIX98


27 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

32 
	#SIGHUP
 1

	)

33 
	#SIGINT
 2

	)

34 
	#SIGQUIT
 3

	)

35 
	#SIGILL
 4

	)

36 
	#SIGTRAP
 5

	)

37 
	#SIGABRT
 6

	)

38 
	#SIGIOT
 6

	)

39 
	#SIGBUS
 7

	)

40 
	#SIGFPE
 8

	)

41 
	#SIGKILL
 9

	)

42 
	#SIGUSR1
 10

	)

43 
	#SIGSEGV
 11

	)

44 
	#SIGUSR2
 12

	)

45 
	#SIGPIPE
 13

	)

46 
	#SIGALRM
 14

	)

47 
	#SIGTERM
 15

	)

48 
	#SIGSTKFLT
 16

	)

49 
	#SIGCLD
 
SIGCHLD


	)

50 
	#SIGCHLD
 17

	)

51 
	#SIGCONT
 18

	)

52 
	#SIGSTOP
 19

	)

53 
	#SIGTSTP
 20

	)

54 
	#SIGTTIN
 21

	)

55 
	#SIGTTOU
 22

	)

56 
	#SIGURG
 23

	)

57 
	#SIGXCPU
 24

	)

58 
	#SIGXFSZ
 25

	)

59 
	#SIGVTALRM
 26

	)

60 
	#SIGPROF
 27

	)

61 
	#SIGWINCH
 28

	)

62 
	#SIGPOLL
 
SIGIO


	)

63 
	#SIGIO
 29

	)

64 
	#SIGPWR
 30

	)

65 
	#SIGSYS
 31

	)

66 
	#SIGUNUSED
 31

	)

68 
	#_NSIG
 65

	)

71 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

72 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

76 
	#__SIGRTMIN
 32

	)

77 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

19 #i‚de‡
_SIGNAL_H


25 
	ssig°ack


27 *
	mss_•
;

28 
	mss_⁄°ack
;

35 
	mSS_ONSTACK
 = 1,

36 
	#SS_ONSTACK
 
SS_ONSTACK


	)

37 
	mSS_DISABLE


38 
	#SS_DISABLE
 
SS_DISABLE


	)

42 
	#MINSIGSTKSZ
 2048

	)

45 
	#SIGSTKSZ
 8192

	)

49 
	ssigÆt°ack


51 *
	mss_•
;

52 
	mss_Êags
;

53 
size_t
 
	mss_size
;

54 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


30 
	$±hªad_sigmask
 (
__how
,

31 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

32 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

35 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

37 #ifde‡
__USE_GNU


39 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

40 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_CAN
 29

	)

72 
	#PF_TIPC
 30

	)

73 
	#PF_BLUETOOTH
 31

	)

74 
	#PF_IUCV
 32

	)

75 
	#PF_RXRPC
 33

	)

76 
	#PF_ISDN
 34

	)

77 
	#PF_PHONET
 35

	)

78 
	#PF_IEEE802154
 36

	)

79 
	#PF_CAIF
 37

	)

80 
	#PF_ALG
 38

	)

81 
	#PF_NFC
 39

	)

82 
	#PF_VSOCK
 40

	)

83 
	#PF_MAX
 41

	)

86 
	#AF_UNSPEC
 
PF_UNSPEC


	)

87 
	#AF_LOCAL
 
PF_LOCAL


	)

88 
	#AF_UNIX
 
PF_UNIX


	)

89 
	#AF_FILE
 
PF_FILE


	)

90 
	#AF_INET
 
PF_INET


	)

91 
	#AF_AX25
 
PF_AX25


	)

92 
	#AF_IPX
 
PF_IPX


	)

93 
	#AF_APPLETALK
 
PF_APPLETALK


	)

94 
	#AF_NETROM
 
PF_NETROM


	)

95 
	#AF_BRIDGE
 
PF_BRIDGE


	)

96 
	#AF_ATMPVC
 
PF_ATMPVC


	)

97 
	#AF_X25
 
PF_X25


	)

98 
	#AF_INET6
 
PF_INET6


	)

99 
	#AF_ROSE
 
PF_ROSE


	)

100 
	#AF_DEC√t
 
PF_DEC√t


	)

101 
	#AF_NETBEUI
 
PF_NETBEUI


	)

102 
	#AF_SECURITY
 
PF_SECURITY


	)

103 
	#AF_KEY
 
PF_KEY


	)

104 
	#AF_NETLINK
 
PF_NETLINK


	)

105 
	#AF_ROUTE
 
PF_ROUTE


	)

106 
	#AF_PACKET
 
PF_PACKET


	)

107 
	#AF_ASH
 
PF_ASH


	)

108 
	#AF_ECONET
 
PF_ECONET


	)

109 
	#AF_ATMSVC
 
PF_ATMSVC


	)

110 
	#AF_RDS
 
PF_RDS


	)

111 
	#AF_SNA
 
PF_SNA


	)

112 
	#AF_IRDA
 
PF_IRDA


	)

113 
	#AF_PPPOX
 
PF_PPPOX


	)

114 
	#AF_WANPIPE
 
PF_WANPIPE


	)

115 
	#AF_LLC
 
PF_LLC


	)

116 
	#AF_CAN
 
PF_CAN


	)

117 
	#AF_TIPC
 
PF_TIPC


	)

118 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

119 
	#AF_IUCV
 
PF_IUCV


	)

120 
	#AF_RXRPC
 
PF_RXRPC


	)

121 
	#AF_ISDN
 
PF_ISDN


	)

122 
	#AF_PHONET
 
PF_PHONET


	)

123 
	#AF_IEEE802154
 
PF_IEEE802154


	)

124 
	#AF_CAIF
 
PF_CAIF


	)

125 
	#AF_ALG
 
PF_ALG


	)

126 
	#AF_NFC
 
PF_NFC


	)

127 
	#AF_VSOCK
 
PF_VSOCK


	)

128 
	#AF_MAX
 
PF_MAX


	)

134 
	#SOL_RAW
 255

	)

135 
	#SOL_DECNET
 261

	)

136 
	#SOL_X25
 262

	)

137 
	#SOL_PACKET
 263

	)

138 
	#SOL_ATM
 264

	)

139 
	#SOL_AAL
 265

	)

140 
	#SOL_IRDA
 266

	)

143 
	#SOMAXCONN
 128

	)

146 
	~<bôs/sockaddr.h
>

149 
	ssockaddr


151 
__SOCKADDR_COMMON
 (
ß_
);

152 
	mß_d©a
[14];

158 
	#__ss_Æig¡y≥
 

	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000,

209 
	#MSG_MORE
 
MSG_MORE


	)

210 
	mMSG_WAITFORONE
 = 0x10000,

211 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

212 
	mMSG_FASTOPEN
 = 0x20000000,

213 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

215 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

218 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

224 
	smsghdr


226 *
	mmsg_«me
;

227 
sockÀn_t
 
	mmsg_«mñí
;

229 
iovec
 *
	mmsg_iov
;

230 
size_t
 
	mmsg_iovÀn
;

232 *
	mmsg_c⁄åﬁ
;

233 
size_t
 
	mmsg_c⁄åﬁÀn
;

238 
	mmsg_Êags
;

242 
	scmsghdr


244 
size_t
 
	mcmsg_Àn
;

249 
	mcmsg_Àvñ
;

250 
	mcmsg_ty≥
;

251 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

252 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

257 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

258 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

260 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

262 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

263 
	#CMSG_FIRSTHDR
(
mhdr
) \

264 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

265 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

266 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

267 & (
size_t
Ë~( (size_tË- 1))

	)

268 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

269 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

270 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

272 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

273 
cmsghdr
 *
__cmsg
Ë
__THROW
;

274 #ifde‡
__USE_EXTERN_INLINES


275 #i‚de‡
_EXTERN_INLINE


276 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

278 
_EXTERN_INLINE
 
cmsghdr
 *

279 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

281 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

283  (
cmsghdr
 *) 0;

285 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

286 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

287 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


288 + 
__mhdr
->
msg_c⁄åﬁÀn
)

289 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

290 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

292  (
cmsghdr
 *) 0;

293  
__cmsg
;

294 
	}
}

301 
	mSCM_RIGHTS
 = 0x01

302 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

303 #ifde‡
__USE_GNU


304 , 
	mSCM_CREDENTIALS
 = 0x02

305 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

309 #ifde‡
__USE_GNU


311 
	su¸ed


313 
pid_t
 
	mpid
;

314 
uid_t
 
	muid
;

315 
gid_t
 
	mgid
;

320 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


321 #i‚de‡
FIOGETOWN


322 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

324 #i‚de‡
FIOSETOWN


325 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

327 #i‚de‡
SIOCATMARK


328 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

330 #i‚de‡
SIOCGPGRP


331 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

333 #i‚de‡
SIOCGSTAMP


334 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

336 #i‚de‡
SIOCGSTAMPNS


337 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

339 #i‚de‡
SIOCSPGRP


340 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

345 
	~<asm/sockë.h
>

347 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


348 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


349 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


350 #unde‡
FIOGETOWN


352 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


353 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


354 #unde‡
FIOSETOWN


356 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


357 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


358 #unde‡
SIOCATMARK


360 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


361 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


362 #unde‡
SIOCGPGRP


364 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


365 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


366 #unde‡
SIOCGSTAMP


368 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


369 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


370 #unde‡
SIOCGSTAMPNS


372 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


373 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


374 #unde‡
SIOCSPGRP


379 
	slögî


381 
	ml_⁄off
;

382 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statfs.h

18 #i‚de‡
_SYS_STATFS_H


22 
	~<bôs/ty≥s.h
>

24 
	s°©fs


26 
__fsw‹d_t
 
	mf_ty≥
;

27 
__fsw‹d_t
 
	mf_bsize
;

28 #i‚de‡
__USE_FILE_OFFSET64


29 
__fsblk˙t_t
 
	mf_blocks
;

30 
__fsblk˙t_t
 
	mf_b‰ì
;

31 
__fsblk˙t_t
 
	mf_bavaû
;

32 
__fsfû˙t_t
 
	mf_fûes
;

33 
__fsfû˙t_t
 
	mf_f‰ì
;

35 
__fsblk˙t64_t
 
	mf_blocks
;

36 
__fsblk˙t64_t
 
	mf_b‰ì
;

37 
__fsblk˙t64_t
 
	mf_bavaû
;

38 
__fsfû˙t64_t
 
	mf_fûes
;

39 
__fsfû˙t64_t
 
	mf_f‰ì
;

41 
__fsid_t
 
	mf_fsid
;

42 
__fsw‹d_t
 
	mf_«mñí
;

43 
__fsw‹d_t
 
	mf_‰size
;

44 
__fsw‹d_t
 
	mf_Êags
;

45 
__fsw‹d_t
 
	mf_•¨e
[4];

48 #ifde‡
__USE_LARGEFILE64


49 
	s°©fs64


51 
__fsw‹d_t
 
	mf_ty≥
;

52 
__fsw‹d_t
 
	mf_bsize
;

53 
__fsblk˙t64_t
 
	mf_blocks
;

54 
__fsblk˙t64_t
 
	mf_b‰ì
;

55 
__fsblk˙t64_t
 
	mf_bavaû
;

56 
__fsfû˙t64_t
 
	mf_fûes
;

57 
__fsfû˙t64_t
 
	mf_f‰ì
;

58 
__fsid_t
 
	mf_fsid
;

59 
__fsw‹d_t
 
	mf_«mñí
;

60 
__fsw‹d_t
 
	mf_‰size
;

61 
__fsw‹d_t
 
	mf_Êags
;

62 
__fsw‹d_t
 
	mf_•¨e
[4];

67 
	#_STATFS_F_NAMELEN


	)

68 
	#_STATFS_F_FRSIZE


	)

69 
	#_STATFS_F_FLAGS


	)

	@/usr/include/bits/statvfs.h

18 #i‚de‡
_SYS_STATVFS_H


22 
	~<bôs/ty≥s.h
>

24 #i‡(
__WORDSIZE
 == 32 \

25 && (!
deföed
 
	g__SYSCALL_WORDSIZE
 || __SYSCALL_WORDSIZE == 32))

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
f_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sig«l.h
>

26 
	~<bôs/sigc⁄ãxt.h
>

28 #ifde‡
__x86_64__


31 
__exãnsi⁄__
 
	tgªg_t
;

34 
	#NGREG
 23

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_R8
 = 0,

44 
	#REG_R8
 
REG_R8


	)

45 
	mREG_R9
,

46 
	#REG_R9
 
REG_R9


	)

47 
	mREG_R10
,

48 
	#REG_R10
 
REG_R10


	)

49 
	mREG_R11
,

50 
	#REG_R11
 
REG_R11


	)

51 
	mREG_R12
,

52 
	#REG_R12
 
REG_R12


	)

53 
	mREG_R13
,

54 
	#REG_R13
 
REG_R13


	)

55 
	mREG_R14
,

56 
	#REG_R14
 
REG_R14


	)

57 
	mREG_R15
,

58 
	#REG_R15
 
REG_R15


	)

59 
	mREG_RDI
,

60 
	#REG_RDI
 
REG_RDI


	)

61 
	mREG_RSI
,

62 
	#REG_RSI
 
REG_RSI


	)

63 
	mREG_RBP
,

64 
	#REG_RBP
 
REG_RBP


	)

65 
	mREG_RBX
,

66 
	#REG_RBX
 
REG_RBX


	)

67 
	mREG_RDX
,

68 
	#REG_RDX
 
REG_RDX


	)

69 
	mREG_RAX
,

70 
	#REG_RAX
 
REG_RAX


	)

71 
	mREG_RCX
,

72 
	#REG_RCX
 
REG_RCX


	)

73 
	mREG_RSP
,

74 
	#REG_RSP
 
REG_RSP


	)

75 
	mREG_RIP
,

76 
	#REG_RIP
 
REG_RIP


	)

77 
	mREG_EFL
,

78 
	#REG_EFL
 
REG_EFL


	)

79 
	mREG_CSGSFS
,

80 
	#REG_CSGSFS
 
REG_CSGSFS


	)

81 
	mREG_ERR
,

82 
	#REG_ERR
 
REG_ERR


	)

83 
	mREG_TRAPNO
,

84 
	#REG_TRAPNO
 
REG_TRAPNO


	)

85 
	mREG_OLDMASK
,

86 
	#REG_OLDMASK
 
REG_OLDMASK


	)

87 
	mREG_CR2


88 
	#REG_CR2
 
REG_CR2


	)

92 
	s_libc_Âxªg


94 
	msignifiˇnd
[4];

95 
	mexp⁄ít
;

96 
	m∑ddög
[3];

99 
	s_libc_xmmªg


101 
__uöt32_t
 
	mñemít
[4];

104 
	s_libc_Â°©e


107 
__uöt16_t
 
	mcwd
;

108 
__uöt16_t
 
	mswd
;

109 
__uöt16_t
 
	m·w
;

110 
__uöt16_t
 
	mf›
;

111 
__uöt64_t
 
	mrù
;

112 
__uöt64_t
 
	mrdp
;

113 
__uöt32_t
 
	mmxc§
;

114 
__uöt32_t
 
	mmx¸_mask
;

115 
_libc_Âxªg
 
	m_°
[8];

116 
_libc_xmmªg
 
	m_xmm
[16];

117 
__uöt32_t
 
	m∑ddög
[24];

121 
_libc_Â°©e
 *
	tÂªg£t_t
;

126 
gªg£t_t
 
	mgªgs
;

128 
Âªg£t_t
 
	mÂªgs
;

129 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

130 } 
	tmc⁄ãxt_t
;

133 
	suc⁄ãxt


135 
	muc_Êags
;

136 
uc⁄ãxt
 *
	muc_lök
;

137 
°ack_t
 
	muc_°ack
;

138 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

139 
__sig£t_t
 
	muc_sigmask
;

140 
_libc_Â°©e
 
	m__Âªgs_mem
;

141 } 
	tuc⁄ãxt_t
;

146 
	tgªg_t
;

149 
	#NGREG
 19

	)

152 
gªg_t
 
	tgªg£t_t
[
NGREG
];

154 #ifde‡
__USE_GNU


158 
	mREG_GS
 = 0,

159 
	#REG_GS
 
REG_GS


	)

160 
	mREG_FS
,

161 
	#REG_FS
 
REG_FS


	)

162 
	mREG_ES
,

163 
	#REG_ES
 
REG_ES


	)

164 
	mREG_DS
,

165 
	#REG_DS
 
REG_DS


	)

166 
	mREG_EDI
,

167 
	#REG_EDI
 
REG_EDI


	)

168 
	mREG_ESI
,

169 
	#REG_ESI
 
REG_ESI


	)

170 
	mREG_EBP
,

171 
	#REG_EBP
 
REG_EBP


	)

172 
	mREG_ESP
,

173 
	#REG_ESP
 
REG_ESP


	)

174 
	mREG_EBX
,

175 
	#REG_EBX
 
REG_EBX


	)

176 
	mREG_EDX
,

177 
	#REG_EDX
 
REG_EDX


	)

178 
	mREG_ECX
,

179 
	#REG_ECX
 
REG_ECX


	)

180 
	mREG_EAX
,

181 
	#REG_EAX
 
REG_EAX


	)

182 
	mREG_TRAPNO
,

183 
	#REG_TRAPNO
 
REG_TRAPNO


	)

184 
	mREG_ERR
,

185 
	#REG_ERR
 
REG_ERR


	)

186 
	mREG_EIP
,

187 
	#REG_EIP
 
REG_EIP


	)

188 
	mREG_CS
,

189 
	#REG_CS
 
REG_CS


	)

190 
	mREG_EFL
,

191 
	#REG_EFL
 
REG_EFL


	)

192 
	mREG_UESP
,

193 
	#REG_UESP
 
REG_UESP


	)

194 
	mREG_SS


195 
	#REG_SS
 
REG_SS


	)

200 
	s_libc_Âªg


202 
	msignifiˇnd
[4];

203 
	mexp⁄ít
;

206 
	s_libc_Â°©e


208 
	mcw
;

209 
	msw
;

210 
	mèg
;

211 
	mùoff
;

212 
	mcs£l
;

213 
	md©aoff
;

214 
	md©a£l
;

215 
_libc_Âªg
 
	m_°
[8];

216 
	m°©us
;

220 
_libc_Â°©e
 *
	tÂªg£t_t
;

225 
gªg£t_t
 
	mgªgs
;

228 
Âªg£t_t
 
	mÂªgs
;

229 
	mﬁdmask
;

230 
	m¸2
;

231 } 
	tmc⁄ãxt_t
;

234 
	suc⁄ãxt


236 
	muc_Êags
;

237 
uc⁄ãxt
 *
	muc_lök
;

238 
°ack_t
 
	muc_°ack
;

239 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

240 
__sig£t_t
 
	muc_sigmask
;

241 
_libc_Â°©e
 
	m__Âªgs_mem
;

242 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/wait.h

22 #i‚def 
_SYS_WAIT_H


23 
	#_SYS_WAIT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<sig«l.h
>

32 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

35 
	~<bôs/waôÊags.h
>

37 #ifdef 
__USE_BSD


42 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


43 
	#__WAIT_INT
(
°©us
) \

44 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

45 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

47 
	#__WAIT_INT
(
°©us
Ë(*(c⁄° *Ë&(°©us))

	)

55 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


56 
	#__WAIT_STATUS
 *

	)

57 
	#__WAIT_STATUS_DEFN
 *

	)

62 
waô
 *
	m__u±r
;

63 *
	m__ùå
;

64 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

71 
	#__WAIT_STATUS
 *

	)

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	~<bôs/waô°©us.h
>

79 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

80 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

81 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

82 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

85 #ifde‡
__WIFCONTINUED


86 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifdef 
__USE_BSD


91 
	#WCOREFLAG
 
__WCOREFLAG


	)

92 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

93 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

94 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

102 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

104 #ifdef 
__USE_BSD


106 
	#WAIT_ANY
 (-1Ë

	)

107 
	#WAIT_MYPGRP
 0

	)

125 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

127 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 #i‚de‡
__id_t_deföed


129 
	~<bôs/ty≥s.h
>

130 
__id_t
 
	tid_t
;

131 
	#__id_t_deföed


	)

134 
	#__√ed_sigöfo_t


	)

135 
	~<bôs/sigöfo.h
>

148 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

149 
__›ti⁄s
);

152 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


155 
	grußge
;

162 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

163 
rußge
 * 
__ußge
Ë
__THROWNL
;

166 #ifde‡
__USE_BSD


168 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

169 
rußge
 *
__ußge
Ë
__THROWNL
;

173 
__END_DECLS


	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_BSD


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_BSD


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_BSD


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_BSD


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 020200000

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

126 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

127 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

130 #ifde‡
__USE_GNU


131 
	#O_DIRECT
 
__O_DIRECT


	)

132 
	#O_NOATIME
 
__O_NOATIME


	)

133 
	#O_PATH
 
__O_PATH


	)

134 
	#O_TMPFILE
 
__O_TMPFILE


	)

140 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


141 
	#O_DSYNC
 
__O_DSYNC


	)

142 #i‡
deföed
 
__O_RSYNC


143 
	#O_RSYNC
 
__O_RSYNC


	)

145 
	#O_RSYNC
 
O_SYNC


	)

150 
	#F_DUPFD
 0

	)

151 
	#F_GETFD
 1

	)

152 
	#F_SETFD
 2

	)

153 
	#F_GETFL
 3

	)

154 
	#F_SETFL
 4

	)

156 #i‚de‡
__F_SETOWN


157 
	#__F_SETOWN
 8

	)

158 
	#__F_GETOWN
 9

	)

161 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


162 
	#F_SETOWN
 
__F_SETOWN


	)

163 
	#F_GETOWN
 
__F_GETOWN


	)

166 #i‚de‡
__F_SETSIG


167 
	#__F_SETSIG
 10

	)

168 
	#__F_GETSIG
 11

	)

170 #i‚de‡
__F_SETOWN_EX


171 
	#__F_SETOWN_EX
 15

	)

172 
	#__F_GETOWN_EX
 16

	)

175 #ifde‡
__USE_GNU


176 
	#F_SETSIG
 
__F_SETSIG


	)

177 
	#F_GETSIG
 
__F_GETSIG


	)

178 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

179 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

182 #ifde‡
__USE_GNU


183 
	#F_SETLEASE
 1024

	)

184 
	#F_GETLEASE
 1025

	)

185 
	#F_NOTIFY
 1026

	)

186 
	#F_SETPIPE_SZ
 1031

	)

187 
	#F_GETPIPE_SZ
 1032

	)

189 #ifde‡
__USE_XOPEN2K8


190 
	#F_DUPFD_CLOEXEC
 1030

	)

195 
	#FD_CLOEXEC
 1

	)

197 #i‚de‡
F_RDLCK


199 
	#F_RDLCK
 0

	)

200 
	#F_WRLCK
 1

	)

201 
	#F_UNLCK
 2

	)

206 #i‚de‡
F_EXLCK


207 
	#F_EXLCK
 4

	)

208 
	#F_SHLCK
 8

	)

211 #ifde‡
__USE_BSD


213 
	#LOCK_SH
 1

	)

214 
	#LOCK_EX
 2

	)

215 
	#LOCK_NB
 4

	)

217 
	#LOCK_UN
 8

	)

220 #ifde‡
__USE_GNU


221 
	#LOCK_MAND
 32

	)

222 
	#LOCK_READ
 64

	)

223 
	#LOCK_WRITE
 128

	)

224 
	#LOCK_RW
 192

	)

227 #ifde‡
__USE_GNU


229 
	#DN_ACCESS
 0x00000001

	)

230 
	#DN_MODIFY
 0x00000002

	)

231 
	#DN_CREATE
 0x00000004

	)

232 
	#DN_DELETE
 0x00000008

	)

233 
	#DN_RENAME
 0x00000010

	)

234 
	#DN_ATTRIB
 0x00000020

	)

235 
	#DN_MULTISHOT
 0x80000000

	)

239 #ifde‡
__USE_GNU


241 
	e__pid_ty≥


243 
	mF_OWNER_TID
 = 0,

244 
	mF_OWNER_PID
,

245 
	mF_OWNER_PGRP
,

246 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


250 
	sf_ow√r_ex


252 
__pid_ty≥
 
	mty≥
;

253 
__pid_t
 
	mpid
;

259 #ifdef 
__USE_BSD


260 
	#FAPPEND
 
O_APPEND


	)

261 
	#FFSYNC
 
O_FSYNC


	)

262 
	#FASYNC
 
O_ASYNC


	)

263 
	#FNONBLOCK
 
O_NONBLOCK


	)

264 
	#FNDELAY
 
O_NDELAY


	)

267 #i‚de‡
__POSIX_FADV_DONTNEED


268 
	#__POSIX_FADV_DONTNEED
 4

	)

269 
	#__POSIX_FADV_NOREUSE
 5

	)

272 #ifde‡
__USE_XOPEN2K


273 
	#POSIX_FADV_NORMAL
 0

	)

274 
	#POSIX_FADV_RANDOM
 1

	)

275 
	#POSIX_FADV_SEQUENTIAL
 2

	)

276 
	#POSIX_FADV_WILLNEED
 3

	)

277 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

278 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

282 #ifde‡
__USE_GNU


284 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

287 
	#SYNC_FILE_RANGE_WRITE
 2

	)

290 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

295 
	#SPLICE_F_MOVE
 1

	)

296 
	#SPLICE_F_NONBLOCK
 2

	)

299 
	#SPLICE_F_MORE
 4

	)

300 
	#SPLICE_F_GIFT
 8

	)

304 
	#FALLOC_FL_KEEP_SIZE
 1

	)

307 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

311 
	sfûe_h™dÀ


313 
	mh™dÀ_byãs
;

314 
	mh™dÀ_ty≥
;

316 
	mf_h™dÀ
[0];

320 
	#MAX_HANDLE_SZ
 128

	)

324 #ifde‡
__USE_ATFILE


325 
	#AT_FDCWD
 -100

	)

328 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

329 
	#AT_REMOVEDIR
 0x200

	)

331 
	#AT_SYMLINK_FOLLOW
 0x400

	)

332 #ifde‡
__USE_GNU


333 
	#AT_NO_AUTOMOUNT
 0x800

	)

335 
	#AT_EMPTY_PATH
 0x1000

	)

337 
	#AT_EACCESS
 0x200

	)

341 
	g__BEGIN_DECLS


343 #ifde‡
__USE_GNU


346 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

347 
__THROW
;

354 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

355 
__Êags
);

362 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

363 
size_t
 
__cou¡
, 
__Êags
);

369 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

370 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

371 
__Êags
);

377 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

378 
__Êags
);

384 #i‚de‡
__USE_FILE_OFFSET64


385 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

387 #ifde‡
__REDIRECT


388 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

389 
__off64_t
 
__Àn
),

390 
ÁŒoˇã64
);

392 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

397 
__off64_t
 
__Àn
);

402 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

403 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

404 
__Êags
Ë
__THROW
;

410 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

411 
__Êags
);

415 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/termios.h

19 #i‚de‡
_TERMIOS_H


23 
	tcc_t
;

24 
	t•ìd_t
;

25 
	ttcÊag_t
;

27 
	#NCCS
 32

	)

28 
	sãrmios


30 
tcÊag_t
 
	mc_iÊag
;

31 
tcÊag_t
 
	mc_oÊag
;

32 
tcÊag_t
 
	mc_cÊag
;

33 
tcÊag_t
 
	mc_lÊag
;

34 
cc_t
 
	mc_löe
;

35 
cc_t
 
	mc_cc
[
NCCS
];

36 
•ìd_t
 
	mc_i•ìd
;

37 
•ìd_t
 
	mc_o•ìd
;

38 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

39 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

43 
	#VINTR
 0

	)

44 
	#VQUIT
 1

	)

45 
	#VERASE
 2

	)

46 
	#VKILL
 3

	)

47 
	#VEOF
 4

	)

48 
	#VTIME
 5

	)

49 
	#VMIN
 6

	)

50 
	#VSWTC
 7

	)

51 
	#VSTART
 8

	)

52 
	#VSTOP
 9

	)

53 
	#VSUSP
 10

	)

54 
	#VEOL
 11

	)

55 
	#VREPRINT
 12

	)

56 
	#VDISCARD
 13

	)

57 
	#VWERASE
 14

	)

58 
	#VLNEXT
 15

	)

59 
	#VEOL2
 16

	)

62 
	#IGNBRK
 0000001

	)

63 
	#BRKINT
 0000002

	)

64 
	#IGNPAR
 0000004

	)

65 
	#PARMRK
 0000010

	)

66 
	#INPCK
 0000020

	)

67 
	#ISTRIP
 0000040

	)

68 
	#INLCR
 0000100

	)

69 
	#IGNCR
 0000200

	)

70 
	#ICRNL
 0000400

	)

71 
	#IUCLC
 0001000

	)

72 
	#IXON
 0002000

	)

73 
	#IXANY
 0004000

	)

74 
	#IXOFF
 0010000

	)

75 
	#IMAXBEL
 0020000

	)

76 
	#IUTF8
 0040000

	)

79 
	#OPOST
 0000001

	)

80 
	#OLCUC
 0000002

	)

81 
	#ONLCR
 0000004

	)

82 
	#OCRNL
 0000010

	)

83 
	#ONOCR
 0000020

	)

84 
	#ONLRET
 0000040

	)

85 
	#OFILL
 0000100

	)

86 
	#OFDEL
 0000200

	)

87 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


88 
	#NLDLY
 0000400

	)

89 
	#NL0
 0000000

	)

90 
	#NL1
 0000400

	)

91 
	#CRDLY
 0003000

	)

92 
	#CR0
 0000000

	)

93 
	#CR1
 0001000

	)

94 
	#CR2
 0002000

	)

95 
	#CR3
 0003000

	)

96 
	#TABDLY
 0014000

	)

97 
	#TAB0
 0000000

	)

98 
	#TAB1
 0004000

	)

99 
	#TAB2
 0010000

	)

100 
	#TAB3
 0014000

	)

101 
	#BSDLY
 0020000

	)

102 
	#BS0
 0000000

	)

103 
	#BS1
 0020000

	)

104 
	#FFDLY
 0100000

	)

105 
	#FF0
 0000000

	)

106 
	#FF1
 0100000

	)

109 
	#VTDLY
 0040000

	)

110 
	#VT0
 0000000

	)

111 
	#VT1
 0040000

	)

113 #ifde‡
__USE_MISC


114 
	#XTABS
 0014000

	)

118 #ifde‡
__USE_MISC


119 
	#CBAUD
 0010017

	)

121 
	#B0
 0000000

	)

122 
	#B50
 0000001

	)

123 
	#B75
 0000002

	)

124 
	#B110
 0000003

	)

125 
	#B134
 0000004

	)

126 
	#B150
 0000005

	)

127 
	#B200
 0000006

	)

128 
	#B300
 0000007

	)

129 
	#B600
 0000010

	)

130 
	#B1200
 0000011

	)

131 
	#B1800
 0000012

	)

132 
	#B2400
 0000013

	)

133 
	#B4800
 0000014

	)

134 
	#B9600
 0000015

	)

135 
	#B19200
 0000016

	)

136 
	#B38400
 0000017

	)

137 #ifde‡
__USE_MISC


138 
	#EXTA
 
B19200


	)

139 
	#EXTB
 
B38400


	)

141 
	#CSIZE
 0000060

	)

142 
	#CS5
 0000000

	)

143 
	#CS6
 0000020

	)

144 
	#CS7
 0000040

	)

145 
	#CS8
 0000060

	)

146 
	#CSTOPB
 0000100

	)

147 
	#CREAD
 0000200

	)

148 
	#PARENB
 0000400

	)

149 
	#PARODD
 0001000

	)

150 
	#HUPCL
 0002000

	)

151 
	#CLOCAL
 0004000

	)

152 #ifde‡
__USE_MISC


153 
	#CBAUDEX
 0010000

	)

155 
	#B57600
 0010001

	)

156 
	#B115200
 0010002

	)

157 
	#B230400
 0010003

	)

158 
	#B460800
 0010004

	)

159 
	#B500000
 0010005

	)

160 
	#B576000
 0010006

	)

161 
	#B921600
 0010007

	)

162 
	#B1000000
 0010010

	)

163 
	#B1152000
 0010011

	)

164 
	#B1500000
 0010012

	)

165 
	#B2000000
 0010013

	)

166 
	#B2500000
 0010014

	)

167 
	#B3000000
 0010015

	)

168 
	#B3500000
 0010016

	)

169 
	#B4000000
 0010017

	)

170 
	#__MAX_BAUD
 
B4000000


	)

171 #ifde‡
__USE_MISC


172 
	#CIBAUD
 002003600000

	)

173 
	#CMSPAR
 010000000000

	)

174 
	#CRTSCTS
 020000000000

	)

178 
	#ISIG
 0000001

	)

179 
	#ICANON
 0000002

	)

180 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


181 
	#XCASE
 0000004

	)

183 
	#ECHO
 0000010

	)

184 
	#ECHOE
 0000020

	)

185 
	#ECHOK
 0000040

	)

186 
	#ECHONL
 0000100

	)

187 
	#NOFLSH
 0000200

	)

188 
	#TOSTOP
 0000400

	)

189 #ifde‡
__USE_MISC


190 
	#ECHOCTL
 0001000

	)

191 
	#ECHOPRT
 0002000

	)

192 
	#ECHOKE
 0004000

	)

193 
	#FLUSHO
 0010000

	)

194 
	#PENDIN
 0040000

	)

196 
	#IEXTEN
 0100000

	)

197 #ifde‡
__USE_BSD


198 
	#EXTPROC
 0200000

	)

202 
	#TCOOFF
 0

	)

203 
	#TCOON
 1

	)

204 
	#TCIOFF
 2

	)

205 
	#TCION
 3

	)

208 
	#TCIFLUSH
 0

	)

209 
	#TCOFLUSH
 1

	)

210 
	#TCIOFLUSH
 2

	)

213 
	#TCSANOW
 0

	)

214 
	#TCSADRAIN
 1

	)

215 
	#TCSAFLUSH
 2

	)

218 
	#_IOT_ãrmios
 \

219 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

77 
	#TIOCGPKT
 
	`_IOR
('T', 0x38, Ë

	)

78 
	#TIOCGPTLCK
 
	`_IOR
('T', 0x39, Ë

	)

79 
	#TIOCGEXCL
 
	`_IOR
('T', 0x40, Ë

	)

81 
	#FIONCLEX
 0x5450

	)

82 
	#FIOCLEX
 0x5451

	)

83 
	#FIOASYNC
 0x5452

	)

84 
	#TIOCSERCONFIG
 0x5453

	)

85 
	#TIOCSERGWILD
 0x5454

	)

86 
	#TIOCSERSWILD
 0x5455

	)

87 
	#TIOCGLCKTRMIOS
 0x5456

	)

88 
	#TIOCSLCKTRMIOS
 0x5457

	)

89 
	#TIOCSERGSTRUCT
 0x5458

	)

90 
	#TIOCSERGETLSR
 0x5459

	)

91 
	#TIOCSERGETMULTI
 0x545A

	)

92 
	#TIOCSERSETMULTI
 0x545B

	)

94 
	#TIOCMIWAIT
 0x545C

	)

95 
	#TIOCGICOUNT
 0x545D

	)

101 #i‚de‡
FIOQSIZE


102 
	#FIOQSIZE
 0x5460

	)

106 
	#TIOCPKT_DATA
 0

	)

107 
	#TIOCPKT_FLUSHREAD
 1

	)

108 
	#TIOCPKT_FLUSHWRITE
 2

	)

109 
	#TIOCPKT_STOP
 4

	)

110 
	#TIOCPKT_START
 8

	)

111 
	#TIOCPKT_NOSTOP
 16

	)

112 
	#TIOCPKT_DOSTOP
 32

	)

113 
	#TIOCPKT_IOCTL
 64

	)

115 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

25 
	#SO_REUSEPORT
 15

	)

26 #i‚de‡
SO_PASSCRED


27 
	#SO_PASSCRED
 16

	)

28 
	#SO_PEERCRED
 17

	)

29 
	#SO_RCVLOWAT
 18

	)

30 
	#SO_SNDLOWAT
 19

	)

31 
	#SO_RCVTIMEO
 20

	)

32 
	#SO_SNDTIMEO
 21

	)

36 
	#SO_SECURITY_AUTHENTICATION
 22

	)

37 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

38 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

40 
	#SO_BINDTODEVICE
 25

	)

43 
	#SO_ATTACH_FILTER
 26

	)

44 
	#SO_DETACH_FILTER
 27

	)

45 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

68 
	#SO_WIFI_STATUS
 41

	)

69 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

70 
	#SO_PEEK_OFF
 42

	)

73 
	#SO_NOFCS
 43

	)

75 
	#SO_LOCK_FILTER
 44

	)

77 
	#SO_SELECT_ERR_QUEUE
 45

	)

79 
	#SO_BUSY_POLL
 46

	)

81 
	#SO_MAX_PACING_RATE
 47

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

27 #ifde‡
_LIBC


28 
	~<lowÀvñlock.h
>

29 
	~<és.h
>

30 
	~<±hªad-fun˘i⁄s.h
>

31 
	~<î∫o.h
>

32 
	~<gnu/›ti⁄-groups.h
>

36 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


37 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


38 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

40 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

43 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

53 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

54 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

59 #i‡
LLL_LOCK_INITIALIZER
 == 0

60 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

63 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

64 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

66 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

67 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

69 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

70 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

71 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

72 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

76 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

77 
	#__libc_lock_öô_ªcursive
(
NAME
) \

78 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

80 
	#__libc_lock_öô_ªcursive
(
NAME
) \

82 i‡(
__±hªad_muãx_öô
 !
NULL
) \

84 
±hªad_muãx©å_t
 
__©å
; \

85 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

86 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

87 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

88 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

90 } 0)

	)

94 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

95 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

97 
	#__libc_lock_föi_ªcursive
(
NAME
) \

98 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

102 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

103 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

107 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

108 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

110 #i‡
__OPTION_EGLIBC_BIG_MACROS


111 
	#__libc_lock_lock_ªcursive
(
NAME
) \

113 *
£lf
 = 
THREAD_SELF
; \

114 i‡((
NAME
).
ow√r
 !
£lf
) \

116 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

117 (
NAME
).
ow√r
 = 
£lf
; \

119 ++(
NAME
).
˙t
; \

120 } 0)

	)

122 
	#__libc_lock_lock_ªcursive
(
NAME
) \

123 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

126 
	#__libc_lock_lock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

132 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

136 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

137 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

139 #i‡
__OPTION_EGLIBC_BIG_MACROS


140 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

142 
ªsu…
 = 0; \

143 *
£lf
 = 
THREAD_SELF
; \

144 i‡((
NAME
).
ow√r
 !
£lf
) \

146 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

148 (
NAME
).
ow√r
 = 
£lf
; \

149 (
NAME
).
˙t
 = 1; \

152 
ªsu…
 = 
EBUSY
; \

155 ++(
NAME
).
˙t
; \

156 
ªsu…
; \

157 })

	)

159 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

160 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

163 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

164 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

168 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

169 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

173 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

174 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

176 #i‡
__OPTION_EGLIBC_BIG_MACROS


178 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

180 i‡(--(
NAME
).
˙t
 == 0) \

182 (
NAME
).
ow√r
 = 
NULL
; \

183 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

185 } 0)

	)

187 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

188 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

191 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

192 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

199 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

200 (*
routöe
Ë(*), *
¨g
);

201 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

202 
execuã
);

205 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

206 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

207 
_avaû
; \

208 i‡(
DOIT
) { \

209 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

210 i‡(
_avaû
) { \

211 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

212 
ARG
)); \

214 
_buf„r
.
__routöe
 = (
FCT
); \

215 
_buf„r
.
__¨g
 = (
ARG
); \

218 
_avaû
 = 0; \

219 }

	)

222 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

223 i‡(
_avaû
) { \

224 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

225 } i‡(
DOIT
) \

226 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

227 
	}

	)
}

232 #ifde‡
_LIBC


233 
	~"libc-lockP.h
"

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_¸óã_moduÀ


	)

13 
	#__°ub_Áâach


	)

14 
	#__°ub_fchÊags


	)

15 
	#__°ub_fdëach


	)

16 
	#__°ub_gë_kî√l_syms


	)

17 
	#__°ub_gëmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_nfs£rv˘l


	)

21 
	#__°ub_putmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

28 
	#__°ub_u£lib


	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 #i‚de‡
EXEC_PAGESIZE


9 
	#EXEC_PAGESIZE
 4096

	)

12 #i‚de‡
NOGROUP


13 
	#NOGROUP
 (-1)

	)

16 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LOCALES
 1

	)

34 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

35 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

36 
	#__OPTION_EGLIBC_NIS
 1

	)

37 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

38 
	#__OPTION_EGLIBC_RCMD
 1

	)

39 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

40 
	#__OPTION_EGLIBC_SPAWN
 1

	)

41 
	#__OPTION_EGLIBC_STREAMS
 1

	)

42 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

43 
	#__OPTION_EGLIBC_UTMP
 1

	)

44 
	#__OPTION_EGLIBC_UTMPX
 1

	)

45 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

46 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

47 
	#__OPTION_POSIX_REGEXP
 1

	)

48 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

49 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~<asm/posix_ty≥s_32.h
>

3 #ñi‡
deföed
(
__ILP32__
)

4 
	~<asm/posix_ty≥s_x32.h
>

6 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/linux/stddef.h

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/posix_types_32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


2 
	#_ASM_X86_POSIX_TYPES_32_H


	)

10 
	t__kî√l_mode_t
;

11 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

13 
	t__kî√l_ùc_pid_t
;

14 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

16 
	t__kî√l_uid_t
;

17 
	t__kî√l_gid_t
;

18 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

20 
	t__kî√l_ﬁd_dev_t
;

21 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

23 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


2 
	#_ASM_X86_POSIX_TYPES_64_H


	)

10 
	t__kî√l_ﬁd_uid_t
;

11 
	t__kî√l_ﬁd_gid_t
;

12 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

14 
	t__kî√l_ﬁd_dev_t
;

15 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

17 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


2 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

13 
	t__kî√l_l⁄g_t
;

14 
	t__kî√l_ul⁄g_t
;

15 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

17 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@/usr/include/asm-generic/posix_types.h

1 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


2 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

4 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__kî√l_l⁄g_t


14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

18 #i‚de‡
__kî√l_öo_t


19 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

22 #i‚de‡
__kî√l_mode_t


23 
	t__kî√l_mode_t
;

26 #i‚de‡
__kî√l_pid_t


27 
	t__kî√l_pid_t
;

30 #i‚de‡
__kî√l_ùc_pid_t


31 
	t__kî√l_ùc_pid_t
;

34 #i‚de‡
__kî√l_uid_t


35 
	t__kî√l_uid_t
;

36 
	t__kî√l_gid_t
;

39 #i‚de‡
__kî√l_su£c⁄ds_t


40 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

43 #i‚de‡
__kî√l_daddr_t


44 
	t__kî√l_daddr_t
;

47 #i‚de‡
__kî√l_uid32_t


48 
	t__kî√l_uid32_t
;

49 
	t__kî√l_gid32_t
;

52 #i‚de‡
__kî√l_ﬁd_uid_t


53 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

54 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

57 #i‚de‡
__kî√l_ﬁd_dev_t


58 
	t__kî√l_ﬁd_dev_t
;

65 #i‚de‡
__kî√l_size_t


66 #i‡
__BITS_PER_LONG
 != 64

67 
	t__kî√l_size_t
;

68 
	t__kî√l_ssize_t
;

69 
	t__kî√l_±rdiff_t
;

71 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

72 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

77 #i‚de‡
__kî√l_fsid_t


79 
	mvÆ
[2];

80 } 
	t__kî√l_fsid_t
;

86 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

87 
	t__kî√l_loff_t
;

88 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

90 
	t__kî√l_timî_t
;

91 
	t__kî√l_˛ockid_t
;

92 * 
	t__kî√l_ˇddr_t
;

93 
	t__kî√l_uid16_t
;

94 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
292
6110
MTA.h
RC.h
RCutil.c
bitmap.h
bpred.c
bpred.h
branchCorr.c
branchCorr.h
cache.c
cache.h
cache_o.c
cache_o.h
cache_update.c
cluster-opts.c
cluster-opts.h
cluster.c
cluster.h
cmt.c
cmt.h
config.h
context.c
context.h
def.h
dlite.c
dlite.h
eio.c
eio.h
endian.c
endian.h
eval.c
eval.h
eventq.c
eventq.h
flp.c
flp.h
headers.h
host.h
hotspot.c
hotspot.h
indirectjump.cpp
instManip.c
instManip.h
interconnect.c
interconnect.h
loader.c
loader.h
machine.c
machine.h
main.c
main.h
memory.c
memory.h
misc.c
misc.h
mystats.c
mystats.h
network.c
network.h
old_sim-out.c
options.c
options.h
power.c
power.h
ptrace.c
ptrace.h
range.c
range.h
regs.c
regs.h
resource.c
resource.h
sim-bpred.c
sim-cache.c
sim-cheetah.c
sim-eio.c
sim-fast.c
sim-ooo.c
sim-out_nn.c
sim-outorder.c
sim-outorder.h
sim-profile.c
sim-safe.c
sim.h
size.c
skeleton_chk.cpp
smt.h
stats.c
stats.h
store2Load.cpp
symbol.c
symbol.h
syscall.c
syscall.h
syscall_old.c
sysprobe.c
temperature.c
test.c
time.c
tokencoherence.c
tokencoherence.h
trace.c
util.c
util.h
version.h
wattch-interact.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/netinet/udp.h
/usr/include/setjmp.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/dir.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/mount.h
/usr/include/sys/param.h
/usr/include/sys/poll.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/statfs.h
/usr/include/sys/statvfs.h
/usr/include/sys/sysinfo.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/unistd.h
/usr/include/sys/utsname.h
/usr/include/sys/vfs.h
/usr/include/termio.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/wait.h
libcheetah/libcheetah.h
libexo/libexo.h
machine.def
opticalForSimplescalar/point-point.h
target-alpha-linux/ecoff.h
target-alpha-linux/elf64.h
target-alpha/ecoff.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/param.h
/usr/include/bits/poll.h
/usr/include/bits/poll2.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/statfs.h
/usr/include/bits/statvfs.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/kernel.h
/usr/include/rpc/netdb.h
/usr/include/stdint.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/sys/wait.h
/usr/include/termios.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket_type.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/termios.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/linux/sysinfo.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/asm/param.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/types.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/param.h
/usr/include/asm/sockios.h
/usr/include/asm/types.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/linux/ioctl.h
/usr/include/linux/posix_types.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/asm-generic/types.h
/usr/include/asm/ioctl.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
/usr/include/sched.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/bits/sched.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
