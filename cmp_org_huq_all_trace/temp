cache.c:	temp->input_buffer_full = 0;
cache.c:						new_event->input_buffer_full = 0;
cache.c:			event->input_buffer_full = 0;
cache.c:					new_event->input_buffer_full = 0;
cache.c:	new_event->input_buffer_full = 0;
cache.c:					new_event->input_buffer_full = 0;
cache.c:						new_event->input_buffer_full = 0;
cache.c:								new_event2->input_buffer_full = 0;
cache.c:					new_event->input_buffer_full = 0;
cache.c:					new_event->input_buffer_full = 0;
cache.c:										new_event->input_buffer_full = 0;
cache.c:												new_event2->input_buffer_full = 0;
cache.c:								event->input_buffer_full = 0;
cache.c:				new_event->input_buffer_full = 0;
cache.c:		event->input_buffer_full = 0;
cache.c:		event->input_buffer_full = 0;
cache_n.c:	temp->input_buffer_full = 0;
cache_n.c:						new_event->input_buffer_full = 0;
cache_n.c:			event->input_buffer_full = 0;
cache_n.c:					new_event->input_buffer_full = 0;
cache_n.c:	new_event->input_buffer_full = 0;
cache_n.c:					new_event->input_buffer_full = 0;
cache_n.c:						new_event->input_buffer_full = 0;
cache_n.c:								new_event2->input_buffer_full = 0;
cache_n.c:					new_event->input_buffer_full = 0;
cache_n.c:					new_event->input_buffer_full = 0;
cache_n.c:										new_event->input_buffer_full = 0;
cache_n.c:												new_event2->input_buffer_full = 0;
cache_n.c:			new_event->input_buffer_full = 0;
cache_n.c:								event->input_buffer_full = 0;
cache_n.c:				new_event->input_buffer_full = 0;
cache_n.c:		event->input_buffer_full = 0;
cache_n.c:		event->input_buffer_full = 0;
cache_o.c:	temp->input_buffer_full = 0;
cache_o.c:						new_event->input_buffer_full = 0;
cache_o.c:			event->input_buffer_full = 0;
cache_o.c:					new_event->input_buffer_full = 0;
cache_o.c:	new_event->input_buffer_full = 0;
cache_o.c:					new_event->input_buffer_full = 0;
cache_o.c:						new_event->input_buffer_full = 0;
cache_o.c:								new_event2->input_buffer_full = 0;
cache_o.c:					new_event->input_buffer_full = 0;
cache_o.c:					new_event->input_buffer_full = 0;
cache_o.c:										new_event->input_buffer_full = 0;
cache_o.c:												new_event2->input_buffer_full = 0;
cache_o.c:			new_event->input_buffer_full = 0;
cache_o.c:								event->input_buffer_full = 0;
cache_o.c:				new_event->input_buffer_full = 0;
cache_o.c:		event->input_buffer_full = 0;
cache_o.c:		event->input_buffer_full = 0;
cache_old.c:	temp->input_buffer_full = 0;
cache_old.c:						new_event->input_buffer_full = 0;
cache_old.c:			event->input_buffer_full = 0;
cache_old.c:					new_event->input_buffer_full = 0;
cache_old.c:	new_event->input_buffer_full = 0;
cache_old.c:					new_event->input_buffer_full = 0;
cache_old.c:						new_event->input_buffer_full = 0;
cache_old.c:								new_event2->input_buffer_full = 0;
cache_old.c:					new_event->input_buffer_full = 0;
cache_old.c:					new_event->input_buffer_full = 0;
cache_old.c:										new_event->input_buffer_full = 0;
cache_old.c:												new_event2->input_buffer_full = 0;
cache_old.c:			new_event->input_buffer_full = 0;
cache_old.c:								event->input_buffer_full = 0;
cache_old.c:				new_event->input_buffer_full = 0;
cache_old.c:		event->input_buffer_full = 0;
cache_old.c:		event->input_buffer_full = 0;
network.c:					event->input_buffer_full = 1;
network.c:					event->input_buffer_full = 1;
network.c:						event->input_buffer_full = 1;
network.c:							event->input_buffer_full = 1;
network.c:							event->input_buffer_full = 1;
network.c:							event->input_buffer_full = 1;
network.c:							event->input_buffer_full = 1;
network.c:	new_event2->input_buffer_full = 0;
network.c:	new_event2->input_buffer_full = 0;
old_sim-out.c:	if((event->des1*MESH_SIZE+event->des2 != event->src1*MESH_SIZE+event->src2) && (event->input_buffer_full) && (event->operation == MISS_WRITE || event->operation == MISS_READ || event->operation == WRITE_UPDATE || event->operation == MISS_IL1))
old_sim-out.c:			event->input_buffer_full = 0;
sim-ooo.c:	if((event->des1*mesh_size+event->des2 != event->src1*mesh_size+event->src2) && (event->input_buffer_full) && (event->operation == MISS_WRITE || event->operation == MISS_READ || event->operation == WRITE_UPDATE || event->operation == MISS_IL1))
sim-ooo.c:			event->input_buffer_full = 0;
sim-out_nn.c:	if((event->des1*mesh_size+event->des2 != event->src1*mesh_size+event->src2) && (event->input_buffer_full) && (event->operation == MISS_WRITE || event->operation == MISS_READ || event->operation == WRITE_UPDATE || event->operation == MISS_IL1))
sim-out_nn.c:			event->input_buffer_full = 0;
sim-outorder.c:	if((event->des1*mesh_size+event->des2 != event->src1*mesh_size+event->src2) && (event->input_buffer_full) && (event->operation == MISS_WRITE || event->operation == MISS_READ || event->operation == WRITE_UPDATE || event->operation == MISS_IL1))
sim-outorder.c:			event->input_buffer_full = 0;
sim-outorder_o.c:	if((event->des1*mesh_size+event->des2 != event->src1*mesh_size+event->src2) && (event->input_buffer_full) && (event->operation == MISS_WRITE || event->operation == MISS_READ || event->operation == WRITE_UPDATE || event->operation == MISS_IL1))
sim-outorder_o.c:			event->input_buffer_full = 0;
sim-outorder_old.c:	if((event->des1*mesh_size+event->des2 != event->src1*mesh_size+event->src2) && (event->input_buffer_full) && (event->operation == MISS_WRITE || event->operation == MISS_READ || event->operation == WRITE_UPDATE || event->operation == MISS_IL1))
sim-outorder_old.c:			event->input_buffer_full = 0;
